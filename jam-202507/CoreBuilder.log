  1449 instructions before optimizations.
    79 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:35:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    56 instructions eliminated by Jump Optimization (5 iterations).
    43 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     3 instructions eliminated by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   116 instructions eliminated by Data Flow Optimization (8 passes, 24 iterations).
     1 loops improved by Loop Hoisting.
     1 instructions eliminated by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (9 iterations).
     1 loops unrolled by Loop Unrolling.
    35 instructions eliminated by Function Inlining (9 iterations).
    20 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    12 instructions updated by JumpThreading.
    24 instructions eliminated by Unreachable Code Elimination (2 iterations).
   958 instructions after optimizations.

Pass 1: size optimization selection (cost limit 0):
  * Unroll iteration loop at CoreBuilder.mnd:230:5               size   -13, benefit     1093.5, efficiency     13.000 (-11 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    18501.3, efficiency      1.000
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    18501.3, efficiency      1.000 (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000 (-29 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000 (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000 (-4 instructions)

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000 (-5 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1652 jump *label353 always
  1653 set *tmp473 null
  1654 label *label353
-    * set *tmp476 *tmp473
-    * jump *label355 equal *tmp476 @ore-titanium
+ 1655 jump *label355 equal *tmp473 @ore-titanium
  1656 jump *label354 always
  1657 label *label355
  1658 set *tmp477 :titaniumDrillScore:positive
 
  1660 set *tmp472 *tmp477
  1661 jump *label352 always
  1662 label *label354
-    * jump *label357 equal *tmp476 @ore-copper
-    * jump *label357 equal *tmp476 @ore-lead
-    * jump *label357 equal *tmp476 @ore-scrap
-    * jump *label357 equal *tmp476 @ore-coal
+ 1663 jump *label357 equal *tmp473 @ore-copper
+ 1664 jump *label357 equal *tmp473 @ore-lead
+ 1665 jump *label357 equal *tmp473 @ore-scrap
+ 1666 jump *label357 equal *tmp473 @ore-coal
  1667 jump *label356 always
  1668 label *label357
  1669 set *tmp478 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-86 instructions):
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label44 (h:*label44)
    47 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label44) (h:*label44)
    48 label *label44
-    * set *tmp111 :buildBlockFromCfg.1*retval
    49 set :buildBlockFromCfg.1:cfg "m*.<2######"
    50 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    51 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
 
    63 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    64 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    65 label *label47
-    * set *tmp114 :buildBlockFromCfg.1*retval
    66 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    67 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    68 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
 
    94 setaddr :error*retaddr *label53 (h:*label53)
    95 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    96 label *label53
-    * set *tmp129 null
    97 jump *label52 always
    98 label *label51
-    * set *tmp129 null
    99 label *label52
   100 write @pneumatic-drill .display ".nextBlock"
   101 write @pneumatic-drill .blockBuilder ":buildBlockAt:block"
 
   127 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
   128 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
   129 label *label56
-    * set *tmp138 :buildBlockFromCfg.1*retval
   130 set :buildBlockFromCfg.1:cfg "W*-'%######"
   131 setaddr :buildBlockFromCfg.1*retaddr *label57 (h:*label57)
   132 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label57) (h:*label57)
   133 label *label57
-    * set *tmp139 :buildBlockFromCfg.1*retval
   134 set .graphiteSurplus 100
   135 set :buildBlockFromCfg:cfg "®-.}U#U####"
   136 set :buildBlockFromCfg:config processor2
 
   150 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   151 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
   152 label *label59
-    * set *tmp141 :buildBlockFromCfg.1*retval
   153 set :buildBlockFromCfg.1:cfg "(*###A<###"
   154 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   155 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   183 op lessThan *tmp145 *tmp144 300
   184 jump *label67 equal *tmp145 false
   185 jump *label65 always
-    * set *tmp146 null
   186 jump *label68 always
   187 label *label67
-    * set *tmp146 null
   188 label *label68
   189 label *label64
   190 read *tmp86 .controller ".monos"
 
   196 setaddr :buildBlockFromCfg.1*retaddr *label69 (h:*label69)
   197 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label69) (h:*label69)
   198 label *label69
-    * set *tmp148 :buildBlockFromCfg.1*retval
   199 set :buildBlockFromCfg.1:cfg "T,*%%######"
   200 setaddr :buildBlockFromCfg.1*retaddr *label70 (h:*label70)
   201 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label70) (h:*label70)
   202 label *label70
-    * set *tmp149 :buildBlockFromCfg.1*retval
   203 set :buildBlockFromCfg.1:cfg "',+_AA#####"
   204 setaddr :buildBlockFromCfg.1*retaddr *label71 (h:*label71)
   205 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label71) (h:*label71)
 
   211 setaddr :buildBlockFromCfg.1*retaddr *label72 (h:*label72)
   212 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label72) (h:*label72)
   213 label *label72
-    * set *tmp151 :buildBlockFromCfg.1*retval
   214 set :buildBlockFromCfg.1:cfg "W'*'%######"
   215 setaddr :buildBlockFromCfg.1*retaddr *label73 (h:*label73)
   216 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label73) (h:*label73)
   217 label *label73
-    * set *tmp152 :buildBlockFromCfg.1*retval
   218 set :buildBlockFromCfg.1:cfg "W&*'%######"
   219 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
   220 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label74) (h:*label74)
   221 label *label74
-    * set *tmp153 :buildBlockFromCfg.1*retval
   222 set :buildBlockFromCfg.1:cfg "o%+FK<A####"
   223 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   224 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
 
   242 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   243 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   244 label *label78
-    * set *tmp157 :buildBlockFromCfg.1*retval
   245 set :buildBlockFromCfg.1:cfg "X*''%######"
   246 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   247 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   248 label *label79
-    * set *tmp158 :buildBlockFromCfg.1*retval
   249 set :buildBlockFromCfg.1:cfg "*%ë#}####"
   250 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   251 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
 
   258 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   259 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   260 label *label81
-    * set *tmp160 :buildBlockFromCfg.1*retval
   261 setaddr :buildUnits*retaddr *label82 (h:*label82)
   262 call *label38 *invalid :buildUnits*retval (m:*label82) (h:*label82)
   263 label *label82
 
   275 setaddr :buildBlockFromCfg*retaddr *label84 (h:*label84)
   276 call *label32 *invalid :buildBlockFromCfg*retval (m:*label84) (h:*label84)
   277 label *label84
-    * set *tmp162 :buildBlockFromCfg*retval
   278 setaddr :buildUnits*retaddr *label85 (h:*label85)
   279 call *label38 *invalid :buildUnits*retval (m:*label85) (h:*label85)
   280 label *label85
 
   379 call *label37 *invalid :buildTitaniumDrill*retval (m:*label106) (h:*label106)
   380 label *label106
   381 set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * set *tmp183 null
   382 jump *label102 always
   383 label *label101
-    * set *tmp183 null
   384 label *label102
-    * set *tmp198 :buildTitaniumDrills:current
   385 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
   386 label *label99
   387 jump *label98 always
 
   389 op greaterThanEq *tmp199 :buildTitaniumDrills:count 8
   390 jump *label107 equal *tmp199 false
   391 jump *label97 always
-    * set *tmp200 null
   392 jump *label108 always
   393 label *label107
-    * set *tmp200 null
   394 label *label108
   395 label *label96
   396 jump *label95 always
 
   425 setaddr :error*retaddr *label115 (h:*label115)
   426 call *label10 *invalid :error*retval (m:*label115) (h:*label115)
   427 label *label115
-    * set *tmp210 null
   428 jump *label114 always
   429 label *label113
-    * set *tmp210 null
   430 label *label114
   431 write @laser-drill .blockBuilder ":buildBlockAt:block"
   432 read *tmp48 .oreLocator ".drillX"
 
   451 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   452 call *label31 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   453 label *label117
-    * set *tmp218 :buildRemoteBlock*retval
   454 set :buildRemoteBlock:cfg "z%-AAA##A##"
   455 read *tmp54 .oreLocator ".water2X"
   456 set :buildRemoteBlock:x *tmp54
 
   459 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   460 call *label31 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   461 label *label118
-    * set *tmp219 :buildRemoteBlock*retval
   462 set :buildRemoteBlock:cfg "o%+FK<A####"
   463 read *tmp56 .oreLocator ".generatorX"
   464 set :buildRemoteBlock:x *tmp56
 
   477 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   478 call *label31 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   479 label *label120
-    * set *tmp221 :buildRemoteBlock*retval
   480 set :buildRemoteBlock:cfg "r**#-#+####"
   481 read *tmp60 .oreLocator ".panelX"
   482 set :buildRemoteBlock:x *tmp60
 
   485 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   486 call *label31 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   487 label *label121
-    * set *tmp222 :buildRemoteBlock*retval
   488 set :buildRemoteBlock:cfg "k*/(7######"
   489 read *tmp62 .oreLocator ".batteryX"
   490 set :buildRemoteBlock:x *tmp62
 
   493 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   494 call *label31 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   495 label *label122
-    * set *tmp223 :buildRemoteBlock*retval
   496 set :buildRemoteBlock:cfg "**#######"
   497 read *tmp52 .oreLocator ".containerX"
   498 set :buildRemoteBlock:x *tmp52
 
   506 op equal *tmp225 .thoriumContainer null
   507 jump *label124 equal *tmp225 false
   508 set .thoriumContainer .thoriumDrill
-    * set *tmp226 .thoriumContainer
   509 jump *label125 always
   510 label *label124
-    * set *tmp226 null
   511 label *label125
   512 write .thoriumDrill .display ".thoriumDrill"
   513 write .thoriumContainer .display ".thoriumContainer"
 
   529 setaddr :buildBlockFromCfg*retaddr *label130 (h:*label130)
   530 call *label32 *invalid :buildBlockFromCfg*retval (m:*label130) (h:*label130)
   531 label *label130
-    * set *tmp228 :buildBlockFromCfg*retval
   532 set :buildBlockFromCfg.1:cfg "X+''%######"
   533 setaddr :buildBlockFromCfg.1*retaddr *label131 (h:*label131)
   534 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label131) (h:*label131)
   535 label *label131
-    * set *tmp229 :buildBlockFromCfg.1*retval
   536 set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"
   537 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   538 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
 
   609 op notEqual *tmp235 *tmp234 null
   610 jump *label153 equal *tmp235 false
   611 ucontrol itemDrop @air 1000
-    * set *tmp236 null
   612 jump *label154 always
   613 label *label153
-    * set *tmp236 null
   614 label *label154
   615 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   616 label *label151
 
   669 op greaterThan *tmp250 *tmp248 *tmp249
   670 jump *label166 notEqual *tmp250 false
   671 label *label168
-    * set *tmp245 null
   672 jump *label164 always
   673 label *label163
   674 label *label169
 
   679 label *label170
   680 jump *label169 always
   681 label *label171
-    * set *tmp245 null
   682 label *label164
   683 set :transportStatus:target 0
   684 set :transportStatus:item null
 
   696 setaddr :error*retaddr *label176 (h:*label176)
   697 call *label10 *invalid :error*retval (m:*label176) (h:*label176)
   698 label *label176
-    * set *tmp256 null
   699 jump *label175 always
   700 label *label174
-    * set *tmp256 null
   701 label *label175
   702 label *label173
   703 return :locateOre*retaddr
 
   727 setaddr :dropAll*retaddr *label183 (h:*label183)
   728 call *label13 *invalid :dropAll*retval (m:*label183) (h:*label183)
   729 label *label183
-    * set *tmp260 null
   730 jump *label182 always
   731 label *label181
-    * set *tmp260 null
   732 label *label182
   733 set :status3:text "Mining..."
   734 setaddr :status3*retaddr *label184 (h:*label184)
 
   744 op land *tmp265 *tmp263 *tmp264
   745 jump *label188 equal *tmp265 false
   746 jump *label187 always
-    * set *tmp266 null
   747 jump *label189 always
   748 label *label188
-    * set *tmp266 null
   749 label *label189
   750 ucontrol mine :mineOre:x :mineOre:y
   751 op greaterThan *tmp267 @second :mineOre:stop
   752 jump *label190 equal *tmp267 false
   753 jump *label187 always
-    * set *tmp268 null
   754 jump *label191 always
   755 label *label190
-    * set *tmp268 null
   756 label *label191
   757 label *label186
   758 sensor *tmp269 @unit @totalItems
 
   818 op land *tmp279 *tmp277 *tmp278
   819 jump *label204 equal *tmp279 false
   820 ucontrol itemDrop @air 1000
-    * set *tmp280 null
   821 jump *label205 always
   822 label *label204
-    * set *tmp280 null
   823 label *label205
   824 label *label202
   825 sensor *tmp281 @unit :fetchBlock:item
 
   856 setaddr :mineOre*retaddr *label211 (h:*label211)
   857 call *label17 *invalid :mineOre*retval (m:*label211) (h:*label211)
   858 label *label211
-    * set *tmp289 null
   859 jump *label210 always
   860 label *label209
-    * set *tmp289 null
   861 label *label210
   862 label *label207
   863 return :supplyBlock*retaddr
 
   893 op land *tmp295 *tmp293 *tmp294
   894 jump *label220 equal *tmp295 false
   895 ucontrol itemDrop @air 1000
-    * set *tmp296 null
   896 jump *label221 always
   897 label *label220
-    * set *tmp296 null
   898 label *label221
   899 label *label218
   900 sensor *tmp297 @unit :supplyBlockFromCore:item
 
   990 label *label227
   991 set *tmp340 null
   992 label *label228
-    * set *tmp338 *tmp340
   993 jump *label226 always
   994 label *label225
-    * set *tmp338 null
   995 label *label226
   996 jump *label229 equal .thoriumContainer false
   997 set :status1:text "Phase 2: servicing thorium drill"
 
  1009 call *label19 *invalid :fetchBlock*retval (m:*label234) (h:*label234)
  1010 label *label234
  1011 label *label231
-    * set *tmp343 null
  1012 jump *label230 always
  1013 label *label229
  1014 read *tmp86 .controller ".monos"
 
  1050 label *label245
  1051 set *tmp353 null
  1052 label *label246
-    * set *tmp350 *tmp353
  1053 jump *label244 always
  1054 label *label243
-    * set *tmp350 null
  1055 label *label244
  1056 sensor *tmp354 .core @silicon
  1057 op lessThan *tmp355 *tmp354 .targetSilicon
 
  1092 label *label256
  1093 set *tmp359 *tmp362
  1094 label *label252
-    * set *tmp356 *tmp359
  1095 jump *label250 always
  1096 label *label249
-    * set *tmp356 null
  1097 label *label250
  1098 sensor *tmp363 .battery @totalPower
  1099 op lessThan *tmp364 *tmp363 .powerTarget
 
  1121 label *label259
  1122 set *tmp365 null
  1123 label *label260
-    * set *tmp347 *tmp365
  1124 jump *label242 always
  1125 label *label241
-    * set *tmp347 null
  1126 label *label242
  1127 sensor *tmp369 .core @titanium
  1128 op lessThan *tmp370 *tmp369 .targetTitanium
 
  1259 label *label269
  1260 set *tmp379 null
  1261 label *label270
-    * set *tmp377 *tmp379
  1262 jump *label268 always
  1263 label *label267
  1264 set :status1:text "Goal 11: Fetching titanium"
 
  1270 setaddr :fetchBlock*retaddr *label298 (h:*label298)
  1271 call *label19 *invalid :fetchBlock*retval (m:*label298) (h:*label298)
  1272 label *label298
-    * set *tmp377 null
  1273 label *label268
  1274 label *label240
  1275 set *tmp345 null
  1276 label *label236
-    * set *tmp343 *tmp345
  1277 label *label230
  1278 label *label224
  1279 return :supplyBase*retaddr
 
  1349 jump *label314 equal *tmp417 false
  1350 set *tmp415 false
  1351 jump *label313 always
-    * set *tmp418 null
  1352 jump *label315 always
  1353 label *label314
-    * set *tmp418 null
  1354 label *label315
  1355 sensor *tmp419 .core @lead
  1356 op lessThan *tmp420 *tmp419 .targetLead
  1357 jump *label316 equal *tmp420 false
  1358 set *tmp415 false
  1359 jump *label313 always
-    * set *tmp421 null
  1360 jump *label317 always
  1361 label *label316
-    * set *tmp421 null
  1362 label *label317
  1363 sensor *tmp422 .core @graphite
  1364 op lessThan *tmp423 *tmp422 .targetGraphite
  1365 jump *label318 equal *tmp423 false
  1366 set *tmp415 false
  1367 jump *label313 always
-    * set *tmp424 null
  1368 jump *label319 always
  1369 label *label318
-    * set *tmp424 null
  1370 label *label319
  1371 sensor *tmp425 .core @silicon
  1372 op lessThan *tmp426 *tmp425 .targetSilicon
  1373 jump *label320 equal *tmp426 false
  1374 set *tmp415 false
  1375 jump *label313 always
-    * set *tmp427 null
  1376 jump *label321 always
  1377 label *label320
-    * set *tmp427 null
  1378 label *label321
  1379 sensor *tmp428 .core @titanium
  1380 op lessThan *tmp429 *tmp428 .targetTitanium
  1381 jump *label322 equal *tmp429 false
  1382 set *tmp415 false
  1383 jump *label313 always
-    * set *tmp430 null
  1384 jump *label323 always
  1385 label *label322
-    * set *tmp430 null
  1386 label *label323
  1387 sensor *tmp431 .core @metaglass
  1388 op lessThan *tmp432 *tmp431 .targetMetaglass
  1389 jump *label324 equal *tmp432 false
  1390 set *tmp415 false
  1391 jump *label313 always
-    * set *tmp433 null
  1392 jump *label325 always
  1393 label *label324
-    * set *tmp433 null
  1394 label *label325
  1395 sensor *tmp434 .core @thorium
  1396 op lessThan *tmp435 *tmp434 .targetThorium
  1397 jump *label326 equal *tmp435 false
  1398 set *tmp415 false
  1399 jump *label313 always
-    * set *tmp436 null
  1400 jump *label327 always
  1401 label *label326
-    * set *tmp436 null
  1402 label *label327
  1403 set *tmp415 true
  1404 jump *label313 always
 
  1478 label *label339
  1479 set :buildRemoteBlock*retval :buildBlock*retval
  1480 jump *label335 always
-    * set *tmp461 null
  1481 jump *label337 always
  1482 label *label336
-    * set *tmp461 null
  1483 label *label337
  1484 set :buildRemoteBlock*retval false
  1485 jump *label335 always
 
  1622 label *label363
  1623 set .positive :titaniumDrillScore:positive
  1624 set .negative :titaniumDrillScore:negative
-    * set *tmp483 :titaniumDrillScore*retval
  1625 op add *tmp484 :buildTitaniumDrill:y 0.5
  1626 set :titaniumDrillScore:x :buildTitaniumDrill:x
  1627 set :titaniumDrillScore:y *tmp484
 
  1632 label *label364
  1633 set .positive :titaniumDrillScore:positive
  1634 set .negative :titaniumDrillScore:negative
-    * set *tmp485 :titaniumDrillScore*retval
  1635 op add *tmp486 :buildTitaniumDrill:x 0.5
  1636 set :titaniumDrillScore:x *tmp486
  1637 set :titaniumDrillScore:y :buildTitaniumDrill:y
 
  1642 label *label365
  1643 set .positive :titaniumDrillScore:positive
  1644 set .negative :titaniumDrillScore:negative
-    * set *tmp487 :titaniumDrillScore*retval
  1645 op add *tmp488 :buildTitaniumDrill:x 0.5
  1646 op add *tmp489 :buildTitaniumDrill:y 0.5
  1647 set :titaniumDrillScore:x *tmp488
 
  1653 label *label366
  1654 set .positive :titaniumDrillScore:positive
  1655 set .negative :titaniumDrillScore:negative
-    * set *tmp490 :titaniumDrillScore*retval
  1656 op greaterThan *tmp491 .positive .negative
  1657 op greaterThanEq *tmp492 .positive 2
  1658 op land *tmp493 *tmp491 *tmp492
 
  1691 label *label367
  1692 set *tmp494 null
  1693 label *label368
-    * set *tmp480 *tmp494
  1694 jump *label360 always
  1695 label *label359
-    * set *tmp480 null
  1696 label *label360
  1697 label *label358
  1698 return :buildTitaniumDrill*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-15 instructions):
 
   985 write .titaniumDrill .flareController ":start:drill"
   986 write false .flareController ":start*finished"
   987 write 2 .flareController "@counter"
-    * set *tmp340 null
   988 jump *label228 always
   989 label *label227
-    * set *tmp340 null
   990 label *label228
   991 jump *label226 always
   992 label *label225
 
  1021 call *label18 *invalid :mineOre.1*retval (m:*label239) (h:*label239)
  1022 label *label239
  1023 label *label237
-    * set *tmp345 null
  1024 jump *label236 always
  1025 label *label235
  1026 set :supplyBase0:supplied false
 
  1042 call *label20 *invalid :supplyBlock*retval (m:*label248) (h:*label248)
  1043 label *label248
  1044 set :supplyBase0:supplied true
-    * set *tmp353 :supplyBase0:supplied
  1045 jump *label246 always
  1046 label *label245
-    * set *tmp353 null
  1047 label *label246
  1048 jump *label244 always
  1049 label *label243
 
  1064 call *label20 *invalid :supplyBlock*retval (m:*label254) (h:*label254)
  1065 label *label254
  1066 set :supplyBase0:supplied true
-    * set *tmp359 :supplyBase0:supplied
  1067 jump *label252 always
  1068 label *label251
  1069 sensor *tmp360 .smelter @sand
 
  1084 label *label255
  1085 set *tmp362 null
  1086 label *label256
-    * set *tmp359 *tmp362
  1087 label *label252
  1088 jump *label250 always
  1089 label *label249
 
  1109 label *label261
  1110 set *tmp368 null
  1111 label *label262
-    * set *tmp365 *tmp368
  1112 jump *label260 always
  1113 label *label259
-    * set *tmp365 null
  1114 label *label260
  1115 jump *label242 always
  1116 label *label241
 
  1245 label *label276
  1246 set *tmp383 *tmp386
  1247 label *label272
-    * set *tmp379 *tmp383
  1248 jump *label270 always
  1249 label *label269
-    * set *tmp379 null
  1250 label *label270
  1251 jump *label268 always
  1252 label *label267
 
  1261 label *label298
  1262 label *label268
  1263 label *label240
-    * set *tmp345 null
  1264 label *label236
  1265 label *label230
  1266 label *label224
 
  1581 label *label356
  1582 set *tmp472 null
  1583 label *label352
-    * set :titaniumDrillScore*retval *tmp472
  1584 label *label351
  1585 return :titaniumDrillScore*retaddr
  1586 end
 
  1673 label *label370
  1674 set *tmp503 null
  1675 label *label371
-    * set *tmp494 *tmp503
  1676 jump *label368 always
  1677 label *label367
-    * set *tmp494 null
  1678 label *label368
  1679 jump *label360 always
  1680 label *label359

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
  1079 call *label20 *invalid :supplyBlock*retval (m:*label258) (h:*label258)
  1080 label *label258
  1081 set :supplyBase0:supplied true
-    * set *tmp362 :supplyBase0:supplied
  1082 jump *label256 always
  1083 label *label255
-    * set *tmp362 null
  1084 label *label256
  1085 label *label252
  1086 jump *label250 always
 
  1102 call *label20 *invalid :supplyBlock*retval (m:*label264) (h:*label264)
  1103 label *label264
  1104 set :supplyBase0:supplied true
-    * set *tmp368 :supplyBase0:supplied
  1105 jump *label262 always
  1106 label *label261
-    * set *tmp368 null
  1107 label *label262
  1108 jump *label260 always
  1109 label *label259
 
  1140 setaddr :mineOre.1*retaddr *label274 (h:*label274)
  1141 call *label18 *invalid :mineOre.1*retval (m:*label274) (h:*label274)
  1142 label *label274
-    * set *tmp383 null
  1143 jump *label272 always
  1144 label *label271
  1145 sensor *tmp384 .core @silicon
 
  1238 label *label282
  1239 set *tmp386 *tmp393
  1240 label *label276
-    * set *tmp383 *tmp386
  1241 label *label272
  1242 jump *label270 always
  1243 label *label269
 
  1559 label *label355
  1560 set *tmp477 :titaniumDrillScore:positive
  1561 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp472 *tmp477
  1562 jump *label352 always
  1563 label *label354
  1564 jump *label357 equal *tmp473 @ore-copper
 
  1569 label *label357
  1570 set *tmp478 :titaniumDrillScore:negative
  1571 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp472 *tmp478
  1572 jump *label352 always
  1573 label *label356
-    * set *tmp472 null
  1574 label *label352
  1575 label *label351
  1576 return :titaniumDrillScore*retaddr
 
  1659 jump *label372 equal *tmp505 false
  1660 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1661 write :buildTitaniumDrill:count .controller ".flareTarget"
-    * set *tmp503 :buildTitaniumDrill:count
  1662 jump *label371 always
  1663 label *label370
-    * set *tmp503 null
  1664 label *label371
  1665 jump *label368 always
  1666 label *label367

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1165 setaddr :mineOre.1*retaddr *label280 (h:*label280)
  1166 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
  1167 label *label280
-    * set *tmp386 null
  1168 jump *label276 always
  1169 label *label275
  1170 sensor *tmp391 .core @copper
 
  1235 label *label286
  1236 set *tmp393 *tmp396
  1237 label *label282
-    * set *tmp386 *tmp393
  1238 label *label276
  1239 label *label272
  1240 jump *label270 always
 
  1555 jump *label355 equal *tmp473 @ore-titanium
  1556 jump *label354 always
  1557 label *label355
-    * set *tmp477 :titaniumDrillScore:positive
  1558 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1559 jump *label352 always
  1560 label *label354
 
  1564 jump *label357 equal *tmp473 @ore-coal
  1565 jump *label356 always
  1566 label *label357
-    * set *tmp478 :titaniumDrillScore:negative
  1567 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1568 jump *label352 always
  1569 label *label356

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1178 setaddr :mineOre.1*retaddr *label284 (h:*label284)
  1179 call *label18 *invalid :mineOre.1*retval (m:*label284) (h:*label284)
  1180 label *label284
-    * set *tmp393 null
  1181 jump *label282 always
  1182 label *label281
  1183 sensor *tmp394 .core @lead
 
  1232 label *label290
  1233 set *tmp396 *tmp399
  1234 label *label286
-    * set *tmp393 *tmp396
  1235 label *label282
  1236 label *label276
  1237 label *label272

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1191 setaddr :mineOre.1*retaddr *label288 (h:*label288)
  1192 call *label18 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
  1193 label *label288
-    * set *tmp396 null
  1194 jump *label286 always
  1195 label *label285
  1196 sensor *tmp397 .core @metaglass
 
  1229 label *label296
  1230 set *tmp399 null
  1231 label *label290
-    * set *tmp396 *tmp399
  1232 label *label286
  1233 label *label282
  1234 label *label276

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1204 setaddr :mineOre.1*retaddr *label292 (h:*label292)
  1205 call *label18 *invalid :mineOre.1*retval (m:*label292) (h:*label292)
  1206 label *label292
-    * set *tmp399 null
  1207 jump *label290 always
  1208 label *label289
  1209 set :status1:text "Goal 10: supplying base"
 
  1226 setaddr :mineOre.1*retaddr *label296 (h:*label296)
  1227 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
  1228 label *label296
-    * set *tmp399 null
  1229 label *label290
  1230 label *label286
  1231 label *label282

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-79 instructions):
 
    18 set .negative 0
    19 label *label39
    20 ubind @poly
-    * set *tmp105 @unit
-    * set .builder *tmp105
-    * ulocate building core false @copper .coreX .coreY *tmp107 *tmp106
-    * set .core *tmp106
+   21 set .builder @unit
+   22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label40
    24 op equal *tmp108 .core null
    25 jump *label39 notEqual *tmp108 false
 
    32 setaddr :buildBlockFromCfg.1*retaddr *label42 (h:*label42)
    33 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label42) (h:*label42)
    34 label *label42
-    * set *tmp109 :buildBlockFromCfg.1*retval
-    * set .press *tmp109
+   35 set .press :buildBlockFromCfg.1*retval
    36 set :buildBlockFromCfg.1:cfg "k*/(7######"
    37 setaddr :buildBlockFromCfg.1*retaddr *label43 (h:*label43)
    38 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label43) (h:*label43)
    39 label *label43
-    * set *tmp110 :buildBlockFromCfg.1*retval
-    * set .battery *tmp110
+   40 set .battery :buildBlockFromCfg.1*retval
    41 set :buildBlockFromCfg.1:cfg "k+/(7######"
    42 setaddr :buildBlockFromCfg.1*retaddr *label44 (h:*label44)
    43 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label44) (h:*label44)
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    47 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
    48 label *label45
-    * set *tmp112 :buildBlockFromCfg.1*retval
-    * set .generator *tmp112
+   49 set .generator :buildBlockFromCfg.1*retval
    50 set .powerTarget 400
    51 set :buildBlockFromCfg.1:cfg "%+-A<######"
    52 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    53 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
    54 label *label46
-    * set *tmp113 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp113
+   55 set .smelter :buildBlockFromCfg.1*retval
    56 set :buildBlockFromCfg.1:cfg "T+,%%######"
    57 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    58 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
 
    76 wait 1e-15
    77 read *tmp126 .oreLocator ":findDrillLocation*finished"
    78 jump *label50 equal *tmp126 false
-    * read *tmp123 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp123
-    * read *tmp124 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp124
-    * read *tmp127 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp127
+   79 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   80 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   81 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    82 op equal *tmp128 :buildFirstTitaniumDrill:result false
    83 jump *label51 equal *tmp128 false
    84 set :error:error "Cannot locate spot for titanium drill"
 
   100 wait 1e-15
   101 read *tmp135 .blockBuilder ":buildBlockAt*finished"
   102 jump *label54 equal *tmp135 false
-    * read *tmp136 .blockBuilder ":buildBlockAt*retval"
-    * set *tmp115 *tmp136
+  103 read *tmp115 .blockBuilder ":buildBlockAt*retval"
   104 jump *label48 always
   105 set *tmp115 null
   106 label *label48
 
   110 setaddr :buildBlockFromCfg.1*retaddr *label55 (h:*label55)
   111 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label55) (h:*label55)
   112 label *label55
-    * set *tmp137 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp137
+  113 set .unloader1 :buildBlockFromCfg.1*retval
   114 write .unloader1 .controller ".unloader1"
   115 set :buildBlockFromCfg.1:cfg "T),%%######"
   116 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
 
   126 setaddr :buildBlockFromCfg*retaddr *label58 (h:*label58)
   127 call *label32 *invalid :buildBlockFromCfg*retval (m:*label58) (h:*label58)
   128 label *label58
-    * set *tmp140 :buildBlockFromCfg*retval
-    * set .controller *tmp140
+  129 set .controller :buildBlockFromCfg*retval
   130 write .display .controller ".display"
   131 write .core .controller ".core"
   132 write bank1 .controller ".bank"
 
   142 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   143 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   144 label *label60
-    * set *tmp142 :buildBlockFromCfg.1*retval
-    * write *tmp142 .controller ".unloader2"
+  145 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   146 set :buildBlockFromCfg.1:cfg "'(_i#####&"
   147 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   148 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   149 label *label61
-    * set *tmp143 :buildBlockFromCfg.1*retval
-    * set :factory *tmp143
+  150 set :factory :buildBlockFromCfg.1*retval
   151 write :factory .controller ".factory"
   152 write :factory .display ".airFactory"
   153 write 1 .controller ".flareTarget"
 
   190 setaddr :buildBlockFromCfg.1*retaddr *label71 (h:*label71)
   191 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label71) (h:*label71)
   192 label *label71
-    * set *tmp150 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp150
+  193 set .kiln :buildBlockFromCfg.1*retval
   194 write .kiln .controller ".kiln"
   195 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   196 setaddr :buildBlockFromCfg.1*retaddr *label72 (h:*label72)
 
   208 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   209 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
   210 label *label75
-    * set *tmp154 :buildBlockFromCfg.1*retval
-    * write *tmp154 .controller ".generator2"
+  211 write :buildBlockFromCfg.1*retval .controller ".generator2"
   212 set :buildBlockFromCfg.1:cfg "$(.#U<###"
   213 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   214 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   215 label *label76
-    * set *tmp155 :buildBlockFromCfg.1*retval
-    * write *tmp155 .controller ".multipress"
+  216 write :buildBlockFromCfg.1*retval .controller ".multipress"
   217 set .graphiteSurplus 200
   218 set :buildBlockFromCfg.1:cfg " '%-#2#####"
   219 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   220 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   221 label *label77
-    * set *tmp156 :buildBlockFromCfg.1*retval
-    * write *tmp156 .controller ".payloadRouter"
+  222 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   223 set :buildBlockFromCfg.1:cfg "*(###A<###"
   224 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   225 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   232 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   233 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   234 label *label80
-    * set *tmp159 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp159
+  235 set :reconstructor :buildBlockFromCfg.1*retval
   236 write :reconstructor .controller ".reconstructor"
   237 write :reconstructor .display ".reconstructor"
   238 set :buildBlockFromCfg.1:cfg "l.-#U#A7###"
 
   249 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   250 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   251 label *label83
-    * set *tmp161 :buildBlockFromCfg.1*retval
-    * write *tmp161 .controller ".smelter2"
+  252 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   253 set :buildBlockFromCfg:cfg "--###A<###"
   254 set :buildBlockFromCfg:config @sand
   255 setaddr :buildBlockFromCfg*retaddr *label84 (h:*label84)
 
   301 label *label95
   302 jump *label97 equal :buildTitaniumDrills:searching false
   303 read *tmp175 .oreLocator ":findDrillLocation*finished"
-    * op equal *tmp176 *tmp175 false
-    * set :buildTitaniumDrills:searching *tmp176
+  304 op equal :buildTitaniumDrills:searching *tmp175 false
   305 label *label98
   306 read *tmp47 .oreLocator ".locations"
   307 op lessThan *tmp177 :buildTitaniumDrills:current *tmp47
   308 jump *label100 equal *tmp177 false
-    * op mul *tmp178 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp178
-    * op add *tmp179 :buildTitaniumDrills:index 1
-    * set *tmp180 *tmp179
-    * read *tmp181 bank1 *tmp180
-    * set :buildTitaniumDrills:size *tmp181
+  309 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
+  310 op add *tmp180 :buildTitaniumDrills:index 1
+  311 read :buildTitaniumDrills:size bank1 *tmp180
   312 op greaterThanEq *tmp182 :buildTitaniumDrills:size 3
   313 jump *label101 equal *tmp182 false
   314 op add *tmp184 :buildTitaniumDrills:index 2
-    * set *tmp185 *tmp184
-    * read *tmp186 bank1 *tmp185
-    * set :buildTitaniumDrills:x *tmp186
-    * op add *tmp187 :buildTitaniumDrills:index 3
-    * set *tmp188 *tmp187
-    * read *tmp189 bank1 *tmp188
-    * set :buildTitaniumDrills:y *tmp189
+  315 read :buildTitaniumDrills:x bank1 *tmp184
+  316 op add *tmp188 :buildTitaniumDrills:index 3
+  317 read :buildTitaniumDrills:y bank1 *tmp188
   318 op sub *tmp190 :buildTitaniumDrills:x 1
   319 op sub *tmp191 :buildTitaniumDrills:y 1
   320 set :buildTitaniumDrill:x *tmp190
 
   389 wait 1e-15
   390 read *tmp207 .oreLocator ":layoutThoriumDrill*finished"
   391 jump *label112 equal *tmp207 false
-    * read *tmp208 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp208
+  392 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   393 op equal *tmp209 :buildThoriumDrill:result false
   394 jump *label113 equal *tmp209 false
   395 set :error:error "Cannot locate spot for thorium drill"
 
   412 wait 1e-15
   413 read *tmp216 .blockBuilder ":buildBlockAt*finished"
   414 jump *label116 equal *tmp216 false
-    * read *tmp217 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp217
+  415 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   416 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp50 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp50
-    * read *tmp51 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp51
+  417 read :buildRemoteBlock:x .oreLocator ".water1X"
+  418 read :buildRemoteBlock:y .oreLocator ".water1Y"
   419 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   420 call *label31 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   421 label *label117
   422 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp54 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp54
-    * read *tmp55 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp55
+  423 read :buildRemoteBlock:x .oreLocator ".water2X"
+  424 read :buildRemoteBlock:y .oreLocator ".water2Y"
   425 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   426 call *label31 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   427 label *label118
   428 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read *tmp56 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp56
-    * read *tmp57 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp57
+  429 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  430 read :buildRemoteBlock:y .oreLocator ".generatorY"
   431 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   432 call *label31 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   433 label *label119
-    * set *tmp220 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp220
+  434 set .thoriumGenerator :buildRemoteBlock*retval
   435 set :buildRemoteBlock:cfg "g)'%)######"
-    * read *tmp58 .oreLocator ".nodeX"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".nodeY"
-    * set :buildRemoteBlock:y *tmp59
+  436 read :buildRemoteBlock:x .oreLocator ".nodeX"
+  437 read :buildRemoteBlock:y .oreLocator ".nodeY"
   438 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   439 call *label31 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   440 label *label120
   441 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read *tmp60 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp61
+  442 read :buildRemoteBlock:x .oreLocator ".panelX"
+  443 read :buildRemoteBlock:y .oreLocator ".panelY"
   444 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   445 call *label31 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   446 label *label121
   447 set :buildRemoteBlock:cfg "k*/(7######"
-    * read *tmp62 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp63
+  448 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  449 read :buildRemoteBlock:y .oreLocator ".batteryY"
   450 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   451 call *label31 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   452 label *label122
   453 set :buildRemoteBlock:cfg "**#######"
-    * read *tmp52 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp52
-    * read *tmp53 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp53
+  454 read :buildRemoteBlock:x .oreLocator ".containerX"
+  455 read :buildRemoteBlock:y .oreLocator ".containerY"
   456 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   457 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   458 label *label123
-    * set *tmp224 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp224
+  459 set .thoriumContainer :buildRemoteBlock*retval
   460 op equal *tmp225 .thoriumContainer null
   461 jump *label124 equal *tmp225 false
   462 set .thoriumContainer .thoriumDrill
 
   491 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   492 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   493 label *label132
-    * set *tmp230 :buildBlockFromCfg.1*retval
-    * set :multiReconstructor *tmp230
+  494 set :multiReconstructor :buildBlockFromCfg.1*retval
   495 write :multiReconstructor .controller ".multiReconstructor"
   496 write :multiReconstructor .display ".multiReconstructor"
   497 setaddr :buildUnits*retaddr *label133 (h:*label133)
 
   611 setaddr :moveToBlock*retaddr *label165 (h:*label165)
   612 call *label14 *invalid :moveToBlock*retval (m:*label165) (h:*label165)
   613 label *label165
-    * sensor *tmp246 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp246
+  614 sensor :depositItems:cap :depositItems:block @itemCapacity
   615 label *label166
   616 ucontrol itemDrop :depositItems:block 30
   617 label *label167
 
   641 return :depositItems*retaddr
   642 end
   643 label *label16
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 *tmp254
+  644 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 0
   645 op equal *tmp255 *tmp253 false
   646 jump *label174 equal *tmp255 false
   647 set :error:error "Cannot locate ore"
 
   655 return :locateOre*retaddr
   656 end
   657 label *label17
-    * op min *tmp257 :mineOre:amount 30
-    * set :mineOre:amount *tmp257
+  658 op min :mineOre:amount :mineOre:amount 30
   659 set :transportStatus:target :mineOre:amount
   660 set :transportStatus:item :mineOre:ore
   661 setaddr :transportStatus*retaddr *label178 (h:*label178)
 
   685 setaddr :status3*retaddr *label184 (h:*label184)
   686 call *label8 *invalid :status3*retval (m:*label184) (h:*label184)
   687 label *label184
-    * op add *tmp261 @second 10
-    * set :mineOre:stop *tmp261
+  688 op add :mineOre:stop @second 10
   689 label *label185
-    * sensor *tmp262 @unit @firstItem
-    * set :mineOre:item *tmp262
+  690 sensor :mineOre:item @unit @firstItem
   691 op notEqual *tmp263 :mineOre:item null
   692 op notEqual *tmp264 :mineOre:item :mineOre:ore
   693 op land *tmp265 *tmp263 *tmp264
 
   724 setaddr :status2*retaddr *label194 (h:*label194)
   725 call *label7 *invalid :status2*retval (m:*label194) (h:*label194)
   726 label *label194
-    * set *tmp271 :mineOre.1:ore
-    * set :mineOre:ore *tmp271
+  727 set :mineOre:ore :mineOre.1:ore
   728 set :mineOre:amount 30
   729 set :mineOre:block .core
   730 setaddr :mineOre*retaddr *label195 (h:*label195)
 
   735 end
   736 label *label19
   737 sensor *tmp272 :fetchBlock:block @itemCapacity
-    * op min *tmp273 *tmp272 30
-    * set :transportStatus:target *tmp273
+  738 op min :transportStatus:target *tmp272 30
   739 set :transportStatus:item :fetchBlock:item
   740 setaddr :transportStatus*retaddr *label197 (h:*label197)
   741 call *label9 *invalid :transportStatus*retval (m:*label197) (h:*label197)
 
   758 label *label200
   759 label *label201
   760 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp276 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp276
+  761 sensor :fetchBlock:unitItem @unit @firstItem
   762 op notEqual *tmp277 :fetchBlock:unitItem null
   763 op notEqual *tmp278 :fetchBlock:unitItem :fetchBlock:item
   764 op land *tmp279 *tmp277 *tmp278
 
   789 setaddr :status2*retaddr *label208 (h:*label208)
   790 call *label7 *invalid :status2*retval (m:*label208) (h:*label208)
   791 label *label208
-    * sensor *tmp285 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp285
+  792 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   793 sensor *tmp286 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp287 :supplyBlock:blockCapacity *tmp286
-    * set :supplyBlock:missing *tmp287
+  794 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp286
   795 op greaterThan *tmp288 :supplyBlock:missing 0
   796 jump *label209 equal *tmp288 false
   797 set :mineOre:ore :supplyBlock:ore
 
   808 end
   809 label *label21
   810 sensor *tmp290 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp291 *tmp290 30
-    * set :transportStatus:target *tmp291
+  811 op min :transportStatus:target *tmp290 30
   812 set :transportStatus:item :supplyBlockFromCore:item
   813 setaddr :transportStatus*retaddr *label213 (h:*label213)
   814 call *label9 *invalid :transportStatus*retval (m:*label213) (h:*label213)
 
   829 label *label216
   830 label *label217
   831 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp292 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp292
+  832 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   833 op notEqual *tmp293 :supplyBlockFromCore:unitItem null
   834 op notEqual *tmp294 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   835 op land *tmp295 *tmp293 *tmp294
 
   859 op add :unpackCfg:index :unpackCfg:index 1
   860 read *tmp302 :unpackCfg:cfg *tmp301
   861 op sub *tmp303 *tmp302 35
-    * lookup block *tmp304 *tmp303
-    * set :unpackCfg:type *tmp304
+  862 lookup block :unpackCfg:type *tmp303
   863 set *tmp305 :unpackCfg:index
   864 op add :unpackCfg:index :unpackCfg:index 1
   865 read *tmp306 :unpackCfg:cfg *tmp305
   866 op sub *tmp307 *tmp306 35
-    * op sub *tmp308 *tmp307 7
-    * set :unpackCfg:x *tmp308
+  867 op sub :unpackCfg:x *tmp307 7
   868 set *tmp309 :unpackCfg:index
   869 op add :unpackCfg:index :unpackCfg:index 1
   870 read *tmp310 :unpackCfg:cfg *tmp309
   871 op sub *tmp311 *tmp310 35
-    * op sub *tmp312 *tmp311 7
-    * set :unpackCfg:y *tmp312
+  872 op sub :unpackCfg:y *tmp311 7
   873 set *tmp313 :unpackCfg:index
   874 op add :unpackCfg:index :unpackCfg:index 1
   875 read *tmp314 :unpackCfg:cfg *tmp313
-    * op sub *tmp315 *tmp314 35
-    * set :unpackCfg:cu *tmp315
+  876 op sub :unpackCfg:cu *tmp314 35
   877 set *tmp316 :unpackCfg:index
   878 op add :unpackCfg:index :unpackCfg:index 1
   879 read *tmp317 :unpackCfg:cfg *tmp316
-    * op sub *tmp318 *tmp317 35
-    * set :unpackCfg:pb *tmp318
+  880 op sub :unpackCfg:pb *tmp317 35
   881 set *tmp319 :unpackCfg:index
   882 op add :unpackCfg:index :unpackCfg:index 1
   883 read *tmp320 :unpackCfg:cfg *tmp319
-    * op sub *tmp321 *tmp320 35
-    * set :unpackCfg:gr *tmp321
+  884 op sub :unpackCfg:gr *tmp320 35
   885 set *tmp322 :unpackCfg:index
   886 op add :unpackCfg:index :unpackCfg:index 1
   887 read *tmp323 :unpackCfg:cfg *tmp322
-    * op sub *tmp324 *tmp323 35
-    * set :unpackCfg:si *tmp324
+  888 op sub :unpackCfg:si *tmp323 35
   889 set *tmp325 :unpackCfg:index
   890 op add :unpackCfg:index :unpackCfg:index 1
   891 read *tmp326 :unpackCfg:cfg *tmp325
-    * op sub *tmp327 *tmp326 35
-    * set :unpackCfg:ti *tmp327
+  892 op sub :unpackCfg:ti *tmp326 35
   893 set *tmp328 :unpackCfg:index
   894 op add :unpackCfg:index :unpackCfg:index 1
   895 read *tmp329 :unpackCfg:cfg *tmp328
-    * op sub *tmp330 *tmp329 35
-    * set :unpackCfg:mg *tmp330
+  896 op sub :unpackCfg:mg *tmp329 35
   897 set *tmp331 :unpackCfg:index
   898 op add :unpackCfg:index :unpackCfg:index 1
   899 read *tmp332 :unpackCfg:cfg *tmp331
-    * op sub *tmp333 *tmp332 35
-    * set :unpackCfg:th *tmp333
+  900 op sub :unpackCfg:th *tmp332 35
   901 set *tmp334 :unpackCfg:index
   902 op add :unpackCfg:index :unpackCfg:index 1
   903 read *tmp335 :unpackCfg:cfg *tmp334
-    * op sub *tmp336 *tmp335 35
-    * set :unpackCfg:rotation *tmp336
+  904 op sub :unpackCfg:rotation *tmp335 35
   905 label *label223
   906 return :unpackCfg*retaddr
   907 end
 
  1047 jump *label265 equal *tmp370 false
  1048 sensor *tmp372 .core @titanium
  1049 op sub *tmp373 .targetTitanium *tmp372
-    * op min *tmp374 7 *tmp373
-    * set *tmp371 *tmp374
+ 1050 op min *tmp371 7 *tmp373
  1051 jump *label266 always
  1052 label *label265
  1053 set *tmp371 100
 
  1079 setaddr :status1*retaddr *label277 (h:*label277)
  1080 call *label6 *invalid :status1*retval (m:*label277) (h:*label277)
  1081 label *label277
-    * sensor *tmp387 .core @coal
-    * set :supplyBase0:coal *tmp387
-    * sensor *tmp388 .core @sand
-    * set :supplyBase0:sand *tmp388
+ 1082 sensor :supplyBase0:coal .core @coal
+ 1083 sensor :supplyBase0:sand .core @sand
  1084 op lessThan *tmp389 :supplyBase0:coal :supplyBase0:sand
  1085 jump *label278 equal *tmp389 false
  1086 set *tmp390 @coal
 
  1138 setaddr :status1*retaddr *label293 (h:*label293)
  1139 call *label6 *invalid :status1*retval (m:*label293) (h:*label293)
  1140 label *label293
-    * sensor *tmp400 .core @coal
-    * set :supplyBase0:coal.1 *tmp400
-    * sensor *tmp401 .core @sand
-    * set :supplyBase0:sand.1 *tmp401
+ 1141 sensor :supplyBase0:coal.1 .core @coal
+ 1142 sensor :supplyBase0:sand.1 .core @sand
  1143 op lessThanEq *tmp402 :supplyBase0:coal.1 :supplyBase0:sand.1
  1144 jump *label294 equal *tmp402 false
  1145 set *tmp403 @coal
 
  1224 write :meetTarget:thorium .display ".targetThorium"
  1225 set .targetCopper :meetTarget:copper
  1226 op add *tmp406 :meetTarget:lead .leadSurplus
-    * op add *tmp407 *tmp406 1
-    * set .targetLead *tmp407
+ 1227 op add .targetLead *tmp406 1
  1228 set .targetGraphite :meetTarget:graphite
  1229 set .targetSilicon :meetTarget:silicon
  1230 set .targetTitanium :meetTarget:titanium
 
  1337 wait 1e-15
  1338 read *tmp458 .blockBuilder ":buildBlockAt*finished"
  1339 jump *label334 equal *tmp458 false
-    * read *tmp459 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp459
+ 1340 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1341 jump *label332 always
  1342 set :buildBlock*retval null
  1343 label *label332
 
  1425 return :buildBlockFromCfg*retaddr
  1426 end
  1427 label *label33
-    * set *tmp464 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp464
+ 1428 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1429 set :buildBlockFromCfg:config null
  1430 setaddr :buildBlockFromCfg*retaddr *label344 (h:*label344)
  1431 call *label32 *invalid :buildBlockFromCfg*retval (m:*label344) (h:*label344)
 
  1464 label *label36
  1465 set :getFloor:x :titaniumDrillScore:x
  1466 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp475 *tmp474 :getFloor:floor
+ 1467 ucontrol getBlock :getFloor:x :getFloor:y 0 0 :getFloor:floor
  1468 set *tmp473 :getFloor:floor
  1469 jump *label353 always
  1470 set *tmp473 null
 
  1523 label *label364
  1524 set .positive :titaniumDrillScore:positive
  1525 set .negative :titaniumDrillScore:negative
-    * op add *tmp486 :buildTitaniumDrill:x 0.5
-    * set :titaniumDrillScore:x *tmp486
+ 1526 op add :titaniumDrillScore:x :buildTitaniumDrill:x 0.5
  1527 set :titaniumDrillScore:y :buildTitaniumDrill:y
  1528 set :titaniumDrillScore:positive .positive
  1529 set :titaniumDrillScore:negative .negative
 
  1558 wait 1e-15
  1559 read *tmp500 .blockBuilder ":buildBlockAt*finished"
  1560 jump *label369 equal *tmp500 false
-    * read *tmp501 .blockBuilder ":buildBlockAt*retval"
-    * set :buildTitaniumDrill:drill *tmp501
+ 1561 read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt*retval"
  1562 op notEqual *tmp502 :buildTitaniumDrill:drill null
  1563 jump *label370 equal *tmp502 false
  1564 write :buildTitaniumDrill:drill .flareController ":addTitaniumDrill:drill"

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   498 call *label38 *invalid :buildUnits*retval (m:*label133) (h:*label133)
   499 label *label133
   500 label *label134
-    * jump *label136 equal true false
   501 setaddr :supplyBase*retaddr *label137 (h:*label137)
   502 call *label28 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   503 label *label137

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1468 jump *label353 always
  1469 set *tmp473 null
  1470 label *label353
-    * jump *label355 equal *tmp473 @ore-titanium
-    * jump *label354 always
+ 1471 jump *label354 notEqual *tmp473 @ore-titanium
  1472 label *label355
  1473 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1474 jump *label352 always
 
  1476 jump *label357 equal *tmp473 @ore-copper
  1477 jump *label357 equal *tmp473 @ore-lead
  1478 jump *label357 equal *tmp473 @ore-scrap
-    * jump *label357 equal *tmp473 @ore-coal
-    * jump *label356 always
+ 1479 jump *label356 notEqual *tmp473 @ore-coal
  1480 label *label357
  1481 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1482 jump *label352 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-56 instructions):
 
    21 set .builder @unit
    22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label40
-    * op equal *tmp108 .core null
-    * jump *label39 notEqual *tmp108 false
+   24 jump *label39 equal .core null
    25 label *label41
    26 set .display processor1
    27 set .flareController processor3
 
    78 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    79 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    80 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp128 :buildFirstTitaniumDrill:result false
-    * jump *label51 equal *tmp128 false
+   81 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    82 set :error:error "Cannot locate spot for titanium drill"
    83 setaddr :error*retaddr *label53 (h:*label53)
    84 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
 
   164 call *label28 *invalid :supplyBase*retval (m:*label66) (h:*label66)
   165 label *label66
   166 sensor *tmp144 .battery @totalPower
-    * op lessThan *tmp145 *tmp144 300
-    * jump *label67 equal *tmp145 false
+  167 jump *label67 greaterThanEq *tmp144 300
   168 jump *label65 always
   169 jump *label68 always
   170 label *label67
   171 label *label68
   172 label *label64
   173 read *tmp86 .controller ".monos"
-    * op lessThan *tmp147 *tmp86 3
-    * jump *label63 notEqual *tmp147 false
+  174 jump *label63 lessThan *tmp86 3
   175 label *label65
   176 set .siliconSurplus 65
   177 set :buildBlockFromCfg.1:cfg ",)###A<###"
 
   256 label *label85
   257 label *label86
   258 read *tmp87 .controller ".polys"
-    * op lessThan *tmp163 *tmp87 2
-    * jump *label88 equal *tmp163 false
+  259 jump *label88 greaterThanEq *tmp87 2
   260 setaddr :supplyBase*retaddr *label89 (h:*label89)
   261 call *label28 *invalid :supplyBase*retval (m:*label89) (h:*label89)
   262 label *label89
 
   266 write 3 .controller ".flareTarget"
   267 label *label90
   268 read *tmp85 .controller ".flares"
-    * op lessThan *tmp164 *tmp85 2
-    * jump *label92 equal *tmp164 false
+  269 jump *label92 greaterThanEq *tmp85 2
   270 setaddr :supplyBase*retaddr *label93 (h:*label93)
   271 call *label28 *invalid :supplyBase*retval (m:*label93) (h:*label93)
   272 label *label93
 
   298 op equal :buildTitaniumDrills:searching *tmp175 false
   299 label *label98
   300 read *tmp47 .oreLocator ".locations"
-    * op lessThan *tmp177 :buildTitaniumDrills:current *tmp47
-    * jump *label100 equal *tmp177 false
+  301 jump *label100 greaterThanEq :buildTitaniumDrills:current *tmp47
   302 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
   303 op add *tmp180 :buildTitaniumDrills:index 1
   304 read :buildTitaniumDrills:size bank1 *tmp180
-    * op greaterThanEq *tmp182 :buildTitaniumDrills:size 3
-    * jump *label101 equal *tmp182 false
+  305 jump *label101 lessThan :buildTitaniumDrills:size 3
   306 op add *tmp184 :buildTitaniumDrills:index 2
   307 read :buildTitaniumDrills:x bank1 *tmp184
   308 op add *tmp188 :buildTitaniumDrills:index 3
 
   350 label *label99
   351 jump *label98 always
   352 label *label100
-    * op greaterThanEq *tmp199 :buildTitaniumDrills:count 8
-    * jump *label107 equal *tmp199 false
+  353 jump *label107 lessThan :buildTitaniumDrills:count 8
   354 jump *label97 always
   355 jump *label108 always
   356 label *label107
 
   381 read *tmp207 .oreLocator ":layoutThoriumDrill*finished"
   382 jump *label112 equal *tmp207 false
   383 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp209 :buildThoriumDrill:result false
-    * jump *label113 equal *tmp209 false
+  384 jump *label113 notEqual :buildThoriumDrill:result false
   385 set :error:error "Cannot locate spot for thorium drill"
   386 setaddr :error*retaddr *label115 (h:*label115)
   387 call *label10 *invalid :error*retval (m:*label115) (h:*label115)
 
   447 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   448 label *label123
   449 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp225 .thoriumContainer null
-    * jump *label124 equal *tmp225 false
+  450 jump *label124 notEqual .thoriumContainer null
   451 set .thoriumContainer .thoriumDrill
   452 jump *label125 always
   453 label *label124
 
   459 write 1 .controller ".megaTarget"
   460 label *label126
   461 read *tmp87 .controller ".polys"
-    * op lessThan *tmp227 *tmp87 6
-    * jump *label128 equal *tmp227 false
+  462 jump *label128 greaterThanEq *tmp87 6
   463 setaddr :supplyBase*retaddr *label129 (h:*label129)
   464 call *label28 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   465 label *label129
 
   529 label *label144
   530 label *label145
   531 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp231
-    * op equal *tmp232 *tmp231 false
-    * jump *label147 equal *tmp232 false
+  532 jump *label147 notEqual *tmp231 false
   533 op sub *tmp233 :moveTo:radius 0.5
   534 ucontrol approach :moveTo:x :moveTo:y *tmp233
   535 label *label146
 
   545 label *label149
   546 label *label150
   547 sensor *tmp234 @unit @firstItem
-    * op notEqual *tmp235 *tmp234 null
-    * jump *label153 equal *tmp235 false
+  548 jump *label153 equal *tmp234 null
   549 ucontrol itemDrop @air 1000
   550 jump *label154 always
   551 label *label153
 
   553 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   554 label *label151
   555 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp237
-    * op equal *tmp238 *tmp237 false
-    * jump *label150 notEqual *tmp238 false
+  556 jump *label150 equal *tmp237 false
   557 label *label152
   558 label *label148
   559 return :moveToEmpty*retaddr
 
   561 label *label13
   562 label *label156
   563 sensor *tmp239 @unit @firstItem
-    * op notEqual *tmp240 *tmp239 null
-    * jump *label158 equal *tmp240 false
+  564 jump *label158 equal *tmp239 null
   565 ucontrol itemDrop @air 1000
   566 label *label157
   567 jump *label156 always
 
   587 call *label8 *invalid :status3*retval (m:*label162) (h:*label162)
   588 label *label162
   589 sensor *tmp243 @unit @firstItem
-    * op equal *tmp244 *tmp243 :depositItems:item
-    * jump *label163 equal *tmp244 false
+  590 jump *label163 notEqual *tmp243 :depositItems:item
   591 set :moveToBlock:block :depositItems:block
   592 set :moveToBlock:radius 6
   593 setaddr :moveToBlock*retaddr *label165 (h:*label165)
 
   600 sensor *tmp247 @unit @firstItem
   601 op mul *tmp248 *tmp247 :depositItems:cap
   602 sensor *tmp249 :depositItems:block :depositItems:item
-    * op greaterThan *tmp250 *tmp248 *tmp249
-    * jump *label166 notEqual *tmp250 false
+  603 jump *label166 greaterThan *tmp248 *tmp249
   604 label *label168
   605 jump *label164 always
   606 label *label163
   607 label *label169
   608 sensor *tmp251 @unit @firstItem
-    * op notEqual *tmp252 *tmp251 null
-    * jump *label171 equal *tmp252 false
+  609 jump *label171 equal *tmp251 null
   610 ucontrol itemDrop @air 1000
   611 label *label170
   612 jump *label169 always
 
   622 end
   623 label *label16
   624 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 0
-    * op equal *tmp255 *tmp253 false
-    * jump *label174 equal *tmp255 false
+  625 jump *label174 notEqual *tmp253 false
   626 set :error:error "Cannot locate ore"
   627 setaddr :error*retaddr *label176 (h:*label176)
   628 call *label10 *invalid :error*retval (m:*label176) (h:*label176)
 
   652 call *label12 *invalid :moveToEmpty*retval (m:*label180) (h:*label180)
   653 label *label180
   654 sensor *tmp258 @unit @firstItem
-    * op notEqual *tmp259 *tmp258 :mineOre:ore
-    * jump *label181 equal *tmp259 false
+  655 jump *label181 equal *tmp258 :mineOre:ore
   656 setaddr :dropAll*retaddr *label183 (h:*label183)
   657 call *label13 *invalid :dropAll*retval (m:*label183) (h:*label183)
   658 label *label183
 
   675 label *label188
   676 label *label189
   677 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp267 @second :mineOre:stop
-    * jump *label190 equal *tmp267 false
+  678 jump *label190 lessThanEq @second :mineOre:stop
   679 jump *label187 always
   680 jump *label191 always
   681 label *label190
   682 label *label191
   683 label *label186
   684 sensor *tmp269 @unit @totalItems
-    * op lessThan *tmp270 *tmp269 :mineOre:amount
-    * jump *label185 notEqual *tmp270 false
+  685 jump *label185 lessThan *tmp269 :mineOre:amount
   686 label *label187
   687 ucontrol unbind
   688 set :depositItems:block :mineOre:block
 
   768 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   769 sensor *tmp286 :supplyBlock:block :supplyBlock:ore
   770 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp286
-    * op greaterThan *tmp288 :supplyBlock:missing 0
-    * jump *label209 equal *tmp288 false
+  771 jump *label209 lessThanEq :supplyBlock:missing 0
   772 set :mineOre:ore :supplyBlock:ore
   773 set :mineOre:amount :supplyBlock:blockCapacity
   774 set :mineOre:block :supplyBlock:block
 
   881 return :unpackCfg*retaddr
   882 end
   883 label *label28
-    * op equal *tmp337 .flareControllerStarted false
-    * jump *label225 equal *tmp337 false
+  884 jump *label225 notEqual .flareControllerStarted false
   885 read *tmp85 .controller ".flares"
-    * op greaterThan *tmp339 *tmp85 0
-    * jump *label227 equal *tmp339 false
+  886 jump *label227 lessThanEq *tmp85 0
   887 set .flareControllerStarted true
   888 write .core .flareController ":start:aCore"
   889 write .titaniumDrill .flareController ":start:drill"
 
   914 jump *label230 always
   915 label *label229
   916 read *tmp86 .controller ".monos"
-    * op greaterThan *tmp344 *tmp86 3
-    * jump *label235 equal *tmp344 false
+  917 jump *label235 lessThanEq *tmp86 3
   918 set :status1:text "Phase 1: supplying base"
   919 setaddr :status1*retaddr *label238 (h:*label238)
   920 call *label6 *invalid :status1*retval (m:*label238) (h:*label238)
 
   927 jump *label236 always
   928 label *label235
   929 set :supplyBase0:supplied false
-    * op equal *tmp346 .unloader1 null
-    * jump *label241 equal *tmp346 false
+  930 jump *label241 notEqual .unloader1 null
   931 sensor *tmp348 .core @graphite
-    * op lessThan *tmp349 *tmp348 .targetGraphite
-    * jump *label243 equal *tmp349 false
+  932 jump *label243 greaterThanEq *tmp348 .targetGraphite
   933 sensor *tmp351 .press @coal
-    * op lessThan *tmp352 *tmp351 5
-    * jump *label245 equal *tmp352 false
+  934 jump *label245 greaterThanEq *tmp351 5
   935 set :status1:text "Goal 1: graphite requirement"
   936 setaddr :status1*retaddr *label247 (h:*label247)
   937 call *label6 *invalid :status1*retval (m:*label247) (h:*label247)
 
   949 label *label243
   950 label *label244
   951 sensor *tmp354 .core @silicon
-    * op lessThan *tmp355 *tmp354 .targetSilicon
-    * jump *label249 equal *tmp355 false
+  952 jump *label249 greaterThanEq *tmp354 .targetSilicon
   953 sensor *tmp357 .smelter @coal
-    * op lessThan *tmp358 *tmp357 5
-    * jump *label251 equal *tmp358 false
+  954 jump *label251 greaterThanEq *tmp357 5
   955 set :status1:text "Goal 2: coal for silicon requirement"
   956 setaddr :status1*retaddr *label253 (h:*label253)
   957 call *label6 *invalid :status1*retval (m:*label253) (h:*label253)
 
   965 jump *label252 always
   966 label *label251
   967 sensor *tmp360 .smelter @sand
-    * op lessThan *tmp361 *tmp360 5
-    * jump *label255 equal *tmp361 false
+  968 jump *label255 greaterThanEq *tmp360 5
   969 set :status1:text "Goal 3: sand for silicon requirement"
   970 setaddr :status1*retaddr *label257 (h:*label257)
   971 call *label6 *invalid :status1*retval (m:*label257) (h:*label257)
 
   984 label *label249
   985 label *label250
   986 sensor *tmp363 .battery @totalPower
-    * op lessThan *tmp364 *tmp363 .powerTarget
-    * jump *label259 equal *tmp364 false
+  987 jump *label259 greaterThanEq *tmp363 .powerTarget
   988 sensor *tmp366 .generator @coal
-    * op lessThan *tmp367 *tmp366 2
-    * jump *label261 equal *tmp367 false
+  989 jump *label261 greaterThanEq *tmp366 2
   990 set :status1:text "Goal 4: supplying generator"
   991 setaddr :status1*retaddr *label263 (h:*label263)
   992 call *label6 *invalid :status1*retval (m:*label263) (h:*label263)
 
  1007 label *label241
  1008 label *label242
  1009 sensor *tmp369 .core @titanium
-    * op lessThan *tmp370 *tmp369 .targetTitanium
-    * jump *label265 equal *tmp370 false
+ 1010 jump *label265 greaterThanEq *tmp369 .targetTitanium
  1011 sensor *tmp372 .core @titanium
  1012 op sub *tmp373 .targetTitanium *tmp372
  1013 op min *tmp371 7 *tmp373
 
  1017 label *label266
  1018 set :supplyBase0:titaniumTrigger *tmp371
  1019 sensor *tmp375 .titaniumDrill @titanium
-    * op lessThan *tmp376 *tmp375 :supplyBase0:titaniumTrigger
-    * jump *label267 equal *tmp376 false
-    * op equal *tmp378 :supplyBase0:supplied false
-    * jump *label269 equal *tmp378 false
+ 1020 jump *label267 greaterThanEq *tmp375 :supplyBase0:titaniumTrigger
+ 1021 jump *label269 notEqual :supplyBase0:supplied false
  1022 sensor *tmp380 .battery @totalPower
  1023 op mul *tmp381 .unloader1 .powerTarget
-    * op lessThan *tmp382 *tmp380 *tmp381
-    * jump *label271 equal *tmp382 false
+ 1024 jump *label271 greaterThanEq *tmp380 *tmp381
  1025 set :status1:text "Goal 5: supplying generator"
  1026 setaddr :status1*retaddr *label273 (h:*label273)
  1027 call *label6 *invalid :status1*retval (m:*label273) (h:*label273)
 
  1033 jump *label272 always
  1034 label *label271
  1035 sensor *tmp384 .core @silicon
-    * op lessThan *tmp385 *tmp384 .targetSilicon
-    * jump *label275 equal *tmp385 false
+ 1036 jump *label275 greaterThanEq *tmp384 .targetSilicon
  1037 set :status1:text "Goal 6: silicon requirement"
  1038 setaddr :status1*retaddr *label277 (h:*label277)
  1039 call *label6 *invalid :status1*retval (m:*label277) (h:*label277)
  1040 label *label277
  1041 sensor :supplyBase0:coal .core @coal
  1042 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp389 :supplyBase0:coal :supplyBase0:sand
-    * jump *label278 equal *tmp389 false
+ 1043 jump *label278 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1044 set *tmp390 @coal
  1045 jump *label279 always
  1046 label *label278
 
  1054 jump *label276 always
  1055 label *label275
  1056 sensor *tmp391 .core @copper
-    * op lessThan *tmp392 *tmp391 .targetCopper
-    * jump *label281 equal *tmp392 false
+ 1057 jump *label281 greaterThanEq *tmp391 .targetCopper
  1058 set :status1:text "Goal 7: copper requirement"
  1059 setaddr :status1*retaddr *label283 (h:*label283)
  1060 call *label6 *invalid :status1*retval (m:*label283) (h:*label283)
 
  1066 jump *label282 always
  1067 label *label281
  1068 sensor *tmp394 .core @lead
-    * op lessThan *tmp395 *tmp394 .targetLead
-    * jump *label285 equal *tmp395 false
+ 1069 jump *label285 greaterThanEq *tmp394 .targetLead
  1070 set :status1:text "Goal 8: lead requirement"
  1071 setaddr :status1*retaddr *label287 (h:*label287)
  1072 call *label6 *invalid :status1*retval (m:*label287) (h:*label287)
 
  1078 jump *label286 always
  1079 label *label285
  1080 sensor *tmp397 .core @metaglass
-    * op lessThan *tmp398 *tmp397 .targetMetaglass
-    * jump *label289 equal *tmp398 false
+ 1081 jump *label289 greaterThanEq *tmp397 .targetMetaglass
  1082 set :status1:text "Goal 9: metaglass requirement"
  1083 setaddr :status1*retaddr *label291 (h:*label291)
  1084 call *label6 *invalid :status1*retval (m:*label291) (h:*label291)
 
  1095 label *label293
  1096 sensor :supplyBase0:coal.1 .core @coal
  1097 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp402 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label294 equal *tmp402 false
+ 1098 jump *label294 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1099 set *tmp403 @coal
  1100 jump *label295 always
  1101 label *label294
 
  1198 write *tmp414 .controller ".siliconReserve"
  1199 label *label310
  1200 sensor *tmp416 .core @copper
-    * op lessThan *tmp417 *tmp416 .targetCopper
-    * jump *label314 equal *tmp417 false
+ 1201 jump *label314 greaterThanEq *tmp416 .targetCopper
  1202 set *tmp415 false
  1203 jump *label313 always
  1204 jump *label315 always
  1205 label *label314
  1206 label *label315
  1207 sensor *tmp419 .core @lead
-    * op lessThan *tmp420 *tmp419 .targetLead
-    * jump *label316 equal *tmp420 false
+ 1208 jump *label316 greaterThanEq *tmp419 .targetLead
  1209 set *tmp415 false
  1210 jump *label313 always
  1211 jump *label317 always
  1212 label *label316
  1213 label *label317
  1214 sensor *tmp422 .core @graphite
-    * op lessThan *tmp423 *tmp422 .targetGraphite
-    * jump *label318 equal *tmp423 false
+ 1215 jump *label318 greaterThanEq *tmp422 .targetGraphite
  1216 set *tmp415 false
  1217 jump *label313 always
  1218 jump *label319 always
  1219 label *label318
  1220 label *label319
  1221 sensor *tmp425 .core @silicon
-    * op lessThan *tmp426 *tmp425 .targetSilicon
-    * jump *label320 equal *tmp426 false
+ 1222 jump *label320 greaterThanEq *tmp425 .targetSilicon
  1223 set *tmp415 false
  1224 jump *label313 always
  1225 jump *label321 always
  1226 label *label320
  1227 label *label321
  1228 sensor *tmp428 .core @titanium
-    * op lessThan *tmp429 *tmp428 .targetTitanium
-    * jump *label322 equal *tmp429 false
+ 1229 jump *label322 greaterThanEq *tmp428 .targetTitanium
  1230 set *tmp415 false
  1231 jump *label313 always
  1232 jump *label323 always
  1233 label *label322
  1234 label *label323
  1235 sensor *tmp431 .core @metaglass
-    * op lessThan *tmp432 *tmp431 .targetMetaglass
-    * jump *label324 equal *tmp432 false
+ 1236 jump *label324 greaterThanEq *tmp431 .targetMetaglass
  1237 set *tmp415 false
  1238 jump *label313 always
  1239 jump *label325 always
  1240 label *label324
  1241 label *label325
  1242 sensor *tmp434 .core @thorium
-    * op lessThan *tmp435 *tmp434 .targetThorium
-    * jump *label326 equal *tmp435 false
+ 1243 jump *label326 greaterThanEq *tmp434 .targetThorium
  1244 set *tmp415 false
  1245 jump *label313 always
  1246 jump *label327 always
 
  1250 jump *label313 always
  1251 set *tmp415 null
  1252 label *label313
-    * op equal *tmp437 *tmp415 false
-    * jump *label312 equal *tmp437 false
+ 1253 jump *label312 notEqual *tmp415 false
  1254 setaddr :supplyBase*retaddr *label328 (h:*label328)
  1255 call *label28 *invalid :supplyBase*retval (m:*label328) (h:*label328)
  1256 label *label328
 
  1290 return :buildBlock*retaddr
  1291 end
  1292 label *label31
-    * op greaterThanEq *tmp460 :buildRemoteBlock:x 0
-    * jump *label336 equal *tmp460 false
+ 1293 jump *label336 lessThan :buildRemoteBlock:x 0
  1294 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1295 setaddr :unpackCfg*retaddr *label338 (h:*label338)
  1296 call *label27 *invalid :unpackCfg*retval (m:*label338) (h:*label338)
 
  1432 return :titaniumDrillScore*retaddr
  1433 end
  1434 label *label37
-    * op lessThan *tmp479 :buildTitaniumDrill:count 8
-    * jump *label359 equal *tmp479 false
+ 1435 jump *label359 greaterThanEq :buildTitaniumDrill:count 8
  1436 set :moveTo.1:x :buildTitaniumDrill:x
  1437 set :moveTo.1:y :buildTitaniumDrill:y
  1438 set *tmp481 :moveTo.1:x
 
  1501 read *tmp500 .blockBuilder ":buildBlockAt*finished"
  1502 jump *label369 equal *tmp500 false
  1503 read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt*retval"
-    * op notEqual *tmp502 :buildTitaniumDrill:drill null
-    * jump *label370 equal *tmp502 false
+ 1504 jump *label370 equal :buildTitaniumDrill:drill null
  1505 write :buildTitaniumDrill:drill .flareController ":addTitaniumDrill:drill"
  1506 write false .flareController ":addTitaniumDrill*finished"
  1507 write 1 .flareController "@counter"

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-36 instructions):
 
    83 setaddr :error*retaddr *label53 (h:*label53)
    84 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    85 label *label53
-    * jump *label52 always
    86 label *label51
    87 label *label52
    88 write @pneumatic-drill .display ".nextBlock"
 
   165 sensor *tmp144 .battery @totalPower
   166 jump *label67 greaterThanEq *tmp144 300
   167 jump *label65 always
-    * jump *label68 always
   168 label *label67
   169 label *label68
   170 label *label64
 
   341 call *label37 *invalid :buildTitaniumDrill*retval (m:*label106) (h:*label106)
   342 label *label106
   343 set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * jump *label102 always
   344 label *label101
   345 label *label102
   346 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
   349 label *label100
   350 jump *label107 lessThan :buildTitaniumDrills:count 8
   351 jump *label97 always
-    * jump *label108 always
   352 label *label107
   353 label *label108
   354 label *label96
 
   382 setaddr :error*retaddr *label115 (h:*label115)
   383 call *label10 *invalid :error*retval (m:*label115) (h:*label115)
   384 label *label115
-    * jump *label114 always
   385 label *label113
   386 label *label114
   387 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   444 set .thoriumContainer :buildRemoteBlock*retval
   445 jump *label124 notEqual .thoriumContainer null
   446 set .thoriumContainer .thoriumDrill
-    * jump *label125 always
   447 label *label124
   448 label *label125
   449 write .thoriumDrill .display ".thoriumDrill"
 
   541 sensor *tmp234 @unit @firstItem
   542 jump *label153 equal *tmp234 null
   543 ucontrol itemDrop @air 1000
-    * jump *label154 always
   544 label *label153
   545 label *label154
   546 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   620 setaddr :error*retaddr *label176 (h:*label176)
   621 call *label10 *invalid :error*retval (m:*label176) (h:*label176)
   622 label *label176
-    * jump *label175 always
   623 label *label174
   624 label *label175
   625 label *label173
 
   648 setaddr :dropAll*retaddr *label183 (h:*label183)
   649 call *label13 *invalid :dropAll*retval (m:*label183) (h:*label183)
   650 label *label183
-    * jump *label182 always
   651 label *label181
   652 label *label182
   653 set :status3:text "Mining..."
 
   662 op land *tmp265 *tmp263 *tmp264
   663 jump *label188 equal *tmp265 false
   664 jump *label187 always
-    * jump *label189 always
   665 label *label188
   666 label *label189
   667 ucontrol mine :mineOre:x :mineOre:y
   668 jump *label190 lessThanEq @second :mineOre:stop
   669 jump *label187 always
-    * jump *label191 always
   670 label *label190
   671 label *label191
   672 label *label186
 
   729 op land *tmp279 *tmp277 *tmp278
   730 jump *label204 equal *tmp279 false
   731 ucontrol itemDrop @air 1000
-    * jump *label205 always
   732 label *label204
   733 label *label205
   734 label *label202
 
   763 setaddr :mineOre*retaddr *label211 (h:*label211)
   764 call *label17 *invalid :mineOre*retval (m:*label211) (h:*label211)
   765 label *label211
-    * jump *label210 always
   766 label *label209
   767 label *label210
   768 label *label207
 
   797 op land *tmp295 *tmp293 *tmp294
   798 jump *label220 equal *tmp295 false
   799 ucontrol itemDrop @air 1000
-    * jump *label221 always
   800 label *label220
   801 label *label221
   802 label *label218
 
   875 write .titaniumDrill .flareController ":start:drill"
   876 write false .flareController ":start*finished"
   877 write 2 .flareController "@counter"
-    * jump *label228 always
   878 label *label227
   879 label *label228
-    * jump *label226 always
   880 label *label225
   881 label *label226
   882 jump *label229 equal .thoriumContainer false
 
   926 call *label20 *invalid :supplyBlock*retval (m:*label248) (h:*label248)
   927 label *label248
   928 set :supplyBase0:supplied true
-    * jump *label246 always
   929 label *label245
   930 label *label246
-    * jump *label244 always
   931 label *label243
   932 label *label244
   933 sensor *tmp354 .core @silicon
 
   958 call *label20 *invalid :supplyBlock*retval (m:*label258) (h:*label258)
   959 label *label258
   960 set :supplyBase0:supplied true
-    * jump *label256 always
   961 label *label255
   962 label *label256
   963 label *label252
-    * jump *label250 always
   964 label *label249
   965 label *label250
   966 sensor *tmp363 .battery @totalPower
 
   977 call *label20 *invalid :supplyBlock*retval (m:*label264) (h:*label264)
   978 label *label264
   979 set :supplyBase0:supplied true
-    * jump *label262 always
   980 label *label261
   981 label *label262
-    * jump *label260 always
   982 label *label259
   983 label *label260
-    * jump *label242 always
   984 label *label241
   985 label *label242
   986 sensor *tmp369 .core @titanium
 
  1088 label *label282
  1089 label *label276
  1090 label *label272
-    * jump *label270 always
  1091 label *label269
  1092 label *label270
  1093 jump *label268 always
 
  1177 jump *label314 greaterThanEq *tmp416 .targetCopper
  1178 set *tmp415 false
  1179 jump *label313 always
-    * jump *label315 always
  1180 label *label314
  1181 label *label315
  1182 sensor *tmp419 .core @lead
  1183 jump *label316 greaterThanEq *tmp419 .targetLead
  1184 set *tmp415 false
  1185 jump *label313 always
-    * jump *label317 always
  1186 label *label316
  1187 label *label317
  1188 sensor *tmp422 .core @graphite
  1189 jump *label318 greaterThanEq *tmp422 .targetGraphite
  1190 set *tmp415 false
  1191 jump *label313 always
-    * jump *label319 always
  1192 label *label318
  1193 label *label319
  1194 sensor *tmp425 .core @silicon
  1195 jump *label320 greaterThanEq *tmp425 .targetSilicon
  1196 set *tmp415 false
  1197 jump *label313 always
-    * jump *label321 always
  1198 label *label320
  1199 label *label321
  1200 sensor *tmp428 .core @titanium
  1201 jump *label322 greaterThanEq *tmp428 .targetTitanium
  1202 set *tmp415 false
  1203 jump *label313 always
-    * jump *label323 always
  1204 label *label322
  1205 label *label323
  1206 sensor *tmp431 .core @metaglass
  1207 jump *label324 greaterThanEq *tmp431 .targetMetaglass
  1208 set *tmp415 false
  1209 jump *label313 always
-    * jump *label325 always
  1210 label *label324
  1211 label *label325
  1212 sensor *tmp434 .core @thorium
  1213 jump *label326 greaterThanEq *tmp434 .targetThorium
  1214 set *tmp415 false
  1215 jump *label313 always
-    * jump *label327 always
  1216 label *label326
  1217 label *label327
  1218 set *tmp415 true
 
  1290 label *label339
  1291 set :buildRemoteBlock*retval :buildBlock*retval
  1292 jump *label335 always
-    * jump *label337 always
  1293 label *label336
  1294 label *label337
  1295 set :buildRemoteBlock*retval false
 
  1393 jump *label356 notEqual *tmp473 @ore-coal
  1394 label *label357
  1395 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label352 always
  1396 label *label356
  1397 label *label352
  1398 label *label351
 
  1478 jump *label372 equal *tmp505 false
  1479 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1480 write :buildTitaniumDrill:count .controller ".flareTarget"
-    * jump *label371 always
  1481 label *label370
  1482 label *label371
-    * jump *label368 always
  1483 label *label367
  1484 label *label368
-    * jump *label360 always
  1485 label *label359
  1486 label *label360
  1487 label *label358

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
     7 set .thoriumContainer null
     8 set .thoriumGenerator null
     9 set .leadSurplus 0
 
    55 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    56 label *label47
    57 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   58 set :meetTarget.1:cfg "w**5#-#####"
    59 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
    60 call *label34 *invalid :meetTarget.1*retval (m:*label49) (h:*label49)
    61 label *label49
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   62 write @titanium processor1 ".nextBlock"
+   63 write .coreX processor4 ":findDrillLocation:x"
+   64 write .coreY processor4 ":findDrillLocation:y"
+   65 write @unit processor4 ":findDrillLocation:unit"
+   66 write @titanium processor4 ":findDrillLocation:item"
+   67 write @ore-titanium processor4 ":findDrillLocation:ore"
+   68 write 2 processor4 ":findDrillLocation:size"
+   69 write 4 processor4 ":findDrillLocation:limit"
+   70 write false processor4 ":findDrillLocation*finished"
+   71 write 1 processor4 "@counter"
    72 label *label50
    73 wait 1e-15
-    * read *tmp126 .oreLocator ":findDrillLocation*finished"
+   74 read *tmp126 processor4 ":findDrillLocation*finished"
    75 jump *label50 equal *tmp126 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   76 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   77 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   78 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    79 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    80 set :error:error "Cannot locate spot for titanium drill"
    81 setaddr :error*retaddr *label53 (h:*label53)
 
    83 label *label53
    84 label *label51
    85 label *label52
-    * write @pneumatic-drill .display ".nextBlock"
-    * write @pneumatic-drill .blockBuilder ":buildBlockAt:block"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildBlockAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+   86 write @pneumatic-drill processor1 ".nextBlock"
+   87 write @pneumatic-drill processor5 ":buildBlockAt:block"
+   88 write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt:x"
+   89 write :buildFirstTitaniumDrill:dy processor5 ":buildBlockAt:y"
+   90 write null processor5 ":buildBlockAt:rotation"
+   91 write 0 processor5 ":buildBlockAt:config"
+   92 write false processor5 ":buildBlockAt*finished"
+   93 write 1 processor5 "@counter"
    94 label *label54
    95 wait 1e-15
-    * read *tmp135 .blockBuilder ":buildBlockAt*finished"
+   96 read *tmp135 processor5 ":buildBlockAt*finished"
    97 jump *label54 equal *tmp135 false
-    * read *tmp115 .blockBuilder ":buildBlockAt*retval"
+   98 read *tmp115 processor5 ":buildBlockAt*retval"
    99 jump *label48 always
-    * set *tmp115 null
   100 label *label48
   101 set .titaniumDrill *tmp115
-    * write .titaniumDrill .display ".titaniumDrill"
+  102 write *tmp115 processor1 ".titaniumDrill"
   103 set :buildBlockFromCfg.1:cfg "*,###A<###"
   104 setaddr :buildBlockFromCfg.1*retaddr *label55 (h:*label55)
   105 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label55) (h:*label55)
   106 label *label55
   107 set .unloader1 :buildBlockFromCfg.1*retval
-    * write .unloader1 .controller ".unloader1"
+  108 write :buildBlockFromCfg.1*retval .controller ".unloader1"
   109 set :buildBlockFromCfg.1:cfg "T),%%######"
   110 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
   111 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
 
   121 call *label32 *invalid :buildBlockFromCfg*retval (m:*label58) (h:*label58)
   122 label *label58
   123 set .controller :buildBlockFromCfg*retval
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
+  124 write processor1 :buildBlockFromCfg*retval ".display"
+  125 write .core :buildBlockFromCfg*retval ".core"
+  126 write bank1 :buildBlockFromCfg*retval ".bank"
+  127 write .battery :buildBlockFromCfg*retval ".battery"
+  128 write .generator :buildBlockFromCfg*retval ".generator"
+  129 write .smelter :buildBlockFromCfg*retval ".smelter"
+  130 write .press :buildBlockFromCfg*retval ".press"
   131 set :buildBlockFromCfg.1:cfg "g)'%)######"
   132 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   133 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
 
   142 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   143 label *label61
   144 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  145 write :buildBlockFromCfg.1*retval .controller ".factory"
+  146 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   147 write 1 .controller ".flareTarget"
   148 write 3 .controller ".monoTarget"
   149 write 0 .controller ".polyTarget"
 
   151 write 150 .controller ".smelterTarget"
   152 write 30 .controller ".kilnTarget"
   153 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  154 set .siliconSurplus 20
   155 setaddr :buildUnits*retaddr *label62 (h:*label62)
   156 call *label38 *invalid :buildUnits*retval (m:*label62) (h:*label62)
   157 label *label62
 
   182 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label71) (h:*label71)
   183 label *label71
   184 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  185 write :buildBlockFromCfg.1*retval .controller ".kiln"
   186 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   187 setaddr :buildBlockFromCfg.1*retaddr *label72 (h:*label72)
   188 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label72) (h:*label72)
 
   224 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   225 label *label80
   226 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  227 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  228 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   229 set :buildBlockFromCfg.1:cfg "l.-#U#A7###"
   230 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   231 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
 
   270 label *label92
   271 write 8 .controller ".monoTarget"
   272 write 6 .controller ".polyTarget"
-    * write @ore-titanium .display ".nextBlock"
+  273 write @ore-titanium processor1 ".nextBlock"
   274 wait 0.000000001
   275 ubind @flare
-    * read *tmp47 .oreLocator ".locations"
+  276 read *tmp47 processor4 ".locations"
   277 set :buildTitaniumDrills:current *tmp47
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  278 write .coreX processor4 ":findDrillLocation:x"
+  279 write .coreY processor4 ":findDrillLocation:y"
+  280 write @unit processor4 ":findDrillLocation:unit"
+  281 write @titanium processor4 ":findDrillLocation:item"
+  282 write @ore-titanium processor4 ":findDrillLocation:ore"
+  283 write 4 processor4 ":findDrillLocation:size"
+  284 write 1000000000 processor4 ":findDrillLocation:limit"
+  285 write false processor4 ":findDrillLocation*finished"
+  286 write 1 processor4 "@counter"
   287 ubind .builder
   288 set :buildTitaniumDrills:count 1
   289 set :buildTitaniumDrills:searching true
   290 label *label95
   291 jump *label97 equal :buildTitaniumDrills:searching false
-    * read *tmp175 .oreLocator ":findDrillLocation*finished"
+  292 read *tmp175 processor4 ":findDrillLocation*finished"
   293 op equal :buildTitaniumDrills:searching *tmp175 false
   294 label *label98
-    * read *tmp47 .oreLocator ".locations"
+  295 read *tmp47 processor4 ".locations"
   296 jump *label100 greaterThanEq :buildTitaniumDrills:current *tmp47
   297 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
   298 op add *tmp180 :buildTitaniumDrills:index 1
 
   314 op add *tmp192 :buildTitaniumDrills:x 1
   315 op sub *tmp193 :buildTitaniumDrills:y 1
   316 set :buildTitaniumDrill:x *tmp192
-    * set :buildTitaniumDrill:y *tmp193
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  317 set :buildTitaniumDrill:y *tmp191
+  318 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   319 setaddr :buildTitaniumDrill*retaddr *label104 (h:*label104)
   320 call *label37 *invalid :buildTitaniumDrill*retval (m:*label104) (h:*label104)
   321 label *label104
   322 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   323 op sub *tmp194 :buildTitaniumDrills:x 1
   324 op add *tmp195 :buildTitaniumDrills:y 1
-    * set :buildTitaniumDrill:x *tmp194
+  325 set :buildTitaniumDrill:x *tmp190
   326 set :buildTitaniumDrill:y *tmp195
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  327 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   328 setaddr :buildTitaniumDrill*retaddr *label105 (h:*label105)
   329 call *label37 *invalid :buildTitaniumDrill*retval (m:*label105) (h:*label105)
   330 label *label105
   331 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   332 op add *tmp196 :buildTitaniumDrills:x 1
   333 op add *tmp197 :buildTitaniumDrills:y 1
-    * set :buildTitaniumDrill:x *tmp196
-    * set :buildTitaniumDrill:y *tmp197
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  334 set :buildTitaniumDrill:x *tmp192
+  335 set :buildTitaniumDrill:y *tmp195
+  336 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   337 setaddr :buildTitaniumDrill*retaddr *label106 (h:*label106)
   338 call *label37 *invalid :buildTitaniumDrill*retval (m:*label106) (h:*label106)
   339 label *label106
 
   351 label *label96
   352 jump *label95 always
   353 label *label97
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  354 write false processor4 ":stopLocation*finished"
+  355 write 3 processor4 "@counter"
   356 label *label94
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  357 write null processor1 ".nextBlock"
+  358 write .coreX processor4 ":layoutThoriumDrill:x"
+  359 write .coreY processor4 ":layoutThoriumDrill:y"
+  360 write @unit processor4 ":layoutThoriumDrill:unit"
+  361 write 7 processor4 ":layoutThoriumDrill:limit"
+  362 write false processor4 ":layoutThoriumDrill*finished"
+  363 write 2 processor4 "@counter"
   364 label *label110
   365 wait 1e-15
-    * read *tmp205 .oreLocator ":layoutThoriumDrill*finished"
+  366 read *tmp205 processor4 ":layoutThoriumDrill*finished"
   367 jump *label110 equal *tmp205 false
   368 set :meetTarget.1:cfg "x**F#AA7###"
   369 setaddr :meetTarget.1*retaddr *label111 (h:*label111)
 
   371 label *label111
   372 label *label112
   373 wait 1e-15
-    * read *tmp207 .oreLocator ":layoutThoriumDrill*finished"
+  374 read *tmp207 processor4 ":layoutThoriumDrill*finished"
   375 jump *label112 equal *tmp207 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  376 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   377 jump *label113 notEqual :buildThoriumDrill:result false
   378 set :error:error "Cannot locate spot for thorium drill"
   379 setaddr :error*retaddr *label115 (h:*label115)
 
   381 label *label115
   382 label *label113
   383 label *label114
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp48 .oreLocator ".drillX"
-    * write *tmp48 .blockBuilder ":buildBlockAt:x"
-    * read *tmp49 .oreLocator ".drillY"
-    * write *tmp49 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  384 write @laser-drill processor5 ":buildBlockAt:block"
+  385 read *tmp48 processor4 ".drillX"
+  386 write *tmp48 processor5 ":buildBlockAt:x"
+  387 read *tmp49 processor4 ".drillY"
+  388 write *tmp49 processor5 ":buildBlockAt:y"
+  389 write null processor5 ":buildBlockAt:rotation"
+  390 write 0 processor5 ":buildBlockAt:config"
+  391 write false processor5 ":buildBlockAt*finished"
+  392 write 1 processor5 "@counter"
   393 label *label116
   394 wait 1e-15
-    * read *tmp216 .blockBuilder ":buildBlockAt*finished"
+  395 read *tmp216 processor5 ":buildBlockAt*finished"
   396 jump *label116 equal *tmp216 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  397 read .thoriumDrill processor5 ":buildBlockAt*retval"
   398 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  399 read :buildRemoteBlock:x processor4 ".water1X"
+  400 read :buildRemoteBlock:y processor4 ".water1Y"
   401 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   402 call *label31 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   403 label *label117
-    * set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  404 read :buildRemoteBlock:x processor4 ".water2X"
+  405 read :buildRemoteBlock:y processor4 ".water2Y"
   406 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   407 call *label31 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   408 label *label118
   409 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  410 read :buildRemoteBlock:x processor4 ".generatorX"
+  411 read :buildRemoteBlock:y processor4 ".generatorY"
   412 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   413 call *label31 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   414 label *label119
   415 set .thoriumGenerator :buildRemoteBlock*retval
   416 set :buildRemoteBlock:cfg "g)'%)######"
-    * read :buildRemoteBlock:x .oreLocator ".nodeX"
-    * read :buildRemoteBlock:y .oreLocator ".nodeY"
+  417 read :buildRemoteBlock:x processor4 ".nodeX"
+  418 read :buildRemoteBlock:y processor4 ".nodeY"
   419 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   420 call *label31 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   421 label *label120
   422 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  423 read :buildRemoteBlock:x processor4 ".panelX"
+  424 read :buildRemoteBlock:y processor4 ".panelY"
   425 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   426 call *label31 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   427 label *label121
   428 set :buildRemoteBlock:cfg "k*/(7######"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  429 read :buildRemoteBlock:x processor4 ".batteryX"
+  430 read :buildRemoteBlock:y processor4 ".batteryY"
   431 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   432 call *label31 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   433 label *label122
   434 set :buildRemoteBlock:cfg "**#######"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  435 read :buildRemoteBlock:x processor4 ".containerX"
+  436 read :buildRemoteBlock:y processor4 ".containerY"
   437 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   438 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   439 label *label123
   440 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label124 notEqual .thoriumContainer null
+  441 jump *label124 notEqual :buildRemoteBlock*retval null
   442 set .thoriumContainer .thoriumDrill
   443 label *label124
   444 label *label125
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
+  445 write .thoriumDrill processor1 ".thoriumDrill"
+  446 write .thoriumContainer processor1 ".thoriumContainer"
   447 label *label109
-    * write null .display ".nextBlock"
+  448 write null processor1 ".nextBlock"
   449 write 1 .controller ".megaTarget"
   450 label *label126
   451 read *tmp87 .controller ".polys"
 
   470 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   471 label *label132
   472 set :multiReconstructor :buildBlockFromCfg.1*retval
-    * write :multiReconstructor .controller ".multiReconstructor"
-    * write :multiReconstructor .display ".multiReconstructor"
+  473 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  474 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   475 setaddr :buildUnits*retaddr *label133 (h:*label133)
   476 call *label38 *invalid :buildUnits*retval (m:*label133) (h:*label133)
   477 label *label133
 
   634 label *label179
   635 set :mineOre:x :locateOre:x
   636 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  637 set :moveToEmpty:x :locateOre:x
+  638 set :moveToEmpty:y :locateOre:y
   639 setaddr :moveToEmpty*retaddr *label180 (h:*label180)
   640 call *label12 *invalid :moveToEmpty*retval (m:*label180) (h:*label180)
   641 label *label180
 
   812 end
   813 label *label27
   814 set :unpackCfg:index 0
-    * set *tmp301 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  815 set *tmp301 0
+  816 op add :unpackCfg:index 0 1
   817 read *tmp302 :unpackCfg:cfg *tmp301
   818 op sub *tmp303 *tmp302 35
   819 lookup block :unpackCfg:type *tmp303
-    * set *tmp305 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  820 set *tmp305 1
+  821 op add :unpackCfg:index 1 1
   822 read *tmp306 :unpackCfg:cfg *tmp305
   823 op sub *tmp307 *tmp306 35
-    * op sub :unpackCfg:x *tmp307 7
-    * set *tmp309 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  824 op sub :unpackCfg:x *tmp306 42
+  825 set *tmp309 2
+  826 op add :unpackCfg:index 2 1
   827 read *tmp310 :unpackCfg:cfg *tmp309
   828 op sub *tmp311 *tmp310 35
-    * op sub :unpackCfg:y *tmp311 7
-    * set *tmp313 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  829 op sub :unpackCfg:y *tmp310 42
+  830 set *tmp313 3
+  831 op add :unpackCfg:index 3 1
   832 read *tmp314 :unpackCfg:cfg *tmp313
   833 op sub :unpackCfg:cu *tmp314 35
-    * set *tmp316 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  834 set *tmp316 4
+  835 op add :unpackCfg:index 4 1
   836 read *tmp317 :unpackCfg:cfg *tmp316
   837 op sub :unpackCfg:pb *tmp317 35
-    * set *tmp319 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  838 set *tmp319 5
+  839 op add :unpackCfg:index 5 1
   840 read *tmp320 :unpackCfg:cfg *tmp319
   841 op sub :unpackCfg:gr *tmp320 35
-    * set *tmp322 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  842 set *tmp322 6
+  843 op add :unpackCfg:index 6 1
   844 read *tmp323 :unpackCfg:cfg *tmp322
   845 op sub :unpackCfg:si *tmp323 35
-    * set *tmp325 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  846 set *tmp325 7
+  847 op add :unpackCfg:index 7 1
   848 read *tmp326 :unpackCfg:cfg *tmp325
   849 op sub :unpackCfg:ti *tmp326 35
-    * set *tmp328 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  850 set *tmp328 8
+  851 op add :unpackCfg:index 8 1
   852 read *tmp329 :unpackCfg:cfg *tmp328
   853 op sub :unpackCfg:mg *tmp329 35
-    * set *tmp331 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  854 set *tmp331 9
+  855 op add :unpackCfg:index 9 1
   856 read *tmp332 :unpackCfg:cfg *tmp331
   857 op sub :unpackCfg:th *tmp332 35
-    * set *tmp334 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  858 set *tmp334 10
+  859 op add :unpackCfg:index 10 1
   860 read *tmp335 :unpackCfg:cfg *tmp334
   861 op sub :unpackCfg:rotation *tmp335 35
   862 label *label223
 
   990 label *label266
   991 set :supplyBase0:titaniumTrigger *tmp371
   992 sensor *tmp375 .titaniumDrill @titanium
-    * jump *label267 greaterThanEq *tmp375 :supplyBase0:titaniumTrigger
+  993 jump *label267 greaterThanEq *tmp375 *tmp371
   994 jump *label269 notEqual :supplyBase0:supplied false
   995 sensor *tmp380 .battery @totalPower
   996 op mul *tmp381 .unloader1 .powerTarget
 
  1020 set *tmp390 @sand
  1021 label *label279
  1022 set :supplyBase0:ore *tmp390
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1023 set :mineOre.1:ore *tmp390
  1024 setaddr :mineOre.1*retaddr *label280 (h:*label280)
  1025 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
  1026 label *label280
 
  1075 set *tmp403 @sand
  1076 label *label295
  1077 set :supplyBase0:ore.1 *tmp403
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1078 set :mineOre.1:ore *tmp403
  1079 setaddr :mineOre.1*retaddr *label296 (h:*label296)
  1080 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
  1081 label *label296
 
  1163 op add *tmp410 :meetTarget:metaglass .metaglassSurplus
  1164 write *tmp410 .controller ".kilnTarget"
  1165 op add *tmp411 :meetTarget:lead .leadSurplus
-    * write *tmp411 .controller ".leadReserve"
+ 1166 write *tmp406 .controller ".leadReserve"
  1167 op sign *tmp412 :meetTarget:silicon
  1168 op mul *tmp413 *tmp412 20
  1169 op add *tmp414 :meetTarget:silicon *tmp413
 
  1213 label *label327
  1214 set *tmp415 true
  1215 jump *label313 always
-    * set *tmp415 null
  1216 label *label313
  1217 jump *label312 notEqual *tmp415 false
  1218 setaddr :supplyBase*retaddr *label328 (h:*label328)
 
  1249 jump *label334 equal *tmp458 false
  1250 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1251 jump *label332 always
-    * set :buildBlock*retval null
  1252 label *label332
  1253 return :buildBlock*retaddr
  1254 end
 
  1267 set :buildRemoteBlock:mg :unpackCfg:mg
  1268 set :buildRemoteBlock:th :unpackCfg:th
  1269 set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1270 set :buildBlock:block :unpackCfg:type
  1271 set :buildBlock:x :buildRemoteBlock:x
  1272 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1273 set :buildBlock:copper :unpackCfg:cu
+ 1274 set :buildBlock:lead :unpackCfg:pb
+ 1275 set :buildBlock:graphite :unpackCfg:gr
+ 1276 set :buildBlock:silicon :unpackCfg:si
+ 1277 set :buildBlock:titanium :unpackCfg:ti
+ 1278 set :buildBlock:metaglass :unpackCfg:mg
+ 1279 set :buildBlock:thorium :unpackCfg:th
+ 1280 set :buildBlock:rotation :unpackCfg:rotation
  1281 set :buildBlock:config null
  1282 setaddr :buildBlock*retaddr *label339 (h:*label339)
  1283 call *label30 *invalid :buildBlock*retval (m:*label339) (h:*label339)
 
  1288 label *label337
  1289 set :buildRemoteBlock*retval false
  1290 jump *label335 always
-    * set :buildRemoteBlock*retval null
  1291 label *label335
  1292 return :buildRemoteBlock*retaddr
  1293 end
 
  1307 set :buildBlockFromCfg:mg :unpackCfg:mg
  1308 set :buildBlockFromCfg:th :unpackCfg:th
  1309 set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * op add *tmp462 .coreX :buildBlockFromCfg:x
-    * op add *tmp463 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1310 op add *tmp462 .coreX :unpackCfg:x
+ 1311 op add *tmp463 .coreY :unpackCfg:y
+ 1312 set :buildBlock:block :unpackCfg:type
  1313 set :buildBlock:x *tmp462
  1314 set :buildBlock:y *tmp463
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1315 set :buildBlock:copper :unpackCfg:cu
+ 1316 set :buildBlock:lead :unpackCfg:pb
+ 1317 set :buildBlock:graphite :unpackCfg:gr
+ 1318 set :buildBlock:silicon :unpackCfg:si
+ 1319 set :buildBlock:titanium :unpackCfg:ti
+ 1320 set :buildBlock:metaglass :unpackCfg:mg
+ 1321 set :buildBlock:thorium :unpackCfg:th
+ 1322 set :buildBlock:rotation :unpackCfg:rotation
  1323 set :buildBlock:config :buildBlockFromCfg:config
  1324 setaddr :buildBlock*retaddr *label342 (h:*label342)
  1325 call *label30 *invalid :buildBlock*retval (m:*label342) (h:*label342)
  1326 label *label342
  1327 set :buildBlockFromCfg*retval :buildBlock*retval
  1328 jump *label340 always
-    * set :buildBlockFromCfg*retval null
  1329 label *label340
  1330 return :buildBlockFromCfg*retaddr
  1331 end
 
  1352 set :meetTarget.1:ti :unpackCfg:ti
  1353 set :meetTarget.1:mg :unpackCfg:mg
  1354 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+ 1355 set :meetTarget:block :unpackCfg:type
+ 1356 set :meetTarget:copper :unpackCfg:cu
+ 1357 set :meetTarget:lead :unpackCfg:pb
+ 1358 set :meetTarget:graphite :unpackCfg:gr
+ 1359 set :meetTarget:silicon :unpackCfg:si
+ 1360 set :meetTarget:titanium :unpackCfg:ti
+ 1361 set :meetTarget:metaglass :unpackCfg:mg
+ 1362 set :meetTarget:thorium :unpackCfg:th
  1363 setaddr :meetTarget*retaddr *label347 (h:*label347)
  1364 call *label29 *invalid :meetTarget*retval (m:*label347) (h:*label347)
  1365 label *label347
 
  1369 label *label36
  1370 set :getFloor:x :titaniumDrillScore:x
  1371 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y 0 0 :getFloor:floor
+ 1372 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1373 set *tmp473 :getFloor:floor
  1374 jump *label353 always
-    * set *tmp473 null
  1375 label *label353
-    * jump *label354 notEqual *tmp473 @ore-titanium
+ 1376 jump *label354 notEqual :getFloor:floor @ore-titanium
  1377 label *label355
  1378 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1379 jump *label352 always
  1380 label *label354
-    * jump *label357 equal *tmp473 @ore-copper
-    * jump *label357 equal *tmp473 @ore-lead
-    * jump *label357 equal *tmp473 @ore-scrap
-    * jump *label356 notEqual *tmp473 @ore-coal
+ 1381 jump *label357 equal :getFloor:floor @ore-copper
+ 1382 jump *label357 equal :getFloor:floor @ore-lead
+ 1383 jump *label357 equal :getFloor:floor @ore-scrap
+ 1384 jump *label356 notEqual :getFloor:floor @ore-coal
  1385 label *label357
  1386 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1387 label *label356
 
  1393 jump *label359 greaterThanEq :buildTitaniumDrill:count 8
  1394 set :moveTo.1:x :buildTitaniumDrill:x
  1395 set :moveTo.1:y :buildTitaniumDrill:y
-    * set *tmp481 :moveTo.1:x
-    * set *tmp482 :moveTo.1:y
-    * set :moveTo:x *tmp481
-    * set :moveTo:y *tmp482
+ 1396 set *tmp481 :buildTitaniumDrill:x
+ 1397 set *tmp482 :buildTitaniumDrill:y
+ 1398 set :moveTo:x :moveTo.1:x
+ 1399 set :moveTo:y :moveTo.1:y
  1400 set :moveTo:radius 6
  1401 setaddr :moveTo*retaddr *label362 (h:*label362)
  1402 call *label11 *invalid :moveTo*retval (m:*label362) (h:*label362)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-64 instructions):
 
    23 label *label41
    24 set .display processor1
    25 set .flareController processor3
-    * set .oreLocator processor4
    26 set .blockBuilder processor5
    27 set :buildBlockFromCfg.1:cfg "#'+nA######"
    28 setaddr :buildBlockFromCfg.1*retaddr *label42 (h:*label42)
 
    53 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    54 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    55 label *label47
-    * set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    56 set :meetTarget.1:cfg "w**5#-#####"
    57 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
    58 call *label34 *invalid :meetTarget.1*retval (m:*label49) (h:*label49)
 
   139 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   140 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   141 label *label61
-    * set :factory :buildBlockFromCfg.1*retval
   142 write :buildBlockFromCfg.1*retval .controller ".factory"
   143 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   144 write 1 .controller ".flareTarget"
 
   178 setaddr :buildBlockFromCfg.1*retaddr *label71 (h:*label71)
   179 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label71) (h:*label71)
   180 label *label71
-    * set .kiln :buildBlockFromCfg.1*retval
   181 write :buildBlockFromCfg.1*retval .controller ".kiln"
   182 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   183 setaddr :buildBlockFromCfg.1*retaddr *label72 (h:*label72)
 
   219 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   220 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   221 label *label80
-    * set :reconstructor :buildBlockFromCfg.1*retval
   222 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   223 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   224 set :buildBlockFromCfg.1:cfg "l.-#U#A7###"
 
   305 setaddr :buildTitaniumDrill*retaddr *label103 (h:*label103)
   306 call *label37 *invalid :buildTitaniumDrill*retval (m:*label103) (h:*label103)
   307 label *label103
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
   308 op add *tmp192 :buildTitaniumDrills:x 1
-    * op sub *tmp193 :buildTitaniumDrills:y 1
   309 set :buildTitaniumDrill:x *tmp192
   310 set :buildTitaniumDrill:y *tmp191
   311 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   312 setaddr :buildTitaniumDrill*retaddr *label104 (h:*label104)
   313 call *label37 *invalid :buildTitaniumDrill*retval (m:*label104) (h:*label104)
   314 label *label104
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * op sub *tmp194 :buildTitaniumDrills:x 1
   315 op add *tmp195 :buildTitaniumDrills:y 1
   316 set :buildTitaniumDrill:x *tmp190
   317 set :buildTitaniumDrill:y *tmp195
 
   319 setaddr :buildTitaniumDrill*retaddr *label105 (h:*label105)
   320 call *label37 *invalid :buildTitaniumDrill*retval (m:*label105) (h:*label105)
   321 label *label105
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * op add *tmp196 :buildTitaniumDrills:x 1
-    * op add *tmp197 :buildTitaniumDrills:y 1
   322 set :buildTitaniumDrill:x *tmp192
   323 set :buildTitaniumDrill:y *tmp195
   324 set :buildTitaniumDrill:count :buildTitaniumDrill:count
 
   457 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   458 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   459 label *label132
-    * set :multiReconstructor :buildBlockFromCfg.1*retval
   460 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   461 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   462 setaddr :buildUnits*retaddr *label133 (h:*label133)
 
   798 return :supplyBlockFromCore*retaddr
   799 end
   800 label *label27
-    * set :unpackCfg:index 0
   801 set *tmp301 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp302 :unpackCfg:cfg *tmp301
+  802 read *tmp302 :unpackCfg:cfg 0
   803 op sub *tmp303 *tmp302 35
   804 lookup block :unpackCfg:type *tmp303
   805 set *tmp305 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp306 :unpackCfg:cfg *tmp305
-    * op sub *tmp307 *tmp306 35
+  806 read *tmp306 :unpackCfg:cfg 1
   807 op sub :unpackCfg:x *tmp306 42
   808 set *tmp309 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp310 :unpackCfg:cfg *tmp309
-    * op sub *tmp311 *tmp310 35
+  809 read *tmp310 :unpackCfg:cfg 2
   810 op sub :unpackCfg:y *tmp310 42
   811 set *tmp313 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp314 :unpackCfg:cfg *tmp313
+  812 read *tmp314 :unpackCfg:cfg 3
   813 op sub :unpackCfg:cu *tmp314 35
   814 set *tmp316 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp317 :unpackCfg:cfg *tmp316
+  815 read *tmp317 :unpackCfg:cfg 4
   816 op sub :unpackCfg:pb *tmp317 35
   817 set *tmp319 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp320 :unpackCfg:cfg *tmp319
+  818 read *tmp320 :unpackCfg:cfg 5
   819 op sub :unpackCfg:gr *tmp320 35
   820 set *tmp322 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp323 :unpackCfg:cfg *tmp322
+  821 read *tmp323 :unpackCfg:cfg 6
   822 op sub :unpackCfg:si *tmp323 35
   823 set *tmp325 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp326 :unpackCfg:cfg *tmp325
+  824 read *tmp326 :unpackCfg:cfg 7
   825 op sub :unpackCfg:ti *tmp326 35
   826 set *tmp328 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp329 :unpackCfg:cfg *tmp328
+  827 read *tmp329 :unpackCfg:cfg 8
   828 op sub :unpackCfg:mg *tmp329 35
   829 set *tmp331 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp332 :unpackCfg:cfg *tmp331
+  830 read *tmp332 :unpackCfg:cfg 9
   831 op sub :unpackCfg:th *tmp332 35
   832 set *tmp334 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp335 :unpackCfg:cfg *tmp334
+  833 read *tmp335 :unpackCfg:cfg 10
   834 op sub :unpackCfg:rotation *tmp335 35
   835 label *label223
   836 return :unpackCfg*retaddr
 
   961 label *label265
   962 set *tmp371 100
   963 label *label266
-    * set :supplyBase0:titaniumTrigger *tmp371
   964 sensor *tmp375 .titaniumDrill @titanium
   965 jump *label267 greaterThanEq *tmp375 *tmp371
   966 jump *label269 notEqual :supplyBase0:supplied false
 
   991 label *label278
   992 set *tmp390 @sand
   993 label *label279
-    * set :supplyBase0:ore *tmp390
   994 set :mineOre.1:ore *tmp390
   995 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   996 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
 
  1045 label *label294
  1046 set *tmp403 @sand
  1047 label *label295
-    * set :supplyBase0:ore.1 *tmp403
  1048 set :mineOre.1:ore *tmp403
  1049 setaddr :mineOre.1*retaddr *label296 (h:*label296)
  1050 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
 
  1132 write *tmp409 .controller ".smelterTarget"
  1133 op add *tmp410 :meetTarget:metaglass .metaglassSurplus
  1134 write *tmp410 .controller ".kilnTarget"
-    * op add *tmp411 :meetTarget:lead .leadSurplus
  1135 write *tmp406 .controller ".leadReserve"
  1136 op sign *tmp412 :meetTarget:silicon
  1137 op mul *tmp413 *tmp412 20
 
  1227 setaddr :unpackCfg*retaddr *label338 (h:*label338)
  1228 call *label27 *invalid :unpackCfg*retval (m:*label338) (h:*label338)
  1229 label *label338
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
  1230 set :buildBlock:block :unpackCfg:type
  1231 set :buildBlock:x :buildRemoteBlock:x
  1232 set :buildBlock:y :buildRemoteBlock:y
 
  1256 setaddr :unpackCfg*retaddr *label341 (h:*label341)
  1257 call *label27 *invalid :unpackCfg*retval (m:*label341) (h:*label341)
  1258 label *label341
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1259 op add *tmp462 .coreX :unpackCfg:x
  1260 op add *tmp463 .coreY :unpackCfg:y
  1261 set :buildBlock:block :unpackCfg:type
 
  1293 setaddr :unpackCfg*retaddr *label346 (h:*label346)
  1294 call *label27 *invalid :unpackCfg*retval (m:*label346) (h:*label346)
  1295 label *label346
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
  1296 set :meetTarget:block :unpackCfg:type
  1297 set :meetTarget:copper :unpackCfg:cu
  1298 set :meetTarget:lead :unpackCfg:pb
 
  1308 return :meetTarget.1*retaddr
  1309 end
  1310 label *label36
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1311 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * set *tmp473 :getFloor:floor
  1312 jump *label353 always
  1313 label *label353
  1314 jump *label354 notEqual :getFloor:floor @ore-titanium
 
  1331 jump *label359 greaterThanEq :buildTitaniumDrill:count 8
  1332 set :moveTo.1:x :buildTitaniumDrill:x
  1333 set :moveTo.1:y :buildTitaniumDrill:y
-    * set *tmp481 :buildTitaniumDrill:x
-    * set *tmp482 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1334 set :moveTo:x :buildTitaniumDrill:x
+ 1335 set :moveTo:y :buildTitaniumDrill:y
  1336 set :moveTo:radius 6
  1337 setaddr :moveTo*retaddr *label362 (h:*label362)
  1338 call *label11 *invalid :moveTo*retval (m:*label362) (h:*label362)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-13 instructions):
 
   798 return :supplyBlockFromCore*retaddr
   799 end
   800 label *label27
-    * set *tmp301 0
   801 read *tmp302 :unpackCfg:cfg 0
   802 op sub *tmp303 *tmp302 35
   803 lookup block :unpackCfg:type *tmp303
-    * set *tmp305 1
   804 read *tmp306 :unpackCfg:cfg 1
   805 op sub :unpackCfg:x *tmp306 42
-    * set *tmp309 2
   806 read *tmp310 :unpackCfg:cfg 2
   807 op sub :unpackCfg:y *tmp310 42
-    * set *tmp313 3
   808 read *tmp314 :unpackCfg:cfg 3
   809 op sub :unpackCfg:cu *tmp314 35
-    * set *tmp316 4
   810 read *tmp317 :unpackCfg:cfg 4
   811 op sub :unpackCfg:pb *tmp317 35
-    * set *tmp319 5
   812 read *tmp320 :unpackCfg:cfg 5
   813 op sub :unpackCfg:gr *tmp320 35
-    * set *tmp322 6
   814 read *tmp323 :unpackCfg:cfg 6
   815 op sub :unpackCfg:si *tmp323 35
-    * set *tmp325 7
   816 read *tmp326 :unpackCfg:cfg 7
   817 op sub :unpackCfg:ti *tmp326 35
-    * set *tmp328 8
   818 read *tmp329 :unpackCfg:cfg 8
   819 op sub :unpackCfg:mg *tmp329 35
-    * set *tmp331 9
   820 read *tmp332 :unpackCfg:cfg 9
   821 op sub :unpackCfg:th *tmp332 35
-    * set *tmp334 10
   822 read *tmp335 :unpackCfg:cfg 10
   823 op sub :unpackCfg:rotation *tmp335 35
   824 label *label223
 
  1318 end
  1319 label *label37
  1320 jump *label359 greaterThanEq :buildTitaniumDrill:count 8
-    * set :moveTo.1:x :buildTitaniumDrill:x
-    * set :moveTo.1:y :buildTitaniumDrill:y
  1321 set :moveTo:x :buildTitaniumDrill:x
  1322 set :moveTo:y :buildTitaniumDrill:y
  1323 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   504 setaddr :status3*retaddr *label144 (h:*label144)
   505 call *label8 *invalid :status3*retval (m:*label144) (h:*label144)
   506 label *label144
+  507 op sub *tmp233 :moveTo:radius 0.5
   508 label *label145
   509 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp231
   510 jump *label147 notEqual *tmp231 false
-    * op sub *tmp233 :moveTo:radius 0.5
   511 ucontrol approach :moveTo:x :moveTo:y *tmp233
   512 label *label146
   513 jump *label145 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   283 set :buildTitaniumDrills:count 1
   284 set :buildTitaniumDrills:searching true
   285 label *label95
-    * jump *label97 equal :buildTitaniumDrills:searching false
+  286 label *label375
   287 read *tmp175 processor4 ":findDrillLocation*finished"
   288 op equal :buildTitaniumDrills:searching *tmp175 false
   289 label *label98
 
   337 label *label107
   338 label *label108
   339 label *label96
-    * jump *label95 always
+  340 jump *label375 notEqual :buildTitaniumDrills:searching false
   341 label *label97
   342 write false processor4 ":stopLocation*finished"
   343 write 3 processor4 "@counter"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   941 label *label260
   942 label *label241
   943 label *label242
+  944 set *tmp371 100
   945 sensor *tmp369 .core @titanium
-    * jump *label265 greaterThanEq *tmp369 .targetTitanium
+  946 jump *label266 greaterThanEq *tmp369 .targetTitanium
   947 sensor *tmp372 .core @titanium
   948 op sub *tmp373 .targetTitanium *tmp372
   949 op min *tmp371 7 *tmp373
   950 jump *label266 always
-    * label *label265
-    * set *tmp371 100
   951 label *label266
   952 sensor *tmp375 .titaniumDrill @titanium
   953 jump *label267 greaterThanEq *tmp375 *tmp371
 
   973 label *label277
   974 sensor :supplyBase0:coal .core @coal
   975 sensor :supplyBase0:sand .core @sand
-    * jump *label278 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp390 @coal
+  976 set :mineOre.1:ore @sand
+  977 jump *label279 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  978 set :mineOre.1:ore @coal
   979 jump *label279 always
-    * label *label278
-    * set *tmp390 @sand
   980 label *label279
-    * set :mineOre.1:ore *tmp390
   981 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   982 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
   983 label *label280
 
  1025 label *label293
  1026 sensor :supplyBase0:coal.1 .core @coal
  1027 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label294 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp403 @coal
+ 1028 set :mineOre.1:ore @sand
+ 1029 jump *label295 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1030 set :mineOre.1:ore @coal
  1031 jump *label295 always
-    * label *label294
-    * set *tmp403 @sand
  1032 label *label295
-    * set :mineOre.1:ore *tmp403
  1033 setaddr :mineOre.1*retaddr *label296 (h:*label296)
  1034 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
  1035 label *label296

Modifications by Unroll iteration loop at CoreBuilder.mnd:230:5 (-2 instructions):
 
  1060 end
  1061 label *label29
  1062 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp404 *label303
-    * jump *label300 always
-    * multilabel *label303 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp404 *label304
-    * jump *label300 always
-    * multilabel *label304 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp404 *label305
-    * jump *label300 always
-    * multilabel *label305 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp404 *label306
-    * jump *label300 always
-    * multilabel *label306 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp404 *label307
-    * jump *label300 always
-    * multilabel *label307 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp404 *label308
-    * jump *label300 always
-    * multilabel *label308 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp404 *label309
-    * label *label300
-    * op sign *tmp405 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label301
-    * multijump *tmp404 0 0 (m:marker0)
-    * multilabel *label309 (m:marker0)
-    * label *label302
+ 1063 set :meetTarget:t :meetTarget:copper
+ 1064 label *label376
+ 1065 op sign *tmp405 :meetTarget:t
+ 1066 op add :meetTarget:count :meetTarget:count *tmp405
+ 1067 label *label377
+ 1068 set :meetTarget:t :meetTarget:lead
+ 1069 label *label380
+ 1070 op sign *tmp405 :meetTarget:t
+ 1071 op add :meetTarget:count :meetTarget:count *tmp405
+ 1072 label *label381
+ 1073 set :meetTarget:t :meetTarget:graphite
+ 1074 label *label384
+ 1075 op sign *tmp405 :meetTarget:t
+ 1076 op add :meetTarget:count :meetTarget:count *tmp405
+ 1077 label *label385
+ 1078 set :meetTarget:t :meetTarget:silicon
+ 1079 label *label388
+ 1080 op sign *tmp405 :meetTarget:t
+ 1081 op add :meetTarget:count :meetTarget:count *tmp405
+ 1082 label *label389
+ 1083 set :meetTarget:t :meetTarget:titanium
+ 1084 label *label392
+ 1085 op sign *tmp405 :meetTarget:t
+ 1086 op add :meetTarget:count :meetTarget:count *tmp405
+ 1087 label *label393
+ 1088 set :meetTarget:t :meetTarget:metaglass
+ 1089 label *label396
+ 1090 op sign *tmp405 :meetTarget:t
+ 1091 op add :meetTarget:count :meetTarget:count *tmp405
+ 1092 label *label397
+ 1093 set :meetTarget:t :meetTarget:thorium
+ 1094 label *label400
+ 1095 op sign *tmp405 :meetTarget:t
+ 1096 op add :meetTarget:count :meetTarget:count *tmp405
+ 1097 label *label401
+ 1098 label *label302
  1099 write :meetTarget:count .display ".totalTargets"
  1100 write :meetTarget:block .display ".nextBlock"
  1101 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   281 write 1 processor4 "@counter"
   282 ubind .builder
   283 set :buildTitaniumDrills:count 1
-    * set :buildTitaniumDrills:searching true
   284 label *label95
   285 label *label375
   286 read *tmp175 processor4 ":findDrillLocation*finished"
 
  1061 set :meetTarget:count 0
  1062 set :meetTarget:t :meetTarget:copper
  1063 label *label376
-    * op sign *tmp405 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp405
+ 1064 op sign *tmp405 :meetTarget:copper
+ 1065 op add :meetTarget:count 0 *tmp405
  1066 label *label377
  1067 set :meetTarget:t :meetTarget:lead
  1068 label *label380
-    * op sign *tmp405 :meetTarget:t
+ 1069 op sign *tmp405 :meetTarget:lead
  1070 op add :meetTarget:count :meetTarget:count *tmp405
  1071 label *label381
  1072 set :meetTarget:t :meetTarget:graphite
  1073 label *label384
-    * op sign *tmp405 :meetTarget:t
+ 1074 op sign *tmp405 :meetTarget:graphite
  1075 op add :meetTarget:count :meetTarget:count *tmp405
  1076 label *label385
  1077 set :meetTarget:t :meetTarget:silicon
  1078 label *label388
-    * op sign *tmp405 :meetTarget:t
+ 1079 op sign *tmp405 :meetTarget:silicon
  1080 op add :meetTarget:count :meetTarget:count *tmp405
  1081 label *label389
  1082 set :meetTarget:t :meetTarget:titanium
  1083 label *label392
-    * op sign *tmp405 :meetTarget:t
+ 1084 op sign *tmp405 :meetTarget:titanium
  1085 op add :meetTarget:count :meetTarget:count *tmp405
  1086 label *label393
  1087 set :meetTarget:t :meetTarget:metaglass
  1088 label *label396
-    * op sign *tmp405 :meetTarget:t
+ 1089 op sign *tmp405 :meetTarget:metaglass
  1090 op add :meetTarget:count :meetTarget:count *tmp405
  1091 label *label397
  1092 set :meetTarget:t :meetTarget:thorium
  1093 label *label400
-    * op sign *tmp405 :meetTarget:t
+ 1094 op sign *tmp405 :meetTarget:thorium
  1095 op add :meetTarget:count :meetTarget:count *tmp405
  1096 label *label401
  1097 label *label302

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1058 return :supplyBase*retaddr
  1059 end
  1060 label *label29
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1061 label *label376
  1062 op sign *tmp405 :meetTarget:copper
  1063 op add :meetTarget:count 0 *tmp405
  1064 label *label377
-    * set :meetTarget:t :meetTarget:lead
  1065 label *label380
  1066 op sign *tmp405 :meetTarget:lead
  1067 op add :meetTarget:count :meetTarget:count *tmp405
  1068 label *label381
-    * set :meetTarget:t :meetTarget:graphite
  1069 label *label384
  1070 op sign *tmp405 :meetTarget:graphite
  1071 op add :meetTarget:count :meetTarget:count *tmp405
  1072 label *label385
-    * set :meetTarget:t :meetTarget:silicon
  1073 label *label388
  1074 op sign *tmp405 :meetTarget:silicon
  1075 op add :meetTarget:count :meetTarget:count *tmp405
  1076 label *label389
-    * set :meetTarget:t :meetTarget:titanium
  1077 label *label392
  1078 op sign *tmp405 :meetTarget:titanium
  1079 op add :meetTarget:count :meetTarget:count *tmp405
  1080 label *label393
-    * set :meetTarget:t :meetTarget:metaglass
  1081 label *label396
  1082 op sign *tmp405 :meetTarget:metaglass
  1083 op add :meetTarget:count :meetTarget:count *tmp405
  1084 label *label397
-    * set :meetTarget:t :meetTarget:thorium
  1085 label *label400
  1086 op sign *tmp405 :meetTarget:thorium
  1087 op add :meetTarget:count :meetTarget:count *tmp405

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
   481 label *label139
   482 return :status2*retaddr
   483 end
-    * label *label8
-    * write :status3:text .display ".status3"
-    * label *label140
-    * return :status3*retaddr
-    * end
   484 label *label9
   485 write :transportStatus:target .display ".transportTarget"
   486 write :transportStatus:item .display ".transportItem"
 
   495 end
   496 label *label11
   497 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label144 (h:*label144)
-    * call *label8 *invalid :status3*retval (m:*label144) (h:*label144)
-    * label *label144
+  498 label *label405
+  499 write :status3:text .display ".status3"
+  500 label *label406
   501 op sub *tmp233 :moveTo:radius 0.5
   502 label *label145
   503 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp231
 
   511 end
   512 label *label12
   513 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label149 (h:*label149)
-    * call *label8 *invalid :status3*retval (m:*label149) (h:*label149)
-    * label *label149
+  514 label *label407
+  515 write :status3:text .display ".status3"
+  516 label *label408
   517 label *label150
   518 sensor *tmp234 @unit @firstItem
   519 jump *label153 equal *tmp234 null
 
   553 end
   554 label *label15
   555 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label162 (h:*label162)
-    * call *label8 *invalid :status3*retval (m:*label162) (h:*label162)
-    * label *label162
+  556 label *label409
+  557 write :status3:text .display ".status3"
+  558 label *label410
   559 sensor *tmp243 @unit @firstItem
   560 jump *label163 notEqual *tmp243 :depositItems:item
   561 set :moveToBlock:block :depositItems:block
 
   628 label *label181
   629 label *label182
   630 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label184 (h:*label184)
-    * call *label8 *invalid :status3*retval (m:*label184) (h:*label184)
-    * label *label184
+  631 label *label411
+  632 write :status3:text .display ".status3"
+  633 label *label412
   634 op add :mineOre:stop @second 10
   635 label *label185
   636 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   496 label *label11
   497 set :status3:text "Moving..."
   498 label *label405
-    * write :status3:text .display ".status3"
+  499 write "Moving..." .display ".status3"
   500 label *label406
   501 op sub *tmp233 :moveTo:radius 0.5
   502 label *label145
 
   512 label *label12
   513 set :status3:text "Moving..."
   514 label *label407
-    * write :status3:text .display ".status3"
+  515 write "Moving..." .display ".status3"
   516 label *label408
   517 label *label150
   518 sensor *tmp234 @unit @firstItem
 
   554 label *label15
   555 set :status3:text "Depositing..."
   556 label *label409
-    * write :status3:text .display ".status3"
+  557 write "Depositing..." .display ".status3"
   558 label *label410
   559 sensor *tmp243 @unit @firstItem
   560 jump *label163 notEqual *tmp243 :depositItems:item
 
   629 label *label182
   630 set :status3:text "Mining..."
   631 label *label411
-    * write :status3:text .display ".status3"
+  632 write "Mining..." .display ".status3"
   633 label *label412
   634 op add :mineOre:stop @second 10
   635 label *label185

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   494 return :error*retaddr
   495 end
   496 label *label11
-    * set :status3:text "Moving..."
   497 label *label405
   498 write "Moving..." .display ".status3"
   499 label *label406
 
   509 return :moveTo*retaddr
   510 end
   511 label *label12
-    * set :status3:text "Moving..."
   512 label *label407
   513 write "Moving..." .display ".status3"
   514 label *label408
 
   550 return :moveToBlock*retaddr
   551 end
   552 label *label15
-    * set :status3:text "Depositing..."
   553 label *label409
   554 write "Depositing..." .display ".status3"
   555 label *label410
 
   624 label *label183
   625 label *label181
   626 label *label182
-    * set :status3:text "Mining..."
   627 label *label411
   628 write "Mining..." .display ".status3"
   629 label *label412

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   469 jump *label134 always
   470 label *label136
   471 end
-    * label *label6
-    * write :status1:text .display ".status1"
-    * label *label138
-    * return :status1*retaddr
-    * end
   472 label *label7
   473 write :status2:text .display ".status2"
   474 write :status2:item .display ".item2"
 
   824 label *label226
   825 jump *label229 equal .thoriumContainer false
   826 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label232 (h:*label232)
-    * call *label6 *invalid :status1*retval (m:*label232) (h:*label232)
-    * label *label232
+  827 label *label413
+  828 write :status1:text .display ".status1"
+  829 label *label414
   830 set :supplyBlockFromCore:target .thoriumGenerator
   831 set :supplyBlockFromCore:item @coal
   832 setaddr :supplyBlockFromCore*retaddr *label233 (h:*label233)
 
   843 read *tmp86 .controller ".monos"
   844 jump *label235 lessThanEq *tmp86 3
   845 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label238 (h:*label238)
-    * call *label6 *invalid :status1*retval (m:*label238) (h:*label238)
-    * label *label238
+  846 label *label415
+  847 write :status1:text .display ".status1"
+  848 label *label416
   849 set :mineOre.1:ore @coal
   850 setaddr :mineOre.1*retaddr *label239 (h:*label239)
   851 call *label18 *invalid :mineOre.1*retval (m:*label239) (h:*label239)
 
   860 sensor *tmp351 .press @coal
   861 jump *label245 greaterThanEq *tmp351 5
   862 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label247 (h:*label247)
-    * call *label6 *invalid :status1*retval (m:*label247) (h:*label247)
-    * label *label247
+  863 label *label417
+  864 write :status1:text .display ".status1"
+  865 label *label418
   866 set :supplyBlock:block .press
   867 set :supplyBlock:ore @coal
   868 setaddr :supplyBlock*retaddr *label248 (h:*label248)
 
   878 sensor *tmp357 .smelter @coal
   879 jump *label251 greaterThanEq *tmp357 5
   880 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label253 (h:*label253)
-    * call *label6 *invalid :status1*retval (m:*label253) (h:*label253)
-    * label *label253
+  881 label *label419
+  882 write :status1:text .display ".status1"
+  883 label *label420
   884 set :supplyBlock:block .smelter
   885 set :supplyBlock:ore @coal
   886 setaddr :supplyBlock*retaddr *label254 (h:*label254)
 
   892 sensor *tmp360 .smelter @sand
   893 jump *label255 greaterThanEq *tmp360 5
   894 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label257 (h:*label257)
-    * call *label6 *invalid :status1*retval (m:*label257) (h:*label257)
-    * label *label257
+  895 label *label421
+  896 write :status1:text .display ".status1"
+  897 label *label422
   898 set :supplyBlock:block .smelter
   899 set :supplyBlock:ore @sand
   900 setaddr :supplyBlock*retaddr *label258 (h:*label258)
 
   911 sensor *tmp366 .generator @coal
   912 jump *label261 greaterThanEq *tmp366 2
   913 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label263 (h:*label263)
-    * call *label6 *invalid :status1*retval (m:*label263) (h:*label263)
-    * label *label263
+  914 label *label423
+  915 write :status1:text .display ".status1"
+  916 label *label424
   917 set :supplyBlock:block .generator
   918 set :supplyBlock:ore @coal
   919 setaddr :supplyBlock*retaddr *label264 (h:*label264)
 
   941 op mul *tmp381 .unloader1 .powerTarget
   942 jump *label271 greaterThanEq *tmp380 *tmp381
   943 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label273 (h:*label273)
-    * call *label6 *invalid :status1*retval (m:*label273) (h:*label273)
-    * label *label273
+  944 label *label425
+  945 write :status1:text .display ".status1"
+  946 label *label426
   947 set :mineOre.1:ore @coal
   948 setaddr :mineOre.1*retaddr *label274 (h:*label274)
   949 call *label18 *invalid :mineOre.1*retval (m:*label274) (h:*label274)
 
   953 sensor *tmp384 .core @silicon
   954 jump *label275 greaterThanEq *tmp384 .targetSilicon
   955 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label277 (h:*label277)
-    * call *label6 *invalid :status1*retval (m:*label277) (h:*label277)
-    * label *label277
+  956 label *label427
+  957 write :status1:text .display ".status1"
+  958 label *label428
   959 sensor :supplyBase0:coal .core @coal
   960 sensor :supplyBase0:sand .core @sand
   961 set :mineOre.1:ore @sand
 
   971 sensor *tmp391 .core @copper
   972 jump *label281 greaterThanEq *tmp391 .targetCopper
   973 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label283 (h:*label283)
-    * call *label6 *invalid :status1*retval (m:*label283) (h:*label283)
-    * label *label283
+  974 label *label429
+  975 write :status1:text .display ".status1"
+  976 label *label430
   977 set :mineOre.1:ore @copper
   978 setaddr :mineOre.1*retaddr *label284 (h:*label284)
   979 call *label18 *invalid :mineOre.1*retval (m:*label284) (h:*label284)
 
   983 sensor *tmp394 .core @lead
   984 jump *label285 greaterThanEq *tmp394 .targetLead
   985 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label287 (h:*label287)
-    * call *label6 *invalid :status1*retval (m:*label287) (h:*label287)
-    * label *label287
+  986 label *label431
+  987 write :status1:text .display ".status1"
+  988 label *label432
   989 set :mineOre.1:ore @lead
   990 setaddr :mineOre.1*retaddr *label288 (h:*label288)
   991 call *label18 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
 
   995 sensor *tmp397 .core @metaglass
   996 jump *label289 greaterThanEq *tmp397 .targetMetaglass
   997 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label291 (h:*label291)
-    * call *label6 *invalid :status1*retval (m:*label291) (h:*label291)
-    * label *label291
+  998 label *label433
+  999 write :status1:text .display ".status1"
+ 1000 label *label434
  1001 set :mineOre.1:ore @sand
  1002 setaddr :mineOre.1*retaddr *label292 (h:*label292)
  1003 call *label18 *invalid :mineOre.1*retval (m:*label292) (h:*label292)
 
  1005 jump *label290 always
  1006 label *label289
  1007 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label293 (h:*label293)
-    * call *label6 *invalid :status1*retval (m:*label293) (h:*label293)
-    * label *label293
+ 1008 label *label435
+ 1009 write :status1:text .display ".status1"
+ 1010 label *label436
  1011 sensor :supplyBase0:coal.1 .core @coal
  1012 sensor :supplyBase0:sand.1 .core @sand
  1013 set :mineOre.1:ore @sand
 
  1028 jump *label268 always
  1029 label *label267
  1030 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label297 (h:*label297)
-    * call *label6 *invalid :status1*retval (m:*label297) (h:*label297)
-    * label *label297
+ 1031 label *label437
+ 1032 write :status1:text .display ".status1"
+ 1033 label *label438
  1034 set :fetchBlock:block .titaniumDrill
  1035 set :fetchBlock:item @titanium
  1036 setaddr :fetchBlock*retaddr *label298 (h:*label298)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   825 jump *label229 equal .thoriumContainer false
   826 set :status1:text "Phase 2: servicing thorium drill"
   827 label *label413
-    * write :status1:text .display ".status1"
+  828 write "Phase 2: servicing thorium drill" .display ".status1"
   829 label *label414
   830 set :supplyBlockFromCore:target .thoriumGenerator
   831 set :supplyBlockFromCore:item @coal
 
   844 jump *label235 lessThanEq *tmp86 3
   845 set :status1:text "Phase 1: supplying base"
   846 label *label415
-    * write :status1:text .display ".status1"
+  847 write "Phase 1: supplying base" .display ".status1"
   848 label *label416
   849 set :mineOre.1:ore @coal
   850 setaddr :mineOre.1*retaddr *label239 (h:*label239)
 
   861 jump *label245 greaterThanEq *tmp351 5
   862 set :status1:text "Goal 1: graphite requirement"
   863 label *label417
-    * write :status1:text .display ".status1"
+  864 write "Goal 1: graphite requirement" .display ".status1"
   865 label *label418
   866 set :supplyBlock:block .press
   867 set :supplyBlock:ore @coal
 
   879 jump *label251 greaterThanEq *tmp357 5
   880 set :status1:text "Goal 2: coal for silicon requirement"
   881 label *label419
-    * write :status1:text .display ".status1"
+  882 write "Goal 2: coal for silicon requirement" .display ".status1"
   883 label *label420
   884 set :supplyBlock:block .smelter
   885 set :supplyBlock:ore @coal
 
   893 jump *label255 greaterThanEq *tmp360 5
   894 set :status1:text "Goal 3: sand for silicon requirement"
   895 label *label421
-    * write :status1:text .display ".status1"
+  896 write "Goal 3: sand for silicon requirement" .display ".status1"
   897 label *label422
   898 set :supplyBlock:block .smelter
   899 set :supplyBlock:ore @sand
 
   912 jump *label261 greaterThanEq *tmp366 2
   913 set :status1:text "Goal 4: supplying generator"
   914 label *label423
-    * write :status1:text .display ".status1"
+  915 write "Goal 4: supplying generator" .display ".status1"
   916 label *label424
   917 set :supplyBlock:block .generator
   918 set :supplyBlock:ore @coal
 
   942 jump *label271 greaterThanEq *tmp380 *tmp381
   943 set :status1:text "Goal 5: supplying generator"
   944 label *label425
-    * write :status1:text .display ".status1"
+  945 write "Goal 5: supplying generator" .display ".status1"
   946 label *label426
   947 set :mineOre.1:ore @coal
   948 setaddr :mineOre.1*retaddr *label274 (h:*label274)
 
   954 jump *label275 greaterThanEq *tmp384 .targetSilicon
   955 set :status1:text "Goal 6: silicon requirement"
   956 label *label427
-    * write :status1:text .display ".status1"
+  957 write "Goal 6: silicon requirement" .display ".status1"
   958 label *label428
   959 sensor :supplyBase0:coal .core @coal
   960 sensor :supplyBase0:sand .core @sand
 
   972 jump *label281 greaterThanEq *tmp391 .targetCopper
   973 set :status1:text "Goal 7: copper requirement"
   974 label *label429
-    * write :status1:text .display ".status1"
+  975 write "Goal 7: copper requirement" .display ".status1"
   976 label *label430
   977 set :mineOre.1:ore @copper
   978 setaddr :mineOre.1*retaddr *label284 (h:*label284)
 
   984 jump *label285 greaterThanEq *tmp394 .targetLead
   985 set :status1:text "Goal 8: lead requirement"
   986 label *label431
-    * write :status1:text .display ".status1"
+  987 write "Goal 8: lead requirement" .display ".status1"
   988 label *label432
   989 set :mineOre.1:ore @lead
   990 setaddr :mineOre.1*retaddr *label288 (h:*label288)
 
   996 jump *label289 greaterThanEq *tmp397 .targetMetaglass
   997 set :status1:text "Goal 9: metaglass requirement"
   998 label *label433
-    * write :status1:text .display ".status1"
+  999 write "Goal 9: metaglass requirement" .display ".status1"
  1000 label *label434
  1001 set :mineOre.1:ore @sand
  1002 setaddr :mineOre.1*retaddr *label292 (h:*label292)
 
  1006 label *label289
  1007 set :status1:text "Goal 10: supplying base"
  1008 label *label435
-    * write :status1:text .display ".status1"
+ 1009 write "Goal 10: supplying base" .display ".status1"
  1010 label *label436
  1011 sensor :supplyBase0:coal.1 .core @coal
  1012 sensor :supplyBase0:sand.1 .core @sand
 
  1029 label *label267
  1030 set :status1:text "Goal 11: Fetching titanium"
  1031 label *label437
-    * write :status1:text .display ".status1"
+ 1032 write "Goal 11: Fetching titanium" .display ".status1"
  1033 label *label438
  1034 set :fetchBlock:block .titaniumDrill
  1035 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   823 label *label225
   824 label *label226
   825 jump *label229 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   826 label *label413
   827 write "Phase 2: servicing thorium drill" .display ".status1"
   828 label *label414
 
   841 label *label229
   842 read *tmp86 .controller ".monos"
   843 jump *label235 lessThanEq *tmp86 3
-    * set :status1:text "Phase 1: supplying base"
   844 label *label415
   845 write "Phase 1: supplying base" .display ".status1"
   846 label *label416
 
   857 jump *label243 greaterThanEq *tmp348 .targetGraphite
   858 sensor *tmp351 .press @coal
   859 jump *label245 greaterThanEq *tmp351 5
-    * set :status1:text "Goal 1: graphite requirement"
   860 label *label417
   861 write "Goal 1: graphite requirement" .display ".status1"
   862 label *label418
 
   874 jump *label249 greaterThanEq *tmp354 .targetSilicon
   875 sensor *tmp357 .smelter @coal
   876 jump *label251 greaterThanEq *tmp357 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   877 label *label419
   878 write "Goal 2: coal for silicon requirement" .display ".status1"
   879 label *label420
 
   887 label *label251
   888 sensor *tmp360 .smelter @sand
   889 jump *label255 greaterThanEq *tmp360 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   890 label *label421
   891 write "Goal 3: sand for silicon requirement" .display ".status1"
   892 label *label422
 
   905 jump *label259 greaterThanEq *tmp363 .powerTarget
   906 sensor *tmp366 .generator @coal
   907 jump *label261 greaterThanEq *tmp366 2
-    * set :status1:text "Goal 4: supplying generator"
   908 label *label423
   909 write "Goal 4: supplying generator" .display ".status1"
   910 label *label424
 
   934 sensor *tmp380 .battery @totalPower
   935 op mul *tmp381 .unloader1 .powerTarget
   936 jump *label271 greaterThanEq *tmp380 *tmp381
-    * set :status1:text "Goal 5: supplying generator"
   937 label *label425
   938 write "Goal 5: supplying generator" .display ".status1"
   939 label *label426
 
   945 label *label271
   946 sensor *tmp384 .core @silicon
   947 jump *label275 greaterThanEq *tmp384 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   948 label *label427
   949 write "Goal 6: silicon requirement" .display ".status1"
   950 label *label428
 
   962 label *label275
   963 sensor *tmp391 .core @copper
   964 jump *label281 greaterThanEq *tmp391 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   965 label *label429
   966 write "Goal 7: copper requirement" .display ".status1"
   967 label *label430
 
   973 label *label281
   974 sensor *tmp394 .core @lead
   975 jump *label285 greaterThanEq *tmp394 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   976 label *label431
   977 write "Goal 8: lead requirement" .display ".status1"
   978 label *label432
 
   984 label *label285
   985 sensor *tmp397 .core @metaglass
   986 jump *label289 greaterThanEq *tmp397 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   987 label *label433
   988 write "Goal 9: metaglass requirement" .display ".status1"
   989 label *label434
 
   993 label *label292
   994 jump *label290 always
   995 label *label289
-    * set :status1:text "Goal 10: supplying base"
   996 label *label435
   997 write "Goal 10: supplying base" .display ".status1"
   998 label *label436
 
  1015 label *label270
  1016 jump *label268 always
  1017 label *label267
-    * set :status1:text "Goal 11: Fetching titanium"
  1018 label *label437
  1019 write "Goal 11: Fetching titanium" .display ".status1"
  1020 label *label438

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:73:1 (-4 instructions):
 
   532 label *label155
   533 return :dropAll*retaddr
   534 end
-    * label *label14
-    * sensor *tmp241 :moveToBlock:block @x
-    * sensor *tmp242 :moveToBlock:block @y
-    * set :moveTo:x *tmp241
-    * set :moveTo:y *tmp242
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label160 (h:*label160)
-    * call *label11 *invalid :moveTo*retval (m:*label160) (h:*label160)
-    * label *label160
-    * label *label159
-    * return :moveToBlock*retaddr
-    * end
   535 label *label15
   536 label *label409
   537 write "Depositing..." .display ".status3"
 
   540 jump *label163 notEqual *tmp243 :depositItems:item
   541 set :moveToBlock:block :depositItems:block
   542 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label165 (h:*label165)
-    * call *label14 *invalid :moveToBlock*retval (m:*label165) (h:*label165)
-    * label *label165
+  543 label *label439
+  544 sensor *tmp241 :moveToBlock:block @x
+  545 sensor *tmp242 :moveToBlock:block @y
+  546 set :moveTo:x *tmp241
+  547 set :moveTo:y *tmp242
+  548 set :moveTo:radius :moveToBlock:radius
+  549 setaddr :moveTo*retaddr *label440 (h:*label440)
+  550 call *label11 *invalid :moveTo*retval (m:*label440) (h:*label440)
+  551 label *label440
+  552 label *label441
   553 sensor :depositItems:cap :depositItems:block @itemCapacity
   554 label *label166
   555 ucontrol itemDrop :depositItems:block 30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   541 set :moveToBlock:block :depositItems:block
   542 set :moveToBlock:radius 6
   543 label *label439
-    * sensor *tmp241 :moveToBlock:block @x
-    * sensor *tmp242 :moveToBlock:block @y
+  544 sensor *tmp241 :depositItems:block @x
+  545 sensor *tmp242 :depositItems:block @y
   546 set :moveTo:x *tmp241
   547 set :moveTo:y *tmp242
-    * set :moveTo:radius :moveToBlock:radius
+  548 set :moveTo:radius 6
   549 setaddr :moveTo*retaddr *label440 (h:*label440)
   550 call *label11 *invalid :moveTo*retval (m:*label440) (h:*label440)
   551 label *label440

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   538 label *label410
   539 sensor *tmp243 @unit @firstItem
   540 jump *label163 notEqual *tmp243 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   541 label *label439
   542 sensor *tmp241 :depositItems:block @x
   543 sensor *tmp242 :depositItems:block @y

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 (-4 instructions):
 
   729 label *label207
   730 return :supplyBlock*retaddr
   731 end
-    * label *label21
-    * sensor *tmp290 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp290 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label213 (h:*label213)
-    * call *label9 *invalid :transportStatus*retval (m:*label213) (h:*label213)
-    * label *label213
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label214 (h:*label214)
-    * call *label7 *invalid :status2*retval (m:*label214) (h:*label214)
-    * label *label214
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label215 (h:*label215)
-    * call *label12 *invalid :moveToEmpty*retval (m:*label215) (h:*label215)
-    * label *label215
-    * setaddr :dropAll*retaddr *label216 (h:*label216)
-    * call *label13 *invalid :dropAll*retval (m:*label216) (h:*label216)
-    * label *label216
-    * label *label217
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp293 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp294 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp295 *tmp293 *tmp294
-    * jump *label220 equal *tmp295 false
-    * ucontrol itemDrop @air 1000
-    * label *label220
-    * label *label221
-    * label *label218
-    * sensor *tmp297 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp298 *tmp297 30
-    * sensor *tmp299 .core :supplyBlockFromCore:item
-    * op land *tmp300 *tmp298 *tmp299
-    * jump *label217 notEqual *tmp300 false
-    * label *label219
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label222 (h:*label222)
-    * call *label15 *invalid :depositItems*retval (m:*label222) (h:*label222)
-    * label *label222
-    * label *label212
-    * return :supplyBlockFromCore*retaddr
-    * end
   732 label *label27
   733 read *tmp302 :unpackCfg:cfg 0
   734 op sub *tmp303 *tmp302 35
 
   775 label *label414
   776 set :supplyBlockFromCore:target .thoriumGenerator
   777 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label233 (h:*label233)
-    * call *label21 *invalid :supplyBlockFromCore*retval (m:*label233) (h:*label233)
-    * label *label233
+  778 label *label442
+  779 sensor *tmp290 :supplyBlockFromCore:target @itemCapacity
+  780 op min :transportStatus:target *tmp290 30
+  781 set :transportStatus:item :supplyBlockFromCore:item
+  782 setaddr :transportStatus*retaddr *label443 (h:*label443)
+  783 call *label9 *invalid :transportStatus*retval (m:*label443) (h:*label443)
+  784 label *label443
+  785 set :status2:text "Transferring "
+  786 set :status2:item :supplyBlockFromCore:item
+  787 set :status2:block :supplyBlockFromCore:target
+  788 setaddr :status2*retaddr *label444 (h:*label444)
+  789 call *label7 *invalid :status2*retval (m:*label444) (h:*label444)
+  790 label *label444
+  791 set :moveToEmpty:x .coreX
+  792 set :moveToEmpty:y .coreY
+  793 setaddr :moveToEmpty*retaddr *label445 (h:*label445)
+  794 call *label12 *invalid :moveToEmpty*retval (m:*label445) (h:*label445)
+  795 label *label445
+  796 setaddr :dropAll*retaddr *label446 (h:*label446)
+  797 call *label13 *invalid :dropAll*retval (m:*label446) (h:*label446)
+  798 label *label446
+  799 label *label447
+  800 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  801 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  802 op notEqual *tmp293 :supplyBlockFromCore:unitItem null
+  803 op notEqual *tmp294 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  804 op land *tmp295 *tmp293 *tmp294
+  805 jump *label448 equal *tmp295 false
+  806 ucontrol itemDrop @air 1000
+  807 label *label448
+  808 label *label449
+  809 label *label450
+  810 sensor *tmp297 @unit :supplyBlockFromCore:item
+  811 op lessThan *tmp298 *tmp297 30
+  812 sensor *tmp299 .core :supplyBlockFromCore:item
+  813 op land *tmp300 *tmp298 *tmp299
+  814 jump *label447 notEqual *tmp300 false
+  815 label *label451
+  816 set :depositItems:block :supplyBlockFromCore:target
+  817 set :depositItems:item :supplyBlockFromCore:item
+  818 setaddr :depositItems*retaddr *label452 (h:*label452)
+  819 call *label15 *invalid :depositItems*retval (m:*label452) (h:*label452)
+  820 label *label452
+  821 label *label453
   822 set :fetchBlock:block .thoriumContainer
   823 set :fetchBlock:item @thorium
   824 setaddr :fetchBlock*retaddr *label234 (h:*label234)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   776 set :supplyBlockFromCore:target .thoriumGenerator
   777 set :supplyBlockFromCore:item @coal
   778 label *label442
-    * sensor *tmp290 :supplyBlockFromCore:target @itemCapacity
+  779 sensor *tmp290 .thoriumGenerator @itemCapacity
   780 op min :transportStatus:target *tmp290 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  781 set :transportStatus:item @coal
   782 setaddr :transportStatus*retaddr *label443 (h:*label443)
   783 call *label9 *invalid :transportStatus*retval (m:*label443) (h:*label443)
   784 label *label443

Modifications by Inline function 'locateOre' defined at Actions.mnd:98:1 (-4 instructions):
 
   575 label *label161
   576 return :depositItems*retaddr
   577 end
-    * label *label16
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 0
-    * jump *label174 notEqual *tmp253 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label176 (h:*label176)
-    * call *label10 *invalid :error*retval (m:*label176) (h:*label176)
-    * label *label176
-    * label *label174
-    * label *label175
-    * label *label173
-    * return :locateOre*retaddr
-    * end
   578 label *label17
   579 op min :mineOre:amount :mineOre:amount 30
   580 set :transportStatus:target :mineOre:amount
 
   583 call *label9 *invalid :transportStatus*retval (m:*label178) (h:*label178)
   584 label *label178
   585 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label179 (h:*label179)
-    * call *label16 *invalid :locateOre*retval (m:*label179) (h:*label179)
-    * label *label179
+  586 label *label454
+  587 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 0
+  588 jump *label456 notEqual *tmp253 false
+  589 set :error:error "Cannot locate ore"
+  590 setaddr :error*retaddr *label455 (h:*label455)
+  591 call *label10 *invalid :error*retval (m:*label455) (h:*label455)
+  592 label *label455
+  593 label *label456
+  594 label *label457
+  595 label *label458
   596 set :mineOre:x :locateOre:x
   597 set :mineOre:y :locateOre:y
   598 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   584 label *label178
   585 set :locateOre:ore :mineOre:ore
   586 label *label454
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp253 0
+  587 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp253 0
   588 jump *label456 notEqual *tmp253 false
   589 set :error:error "Cannot locate ore"
   590 setaddr :error*retaddr *label455 (h:*label455)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   582 setaddr :transportStatus*retaddr *label178 (h:*label178)
   583 call *label9 *invalid :transportStatus*retval (m:*label178) (h:*label178)
   584 label *label178
-    * set :locateOre:ore :mineOre:ore
   585 label *label454
   586 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp253 0
   587 jump *label456 notEqual *tmp253 false

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-7 instructions):
 
    94 read *tmp135 processor5 ":buildBlockAt*finished"
    95 jump *label54 equal *tmp135 false
    96 read *tmp115 processor5 ":buildBlockAt*retval"
-    * jump *label48 always
    97 label *label48
    98 set .titaniumDrill *tmp115
    99 write *tmp115 processor1 ".titaniumDrill"
 
   907 sensor *tmp372 .core @titanium
   908 op sub *tmp373 .targetTitanium *tmp372
   909 op min *tmp371 7 *tmp373
-    * jump *label266 always
   910 label *label266
   911 sensor *tmp375 .titaniumDrill @titanium
   912 jump *label267 greaterThanEq *tmp375 *tmp371
 
   933 set :mineOre.1:ore @sand
   934 jump *label279 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   935 set :mineOre.1:ore @coal
-    * jump *label279 always
   936 label *label279
   937 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   938 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
 
   980 set :mineOre.1:ore @sand
   981 jump *label295 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   982 set :mineOre.1:ore @coal
-    * jump *label295 always
   983 label *label295
   984 setaddr :mineOre.1*retaddr *label296 (h:*label296)
   985 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
 
  1146 read *tmp458 .blockBuilder ":buildBlockAt*finished"
  1147 jump *label334 equal *tmp458 false
  1148 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label332 always
  1149 label *label332
  1150 return :buildBlock*retaddr
  1151 end
 
  1202 call *label30 *invalid :buildBlock*retval (m:*label342) (h:*label342)
  1203 label *label342
  1204 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label340 always
  1205 label *label340
  1206 return :buildBlockFromCfg*retaddr
  1207 end
 
  1236 end
  1237 label *label36
  1238 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * jump *label353 always
  1239 label *label353
  1240 jump *label354 notEqual :getFloor:floor @ore-titanium
  1241 label *label355

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-3 instructions):
 
   306 op add *tmp192 :buildTitaniumDrills:x 1
   307 set :buildTitaniumDrill:x *tmp192
   308 set :buildTitaniumDrill:y *tmp191
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   309 setaddr :buildTitaniumDrill*retaddr *label104 (h:*label104)
   310 call *label37 *invalid :buildTitaniumDrill*retval (m:*label104) (h:*label104)
   311 label *label104
   312 op add *tmp195 :buildTitaniumDrills:y 1
   313 set :buildTitaniumDrill:x *tmp190
   314 set :buildTitaniumDrill:y *tmp195
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   315 setaddr :buildTitaniumDrill*retaddr *label105 (h:*label105)
   316 call *label37 *invalid :buildTitaniumDrill*retval (m:*label105) (h:*label105)
   317 label *label105
   318 set :buildTitaniumDrill:x *tmp192
   319 set :buildTitaniumDrill:y *tmp195
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   320 setaddr :buildTitaniumDrill*retaddr *label106 (h:*label106)
   321 call *label37 *invalid :buildTitaniumDrill*retval (m:*label106) (h:*label106)
   322 label *label106
 
  1008 label *label29
  1009 label *label376
  1010 op sign *tmp405 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp405
+ 1011 set :meetTarget:count *tmp405
  1012 label *label377
  1013 label *label380
  1014 op sign *tmp405 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1007 end
  1008 label *label29
  1009 label *label376
-    * op sign *tmp405 :meetTarget:copper
-    * set :meetTarget:count *tmp405
+ 1010 op sign :meetTarget:count :meetTarget:copper
  1011 label *label377
  1012 label *label380
  1013 op sign *tmp405 :meetTarget:lead

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    18 ubind @poly
    19 set .builder @unit
    20 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label40
    21 jump *label39 equal .core null
-    * label *label41
    22 set .display processor1
    23 set .flareController processor3
    24 set .blockBuilder processor5
 
    78 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    79 label *label53
    80 label *label51
-    * label *label52
    81 write @pneumatic-drill processor1 ".nextBlock"
    82 write @pneumatic-drill processor5 ":buildBlockAt:block"
    83 write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt:x"
 
    91 read *tmp135 processor5 ":buildBlockAt*finished"
    92 jump *label54 equal *tmp135 false
    93 read *tmp115 processor5 ":buildBlockAt*retval"
-    * label *label48
    94 set .titaniumDrill *tmp115
    95 write *tmp115 processor1 ".titaniumDrill"
    96 set :buildBlockFromCfg.1:cfg "*,###A<###"
 
   155 jump *label67 greaterThanEq *tmp144 300
   156 jump *label65 always
   157 label *label67
-    * label *label68
-    * label *label64
   158 read *tmp86 .controller ".monos"
   159 jump *label63 lessThan *tmp86 3
   160 label *label65
 
   243 setaddr :supplyBase*retaddr *label89 (h:*label89)
   244 call *label28 *invalid :supplyBase*retval (m:*label89) (h:*label89)
   245 label *label89
-    * label *label87
   246 jump *label86 always
   247 label *label88
   248 write 3 .controller ".flareTarget"
 
   252 setaddr :supplyBase*retaddr *label93 (h:*label93)
   253 call *label28 *invalid :supplyBase*retval (m:*label93) (h:*label93)
   254 label *label93
-    * label *label91
   255 jump *label90 always
   256 label *label92
   257 write 8 .controller ".monoTarget"
 
   272 write 1 processor4 "@counter"
   273 ubind .builder
   274 set :buildTitaniumDrills:count 1
-    * label *label95
   275 label *label375
   276 read *tmp175 processor4 ":findDrillLocation*finished"
   277 op equal :buildTitaniumDrills:searching *tmp175 false
 
   313 label *label106
   314 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   315 label *label101
-    * label *label102
   316 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label99
   317 jump *label98 always
   318 label *label100
   319 jump *label107 lessThan :buildTitaniumDrills:count 8
   320 jump *label97 always
   321 label *label107
-    * label *label108
-    * label *label96
   322 jump *label375 notEqual :buildTitaniumDrills:searching false
   323 label *label97
   324 write false processor4 ":stopLocation*finished"
   325 write 3 processor4 "@counter"
-    * label *label94
   326 write null processor1 ".nextBlock"
   327 write .coreX processor4 ":layoutThoriumDrill:x"
   328 write .coreY processor4 ":layoutThoriumDrill:y"
 
   349 call *label10 *invalid :error*retval (m:*label115) (h:*label115)
   350 label *label115
   351 label *label113
-    * label *label114
   352 write @laser-drill processor5 ":buildBlockAt:block"
   353 read *tmp48 processor4 ".drillX"
   354 write *tmp48 processor5 ":buildBlockAt:x"
 
   409 jump *label124 notEqual :buildRemoteBlock*retval null
   410 set .thoriumContainer .thoriumDrill
   411 label *label124
-    * label *label125
   412 write .thoriumDrill processor1 ".thoriumDrill"
   413 write .thoriumContainer processor1 ".thoriumContainer"
-    * label *label109
   414 write null processor1 ".nextBlock"
   415 write 1 .controller ".megaTarget"
   416 label *label126
 
   419 setaddr :supplyBase*retaddr *label129 (h:*label129)
   420 call *label28 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   421 label *label129
-    * label *label127
   422 jump *label126 always
   423 label *label128
   424 set :buildBlockFromCfg:cfg "+(###A<###"
 
   443 setaddr :supplyBase*retaddr *label137 (h:*label137)
   444 call *label28 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   445 label *label137
-    * label *label135
   446 jump *label134 always
-    * label *label136
   447 end
   448 label *label7
   449 write :status2:text .display ".status2"
   450 write :status2:item .display ".item2"
   451 write :status2:block .display ".block2"
-    * label *label139
   452 return :status2*retaddr
   453 end
   454 label *label9
   455 write :transportStatus:target .display ".transportTarget"
   456 write :transportStatus:item .display ".transportItem"
-    * label *label141
   457 return :transportStatus*retaddr
   458 end
   459 label *label10
   460 set .ERROR :error:error
   461 stop
-    * label *label142
   462 return :error*retaddr
   463 end
   464 label *label11
-    * label *label405
   465 write "Moving..." .display ".status3"
-    * label *label406
   466 op sub *tmp233 :moveTo:radius 0.5
   467 label *label145
   468 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp231
   469 jump *label147 notEqual *tmp231 false
   470 ucontrol approach :moveTo:x :moveTo:y *tmp233
-    * label *label146
   471 jump *label145 always
   472 label *label147
-    * label *label143
   473 return :moveTo*retaddr
   474 end
   475 label *label12
-    * label *label407
   476 write "Moving..." .display ".status3"
-    * label *label408
   477 label *label150
   478 sensor *tmp234 @unit @firstItem
   479 jump *label153 equal *tmp234 null
   480 ucontrol itemDrop @air 1000
   481 label *label153
-    * label *label154
   482 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label151
   483 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp237
   484 jump *label150 equal *tmp237 false
-    * label *label152
-    * label *label148
   485 return :moveToEmpty*retaddr
   486 end
   487 label *label13
 
   489 sensor *tmp239 @unit @firstItem
   490 jump *label158 equal *tmp239 null
   491 ucontrol itemDrop @air 1000
-    * label *label157
   492 jump *label156 always
   493 label *label158
-    * label *label155
   494 return :dropAll*retaddr
   495 end
   496 label *label15
-    * label *label409
   497 write "Depositing..." .display ".status3"
-    * label *label410
   498 sensor *tmp243 @unit @firstItem
   499 jump *label163 notEqual *tmp243 :depositItems:item
-    * label *label439
   500 sensor *tmp241 :depositItems:block @x
   501 sensor *tmp242 :depositItems:block @y
   502 set :moveTo:x *tmp241
 
   505 setaddr :moveTo*retaddr *label440 (h:*label440)
   506 call *label11 *invalid :moveTo*retval (m:*label440) (h:*label440)
   507 label *label440
-    * label *label441
   508 sensor :depositItems:cap :depositItems:block @itemCapacity
   509 label *label166
   510 ucontrol itemDrop :depositItems:block 30
-    * label *label167
   511 sensor *tmp247 @unit @firstItem
   512 op mul *tmp248 *tmp247 :depositItems:cap
   513 sensor *tmp249 :depositItems:block :depositItems:item
   514 jump *label166 greaterThan *tmp248 *tmp249
-    * label *label168
   515 jump *label164 always
   516 label *label163
   517 label *label169
   518 sensor *tmp251 @unit @firstItem
   519 jump *label171 equal *tmp251 null
   520 ucontrol itemDrop @air 1000
-    * label *label170
   521 jump *label169 always
   522 label *label171
   523 label *label164
 
   526 setaddr :transportStatus*retaddr *label172 (h:*label172)
   527 call *label9 *invalid :transportStatus*retval (m:*label172) (h:*label172)
   528 label *label172
-    * label *label161
   529 return :depositItems*retaddr
   530 end
   531 label *label17
 
   535 setaddr :transportStatus*retaddr *label178 (h:*label178)
   536 call *label9 *invalid :transportStatus*retval (m:*label178) (h:*label178)
   537 label *label178
-    * label *label454
   538 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp253 0
   539 jump *label456 notEqual *tmp253 false
   540 set :error:error "Cannot locate ore"
 
   542 call *label10 *invalid :error*retval (m:*label455) (h:*label455)
   543 label *label455
   544 label *label456
-    * label *label457
-    * label *label458
   545 set :mineOre:x :locateOre:x
   546 set :mineOre:y :locateOre:y
   547 set :moveToEmpty:x :locateOre:x
 
   555 call *label13 *invalid :dropAll*retval (m:*label183) (h:*label183)
   556 label *label183
   557 label *label181
-    * label *label182
-    * label *label411
   558 write "Mining..." .display ".status3"
-    * label *label412
   559 op add :mineOre:stop @second 10
   560 label *label185
   561 sensor :mineOre:item @unit @firstItem
 
   565 jump *label188 equal *tmp265 false
   566 jump *label187 always
   567 label *label188
-    * label *label189
   568 ucontrol mine :mineOre:x :mineOre:y
   569 jump *label190 lessThanEq @second :mineOre:stop
   570 jump *label187 always
   571 label *label190
-    * label *label191
-    * label *label186
   572 sensor *tmp269 @unit @totalItems
   573 jump *label185 lessThan *tmp269 :mineOre:amount
   574 label *label187
 
   578 setaddr :depositItems*retaddr *label192 (h:*label192)
   579 call *label15 *invalid :depositItems*retval (m:*label192) (h:*label192)
   580 label *label192
-    * label *label177
   581 return :mineOre*retaddr
   582 end
   583 label *label18
 
   593 setaddr :mineOre*retaddr *label195 (h:*label195)
   594 call *label17 *invalid :mineOre*retval (m:*label195) (h:*label195)
   595 label *label195
-    * label *label193
   596 return :mineOre.1*retaddr
   597 end
   598 label *label19
 
   627 jump *label204 equal *tmp279 false
   628 ucontrol itemDrop @air 1000
   629 label *label204
-    * label *label205
-    * label *label202
   630 sensor *tmp281 @unit :fetchBlock:item
   631 op lessThan *tmp282 *tmp281 30
   632 sensor *tmp283 :fetchBlock:block :fetchBlock:item
   633 op land *tmp284 *tmp282 *tmp283
   634 jump *label201 notEqual *tmp284 false
-    * label *label203
   635 set :depositItems:block .core
   636 set :depositItems:item :fetchBlock:item
   637 setaddr :depositItems*retaddr *label206 (h:*label206)
   638 call *label15 *invalid :depositItems*retval (m:*label206) (h:*label206)
   639 label *label206
-    * label *label196
   640 return :fetchBlock*retaddr
   641 end
   642 label *label20
 
   657 call *label17 *invalid :mineOre*retval (m:*label211) (h:*label211)
   658 label *label211
   659 label *label209
-    * label *label210
-    * label *label207
   660 return :supplyBlock*retaddr
   661 end
   662 label *label27
 
   683 op sub :unpackCfg:th *tmp332 35
   684 read *tmp335 :unpackCfg:cfg 10
   685 op sub :unpackCfg:rotation *tmp335 35
-    * label *label223
   686 return :unpackCfg*retaddr
   687 end
   688 label *label28
 
   695 write false .flareController ":start*finished"
   696 write 2 .flareController "@counter"
   697 label *label227
-    * label *label228
   698 label *label225
-    * label *label226
   699 jump *label229 equal .thoriumContainer false
-    * label *label413
   700 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label414
   701 set :supplyBlockFromCore:target .thoriumGenerator
   702 set :supplyBlockFromCore:item @coal
-    * label *label442
   703 sensor *tmp290 .thoriumGenerator @itemCapacity
   704 op min :transportStatus:target *tmp290 30
   705 set :transportStatus:item @coal
 
   729 jump *label448 equal *tmp295 false
   730 ucontrol itemDrop @air 1000
   731 label *label448
-    * label *label449
-    * label *label450
   732 sensor *tmp297 @unit :supplyBlockFromCore:item
   733 op lessThan *tmp298 *tmp297 30
   734 sensor *tmp299 .core :supplyBlockFromCore:item
   735 op land *tmp300 *tmp298 *tmp299
   736 jump *label447 notEqual *tmp300 false
-    * label *label451
   737 set :depositItems:block :supplyBlockFromCore:target
   738 set :depositItems:item :supplyBlockFromCore:item
   739 setaddr :depositItems*retaddr *label452 (h:*label452)
   740 call *label15 *invalid :depositItems*retval (m:*label452) (h:*label452)
   741 label *label452
-    * label *label453
   742 set :fetchBlock:block .thoriumContainer
   743 set :fetchBlock:item @thorium
   744 setaddr :fetchBlock*retaddr *label234 (h:*label234)
   745 call *label19 *invalid :fetchBlock*retval (m:*label234) (h:*label234)
   746 label *label234
-    * label *label231
   747 jump *label230 always
   748 label *label229
   749 read *tmp86 .controller ".monos"
   750 jump *label235 lessThanEq *tmp86 3
-    * label *label415
   751 write "Phase 1: supplying base" .display ".status1"
-    * label *label416
   752 set :mineOre.1:ore @coal
   753 setaddr :mineOre.1*retaddr *label239 (h:*label239)
   754 call *label18 *invalid :mineOre.1*retval (m:*label239) (h:*label239)
   755 label *label239
-    * label *label237
   756 jump *label236 always
   757 label *label235
   758 set :supplyBase0:supplied false
 
   761 jump *label243 greaterThanEq *tmp348 .targetGraphite
   762 sensor *tmp351 .press @coal
   763 jump *label245 greaterThanEq *tmp351 5
-    * label *label417
   764 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label418
   765 set :supplyBlock:block .press
   766 set :supplyBlock:ore @coal
   767 setaddr :supplyBlock*retaddr *label248 (h:*label248)
 
   769 label *label248
   770 set :supplyBase0:supplied true
   771 label *label245
-    * label *label246
   772 label *label243
-    * label *label244
   773 sensor *tmp354 .core @silicon
   774 jump *label249 greaterThanEq *tmp354 .targetSilicon
   775 sensor *tmp357 .smelter @coal
   776 jump *label251 greaterThanEq *tmp357 5
-    * label *label419
   777 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label420
   778 set :supplyBlock:block .smelter
   779 set :supplyBlock:ore @coal
   780 setaddr :supplyBlock*retaddr *label254 (h:*label254)
 
   785 label *label251
   786 sensor *tmp360 .smelter @sand
   787 jump *label255 greaterThanEq *tmp360 5
-    * label *label421
   788 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label422
   789 set :supplyBlock:block .smelter
   790 set :supplyBlock:ore @sand
   791 setaddr :supplyBlock*retaddr *label258 (h:*label258)
 
   793 label *label258
   794 set :supplyBase0:supplied true
   795 label *label255
-    * label *label256
   796 label *label252
   797 label *label249
-    * label *label250
   798 sensor *tmp363 .battery @totalPower
   799 jump *label259 greaterThanEq *tmp363 .powerTarget
   800 sensor *tmp366 .generator @coal
   801 jump *label261 greaterThanEq *tmp366 2
-    * label *label423
   802 write "Goal 4: supplying generator" .display ".status1"
-    * label *label424
   803 set :supplyBlock:block .generator
   804 set :supplyBlock:ore @coal
   805 setaddr :supplyBlock*retaddr *label264 (h:*label264)
 
   807 label *label264
   808 set :supplyBase0:supplied true
   809 label *label261
-    * label *label262
   810 label *label259
-    * label *label260
   811 label *label241
-    * label *label242
   812 set *tmp371 100
   813 sensor *tmp369 .core @titanium
   814 jump *label266 greaterThanEq *tmp369 .targetTitanium
 
   822 sensor *tmp380 .battery @totalPower
   823 op mul *tmp381 .unloader1 .powerTarget
   824 jump *label271 greaterThanEq *tmp380 *tmp381
-    * label *label425
   825 write "Goal 5: supplying generator" .display ".status1"
-    * label *label426
   826 set :mineOre.1:ore @coal
   827 setaddr :mineOre.1*retaddr *label274 (h:*label274)
   828 call *label18 *invalid :mineOre.1*retval (m:*label274) (h:*label274)
 
   831 label *label271
   832 sensor *tmp384 .core @silicon
   833 jump *label275 greaterThanEq *tmp384 .targetSilicon
-    * label *label427
   834 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label428
   835 sensor :supplyBase0:coal .core @coal
   836 sensor :supplyBase0:sand .core @sand
   837 set :mineOre.1:ore @sand
 
   845 label *label275
   846 sensor *tmp391 .core @copper
   847 jump *label281 greaterThanEq *tmp391 .targetCopper
-    * label *label429
   848 write "Goal 7: copper requirement" .display ".status1"
-    * label *label430
   849 set :mineOre.1:ore @copper
   850 setaddr :mineOre.1*retaddr *label284 (h:*label284)
   851 call *label18 *invalid :mineOre.1*retval (m:*label284) (h:*label284)
 
   854 label *label281
   855 sensor *tmp394 .core @lead
   856 jump *label285 greaterThanEq *tmp394 .targetLead
-    * label *label431
   857 write "Goal 8: lead requirement" .display ".status1"
-    * label *label432
   858 set :mineOre.1:ore @lead
   859 setaddr :mineOre.1*retaddr *label288 (h:*label288)
   860 call *label18 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
 
   863 label *label285
   864 sensor *tmp397 .core @metaglass
   865 jump *label289 greaterThanEq *tmp397 .targetMetaglass
-    * label *label433
   866 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label434
   867 set :mineOre.1:ore @sand
   868 setaddr :mineOre.1*retaddr *label292 (h:*label292)
   869 call *label18 *invalid :mineOre.1*retval (m:*label292) (h:*label292)
   870 label *label292
   871 jump *label290 always
   872 label *label289
-    * label *label435
   873 write "Goal 10: supplying base" .display ".status1"
-    * label *label436
   874 sensor :supplyBase0:coal.1 .core @coal
   875 sensor :supplyBase0:sand.1 .core @sand
   876 set :mineOre.1:ore @sand
 
   886 label *label276
   887 label *label272
   888 label *label269
-    * label *label270
   889 jump *label268 always
   890 label *label267
-    * label *label437
   891 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label438
   892 set :fetchBlock:block .titaniumDrill
   893 set :fetchBlock:item @titanium
   894 setaddr :fetchBlock*retaddr *label298 (h:*label298)
   895 call *label19 *invalid :fetchBlock*retval (m:*label298) (h:*label298)
   896 label *label298
   897 label *label268
-    * label *label240
   898 label *label236
   899 label *label230
-    * label *label224
   900 return :supplyBase*retaddr
   901 end
   902 label *label29
-    * label *label376
   903 op sign :meetTarget:count :meetTarget:copper
-    * label *label377
-    * label *label380
   904 op sign *tmp405 :meetTarget:lead
   905 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label381
-    * label *label384
   906 op sign *tmp405 :meetTarget:graphite
   907 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label385
-    * label *label388
   908 op sign *tmp405 :meetTarget:silicon
   909 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label389
-    * label *label392
   910 op sign *tmp405 :meetTarget:titanium
   911 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label393
-    * label *label396
   912 op sign *tmp405 :meetTarget:metaglass
   913 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label397
-    * label *label400
   914 op sign *tmp405 :meetTarget:thorium
   915 op add :meetTarget:count :meetTarget:count *tmp405
-    * label *label401
-    * label *label302
   916 write :meetTarget:count .display ".totalTargets"
   917 write :meetTarget:block .display ".nextBlock"
   918 write :meetTarget:copper .display ".targetCopper"
 
   947 set *tmp415 false
   948 jump *label313 always
   949 label *label314
-    * label *label315
   950 sensor *tmp419 .core @lead
   951 jump *label316 greaterThanEq *tmp419 .targetLead
   952 set *tmp415 false
   953 jump *label313 always
   954 label *label316
-    * label *label317
   955 sensor *tmp422 .core @graphite
   956 jump *label318 greaterThanEq *tmp422 .targetGraphite
   957 set *tmp415 false
   958 jump *label313 always
   959 label *label318
-    * label *label319
   960 sensor *tmp425 .core @silicon
   961 jump *label320 greaterThanEq *tmp425 .targetSilicon
   962 set *tmp415 false
   963 jump *label313 always
   964 label *label320
-    * label *label321
   965 sensor *tmp428 .core @titanium
   966 jump *label322 greaterThanEq *tmp428 .targetTitanium
   967 set *tmp415 false
   968 jump *label313 always
   969 label *label322
-    * label *label323
   970 sensor *tmp431 .core @metaglass
   971 jump *label324 greaterThanEq *tmp431 .targetMetaglass
   972 set *tmp415 false
   973 jump *label313 always
   974 label *label324
-    * label *label325
   975 sensor *tmp434 .core @thorium
   976 jump *label326 greaterThanEq *tmp434 .targetThorium
   977 set *tmp415 false
   978 jump *label313 always
   979 label *label326
-    * label *label327
   980 set *tmp415 true
   981 jump *label313 always
   982 label *label313
 
   984 setaddr :supplyBase*retaddr *label328 (h:*label328)
   985 call *label28 *invalid :supplyBase*retval (m:*label328) (h:*label328)
   986 label *label328
-    * label *label311
   987 jump *label310 always
   988 label *label312
-    * label *label299
   989 return :meetTarget*retaddr
   990 end
   991 label *label30
 
  1012 read *tmp458 .blockBuilder ":buildBlockAt*finished"
  1013 jump *label334 equal *tmp458 false
  1014 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label332
  1015 return :buildBlock*retaddr
  1016 end
  1017 label *label31
 
  1038 set :buildRemoteBlock*retval :buildBlock*retval
  1039 jump *label335 always
  1040 label *label336
-    * label *label337
  1041 set :buildRemoteBlock*retval false
  1042 jump *label335 always
  1043 label *label335
 
  1066 call *label30 *invalid :buildBlock*retval (m:*label342) (h:*label342)
  1067 label *label342
  1068 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label340
  1069 return :buildBlockFromCfg*retaddr
  1070 end
  1071 label *label33
 
  1075 call *label32 *invalid :buildBlockFromCfg*retval (m:*label344) (h:*label344)
  1076 label *label344
  1077 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label343
  1078 return :buildBlockFromCfg.1*retaddr
  1079 end
  1080 label *label34
 
  1093 setaddr :meetTarget*retaddr *label347 (h:*label347)
  1094 call *label29 *invalid :meetTarget*retval (m:*label347) (h:*label347)
  1095 label *label347
-    * label *label345
  1096 return :meetTarget.1*retaddr
  1097 end
  1098 label *label36
  1099 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * label *label353
  1100 jump *label354 notEqual :getFloor:floor @ore-titanium
-    * label *label355
  1101 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1102 jump *label352 always
  1103 label *label354
 
  1109 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1110 label *label356
  1111 label *label352
-    * label *label351
  1112 return :titaniumDrillScore*retaddr
  1113 end
  1114 label *label37
 
  1119 setaddr :moveTo*retaddr *label362 (h:*label362)
  1120 call *label11 *invalid :moveTo*retval (m:*label362) (h:*label362)
  1121 label *label362
-    * label *label361
  1122 set .positive 0
  1123 set .negative 0
  1124 set :titaniumDrillScore:x :buildTitaniumDrill:x
 
  1187 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1188 write :buildTitaniumDrill:count .controller ".flareTarget"
  1189 label *label370
-    * label *label371
  1190 label *label367
-    * label *label368
  1191 label *label359
-    * label *label360
-    * label *label358
  1192 return :buildTitaniumDrill*retaddr
  1193 end
  1194 label *label38
 
  1207 write null .display ".nextBlock"
  1208 write 0 .controller ".leadReserve"
  1209 write 0 .controller ".siliconReserve"
-    * label *label373
  1210 return :buildUnits*retaddr
  1211 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   152 call *label28 *invalid :supplyBase*retval (m:*label66) (h:*label66)
   153 label *label66
   154 sensor *tmp144 .battery @totalPower
-    * jump *label67 greaterThanEq *tmp144 300
-    * jump *label65 always
+  155 jump *label65 lessThan *tmp144 300
   156 label *label67
   157 read *tmp86 .controller ".monos"
   158 jump *label63 lessThan *tmp86 3
 
   315 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
   316 jump *label98 always
   317 label *label100
-    * jump *label107 lessThan :buildTitaniumDrills:count 8
-    * jump *label97 always
+  318 jump *label97 greaterThanEq :buildTitaniumDrills:count 8
   319 label *label107
   320 jump *label375 notEqual :buildTitaniumDrills:searching false
   321 label *label97
 
   560 op notEqual *tmp263 :mineOre:item null
   561 op notEqual *tmp264 :mineOre:item :mineOre:ore
   562 op land *tmp265 *tmp263 *tmp264
-    * jump *label188 equal *tmp265 false
-    * jump *label187 always
+  563 jump *label187 notEqual *tmp265 false
   564 label *label188
   565 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label190 lessThanEq @second :mineOre:stop
-    * jump *label187 always
+  566 jump *label187 greaterThan @second :mineOre:stop
   567 label *label190
   568 sensor *tmp269 @unit @totalItems
   569 jump *label185 lessThan *tmp269 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   153 label *label66
   154 sensor *tmp144 .battery @totalPower
   155 jump *label65 lessThan *tmp144 300
-    * label *label67
   156 read *tmp86 .controller ".monos"
   157 jump *label63 lessThan *tmp86 3
   158 label *label65
 
   315 jump *label98 always
   316 label *label100
   317 jump *label97 greaterThanEq :buildTitaniumDrills:count 8
-    * label *label107
   318 jump *label375 notEqual :buildTitaniumDrills:searching false
   319 label *label97
   320 write false processor4 ":stopLocation*finished"
 
   559 op notEqual *tmp264 :mineOre:item :mineOre:ore
   560 op land *tmp265 *tmp263 *tmp264
   561 jump *label187 notEqual *tmp265 false
-    * label *label188
   562 ucontrol mine :mineOre:x :mineOre:y
   563 jump *label187 greaterThan @second :mineOre:stop
-    * label *label190
   564 sensor *tmp269 @unit @totalItems
   565 jump *label185 lessThan *tmp269 :mineOre:amount
   566 label *label187

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   736 setaddr :fetchBlock*retaddr *label234 (h:*label234)
   737 call *label19 *invalid :fetchBlock*retval (m:*label234) (h:*label234)
   738 label *label234
-    * jump *label230 always
+  739 return :supplyBase*retaddr
   740 label *label229
   741 read *tmp86 .controller ".monos"
   742 jump *label235 lessThanEq *tmp86 3
 
   745 setaddr :mineOre.1*retaddr *label239 (h:*label239)
   746 call *label18 *invalid :mineOre.1*retval (m:*label239) (h:*label239)
   747 label *label239
-    * jump *label236 always
+  748 return :supplyBase*retaddr
   749 label *label235
   750 set :supplyBase0:supplied false
   751 jump *label241 notEqual .unloader1 null
 
   810 label *label266
   811 sensor *tmp375 .titaniumDrill @titanium
   812 jump *label267 greaterThanEq *tmp375 *tmp371
-    * jump *label269 notEqual :supplyBase0:supplied false
+  813 jump *label268 notEqual :supplyBase0:supplied false
   814 sensor *tmp380 .battery @totalPower
   815 op mul *tmp381 .unloader1 .powerTarget
   816 jump *label271 greaterThanEq *tmp380 *tmp381
 
   819 setaddr :mineOre.1*retaddr *label274 (h:*label274)
   820 call *label18 *invalid :mineOre.1*retval (m:*label274) (h:*label274)
   821 label *label274
-    * jump *label272 always
+  822 return :supplyBase*retaddr
   823 label *label271
   824 sensor *tmp384 .core @silicon
   825 jump *label275 greaterThanEq *tmp384 .targetSilicon
 
   833 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   834 call *label18 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
   835 label *label280
-    * jump *label276 always
+  836 return :supplyBase*retaddr
   837 label *label275
   838 sensor *tmp391 .core @copper
   839 jump *label281 greaterThanEq *tmp391 .targetCopper
 
   842 setaddr :mineOre.1*retaddr *label284 (h:*label284)
   843 call *label18 *invalid :mineOre.1*retval (m:*label284) (h:*label284)
   844 label *label284
-    * jump *label282 always
+  845 return :supplyBase*retaddr
   846 label *label281
   847 sensor *tmp394 .core @lead
   848 jump *label285 greaterThanEq *tmp394 .targetLead
 
   851 setaddr :mineOre.1*retaddr *label288 (h:*label288)
   852 call *label18 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
   853 label *label288
-    * jump *label286 always
+  854 return :supplyBase*retaddr
   855 label *label285
   856 sensor *tmp397 .core @metaglass
   857 jump *label289 greaterThanEq *tmp397 .targetMetaglass
 
   860 setaddr :mineOre.1*retaddr *label292 (h:*label292)
   861 call *label18 *invalid :mineOre.1*retval (m:*label292) (h:*label292)
   862 label *label292
-    * jump *label290 always
+  863 return :supplyBase*retaddr
   864 label *label289
   865 write "Goal 10: supplying base" .display ".status1"
   866 sensor :supplyBase0:coal.1 .core @coal
 
   878 label *label276
   879 label *label272
   880 label *label269
-    * jump *label268 always
+  881 return :supplyBase*retaddr
   882 label *label267
   883 write "Goal 11: Fetching titanium" .display ".status1"
   884 set :fetchBlock:block .titaniumDrill
 
  1028 call *label30 *invalid :buildBlock*retval (m:*label339) (h:*label339)
  1029 label *label339
  1030 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label335 always
+ 1031 return :buildRemoteBlock*retaddr
  1032 label *label336
  1033 set :buildRemoteBlock*retval false
-    * jump *label335 always
+ 1034 return :buildRemoteBlock*retaddr
  1035 label *label335
  1036 return :buildRemoteBlock*retaddr
  1037 end
 
  1091 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1092 jump *label354 notEqual :getFloor:floor @ore-titanium
  1093 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label352 always
+ 1094 return :titaniumDrillScore*retaddr
  1095 label *label354
  1096 jump *label357 equal :getFloor:floor @ore-copper
  1097 jump *label357 equal :getFloor:floor @ore-lead

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-24 instructions):
 
   440 call *label28 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   441 label *label137
   442 jump *label134 always
-    * end
   443 label *label7
   444 write :status2:text .display ".status2"
   445 write :status2:item .display ".item2"
   446 write :status2:block .display ".block2"
   447 return :status2*retaddr
-    * end
   448 label *label9
   449 write :transportStatus:target .display ".transportTarget"
   450 write :transportStatus:item .display ".transportItem"
   451 return :transportStatus*retaddr
-    * end
   452 label *label10
   453 set .ERROR :error:error
   454 stop
   455 return :error*retaddr
-    * end
   456 label *label11
   457 write "Moving..." .display ".status3"
   458 op sub *tmp233 :moveTo:radius 0.5
 
   463 jump *label145 always
   464 label *label147
   465 return :moveTo*retaddr
-    * end
   466 label *label12
   467 write "Moving..." .display ".status3"
   468 label *label150
 
   474 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp237
   475 jump *label150 equal *tmp237 false
   476 return :moveToEmpty*retaddr
-    * end
   477 label *label13
   478 label *label156
   479 sensor *tmp239 @unit @firstItem
 
   482 jump *label156 always
   483 label *label158
   484 return :dropAll*retaddr
-    * end
   485 label *label15
   486 write "Depositing..." .display ".status3"
   487 sensor *tmp243 @unit @firstItem
 
   516 call *label9 *invalid :transportStatus*retval (m:*label172) (h:*label172)
   517 label *label172
   518 return :depositItems*retaddr
-    * end
   519 label *label17
   520 op min :mineOre:amount :mineOre:amount 30
   521 set :transportStatus:target :mineOre:amount
 
   563 call *label15 *invalid :depositItems*retval (m:*label192) (h:*label192)
   564 label *label192
   565 return :mineOre*retaddr
-    * end
   566 label *label18
   567 set :status2:text "Mining "
   568 set :status2:item :mineOre.1:ore
 
   577 call *label17 *invalid :mineOre*retval (m:*label195) (h:*label195)
   578 label *label195
   579 return :mineOre.1*retaddr
-    * end
   580 label *label19
   581 sensor *tmp272 :fetchBlock:block @itemCapacity
   582 op min :transportStatus:target *tmp272 30
 
   620 call *label15 *invalid :depositItems*retval (m:*label206) (h:*label206)
   621 label *label206
   622 return :fetchBlock*retaddr
-    * end
   623 label *label20
   624 set :status2:text "Supplying "
   625 set :status2:item :supplyBlock:ore
 
   639 label *label211
   640 label *label209
   641 return :supplyBlock*retaddr
-    * end
   642 label *label27
   643 read *tmp302 :unpackCfg:cfg 0
   644 op sub *tmp303 *tmp302 35
 
   664 read *tmp335 :unpackCfg:cfg 10
   665 op sub :unpackCfg:rotation *tmp335 35
   666 return :unpackCfg*retaddr
-    * end
   667 label *label28
   668 jump *label225 notEqual .flareControllerStarted false
   669 read *tmp85 .controller ".flares"
 
   859 setaddr :mineOre.1*retaddr *label296 (h:*label296)
   860 call *label18 *invalid :mineOre.1*retval (m:*label296) (h:*label296)
   861 label *label296
-    * label *label290
-    * label *label286
-    * label *label282
-    * label *label276
-    * label *label272
-    * label *label269
   862 return :supplyBase*retaddr
   863 label *label267
   864 write "Goal 11: Fetching titanium" .display ".status1"
 
   868 call *label19 *invalid :fetchBlock*retval (m:*label298) (h:*label298)
   869 label *label298
   870 label *label268
-    * label *label236
-    * label *label230
   871 return :supplyBase*retaddr
-    * end
   872 label *label29
   873 op sign :meetTarget:count :meetTarget:copper
   874 op sign *tmp405 :meetTarget:lead
 
   957 jump *label310 always
   958 label *label312
   959 return :meetTarget*retaddr
-    * end
   960 label *label30
   961 set :meetTarget:block :buildBlock:block
   962 set :meetTarget:copper :buildBlock:copper
 
   982 jump *label334 equal *tmp458 false
   983 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
   984 return :buildBlock*retaddr
-    * end
   985 label *label31
   986 jump *label336 lessThan :buildRemoteBlock:x 0
   987 set :unpackCfg:cfg :buildRemoteBlock:cfg
 
  1008 label *label336
  1009 set :buildRemoteBlock*retval false
  1010 return :buildRemoteBlock*retaddr
-    * label *label335
-    * return :buildRemoteBlock*retaddr
-    * end
  1011 label *label32
  1012 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1013 setaddr :unpackCfg*retaddr *label341 (h:*label341)
 
  1032 label *label342
  1033 set :buildBlockFromCfg*retval :buildBlock*retval
  1034 return :buildBlockFromCfg*retaddr
-    * end
  1035 label *label33
  1036 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1037 set :buildBlockFromCfg:config null
 
  1040 label *label344
  1041 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1042 return :buildBlockFromCfg.1*retaddr
-    * end
  1043 label *label34
  1044 set :unpackCfg:cfg :meetTarget.1:cfg
  1045 setaddr :unpackCfg*retaddr *label346 (h:*label346)
 
  1057 call *label29 *invalid :meetTarget*retval (m:*label347) (h:*label347)
  1058 label *label347
  1059 return :meetTarget.1*retaddr
-    * end
  1060 label *label36
  1061 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1062 jump *label354 notEqual :getFloor:floor @ore-titanium
 
  1070 label *label357
  1071 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1072 label *label356
-    * label *label352
  1073 return :titaniumDrillScore*retaddr
-    * end
  1074 label *label37
  1075 jump *label359 greaterThanEq :buildTitaniumDrill:count 8
  1076 set :moveTo:x :buildTitaniumDrill:x
 
  1150 label *label367
  1151 label *label359
  1152 return :buildTitaniumDrill*retaddr
-    * end
  1153 label *label38
  1154 set :meetTarget:block 0
  1155 set :meetTarget:copper 0
 
  1167 write 0 .controller ".leadReserve"
  1168 write 0 .controller ".siliconReserve"
  1169 return :buildUnits*retaddr
-    * end

Final code before resolving virtual instructions:

    0:  jump *label459 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 processor5
    2:  draw triangle .ERROR .battery .blockBuilder .builder .controller .core
    3:  draw triangle .coreX .coreY .display .flareController .flareControllerStarted .generator
    4:  draw triangle .graphiteSurplus .leadSurplus .metaglassSurplus .negative .positive .powerTarget
    5:  draw triangle .press .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead
    6:  draw triangle .targetMetaglass .targetSilicon .targetThorium .targetTitanium .thoriumContainer .thoriumDrill
    7:  draw triangle .thoriumGenerator .titaniumDrill .unloader1 :buildBlock:block :buildBlock:config :buildBlock:copper
    8:  draw triangle :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:thorium
    9:  draw triangle :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockFromCfg.1:cfg :buildBlockFromCfg:cfg :buildBlockFromCfg:config
   10:  draw triangle :buildFirstTitaniumDrill:dx :buildFirstTitaniumDrill:dy :buildFirstTitaniumDrill:result :buildRemoteBlock:cfg :buildRemoteBlock:x :buildRemoteBlock:y
   11:  draw triangle :buildThoriumDrill:result :buildTitaniumDrill:count :buildTitaniumDrill:drill :buildTitaniumDrill:x :buildTitaniumDrill:y :buildTitaniumDrills:count
   12:  draw triangle :buildTitaniumDrills:current :buildTitaniumDrills:index :buildTitaniumDrills:searching :buildTitaniumDrills:size :buildTitaniumDrills:x :buildTitaniumDrills:y
   13:  draw triangle :depositItems:block :depositItems:cap :depositItems:item :error:error :fetchBlock:block :fetchBlock:item
   14:  draw triangle :fetchBlock:unitItem :getFloor:floor :locateOre:x :locateOre:y :meetTarget:block :meetTarget.1:cfg
   15:  draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
   16:  draw triangle :meetTarget:thorium :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore
   17:  draw triangle :mineOre:ore :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo:x
   18:  draw triangle :moveTo:y :moveToEmpty:x :moveToEmpty:y :status2:block :status2:item :status2:text
   19:  draw triangle :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock:block
   20:  draw triangle :supplyBlock:blockCapacity :supplyBlock:missing :supplyBlock:ore :supplyBlockFromCore:item :supplyBlockFromCore:target :supplyBlockFromCore:unitItem
   21:  draw triangle :titaniumDrillScore:negative :titaniumDrillScore:positive :titaniumDrillScore:x :titaniumDrillScore:y :transportStatus:item :transportStatus:target
   22:  draw triangle :unpackCfg:cfg :unpackCfg:cu :unpackCfg:gr :unpackCfg:mg :unpackCfg:pb :unpackCfg:rotation
   23:  draw triangle :unpackCfg:si :unpackCfg:th :unpackCfg:ti :unpackCfg:type :unpackCfg:x :unpackCfg:y
        label *label459
   24:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   25:  set .press null                                              CoreBuilder.mnd: var
   26:  set .generator null                                          ...
   27:  set .battery null                                            ...
   28:  set .smelter null                                            ...
   29:  set .titaniumDrill null                                      ...
   30:  set .unloader1 null                                          ...
   31:  set .thoriumContainer null                                   ...
   32:  set .thoriumGenerator null                                   ...
   33:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   34:  set .graphiteSurplus 20                                      ...
   35:  set .siliconSurplus 20                                       ...
   36:  set .metaglassSurplus 20                                     ...
   37:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   38:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
   39:  set .positive 0                                              CoreBuilder.mnd: volatile var positive = 0, negative = 0;
   40:  set .negative 0                                              ...
        label *label39                                               CoreBuilder.mnd: do
   41:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   42:  set .builder @unit                                           ...
   43:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   44:  jump *label39 equal .core null                               CoreBuilder.mnd: do
   45:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   46:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   47:  set .blockBuilder processor5                                 CoreBuilder.mnd: blockBuilder = processor5;
   48:  set :buildBlockFromCfg.1:cfg "#'+nA######"                   CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   49:  setaddr :buildBlockFromCfg.1*retaddr *label42                ...
   50:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label42                                               ...
   51:  set .press :buildBlockFromCfg.1*retval                       ...
   52:  set :buildBlockFromCfg.1:cfg "k*/(7######"                   CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   53:  setaddr :buildBlockFromCfg.1*retaddr *label43                ...
   54:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label43                                               ...
   55:  set .battery :buildBlockFromCfg.1*retval                     ...
   56:  set :buildBlockFromCfg.1:cfg "k+/(7######"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   57:  setaddr :buildBlockFromCfg.1*retaddr *label44                ...
   58:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label44                                               ...
   59:  set :buildBlockFromCfg.1:cfg "m*.<2######"                   CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   60:  setaddr :buildBlockFromCfg.1*retaddr *label45                ...
   61:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label45                                               ...
   62:  set .generator :buildBlockFromCfg.1*retval                   ...
   63:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   64:  set :buildBlockFromCfg.1:cfg "%+-A<######"                   CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   65:  setaddr :buildBlockFromCfg.1*retaddr *label46                ...
   66:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label46                                               ...
   67:  set .smelter :buildBlockFromCfg.1*retval                     ...
   68:  set :buildBlockFromCfg.1:cfg "T+,%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   69:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   70:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   71:  set :meetTarget.1:cfg "w**5#-#####"                          CoreBuilder.mnd: meetTarget(cfg);
   72:  setaddr :meetTarget.1*retaddr *label49                       ...
   73:  call *label34 *invalid :meetTarget.1*retval                  ...
        label *label49                                               ...
   74:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   75:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   76:  write .coreY processor4 ":findDrillLocation:y"               ...
   77:  write @unit processor4 ":findDrillLocation:unit"             ...
   78:  write @titanium processor4 ":findDrillLocation:item"         ...
   79:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   80:  write 2 processor4 ":findDrillLocation:size"                 ...
   81:  write 4 processor4 ":findDrillLocation:limit"                ...
   82:  write false processor4 ":findDrillLocation*finished"         ...
   83:  write 1 processor4 "@counter"                                ...
        label *label50                                               ...
   84:  wait 1e-15                                                   ...
   85:  read *tmp126 processor4 ":findDrillLocation*finished"        ...
   86:  jump *label50 equal *tmp126 false                            ...
   87:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   88:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   89:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   90:  jump *label51 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   91:  set :error:error "Cannot locate spot for titanium drill"     ...
   92:  setaddr :error*retaddr *label53                              ...
   93:  call *label10 *invalid :error*retval                         ...
        label *label53                                               ...
        label *label51                                               ...
   94:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   95:  write @pneumatic-drill processor5 ":buildBlockAt:block"      CoreBuilder.mnd: return blockBuilder.buildBlockAt(@pneumatic-drill, dx, dy, null, 0);
   96:  write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt: ...
   97:  write :buildFirstTitaniumDrill:dy processor5 ":buildBlockAt: ...
   98:  write null processor5 ":buildBlockAt:rotation"               ...
   99:  write 0 processor5 ":buildBlockAt:config"                    ...
  100:  write false processor5 ":buildBlockAt*finished"              ...
  101:  write 1 processor5 "@counter"                                ...
        label *label54                                               ...
  102:  wait 1e-15                                                   ...
  103:  read *tmp135 processor5 ":buildBlockAt*finished"             ...
  104:  jump *label54 equal *tmp135 false                            ...
  105:  read *tmp115 processor5 ":buildBlockAt*retval"               ...
  106:  set .titaniumDrill *tmp115                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
  107:  write *tmp115 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  108:  set :buildBlockFromCfg.1:cfg "*,###A<###"                   CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
  109:  setaddr :buildBlockFromCfg.1*retaddr *label55                ...
  110:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label55                                               ...
  111:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
  112:  write :buildBlockFromCfg.1*retval .controller ".unloader1"   CoreBuilder.mnd: controller.unloader1 = unloader1;
  113:  set :buildBlockFromCfg.1:cfg "T),%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
  114:  setaddr :buildBlockFromCfg.1*retaddr *label56                ...
  115:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label56                                               ...
  116:  set :buildBlockFromCfg.1:cfg "W*-'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
  117:  setaddr :buildBlockFromCfg.1*retaddr *label57                ...
  118:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label57                                               ...
  119:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  120:  set :buildBlockFromCfg:cfg "®-.}U#U####"                     CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
  121:  set :buildBlockFromCfg:config processor2                     ...
  122:  setaddr :buildBlockFromCfg*retaddr *label58                  ...
  123:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label58                                               ...
  124:  set .controller :buildBlockFromCfg*retval                    ...
  125:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
  126:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
  127:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
  128:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
  129:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  130:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  131:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  132:  set :buildBlockFromCfg.1:cfg "g)'%)######"                   CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  133:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
  134:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
  135:  set :buildBlockFromCfg.1:cfg "(*###A<###"                   CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  136:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
  137:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
  138:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  139:  set :buildBlockFromCfg.1:cfg "'(_i#####&"                   CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  140:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
  141:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
  142:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  143:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  144:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = 1;
  145:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = 3;
  146:  write 0 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = 0;
  147:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  148:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  149:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  150:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  151:  set .siliconSurplus 20                                       ...
  152:  setaddr :buildUnits*retaddr *label62                         CoreBuilder.mnd: buildUnits();
  153:  call *label38 *invalid :buildUnits*retval                    ...
        label *label62                                               ...
        label *label63                                               CoreBuilder.mnd: do
  154:  setaddr :supplyBase*retaddr *label66                         CoreBuilder.mnd: supplyBase();
  155:  call *label28 *invalid :supplyBase*retval                    ...
        label *label66                                               ...
  156:  sensor *tmp144 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  157:  jump *label65 lessThan *tmp144 300                           ...
  158:  read *tmp86 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  159:  jump *label63 lessThan *tmp86 3                              CoreBuilder.mnd: do
        label *label65                                               ...
  160:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  161:  set :buildBlockFromCfg.1:cfg ",)###A<###"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  162:  setaddr :buildBlockFromCfg.1*retaddr *label69                ...
  163:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label69                                               ...
  164:  set :buildBlockFromCfg.1:cfg "T,*%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  165:  setaddr :buildBlockFromCfg.1*retaddr *label70                ...
  166:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label70                                               ...
  167:  set :buildBlockFromCfg.1:cfg "',+_AA#####"                   CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  168:  setaddr :buildBlockFromCfg.1*retaddr *label71                ...
  169:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label71                                               ...
  170:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  171:  set :buildBlockFromCfg.1:cfg "z%-AAA##A##"                   CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  172:  setaddr :buildBlockFromCfg.1*retaddr *label72                ...
  173:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label72                                               ...
  174:  set :buildBlockFromCfg.1:cfg "W'*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  175:  setaddr :buildBlockFromCfg.1*retaddr *label73                ...
  176:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label73                                               ...
  177:  set :buildBlockFromCfg.1:cfg "W&*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  178:  setaddr :buildBlockFromCfg.1*retaddr *label74                ...
  179:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label74                                               ...
  180:  set :buildBlockFromCfg.1:cfg "o%+FK<A####"                   CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  181:  setaddr :buildBlockFromCfg.1*retaddr *label75                ...
  182:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label75                                               ...
  183:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  184:  set :buildBlockFromCfg.1:cfg "$(.#U<###"                   CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  185:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  186:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  187:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  188:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  189:  set :buildBlockFromCfg.1:cfg " '%-#2#####"                   CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  190:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  191:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  192:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  193:  set :buildBlockFromCfg.1:cfg "*(###A<###"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  194:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  195:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  196:  set :buildBlockFromCfg.1:cfg "X*''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  197:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  198:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  199:  set :buildBlockFromCfg.1:cfg "*%ë#}####"                   CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  200:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  201:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  202:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  203:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  204:  set :buildBlockFromCfg.1:cfg "l.-#U#A7###"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  205:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  206:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  207:  setaddr :buildUnits*retaddr *label82                         CoreBuilder.mnd: buildUnits();
  208:  call *label38 *invalid :buildUnits*retval                    ...
        label *label82                                               ...
  209:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  210:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  211:  write 4 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = 4;
  212:  set :buildBlockFromCfg.1:cfg "%-)A<######"                   CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  213:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  214:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  215:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  216:  set :buildBlockFromCfg:cfg "--###A<###"                     CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  217:  set :buildBlockFromCfg:config @sand                          ...
  218:  setaddr :buildBlockFromCfg*retaddr *label84                  ...
  219:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label84                                               ...
  220:  setaddr :buildUnits*retaddr *label85                         CoreBuilder.mnd: buildUnits();
  221:  call *label38 *invalid :buildUnits*retval                    ...
        label *label85                                               ...
        label *label86                                               CoreBuilder.mnd: while controller.polys < 2 do
  222:  read *tmp87 .controller ".polys"                             ...
  223:  jump *label88 greaterThanEq *tmp87 2                         ...
  224:  setaddr :supplyBase*retaddr *label89                         CoreBuilder.mnd: supplyBase();
  225:  call *label28 *invalid :supplyBase*retval                    ...
        label *label89                                               ...
  226:  jump *label86 always 0 0                                     CoreBuilder.mnd: while controller.polys < 2 do
        label *label88                                               ...
  227:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = 3;
        label *label90                                               CoreBuilder.mnd: while controller.flares < 2 do
  228:  read *tmp85 .controller ".flares"                            ...
  229:  jump *label92 greaterThanEq *tmp85 2                         ...
  230:  setaddr :supplyBase*retaddr *label93                         CoreBuilder.mnd: supplyBase();
  231:  call *label28 *invalid :supplyBase*retval                    ...
        label *label93                                               ...
  232:  jump *label90 always 0 0                                     CoreBuilder.mnd: while controller.flares < 2 do
        label *label92                                               ...
  233:  write 8 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = 8;
  234:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = 6;
  235:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  236:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  237:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  238:  read *tmp47 processor4 ".locations"                          CoreBuilder.mnd: var current = oreLocator.locations;
  239:  set :buildTitaniumDrills:current *tmp47                      ...
  240:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  241:  write .coreY processor4 ":findDrillLocation:y"               ...
  242:  write @unit processor4 ":findDrillLocation:unit"             ...
  243:  write @titanium processor4 ":findDrillLocation:item"         ...
  244:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  245:  write 4 processor4 ":findDrillLocation:size"                 ...
  246:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  247:  write false processor4 ":findDrillLocation*finished"         ...
  248:  write 1 processor4 "@counter"                                ...
  249:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  250:  set :buildTitaniumDrills:count 1                             CoreBuilder.mnd: var count = 1, searching = true;
        label *label375                                              CoreBuilder.mnd: while searching do
  251:  read *tmp175 processor4 ":findDrillLocation*finished"        CoreBuilder.mnd: searching = !finished(oreLocator.findDrillLocation);
  252:  op equal :buildTitaniumDrills:searching *tmp175 false        ...
        label *label98                                               CoreBuilder.mnd: while current < oreLocator.locations do
  253:  read *tmp47 processor4 ".locations"                          ...
  254:  jump *label100 greaterThanEq :buildTitaniumDrills:current *t ...
  255:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre CoreBuilder.mnd: var index = current * 4;
  256:  op add *tmp180 :buildTitaniumDrills:index 1                  CoreBuilder.mnd: var size = bank1[index + 1];
  257:  read :buildTitaniumDrills:size bank1 *tmp180                 ...
  258:  jump *label101 lessThan :buildTitaniumDrills:size 3          CoreBuilder.mnd: if size >= 3 then
  259:  op add *tmp184 :buildTitaniumDrills:index 2                  CoreBuilder.mnd: var x = bank1[index + 2];
  260:  read :buildTitaniumDrills:x bank1 *tmp184                    ...
  261:  op add *tmp188 :buildTitaniumDrills:index 3                  CoreBuilder.mnd: var y = bank1[index + 3];
  262:  read :buildTitaniumDrills:y bank1 *tmp188                    ...
  263:  op sub *tmp190 :buildTitaniumDrills:x 1                      CoreBuilder.mnd: buildTitaniumDrill(x - 1, y - 1, in out count);
  264:  op sub *tmp191 :buildTitaniumDrills:y 1                      ...
  265:  set :buildTitaniumDrill:x *tmp190                            ...
  266:  set :buildTitaniumDrill:y *tmp191                            ...
  267:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  268:  setaddr :buildTitaniumDrill*retaddr *label103                ...
  269:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label103                                              ...
  270:  op add *tmp192 :buildTitaniumDrills:x 1                      CoreBuilder.mnd: buildTitaniumDrill(x + 1, y - 1, in out count);
  271:  set :buildTitaniumDrill:x *tmp192                            ...
  272:  set :buildTitaniumDrill:y *tmp191                            ...
  273:  setaddr :buildTitaniumDrill*retaddr *label104                ...
  274:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label104                                              ...
  275:  op add *tmp195 :buildTitaniumDrills:y 1                      CoreBuilder.mnd: buildTitaniumDrill(x - 1, y + 1, in out count);
  276:  set :buildTitaniumDrill:x *tmp190                            ...
  277:  set :buildTitaniumDrill:y *tmp195                            ...
  278:  setaddr :buildTitaniumDrill*retaddr *label105                ...
  279:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label105                                              ...
  280:  set :buildTitaniumDrill:x *tmp192                            CoreBuilder.mnd: buildTitaniumDrill(x + 1, y + 1, in out count);
  281:  set :buildTitaniumDrill:y *tmp195                            ...
  282:  setaddr :buildTitaniumDrill*retaddr *label106                ...
  283:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label106                                              ...
  284:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
        label *label101                                              CoreBuilder.mnd: if size >= 3 then
  285:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur CoreBuilder.mnd: while current < oreLocator.locations do
  286:  jump *label98 always 0 0                                     ...
        label *label100                                              ...
  287:  jump *label97 greaterThanEq :buildTitaniumDrills:count 8     CoreBuilder.mnd: if count >= 8 then break; end;
  288:  jump *label375 notEqual :buildTitaniumDrills:searching false CoreBuilder.mnd: while searching do
        label *label97                                               ...
  289:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  290:  write 3 processor4 "@counter"                                ...
  291:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  292:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  293:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  294:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  295:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  296:  write false processor4 ":layoutThoriumDrill*finished"        ...
  297:  write 2 processor4 "@counter"                                ...
        label *label110                                              ...
  298:  wait 1e-15                                                   ...
  299:  read *tmp205 processor4 ":layoutThoriumDrill*finished"       ...
  300:  jump *label110 equal *tmp205 false                           ...
  301:  set :meetTarget.1:cfg "x**F#AA7###"                          CoreBuilder.mnd: meetTarget(LASER_DRILL);
  302:  setaddr :meetTarget.1*retaddr *label111                      ...
  303:  call *label34 *invalid :meetTarget.1*retval                  ...
        label *label111                                              ...
        label *label112                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  304:  wait 1e-15                                                   ...
  305:  read *tmp207 processor4 ":layoutThoriumDrill*finished"       ...
  306:  jump *label112 equal *tmp207 false                           ...
  307:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  308:  jump *label113 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  309:  set :error:error "Cannot locate spot for thorium drill"      ...
  310:  setaddr :error*retaddr *label115                             ...
  311:  call *label10 *invalid :error*retval                         ...
        label *label115                                              ...
        label *label113                                              ...
  312:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0);
  313:  read *tmp48 processor4 ".drillX"                             ...
  314:  write *tmp48 processor5 ":buildBlockAt:x"                    ...
  315:  read *tmp49 processor4 ".drillY"                             ...
  316:  write *tmp49 processor5 ":buildBlockAt:y"                    ...
  317:  write null processor5 ":buildBlockAt:rotation"               ...
  318:  write 0 processor5 ":buildBlockAt:config"                    ...
  319:  write false processor5 ":buildBlockAt*finished"              ...
  320:  write 1 processor5 "@counter"                                ...
        label *label116                                              ...
  321:  wait 1e-15                                                   ...
  322:  read *tmp216 processor5 ":buildBlockAt*finished"             ...
  323:  jump *label116 equal *tmp216 false                           ...
  324:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  325:  set :buildRemoteBlock:cfg "z%-AAA##A##"                      CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  326:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  327:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  328:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  329:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  330:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  331:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  332:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  333:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  334:  set :buildRemoteBlock:cfg "o%+FK<A####"                      CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  335:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  336:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  337:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  338:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  339:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  340:  set :buildRemoteBlock:cfg "g)'%)######"                      CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.nodeX, oreLocator.nodeY);
  341:  read :buildRemoteBlock:x processor4 ".nodeX"                 ...
  342:  read :buildRemoteBlock:y processor4 ".nodeY"                 ...
  343:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  344:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  345:  set :buildRemoteBlock:cfg "r**#-#+####"                      CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  346:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  347:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  348:  setaddr :buildRemoteBlock*retaddr *label121                  ...
  349:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label121                                              ...
  350:  set :buildRemoteBlock:cfg "k*/(7######"                      CoreBuilder.mnd: buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  351:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  352:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  353:  setaddr :buildRemoteBlock*retaddr *label122                  ...
  354:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label122                                              ...
  355:  set :buildRemoteBlock:cfg "**#######"                      CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  356:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  357:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  358:  setaddr :buildRemoteBlock*retaddr *label123                  ...
  359:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label123                                              ...
  360:  set .thoriumContainer :buildRemoteBlock*retval               ...
  361:  jump *label124 notEqual :buildRemoteBlock*retval null        CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  362:  set .thoriumContainer .thoriumDrill                          ...
        label *label124                                              ...
  363:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  364:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  365:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  366:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = 1;
        label *label126                                              CoreBuilder.mnd: while controller.polys < 6 do
  367:  read *tmp87 .controller ".polys"                             ...
  368:  jump *label128 greaterThanEq *tmp87 6                        ...
  369:  setaddr :supplyBase*retaddr *label129                        CoreBuilder.mnd: supplyBase();
  370:  call *label28 *invalid :supplyBase*retval                    ...
        label *label129                                              ...
  371:  jump *label126 always 0 0                                    CoreBuilder.mnd: while controller.polys < 6 do
        label *label128                                              ...
  372:  set :buildBlockFromCfg:cfg "+(###A<###"                     CoreBuilder.mnd: buildBlockFromCfg(UNLOADER6, @silicon);
  373:  set :buildBlockFromCfg:config @silicon                       ...
  374:  setaddr :buildBlockFromCfg*retaddr *label130                 ...
  375:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label130                                              ...
  376:  set :buildBlockFromCfg.1:cfg "X+''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  377:  setaddr :buildBlockFromCfg.1*retaddr *label131               ...
  378:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label131                                              ...
  379:  set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"                   CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  380:  setaddr :buildBlockFromCfg.1*retaddr *label132               ...
  381:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label132                                              ...
  382:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  383:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  384:  setaddr :buildUnits*retaddr *label133                        CoreBuilder.mnd: buildUnits();
  385:  call *label38 *invalid :buildUnits*retval                    ...
        label *label133                                              ...
        label *label134                                              CoreBuilder.mnd: while true do
  386:  setaddr :supplyBase*retaddr *label137                        CoreBuilder.mnd: supplyBase();
  387:  call *label28 *invalid :supplyBase*retval                    ...
        label *label137                                              ...
  388:  jump *label134 always 0 0                                    CoreBuilder.mnd: while true do
        label *label7                                                Actions.mnd: void status2(text, item, block)
  389:  write :status2:text .display ".status2"                      Actions.mnd: display.status2  = text;
  390:  write :status2:item .display ".item2"                        Actions.mnd: display.item2  = item;
  391:  write :status2:block .display ".block2"                      Actions.mnd: display.block2 = block;
  392:  return :status2*retaddr                                      Actions.mnd: void status2(text, item, block)
        label *label9                                                Actions.mnd: void transportStatus(target, item)
  393:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  394:  write :transportStatus:item .display ".transportItem"        Actions.mnd: display.transportItem = item;
  395:  return :transportStatus*retaddr                              Actions.mnd: void transportStatus(target, item)
        label *label10                                               Actions.mnd: void error(error)
  396:  set .ERROR :error:error                                      Actions.mnd: ERROR = error;
  397:  stop                                                         Actions.mnd: stopProcessor();
  398:  return :error*retaddr                                        Actions.mnd: void error(error)
        label *label11                                               Actions.mnd: void moveTo(x, y, radius)
  399:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  400:  op sub *tmp233 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label145                                              ...
  401:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp231 0 ...
  402:  jump *label147 notEqual *tmp231 false                        ...
  403:  ucontrol approach :moveTo:x :moveTo:y *tmp233 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  404:  jump *label145 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label147                                              ...
  405:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label12                                               Actions.mnd: void moveToEmpty(x, y)
  406:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label150                                              Actions.mnd: do
  407:  sensor *tmp234 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  408:  jump *label153 equal *tmp234 null                            ...
  409:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label153                                              ...
  410:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  411:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp237 0    Actions.mnd: while !within(x, y, RADIUS);
  412:  jump *label150 equal *tmp237 false                           Actions.mnd: do
  413:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label13                                               Actions.mnd: void dropAll()
        label *label156                                              Actions.mnd: while @unit.@firstItem != null do
  414:  sensor *tmp239 @unit @firstItem                              ...
  415:  jump *label158 equal *tmp239 null                            ...
  416:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  417:  jump *label156 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label158                                              ...
  418:  return :dropAll*retaddr                                      Actions.mnd: void dropAll()
        label *label15                                               Actions.mnd: void depositItems(block, item)
  419:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  420:  sensor *tmp243 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  421:  jump *label163 notEqual *tmp243 :depositItems:item           ...
  422:  sensor *tmp241 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
  423:  sensor *tmp242 :depositItems:block @y                        ...
  424:  set :moveTo:x *tmp241                                        ...
  425:  set :moveTo:y *tmp242                                        ...
  426:  set :moveTo:radius 6                                         ...
  427:  setaddr :moveTo*retaddr *label440                            ...
  428:  call *label11 *invalid :moveTo*retval                        ...
        label *label440                                              ...
  429:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label166                                              Actions.mnd: do
  430:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  431:  sensor *tmp247 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  432:  op mul *tmp248 *tmp247 :depositItems:cap                     ...
  433:  sensor *tmp249 :depositItems:block :depositItems:item        ...
  434:  jump *label166 greaterThan *tmp248 *tmp249                   Actions.mnd: do
  435:  jump *label164 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label163                                              ...
        label *label169                                              Actions.mnd: while @unit.@firstItem != null do
  436:  sensor *tmp251 @unit @firstItem                              ...
  437:  jump *label171 equal *tmp251 null                            ...
  438:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  439:  jump *label169 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label171                                              ...
        label *label164                                              Actions.mnd: if @unit.@firstItem == item then
  440:  set :transportStatus:target 0                                Actions.mnd: transportStatus(0, null);
  441:  set :transportStatus:item null                               ...
  442:  setaddr :transportStatus*retaddr *label172                   ...
  443:  call *label9 *invalid :transportStatus*retval                ...
        label *label172                                              ...
  444:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label17                                               Actions.mnd: void mineOre(ore, amount, block)
  445:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  446:  set :transportStatus:target :mineOre:amount                  Actions.mnd: transportStatus(amount, ore);
  447:  set :transportStatus:item :mineOre:ore                       ...
  448:  setaddr :transportStatus*retaddr *label178                   ...
  449:  call *label9 *invalid :transportStatus*retval                ...
        label *label178                                              ...
  450:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  451:  jump *label456 notEqual *tmp253 false                        ...
  452:  set :error:error "Cannot locate ore"                         Actions.mnd: error("Cannot locate ore");
  453:  setaddr :error*retaddr *label455                             ...
  454:  call *label10 *invalid :error*retval                         ...
        label *label455                                              ...
        label *label456                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  455:  set :mineOre:x :locateOre:x                                  Actions.mnd: locateOre(ore, out x, out y);
  456:  set :mineOre:y :locateOre:y                                  ...
  457:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  458:  set :moveToEmpty:y :locateOre:y                              ...
  459:  setaddr :moveToEmpty*retaddr *label180                       ...
  460:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label180                                              ...
  461:  sensor *tmp258 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  462:  jump *label181 equal *tmp258 :mineOre:ore                    ...
  463:  setaddr :dropAll*retaddr *label183                           ...
  464:  call *label13 *invalid :dropAll*retval                       ...
        label *label183                                              ...
        label *label181                                              ...
  465:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  466:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label185                                              Actions.mnd: do
  467:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  468:  op notEqual *tmp263 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  469:  op notEqual *tmp264 :mineOre:item :mineOre:ore               ...
  470:  op land *tmp265 *tmp263 *tmp264                              ...
  471:  jump *label187 notEqual *tmp265 false                        ...
  472:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  473:  jump *label187 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  474:  sensor *tmp269 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  475:  jump *label185 lessThan *tmp269 :mineOre:amount              Actions.mnd: do
        label *label187                                              ...
  476:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  477:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  478:  set :depositItems:item :mineOre:ore                          ...
  479:  setaddr :depositItems*retaddr *label192                      ...
  480:  call *label15 *invalid :depositItems*retval                  ...
        label *label192                                              ...
  481:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label18                                               Actions.mnd: void mineOre(ore)
  482:  set :status2:text "Mining "                                  Actions.mnd: status2("Mining ", ore, "core");
  483:  set :status2:item :mineOre.1:ore                             ...
  484:  set :status2:block "core"                                    ...
  485:  setaddr :status2*retaddr *label194                           ...
  486:  call *label7 *invalid :status2*retval                        ...
        label *label194                                              ...
  487:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  488:  set :mineOre:amount 30                                       ...
  489:  set :mineOre:block .core                                     ...
  490:  setaddr :mineOre*retaddr *label195                           ...
  491:  call *label17 *invalid :mineOre*retval                       ...
        label *label195                                              ...
  492:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label19                                               Actions.mnd: void fetchBlock(block, item)
  493:  sensor *tmp272 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  494:  op min :transportStatus:target *tmp272 30                    ...
  495:  set :transportStatus:item :fetchBlock:item                   ...
  496:  setaddr :transportStatus*retaddr *label197                   ...
  497:  call *label9 *invalid :transportStatus*retval                ...
        label *label197                                              ...
  498:  set :status2:text "Fetching "                                Actions.mnd: status2("Fetching ", item, block);
  499:  set :status2:item :fetchBlock:item                           ...
  500:  set :status2:block :fetchBlock:block                         ...
  501:  setaddr :status2*retaddr *label198                           ...
  502:  call *label7 *invalid :status2*retval                        ...
        label *label198                                              ...
  503:  sensor *tmp274 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  504:  sensor *tmp275 :fetchBlock:block @y                          ...
  505:  set :moveToEmpty:x *tmp274                                   ...
  506:  set :moveToEmpty:y *tmp275                                   ...
  507:  setaddr :moveToEmpty*retaddr *label199                       ...
  508:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label199                                              ...
  509:  setaddr :dropAll*retaddr *label200                           Actions.mnd: dropAll();
  510:  call *label13 *invalid :dropAll*retval                       ...
        label *label200                                              ...
        label *label201                                              Actions.mnd: do
  511:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  512:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  513:  op notEqual *tmp277 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  514:  op notEqual *tmp278 :fetchBlock:unitItem :fetchBlock:item    ...
  515:  op land *tmp279 *tmp277 *tmp278                              ...
  516:  jump *label204 equal *tmp279 false                           ...
  517:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label204                                              Actions.mnd: if unitItem != null and unitItem != item then
  518:  sensor *tmp281 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  519:  op lessThan *tmp282 *tmp281 30                               ...
  520:  sensor *tmp283 :fetchBlock:block :fetchBlock:item            ...
  521:  op land *tmp284 *tmp282 *tmp283                              ...
  522:  jump *label201 notEqual *tmp284 false                        Actions.mnd: do
  523:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  524:  set :depositItems:item :fetchBlock:item                      ...
  525:  setaddr :depositItems*retaddr *label206                      ...
  526:  call *label15 *invalid :depositItems*retval                  ...
        label *label206                                              ...
  527:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label20                                               Actions.mnd: void supplyBlock(block, ore)
  528:  set :status2:text "Supplying "                               Actions.mnd: status2("Supplying ", ore, block);
  529:  set :status2:item :supplyBlock:ore                           ...
  530:  set :status2:block :supplyBlock:block                        ...
  531:  setaddr :status2*retaddr *label208                           ...
  532:  call *label7 *invalid :status2*retval                        ...
        label *label208                                              ...
  533:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  534:  sensor *tmp286 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  535:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  536:  jump *label209 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  537:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  538:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  539:  set :mineOre:block :supplyBlock:block                        ...
  540:  setaddr :mineOre*retaddr *label211                           ...
  541:  call *label17 *invalid :mineOre*retval                       ...
        label *label211                                              ...
        label *label209                                              Actions.mnd: if missing > 0 then
  542:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
  543:  read *tmp302 :unpackCfg:cfg 0                                CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  544:  op sub *tmp303 *tmp302 35                                    ...
  545:  lookup block :unpackCfg:type *tmp303                         ...
  546:  read *tmp306 :unpackCfg:cfg 1                                CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  547:  op sub :unpackCfg:x *tmp306 42                               ...
  548:  read *tmp310 :unpackCfg:cfg 2                                CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  549:  op sub :unpackCfg:y *tmp310 42                               ...
  550:  read *tmp314 :unpackCfg:cfg 3                                CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  551:  op sub :unpackCfg:cu *tmp314 35                              ...
  552:  read *tmp317 :unpackCfg:cfg 4                                CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  553:  op sub :unpackCfg:pb *tmp317 35                              ...
  554:  read *tmp320 :unpackCfg:cfg 5                                CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  555:  op sub :unpackCfg:gr *tmp320 35                              ...
  556:  read *tmp323 :unpackCfg:cfg 6                                CoreBuilder.mnd: si = char(cfg, index++) - 35;
  557:  op sub :unpackCfg:si *tmp323 35                              ...
  558:  read *tmp326 :unpackCfg:cfg 7                                CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  559:  op sub :unpackCfg:ti *tmp326 35                              ...
  560:  read *tmp329 :unpackCfg:cfg 8                                CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  561:  op sub :unpackCfg:mg *tmp329 35                              ...
  562:  read *tmp332 :unpackCfg:cfg 9                                CoreBuilder.mnd: th = char(cfg, index++) - 35;
  563:  op sub :unpackCfg:th *tmp332 35                              ...
  564:  read *tmp335 :unpackCfg:cfg 10                               CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  565:  op sub :unpackCfg:rotation *tmp335 35                        ...
  566:  return :unpackCfg*retaddr                                    CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
        label *label28                                               CoreBuilder.mnd: void supplyBase()
  567:  jump *label225 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  568:  read *tmp85 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  569:  jump *label227 lessThanEq *tmp85 0                           ...
  570:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  571:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  572:  write .titaniumDrill .flareController ":start:drill"         ...
  573:  write false .flareController ":start*finished"               ...
  574:  write 2 .flareController "@counter"                          ...
        label *label227                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label225                                              CoreBuilder.mnd: if !flareControllerStarted then
  575:  jump *label229 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  576:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  577:  set :supplyBlockFromCore:target .thoriumGenerator            CoreBuilder.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  578:  set :supplyBlockFromCore:item @coal                          ...
  579:  sensor *tmp290 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  580:  op min :transportStatus:target *tmp290 30                    ...
  581:  set :transportStatus:item @coal                              ...
  582:  setaddr :transportStatus*retaddr *label443                   ...
  583:  call *label9 *invalid :transportStatus*retval                ...
        label *label443                                              ...
  584:  set :status2:text "Transferring "                            Actions.mnd: status2("Transferring ", item, target);
  585:  set :status2:item :supplyBlockFromCore:item                  ...
  586:  set :status2:block :supplyBlockFromCore:target               ...
  587:  setaddr :status2*retaddr *label444                           ...
  588:  call *label7 *invalid :status2*retval                        ...
        label *label444                                              ...
  589:  set :moveToEmpty:x .coreX                                    Actions.mnd: moveToEmpty(coreX, coreY);
  590:  set :moveToEmpty:y .coreY                                    ...
  591:  setaddr :moveToEmpty*retaddr *label445                       ...
  592:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label445                                              ...
  593:  setaddr :dropAll*retaddr *label446                           Actions.mnd: dropAll();
  594:  call *label13 *invalid :dropAll*retval                       ...
        label *label446                                              ...
        label *label447                                              Actions.mnd: do
  595:  ucontrol itemTake .core :supplyBlockFromCore:item 30 0 0     Actions.mnd: itemTake(core, item, capacity);
  596:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  597:  op notEqual *tmp293 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  598:  op notEqual *tmp294 :supplyBlockFromCore:unitItem :supplyBlo ...
  599:  op land *tmp295 *tmp293 *tmp294                              ...
  600:  jump *label448 equal *tmp295 false                           ...
  601:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label448                                              Actions.mnd: if unitItem != null and unitItem != item then
  602:  sensor *tmp297 @unit :supplyBlockFromCore:item               Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  603:  op lessThan *tmp298 *tmp297 30                               ...
  604:  sensor *tmp299 .core :supplyBlockFromCore:item               ...
  605:  op land *tmp300 *tmp298 *tmp299                              ...
  606:  jump *label447 notEqual *tmp300 false                        Actions.mnd: do
  607:  set :depositItems:block :supplyBlockFromCore:target          Actions.mnd: depositItems(target, item);
  608:  set :depositItems:item :supplyBlockFromCore:item             ...
  609:  setaddr :depositItems*retaddr *label452                      ...
  610:  call *label15 *invalid :depositItems*retval                  ...
        label *label452                                              ...
  611:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  612:  set :fetchBlock:item @thorium                                ...
  613:  setaddr :fetchBlock*retaddr *label234                        ...
  614:  call *label19 *invalid :fetchBlock*retval                    ...
        label *label234                                              ...
  615:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label229                                              ...
  616:  read *tmp86 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  617:  jump *label235 lessThanEq *tmp86 3                           ...
  618:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  619:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  620:  setaddr :mineOre.1*retaddr *label239                         ...
  621:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label239                                              ...
  622:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label235                                              ...
  623:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  624:  jump *label241 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  625:  sensor *tmp348 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  626:  jump *label243 greaterThanEq *tmp348 .targetGraphite         ...
  627:  sensor *tmp351 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  628:  jump *label245 greaterThanEq *tmp351 5                       ...
  629:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  630:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  631:  set :supplyBlock:ore @coal                                   ...
  632:  setaddr :supplyBlock*retaddr *label248                       ...
  633:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label248                                              ...
  634:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label245                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label243                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  635:  sensor *tmp354 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  636:  jump *label249 greaterThanEq *tmp354 .targetSilicon          ...
  637:  sensor *tmp357 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  638:  jump *label251 greaterThanEq *tmp357 5                       ...
  639:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  640:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  641:  set :supplyBlock:ore @coal                                   ...
  642:  setaddr :supplyBlock*retaddr *label254                       ...
  643:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label254                                              ...
  644:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  645:  jump *label252 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label251                                              ...
  646:  sensor *tmp360 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  647:  jump *label255 greaterThanEq *tmp360 5                       ...
  648:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  649:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  650:  set :supplyBlock:ore @sand                                   ...
  651:  setaddr :supplyBlock*retaddr *label258                       ...
  652:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label258                                              ...
  653:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label255                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label252                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label249                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  654:  sensor *tmp363 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  655:  jump *label259 greaterThanEq *tmp363 .powerTarget            ...
  656:  sensor *tmp366 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  657:  jump *label261 greaterThanEq *tmp366 2                       ...
  658:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  659:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  660:  set :supplyBlock:ore @coal                                   ...
  661:  setaddr :supplyBlock*retaddr *label264                       ...
  662:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label264                                              ...
  663:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label261                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label259                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label241                                              CoreBuilder.mnd: if unloader1 == null then
  664:  set *tmp371 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  665:  sensor *tmp369 .core @titanium                               ...
  666:  jump *label266 greaterThanEq *tmp369 .targetTitanium         ...
  667:  sensor *tmp372 .core @titanium                               ...
  668:  op sub *tmp373 .targetTitanium *tmp372                       ...
  669:  op min *tmp371 7 *tmp373                                     ...
        label *label266                                              ...
  670:  sensor *tmp375 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  671:  jump *label267 greaterThanEq *tmp375 *tmp371                 ...
  672:  jump *label268 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  673:  sensor *tmp380 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  674:  op mul *tmp381 .unloader1 .powerTarget                       ...
  675:  jump *label271 greaterThanEq *tmp380 *tmp381                 ...
  676:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  677:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  678:  setaddr :mineOre.1*retaddr *label274                         ...
  679:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label274                                              ...
  680:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label271                                              ...
  681:  sensor *tmp384 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  682:  jump *label275 greaterThanEq *tmp384 .targetSilicon          ...
  683:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  684:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  685:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  686:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  687:  jump *label279 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  688:  set :mineOre.1:ore @coal                                     ...
        label *label279                                              ...
  689:  setaddr :mineOre.1*retaddr *label280                         CoreBuilder.mnd: mineOre(ore);
  690:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label280                                              ...
  691:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label275                                              ...
  692:  sensor *tmp391 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  693:  jump *label281 greaterThanEq *tmp391 .targetCopper           ...
  694:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  695:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  696:  setaddr :mineOre.1*retaddr *label284                         ...
  697:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label284                                              ...
  698:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label281                                              ...
  699:  sensor *tmp394 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  700:  jump *label285 greaterThanEq *tmp394 .targetLead             ...
  701:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  702:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  703:  setaddr :mineOre.1*retaddr *label288                         ...
  704:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label288                                              ...
  705:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label285                                              ...
  706:  sensor *tmp397 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  707:  jump *label289 greaterThanEq *tmp397 .targetMetaglass        ...
  708:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  709:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  710:  setaddr :mineOre.1*retaddr *label292                         ...
  711:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label292                                              ...
  712:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label289                                              ...
  713:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  714:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  715:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  716:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  717:  jump *label295 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  718:  set :mineOre.1:ore @coal                                     ...
        label *label295                                              ...
  719:  setaddr :mineOre.1*retaddr *label296                         CoreBuilder.mnd: mineOre(ore);
  720:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label296                                              ...
  721:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label267                                              ...
  722:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  723:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  724:  set :fetchBlock:item @titanium                               ...
  725:  setaddr :fetchBlock*retaddr *label298                        ...
  726:  call *label19 *invalid :fetchBlock*retval                    ...
        label *label298                                              ...
        label *label268                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  727:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label29                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  728:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  729:  op sign *tmp405 :meetTarget:lead 0                           ...
  730:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  731:  op sign *tmp405 :meetTarget:graphite 0                       ...
  732:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  733:  op sign *tmp405 :meetTarget:silicon 0                        ...
  734:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  735:  op sign *tmp405 :meetTarget:titanium 0                       ...
  736:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  737:  op sign *tmp405 :meetTarget:metaglass 0                      ...
  738:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  739:  op sign *tmp405 :meetTarget:thorium 0                        ...
  740:  op add :meetTarget:count :meetTarget:count *tmp405           ...
  741:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  742:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  743:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  744:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  745:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  746:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  747:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  748:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  749:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  750:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  751:  op add *tmp406 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  752:  op add .targetLead *tmp406 1                                 ...
  753:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  754:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  755:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  756:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  757:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  758:  op add *tmp408 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  759:  write *tmp408 .controller ".pressTarget"                     ...
  760:  op add *tmp409 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  761:  write *tmp409 .controller ".smelterTarget"                   ...
  762:  op add *tmp410 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  763:  write *tmp410 .controller ".kilnTarget"                      ...
  764:  write *tmp406 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  765:  op sign *tmp412 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  766:  op mul *tmp413 *tmp412 20                                    ...
  767:  op add *tmp414 :meetTarget:silicon *tmp413                   ...
  768:  write *tmp414 .controller ".siliconReserve"                  ...
        label *label310                                              CoreBuilder.mnd: while !targetMet() do
  769:  sensor *tmp416 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  770:  jump *label314 greaterThanEq *tmp416 .targetCopper           ...
  771:  set *tmp415 false                                            ...
  772:  jump *label313 always 0 0                                    ...
        label *label314                                              ...
  773:  sensor *tmp419 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  774:  jump *label316 greaterThanEq *tmp419 .targetLead             ...
  775:  set *tmp415 false                                            ...
  776:  jump *label313 always 0 0                                    ...
        label *label316                                              ...
  777:  sensor *tmp422 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  778:  jump *label318 greaterThanEq *tmp422 .targetGraphite         ...
  779:  set *tmp415 false                                            ...
  780:  jump *label313 always 0 0                                    ...
        label *label318                                              ...
  781:  sensor *tmp425 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  782:  jump *label320 greaterThanEq *tmp425 .targetSilicon          ...
  783:  set *tmp415 false                                            ...
  784:  jump *label313 always 0 0                                    ...
        label *label320                                              ...
  785:  sensor *tmp428 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  786:  jump *label322 greaterThanEq *tmp428 .targetTitanium         ...
  787:  set *tmp415 false                                            ...
  788:  jump *label313 always 0 0                                    ...
        label *label322                                              ...
  789:  sensor *tmp431 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  790:  jump *label324 greaterThanEq *tmp431 .targetMetaglass        ...
  791:  set *tmp415 false                                            ...
  792:  jump *label313 always 0 0                                    ...
        label *label324                                              ...
  793:  sensor *tmp434 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  794:  jump *label326 greaterThanEq *tmp434 .targetThorium          ...
  795:  set *tmp415 false                                            ...
  796:  jump *label313 always 0 0                                    ...
        label *label326                                              ...
  797:  set *tmp415 true                                             CoreBuilder.mnd: return true;
  798:  jump *label313 always 0 0                                    ...
        label *label313                                              CoreBuilder.mnd: while !targetMet() do
  799:  jump *label312 notEqual *tmp415 false                        ...
  800:  setaddr :supplyBase*retaddr *label328                        CoreBuilder.mnd: supplyBase();
  801:  call *label28 *invalid :supplyBase*retval                    ...
        label *label328                                              ...
  802:  jump *label310 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label312                                              ...
  803:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label30                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
  804:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  805:  set :meetTarget:copper :buildBlock:copper                    ...
  806:  set :meetTarget:lead :buildBlock:lead                        ...
  807:  set :meetTarget:graphite :buildBlock:graphite                ...
  808:  set :meetTarget:silicon :buildBlock:silicon                  ...
  809:  set :meetTarget:titanium :buildBlock:titanium                ...
  810:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  811:  set :meetTarget:thorium :buildBlock:thorium                  ...
  812:  setaddr :meetTarget*retaddr *label333                        ...
  813:  call *label29 *invalid :meetTarget*retval                    ...
        label *label333                                              ...
  814:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config);
  815:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  816:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  817:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  818:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  819:  write false .blockBuilder ":buildBlockAt*finished"           ...
  820:  write 1 .blockBuilder "@counter"                             ...
        label *label334                                              ...
  821:  wait 1e-15                                                   ...
  822:  read *tmp458 .blockBuilder ":buildBlockAt*finished"          ...
  823:  jump *label334 equal *tmp458 false                           ...
  824:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  825:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
        label *label31                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  826:  jump *label336 lessThan :buildRemoteBlock:x 0                CoreBuilder.mnd: if x >= 0 then
  827:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  828:  setaddr :unpackCfg*retaddr *label338                         ...
  829:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label338                                              ...
  830:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null);
  831:  set :buildBlock:x :buildRemoteBlock:x                        ...
  832:  set :buildBlock:y :buildRemoteBlock:y                        ...
  833:  set :buildBlock:copper :unpackCfg:cu                         ...
  834:  set :buildBlock:lead :unpackCfg:pb                           ...
  835:  set :buildBlock:graphite :unpackCfg:gr                       ...
  836:  set :buildBlock:silicon :unpackCfg:si                        ...
  837:  set :buildBlock:titanium :unpackCfg:ti                       ...
  838:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  839:  set :buildBlock:thorium :unpackCfg:th                        ...
  840:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  841:  set :buildBlock:config null                                  ...
  842:  setaddr :buildBlock*retaddr *label339                        ...
  843:  call *label30 *invalid :buildBlock*retval                    ...
        label *label339                                              ...
  844:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  845:  return :buildRemoteBlock*retaddr                             ...
        label *label336                                              CoreBuilder.mnd: if x >= 0 then
  846:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  847:  return :buildRemoteBlock*retaddr                             ...
        label *label32                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  848:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  849:  setaddr :unpackCfg*retaddr *label341                         ...
  850:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label341                                              ...
  851:  op add *tmp462 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config);
  852:  op add *tmp463 .coreY :unpackCfg:y                           ...
  853:  set :buildBlock:block :unpackCfg:type                        ...
  854:  set :buildBlock:x *tmp462                                    ...
  855:  set :buildBlock:y *tmp463                                    ...
  856:  set :buildBlock:copper :unpackCfg:cu                         ...
  857:  set :buildBlock:lead :unpackCfg:pb                           ...
  858:  set :buildBlock:graphite :unpackCfg:gr                       ...
  859:  set :buildBlock:silicon :unpackCfg:si                        ...
  860:  set :buildBlock:titanium :unpackCfg:ti                       ...
  861:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  862:  set :buildBlock:thorium :unpackCfg:th                        ...
  863:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  864:  set :buildBlock:config :buildBlockFromCfg:config             ...
  865:  setaddr :buildBlock*retaddr *label342                        ...
  866:  call *label30 *invalid :buildBlock*retval                    ...
        label *label342                                              ...
  867:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  868:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label33                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  869:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  870:  set :buildBlockFromCfg:config null                           ...
  871:  setaddr :buildBlockFromCfg*retaddr *label344                 ...
  872:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label344                                              ...
  873:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  874:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label34                                               CoreBuilder.mnd: void meetTarget(cfg)
  875:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  876:  setaddr :unpackCfg*retaddr *label346                         ...
  877:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label346                                              ...
  878:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  879:  set :meetTarget:copper :unpackCfg:cu                         ...
  880:  set :meetTarget:lead :unpackCfg:pb                           ...
  881:  set :meetTarget:graphite :unpackCfg:gr                       ...
  882:  set :meetTarget:silicon :unpackCfg:si                        ...
  883:  set :meetTarget:titanium :unpackCfg:ti                       ...
  884:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  885:  set :meetTarget:thorium :unpackCfg:th                        ...
  886:  setaddr :meetTarget*retaddr *label347                        ...
  887:  call *label29 *invalid :meetTarget*retval                    ...
        label *label347                                              ...
  888:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label36                                               CoreBuilder.mnd: def titaniumDrillScore(x, y, in out positive, in out negative)
  889:  ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore: Actions.mnd: getBlock(x, y, , out floor);
  890:  jump *label354 notEqual :getFloor:floor @ore-titanium        CoreBuilder.mnd: case getFloor(x, y)
  891:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  892:  return :titaniumDrillScore*retaddr                           ...
        label *label354                                              ...
  893:  jump *label357 equal :getFloor:floor @ore-copper             ...
  894:  jump *label357 equal :getFloor:floor @ore-lead               ...
  895:  jump *label357 equal :getFloor:floor @ore-scrap              ...
  896:  jump *label356 notEqual :getFloor:floor @ore-coal            ...
        label *label357                                              ...
  897:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label356                                              ...
  898:  return :titaniumDrillScore*retaddr                           CoreBuilder.mnd: def titaniumDrillScore(x, y, in out positive, in out negative)
        label *label37                                               CoreBuilder.mnd: void buildTitaniumDrill(x, y, in out count)
  899:  jump *label359 greaterThanEq :buildTitaniumDrill:count 8     CoreBuilder.mnd: if count < 8 then
  900:  set :moveTo:x :buildTitaniumDrill:x                          Actions.mnd: moveTo(x, y, RADIUS);
  901:  set :moveTo:y :buildTitaniumDrill:y                          ...
  902:  set :moveTo:radius 6                                         ...
  903:  setaddr :moveTo*retaddr *label362                            ...
  904:  call *label11 *invalid :moveTo*retval                        ...
        label *label362                                              ...
  905:  set .positive 0                                              CoreBuilder.mnd: positive = 0; negative = 0;
  906:  set .negative 0                                              ...
  907:  set :titaniumDrillScore:x :buildTitaniumDrill:x              CoreBuilder.mnd: titaniumDrillScore(x, y, in out positive, in out negative);
  908:  set :titaniumDrillScore:y :buildTitaniumDrill:y              ...
  909:  set :titaniumDrillScore:positive .positive                   ...
  910:  set :titaniumDrillScore:negative .negative                   ...
  911:  setaddr :titaniumDrillScore*retaddr *label363                ...
  912:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label363                                              ...
  913:  set .positive :titaniumDrillScore:positive                   ...
  914:  set .negative :titaniumDrillScore:negative                   ...
  915:  op add *tmp484 :buildTitaniumDrill:y 0.5                     CoreBuilder.mnd: titaniumDrillScore(x, y + 0.5, in out positive, in out negative);
  916:  set :titaniumDrillScore:x :buildTitaniumDrill:x              ...
  917:  set :titaniumDrillScore:y *tmp484                            ...
  918:  set :titaniumDrillScore:positive .positive                   ...
  919:  set :titaniumDrillScore:negative .negative                   ...
  920:  setaddr :titaniumDrillScore*retaddr *label364                ...
  921:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label364                                              ...
  922:  set .positive :titaniumDrillScore:positive                   ...
  923:  set .negative :titaniumDrillScore:negative                   ...
  924:  op add :titaniumDrillScore:x :buildTitaniumDrill:x 0.5       CoreBuilder.mnd: titaniumDrillScore(x + 0.5, y, in out positive, in out negative);
  925:  set :titaniumDrillScore:y :buildTitaniumDrill:y              ...
  926:  set :titaniumDrillScore:positive .positive                   ...
  927:  set :titaniumDrillScore:negative .negative                   ...
  928:  setaddr :titaniumDrillScore*retaddr *label365                ...
  929:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label365                                              ...
  930:  set .positive :titaniumDrillScore:positive                   ...
  931:  set .negative :titaniumDrillScore:negative                   ...
  932:  op add *tmp488 :buildTitaniumDrill:x 0.5                     CoreBuilder.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  933:  op add *tmp489 :buildTitaniumDrill:y 0.5                     ...
  934:  set :titaniumDrillScore:x *tmp488                            ...
  935:  set :titaniumDrillScore:y *tmp489                            ...
  936:  set :titaniumDrillScore:positive .positive                   ...
  937:  set :titaniumDrillScore:negative .negative                   ...
  938:  setaddr :titaniumDrillScore*retaddr *label366                ...
  939:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label366                                              ...
  940:  set .positive :titaniumDrillScore:positive                   ...
  941:  set .negative :titaniumDrillScore:negative                   ...
  942:  op greaterThan *tmp491 .positive .negative                   CoreBuilder.mnd: if positive > negative && positive >= 2 then
  943:  op greaterThanEq *tmp492 .positive 2                         ...
  944:  op land *tmp493 *tmp491 *tmp492                              ...
  945:  jump *label367 equal *tmp493 false                           ...
  946:  write @pneumatic-drill .blockBuilder ":buildBlockAt:block"   CoreBuilder.mnd: var drill = blockBuilder.buildBlockAt(@pneumatic-drill, x, y, null, 0);
  947:  write :buildTitaniumDrill:x .blockBuilder ":buildBlockAt:x"  ...
  948:  write :buildTitaniumDrill:y .blockBuilder ":buildBlockAt:y"  ...
  949:  write null .blockBuilder ":buildBlockAt:rotation"            ...
  950:  write 0 .blockBuilder ":buildBlockAt:config"                 ...
  951:  write false .blockBuilder ":buildBlockAt*finished"           ...
  952:  write 1 .blockBuilder "@counter"                             ...
        label *label369                                              ...
  953:  wait 1e-15                                                   ...
  954:  read *tmp500 .blockBuilder ":buildBlockAt*finished"          ...
  955:  jump *label369 equal *tmp500 false                           ...
  956:  read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt* ...
  957:  jump *label370 equal :buildTitaniumDrill:drill null          CoreBuilder.mnd: if drill != null then
  958:  write :buildTitaniumDrill:drill .flareController ":addTitani CoreBuilder.mnd: flareController.addTitaniumDrill(drill);
  959:  write false .flareController ":addTitaniumDrill*finished"    ...
  960:  write 1 .flareController "@counter"                          ...
        label *label372                                              ...
  961:  wait 1e-15                                                   ...
  962:  read *tmp505 .flareController ":addTitaniumDrill*finished"   ...
  963:  jump *label372 equal *tmp505 false                           ...
  964:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 CoreBuilder.mnd: controller.flareTarget = ++count;
  965:  write :buildTitaniumDrill:count .controller ".flareTarget"   ...
        label *label370                                              CoreBuilder.mnd: if drill != null then
        label *label367                                              CoreBuilder.mnd: if positive > negative && positive >= 2 then
        label *label359                                              CoreBuilder.mnd: if count < 8 then
  966:  return :buildTitaniumDrill*retaddr                           CoreBuilder.mnd: void buildTitaniumDrill(x, y, in out count)
        label *label38                                               CoreBuilder.mnd: void buildUnits()
  967:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  968:  set :meetTarget:copper 0                                     ...
  969:  set :meetTarget:lead 0                                       ...
  970:  set :meetTarget:graphite 0                                   ...
  971:  set :meetTarget:silicon 0                                    ...
  972:  set :meetTarget:titanium 0                                   ...
  973:  set :meetTarget:metaglass 0                                  ...
  974:  set :meetTarget:thorium 0                                    ...
  975:  setaddr :meetTarget*retaddr *label374                        ...
  976:  call *label29 *invalid :meetTarget*retval                    ...
        label *label374                                              ...
  977:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  978:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  979:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  980:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  981:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()


Performance: parsed in 881 ms, compiled in 459 ms, optimized in 1,893 ms, run in 9 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (19 steps):
The program didn't generate any output.
Execution exception at instruction 41: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
