  1463 instructions before optimizations.
    58 instructions eliminated by Temp Variables Elimination (2 iterations).
   107 instructions eliminated by Dead Code Elimination (9 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
    47 instructions eliminated by Jump Optimization (5 iterations).
    54 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     6 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
   352 instructions eliminated by Data Flow Optimization (4 passes, 17 iterations).
    19 loops improved by Loop Hoisting.
    23 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
    62 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
     8 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by JumpThreading.
    48 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   866 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 87):
    Replicate loop condition at CoreBuilder.mnd:124:5            size    +1, benefit   615473.6, efficiency 615473.633
    Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221
  * Unroll iteration loop at CoreBuilder.mnd:321:5               size   -11, benefit    10350.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 96):
  * Replicate loop condition at CoreBuilder.mnd:124:5            size    +1, benefit   615473.6, efficiency 615473.633 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 95):
  * Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 94):
  * Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 93):
  * Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714 (+21 instructions)
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 72):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
  ! Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 2: speed optimization selection (cost limit 113):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
  * Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221 (+56 instructions)

Pass 2: speed optimization selection (cost limit 57):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 3: speed optimization selection (cost limit 57):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +393, benefit     6250.0, efficiency     15.903

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-71 instructions):
 
   186 setaddr :buildBlock*retaddr *label41 (h:*label41)
   187 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   188 label *label41
-    * set *tmp28 :buildBlock*retval
   189 jump *label36 always
   190 label *label38
   191 multijump *tmp29 0 0 (m:marker3)
   192 multilabel *label40 (m:marker3)
   193 label *label39
-    * set *tmp28 null
   194 label *label36
   195 set :buildBlockFromCfg.4:block @silicon-smelter
   196 set :buildBlockFromCfg.4:offsetX 1.5
 
   268 op or *tmp45 *tmp41 *tmp44
   269 jump *label59 equal *tmp45 false
   270 jump *label57 always
-    * set *tmp46 null
   271 jump *label60 always
   272 label *label59
-    * set *tmp46 null
   273 label *label60
   274 op sin *tmp48 :locateOreAway:angle
   275 op mul *tmp49 *tmp48 :locateOreAway:distance
 
   284 label *label62
   285 op add :locateOreAway:distance :locateOreAway:distance 4
   286 op add :locateOreAway:angle :locateOreAway:angle 45
-    * set *tmp47 :locateOreAway:angle
   287 label *label61
   288 label *label56
   289 jump *label55 always
   290 label *label57
-    * set *tmp38 null
   291 label *label54
   292 set :buildTitaniumDrillCfg:x :locateOreAway:x
   293 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   343 label *label75
   344 set *tmp59 null
   345 label *label76
-    * set *tmp55 *tmp59
   346 label *label74
   347 set :buildTitaniumDrillCfg:count :checkOre:count
   348 op add *tmp61 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   360 label *label78
   361 set *tmp66 null
   362 label *label79
-    * set *tmp62 *tmp66
   363 label *label77
   364 set :buildTitaniumDrillCfg:count :checkOre.1:count
   365 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
 
   377 label *label81
   378 set *tmp73 null
   379 label *label82
-    * set *tmp69 *tmp73
   380 label *label80
   381 set :buildTitaniumDrillCfg:count :checkOre.2:count
   382 op add *tmp75 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   395 label *label84
   396 set *tmp81 null
   397 label *label85
-    * set *tmp77 *tmp81
   398 label *label83
   399 set :buildTitaniumDrillCfg:count :checkOre.3:count
   400 op greaterThan *tmp83 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
   410 label *label88
   411 set *tmp86 null
   412 label *label89
-    * set *tmp84 *tmp86
   413 jump *label87 always
   414 label *label86
-    * set *tmp84 null
   415 label *label87
   416 label *label68
   417 multijump *tmp54 0 0 (m:marker5)
 
   443 jump *label93 equal *tmp93 false
   444 set *tmp37 :buildTitaniumDrillCfg:result
   445 jump *label49 always
-    * set *tmp94 null
   446 jump *label94 always
   447 label *label93
-    * set *tmp94 null
   448 label *label94
   449 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * set *tmp88 null
   450 jump *label91 always
   451 label *label90
-    * set *tmp88 null
   452 label *label91
   453 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   454 op greaterThan *tmp95 :buildTitaniumDrillCfg:attempts 5
 
   466 label *label98
   467 op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
   468 op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
-    * set *tmp97 :buildTitaniumDrillCfg:angle
   469 label *label97
   470 set :buildTitaniumDrillCfg:attempts 0
   471 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
   472 op max *tmp105 *tmp104 1
   473 set :buildTitaniumDrillCfg:minimum *tmp105
-    * set *tmp96 :buildTitaniumDrillCfg:minimum
   474 jump *label96 always
   475 label *label95
-    * set *tmp96 null
   476 label *label96
   477 label *label51
   478 jump *label50 always
 
   553 setaddr :buildBlock*retaddr *label110 (h:*label110)
   554 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   555 label *label110
-    * set *tmp110 :buildBlock*retval
   556 jump *label105 always
   557 label *label107
   558 multijump *tmp111 0 0 (m:marker7)
   559 multilabel *label109 (m:marker7)
   560 label *label108
-    * set *tmp110 null
   561 label *label105
   562 set :buildBlockFromCfg.7:block @micro-processor
   563 set :buildBlockFromCfg.7:offsetX 1
 
   718 setaddr :buildBlock*retaddr *label134 (h:*label134)
   719 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   720 label *label134
-    * set *tmp127 :buildBlock*retval
   721 jump *label129 always
   722 label *label131
   723 multijump *tmp128 0 0 (m:marker11)
   724 multilabel *label133 (m:marker11)
   725 label *label132
-    * set *tmp127 null
   726 label *label129
   727 write @mono .processor ".unitToProduce"
   728 set :buildBlockFromCfg.11:block @unloader
 
   756 setaddr :buildBlock*retaddr *label140 (h:*label140)
   757 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   758 label *label140
-    * set *tmp131 :buildBlock*retval
   759 jump *label135 always
   760 label *label137
   761 multijump *tmp132 0 0 (m:marker12)
   762 multilabel *label139 (m:marker12)
   763 label *label138
-    * set *tmp131 null
   764 label *label135
   765 set :buildBlockFromCfg.12:block @kiln
   766 set :buildBlockFromCfg.12:offsetX 3.5
 
   793 setaddr :buildBlock*retaddr *label146 (h:*label146)
   794 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   795 label *label146
-    * set *tmp135 :buildBlock*retval
   796 jump *label141 always
   797 label *label143
   798 multijump *tmp136 0 0 (m:marker13)
   799 multilabel *label145 (m:marker13)
   800 label *label144
-    * set *tmp135 null
   801 label *label141
   802 write .kiln .processor ".kiln"
   803 set :buildBlockFromCfg.13:block @junction
 
   831 setaddr :buildBlock*retaddr *label152 (h:*label152)
   832 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   833 label *label152
-    * set *tmp139 :buildBlock*retval
   834 jump *label147 always
   835 label *label149
   836 multijump *tmp140 0 0 (m:marker14)
   837 multilabel *label151 (m:marker14)
   838 label *label150
-    * set *tmp139 null
   839 label *label147
   840 set :buildBlockFromCfg.14:block @water-extractor
   841 set :buildBlockFromCfg.14:offsetX -3.5
 
   868 setaddr :buildBlock*retaddr *label158 (h:*label158)
   869 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   870 label *label158
-    * set *tmp143 :buildBlock*retval
   871 jump *label153 always
   872 label *label155
   873 multijump *tmp144 0 0 (m:marker15)
   874 multilabel *label157 (m:marker15)
   875 label *label156
-    * set *tmp143 null
   876 label *label153
   877 set :buildBlockFromCfg.15:block @steam-generator
   878 set :buildBlockFromCfg.15:offsetX -3.5
 
   946 setaddr :buildBlock*retaddr *label170 (h:*label170)
   947 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   948 label *label170
-    * set *tmp151 :buildBlock*retval
   949 jump *label165 always
   950 label *label167
   951 multijump *tmp152 0 0 (m:marker17)
   952 multilabel *label169 (m:marker17)
   953 label *label168
-    * set *tmp151 null
   954 label *label165
   955 label *label171
   956 jump *label173 equal true false
 
  1013 op notEqual *tmp162 *tmp161 null
  1014 jump *label184 equal *tmp162 false
  1015 ucontrol itemDrop @air 1000
-    * set *tmp163 null
  1016 jump *label185 always
  1017 label *label184
-    * set *tmp163 null
  1018 label *label185
  1019 set :moveTo.1:x :moveToEmpty:x
  1020 set :moveTo.1:y :moveToEmpty:y
 
  1072 op greaterThanEq *tmp176 *tmp175 :depositItems:cap
  1073 jump *label202 equal *tmp176 false
  1074 jump *label201 always
-    * set *tmp177 null
  1075 jump *label203 always
  1076 label *label202
-    * set *tmp177 null
  1077 label *label203
  1078 label *label200
  1079 sensor *tmp178 @unit @firstItem
  1080 op notEqual *tmp179 *tmp178 null
  1081 jump *label199 notEqual *tmp179 false
  1082 label *label201
-    * set *tmp170 null
  1083 jump *label195 always
  1084 label *label194
  1085 label *label204
 
  1090 label *label205
  1091 jump *label204 always
  1092 label *label206
-    * set *tmp170 null
  1093 label *label195
  1094 set .transportTarget 0
  1095 label *label192
 
  1105 printflush message1
  1106 stop
  1107 label *label210
-    * set *tmp185 null
  1108 jump *label209 always
  1109 label *label208
-    * set *tmp185 null
  1110 label *label209
  1111 label *label207
  1112 return :locateOre*retaddr
 
  1136 op land *tmp189 *tmp187 *tmp188
  1137 jump *label218 equal *tmp189 false
  1138 jump *label217 always
-    * set *tmp190 null
  1139 jump *label219 always
  1140 label *label218
-    * set *tmp190 null
  1141 label *label219
  1142 ucontrol mine :mineOre:x :mineOre:y
  1143 label *label216
 
  1193 op land *tmp200 *tmp198 *tmp199
  1194 jump *label229 equal *tmp200 false
  1195 ucontrol itemDrop @air 1000
-    * set *tmp201 null
  1196 jump *label230 always
  1197 label *label229
-    * set *tmp201 null
  1198 label *label230
  1199 label *label227
  1200 sensor *tmp202 @unit :fetchBlock:item
 
  1246 setaddr :mineOre*retaddr *label244 (h:*label244)
  1247 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1248 label *label244
-    * set *tmp218 null
  1249 jump *label243 always
  1250 label *label242
-    * set *tmp218 null
  1251 label *label243
  1252 label *label240
  1253 set :supplyBase:supplied true
 
  1256 label *label237
  1257 set *tmp213 null
  1258 label *label238
-    * set *tmp210 *tmp213
  1259 jump *label236 always
  1260 label *label235
-    * set *tmp210 null
  1261 label *label236
  1262 sensor *tmp219 .core @silicon
  1263 op lessThan *tmp220 *tmp219 .updatedSiliconTarget
 
  1289 setaddr :mineOre*retaddr *label254 (h:*label254)
  1290 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1291 label *label254
-    * set *tmp229 null
  1292 jump *label253 always
  1293 label *label252
-    * set *tmp229 null
  1294 label *label253
  1295 label *label250
  1296 set :supplyBase:supplied true
 
  1324 setaddr :mineOre*retaddr *label262 (h:*label262)
  1325 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1326 label *label262
-    * set *tmp237 null
  1327 jump *label261 always
  1328 label *label260
-    * set *tmp237 null
  1329 label *label261
  1330 label *label258
  1331 set :supplyBase:supplied true
 
  1336 label *label256
  1337 set *tmp224 *tmp232
  1338 label *label248
-    * set *tmp221 *tmp224
  1339 jump *label246 always
  1340 label *label245
-    * set *tmp221 null
  1341 label *label246
  1342 sensor *tmp238 .battery @totalPower
  1343 op lessThan *tmp239 *tmp238 .powerTarget
 
  1366 setaddr :mineOre*retaddr *label270 (h:*label270)
  1367 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1368 label *label270
-    * set *tmp245 null
  1369 jump *label269 always
  1370 label *label268
-    * set *tmp245 null
  1371 label *label269
  1372 label *label266
  1373 set :supplyBase:supplied true
 
  1376 label *label263
  1377 set *tmp240 null
  1378 label *label264
-    * set *tmp207 *tmp240
  1379 jump *label234 always
  1380 label *label233
  1381 op notEqual *tmp246 .processor null
 
  1401 label *label271
  1402 set *tmp247 null
  1403 label *label272
-    * set *tmp207 *tmp247
  1404 label *label234
  1405 sensor *tmp251 .titanium_drill @titanium
  1406 op lessThan *tmp252 *tmp251 .titaniumTrigger
 
  1538 label *label287
  1539 set *tmp256 *tmp263
  1540 label *label280
-    * set *tmp253 *tmp256
  1541 jump *label278 always
  1542 label *label277
  1543 set :status1.10:text "Fetching titanium"
 
  1548 setaddr :fetchBlock*retaddr *label309 (h:*label309)
  1549 call *label8 *invalid :fetchBlock*retval (m:*label309) (h:*label309)
  1550 label *label309
-    * set *tmp253 null
  1551 label *label278
  1552 label *label232
  1553 return :supplyBase*retaddr
 
  1597 set .updatedGraphiteTarget *tmp280
  1598 op max *tmp281 10 .siliconTarget
  1599 set .updatedSiliconTarget *tmp281
-    * set *tmp279 .updatedSiliconTarget
  1600 jump *label321 always
  1601 label *label320
  1602 op add *tmp282 .graphiteTarget 30
 
  1605 write *tmp283 .processor ".smelterTarget"
  1606 op add *tmp284 .metaglassTarget 30
  1607 write *tmp284 .processor ".kilnTarget"
-    * set *tmp279 *tmp284
  1608 label *label321
  1609 sensor *tmp285 .core @titanium
  1610 op add *tmp286 .titaniumTarget 10
 
  1666 jump *label333 equal *tmp315 false
  1667 set :buildBlockAt*retval :buildBlockAt:building
  1668 jump *label328 always
-    * set *tmp316 null
  1669 jump *label334 always
  1670 label *label333
-    * set *tmp316 null
  1671 label *label334
  1672 jump *label335 equal :buildBlockAt:skipError false
  1673 set :buildBlockAt*retval null
  1674 jump *label328 always
-    * set *tmp317 null
  1675 jump *label336 always
  1676 label *label335
-    * set *tmp317 null
  1677 label *label336
  1678 print "[salmon]"
  1679 print "Cannot build at ("
 
  1685 printflush message1
  1686 stop
  1687 label *label337
-    * set *tmp314 null
  1688 jump *label332 always
  1689 label *label331
-    * set *tmp314 null
  1690 label *label332
  1691 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1692 wait 0.25
 
  1696 op equal *tmp320 :buildBlockAt:building null
  1697 jump *label341 equal *tmp320 false
  1698 jump *label340 always
-    * set *tmp321 null
  1699 jump *label342 always
  1700 label *label341
-    * set *tmp321 null
  1701 label *label342
  1702 label *label339
  1703 op notEqual *tmp322 :buildBlockAt:type :buildBlockAt:block

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-20 instructions):
 
   338 jump *label75 equal *tmp58 false
   339 set *tmp60 :checkOre:count
   340 op add :checkOre:count :checkOre:count 1
-    * set *tmp59 *tmp60
   341 jump *label76 always
   342 label *label75
-    * set *tmp59 null
   343 label *label76
   344 label *label74
   345 set :buildTitaniumDrillCfg:count :checkOre:count
 
   353 jump *label78 equal *tmp65 false
   354 set *tmp67 :checkOre.1:count
   355 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp66 *tmp67
   356 jump *label79 always
   357 label *label78
-    * set *tmp66 null
   358 label *label79
   359 label *label77
   360 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
   368 jump *label81 equal *tmp72 false
   369 set *tmp74 :checkOre.2:count
   370 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp73 *tmp74
   371 jump *label82 always
   372 label *label81
-    * set *tmp73 null
   373 label *label82
   374 label *label80
   375 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
   384 jump *label84 equal *tmp80 false
   385 set *tmp82 :checkOre.3:count
   386 op add :checkOre.3:count :checkOre.3:count 1
-    * set *tmp81 *tmp82
   387 jump *label85 always
   388 label *label84
-    * set *tmp81 null
   389 label *label85
   390 label *label83
   391 set :buildTitaniumDrillCfg:count :checkOre.3:count
 
   397 op greaterThanEq *tmp85 :buildTitaniumDrillCfg:count 4
   398 jump *label88 equal *tmp85 false
   399 jump *label66 always
-    * set *tmp86 null
   400 jump *label89 always
   401 label *label88
-    * set *tmp86 null
   402 label *label89
   403 jump *label87 always
   404 label *label86
 
  1241 label *label243
  1242 label *label240
  1243 set :supplyBase:supplied true
-    * set *tmp213 :supplyBase:supplied
  1244 jump *label238 always
  1245 label *label237
-    * set *tmp213 null
  1246 label *label238
  1247 jump *label236 always
  1248 label *label235
 
  1282 label *label253
  1283 label *label250
  1284 set :supplyBase:supplied true
-    * set *tmp224 :supplyBase:supplied
  1285 jump *label248 always
  1286 label *label247
  1287 sensor *tmp230 .smelter @sand
 
  1321 label *label255
  1322 set *tmp232 null
  1323 label *label256
-    * set *tmp224 *tmp232
  1324 label *label248
  1325 jump *label246 always
  1326 label *label245
 
  1357 label *label269
  1358 label *label266
  1359 set :supplyBase:supplied true
-    * set *tmp240 :supplyBase:supplied
  1360 jump *label264 always
  1361 label *label263
-    * set *tmp240 null
  1362 label *label264
  1363 jump *label234 always
  1364 label *label233
 
  1380 label *label273
  1381 set *tmp250 null
  1382 label *label274
-    * set *tmp247 *tmp250
  1383 jump *label272 always
  1384 label *label271
-    * set *tmp247 null
  1385 label *label272
  1386 label *label234
  1387 sensor *tmp251 .titanium_drill @titanium
 
  1416 setaddr :mineOre.1*retaddr *label285 (h:*label285)
  1417 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
  1418 label *label285
-    * set *tmp256 null
  1419 jump *label280 always
  1420 label *label279
  1421 sensor *tmp261 .core @copper
 
  1517 label *label292
  1518 set *tmp263 *tmp266
  1519 label *label287
-    * set *tmp256 *tmp263
  1520 label *label280
  1521 jump *label278 always
  1522 label *label277

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   336 ucontrol getBlock :checkOre:x :checkOre:y *tmp57 *tmp56 :checkOre:floor
   337 op equal *tmp58 :checkOre:floor :checkOre:ore
   338 jump *label75 equal *tmp58 false
-    * set *tmp60 :checkOre:count
   339 op add :checkOre:count :checkOre:count 1
   340 jump *label76 always
   341 label *label75
 
   350 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp64 *tmp63 :checkOre.1:floor
   351 op equal *tmp65 :checkOre.1:floor :checkOre.1:ore
   352 jump *label78 equal *tmp65 false
-    * set *tmp67 :checkOre.1:count
   353 op add :checkOre.1:count :checkOre.1:count 1
   354 jump *label79 always
   355 label *label78
 
   364 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp71 *tmp70 :checkOre.2:floor
   365 op equal *tmp72 :checkOre.2:floor :checkOre.2:ore
   366 jump *label81 equal *tmp72 false
-    * set *tmp74 :checkOre.2:count
   367 op add :checkOre.2:count :checkOre.2:count 1
   368 jump *label82 always
   369 label *label81
 
   379 ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp79 *tmp78 :checkOre.3:floor
   380 op equal *tmp80 :checkOre.3:floor :checkOre.3:ore
   381 jump *label84 equal *tmp80 false
-    * set *tmp82 :checkOre.3:count
   382 op add :checkOre.3:count :checkOre.3:count 1
   383 jump *label85 always
   384 label *label84
 
  1312 label *label261
  1313 label *label258
  1314 set :supplyBase:supplied true
-    * set *tmp232 :supplyBase:supplied
  1315 jump *label256 always
  1316 label *label255
-    * set *tmp232 null
  1317 label *label256
  1318 label *label248
  1319 jump *label246 always
 
  1369 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
  1370 label *label276
  1371 jump *label232 always
-    * set *tmp250 null
  1372 jump *label274 always
  1373 label *label273
-    * set *tmp250 null
  1374 label *label274
  1375 jump *label272 always
  1376 label *label271
 
  1427 setaddr :mineOre.1*retaddr *label290 (h:*label290)
  1428 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
  1429 label *label290
-    * set *tmp263 null
  1430 jump *label287 always
  1431 label *label286
  1432 sensor *tmp264 .core @lead
 
  1506 label *label297
  1507 set *tmp266 *tmp269
  1508 label *label292
-    * set *tmp263 *tmp266
  1509 label *label287
  1510 label *label280
  1511 jump *label278 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1446 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1447 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1448 label *label295
-    * set *tmp266 null
  1449 jump *label292 always
  1450 label *label291
  1451 sensor *tmp267 .core @metaglass
 
  1503 label *label302
  1504 set *tmp269 *tmp271
  1505 label *label297
-    * set *tmp266 *tmp269
  1506 label *label292
  1507 label *label287
  1508 label *label280

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1465 setaddr :mineOre.1*retaddr *label300 (h:*label300)
  1466 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
  1467 label *label300
-    * set *tmp269 null
  1468 jump *label297 always
  1469 label *label296
  1470 op equal *tmp270 :supplyBase:supplied false
 
  1500 label *label301
  1501 set *tmp271 null
  1502 label *label302
-    * set *tmp269 *tmp271
  1503 label *label297
  1504 label *label292
  1505 label *label287

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1495 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1496 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1497 label *label307
-    * set *tmp271 null
  1498 jump *label302 always
  1499 label *label301
-    * set *tmp271 null
  1500 label *label302
  1501 label *label297
  1502 label *label292

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-58 instructions):
 
    28 label *label13
    29 label *label15
    30 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp14 *tmp13
-    * set .core *tmp13
+   31 ulocate building core false @copper .coreX .coreY 0 .core
    32 label *label16
    33 op equal *tmp15 .core null
    34 jump *label15 notEqual *tmp15 false
 
    46 set :buildBlockFromCfg:config null
    47 setaddr *tmp17 *label22
    48 label *label19
-    * op add *tmp18 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp18
-    * op add *tmp19 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp19
+   49 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   50 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    51 set :buildBlock:block :buildBlockFromCfg:block
    52 set :buildBlock:x :buildBlockFromCfg:x
    53 set :buildBlock:y :buildBlockFromCfg:y
 
    84 set :buildBlockFromCfg.1:config null
    85 setaddr *tmp21 *label28
    86 label *label25
-    * op add *tmp22 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp22
-    * op add *tmp23 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp23
+   87 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   88 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    89 set :buildBlock:block :buildBlockFromCfg.1:block
    90 set :buildBlock:x :buildBlockFromCfg.1:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
 
   122 set :buildBlockFromCfg.2:config null
   123 setaddr *tmp25 *label34
   124 label *label31
-    * op add *tmp26 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp26
-    * op add *tmp27 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp27
+  125 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  126 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   127 set :buildBlock:block :buildBlockFromCfg.2:block
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
 
   161 set :buildBlockFromCfg.3:config null
   162 setaddr *tmp29 *label40
   163 label *label37
-    * op add *tmp30 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp30
-    * op add *tmp31 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp31
+  164 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  165 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   166 set :buildBlock:block :buildBlockFromCfg.3:block
   167 set :buildBlock:x :buildBlockFromCfg.3:x
   168 set :buildBlock:y :buildBlockFromCfg.3:y
 
   196 set :buildBlockFromCfg.4:config null
   197 setaddr *tmp33 *label46
   198 label *label43
-    * op add *tmp34 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp34
-    * op add *tmp35 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp35
+  199 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  200 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   201 set :buildBlock:block :buildBlockFromCfg.4:block
   202 set :buildBlock:x :buildBlockFromCfg.4:x
   203 set :buildBlock:y :buildBlockFromCfg.4:y
 
   322 set :checkOre:y :buildTitaniumDrillCfg:ay
   323 set :checkOre:ore @ore-titanium
   324 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp57 *tmp56 :checkOre:floor
+  325 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   326 op equal *tmp58 :checkOre:floor :checkOre:ore
   327 jump *label75 equal *tmp58 false
   328 op add :checkOre:count :checkOre:count 1
 
   331 label *label76
   332 label *label74
   333 set :buildTitaniumDrillCfg:count :checkOre:count
-    * op add *tmp61 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:x *tmp61
+  334 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   335 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   336 set :checkOre.1:ore @ore-titanium
   337 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp64 *tmp63 :checkOre.1:floor
+  338 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   339 op equal *tmp65 :checkOre.1:floor :checkOre.1:ore
   340 jump *label78 equal *tmp65 false
   341 op add :checkOre.1:count :checkOre.1:count 1
 
   349 set :checkOre.2:y *tmp68
   350 set :checkOre.2:ore @ore-titanium
   351 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp71 *tmp70 :checkOre.2:floor
+  352 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   353 op equal *tmp72 :checkOre.2:floor :checkOre.2:ore
   354 jump *label81 equal *tmp72 false
   355 op add :checkOre.2:count :checkOre.2:count 1
 
   364 set :checkOre.3:y *tmp76
   365 set :checkOre.3:ore @ore-titanium
   366 set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp79 *tmp78 :checkOre.3:floor
+  367 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   368 op equal *tmp80 :checkOre.3:floor :checkOre.3:ore
   369 jump *label84 equal *tmp80 false
   370 op add :checkOre.3:count :checkOre.3:count 1
 
   398 op greaterThan *tmp87 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   399 jump *label90 equal *tmp87 false
   400 op div *tmp89 :buildTitaniumDrillCfg:dx 2
-    * op add *tmp90 :buildTitaniumDrillCfg:ax *tmp89
-    * set :buildTitaniumDrillCfg:ax *tmp90
+  401 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp89
   402 op div *tmp91 :buildTitaniumDrillCfg:dy 2
-    * op add *tmp92 :buildTitaniumDrillCfg:ay *tmp91
-    * set :buildTitaniumDrillCfg:ay *tmp92
+  403 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp91
   404 set :buildBlockAt:block @pneumatic-drill
   405 set :buildBlockAt:x :buildTitaniumDrillCfg:ax
   406 set :buildBlockAt:y :buildTitaniumDrillCfg:ay
 
   441 label *label97
   442 set :buildTitaniumDrillCfg:attempts 0
   443 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
-    * op max *tmp105 *tmp104 1
-    * set :buildTitaniumDrillCfg:minimum *tmp105
+  444 op max :buildTitaniumDrillCfg:minimum *tmp104 1
   445 jump *label96 always
   446 label *label95
   447 label *label96
 
   466 set :buildBlockFromCfg.5:config null
   467 setaddr *tmp107 *label103
   468 label *label100
-    * op add *tmp108 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp108
-    * op add *tmp109 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp109
+  469 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  470 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   471 set :buildBlock:block :buildBlockFromCfg.5:block
   472 set :buildBlock:x :buildBlockFromCfg.5:x
   473 set :buildBlock:y :buildBlockFromCfg.5:y
 
   504 set :buildBlockFromCfg.6:config null
   505 setaddr *tmp111 *label109
   506 label *label106
-    * op add *tmp112 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp112
-    * op add *tmp113 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp113
+  507 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  508 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   509 set :buildBlock:block :buildBlockFromCfg.6:block
   510 set :buildBlock:x :buildBlockFromCfg.6:x
   511 set :buildBlock:y :buildBlockFromCfg.6:y
 
   539 set :buildBlockFromCfg.7:config processor1
   540 setaddr *tmp115 *label115
   541 label *label112
-    * op add *tmp116 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp116
-    * op add *tmp117 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp117
+  542 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  543 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   544 set :buildBlock:block :buildBlockFromCfg.7:block
   545 set :buildBlock:x :buildBlockFromCfg.7:x
   546 set :buildBlock:y :buildBlockFromCfg.7:y
 
   564 set *tmp114 null
   565 label *label111
   566 set .processor *tmp114
-    * set *tmp118 .core
-    * write *tmp118 .processor ".core"
+  567 write .core .processor ".core"
   568 write .battery .processor ".battery"
   569 write .generator .processor ".generator"
   570 write .smelter .processor ".smelter"
 
   582 set :buildBlockFromCfg.8:config @mono
   583 setaddr *tmp120 *label121
   584 label *label118
-    * op add *tmp121 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp121
-    * op add *tmp122 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp122
+  585 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  586 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   587 set :buildBlock:block :buildBlockFromCfg.8:block
   588 set :buildBlock:x :buildBlockFromCfg.8:x
   589 set :buildBlock:y :buildBlockFromCfg.8:y
 
   621 set :buildBlockFromCfg.9:config null
   622 setaddr *tmp124 *label127
   623 label *label124
-    * op add *tmp125 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp125
-    * op add *tmp126 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp126
+  624 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  625 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   626 set :buildBlock:block :buildBlockFromCfg.9:block
   627 set :buildBlock:x :buildBlockFromCfg.9:x
   628 set :buildBlock:y :buildBlockFromCfg.9:y
 
   660 set :buildBlockFromCfg.10:config null
   661 setaddr *tmp128 *label133
   662 label *label130
-    * op add *tmp129 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp129
-    * op add *tmp130 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp130
+  663 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  664 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   665 set :buildBlock:block :buildBlockFromCfg.10:block
   666 set :buildBlock:x :buildBlockFromCfg.10:x
   667 set :buildBlock:y :buildBlockFromCfg.10:y
 
   696 set :buildBlockFromCfg.11:config null
   697 setaddr *tmp132 *label139
   698 label *label136
-    * op add *tmp133 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp133
-    * op add *tmp134 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp134
+  699 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  700 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   701 set :buildBlock:block :buildBlockFromCfg.11:block
   702 set :buildBlock:x :buildBlockFromCfg.11:x
   703 set :buildBlock:y :buildBlockFromCfg.11:y
 
   731 set :buildBlockFromCfg.12:config null
   732 setaddr *tmp136 *label145
   733 label *label142
-    * op add *tmp137 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp137
-    * op add *tmp138 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp138
+  734 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  735 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   736 set :buildBlock:block :buildBlockFromCfg.12:block
   737 set :buildBlock:x :buildBlockFromCfg.12:x
   738 set :buildBlock:y :buildBlockFromCfg.12:y
 
   767 set :buildBlockFromCfg.13:config null
   768 setaddr *tmp140 *label151
   769 label *label148
-    * op add *tmp141 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp141
-    * op add *tmp142 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp142
+  770 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  771 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   772 set :buildBlock:block :buildBlockFromCfg.13:block
   773 set :buildBlock:x :buildBlockFromCfg.13:x
   774 set :buildBlock:y :buildBlockFromCfg.13:y
 
   802 set :buildBlockFromCfg.14:config null
   803 setaddr *tmp144 *label157
   804 label *label154
-    * op add *tmp145 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp145
-    * op add *tmp146 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp146
+  805 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  806 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   807 set :buildBlock:block :buildBlockFromCfg.14:block
   808 set :buildBlock:x :buildBlockFromCfg.14:x
   809 set :buildBlock:y :buildBlockFromCfg.14:y
 
   837 set :buildBlockFromCfg.15:config null
   838 setaddr *tmp148 *label163
   839 label *label160
-    * op add *tmp149 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp149
-    * op add *tmp150 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp150
+  840 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  841 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   842 set :buildBlock:block :buildBlockFromCfg.15:block
   843 set :buildBlock:x :buildBlockFromCfg.15:x
   844 set :buildBlock:y :buildBlockFromCfg.15:y
 
   876 set :buildBlockFromCfg.16:config @coal
   877 setaddr *tmp152 *label169
   878 label *label166
-    * op add *tmp153 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp153
-    * op add *tmp154 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp154
+  879 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  880 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   881 set :buildBlock:block :buildBlockFromCfg.16:block
   882 set :buildBlock:x :buildBlockFromCfg.16:x
   883 set :buildBlock:y :buildBlockFromCfg.16:y
 
   920 print .status2
   921 print .status3
   922 print .item2
-    * set *tmp155 .block2
-    * print *tmp155
+  923 print .block2
   924 label *label14
   925 wait 1e12
   926 jump *label13 always
 
  1009 setaddr :moveToBlock*retaddr *label198 (h:*label198)
  1010 call *label3 *invalid :moveToBlock*retval (m:*label198) (h:*label198)
  1011 label *label198
-    * sensor *tmp174 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp174
+ 1012 sensor :depositItems:cap :depositItems:block @itemCapacity
  1013 label *label199
  1014 ucontrol itemDrop :depositItems:block 30
  1015 sensor *tmp175 :depositItems:block :depositItems:item
 
  1040 return :depositItems*retaddr
  1041 end
  1042 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp182 *tmp183
+ 1043 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp182 0
  1044 op equal *tmp184 *tmp182 false
  1045 jump *label208 equal *tmp184 false
  1046 print "[salmon]"
 
  1073 set .status3 :status3.2:text
  1074 label *label214
  1075 label *label215
-    * sensor *tmp186 @unit @firstItem
-    * set :mineOre:item *tmp186
+ 1076 sensor :mineOre:item @unit @firstItem
  1077 op notEqual *tmp187 :mineOre:item null
  1078 op notEqual *tmp188 :mineOre:item :mineOre:ore
  1079 op land *tmp189 *tmp187 *tmp188
 
  1099 return :mineOre*retaddr
  1100 end
  1101 label *label7
-    * set *tmp193 :mineOre.1:ore
-    * set :mineOre:ore *tmp193
+ 1102 set :mineOre:ore :mineOre.1:ore
  1103 set :mineOre:amount 30
  1104 set :mineOre:block .core
  1105 setaddr :mineOre*retaddr *label222 (h:*label222)
 
  1109 return :mineOre.1*retaddr
  1110 end
  1111 label *label8
-    * sensor *tmp194 :fetchBlock:block @itemCapacity
-    * set .transportTarget *tmp194
+ 1112 sensor .transportTarget :fetchBlock:block @itemCapacity
  1113 set .transportItem :fetchBlock:item
  1114 set :status2:text "Fetching "
  1115 set :status2:item :fetchBlock:item
 
  1127 label *label225
  1128 label *label226
  1129 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp197 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp197
+ 1130 sensor :fetchBlock:unitItem @unit @firstItem
  1131 op notEqual *tmp198 :fetchBlock:unitItem null
  1132 op notEqual *tmp199 :fetchBlock:unitItem :fetchBlock:item
  1133 op land *tmp200 *tmp198 *tmp199
 
  1176 label *label241
  1177 sensor *tmp214 :supplyBlock:block @itemCapacity
  1178 sensor *tmp215 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp216 *tmp214 *tmp215
-    * set :supplyBlock:missing *tmp216
+ 1179 op sub :supplyBlock:missing *tmp214 *tmp215
  1180 op greaterThan *tmp217 :supplyBlock:missing 0
  1181 jump *label242 equal *tmp217 false
  1182 set :mineOre:ore :supplyBlock:ore
 
  1216 label *label251
  1217 sensor *tmp225 :supplyBlock.1:block @itemCapacity
  1218 sensor *tmp226 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp227 *tmp225 *tmp226
-    * set :supplyBlock.1:missing *tmp227
+ 1219 op sub :supplyBlock.1:missing *tmp225 *tmp226
  1220 op greaterThan *tmp228 :supplyBlock.1:missing 0
  1221 jump *label252 equal *tmp228 false
  1222 set :mineOre:ore :supplyBlock.1:ore
 
  1249 label *label259
  1250 sensor *tmp233 :supplyBlock.2:block @itemCapacity
  1251 sensor *tmp234 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp235 *tmp233 *tmp234
-    * set :supplyBlock.2:missing *tmp235
+ 1252 op sub :supplyBlock.2:missing *tmp233 *tmp234
  1253 op greaterThan *tmp236 :supplyBlock.2:missing 0
  1254 jump *label260 equal *tmp236 false
  1255 set :mineOre:ore :supplyBlock.2:ore
 
  1287 label *label267
  1288 sensor *tmp241 :supplyBlock.3:block @itemCapacity
  1289 sensor *tmp242 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp243 *tmp241 *tmp242
-    * set :supplyBlock.3:missing *tmp243
+ 1290 op sub :supplyBlock.3:missing *tmp241 *tmp242
  1291 op greaterThan *tmp244 :supplyBlock.3:missing 0
  1292 jump *label268 equal *tmp244 false
  1293 set :mineOre:ore :supplyBlock.3:ore
 
  1335 set :status1.5:text "Meeting the silicon target"
  1336 set .status1 :status1.5:text
  1337 label *label281
-    * sensor *tmp257 .core @coal
-    * set :supplyBase:coal *tmp257
-    * sensor *tmp258 .core @sand
-    * set :supplyBase:sand *tmp258
+ 1338 sensor :supplyBase:coal .core @coal
+ 1339 sensor :supplyBase:sand .core @sand
  1340 op lessThan *tmp259 :supplyBase:coal :supplyBase:sand
  1341 jump *label282 equal *tmp259 false
  1342 set *tmp260 @coal
 
  1420 set :status1.9:text "Supplying base"
  1421 set .status1 :status1.9:text
  1422 label *label303
-    * sensor *tmp272 .core @coal
-    * set :supplyBase:coal.1 *tmp272
-    * sensor *tmp273 .core @sand
-    * set :supplyBase:sand.1 *tmp273
+ 1423 sensor :supplyBase:coal.1 .core @coal
+ 1424 sensor :supplyBase:sand.1 .core @sand
  1425 op lessThanEq *tmp274 :supplyBase:coal.1 :supplyBase:sand.1
  1426 jump *label304 equal *tmp274 false
  1427 set *tmp275 @coal
 
  1503 set .totalTargets :meetTarget:count
  1504 op equal *tmp278 .processor null
  1505 jump *label320 equal *tmp278 false
-    * op max *tmp280 10 .graphiteTarget
-    * set .updatedGraphiteTarget *tmp280
-    * op max *tmp281 10 .siliconTarget
-    * set .updatedSiliconTarget *tmp281
+ 1506 op max .updatedGraphiteTarget 10 .graphiteTarget
+ 1507 op max .updatedSiliconTarget 10 .siliconTarget
  1508 jump *label321 always
  1509 label *label320
  1510 op add *tmp282 .graphiteTarget 30
 
  1566 set :status3.3:text "Building..."
  1567 set .status3 :status3.3:text
  1568 label *label330
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp311 *tmp312
-    * set :buildBlockAt:building *tmp311
+ 1569 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1570 op notEqual *tmp313 :buildBlockAt:building null
  1571 jump *label331 equal *tmp313 false
  1572 op equal *tmp315 :buildBlockAt:type :buildBlockAt:block
 
  1598 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1599 wait 0.25
  1600 label *label338
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp318 *tmp319
-    * set :buildBlockAt:building *tmp318
+ 1601 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1602 op equal *tmp320 :buildBlockAt:building null
  1603 jump *label341 equal *tmp320 false
  1604 jump *label340 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
   226 set :buildTitaniumDrillCfg:attempts 0
   227 set :buildTitaniumDrillCfg:minimum 3
   228 label *label50
-    * jump *label52 equal true false
   229 set :meetTarget:block @pneumatic-drill
   230 set :meetTarget:copper 18
   231 set :meetTarget:lead 0
 
   240 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   241 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   242 label *label55
-    * jump *label57 equal true false
   243 set :locateOre:ore :locateOreAway:ore
   244 setaddr :locateOre*retaddr *label58 (h:*label58)
   245 call *label5 *invalid :locateOre*retval (m:*label58) (h:*label58)
 
   897 label *label168
   898 label *label165
   899 label *label171
-    * jump *label173 equal true false
   900 setaddr :supplyBase*retaddr *label174 (h:*label174)
   901 call *label9 *invalid :supplyBase*retval (m:*label174) (h:*label174)
   902 label *label174

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-47 instructions):
 
    30 ubind @poly
    31 ulocate building core false @copper .coreX .coreY 0 .core
    32 label *label16
-    * op equal *tmp15 .core null
-    * jump *label15 notEqual *tmp15 false
+   33 jump *label15 equal .core null
    34 label *label17
    35 set :buildBlockFromCfg:block @graphite-press
    36 set :buildBlockFromCfg:offsetX -1.5
 
   320 set :checkOre:ore @ore-titanium
   321 set :checkOre:count :buildTitaniumDrillCfg:count
   322 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp58 :checkOre:floor :checkOre:ore
-    * jump *label75 equal *tmp58 false
+  323 jump *label75 notEqual :checkOre:floor :checkOre:ore
   324 op add :checkOre:count :checkOre:count 1
   325 jump *label76 always
   326 label *label75
 
   332 set :checkOre.1:ore @ore-titanium
   333 set :checkOre.1:count :buildTitaniumDrillCfg:count
   334 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp65 :checkOre.1:floor :checkOre.1:ore
-    * jump *label78 equal *tmp65 false
+  335 jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
   336 op add :checkOre.1:count :checkOre.1:count 1
   337 jump *label79 always
   338 label *label78
 
   345 set :checkOre.2:ore @ore-titanium
   346 set :checkOre.2:count :buildTitaniumDrillCfg:count
   347 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp72 :checkOre.2:floor :checkOre.2:ore
-    * jump *label81 equal *tmp72 false
+  348 jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
   349 op add :checkOre.2:count :checkOre.2:count 1
   350 jump *label82 always
   351 label *label81
 
   359 set :checkOre.3:ore @ore-titanium
   360 set :checkOre.3:count :buildTitaniumDrillCfg:count
   361 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * op equal *tmp80 :checkOre.3:floor :checkOre.3:ore
-    * jump *label84 equal *tmp80 false
+  362 jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
   363 op add :checkOre.3:count :checkOre.3:count 1
   364 jump *label85 always
   365 label *label84
   366 label *label85
   367 label *label83
   368 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * op greaterThan *tmp83 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label86 equal *tmp83 false
+  369 jump *label86 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
   370 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   371 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
   372 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp85 :buildTitaniumDrillCfg:count 4
-    * jump *label88 equal *tmp85 false
+  373 jump *label88 lessThan :buildTitaniumDrillCfg:count 4
   374 jump *label66 always
   375 jump *label89 always
   376 label *label88
 
   386 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   387 jump *label64 always
   388 label *label66
-    * op greaterThan *tmp87 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
-    * jump *label90 equal *tmp87 false
+  389 jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   390 op div *tmp89 :buildTitaniumDrillCfg:dx 2
   391 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp89
   392 op div *tmp91 :buildTitaniumDrillCfg:dy 2
 
   401 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   402 label *label92
   403 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp93 :buildTitaniumDrillCfg:result null
-    * jump *label93 equal *tmp93 false
+  404 jump *label93 equal :buildTitaniumDrillCfg:result null
   405 set *tmp37 :buildTitaniumDrillCfg:result
   406 jump *label49 always
   407 jump *label94 always
 
   412 label *label90
   413 label *label91
   414 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp95 :buildTitaniumDrillCfg:attempts 5
-    * jump *label95 equal *tmp95 false
+  415 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
   416 op sin *tmp98 :buildTitaniumDrillCfg:angle
   417 op mul *tmp99 *tmp98 :buildTitaniumDrillCfg:distance
   418 op add *tmp100 .coreX *tmp99
 
   918 label *label177
   919 label *label178
   920 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
-    * op equal *tmp157 *tmp156 false
-    * jump *label180 equal *tmp157 false
+  921 jump *label180 notEqual *tmp156 false
   922 op sub *tmp158 :moveTo:radius 0.5
   923 ucontrol approach :moveTo:x :moveTo:y *tmp158
   924 label *label179
 
   941 end
   942 label *label2
   943 sensor *tmp161 @unit @firstItem
-    * op notEqual *tmp162 *tmp161 null
-    * jump *label184 equal *tmp162 false
+  944 jump *label184 equal *tmp161 null
   945 ucontrol itemDrop @air 1000
   946 jump *label185 always
   947 label *label184
 
   953 label *label186
   954 label *label187
   955 sensor *tmp164 @unit @firstItem
-    * op notEqual *tmp165 *tmp164 null
-    * jump *label189 equal *tmp165 false
+  956 jump *label189 equal *tmp164 null
   957 ucontrol itemDrop @air 1000
   958 label *label188
   959 jump *label187 always
 
   978 set .status3 :status3.1:text
   979 label *label193
   980 sensor *tmp168 @unit @firstItem
-    * op equal *tmp169 *tmp168 :depositItems:item
-    * jump *label194 equal *tmp169 false
+  981 jump *label194 notEqual *tmp168 :depositItems:item
   982 op equal *tmp171 :depositItems:block .core
   983 op land *tmp172 :depositItems:fromMining *tmp171
   984 jump *label196 equal *tmp172 false
 
   996 label *label199
   997 ucontrol itemDrop :depositItems:block 30
   998 sensor *tmp175 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp176 *tmp175 :depositItems:cap
-    * jump *label202 equal *tmp176 false
+  999 jump *label202 lessThan *tmp175 :depositItems:cap
  1000 jump *label201 always
  1001 jump *label203 always
  1002 label *label202
  1003 label *label203
  1004 label *label200
  1005 sensor *tmp178 @unit @firstItem
-    * op notEqual *tmp179 *tmp178 null
-    * jump *label199 notEqual *tmp179 false
+ 1006 jump *label199 notEqual *tmp178 null
  1007 label *label201
  1008 jump *label195 always
  1009 label *label194
  1010 label *label204
  1011 sensor *tmp180 @unit @firstItem
-    * op notEqual *tmp181 *tmp180 null
-    * jump *label206 equal *tmp181 false
+ 1012 jump *label206 equal *tmp180 null
  1013 ucontrol itemDrop @air 1000
  1014 label *label205
  1015 jump *label204 always
 
  1021 end
  1022 label *label5
  1023 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp182 0
-    * op equal *tmp184 *tmp182 false
-    * jump *label208 equal *tmp184 false
+ 1024 jump *label208 notEqual *tmp182 false
  1025 print "[salmon]"
  1026 print "Cannot locate "
  1027 print :locateOre:ore
 
  1064 ucontrol mine :mineOre:x :mineOre:y
  1065 label *label216
  1066 sensor *tmp191 @unit @totalItems
-    * op lessThan *tmp192 *tmp191 :mineOre:amount
-    * jump *label215 notEqual *tmp192 false
+ 1067 jump *label215 lessThan *tmp191 :mineOre:amount
  1068 label *label217
  1069 ucontrol unbind
  1070 set :depositItems:block :mineOre:block
 
  1132 end
  1133 label *label9
  1134 set :supplyBase:supplied false
-    * op equal *tmp206 .unloader1 null
-    * jump *label233 equal *tmp206 false
+ 1135 jump *label233 notEqual .unloader1 null
  1136 sensor *tmp208 .core @graphite
-    * op lessThan *tmp209 *tmp208 .updatedGraphiteTarget
-    * jump *label235 equal *tmp209 false
+ 1137 jump *label235 greaterThanEq *tmp208 .updatedGraphiteTarget
  1138 sensor *tmp211 .press @coal
-    * op lessThan *tmp212 *tmp211 5
-    * jump *label237 equal *tmp212 false
+ 1139 jump *label237 greaterThanEq *tmp211 5
  1140 set :status1:text "Meeting the graphite target"
  1141 set .status1 :status1:text
  1142 label *label239
 
  1152 sensor *tmp214 :supplyBlock:block @itemCapacity
  1153 sensor *tmp215 :supplyBlock:block :supplyBlock:ore
  1154 op sub :supplyBlock:missing *tmp214 *tmp215
-    * op greaterThan *tmp217 :supplyBlock:missing 0
-    * jump *label242 equal *tmp217 false
+ 1155 jump *label242 lessThanEq :supplyBlock:missing 0
  1156 set :mineOre:ore :supplyBlock:ore
  1157 set :mineOre:amount :supplyBlock:missing
  1158 set :mineOre:block :supplyBlock:block
 
  1171 label *label235
  1172 label *label236
  1173 sensor *tmp219 .core @silicon
-    * op lessThan *tmp220 *tmp219 .updatedSiliconTarget
-    * jump *label245 equal *tmp220 false
+ 1174 jump *label245 greaterThanEq *tmp219 .updatedSiliconTarget
  1175 sensor *tmp222 .smelter @coal
-    * op lessThan *tmp223 *tmp222 5
-    * jump *label247 equal *tmp223 false
+ 1176 jump *label247 greaterThanEq *tmp222 5
  1177 set :status1.1:text "Meeting the silicon target (coal)"
  1178 set .status1 :status1.1:text
  1179 label *label249
 
  1189 sensor *tmp225 :supplyBlock.1:block @itemCapacity
  1190 sensor *tmp226 :supplyBlock.1:block :supplyBlock.1:ore
  1191 op sub :supplyBlock.1:missing *tmp225 *tmp226
-    * op greaterThan *tmp228 :supplyBlock.1:missing 0
-    * jump *label252 equal *tmp228 false
+ 1192 jump *label252 lessThanEq :supplyBlock.1:missing 0
  1193 set :mineOre:ore :supplyBlock.1:ore
  1194 set :mineOre:amount :supplyBlock.1:missing
  1195 set :mineOre:block :supplyBlock.1:block
 
  1204 jump *label248 always
  1205 label *label247
  1206 sensor *tmp230 .smelter @sand
-    * op lessThan *tmp231 *tmp230 5
-    * jump *label255 equal *tmp231 false
+ 1207 jump *label255 greaterThanEq *tmp230 5
  1208 set :status1.2:text "Meeting the silicon target (sand)"
  1209 set .status1 :status1.2:text
  1210 label *label257
 
  1220 sensor *tmp233 :supplyBlock.2:block @itemCapacity
  1221 sensor *tmp234 :supplyBlock.2:block :supplyBlock.2:ore
  1222 op sub :supplyBlock.2:missing *tmp233 *tmp234
-    * op greaterThan *tmp236 :supplyBlock.2:missing 0
-    * jump *label260 equal *tmp236 false
+ 1223 jump *label260 lessThanEq :supplyBlock.2:missing 0
  1224 set :mineOre:ore :supplyBlock.2:ore
  1225 set :mineOre:amount :supplyBlock.2:missing
  1226 set :mineOre:block :supplyBlock.2:block
 
  1240 label *label245
  1241 label *label246
  1242 sensor *tmp238 .battery @totalPower
-    * op lessThan *tmp239 *tmp238 .powerTarget
-    * jump *label263 equal *tmp239 false
+ 1243 jump *label263 greaterThanEq *tmp238 .powerTarget
  1244 set :status1.3:text "Supplying generator"
  1245 set .status1 :status1.3:text
  1246 label *label265
 
  1256 sensor *tmp241 :supplyBlock.3:block @itemCapacity
  1257 sensor *tmp242 :supplyBlock.3:block :supplyBlock.3:ore
  1258 op sub :supplyBlock.3:missing *tmp241 *tmp242
-    * op greaterThan *tmp244 :supplyBlock.3:missing 0
-    * jump *label268 equal *tmp244 false
+ 1259 jump *label268 lessThanEq :supplyBlock.3:missing 0
  1260 set :mineOre:ore :supplyBlock.3:ore
  1261 set :mineOre:amount :supplyBlock.3:missing
  1262 set :mineOre:block :supplyBlock.3:block
 
  1273 label *label264
  1274 jump *label234 always
  1275 label *label233
-    * op notEqual *tmp246 .processor null
-    * jump *label271 equal *tmp246 false
+ 1276 jump *label271 equal .processor null
  1277 sensor *tmp248 .core @coal
-    * op lessThan *tmp249 *tmp248 10
-    * jump *label273 equal *tmp249 false
+ 1278 jump *label273 greaterThanEq *tmp248 10
  1279 set :status1.4:text "Supplying base"
  1280 set .status1 :status1.4:text
  1281 label *label275
 
  1292 label *label272
  1293 label *label234
  1294 sensor *tmp251 .titanium_drill @titanium
-    * op lessThan *tmp252 *tmp251 .titaniumTrigger
-    * jump *label277 equal *tmp252 false
+ 1295 jump *label277 greaterThanEq *tmp251 .titaniumTrigger
  1296 sensor *tmp254 .core @silicon
-    * op lessThan *tmp255 *tmp254 .siliconTarget
-    * jump *label279 equal *tmp255 false
+ 1297 jump *label279 greaterThanEq *tmp254 .siliconTarget
  1298 set :status1.5:text "Meeting the silicon target"
  1299 set .status1 :status1.5:text
  1300 label *label281
  1301 sensor :supplyBase:coal .core @coal
  1302 sensor :supplyBase:sand .core @sand
-    * op lessThan *tmp259 :supplyBase:coal :supplyBase:sand
-    * jump *label282 equal *tmp259 false
+ 1303 jump *label282 greaterThanEq :supplyBase:coal :supplyBase:sand
  1304 set *tmp260 @coal
  1305 jump *label283 always
  1306 label *label282
 
  1321 jump *label280 always
  1322 label *label279
  1323 sensor *tmp261 .core @copper
-    * op lessThan *tmp262 *tmp261 .copperTarget
-    * jump *label286 equal *tmp262 false
+ 1324 jump *label286 greaterThanEq *tmp261 .copperTarget
  1325 set :status1.6:text "Meeting the copper target"
  1326 set .status1 :status1.6:text
  1327 label *label288
 
  1339 jump *label287 always
  1340 label *label286
  1341 sensor *tmp264 .core @lead
-    * op lessThan *tmp265 *tmp264 .leadTarget
-    * jump *label291 equal *tmp265 false
+ 1342 jump *label291 greaterThanEq *tmp264 .leadTarget
  1343 set :status1.7:text "Meeting the lead target"
  1344 set .status1 :status1.7:text
  1345 label *label293
 
  1357 jump *label292 always
  1358 label *label291
  1359 sensor *tmp267 .core @metaglass
-    * op lessThan *tmp268 *tmp267 .metaglassTarget
-    * jump *label296 equal *tmp268 false
+ 1360 jump *label296 greaterThanEq *tmp267 .metaglassTarget
  1361 set :status1.8:text "Meeting the metaglass target"
  1362 set .status1 :status1.8:text
  1363 label *label298
 
  1374 label *label300
  1375 jump *label297 always
  1376 label *label296
-    * op equal *tmp270 :supplyBase:supplied false
-    * jump *label301 equal *tmp270 false
+ 1377 jump *label301 notEqual :supplyBase:supplied false
  1378 set :status1.9:text "Supplying base"
  1379 set .status1 :status1.9:text
  1380 label *label303
  1381 sensor :supplyBase:coal.1 .core @coal
  1382 sensor :supplyBase:sand.1 .core @sand
-    * op lessThanEq *tmp274 :supplyBase:coal.1 :supplyBase:sand.1
-    * jump *label304 equal *tmp274 false
+ 1383 jump *label304 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1384 set *tmp275 @coal
  1385 jump *label305 always
  1386 label *label304
 
  1458 multilabel *label319 (m:marker18)
  1459 label *label313
  1460 set .totalTargets :meetTarget:count
-    * op equal *tmp278 .processor null
-    * jump *label320 equal *tmp278 false
+ 1461 jump *label320 notEqual .processor null
  1462 op max .updatedGraphiteTarget 10 .graphiteTarget
  1463 op max .updatedSiliconTarget 10 .siliconTarget
  1464 jump *label321 always
 
  1472 label *label321
  1473 sensor *tmp285 .core @titanium
  1474 op add *tmp286 .titaniumTarget 10
-    * op lessThan *tmp287 *tmp285 *tmp286
-    * jump *label322 equal *tmp287 false
+ 1475 jump *label322 greaterThanEq *tmp285 *tmp286
  1476 set *tmp288 7
  1477 jump *label323 always
  1478 label *label322
 
  1501 sensor *tmp307 .core @metaglass
  1502 op lessThan *tmp308 *tmp307 .metaglassTarget
  1503 op or *tmp310 *tmp305 *tmp308
-    * op notEqual *tmp309 *tmp310 false
-    * jump *label326 equal *tmp309 false
+ 1504 jump *label326 equal *tmp310 false
  1505 setaddr :supplyBase*retaddr *label327 (h:*label327)
  1506 call *label9 *invalid :supplyBase*retval (m:*label327) (h:*label327)
  1507 label *label327
 
  1521 set .status3 :status3.3:text
  1522 label *label330
  1523 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp313 :buildBlockAt:building null
-    * jump *label331 equal *tmp313 false
-    * op equal *tmp315 :buildBlockAt:type :buildBlockAt:block
-    * jump *label333 equal *tmp315 false
+ 1524 jump *label331 equal :buildBlockAt:building null
+ 1525 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1526 set :buildBlockAt*retval :buildBlockAt:building
  1527 jump *label328 always
  1528 jump *label334 always
 
  1551 wait 0.25
  1552 label *label338
  1553 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp320 :buildBlockAt:building null
-    * jump *label341 equal *tmp320 false
+ 1554 jump *label341 notEqual :buildBlockAt:building null
  1555 jump *label340 always
  1556 jump *label342 always
  1557 label *label341
  1558 label *label342
  1559 label *label339
-    * op notEqual *tmp322 :buildBlockAt:type :buildBlockAt:block
-    * jump *label338 notEqual *tmp322 false
+ 1560 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1561 label *label340
  1562 set :buildBlockAt*retval :buildBlockAt:building
  1563 jump *label328 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-31 instructions):
 
   254 op or *tmp45 *tmp41 *tmp44
   255 jump *label59 equal *tmp45 false
   256 jump *label57 always
-    * jump *label60 always
   257 label *label59
   258 label *label60
   259 op sin *tmp48 :locateOreAway:angle
 
   321 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   322 jump *label75 notEqual :checkOre:floor :checkOre:ore
   323 op add :checkOre:count :checkOre:count 1
-    * jump *label76 always
   324 label *label75
   325 label *label76
   326 label *label74
 
   332 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   333 jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
   334 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label79 always
   335 label *label78
   336 label *label79
   337 label *label77
 
   344 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   345 jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
   346 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label82 always
   347 label *label81
   348 label *label82
   349 label *label80
 
   357 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   358 jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
   359 op add :checkOre.3:count :checkOre.3:count 1
-    * jump *label85 always
   360 label *label84
   361 label *label85
   362 label *label83
 
   367 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
   368 jump *label88 lessThan :buildTitaniumDrillCfg:count 4
   369 jump *label66 always
-    * jump *label89 always
   370 label *label88
   371 label *label89
-    * jump *label87 always
   372 label *label86
   373 label *label87
   374 label *label68
 
   397 jump *label93 equal :buildTitaniumDrillCfg:result null
   398 set *tmp37 :buildTitaniumDrillCfg:result
   399 jump *label49 always
-    * jump *label94 always
   400 label *label93
   401 label *label94
   402 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * jump *label91 always
   403 label *label90
   404 label *label91
   405 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
   421 set :buildTitaniumDrillCfg:attempts 0
   422 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
   423 op max :buildTitaniumDrillCfg:minimum *tmp104 1
-    * jump *label96 always
   424 label *label95
   425 label *label96
   426 label *label51
 
   933 sensor *tmp161 @unit @firstItem
   934 jump *label184 equal *tmp161 null
   935 ucontrol itemDrop @air 1000
-    * jump *label185 always
   936 label *label184
   937 label *label185
   938 set :moveTo.1:x :moveToEmpty:x
 
   987 sensor *tmp175 :depositItems:block :depositItems:item
   988 jump *label202 lessThan *tmp175 :depositItems:cap
   989 jump *label201 always
-    * jump *label203 always
   990 label *label202
   991 label *label203
   992 label *label200
 
  1016 printflush message1
  1017 stop
  1018 label *label210
-    * jump *label209 always
  1019 label *label208
  1020 label *label209
  1021 label *label207
 
  1045 op land *tmp189 *tmp187 *tmp188
  1046 jump *label218 equal *tmp189 false
  1047 jump *label217 always
-    * jump *label219 always
  1048 label *label218
  1049 label *label219
  1050 ucontrol mine :mineOre:x :mineOre:y
 
  1097 op land *tmp200 *tmp198 *tmp199
  1098 jump *label229 equal *tmp200 false
  1099 ucontrol itemDrop @air 1000
-    * jump *label230 always
  1100 label *label229
  1101 label *label230
  1102 label *label227
 
  1144 setaddr :mineOre*retaddr *label244 (h:*label244)
  1145 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1146 label *label244
-    * jump *label243 always
  1147 label *label242
  1148 label *label243
  1149 label *label240
  1150 set :supplyBase:supplied true
-    * jump *label238 always
  1151 label *label237
  1152 label *label238
-    * jump *label236 always
  1153 label *label235
  1154 label *label236
  1155 sensor *tmp219 .core @silicon
 
  1178 setaddr :mineOre*retaddr *label254 (h:*label254)
  1179 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1180 label *label254
-    * jump *label253 always
  1181 label *label252
  1182 label *label253
  1183 label *label250
 
  1208 setaddr :mineOre*retaddr *label262 (h:*label262)
  1209 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1210 label *label262
-    * jump *label261 always
  1211 label *label260
  1212 label *label261
  1213 label *label258
  1214 set :supplyBase:supplied true
-    * jump *label256 always
  1215 label *label255
  1216 label *label256
  1217 label *label248
-    * jump *label246 always
  1218 label *label245
  1219 label *label246
  1220 sensor *tmp238 .battery @totalPower
 
  1241 setaddr :mineOre*retaddr *label270 (h:*label270)
  1242 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1243 label *label270
-    * jump *label269 always
  1244 label *label268
  1245 label *label269
  1246 label *label266
  1247 set :supplyBase:supplied true
-    * jump *label264 always
  1248 label *label263
  1249 label *label264
  1250 jump *label234 always
 
  1260 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
  1261 label *label276
  1262 jump *label232 always
-    * jump *label274 always
  1263 label *label273
  1264 label *label274
-    * jump *label272 always
  1265 label *label271
  1266 label *label272
  1267 label *label234
 
  1372 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1373 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1374 label *label307
-    * jump *label302 always
  1375 label *label301
  1376 label *label302
  1377 label *label297
 
  1498 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1499 set :buildBlockAt*retval :buildBlockAt:building
  1500 jump *label328 always
-    * jump *label334 always
  1501 label *label333
  1502 label *label334
  1503 jump *label335 equal :buildBlockAt:skipError false
  1504 set :buildBlockAt*retval null
  1505 jump *label328 always
-    * jump *label336 always
  1506 label *label335
  1507 label *label336
  1508 print "[salmon]"
 
  1515 printflush message1
  1516 stop
  1517 label *label337
-    * jump *label332 always
  1518 label *label331
  1519 label *label332
  1520 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1523 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1524 jump *label341 notEqual :buildBlockAt:building null
  1525 jump *label340 always
-    * jump *label342 always
  1526 label *label341
  1527 label *label342
  1528 label *label339

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-31 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
     6 set .kiln null
     7 set .nextBlock ""
     8 set .copperTarget 0
 
    40 set :buildBlockFromCfg:metaglass 0
    41 set :buildBlockFromCfg:rotation 0
    42 set :buildBlockFromCfg:config null
-    * setaddr *tmp17 *label22
    43 label *label19
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   44 op add :buildBlockFromCfg:x .coreX -1.5
+   45 op add :buildBlockFromCfg:y .coreY 2.5
+   46 set :buildBlock:block @graphite-press
    47 set :buildBlock:x :buildBlockFromCfg:x
    48 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   49 set :buildBlock:copper 75
+   50 set :buildBlock:lead 30
+   51 set :buildBlock:graphite 0
+   52 set :buildBlock:silicon 0
+   53 set :buildBlock:titanium 0
+   54 set :buildBlock:metaglass 0
+   55 set :buildBlock:rotation 0
+   56 set :buildBlock:config null
    57 setaddr :buildBlock*retaddr *label23 (h:*label23)
    58 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    59 label *label23
 
    63 multijump *tmp17 0 0 (m:marker0)
    64 multilabel *label22 (m:marker0)
    65 label *label21
-    * set *tmp16 null
    66 label *label18
    67 set .press *tmp16
    68 set :buildBlockFromCfg.1:block @battery
 
    76 set :buildBlockFromCfg.1:metaglass 0
    77 set :buildBlockFromCfg.1:rotation 0
    78 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp21 *label28
    79 label *label25
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   80 op add :buildBlockFromCfg.1:x .coreX 0
+   81 op add :buildBlockFromCfg.1:y .coreY 4
+   82 set :buildBlock:block @battery
    83 set :buildBlock:x :buildBlockFromCfg.1:x
    84 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   85 set :buildBlock:copper 5
+   86 set :buildBlock:lead 20
+   87 set :buildBlock:graphite 0
+   88 set :buildBlock:silicon 0
+   89 set :buildBlock:titanium 0
+   90 set :buildBlock:metaglass 0
+   91 set :buildBlock:rotation 0
+   92 set :buildBlock:config null
    93 setaddr :buildBlock*retaddr *label29 (h:*label29)
    94 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    95 label *label29
 
    99 multijump *tmp21 0 0 (m:marker1)
   100 multilabel *label28 (m:marker1)
   101 label *label27
-    * set *tmp20 null
   102 label *label24
   103 set .battery *tmp20
   104 set :buildBlockFromCfg.2:block @combustion-generator
 
   112 set :buildBlockFromCfg.2:metaglass 0
   113 set :buildBlockFromCfg.2:rotation 0
   114 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp25 *label34
   115 label *label31
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  116 op add :buildBlockFromCfg.2:x .coreX 0
+  117 op add :buildBlockFromCfg.2:y .coreY 3
+  118 set :buildBlock:block @combustion-generator
   119 set :buildBlock:x :buildBlockFromCfg.2:x
   120 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  121 set :buildBlock:copper 25
+  122 set :buildBlock:lead 15
+  123 set :buildBlock:graphite 0
+  124 set :buildBlock:silicon 0
+  125 set :buildBlock:titanium 0
+  126 set :buildBlock:metaglass 0
+  127 set :buildBlock:rotation 0
+  128 set :buildBlock:config null
   129 setaddr :buildBlock*retaddr *label35 (h:*label35)
   130 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
   131 label *label35
 
   135 multijump *tmp25 0 0 (m:marker2)
   136 multilabel *label34 (m:marker2)
   137 label *label33
-    * set *tmp24 null
   138 label *label30
   139 set .generator *tmp24
   140 set .powerTarget 400
 
   149 set :buildBlockFromCfg.3:metaglass 0
   150 set :buildBlockFromCfg.3:rotation 0
   151 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp29 *label40
   152 label *label37
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  153 op add :buildBlockFromCfg.3:x .coreX -1
+  154 op add :buildBlockFromCfg.3:y .coreY 4
+  155 set :buildBlock:block @battery
   156 set :buildBlock:x :buildBlockFromCfg.3:x
   157 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  158 set :buildBlock:copper 5
+  159 set :buildBlock:lead 20
+  160 set :buildBlock:graphite 0
+  161 set :buildBlock:silicon 0
+  162 set :buildBlock:titanium 0
+  163 set :buildBlock:metaglass 0
+  164 set :buildBlock:rotation 0
+  165 set :buildBlock:config null
   166 setaddr :buildBlock*retaddr *label41 (h:*label41)
   167 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   168 label *label41
 
   183 set :buildBlockFromCfg.4:metaglass 0
   184 set :buildBlockFromCfg.4:rotation 0
   185 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp33 *label46
   186 label *label43
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  187 op add :buildBlockFromCfg.4:x .coreX 1.5
+  188 op add :buildBlockFromCfg.4:y .coreY 2.5
+  189 set :buildBlock:block @silicon-smelter
   190 set :buildBlock:x :buildBlockFromCfg.4:x
   191 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  192 set :buildBlock:copper 30
+  193 set :buildBlock:lead 25
+  194 set :buildBlock:graphite 0
+  195 set :buildBlock:silicon 0
+  196 set :buildBlock:titanium 0
+  197 set :buildBlock:metaglass 0
+  198 set :buildBlock:rotation 0
+  199 set :buildBlock:config null
   200 setaddr :buildBlock*retaddr *label47 (h:*label47)
   201 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   202 label *label47
 
   206 multijump *tmp33 0 0 (m:marker4)
   207 multilabel *label46 (m:marker4)
   208 label *label45
-    * set *tmp32 null
   209 label *label42
   210 set .smelter *tmp32
   211 set :buildTitaniumDrillCfg:distance 32
 
   227 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   228 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   229 label *label55
-    * set :locateOre:ore :locateOreAway:ore
+  230 set :locateOre:ore @titanium
   231 setaddr :locateOre*retaddr *label58 (h:*label58)
   232 call *label5 *invalid :locateOre*retval (m:*label58) (h:*label58)
   233 label *label58
   234 set :locateOreAway:x :locateOre:x
   235 set :locateOreAway:y :locateOre:y
-    * op sub *tmp39 :locateOreAway:x .coreX
+  236 op sub *tmp39 :locateOre:x .coreX
   237 op abs *tmp40 *tmp39
   238 op greaterThanEq *tmp41 *tmp40 8
-    * op sub *tmp42 :locateOreAway:y .coreY
+  239 op sub *tmp42 :locateOre:y .coreY
   240 op abs *tmp43 *tmp42
   241 op greaterThanEq *tmp44 *tmp43 8
   242 op or *tmp45 *tmp41 *tmp44
 
   266 set :buildTitaniumDrillCfg:y :locateOreAway:y
   267 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   268 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  269 set :moveTo.1:x :locateOreAway:x
+  270 set :moveTo.1:y :locateOreAway:y
   271 setaddr :moveTo.1*retaddr *label63 (h:*label63)
   272 call *label1 *invalid :moveTo.1*retval (m:*label63) (h:*label63)
   273 label *label63
-    * set :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:x
-    * set :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:y
+  274 set :buildTitaniumDrillCfg:ax :locateOreAway:x
+  275 set :buildTitaniumDrillCfg:ay :locateOreAway:y
   276 set :buildTitaniumDrillCfg:best 0
   277 set :buildTitaniumDrillCfg:dx 0
   278 set :buildTitaniumDrillCfg:dy 0
 
   305 set :checkOre:x :buildTitaniumDrillCfg:ax
   306 set :checkOre:y :buildTitaniumDrillCfg:ay
   307 set :checkOre:ore @ore-titanium
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * jump *label75 notEqual :checkOre:floor :checkOre:ore
-    * op add :checkOre:count :checkOre:count 1
+  308 set :checkOre:count 0
+  309 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  310 jump *label75 notEqual :checkOre:floor @ore-titanium
+  311 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   312 label *label75
   313 label *label76
   314 label *label74
 
   316 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   317 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   318 set :checkOre.1:ore @ore-titanium
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
-    * op add :checkOre.1:count :checkOre.1:count 1
+  319 set :checkOre.1:count :checkOre:count
+  320 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  321 jump *label78 notEqual :checkOre.1:floor @ore-titanium
+  322 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   323 label *label78
   324 label *label79
   325 label *label77
 
   328 set :checkOre.2:x :buildTitaniumDrillCfg:ax
   329 set :checkOre.2:y *tmp68
   330 set :checkOre.2:ore @ore-titanium
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
-    * op add :checkOre.2:count :checkOre.2:count 1
+  331 set :checkOre.2:count :checkOre.1:count
+  332 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
+  333 jump *label81 notEqual :checkOre.2:floor @ore-titanium
+  334 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   335 label *label81
   336 label *label82
   337 label *label80
   338 set :buildTitaniumDrillCfg:count :checkOre.2:count
   339 op add *tmp75 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   340 op add *tmp76 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x *tmp75
-    * set :checkOre.3:y *tmp76
+  341 set :checkOre.3:x :checkOre.1:x
+  342 set :checkOre.3:y *tmp68
   343 set :checkOre.3:ore @ore-titanium
-    * set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
-    * op add :checkOre.3:count :checkOre.3:count 1
+  344 set :checkOre.3:count :checkOre.2:count
+  345 ucontrol getBlock *tmp75 *tmp76 0 0 :checkOre.3:floor
+  346 jump *label84 notEqual :checkOre.3:floor @ore-titanium
+  347 op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
   348 label *label84
   349 label *label85
   350 label *label83
   351 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * jump *label86 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  352 jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   353 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   354 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label88 lessThan :buildTitaniumDrillCfg:count 4
+  355 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  356 jump *label88 lessThan :checkOre.3:count 4
   357 jump *label66 always
   358 label *label88
   359 label *label89
 
   382 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   383 label *label92
   384 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label93 equal :buildTitaniumDrillCfg:result null
-    * set *tmp37 :buildTitaniumDrillCfg:result
+  385 jump *label93 equal :buildBlockAt*retval null
+  386 set *tmp37 :buildBlockAt*retval
   387 jump *label49 always
   388 label *label93
   389 label *label94
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
+  390 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   391 label *label90
   392 label *label91
   393 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   394 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
-    * op sin *tmp98 :buildTitaniumDrillCfg:angle
-    * op mul *tmp99 *tmp98 :buildTitaniumDrillCfg:distance
+  395 op sin *tmp98 :locateOreAway:angle
+  396 op mul *tmp99 *tmp98 :locateOreAway:distance
   397 op add *tmp100 .coreX *tmp99
-    * op cos *tmp101 :buildTitaniumDrillCfg:angle
-    * op mul *tmp102 *tmp101 :buildTitaniumDrillCfg:distance
+  398 op cos *tmp101 :locateOreAway:angle
+  399 op mul *tmp102 *tmp101 :locateOreAway:distance
   400 op add *tmp103 .coreY *tmp102
   401 set :moveTo.1:x *tmp100
   402 set :moveTo.1:y *tmp103
   403 setaddr :moveTo.1*retaddr *label98 (h:*label98)
   404 call *label1 *invalid :moveTo.1*retval (m:*label98) (h:*label98)
   405 label *label98
-    * op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
-    * op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
+  406 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
+  407 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
   408 label *label97
   409 set :buildTitaniumDrillCfg:attempts 0
   410 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
 
   418 label *label49
   419 set *tmp36 *tmp37
   420 label *label48
-    * set .titanium_drill *tmp36
+  421 set .titanium_drill *tmp37
   422 set :buildBlockFromCfg.5:block @unloader
   423 set :buildBlockFromCfg.5:offsetX 0
   424 set :buildBlockFromCfg.5:offsetY 2
 
   430 set :buildBlockFromCfg.5:metaglass 0
   431 set :buildBlockFromCfg.5:rotation 0
   432 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp107 *label103
   433 label *label100
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  434 op add :buildBlockFromCfg.5:x .coreX 0
+  435 op add :buildBlockFromCfg.5:y .coreY 2
+  436 set :buildBlock:block @unloader
   437 set :buildBlock:x :buildBlockFromCfg.5:x
   438 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  439 set :buildBlock:copper 0
+  440 set :buildBlock:lead 0
+  441 set :buildBlock:graphite 0
+  442 set :buildBlock:silicon 30
+  443 set :buildBlock:titanium 25
+  444 set :buildBlock:metaglass 0
+  445 set :buildBlock:rotation 0
+  446 set :buildBlock:config null
   447 setaddr :buildBlock*retaddr *label104 (h:*label104)
   448 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   449 label *label104
 
   453 multijump *tmp107 0 0 (m:marker6)
   454 multilabel *label103 (m:marker6)
   455 label *label102
-    * set *tmp106 null
   456 label *label99
   457 set .unloader1 *tmp106
   458 set :buildBlockFromCfg.6:block @power-node
 
   466 set :buildBlockFromCfg.6:metaglass 0
   467 set :buildBlockFromCfg.6:rotation 0
   468 set :buildBlockFromCfg.6:config null
-    * setaddr *tmp111 *label109
   469 label *label106
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  470 op add :buildBlockFromCfg.6:x .coreX -2
+  471 op add :buildBlockFromCfg.6:y .coreY -1
+  472 set :buildBlock:block @power-node
   473 set :buildBlock:x :buildBlockFromCfg.6:x
   474 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  475 set :buildBlock:copper 2
+  476 set :buildBlock:lead 6
+  477 set :buildBlock:graphite 0
+  478 set :buildBlock:silicon 0
+  479 set :buildBlock:titanium 0
+  480 set :buildBlock:metaglass 0
+  481 set :buildBlock:rotation 0
+  482 set :buildBlock:config null
   483 setaddr :buildBlock*retaddr *label110 (h:*label110)
   484 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   485 label *label110
 
   500 set :buildBlockFromCfg.7:metaglass 0
   501 set :buildBlockFromCfg.7:rotation 0
   502 set :buildBlockFromCfg.7:config processor1
-    * setaddr *tmp115 *label115
   503 label *label112
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  504 op add :buildBlockFromCfg.7:x .coreX 1
+  505 op add :buildBlockFromCfg.7:y .coreY 4
+  506 set :buildBlock:block @micro-processor
   507 set :buildBlock:x :buildBlockFromCfg.7:x
   508 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  509 set :buildBlock:copper 90
+  510 set :buildBlock:lead 50
+  511 set :buildBlock:graphite 0
+  512 set :buildBlock:silicon 50
+  513 set :buildBlock:titanium 0
+  514 set :buildBlock:metaglass 0
+  515 set :buildBlock:rotation 0
+  516 set :buildBlock:config processor1
   517 setaddr :buildBlock*retaddr *label116 (h:*label116)
   518 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   519 label *label116
 
   523 multijump *tmp115 0 0 (m:marker8)
   524 multilabel *label115 (m:marker8)
   525 label *label114
-    * set *tmp114 null
   526 label *label111
   527 set .processor *tmp114
-    * write .core .processor ".core"
-    * write .battery .processor ".battery"
-    * write .generator .processor ".generator"
-    * write .smelter .processor ".smelter"
-    * write .press .processor ".press"
+  528 write .core *tmp114 ".core"
+  529 write *tmp20 *tmp114 ".battery"
+  530 write *tmp24 *tmp114 ".generator"
+  531 write *tmp32 *tmp114 ".smelter"
+  532 write *tmp16 *tmp114 ".press"
   533 set :buildBlockFromCfg.8:block @air-factory
   534 set :buildBlockFromCfg.8:offsetX -4
   535 set :buildBlockFromCfg.8:offsetY -1
 
   541 set :buildBlockFromCfg.8:metaglass 0
   542 set :buildBlockFromCfg.8:rotation 3
   543 set :buildBlockFromCfg.8:config @mono
-    * setaddr *tmp120 *label121
   544 label *label118
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  545 op add :buildBlockFromCfg.8:x .coreX -4
+  546 op add :buildBlockFromCfg.8:y .coreY -1
+  547 set :buildBlock:block @air-factory
   548 set :buildBlock:x :buildBlockFromCfg.8:x
   549 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  550 set :buildBlock:copper 60
+  551 set :buildBlock:lead 70
+  552 set :buildBlock:graphite 0
+  553 set :buildBlock:silicon 0
+  554 set :buildBlock:titanium 0
+  555 set :buildBlock:metaglass 0
+  556 set :buildBlock:rotation 3
+  557 set :buildBlock:config @mono
   558 setaddr :buildBlock*retaddr *label122 (h:*label122)
   559 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   560 label *label122
 
   564 multijump *tmp120 0 0 (m:marker9)
   565 multilabel *label121 (m:marker9)
   566 label *label120
-    * set *tmp119 null
   567 label *label117
   568 set .factory *tmp119
-    * write .factory .processor ".factory"
+  569 write *tmp119 *tmp114 ".factory"
   570 set :buildBlockFromCfg.9:block @unloader
   571 set :buildBlockFromCfg.9:offsetX -2
   572 set :buildBlockFromCfg.9:offsetY 1
 
   578 set :buildBlockFromCfg.9:metaglass 0
   579 set :buildBlockFromCfg.9:rotation 0
   580 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp124 *label127
   581 label *label124
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  582 op add :buildBlockFromCfg.9:x .coreX -2
+  583 op add :buildBlockFromCfg.9:y .coreY 1
+  584 set :buildBlock:block @unloader
   585 set :buildBlock:x :buildBlockFromCfg.9:x
   586 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  587 set :buildBlock:copper 0
+  588 set :buildBlock:lead 0
+  589 set :buildBlock:graphite 0
+  590 set :buildBlock:silicon 30
+  591 set :buildBlock:titanium 25
+  592 set :buildBlock:metaglass 0
+  593 set :buildBlock:rotation 0
+  594 set :buildBlock:config null
   595 setaddr :buildBlock*retaddr *label128 (h:*label128)
   596 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   597 label *label128
 
   601 multijump *tmp124 0 0 (m:marker10)
   602 multilabel *label127 (m:marker10)
   603 label *label126
-    * set *tmp123 null
   604 label *label123
   605 set .unloader2 *tmp123
-    * write .unloader2 .processor ".unloader2"
+  606 write *tmp123 *tmp114 ".unloader2"
   607 set :buildBlockFromCfg.10:block @overflow-gate
   608 set :buildBlockFromCfg.10:offsetX -3
   609 set :buildBlockFromCfg.10:offsetY 1
 
   615 set :buildBlockFromCfg.10:metaglass 0
   616 set :buildBlockFromCfg.10:rotation 0
   617 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp128 *label133
   618 label *label130
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  619 op add :buildBlockFromCfg.10:x .coreX -3
+  620 op add :buildBlockFromCfg.10:y .coreY 1
+  621 set :buildBlock:block @overflow-gate
   622 set :buildBlock:x :buildBlockFromCfg.10:x
   623 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  624 set :buildBlock:copper 4
+  625 set :buildBlock:lead 2
+  626 set :buildBlock:graphite 0
+  627 set :buildBlock:silicon 0
+  628 set :buildBlock:titanium 0
+  629 set :buildBlock:metaglass 0
+  630 set :buildBlock:rotation 0
+  631 set :buildBlock:config null
   632 setaddr :buildBlock*retaddr *label134 (h:*label134)
   633 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   634 label *label134
 
   638 multilabel *label133 (m:marker11)
   639 label *label132
   640 label *label129
-    * write @mono .processor ".unitToProduce"
+  641 write @mono *tmp114 ".unitToProduce"
   642 set :buildBlockFromCfg.11:block @unloader
   643 set :buildBlockFromCfg.11:offsetX 2
   644 set :buildBlockFromCfg.11:offsetY 0
 
   650 set :buildBlockFromCfg.11:metaglass 0
   651 set :buildBlockFromCfg.11:rotation 0
   652 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp132 *label139
   653 label *label136
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  654 op add :buildBlockFromCfg.11:x .coreX 2
+  655 op add :buildBlockFromCfg.11:y .coreY 0
+  656 set :buildBlock:block @unloader
   657 set :buildBlock:x :buildBlockFromCfg.11:x
   658 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  659 set :buildBlock:copper 0
+  660 set :buildBlock:lead 0
+  661 set :buildBlock:graphite 0
+  662 set :buildBlock:silicon 30
+  663 set :buildBlock:titanium 25
+  664 set :buildBlock:metaglass 0
+  665 set :buildBlock:rotation 0
+  666 set :buildBlock:config null
   667 setaddr :buildBlock*retaddr *label140 (h:*label140)
   668 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   669 label *label140
 
   684 set :buildBlockFromCfg.12:metaglass 0
   685 set :buildBlockFromCfg.12:rotation 0
   686 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp136 *label145
   687 label *label142
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  688 op add :buildBlockFromCfg.12:x .coreX 3.5
+  689 op add :buildBlockFromCfg.12:y .coreY 0.5
+  690 set :buildBlock:block @kiln
   691 set :buildBlock:x :buildBlockFromCfg.12:x
   692 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  693 set :buildBlock:copper 60
+  694 set :buildBlock:lead 30
+  695 set :buildBlock:graphite 30
+  696 set :buildBlock:silicon 0
+  697 set :buildBlock:titanium 0
+  698 set :buildBlock:metaglass 0
+  699 set :buildBlock:rotation 0
+  700 set :buildBlock:config null
   701 setaddr :buildBlock*retaddr *label146 (h:*label146)
   702 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   703 label *label146
 
   707 multilabel *label145 (m:marker13)
   708 label *label144
   709 label *label141
-    * write .kiln .processor ".kiln"
+  710 write null *tmp114 ".kiln"
   711 set :buildBlockFromCfg.13:block @junction
   712 set :buildBlockFromCfg.13:offsetX 2
   713 set :buildBlockFromCfg.13:offsetY 1
 
   719 set :buildBlockFromCfg.13:metaglass 0
   720 set :buildBlockFromCfg.13:rotation 0
   721 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp140 *label151
   722 label *label148
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  723 op add :buildBlockFromCfg.13:x .coreX 2
+  724 op add :buildBlockFromCfg.13:y .coreY 1
+  725 set :buildBlock:block @junction
   726 set :buildBlock:x :buildBlockFromCfg.13:x
   727 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  728 set :buildBlock:copper 3
+  729 set :buildBlock:lead 0
+  730 set :buildBlock:graphite 0
+  731 set :buildBlock:silicon 0
+  732 set :buildBlock:titanium 0
+  733 set :buildBlock:metaglass 0
+  734 set :buildBlock:rotation 0
+  735 set :buildBlock:config null
   736 setaddr :buildBlock*retaddr *label152 (h:*label152)
   737 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   738 label *label152
 
   753 set :buildBlockFromCfg.14:metaglass 30
   754 set :buildBlockFromCfg.14:rotation 0
   755 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp144 *label157
   756 label *label154
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  757 op add :buildBlockFromCfg.14:x .coreX -3.5
+  758 op add :buildBlockFromCfg.14:y .coreY 4.5
+  759 set :buildBlock:block @water-extractor
   760 set :buildBlock:x :buildBlockFromCfg.14:x
   761 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  762 set :buildBlock:copper 30
+  763 set :buildBlock:lead 30
+  764 set :buildBlock:graphite 30
+  765 set :buildBlock:silicon 0
+  766 set :buildBlock:titanium 0
+  767 set :buildBlock:metaglass 30
+  768 set :buildBlock:rotation 0
+  769 set :buildBlock:config null
   770 setaddr :buildBlock*retaddr *label158 (h:*label158)
   771 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   772 label *label158
 
   787 set :buildBlockFromCfg.15:metaglass 0
   788 set :buildBlockFromCfg.15:rotation 0
   789 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp148 *label163
   790 label *label160
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  791 op add :buildBlockFromCfg.15:x .coreX -3.5
+  792 op add :buildBlockFromCfg.15:y .coreY 2.5
+  793 set :buildBlock:block @steam-generator
   794 set :buildBlock:x :buildBlockFromCfg.15:x
   795 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  796 set :buildBlock:copper 35
+  797 set :buildBlock:lead 40
+  798 set :buildBlock:graphite 25
+  799 set :buildBlock:silicon 30
+  800 set :buildBlock:titanium 0
+  801 set :buildBlock:metaglass 0
+  802 set :buildBlock:rotation 0
+  803 set :buildBlock:config null
   804 setaddr :buildBlock*retaddr *label164 (h:*label164)
   805 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   806 label *label164
 
   810 multijump *tmp148 0 0 (m:marker16)
   811 multilabel *label163 (m:marker16)
   812 label *label162
-    * set *tmp147 null
   813 label *label159
   814 set .generator2 *tmp147
-    * write .generator2 .processor ".generator2"
+  815 write *tmp147 *tmp114 ".generator2"
   816 set :buildBlockFromCfg.16:block @sorter
   817 set :buildBlockFromCfg.16:offsetX -4
   818 set :buildBlockFromCfg.16:offsetY 1
 
   824 set :buildBlockFromCfg.16:metaglass 0
   825 set :buildBlockFromCfg.16:rotation 0
   826 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp152 *label169
   827 label *label166
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  828 op add :buildBlockFromCfg.16:x .coreX -4
+  829 op add :buildBlockFromCfg.16:y .coreY 1
+  830 set :buildBlock:block @sorter
   831 set :buildBlock:x :buildBlockFromCfg.16:x
   832 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  833 set :buildBlock:copper 2
+  834 set :buildBlock:lead 2
+  835 set :buildBlock:graphite 0
+  836 set :buildBlock:silicon 0
+  837 set :buildBlock:titanium 0
+  838 set :buildBlock:metaglass 0
+  839 set :buildBlock:rotation 0
+  840 set :buildBlock:config @coal
   841 setaddr :buildBlock*retaddr *label170 (h:*label170)
   842 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   843 label *label170
 
   875 end
   876 label *label0
   877 set :status3:text "Moving..."
-    * set .status3 :status3:text
+  878 set .status3 "Moving..."
   879 label *label177
   880 label *label178
   881 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
 
   891 label *label1
   892 set *tmp159 :moveTo.1:x
   893 set *tmp160 :moveTo.1:y
-    * set :moveTo:x *tmp159
-    * set :moveTo:y *tmp160
+  894 set :moveTo:x :moveTo.1:x
+  895 set :moveTo:y :moveTo.1:y
   896 set :moveTo:radius 5
   897 setaddr :moveTo*retaddr *label182 (h:*label182)
   898 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
 
   935 end
   936 label *label4
   937 set :status3.1:text "Depositing..."
-    * set .status3 :status3.1:text
+  938 set .status3 "Depositing..."
   939 label *label193
   940 sensor *tmp168 @unit @firstItem
   941 jump *label194 notEqual *tmp168 :depositItems:item
 
  1001 label *label212
  1002 set :mineOre:x :locateOre:x
  1003 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1004 set :moveToEmpty:x :locateOre:x
+ 1005 set :moveToEmpty:y :locateOre:y
  1006 setaddr :moveToEmpty*retaddr *label213 (h:*label213)
  1007 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
  1008 label *label213
  1009 set :status3.2:text "Mining..."
-    * set .status3 :status3.2:text
+ 1010 set .status3 "Mining..."
  1011 label *label214
  1012 label *label215
  1013 sensor :mineOre:item @unit @firstItem
 
  1049 set :status2:text "Fetching "
  1050 set :status2:item :fetchBlock:item
  1051 set :status2:block :fetchBlock:block
-    * set .status2 :status2:text
-    * set .item2 :status2:item
-    * set .block2 :status2:block
+ 1052 set .status2 "Fetching "
+ 1053 set .item2 :fetchBlock:item
+ 1054 set .block2 :fetchBlock:block
  1055 label *label224
  1056 sensor *tmp195 :fetchBlock:block @x
  1057 sensor *tmp196 :fetchBlock:block @y
 
  1094 sensor *tmp211 .press @coal
  1095 jump *label237 greaterThanEq *tmp211 5
  1096 set :status1:text "Meeting the graphite target"
-    * set .status1 :status1:text
+ 1097 set .status1 "Meeting the graphite target"
  1098 label *label239
  1099 set :supplyBlock:block .press
  1100 set :supplyBlock:ore @coal
  1101 set :status2.1:text "Supplying "
-    * set :status2.1:item :supplyBlock:ore
-    * set :status2.1:block :supplyBlock:block
-    * set .status2 :status2.1:text
-    * set .item2 :status2.1:item
-    * set .block2 :status2.1:block
+ 1102 set :status2.1:item @coal
+ 1103 set :status2.1:block .press
+ 1104 set .status2 "Supplying "
+ 1105 set .item2 :supplyBlock:ore
+ 1106 set .block2 :supplyBlock:block
  1107 label *label241
-    * sensor *tmp214 :supplyBlock:block @itemCapacity
-    * sensor *tmp215 :supplyBlock:block :supplyBlock:ore
+ 1108 sensor *tmp214 .press @itemCapacity
+ 1109 sensor *tmp215 .press @coal
  1110 op sub :supplyBlock:missing *tmp214 *tmp215
  1111 jump *label242 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1112 set :mineOre:ore @coal
  1113 set :mineOre:amount :supplyBlock:missing
-    * set :mineOre:block :supplyBlock:block
+ 1114 set :mineOre:block .press
  1115 setaddr :mineOre*retaddr *label244 (h:*label244)
  1116 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1117 label *label244
 
  1128 sensor *tmp222 .smelter @coal
  1129 jump *label247 greaterThanEq *tmp222 5
  1130 set :status1.1:text "Meeting the silicon target (coal)"
-    * set .status1 :status1.1:text
+ 1131 set .status1 "Meeting the silicon target (coal)"
  1132 label *label249
  1133 set :supplyBlock.1:block .smelter
  1134 set :supplyBlock.1:ore @coal
  1135 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock.1:ore
-    * set :status2.2:block :supplyBlock.1:block
-    * set .status2 :status2.2:text
-    * set .item2 :status2.2:item
-    * set .block2 :status2.2:block
+ 1136 set :status2.2:item @coal
+ 1137 set :status2.2:block .smelter
+ 1138 set .status2 "Supplying "
+ 1139 set .item2 :supplyBlock.1:ore
+ 1140 set .block2 :supplyBlock.1:block
  1141 label *label251
-    * sensor *tmp225 :supplyBlock.1:block @itemCapacity
-    * sensor *tmp226 :supplyBlock.1:block :supplyBlock.1:ore
+ 1142 sensor *tmp225 .smelter @itemCapacity
+ 1143 sensor *tmp226 .smelter @coal
  1144 op sub :supplyBlock.1:missing *tmp225 *tmp226
  1145 jump *label252 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1146 set :mineOre:ore @coal
  1147 set :mineOre:amount :supplyBlock.1:missing
-    * set :mineOre:block :supplyBlock.1:block
+ 1148 set :mineOre:block .smelter
  1149 setaddr :mineOre*retaddr *label254 (h:*label254)
  1150 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1151 label *label254
 
  1158 sensor *tmp230 .smelter @sand
  1159 jump *label255 greaterThanEq *tmp230 5
  1160 set :status1.2:text "Meeting the silicon target (sand)"
-    * set .status1 :status1.2:text
+ 1161 set .status1 "Meeting the silicon target (sand)"
  1162 label *label257
  1163 set :supplyBlock.2:block .smelter
  1164 set :supplyBlock.2:ore @sand
  1165 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.2:ore
-    * set :status2.3:block :supplyBlock.2:block
-    * set .status2 :status2.3:text
-    * set .item2 :status2.3:item
-    * set .block2 :status2.3:block
+ 1166 set :status2.3:item @sand
+ 1167 set :status2.3:block .smelter
+ 1168 set .status2 "Supplying "
+ 1169 set .item2 :supplyBlock.2:ore
+ 1170 set .block2 :supplyBlock.2:block
  1171 label *label259
-    * sensor *tmp233 :supplyBlock.2:block @itemCapacity
-    * sensor *tmp234 :supplyBlock.2:block :supplyBlock.2:ore
+ 1172 sensor *tmp233 .smelter @itemCapacity
+ 1173 sensor *tmp234 .smelter @sand
  1174 op sub :supplyBlock.2:missing *tmp233 *tmp234
  1175 jump *label260 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1176 set :mineOre:ore @sand
  1177 set :mineOre:amount :supplyBlock.2:missing
-    * set :mineOre:block :supplyBlock.2:block
+ 1178 set :mineOre:block .smelter
  1179 setaddr :mineOre*retaddr *label262 (h:*label262)
  1180 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1181 label *label262
 
  1191 sensor *tmp238 .battery @totalPower
  1192 jump *label263 greaterThanEq *tmp238 .powerTarget
  1193 set :status1.3:text "Supplying generator"
-    * set .status1 :status1.3:text
+ 1194 set .status1 "Supplying generator"
  1195 label *label265
  1196 set :supplyBlock.3:block .generator
  1197 set :supplyBlock.3:ore @coal
  1198 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.3:ore
-    * set :status2.4:block :supplyBlock.3:block
-    * set .status2 :status2.4:text
-    * set .item2 :status2.4:item
-    * set .block2 :status2.4:block
+ 1199 set :status2.4:item @coal
+ 1200 set :status2.4:block .generator
+ 1201 set .status2 "Supplying "
+ 1202 set .item2 :supplyBlock.3:ore
+ 1203 set .block2 :supplyBlock.3:block
  1204 label *label267
-    * sensor *tmp241 :supplyBlock.3:block @itemCapacity
-    * sensor *tmp242 :supplyBlock.3:block :supplyBlock.3:ore
+ 1205 sensor *tmp241 .generator @itemCapacity
+ 1206 sensor *tmp242 .generator @coal
  1207 op sub :supplyBlock.3:missing *tmp241 *tmp242
  1208 jump *label268 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1209 set :mineOre:ore @coal
  1210 set :mineOre:amount :supplyBlock.3:missing
-    * set :mineOre:block :supplyBlock.3:block
+ 1211 set :mineOre:block .generator
  1212 setaddr :mineOre*retaddr *label270 (h:*label270)
  1213 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1214 label *label270
 
  1224 sensor *tmp248 .core @coal
  1225 jump *label273 greaterThanEq *tmp248 10
  1226 set :status1.4:text "Supplying base"
-    * set .status1 :status1.4:text
+ 1227 set .status1 "Supplying base"
  1228 label *label275
  1229 set :mineOre.1:ore @coal
  1230 setaddr :mineOre.1*retaddr *label276 (h:*label276)
 
  1241 sensor *tmp254 .core @silicon
  1242 jump *label279 greaterThanEq *tmp254 .siliconTarget
  1243 set :status1.5:text "Meeting the silicon target"
-    * set .status1 :status1.5:text
+ 1244 set .status1 "Meeting the silicon target"
  1245 label *label281
  1246 sensor :supplyBase:coal .core @coal
  1247 sensor :supplyBase:sand .core @sand
 
  1253 label *label283
  1254 set :supplyBase:ore *tmp260
  1255 set :status2.5:text "Mining "
-    * set :status2.5:item :supplyBase:ore
+ 1256 set :status2.5:item *tmp260
  1257 set :status2.5:block "core"
-    * set .status2 :status2.5:text
-    * set .item2 :status2.5:item
-    * set .block2 :status2.5:block
+ 1258 set .status2 "Mining "
+ 1259 set .item2 :supplyBase:ore
+ 1260 set .block2 "core"
  1261 label *label284
-    * set :mineOre.1:ore :supplyBase:ore
+ 1262 set :mineOre.1:ore *tmp260
  1263 setaddr :mineOre.1*retaddr *label285 (h:*label285)
  1264 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
  1265 label *label285
 
  1268 sensor *tmp261 .core @copper
  1269 jump *label286 greaterThanEq *tmp261 .copperTarget
  1270 set :status1.6:text "Meeting the copper target"
-    * set .status1 :status1.6:text
+ 1271 set .status1 "Meeting the copper target"
  1272 label *label288
  1273 set :status2.6:text "Mining "
  1274 set :status2.6:item @copper
  1275 set :status2.6:block "core"
-    * set .status2 :status2.6:text
-    * set .item2 :status2.6:item
-    * set .block2 :status2.6:block
+ 1276 set .status2 "Mining "
+ 1277 set .item2 @copper
+ 1278 set .block2 "core"
  1279 label *label289
  1280 set :mineOre.1:ore @copper
  1281 setaddr :mineOre.1*retaddr *label290 (h:*label290)
 
  1286 sensor *tmp264 .core @lead
  1287 jump *label291 greaterThanEq *tmp264 .leadTarget
  1288 set :status1.7:text "Meeting the lead target"
-    * set .status1 :status1.7:text
+ 1289 set .status1 "Meeting the lead target"
  1290 label *label293
  1291 set :status2.7:text "Mining "
  1292 set :status2.7:item @lead
  1293 set :status2.7:block "core"
-    * set .status2 :status2.7:text
-    * set .item2 :status2.7:item
-    * set .block2 :status2.7:block
+ 1294 set .status2 "Mining "
+ 1295 set .item2 @lead
+ 1296 set .block2 "core"
  1297 label *label294
  1298 set :mineOre.1:ore @lead
  1299 setaddr :mineOre.1*retaddr *label295 (h:*label295)
 
  1304 sensor *tmp267 .core @metaglass
  1305 jump *label296 greaterThanEq *tmp267 .metaglassTarget
  1306 set :status1.8:text "Meeting the metaglass target"
-    * set .status1 :status1.8:text
+ 1307 set .status1 "Meeting the metaglass target"
  1308 label *label298
  1309 set :status2.8:text "Mining "
  1310 set :status2.8:item @sand
  1311 set :status2.8:block "core"
-    * set .status2 :status2.8:text
-    * set .item2 :status2.8:item
-    * set .block2 :status2.8:block
+ 1312 set .status2 "Mining "
+ 1313 set .item2 @sand
+ 1314 set .block2 "core"
  1315 label *label299
  1316 set :mineOre.1:ore @sand
  1317 setaddr :mineOre.1*retaddr *label300 (h:*label300)
 
  1321 label *label296
  1322 jump *label301 notEqual :supplyBase:supplied false
  1323 set :status1.9:text "Supplying base"
-    * set .status1 :status1.9:text
+ 1324 set .status1 "Supplying base"
  1325 label *label303
  1326 sensor :supplyBase:coal.1 .core @coal
  1327 sensor :supplyBase:sand.1 .core @sand
 
  1333 label *label305
  1334 set :supplyBase:ore.1 *tmp275
  1335 set :status2.9:text "Mining "
-    * set :status2.9:item :supplyBase:ore.1
+ 1336 set :status2.9:item *tmp275
  1337 set :status2.9:block "core"
-    * set .status2 :status2.9:text
-    * set .item2 :status2.9:item
-    * set .block2 :status2.9:block
+ 1338 set .status2 "Mining "
+ 1339 set .item2 :supplyBase:ore.1
+ 1340 set .block2 "core"
  1341 label *label306
-    * set :mineOre.1:ore :supplyBase:ore.1
+ 1342 set :mineOre.1:ore *tmp275
  1343 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1344 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1345 label *label307
 
  1352 jump *label278 always
  1353 label *label277
  1354 set :status1.10:text "Fetching titanium"
-    * set .status1 :status1.10:text
+ 1355 set .status1 "Fetching titanium"
  1356 label *label308
  1357 set :fetchBlock:block .titanium_drill
  1358 set :fetchBlock:item @titanium
 
  1462 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1463 label *label329
  1464 set :status3.3:text "Building..."
-    * set .status3 :status3.3:text
+ 1465 set .status3 "Building..."
  1466 label *label330
  1467 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1468 jump *label331 equal :buildBlockAt:building null
 
  1501 label *label340
  1502 set :buildBlockAt*retval :buildBlockAt:building
  1503 jump *label328 always
-    * set :buildBlockAt*retval null
  1504 label *label328
  1505 return :buildBlockAt*retaddr
  1506 end
 
  1526 label *label345
  1527 set :buildBlock*retval :buildBlockAt*retval
  1528 jump *label343 always
-    * set :buildBlock*retval null
  1529 label *label343
  1530 return :buildBlock*retaddr
  1531 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-255 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .kiln null
     6 set .nextBlock ""
     7 set .copperTarget 0
     8 set .leadTarget 0
 
    28 label *label16
    29 jump *label15 equal .core null
    30 label *label17
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    31 label *label19
    32 op add :buildBlockFromCfg:x .coreX -1.5
    33 op add :buildBlockFromCfg:y .coreY 2.5
 
    53 label *label21
    54 label *label18
    55 set .press *tmp16
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    56 label *label25
    57 op add :buildBlockFromCfg.1:x .coreX 0
    58 op add :buildBlockFromCfg.1:y .coreY 4
 
    78 label *label27
    79 label *label24
    80 set .battery *tmp20
-    * set :buildBlockFromCfg.2:block @combustion-generator
-    * set :buildBlockFromCfg.2:offsetX 0
-    * set :buildBlockFromCfg.2:offsetY 3
-    * set :buildBlockFromCfg.2:copper 25
-    * set :buildBlockFromCfg.2:lead 15
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    81 label *label31
    82 op add :buildBlockFromCfg.2:x .coreX 0
    83 op add :buildBlockFromCfg.2:y .coreY 3
 
   104 label *label30
   105 set .generator *tmp24
   106 set .powerTarget 400
-    * set :buildBlockFromCfg.3:block @battery
-    * set :buildBlockFromCfg.3:offsetX -1
-    * set :buildBlockFromCfg.3:offsetY 4
-    * set :buildBlockFromCfg.3:copper 5
-    * set :buildBlockFromCfg.3:lead 20
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   107 label *label37
   108 op add :buildBlockFromCfg.3:x .coreX -1
   109 op add :buildBlockFromCfg.3:y .coreY 4
 
   127 multilabel *label40 (m:marker3)
   128 label *label39
   129 label *label36
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   130 label *label43
   131 op add :buildBlockFromCfg.4:x .coreX 1.5
   132 op add :buildBlockFromCfg.4:y .coreY 2.5
 
   167 setaddr :meetTarget*retaddr *label53 (h:*label53)
   168 call *label10 *invalid :meetTarget*retval (m:*label53) (h:*label53)
   169 label *label53
-    * set :locateOreAway:ore @titanium
   170 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   171 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   172 label *label55
 
   205 jump *label55 always
   206 label *label57
   207 label *label54
-    * set :buildTitaniumDrillCfg:x :locateOreAway:x
-    * set :buildTitaniumDrillCfg:y :locateOreAway:y
   208 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   209 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   210 set :moveTo.1:x :locateOreAway:x
 
   243 setaddr *tmp54 *label73
   244 label *label67
   245 set :buildTitaniumDrillCfg:count 0
-    * set :checkOre:x :buildTitaniumDrillCfg:ax
-    * set :checkOre:y :buildTitaniumDrillCfg:ay
-    * set :checkOre:ore @ore-titanium
   246 set :checkOre:count 0
   247 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   248 jump *label75 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  249 op add :checkOre:count 0 1
   250 label *label75
   251 label *label76
   252 label *label74
   253 set :buildTitaniumDrillCfg:count :checkOre:count
   254 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:y :buildTitaniumDrillCfg:ay
-    * set :checkOre.1:ore @ore-titanium
   255 set :checkOre.1:count :checkOre:count
   256 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   257 jump *label78 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  258 op add :checkOre.1:count :checkOre:count 1
   259 label *label78
   260 label *label79
   261 label *label77
   262 set :buildTitaniumDrillCfg:count :checkOre.1:count
   263 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :buildTitaniumDrillCfg:ax
-    * set :checkOre.2:y *tmp68
-    * set :checkOre.2:ore @ore-titanium
   264 set :checkOre.2:count :checkOre.1:count
   265 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   266 jump *label81 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  267 op add :checkOre.2:count :checkOre.1:count 1
   268 label *label81
   269 label *label82
   270 label *label80
   271 set :buildTitaniumDrillCfg:count :checkOre.2:count
   272 op add *tmp75 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   273 op add *tmp76 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x :checkOre.1:x
-    * set :checkOre.3:y *tmp68
-    * set :checkOre.3:ore @ore-titanium
   274 set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock *tmp75 *tmp76 0 0 :checkOre.3:floor
+  275 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   276 jump *label84 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
+  277 op add :checkOre.3:count :checkOre.2:count 1
   278 label *label84
   279 label *label85
   280 label *label83
-    * set :buildTitaniumDrillCfg:count :checkOre.3:count
   281 jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   282 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   283 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
 
   310 setaddr :buildBlockAt*retaddr *label92 (h:*label92)
   311 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   312 label *label92
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   313 jump *label93 equal :buildBlockAt*retval null
   314 set *tmp37 :buildBlockAt*retval
   315 jump *label49 always
 
   344 label *label52
   345 set *tmp37 null
   346 label *label49
-    * set *tmp36 *tmp37
   347 label *label48
   348 set .titanium_drill *tmp37
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
   349 label *label100
   350 op add :buildBlockFromCfg.5:x .coreX 0
   351 op add :buildBlockFromCfg.5:y .coreY 2
 
   371 label *label102
   372 label *label99
   373 set .unloader1 *tmp106
-    * set :buildBlockFromCfg.6:block @power-node
-    * set :buildBlockFromCfg.6:offsetX -2
-    * set :buildBlockFromCfg.6:offsetY -1
-    * set :buildBlockFromCfg.6:copper 2
-    * set :buildBlockFromCfg.6:lead 6
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 0
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config null
   374 label *label106
   375 op add :buildBlockFromCfg.6:x .coreX -2
   376 op add :buildBlockFromCfg.6:y .coreY -1
 
   394 multilabel *label109 (m:marker7)
   395 label *label108
   396 label *label105
-    * set :buildBlockFromCfg.7:block @micro-processor
-    * set :buildBlockFromCfg.7:offsetX 1
-    * set :buildBlockFromCfg.7:offsetY 4
-    * set :buildBlockFromCfg.7:copper 90
-    * set :buildBlockFromCfg.7:lead 50
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 50
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config processor1
   397 label *label112
   398 op add :buildBlockFromCfg.7:x .coreX 1
   399 op add :buildBlockFromCfg.7:y .coreY 4
 
   424 write *tmp24 *tmp114 ".generator"
   425 write *tmp32 *tmp114 ".smelter"
   426 write *tmp16 *tmp114 ".press"
-    * set :buildBlockFromCfg.8:block @air-factory
-    * set :buildBlockFromCfg.8:offsetX -4
-    * set :buildBlockFromCfg.8:offsetY -1
-    * set :buildBlockFromCfg.8:copper 60
-    * set :buildBlockFromCfg.8:lead 70
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 3
-    * set :buildBlockFromCfg.8:config @mono
   427 label *label118
   428 op add :buildBlockFromCfg.8:x .coreX -4
   429 op add :buildBlockFromCfg.8:y .coreY -1
 
   448 multilabel *label121 (m:marker9)
   449 label *label120
   450 label *label117
-    * set .factory *tmp119
   451 write *tmp119 *tmp114 ".factory"
-    * set :buildBlockFromCfg.9:block @unloader
-    * set :buildBlockFromCfg.9:offsetX -2
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 0
-    * set :buildBlockFromCfg.9:lead 0
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 30
-    * set :buildBlockFromCfg.9:titanium 25
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   452 label *label124
   453 op add :buildBlockFromCfg.9:x .coreX -2
   454 op add :buildBlockFromCfg.9:y .coreY 1
 
   473 multilabel *label127 (m:marker10)
   474 label *label126
   475 label *label123
-    * set .unloader2 *tmp123
   476 write *tmp123 *tmp114 ".unloader2"
-    * set :buildBlockFromCfg.10:block @overflow-gate
-    * set :buildBlockFromCfg.10:offsetX -3
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 4
-    * set :buildBlockFromCfg.10:lead 2
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   477 label *label130
   478 op add :buildBlockFromCfg.10:x .coreX -3
   479 op add :buildBlockFromCfg.10:y .coreY 1
 
   498 label *label132
   499 label *label129
   500 write @mono *tmp114 ".unitToProduce"
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   501 label *label136
   502 op add :buildBlockFromCfg.11:x .coreX 2
   503 op add :buildBlockFromCfg.11:y .coreY 0
 
   521 multilabel *label139 (m:marker12)
   522 label *label138
   523 label *label135
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   524 label *label142
   525 op add :buildBlockFromCfg.12:x .coreX 3.5
   526 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   545 label *label144
   546 label *label141
   547 write null *tmp114 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   548 label *label148
   549 op add :buildBlockFromCfg.13:x .coreX 2
   550 op add :buildBlockFromCfg.13:y .coreY 1
 
   568 multilabel *label151 (m:marker14)
   569 label *label150
   570 label *label147
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   571 label *label154
   572 op add :buildBlockFromCfg.14:x .coreX -3.5
   573 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   591 multilabel *label157 (m:marker15)
   592 label *label156
   593 label *label153
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   594 label *label160
   595 op add :buildBlockFromCfg.15:x .coreX -3.5
   596 op add :buildBlockFromCfg.15:y .coreY 2.5
 
   615 multilabel *label163 (m:marker16)
   616 label *label162
   617 label *label159
-    * set .generator2 *tmp147
   618 write *tmp147 *tmp114 ".generator2"
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   619 label *label166
   620 op add :buildBlockFromCfg.16:x .coreX -4
   621 op add :buildBlockFromCfg.16:y .coreY 1
 
   666 jump *label13 always
   667 end
   668 label *label0
-    * set :status3:text "Moving..."
   669 set .status3 "Moving..."
   670 label *label177
   671 label *label178
 
   680 return :moveTo*retaddr
   681 end
   682 label *label1
-    * set *tmp159 :moveTo.1:x
-    * set *tmp160 :moveTo.1:y
   683 set :moveTo:x :moveTo.1:x
   684 set :moveTo:y :moveTo.1:y
   685 set :moveTo:radius 5
 
   723 return :moveToBlock*retaddr
   724 end
   725 label *label4
-    * set :status3.1:text "Depositing..."
   726 set .status3 "Depositing..."
   727 label *label193
   728 sensor *tmp168 @unit @firstItem
 
   794 setaddr :moveToEmpty*retaddr *label213 (h:*label213)
   795 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
   796 label *label213
-    * set :status3.2:text "Mining..."
   797 set .status3 "Mining..."
   798 label *label214
   799 label *label215
 
   833 label *label8
   834 sensor .transportTarget :fetchBlock:block @itemCapacity
   835 set .transportItem :fetchBlock:item
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   836 set .status2 "Fetching "
   837 set .item2 :fetchBlock:item
   838 set .block2 :fetchBlock:block
 
   877 jump *label235 greaterThanEq *tmp208 .updatedGraphiteTarget
   878 sensor *tmp211 .press @coal
   879 jump *label237 greaterThanEq *tmp211 5
-    * set :status1:text "Meeting the graphite target"
   880 set .status1 "Meeting the graphite target"
   881 label *label239
   882 set :supplyBlock:block .press
   883 set :supplyBlock:ore @coal
-    * set :status2.1:text "Supplying "
-    * set :status2.1:item @coal
-    * set :status2.1:block .press
   884 set .status2 "Supplying "
-    * set .item2 :supplyBlock:ore
-    * set .block2 :supplyBlock:block
+  885 set .item2 @coal
+  886 set .block2 .press
   887 label *label241
   888 sensor *tmp214 .press @itemCapacity
   889 sensor *tmp215 .press @coal
 
   907 jump *label245 greaterThanEq *tmp219 .updatedSiliconTarget
   908 sensor *tmp222 .smelter @coal
   909 jump *label247 greaterThanEq *tmp222 5
-    * set :status1.1:text "Meeting the silicon target (coal)"
   910 set .status1 "Meeting the silicon target (coal)"
   911 label *label249
   912 set :supplyBlock.1:block .smelter
   913 set :supplyBlock.1:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .smelter
   914 set .status2 "Supplying "
-    * set .item2 :supplyBlock.1:ore
-    * set .block2 :supplyBlock.1:block
+  915 set .item2 @coal
+  916 set .block2 .smelter
   917 label *label251
   918 sensor *tmp225 .smelter @itemCapacity
   919 sensor *tmp226 .smelter @coal
 
   933 label *label247
   934 sensor *tmp230 .smelter @sand
   935 jump *label255 greaterThanEq *tmp230 5
-    * set :status1.2:text "Meeting the silicon target (sand)"
   936 set .status1 "Meeting the silicon target (sand)"
   937 label *label257
   938 set :supplyBlock.2:block .smelter
   939 set :supplyBlock.2:ore @sand
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @sand
-    * set :status2.3:block .smelter
   940 set .status2 "Supplying "
-    * set .item2 :supplyBlock.2:ore
-    * set .block2 :supplyBlock.2:block
+  941 set .item2 @sand
+  942 set .block2 .smelter
   943 label *label259
   944 sensor *tmp233 .smelter @itemCapacity
   945 sensor *tmp234 .smelter @sand
 
   962 label *label246
   963 sensor *tmp238 .battery @totalPower
   964 jump *label263 greaterThanEq *tmp238 .powerTarget
-    * set :status1.3:text "Supplying generator"
   965 set .status1 "Supplying generator"
   966 label *label265
   967 set :supplyBlock.3:block .generator
   968 set :supplyBlock.3:ore @coal
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @coal
-    * set :status2.4:block .generator
   969 set .status2 "Supplying "
-    * set .item2 :supplyBlock.3:ore
-    * set .block2 :supplyBlock.3:block
+  970 set .item2 @coal
+  971 set .block2 .generator
   972 label *label267
   973 sensor *tmp241 .generator @itemCapacity
   974 sensor *tmp242 .generator @coal
 
   991 jump *label271 equal .processor null
   992 sensor *tmp248 .core @coal
   993 jump *label273 greaterThanEq *tmp248 10
-    * set :status1.4:text "Supplying base"
   994 set .status1 "Supplying base"
   995 label *label275
   996 set :mineOre.1:ore @coal
 
  1007 jump *label277 greaterThanEq *tmp251 .titaniumTrigger
  1008 sensor *tmp254 .core @silicon
  1009 jump *label279 greaterThanEq *tmp254 .siliconTarget
-    * set :status1.5:text "Meeting the silicon target"
  1010 set .status1 "Meeting the silicon target"
  1011 label *label281
  1012 sensor :supplyBase:coal .core @coal
 
  1018 set *tmp260 @sand
  1019 label *label283
  1020 set :supplyBase:ore *tmp260
-    * set :status2.5:text "Mining "
-    * set :status2.5:item *tmp260
-    * set :status2.5:block "core"
  1021 set .status2 "Mining "
-    * set .item2 :supplyBase:ore
+ 1022 set .item2 *tmp260
  1023 set .block2 "core"
  1024 label *label284
  1025 set :mineOre.1:ore *tmp260
 
  1030 label *label279
  1031 sensor *tmp261 .core @copper
  1032 jump *label286 greaterThanEq *tmp261 .copperTarget
-    * set :status1.6:text "Meeting the copper target"
  1033 set .status1 "Meeting the copper target"
  1034 label *label288
-    * set :status2.6:text "Mining "
-    * set :status2.6:item @copper
-    * set :status2.6:block "core"
  1035 set .status2 "Mining "
  1036 set .item2 @copper
  1037 set .block2 "core"
 
  1044 label *label286
  1045 sensor *tmp264 .core @lead
  1046 jump *label291 greaterThanEq *tmp264 .leadTarget
-    * set :status1.7:text "Meeting the lead target"
  1047 set .status1 "Meeting the lead target"
  1048 label *label293
-    * set :status2.7:text "Mining "
-    * set :status2.7:item @lead
-    * set :status2.7:block "core"
  1049 set .status2 "Mining "
  1050 set .item2 @lead
  1051 set .block2 "core"
 
  1058 label *label291
  1059 sensor *tmp267 .core @metaglass
  1060 jump *label296 greaterThanEq *tmp267 .metaglassTarget
-    * set :status1.8:text "Meeting the metaglass target"
  1061 set .status1 "Meeting the metaglass target"
  1062 label *label298
-    * set :status2.8:text "Mining "
-    * set :status2.8:item @sand
-    * set :status2.8:block "core"
  1063 set .status2 "Mining "
  1064 set .item2 @sand
  1065 set .block2 "core"
 
  1071 jump *label297 always
  1072 label *label296
  1073 jump *label301 notEqual :supplyBase:supplied false
-    * set :status1.9:text "Supplying base"
  1074 set .status1 "Supplying base"
  1075 label *label303
  1076 sensor :supplyBase:coal.1 .core @coal
 
  1082 set *tmp275 @sand
  1083 label *label305
  1084 set :supplyBase:ore.1 *tmp275
-    * set :status2.9:text "Mining "
-    * set :status2.9:item *tmp275
-    * set :status2.9:block "core"
  1085 set .status2 "Mining "
-    * set .item2 :supplyBase:ore.1
+ 1086 set .item2 *tmp275
  1087 set .block2 "core"
  1088 label *label306
  1089 set :mineOre.1:ore *tmp275
 
  1098 label *label280
  1099 jump *label278 always
  1100 label *label277
-    * set :status1.10:text "Fetching titanium"
  1101 set .status1 "Fetching titanium"
  1102 label *label308
  1103 set :fetchBlock:block .titanium_drill
 
  1207 setaddr :moveTo.1*retaddr *label329 (h:*label329)
  1208 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1209 label *label329
-    * set :status3.3:text "Building..."
  1210 set .status3 "Building..."
  1211 label *label330
  1212 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-16 instructions):
 
   242 set :buildTitaniumDrillCfg:yy -1
   243 setaddr *tmp54 *label73
   244 label *label67
-    * set :buildTitaniumDrillCfg:count 0
   245 set :checkOre:count 0
   246 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   247 jump *label75 notEqual :checkOre:floor @ore-titanium
 
   249 label *label75
   250 label *label76
   251 label *label74
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   252 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   253 set :checkOre.1:count :checkOre:count
   254 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
 
   257 label *label78
   258 label *label79
   259 label *label77
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
   260 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   261 set :checkOre.2:count :checkOre.1:count
   262 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
 
   265 label *label81
   266 label *label82
   267 label *label80
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op add *tmp75 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * op add *tmp76 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   268 set :checkOre.3:count :checkOre.2:count
   269 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   270 jump *label84 notEqual :checkOre.3:floor @ore-titanium
 
   873 jump *label237 greaterThanEq *tmp211 5
   874 set .status1 "Meeting the graphite target"
   875 label *label239
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   876 set .status2 "Supplying "
   877 set .item2 @coal
   878 set .block2 .press
 
   901 jump *label247 greaterThanEq *tmp222 5
   902 set .status1 "Meeting the silicon target (coal)"
   903 label *label249
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   904 set .status2 "Supplying "
   905 set .item2 @coal
   906 set .block2 .smelter
 
   925 jump *label255 greaterThanEq *tmp230 5
   926 set .status1 "Meeting the silicon target (sand)"
   927 label *label257
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   928 set .status2 "Supplying "
   929 set .item2 @sand
   930 set .block2 .smelter
 
   952 jump *label263 greaterThanEq *tmp238 .powerTarget
   953 set .status1 "Supplying generator"
   954 label *label265
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   955 set .status2 "Supplying "
   956 set .item2 @coal
   957 set .block2 .generator
 
  1003 label *label282
  1004 set *tmp260 @sand
  1005 label *label283
-    * set :supplyBase:ore *tmp260
  1006 set .status2 "Mining "
  1007 set .item2 *tmp260
  1008 set .block2 "core"
 
  1066 label *label304
  1067 set *tmp275 @sand
  1068 label *label305
-    * set :supplyBase:ore.1 *tmp275
  1069 set .status2 "Mining "
  1070 set .item2 *tmp275
  1071 set .block2 "core"

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    21 set .status3 ""
    22 set .titaniumTrigger 7
    23 set *signature "0:v1"
+   24 set .powerTarget 400
    25 label *label13
    26 label *label15
    27 ubind @poly
 
    29 label *label16
    30 jump *label15 equal .core null
    31 label *label17
+   32 set :buildBlock:block @graphite-press
+   33 set :buildBlock:copper 75
+   34 set :buildBlock:lead 30
+   35 set :buildBlock:graphite 0
+   36 set :buildBlock:silicon 0
+   37 set :buildBlock:titanium 0
+   38 set :buildBlock:metaglass 0
+   39 set :buildBlock:rotation 0
+   40 set :buildBlock:config null
+   41 setaddr :buildBlock*retaddr *label23 (h:*label23)
    42 label *label19
    43 op add :buildBlockFromCfg:x .coreX -1.5
    44 op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
    45 set :buildBlock:x :buildBlockFromCfg:x
    46 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label23 (h:*label23)
    47 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    48 label *label23
    49 set *tmp16 :buildBlock*retval
 
    54 label *label21
    55 label *label18
    56 set .press *tmp16
+   57 set :buildBlock:block @battery
+   58 set :buildBlock:copper 5
+   59 set :buildBlock:lead 20
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
+   66 setaddr :buildBlock*retaddr *label29 (h:*label29)
    67 label *label25
    68 op add :buildBlockFromCfg.1:x .coreX 0
    69 op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
    70 set :buildBlock:x :buildBlockFromCfg.1:x
    71 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label29 (h:*label29)
    72 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    73 label *label29
    74 set *tmp20 :buildBlock*retval
 
    79 label *label27
    80 label *label24
    81 set .battery *tmp20
+   82 set :buildBlock:block @combustion-generator
+   83 set :buildBlock:copper 25
+   84 set :buildBlock:lead 15
+   85 set :buildBlock:graphite 0
+   86 set :buildBlock:silicon 0
+   87 set :buildBlock:titanium 0
+   88 set :buildBlock:metaglass 0
+   89 set :buildBlock:rotation 0
+   90 set :buildBlock:config null
+   91 setaddr :buildBlock*retaddr *label35 (h:*label35)
    92 label *label31
    93 op add :buildBlockFromCfg.2:x .coreX 0
    94 op add :buildBlockFromCfg.2:y .coreY 3
-    * set :buildBlock:block @combustion-generator
    95 set :buildBlock:x :buildBlockFromCfg.2:x
    96 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label35 (h:*label35)
    97 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    98 label *label35
    99 set *tmp24 :buildBlock*retval
 
   104 label *label33
   105 label *label30
   106 set .generator *tmp24
-    * set .powerTarget 400
+  107 set :buildBlock:block @battery
+  108 set :buildBlock:copper 5
+  109 set :buildBlock:lead 20
+  110 set :buildBlock:graphite 0
+  111 set :buildBlock:silicon 0
+  112 set :buildBlock:titanium 0
+  113 set :buildBlock:metaglass 0
+  114 set :buildBlock:rotation 0
+  115 set :buildBlock:config null
+  116 setaddr :buildBlock*retaddr *label41 (h:*label41)
   117 label *label37
   118 op add :buildBlockFromCfg.3:x .coreX -1
   119 op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:block @battery
   120 set :buildBlock:x :buildBlockFromCfg.3:x
   121 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label41 (h:*label41)
   122 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   123 label *label41
   124 jump *label36 always
 
   127 multilabel *label40 (m:marker3)
   128 label *label39
   129 label *label36
+  130 set :buildBlock:block @silicon-smelter
+  131 set :buildBlock:copper 30
+  132 set :buildBlock:lead 25
+  133 set :buildBlock:graphite 0
+  134 set :buildBlock:silicon 0
+  135 set :buildBlock:titanium 0
+  136 set :buildBlock:metaglass 0
+  137 set :buildBlock:rotation 0
+  138 set :buildBlock:config null
+  139 setaddr :buildBlock*retaddr *label47 (h:*label47)
   140 label *label43
   141 op add :buildBlockFromCfg.4:x .coreX 1.5
   142 op add :buildBlockFromCfg.4:y .coreY 2.5
-    * set :buildBlock:block @silicon-smelter
   143 set :buildBlock:x :buildBlockFromCfg.4:x
   144 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label47 (h:*label47)
   145 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   146 label *label47
   147 set *tmp32 :buildBlock*retval
 
   340 label *label49
   341 label *label48
   342 set .titanium_drill *tmp37
+  343 set :buildBlock:block @unloader
+  344 set :buildBlock:copper 0
+  345 set :buildBlock:lead 0
+  346 set :buildBlock:graphite 0
+  347 set :buildBlock:silicon 30
+  348 set :buildBlock:titanium 25
+  349 set :buildBlock:metaglass 0
+  350 set :buildBlock:rotation 0
+  351 set :buildBlock:config null
+  352 setaddr :buildBlock*retaddr *label104 (h:*label104)
   353 label *label100
   354 op add :buildBlockFromCfg.5:x .coreX 0
   355 op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
   356 set :buildBlock:x :buildBlockFromCfg.5:x
   357 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label104 (h:*label104)
   358 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   359 label *label104
   360 set *tmp106 :buildBlock*retval
 
   365 label *label102
   366 label *label99
   367 set .unloader1 *tmp106
+  368 set :buildBlock:block @power-node
+  369 set :buildBlock:copper 2
+  370 set :buildBlock:lead 6
+  371 set :buildBlock:graphite 0
+  372 set :buildBlock:silicon 0
+  373 set :buildBlock:titanium 0
+  374 set :buildBlock:metaglass 0
+  375 set :buildBlock:rotation 0
+  376 set :buildBlock:config null
+  377 setaddr :buildBlock*retaddr *label110 (h:*label110)
   378 label *label106
   379 op add :buildBlockFromCfg.6:x .coreX -2
   380 op add :buildBlockFromCfg.6:y .coreY -1
-    * set :buildBlock:block @power-node
   381 set :buildBlock:x :buildBlockFromCfg.6:x
   382 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label110 (h:*label110)
   383 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   384 label *label110
   385 jump *label105 always
 
   388 multilabel *label109 (m:marker7)
   389 label *label108
   390 label *label105
+  391 set :buildBlock:block @micro-processor
+  392 set :buildBlock:copper 90
+  393 set :buildBlock:lead 50
+  394 set :buildBlock:graphite 0
+  395 set :buildBlock:silicon 50
+  396 set :buildBlock:titanium 0
+  397 set :buildBlock:metaglass 0
+  398 set :buildBlock:rotation 0
+  399 setaddr :buildBlock*retaddr *label116 (h:*label116)
   400 label *label112
   401 op add :buildBlockFromCfg.7:x .coreX 1
   402 op add :buildBlockFromCfg.7:y .coreY 4
-    * set :buildBlock:block @micro-processor
   403 set :buildBlock:x :buildBlockFromCfg.7:x
   404 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   405 set :buildBlock:config processor1
-    * setaddr :buildBlock*retaddr *label116 (h:*label116)
   406 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   407 label *label116
   408 set *tmp114 :buildBlock*retval
 
   418 write *tmp24 *tmp114 ".generator"
   419 write *tmp32 *tmp114 ".smelter"
   420 write *tmp16 *tmp114 ".press"
+  421 set :buildBlock:block @air-factory
+  422 set :buildBlock:copper 60
+  423 set :buildBlock:lead 70
+  424 set :buildBlock:graphite 0
+  425 set :buildBlock:silicon 0
+  426 set :buildBlock:titanium 0
+  427 set :buildBlock:metaglass 0
+  428 set :buildBlock:rotation 3
+  429 set :buildBlock:config @mono
+  430 setaddr :buildBlock*retaddr *label122 (h:*label122)
   431 label *label118
   432 op add :buildBlockFromCfg.8:x .coreX -4
   433 op add :buildBlockFromCfg.8:y .coreY -1
-    * set :buildBlock:block @air-factory
   434 set :buildBlock:x :buildBlockFromCfg.8:x
   435 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label122 (h:*label122)
   436 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   437 label *label122
   438 set *tmp119 :buildBlock*retval
 
   443 label *label120
   444 label *label117
   445 write *tmp119 *tmp114 ".factory"
+  446 set :buildBlock:block @unloader
+  447 set :buildBlock:copper 0
+  448 set :buildBlock:lead 0
+  449 set :buildBlock:graphite 0
+  450 set :buildBlock:silicon 30
+  451 set :buildBlock:titanium 25
+  452 set :buildBlock:metaglass 0
+  453 set :buildBlock:rotation 0
+  454 set :buildBlock:config null
+  455 setaddr :buildBlock*retaddr *label128 (h:*label128)
   456 label *label124
   457 op add :buildBlockFromCfg.9:x .coreX -2
   458 op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:block @unloader
   459 set :buildBlock:x :buildBlockFromCfg.9:x
   460 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label128 (h:*label128)
   461 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   462 label *label128
   463 set *tmp123 :buildBlock*retval
 
   468 label *label126
   469 label *label123
   470 write *tmp123 *tmp114 ".unloader2"
+  471 set :buildBlock:block @overflow-gate
+  472 set :buildBlock:copper 4
+  473 set :buildBlock:lead 2
+  474 set :buildBlock:graphite 0
+  475 set :buildBlock:silicon 0
+  476 set :buildBlock:titanium 0
+  477 set :buildBlock:metaglass 0
+  478 set :buildBlock:rotation 0
+  479 set :buildBlock:config null
+  480 setaddr :buildBlock*retaddr *label134 (h:*label134)
   481 label *label130
   482 op add :buildBlockFromCfg.10:x .coreX -3
   483 op add :buildBlockFromCfg.10:y .coreY 1
-    * set :buildBlock:block @overflow-gate
   484 set :buildBlock:x :buildBlockFromCfg.10:x
   485 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label134 (h:*label134)
   486 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   487 label *label134
   488 jump *label129 always
 
   492 label *label132
   493 label *label129
   494 write @mono *tmp114 ".unitToProduce"
+  495 set :buildBlock:block @unloader
+  496 set :buildBlock:copper 0
+  497 set :buildBlock:lead 0
+  498 set :buildBlock:graphite 0
+  499 set :buildBlock:silicon 30
+  500 set :buildBlock:titanium 25
+  501 set :buildBlock:metaglass 0
+  502 set :buildBlock:rotation 0
+  503 set :buildBlock:config null
+  504 setaddr :buildBlock*retaddr *label140 (h:*label140)
   505 label *label136
   506 op add :buildBlockFromCfg.11:x .coreX 2
   507 op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
   508 set :buildBlock:x :buildBlockFromCfg.11:x
   509 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label140 (h:*label140)
   510 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   511 label *label140
   512 jump *label135 always
 
   515 multilabel *label139 (m:marker12)
   516 label *label138
   517 label *label135
+  518 set :buildBlock:block @kiln
+  519 set :buildBlock:copper 60
+  520 set :buildBlock:lead 30
+  521 set :buildBlock:graphite 30
+  522 set :buildBlock:silicon 0
+  523 set :buildBlock:titanium 0
+  524 set :buildBlock:metaglass 0
+  525 set :buildBlock:rotation 0
+  526 set :buildBlock:config null
+  527 setaddr :buildBlock*retaddr *label146 (h:*label146)
   528 label *label142
   529 op add :buildBlockFromCfg.12:x .coreX 3.5
   530 op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
   531 set :buildBlock:x :buildBlockFromCfg.12:x
   532 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label146 (h:*label146)
   533 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   534 label *label146
   535 jump *label141 always
 
   539 label *label144
   540 label *label141
   541 write null *tmp114 ".kiln"
+  542 set :buildBlock:block @junction
+  543 set :buildBlock:copper 3
+  544 set :buildBlock:lead 0
+  545 set :buildBlock:graphite 0
+  546 set :buildBlock:silicon 0
+  547 set :buildBlock:titanium 0
+  548 set :buildBlock:metaglass 0
+  549 set :buildBlock:rotation 0
+  550 set :buildBlock:config null
+  551 setaddr :buildBlock*retaddr *label152 (h:*label152)
   552 label *label148
   553 op add :buildBlockFromCfg.13:x .coreX 2
   554 op add :buildBlockFromCfg.13:y .coreY 1
-    * set :buildBlock:block @junction
   555 set :buildBlock:x :buildBlockFromCfg.13:x
   556 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label152 (h:*label152)
   557 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   558 label *label152
   559 jump *label147 always
 
   562 multilabel *label151 (m:marker14)
   563 label *label150
   564 label *label147
+  565 set :buildBlock:block @water-extractor
+  566 set :buildBlock:copper 30
+  567 set :buildBlock:lead 30
+  568 set :buildBlock:graphite 30
+  569 set :buildBlock:silicon 0
+  570 set :buildBlock:titanium 0
+  571 set :buildBlock:metaglass 30
+  572 set :buildBlock:rotation 0
+  573 set :buildBlock:config null
+  574 setaddr :buildBlock*retaddr *label158 (h:*label158)
   575 label *label154
   576 op add :buildBlockFromCfg.14:x .coreX -3.5
   577 op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
   578 set :buildBlock:x :buildBlockFromCfg.14:x
   579 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label158 (h:*label158)
   580 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   581 label *label158
   582 jump *label153 always
 
   585 multilabel *label157 (m:marker15)
   586 label *label156
   587 label *label153
+  588 set :buildBlock:block @steam-generator
+  589 set :buildBlock:copper 35
+  590 set :buildBlock:lead 40
+  591 set :buildBlock:graphite 25
+  592 set :buildBlock:silicon 30
+  593 set :buildBlock:titanium 0
+  594 set :buildBlock:metaglass 0
+  595 set :buildBlock:rotation 0
+  596 set :buildBlock:config null
+  597 setaddr :buildBlock*retaddr *label164 (h:*label164)
   598 label *label160
   599 op add :buildBlockFromCfg.15:x .coreX -3.5
   600 op add :buildBlockFromCfg.15:y .coreY 2.5
-    * set :buildBlock:block @steam-generator
   601 set :buildBlock:x :buildBlockFromCfg.15:x
   602 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label164 (h:*label164)
   603 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   604 label *label164
   605 set *tmp147 :buildBlock*retval
 
   610 label *label162
   611 label *label159
   612 write *tmp147 *tmp114 ".generator2"
+  613 set :buildBlock:block @sorter
+  614 set :buildBlock:copper 2
+  615 set :buildBlock:lead 2
+  616 set :buildBlock:graphite 0
+  617 set :buildBlock:silicon 0
+  618 set :buildBlock:titanium 0
+  619 set :buildBlock:metaglass 0
+  620 set :buildBlock:rotation 0
+  621 set :buildBlock:config @coal
+  622 setaddr :buildBlock*retaddr *label170 (h:*label170)
   623 label *label166
   624 op add :buildBlockFromCfg.16:x .coreX -4
   625 op add :buildBlockFromCfg.16:y .coreY 1
-    * set :buildBlock:block @sorter
   626 set :buildBlock:x :buildBlockFromCfg.16:x
   627 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label170 (h:*label170)
   628 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   629 label *label170
   630 jump *label165 always
 
   662 label *label0
   663 set .status3 "Moving..."
   664 label *label177
+  665 op sub *tmp158 :moveTo:radius 0.5
   666 label *label178
   667 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
   668 jump *label180 notEqual *tmp156 false
-    * op sub *tmp158 :moveTo:radius 0.5
   669 ucontrol approach :moveTo:x :moveTo:y *tmp158
   670 label *label179
   671 jump *label178 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   219 set :buildTitaniumDrillCfg:dy 0
   220 set :buildTitaniumDrillCfg:searches 0
   221 label *label64
-    * jump *label66 greaterThanEq :buildTitaniumDrillCfg:searches 5
+  222 label *label346
   223 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   224 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   225 set :buildTitaniumDrillCfg:best 0
 
   288 label *label69
   289 label *label65
   290 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
-    * jump *label64 always
+  291 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
   292 label *label66
   293 jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   294 op div *tmp89 :buildTitaniumDrillCfg:dx 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   721 label *label193
   722 sensor *tmp168 @unit @firstItem
   723 jump *label194 notEqual *tmp168 :depositItems:item
+  724 set *tmp173 5
   725 op equal *tmp171 :depositItems:block .core
   726 op land *tmp172 :depositItems:fromMining *tmp171
-    * jump *label196 equal *tmp172 false
+  727 jump *label197 equal *tmp172 false
   728 set *tmp173 7
   729 jump *label197 always
-    * label *label196
-    * set *tmp173 5
   730 label *label197
   731 set :moveToBlock:block :depositItems:block
   732 set :moveToBlock:radius *tmp173
 
   996 label *label281
   997 sensor :supplyBase:coal .core @coal
   998 sensor :supplyBase:sand .core @sand
-    * jump *label282 greaterThanEq :supplyBase:coal :supplyBase:sand
+  999 set *tmp260 @sand
+ 1000 jump *label283 greaterThanEq :supplyBase:coal :supplyBase:sand
  1001 set *tmp260 @coal
  1002 jump *label283 always
-    * label *label282
-    * set *tmp260 @sand
  1003 label *label283
  1004 set .status2 "Mining "
  1005 set .item2 *tmp260
 
  1058 label *label303
  1059 sensor :supplyBase:coal.1 .core @coal
  1060 sensor :supplyBase:sand.1 .core @sand
-    * jump *label304 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
+ 1061 set *tmp275 @sand
+ 1062 jump *label305 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1063 set *tmp275 @coal
  1064 jump *label305 always
-    * label *label304
-    * set *tmp275 @sand
  1065 label *label305
  1066 set .status2 "Mining "
  1067 set .item2 *tmp275
 
  1141 op add *tmp284 .metaglassTarget 30
  1142 write *tmp284 .processor ".kilnTarget"
  1143 label *label321
+ 1144 set .titaniumTrigger 100
  1145 sensor *tmp285 .core @titanium
  1146 op add *tmp286 .titaniumTarget 10
-    * jump *label322 greaterThanEq *tmp285 *tmp286
-    * set *tmp288 7
+ 1147 jump *label323 greaterThanEq *tmp285 *tmp286
+ 1148 set .titaniumTrigger 7
  1149 jump *label323 always
-    * label *label322
-    * set *tmp288 100
  1150 label *label323
-    * set .titaniumTrigger *tmp288
  1151 label *label324
  1152 sensor *tmp289 .core @copper
  1153 op lessThan *tmp290 *tmp289 .copperTarget

Modifications by Unroll iteration loop at CoreBuilder.mnd:321:5 (-2 instructions):
 
  1099 set .titaniumTarget :meetTarget:titanium
  1100 set .metaglassTarget :meetTarget:metaglass
  1101 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp276 *label314
-    * jump *label311 always
-    * multilabel *label314 (m:marker18)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp276 *label315
-    * jump *label311 always
-    * multilabel *label315 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp276 *label316
-    * jump *label311 always
-    * multilabel *label316 (m:marker18)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp276 *label317
-    * jump *label311 always
-    * multilabel *label317 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp276 *label318
-    * jump *label311 always
-    * multilabel *label318 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp276 *label319
-    * label *label311
-    * op sign *tmp277 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label312
-    * multijump *tmp276 0 0 (m:marker18)
-    * multilabel *label319 (m:marker18)
-    * label *label313
+ 1102 set :meetTarget:t :meetTarget:copper
+ 1103 label *label347
+ 1104 op sign *tmp277 :meetTarget:t
+ 1105 op add :meetTarget:count :meetTarget:count *tmp277
+ 1106 label *label348
+ 1107 set :meetTarget:t :meetTarget:lead
+ 1108 label *label351
+ 1109 op sign *tmp277 :meetTarget:t
+ 1110 op add :meetTarget:count :meetTarget:count *tmp277
+ 1111 label *label352
+ 1112 set :meetTarget:t :meetTarget:graphite
+ 1113 label *label355
+ 1114 op sign *tmp277 :meetTarget:t
+ 1115 op add :meetTarget:count :meetTarget:count *tmp277
+ 1116 label *label356
+ 1117 set :meetTarget:t :meetTarget:silicon
+ 1118 label *label359
+ 1119 op sign *tmp277 :meetTarget:t
+ 1120 op add :meetTarget:count :meetTarget:count *tmp277
+ 1121 label *label360
+ 1122 set :meetTarget:t :meetTarget:titanium
+ 1123 label *label363
+ 1124 op sign *tmp277 :meetTarget:t
+ 1125 op add :meetTarget:count :meetTarget:count *tmp277
+ 1126 label *label364
+ 1127 set :meetTarget:t :meetTarget:metaglass
+ 1128 label *label367
+ 1129 op sign *tmp277 :meetTarget:t
+ 1130 op add :meetTarget:count :meetTarget:count *tmp277
+ 1131 label *label368
+ 1132 label *label313
  1133 set .totalTargets :meetTarget:count
  1134 jump *label320 notEqual .processor null
  1135 op max .updatedGraphiteTarget 10 .graphiteTarget

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1101 set :meetTarget:count 0
  1102 set :meetTarget:t :meetTarget:copper
  1103 label *label347
-    * op sign *tmp277 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp277
+ 1104 op sign *tmp277 :meetTarget:copper
+ 1105 op add :meetTarget:count 0 *tmp277
  1106 label *label348
  1107 set :meetTarget:t :meetTarget:lead
  1108 label *label351
-    * op sign *tmp277 :meetTarget:t
+ 1109 op sign *tmp277 :meetTarget:lead
  1110 op add :meetTarget:count :meetTarget:count *tmp277
  1111 label *label352
  1112 set :meetTarget:t :meetTarget:graphite
  1113 label *label355
-    * op sign *tmp277 :meetTarget:t
+ 1114 op sign *tmp277 :meetTarget:graphite
  1115 op add :meetTarget:count :meetTarget:count *tmp277
  1116 label *label356
  1117 set :meetTarget:t :meetTarget:silicon
  1118 label *label359
-    * op sign *tmp277 :meetTarget:t
+ 1119 op sign *tmp277 :meetTarget:silicon
  1120 op add :meetTarget:count :meetTarget:count *tmp277
  1121 label *label360
  1122 set :meetTarget:t :meetTarget:titanium
  1123 label *label363
-    * op sign *tmp277 :meetTarget:t
+ 1124 op sign *tmp277 :meetTarget:titanium
  1125 op add :meetTarget:count :meetTarget:count *tmp277
  1126 label *label364
  1127 set :meetTarget:t :meetTarget:metaglass
  1128 label *label367
-    * op sign *tmp277 :meetTarget:t
+ 1129 op sign *tmp277 :meetTarget:metaglass
  1130 op add :meetTarget:count :meetTarget:count *tmp277
  1131 label *label368
  1132 label *label313

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1098 set .siliconTarget :meetTarget:silicon
  1099 set .titaniumTarget :meetTarget:titanium
  1100 set .metaglassTarget :meetTarget:metaglass
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1101 label *label347
  1102 op sign *tmp277 :meetTarget:copper
  1103 op add :meetTarget:count 0 *tmp277
  1104 label *label348
-    * set :meetTarget:t :meetTarget:lead
  1105 label *label351
  1106 op sign *tmp277 :meetTarget:lead
  1107 op add :meetTarget:count :meetTarget:count *tmp277
  1108 label *label352
-    * set :meetTarget:t :meetTarget:graphite
  1109 label *label355
  1110 op sign *tmp277 :meetTarget:graphite
  1111 op add :meetTarget:count :meetTarget:count *tmp277
  1112 label *label356
-    * set :meetTarget:t :meetTarget:silicon
  1113 label *label359
  1114 op sign *tmp277 :meetTarget:silicon
  1115 op add :meetTarget:count :meetTarget:count *tmp277
  1116 label *label360
-    * set :meetTarget:t :meetTarget:titanium
  1117 label *label363
  1118 op sign *tmp277 :meetTarget:titanium
  1119 op add :meetTarget:count :meetTarget:count *tmp277
  1120 label *label364
-    * set :meetTarget:t :meetTarget:metaglass
  1121 label *label367
  1122 op sign *tmp277 :meetTarget:metaglass
  1123 op add :meetTarget:count :meetTarget:count *tmp277

Modifications by Replicate loop condition at CoreBuilder.mnd:124:5 (+1 instructions):
 
   666 label *label178
   667 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
   668 jump *label180 notEqual *tmp156 false
+  669 label *label372
   670 ucontrol approach :moveTo:x :moveTo:y *tmp158
   671 label *label179
-    * jump *label178 always
+  672 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
+  673 jump *label372 equal *tmp156 false
   674 label *label180
   675 label *label176
   676 return :moveTo*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:142:5 (+1 instructions):
 
   699 label *label187
   700 sensor *tmp164 @unit @firstItem
   701 jump *label189 equal *tmp164 null
+  702 label *label373
   703 ucontrol itemDrop @air 1000
   704 label *label188
-    * jump *label187 always
+  705 sensor *tmp164 @unit @firstItem
+  706 jump *label373 notEqual *tmp164 null
   707 label *label189
   708 label *label183
   709 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:166:9 (+1 instructions):
 
   754 label *label204
   755 sensor *tmp180 @unit @firstItem
   756 jump *label206 equal *tmp180 null
+  757 label *label374
   758 ucontrol itemDrop @air 1000
   759 label *label205
-    * jump *label204 always
+  760 sensor *tmp180 @unit @firstItem
+  761 jump *label374 notEqual *tmp180 null
   762 label *label206
   763 label *label195
   764 set .transportTarget 0

Modifications by Replicate loop condition at CoreBuilder.mnd:334:5 (+21 instructions):
 
  1172 op lessThan *tmp308 *tmp307 .metaglassTarget
  1173 op or *tmp310 *tmp305 *tmp308
  1174 jump *label326 equal *tmp310 false
+ 1175 label *label375
  1176 setaddr :supplyBase*retaddr *label327 (h:*label327)
  1177 call *label9 *invalid :supplyBase*retval (m:*label327) (h:*label327)
  1178 label *label327
  1179 label *label325
-    * jump *label324 always
+ 1180 sensor *tmp289 .core @copper
+ 1181 op lessThan *tmp290 *tmp289 .copperTarget
+ 1182 sensor *tmp291 .core @lead
+ 1183 op lessThan *tmp292 *tmp291 .leadTarget
+ 1184 op or *tmp294 *tmp290 *tmp292
+ 1185 op notEqual *tmp293 *tmp294 false
+ 1186 sensor *tmp295 .core @graphite
+ 1187 op lessThan *tmp296 *tmp295 .graphiteTarget
+ 1188 op or *tmp298 *tmp293 *tmp296
+ 1189 op notEqual *tmp297 *tmp298 false
+ 1190 sensor *tmp299 .core @silicon
+ 1191 op lessThan *tmp300 *tmp299 .siliconTarget
+ 1192 op or *tmp302 *tmp297 *tmp300
+ 1193 op notEqual *tmp301 *tmp302 false
+ 1194 sensor *tmp303 .core @titanium
+ 1195 op lessThan *tmp304 *tmp303 .titaniumTarget
+ 1196 op or *tmp306 *tmp301 *tmp304
+ 1197 op notEqual *tmp305 *tmp306 false
+ 1198 sensor *tmp307 .core @metaglass
+ 1199 op lessThan *tmp308 *tmp307 .metaglassTarget
+ 1200 op or *tmp310 *tmp305 *tmp308
+ 1201 jump *label375 notEqual *tmp310 false
  1202 label *label326
  1203 label *label310
  1204 return :meetTarget*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   730 op land *tmp172 :depositItems:fromMining *tmp171
   731 jump *label197 equal *tmp172 false
   732 set *tmp173 7
-    * jump *label197 always
   733 label *label197
   734 set :moveToBlock:block :depositItems:block
   735 set :moveToBlock:radius *tmp173
 
  1004 set *tmp260 @sand
  1005 jump *label283 greaterThanEq :supplyBase:coal :supplyBase:sand
  1006 set *tmp260 @coal
-    * jump *label283 always
  1007 label *label283
  1008 set .status2 "Mining "
  1009 set .item2 *tmp260
 
  1065 set *tmp275 @sand
  1066 jump *label305 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1067 set *tmp275 @coal
-    * jump *label305 always
  1068 label *label305
  1069 set .status2 "Mining "
  1070 set .item2 *tmp275
 
  1144 op add *tmp286 .titaniumTarget 10
  1145 jump *label323 greaterThanEq *tmp285 *tmp286
  1146 set .titaniumTrigger 7
-    * jump *label323 always
  1147 label *label323
  1148 label *label324
  1149 sensor *tmp289 .core @copper
 
  1243 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1244 label *label340
  1245 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label328 always
  1246 label *label328
  1247 return :buildBlockAt*retaddr
  1248 end
 
  1267 call *label11 *invalid :buildBlockAt*retval (m:*label345) (h:*label345)
  1268 label *label345
  1269 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label343 always
  1270 label *label343
  1271 return :buildBlock*retaddr
  1272 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label29 (h:*label29)
    67 label *label25
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   68 set :buildBlockFromCfg.1:x .coreX
    69 op add :buildBlockFromCfg.1:y .coreY 4
    70 set :buildBlock:x :buildBlockFromCfg.1:x
    71 set :buildBlock:y :buildBlockFromCfg.1:y
 
    90 set :buildBlock:config null
    91 setaddr :buildBlock*retaddr *label35 (h:*label35)
    92 label *label31
-    * op add :buildBlockFromCfg.2:x .coreX 0
+   93 set :buildBlockFromCfg.2:x .coreX
    94 op add :buildBlockFromCfg.2:y .coreY 3
    95 set :buildBlock:x :buildBlockFromCfg.2:x
    96 set :buildBlock:y :buildBlockFromCfg.2:y
 
   245 set :checkOre:count 0
   246 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   247 jump *label75 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  248 set :checkOre:count 1
   249 label *label75
   250 label *label76
   251 label *label74
 
   351 set :buildBlock:config null
   352 setaddr :buildBlock*retaddr *label104 (h:*label104)
   353 label *label100
-    * op add :buildBlockFromCfg.5:x .coreX 0
+  354 set :buildBlockFromCfg.5:x .coreX
   355 op add :buildBlockFromCfg.5:y .coreY 2
   356 set :buildBlock:x :buildBlockFromCfg.5:x
   357 set :buildBlock:y :buildBlockFromCfg.5:y
 
   504 setaddr :buildBlock*retaddr *label140 (h:*label140)
   505 label *label136
   506 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  507 set :buildBlockFromCfg.11:y .coreY
   508 set :buildBlock:x :buildBlockFromCfg.11:x
   509 set :buildBlock:y :buildBlockFromCfg.11:y
   510 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
 
  1103 set .metaglassTarget :meetTarget:metaglass
  1104 label *label347
  1105 op sign *tmp277 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp277
+ 1106 set :meetTarget:count *tmp277
  1107 label *label348
  1108 label *label351
  1109 op sign *tmp277 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-35 instructions):
 
    40 set :buildBlock:config null
    41 setaddr :buildBlock*retaddr *label23 (h:*label23)
    42 label *label19
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
+   43 op add :buildBlock:x .coreX -1.5
+   44 op add :buildBlock:y .coreY 2.5
    45 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    46 label *label23
    47 set *tmp16 :buildBlock*retval
 
    63 set :buildBlock:config null
    64 setaddr :buildBlock*retaddr *label29 (h:*label29)
    65 label *label25
-    * set :buildBlockFromCfg.1:x .coreX
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
+   66 set :buildBlock:x .coreX
+   67 op add :buildBlock:y .coreY 4
    68 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    69 label *label29
    70 set *tmp20 :buildBlock*retval
 
    86 set :buildBlock:config null
    87 setaddr :buildBlock*retaddr *label35 (h:*label35)
    88 label *label31
-    * set :buildBlockFromCfg.2:x .coreX
-    * op add :buildBlockFromCfg.2:y .coreY 3
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
+   89 set :buildBlock:x .coreX
+   90 op add :buildBlock:y .coreY 3
    91 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    92 label *label35
    93 set *tmp24 :buildBlock*retval
 
   109 set :buildBlock:config null
   110 setaddr :buildBlock*retaddr *label41 (h:*label41)
   111 label *label37
-    * op add :buildBlockFromCfg.3:x .coreX -1
-    * op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.3:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
+  112 op add :buildBlock:x .coreX -1
+  113 op add :buildBlock:y .coreY 4
   114 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   115 label *label41
   116 jump *label36 always
 
   130 set :buildBlock:config null
   131 setaddr :buildBlock*retaddr *label47 (h:*label47)
   132 label *label43
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  133 op add :buildBlock:x .coreX 1.5
+  134 op add :buildBlock:y .coreY 2.5
   135 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   136 label *label47
   137 set *tmp32 :buildBlock*retval
 
   341 set :buildBlock:config null
   342 setaddr :buildBlock*retaddr *label104 (h:*label104)
   343 label *label100
-    * set :buildBlockFromCfg.5:x .coreX
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:x :buildBlockFromCfg.5:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
+  344 set :buildBlock:x .coreX
+  345 op add :buildBlock:y .coreY 2
   346 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   347 label *label104
   348 set *tmp106 :buildBlock*retval
 
   364 set :buildBlock:config null
   365 setaddr :buildBlock*retaddr *label110 (h:*label110)
   366 label *label106
-    * op add :buildBlockFromCfg.6:x .coreX -2
-    * op add :buildBlockFromCfg.6:y .coreY -1
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  367 op add :buildBlock:x .coreX -2
+  368 op add :buildBlock:y .coreY -1
   369 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   370 label *label110
   371 jump *label105 always
 
   384 set :buildBlock:rotation 0
   385 setaddr :buildBlock*retaddr *label116 (h:*label116)
   386 label *label112
-    * op add :buildBlockFromCfg.7:x .coreX 1
-    * op add :buildBlockFromCfg.7:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
+  387 op add :buildBlock:x .coreX 1
+  388 op add :buildBlock:y .coreY 4
   389 set :buildBlock:config processor1
   390 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   391 label *label116
 
   413 set :buildBlock:config @mono
   414 setaddr :buildBlock*retaddr *label122 (h:*label122)
   415 label *label118
-    * op add :buildBlockFromCfg.8:x .coreX -4
-    * op add :buildBlockFromCfg.8:y .coreY -1
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  416 op add :buildBlock:x .coreX -4
+  417 op add :buildBlock:y .coreY -1
   418 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   419 label *label122
   420 set *tmp119 :buildBlock*retval
 
   436 set :buildBlock:config null
   437 setaddr :buildBlock*retaddr *label128 (h:*label128)
   438 label *label124
-    * op add :buildBlockFromCfg.9:x .coreX -2
-    * op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  439 op add :buildBlock:x .coreX -2
+  440 op add :buildBlock:y .coreY 1
   441 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   442 label *label128
   443 set *tmp123 :buildBlock*retval
 
   459 set :buildBlock:config null
   460 setaddr :buildBlock*retaddr *label134 (h:*label134)
   461 label *label130
-    * op add :buildBlockFromCfg.10:x .coreX -3
-    * op add :buildBlockFromCfg.10:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  462 op add :buildBlock:x .coreX -3
+  463 op add :buildBlock:y .coreY 1
   464 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   465 label *label134
   466 jump *label129 always
 
   481 set :buildBlock:config null
   482 setaddr :buildBlock*retaddr *label140 (h:*label140)
   483 label *label136
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  484 op add :buildBlock:x .coreX 2
+  485 set :buildBlock:y .coreY
   486 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   487 label *label140
   488 jump *label135 always
 
   502 set :buildBlock:config null
   503 setaddr :buildBlock*retaddr *label146 (h:*label146)
   504 label *label142
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
+  505 op add :buildBlock:x .coreX 3.5
+  506 op add :buildBlock:y .coreY 0.5
   507 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   508 label *label146
   509 jump *label141 always
 
   524 set :buildBlock:config null
   525 setaddr :buildBlock*retaddr *label152 (h:*label152)
   526 label *label148
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  527 op add :buildBlock:x .coreX 2
+  528 op add :buildBlock:y .coreY 1
   529 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   530 label *label152
   531 jump *label147 always
 
   545 set :buildBlock:config null
   546 setaddr :buildBlock*retaddr *label158 (h:*label158)
   547 label *label154
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
+  548 op add :buildBlock:x .coreX -3.5
+  549 op add :buildBlock:y .coreY 4.5
   550 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   551 label *label158
   552 jump *label153 always
 
   566 set :buildBlock:config null
   567 setaddr :buildBlock*retaddr *label164 (h:*label164)
   568 label *label160
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  569 op add :buildBlock:x .coreX -3.5
+  570 op add :buildBlock:y .coreY 2.5
   571 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   572 label *label164
   573 set *tmp147 :buildBlock*retval
 
   589 set :buildBlock:config @coal
   590 setaddr :buildBlock*retaddr *label170 (h:*label170)
   591 label *label166
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  592 op add :buildBlock:x .coreX -4
+  593 op add :buildBlock:y .coreY 1
   594 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   595 label *label170
   596 jump *label165 always
 
  1068 set .titaniumTarget :meetTarget:titanium
  1069 set .metaglassTarget :meetTarget:metaglass
  1070 label *label347
-    * op sign *tmp277 :meetTarget:copper
-    * set :meetTarget:count *tmp277
+ 1071 op sign :meetTarget:count :meetTarget:copper
  1072 label *label348
  1073 label *label351
  1074 op sign *tmp277 :meetTarget:lead

Modifications by Unroll iteration loop at CoreBuilder.mnd:435:13 (+64 instructions):
 
   213 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   214 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   215 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp54 *label70
-    * jump *label67 always
-    * multilabel *label70 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp54 *label71
-    * jump *label67 always
-    * multilabel *label71 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp54 *label72
-    * jump *label67 always
-    * multilabel *label72 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp54 *label73
-    * label *label67
-    * set :checkOre:count 0
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
-    * jump *label75 notEqual :checkOre:floor @ore-titanium
-    * set :checkOre:count 1
-    * label *label75
-    * label *label76
-    * label *label74
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
-    * jump *label78 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label78
-    * label *label79
-    * label *label77
-    * op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
-    * jump *label81 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label81
-    * label *label82
-    * label *label80
-    * set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
-    * jump *label84 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :checkOre.2:count 1
-    * label *label84
-    * label *label85
-    * label *label83
-    * jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label88 lessThan :checkOre.3:count 4
-    * jump *label66 always
-    * label *label88
-    * label *label89
-    * label *label86
-    * label *label87
-    * label *label68
-    * multijump *tmp54 0 0 (m:marker5)
-    * multilabel *label73 (m:marker5)
-    * label *label69
+  216 set :buildTitaniumDrillCfg:xx 1
+  217 set :buildTitaniumDrillCfg:yy 1
+  218 label *label376
+  219 set :checkOre:count 0
+  220 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  221 jump *label377 notEqual :checkOre:floor @ore-titanium
+  222 set :checkOre:count 1
+  223 label *label377
+  224 label *label378
+  225 label *label379
+  226 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  227 set :checkOre.1:count :checkOre:count
+  228 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  229 jump *label380 notEqual :checkOre.1:floor @ore-titanium
+  230 op add :checkOre.1:count :checkOre:count 1
+  231 label *label380
+  232 label *label381
+  233 label *label382
+  234 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  235 set :checkOre.2:count :checkOre.1:count
+  236 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
+  237 jump *label383 notEqual :checkOre.2:floor @ore-titanium
+  238 op add :checkOre.2:count :checkOre.1:count 1
+  239 label *label383
+  240 label *label384
+  241 label *label385
+  242 set :checkOre.3:count :checkOre.2:count
+  243 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
+  244 jump *label386 notEqual :checkOre.3:floor @ore-titanium
+  245 op add :checkOre.3:count :checkOre.2:count 1
+  246 label *label386
+  247 label *label387
+  248 label *label388
+  249 jump *label391 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  250 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  251 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  252 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  253 jump *label389 lessThan :checkOre.3:count 4
+  254 jump *label66 always
+  255 label *label389
+  256 label *label390
+  257 label *label391
+  258 label *label392
+  259 label *label393
+  260 set :buildTitaniumDrillCfg:xx 1
+  261 set :buildTitaniumDrillCfg:yy -1
+  262 label *label396
+  263 set :checkOre:count 0
+  264 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  265 jump *label397 notEqual :checkOre:floor @ore-titanium
+  266 set :checkOre:count 1
+  267 label *label397
+  268 label *label398
+  269 label *label399
+  270 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  271 set :checkOre.1:count :checkOre:count
+  272 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  273 jump *label400 notEqual :checkOre.1:floor @ore-titanium
+  274 op add :checkOre.1:count :checkOre:count 1
+  275 label *label400
+  276 label *label401
+  277 label *label402
+  278 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  279 set :checkOre.2:count :checkOre.1:count
+  280 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
+  281 jump *label403 notEqual :checkOre.2:floor @ore-titanium
+  282 op add :checkOre.2:count :checkOre.1:count 1
+  283 label *label403
+  284 label *label404
+  285 label *label405
+  286 set :checkOre.3:count :checkOre.2:count
+  287 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
+  288 jump *label406 notEqual :checkOre.3:floor @ore-titanium
+  289 op add :checkOre.3:count :checkOre.2:count 1
+  290 label *label406
+  291 label *label407
+  292 label *label408
+  293 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  294 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  295 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  296 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  297 jump *label409 lessThan :checkOre.3:count 4
+  298 jump *label66 always
+  299 label *label409
+  300 label *label410
+  301 label *label411
+  302 label *label412
+  303 label *label413
+  304 set :buildTitaniumDrillCfg:xx -1
+  305 set :buildTitaniumDrillCfg:yy 1
+  306 label *label416
+  307 set :checkOre:count 0
+  308 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  309 jump *label417 notEqual :checkOre:floor @ore-titanium
+  310 set :checkOre:count 1
+  311 label *label417
+  312 label *label418
+  313 label *label419
+  314 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  315 set :checkOre.1:count :checkOre:count
+  316 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  317 jump *label420 notEqual :checkOre.1:floor @ore-titanium
+  318 op add :checkOre.1:count :checkOre:count 1
+  319 label *label420
+  320 label *label421
+  321 label *label422
+  322 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  323 set :checkOre.2:count :checkOre.1:count
+  324 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
+  325 jump *label423 notEqual :checkOre.2:floor @ore-titanium
+  326 op add :checkOre.2:count :checkOre.1:count 1
+  327 label *label423
+  328 label *label424
+  329 label *label425
+  330 set :checkOre.3:count :checkOre.2:count
+  331 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
+  332 jump *label426 notEqual :checkOre.3:floor @ore-titanium
+  333 op add :checkOre.3:count :checkOre.2:count 1
+  334 label *label426
+  335 label *label427
+  336 label *label428
+  337 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  338 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  339 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  340 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  341 jump *label429 lessThan :checkOre.3:count 4
+  342 jump *label66 always
+  343 label *label429
+  344 label *label430
+  345 label *label431
+  346 label *label432
+  347 label *label433
+  348 set :buildTitaniumDrillCfg:xx -1
+  349 set :buildTitaniumDrillCfg:yy -1
+  350 label *label436
+  351 set :checkOre:count 0
+  352 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  353 jump *label437 notEqual :checkOre:floor @ore-titanium
+  354 set :checkOre:count 1
+  355 label *label437
+  356 label *label438
+  357 label *label439
+  358 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  359 set :checkOre.1:count :checkOre:count
+  360 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  361 jump *label440 notEqual :checkOre.1:floor @ore-titanium
+  362 op add :checkOre.1:count :checkOre:count 1
+  363 label *label440
+  364 label *label441
+  365 label *label442
+  366 op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  367 set :checkOre.2:count :checkOre.1:count
+  368 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
+  369 jump *label443 notEqual :checkOre.2:floor @ore-titanium
+  370 op add :checkOre.2:count :checkOre.1:count 1
+  371 label *label443
+  372 label *label444
+  373 label *label445
+  374 set :checkOre.3:count :checkOre.2:count
+  375 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
+  376 jump *label446 notEqual :checkOre.3:floor @ore-titanium
+  377 op add :checkOre.3:count :checkOre.2:count 1
+  378 label *label446
+  379 label *label447
+  380 label *label448
+  381 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  382 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  383 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  384 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  385 jump *label449 lessThan :checkOre.3:count 4
+  386 jump *label66 always
+  387 label *label449
+  388 label *label450
+  389 label *label451
+  390 label *label452
+  391 label *label453
+  392 label *label69
   393 label *label65
   394 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   395 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   223 label *label377
   224 label *label378
   225 label *label379
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  226 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   227 set :checkOre.1:count :checkOre:count
   228 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   229 jump *label380 notEqual :checkOre.1:floor @ore-titanium
 
   231 label *label380
   232 label *label381
   233 label *label382
-    * op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  234 op add *tmp68 :buildTitaniumDrillCfg:ay 1
   235 set :checkOre.2:count :checkOre.1:count
   236 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   237 jump *label383 notEqual :checkOre.2:floor @ore-titanium
 
   246 label *label386
   247 label *label387
   248 label *label388
-    * jump *label391 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  249 jump *label391 lessThanEq :checkOre.3:count 0
+  250 set :buildTitaniumDrillCfg:dx 1
+  251 set :buildTitaniumDrillCfg:dy 1
   252 set :buildTitaniumDrillCfg:best :checkOre.3:count
   253 jump *label389 lessThan :checkOre.3:count 4
   254 jump *label66 always
 
   267 label *label397
   268 label *label398
   269 label *label399
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  270 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   271 set :checkOre.1:count :checkOre:count
   272 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   273 jump *label400 notEqual :checkOre.1:floor @ore-titanium
 
   275 label *label400
   276 label *label401
   277 label *label402
-    * op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  278 op add *tmp68 :buildTitaniumDrillCfg:ay -1
   279 set :checkOre.2:count :checkOre.1:count
   280 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   281 jump *label403 notEqual :checkOre.2:floor @ore-titanium
 
   291 label *label407
   292 label *label408
   293 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  294 set :buildTitaniumDrillCfg:dx 1
+  295 set :buildTitaniumDrillCfg:dy -1
   296 set :buildTitaniumDrillCfg:best :checkOre.3:count
   297 jump *label409 lessThan :checkOre.3:count 4
   298 jump *label66 always
 
   311 label *label417
   312 label *label418
   313 label *label419
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  314 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   315 set :checkOre.1:count :checkOre:count
   316 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   317 jump *label420 notEqual :checkOre.1:floor @ore-titanium
 
   319 label *label420
   320 label *label421
   321 label *label422
-    * op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  322 op add *tmp68 :buildTitaniumDrillCfg:ay 1
   323 set :checkOre.2:count :checkOre.1:count
   324 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   325 jump *label423 notEqual :checkOre.2:floor @ore-titanium
 
   335 label *label427
   336 label *label428
   337 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  338 set :buildTitaniumDrillCfg:dx -1
+  339 set :buildTitaniumDrillCfg:dy 1
   340 set :buildTitaniumDrillCfg:best :checkOre.3:count
   341 jump *label429 lessThan :checkOre.3:count 4
   342 jump *label66 always
 
   355 label *label437
   356 label *label438
   357 label *label439
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  358 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   359 set :checkOre.1:count :checkOre:count
   360 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   361 jump *label440 notEqual :checkOre.1:floor @ore-titanium
 
   363 label *label440
   364 label *label441
   365 label *label442
-    * op add *tmp68 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  366 op add *tmp68 :buildTitaniumDrillCfg:ay -1
   367 set :checkOre.2:count :checkOre.1:count
   368 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   369 jump *label443 notEqual :checkOre.2:floor @ore-titanium
 
   379 label *label447
   380 label *label448
   381 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  382 set :buildTitaniumDrillCfg:dx -1
+  383 set :buildTitaniumDrillCfg:dy -1
   384 set :buildTitaniumDrillCfg:best :checkOre.3:count
   385 jump *label449 lessThan :checkOre.3:count 4
   386 jump *label66 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
   213 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   214 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   215 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   216 label *label376
   217 set :checkOre:count 0
   218 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   255 label *label391
   256 label *label392
   257 label *label393
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   258 label *label396
   259 set :checkOre:count 0
   260 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   297 label *label411
   298 label *label412
   299 label *label413
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   300 label *label416
   301 set :checkOre:count 0
   302 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   339 label *label431
   340 label *label432
   341 label *label433
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   342 label *label436
   343 set :checkOre:count 0
   344 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    26 label *label15
    27 ubind @poly
    28 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label16
    29 jump *label15 equal .core null
-    * label *label17
    30 set :buildBlock:block @graphite-press
    31 set :buildBlock:copper 75
    32 set :buildBlock:lead 30
 
    37 set :buildBlock:rotation 0
    38 set :buildBlock:config null
    39 setaddr :buildBlock*retaddr *label23 (h:*label23)
-    * label *label19
    40 op add :buildBlock:x .coreX -1.5
    41 op add :buildBlock:y .coreY 2.5
    42 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    43 label *label23
    44 set *tmp16 :buildBlock*retval
    45 jump *label18 always
-    * label *label20
    46 multijump *tmp17 0 0 (m:marker0)
    47 multilabel *label22 (m:marker0)
-    * label *label21
    48 label *label18
    49 set .press *tmp16
    50 set :buildBlock:block @battery
 
    57 set :buildBlock:rotation 0
    58 set :buildBlock:config null
    59 setaddr :buildBlock*retaddr *label29 (h:*label29)
-    * label *label25
    60 set :buildBlock:x .coreX
    61 op add :buildBlock:y .coreY 4
    62 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    63 label *label29
    64 set *tmp20 :buildBlock*retval
    65 jump *label24 always
-    * label *label26
    66 multijump *tmp21 0 0 (m:marker1)
    67 multilabel *label28 (m:marker1)
-    * label *label27
    68 label *label24
    69 set .battery *tmp20
    70 set :buildBlock:block @combustion-generator
 
    77 set :buildBlock:rotation 0
    78 set :buildBlock:config null
    79 setaddr :buildBlock*retaddr *label35 (h:*label35)
-    * label *label31
    80 set :buildBlock:x .coreX
    81 op add :buildBlock:y .coreY 3
    82 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    83 label *label35
    84 set *tmp24 :buildBlock*retval
    85 jump *label30 always
-    * label *label32
    86 multijump *tmp25 0 0 (m:marker2)
    87 multilabel *label34 (m:marker2)
-    * label *label33
    88 label *label30
    89 set .generator *tmp24
    90 set :buildBlock:block @battery
 
    97 set :buildBlock:rotation 0
    98 set :buildBlock:config null
    99 setaddr :buildBlock*retaddr *label41 (h:*label41)
-    * label *label37
   100 op add :buildBlock:x .coreX -1
   101 op add :buildBlock:y .coreY 4
   102 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   103 label *label41
   104 jump *label36 always
-    * label *label38
   105 multijump *tmp29 0 0 (m:marker3)
   106 multilabel *label40 (m:marker3)
-    * label *label39
   107 label *label36
   108 set :buildBlock:block @silicon-smelter
   109 set :buildBlock:copper 30
 
   115 set :buildBlock:rotation 0
   116 set :buildBlock:config null
   117 setaddr :buildBlock*retaddr *label47 (h:*label47)
-    * label *label43
   118 op add :buildBlock:x .coreX 1.5
   119 op add :buildBlock:y .coreY 2.5
   120 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   121 label *label47
   122 set *tmp32 :buildBlock*retval
   123 jump *label42 always
-    * label *label44
   124 multijump *tmp33 0 0 (m:marker4)
   125 multilabel *label46 (m:marker4)
-    * label *label45
   126 label *label42
   127 set .smelter *tmp32
   128 set :buildTitaniumDrillCfg:distance 32
 
   159 jump *label59 equal *tmp45 false
   160 jump *label57 always
   161 label *label59
-    * label *label60
   162 op sin *tmp48 :locateOreAway:angle
   163 op mul *tmp49 *tmp48 :locateOreAway:distance
   164 op add *tmp50 .coreX *tmp49
 
   172 label *label62
   173 op add :locateOreAway:distance :locateOreAway:distance 4
   174 op add :locateOreAway:angle :locateOreAway:angle 45
-    * label *label61
-    * label *label56
   175 jump *label55 always
   176 label *label57
-    * label *label54
   177 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   178 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   179 set :moveTo.1:x :locateOreAway:x
 
   187 set :buildTitaniumDrillCfg:dx 0
   188 set :buildTitaniumDrillCfg:dy 0
   189 set :buildTitaniumDrillCfg:searches 0
-    * label *label64
   190 label *label346
   191 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   192 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   193 set :buildTitaniumDrillCfg:best 0
-    * label *label376
   194 set :checkOre:count 0
   195 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   196 jump *label377 notEqual :checkOre:floor @ore-titanium
   197 set :checkOre:count 1
   198 label *label377
-    * label *label378
-    * label *label379
   199 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   200 set :checkOre.1:count :checkOre:count
   201 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   202 jump *label380 notEqual :checkOre.1:floor @ore-titanium
   203 op add :checkOre.1:count :checkOre:count 1
   204 label *label380
-    * label *label381
-    * label *label382
   205 op add *tmp68 :buildTitaniumDrillCfg:ay 1
   206 set :checkOre.2:count :checkOre.1:count
   207 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   208 jump *label383 notEqual :checkOre.2:floor @ore-titanium
   209 op add :checkOre.2:count :checkOre.1:count 1
   210 label *label383
-    * label *label384
-    * label *label385
   211 set :checkOre.3:count :checkOre.2:count
   212 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   213 jump *label386 notEqual :checkOre.3:floor @ore-titanium
   214 op add :checkOre.3:count :checkOre.2:count 1
   215 label *label386
-    * label *label387
-    * label *label388
   216 jump *label391 lessThanEq :checkOre.3:count 0
   217 set :buildTitaniumDrillCfg:dx 1
   218 set :buildTitaniumDrillCfg:dy 1
 
   220 jump *label389 lessThan :checkOre.3:count 4
   221 jump *label66 always
   222 label *label389
-    * label *label390
   223 label *label391
-    * label *label392
-    * label *label393
-    * label *label396
   224 set :checkOre:count 0
   225 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   226 jump *label397 notEqual :checkOre:floor @ore-titanium
   227 set :checkOre:count 1
   228 label *label397
-    * label *label398
-    * label *label399
   229 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   230 set :checkOre.1:count :checkOre:count
   231 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   232 jump *label400 notEqual :checkOre.1:floor @ore-titanium
   233 op add :checkOre.1:count :checkOre:count 1
   234 label *label400
-    * label *label401
-    * label *label402
   235 op add *tmp68 :buildTitaniumDrillCfg:ay -1
   236 set :checkOre.2:count :checkOre.1:count
   237 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   238 jump *label403 notEqual :checkOre.2:floor @ore-titanium
   239 op add :checkOre.2:count :checkOre.1:count 1
   240 label *label403
-    * label *label404
-    * label *label405
   241 set :checkOre.3:count :checkOre.2:count
   242 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   243 jump *label406 notEqual :checkOre.3:floor @ore-titanium
   244 op add :checkOre.3:count :checkOre.2:count 1
   245 label *label406
-    * label *label407
-    * label *label408
   246 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   247 set :buildTitaniumDrillCfg:dx 1
   248 set :buildTitaniumDrillCfg:dy -1
 
   250 jump *label409 lessThan :checkOre.3:count 4
   251 jump *label66 always
   252 label *label409
-    * label *label410
   253 label *label411
-    * label *label412
-    * label *label413
-    * label *label416
   254 set :checkOre:count 0
   255 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   256 jump *label417 notEqual :checkOre:floor @ore-titanium
   257 set :checkOre:count 1
   258 label *label417
-    * label *label418
-    * label *label419
   259 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   260 set :checkOre.1:count :checkOre:count
   261 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   262 jump *label420 notEqual :checkOre.1:floor @ore-titanium
   263 op add :checkOre.1:count :checkOre:count 1
   264 label *label420
-    * label *label421
-    * label *label422
   265 op add *tmp68 :buildTitaniumDrillCfg:ay 1
   266 set :checkOre.2:count :checkOre.1:count
   267 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   268 jump *label423 notEqual :checkOre.2:floor @ore-titanium
   269 op add :checkOre.2:count :checkOre.1:count 1
   270 label *label423
-    * label *label424
-    * label *label425
   271 set :checkOre.3:count :checkOre.2:count
   272 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   273 jump *label426 notEqual :checkOre.3:floor @ore-titanium
   274 op add :checkOre.3:count :checkOre.2:count 1
   275 label *label426
-    * label *label427
-    * label *label428
   276 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   277 set :buildTitaniumDrillCfg:dx -1
   278 set :buildTitaniumDrillCfg:dy 1
 
   280 jump *label429 lessThan :checkOre.3:count 4
   281 jump *label66 always
   282 label *label429
-    * label *label430
   283 label *label431
-    * label *label432
-    * label *label433
-    * label *label436
   284 set :checkOre:count 0
   285 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   286 jump *label437 notEqual :checkOre:floor @ore-titanium
   287 set :checkOre:count 1
   288 label *label437
-    * label *label438
-    * label *label439
   289 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   290 set :checkOre.1:count :checkOre:count
   291 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   292 jump *label440 notEqual :checkOre.1:floor @ore-titanium
   293 op add :checkOre.1:count :checkOre:count 1
   294 label *label440
-    * label *label441
-    * label *label442
   295 op add *tmp68 :buildTitaniumDrillCfg:ay -1
   296 set :checkOre.2:count :checkOre.1:count
   297 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :checkOre.2:floor
   298 jump *label443 notEqual :checkOre.2:floor @ore-titanium
   299 op add :checkOre.2:count :checkOre.1:count 1
   300 label *label443
-    * label *label444
-    * label *label445
   301 set :checkOre.3:count :checkOre.2:count
   302 ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor
   303 jump *label446 notEqual :checkOre.3:floor @ore-titanium
   304 op add :checkOre.3:count :checkOre.2:count 1
   305 label *label446
-    * label *label447
-    * label *label448
   306 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   307 set :buildTitaniumDrillCfg:dx -1
   308 set :buildTitaniumDrillCfg:dy -1
 
   310 jump *label449 lessThan :checkOre.3:count 4
   311 jump *label66 always
   312 label *label449
-    * label *label450
   313 label *label451
-    * label *label452
-    * label *label453
-    * label *label69
-    * label *label65
   314 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   315 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
   316 label *label66
 
   332 set *tmp37 :buildBlockAt*retval
   333 jump *label49 always
   334 label *label93
-    * label *label94
   335 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   336 label *label90
-    * label *label91
   337 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   338 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
   339 op sin *tmp98 :locateOreAway:angle
 
   349 label *label98
   350 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
   351 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
-    * label *label97
   352 set :buildTitaniumDrillCfg:attempts 0
   353 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
   354 op max :buildTitaniumDrillCfg:minimum *tmp104 1
   355 label *label95
-    * label *label96
-    * label *label51
   356 jump *label50 always
-    * label *label52
   357 set *tmp37 null
   358 label *label49
-    * label *label48
   359 set .titanium_drill *tmp37
   360 set :buildBlock:block @unloader
   361 set :buildBlock:copper 0
 
   367 set :buildBlock:rotation 0
   368 set :buildBlock:config null
   369 setaddr :buildBlock*retaddr *label104 (h:*label104)
-    * label *label100
   370 set :buildBlock:x .coreX
   371 op add :buildBlock:y .coreY 2
   372 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   373 label *label104
   374 set *tmp106 :buildBlock*retval
   375 jump *label99 always
-    * label *label101
   376 multijump *tmp107 0 0 (m:marker6)
   377 multilabel *label103 (m:marker6)
-    * label *label102
   378 label *label99
   379 set .unloader1 *tmp106
   380 set :buildBlock:block @power-node
 
   387 set :buildBlock:rotation 0
   388 set :buildBlock:config null
   389 setaddr :buildBlock*retaddr *label110 (h:*label110)
-    * label *label106
   390 op add :buildBlock:x .coreX -2
   391 op add :buildBlock:y .coreY -1
   392 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   393 label *label110
   394 jump *label105 always
-    * label *label107
   395 multijump *tmp111 0 0 (m:marker7)
   396 multilabel *label109 (m:marker7)
-    * label *label108
   397 label *label105
   398 set :buildBlock:block @micro-processor
   399 set :buildBlock:copper 90
 
   404 set :buildBlock:metaglass 0
   405 set :buildBlock:rotation 0
   406 setaddr :buildBlock*retaddr *label116 (h:*label116)
-    * label *label112
   407 op add :buildBlock:x .coreX 1
   408 op add :buildBlock:y .coreY 4
   409 set :buildBlock:config processor1
 
   411 label *label116
   412 set *tmp114 :buildBlock*retval
   413 jump *label111 always
-    * label *label113
   414 multijump *tmp115 0 0 (m:marker8)
   415 multilabel *label115 (m:marker8)
-    * label *label114
   416 label *label111
   417 set .processor *tmp114
   418 write .core *tmp114 ".core"
 
   430 set :buildBlock:rotation 3
   431 set :buildBlock:config @mono
   432 setaddr :buildBlock*retaddr *label122 (h:*label122)
-    * label *label118
   433 op add :buildBlock:x .coreX -4
   434 op add :buildBlock:y .coreY -1
   435 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   436 label *label122
   437 set *tmp119 :buildBlock*retval
   438 jump *label117 always
-    * label *label119
   439 multijump *tmp120 0 0 (m:marker9)
   440 multilabel *label121 (m:marker9)
-    * label *label120
   441 label *label117
   442 write *tmp119 *tmp114 ".factory"
   443 set :buildBlock:block @unloader
 
   450 set :buildBlock:rotation 0
   451 set :buildBlock:config null
   452 setaddr :buildBlock*retaddr *label128 (h:*label128)
-    * label *label124
   453 op add :buildBlock:x .coreX -2
   454 op add :buildBlock:y .coreY 1
   455 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   456 label *label128
   457 set *tmp123 :buildBlock*retval
   458 jump *label123 always
-    * label *label125
   459 multijump *tmp124 0 0 (m:marker10)
   460 multilabel *label127 (m:marker10)
-    * label *label126
   461 label *label123
   462 write *tmp123 *tmp114 ".unloader2"
   463 set :buildBlock:block @overflow-gate
 
   470 set :buildBlock:rotation 0
   471 set :buildBlock:config null
   472 setaddr :buildBlock*retaddr *label134 (h:*label134)
-    * label *label130
   473 op add :buildBlock:x .coreX -3
   474 op add :buildBlock:y .coreY 1
   475 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   476 label *label134
   477 jump *label129 always
-    * label *label131
   478 multijump *tmp128 0 0 (m:marker11)
   479 multilabel *label133 (m:marker11)
-    * label *label132
   480 label *label129
   481 write @mono *tmp114 ".unitToProduce"
   482 set :buildBlock:block @unloader
 
   489 set :buildBlock:rotation 0
   490 set :buildBlock:config null
   491 setaddr :buildBlock*retaddr *label140 (h:*label140)
-    * label *label136
   492 op add :buildBlock:x .coreX 2
   493 set :buildBlock:y .coreY
   494 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   495 label *label140
   496 jump *label135 always
-    * label *label137
   497 multijump *tmp132 0 0 (m:marker12)
   498 multilabel *label139 (m:marker12)
-    * label *label138
   499 label *label135
   500 set :buildBlock:block @kiln
   501 set :buildBlock:copper 60
 
   507 set :buildBlock:rotation 0
   508 set :buildBlock:config null
   509 setaddr :buildBlock*retaddr *label146 (h:*label146)
-    * label *label142
   510 op add :buildBlock:x .coreX 3.5
   511 op add :buildBlock:y .coreY 0.5
   512 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   513 label *label146
   514 jump *label141 always
-    * label *label143
   515 multijump *tmp136 0 0 (m:marker13)
   516 multilabel *label145 (m:marker13)
-    * label *label144
   517 label *label141
   518 write null *tmp114 ".kiln"
   519 set :buildBlock:block @junction
 
   526 set :buildBlock:rotation 0
   527 set :buildBlock:config null
   528 setaddr :buildBlock*retaddr *label152 (h:*label152)
-    * label *label148
   529 op add :buildBlock:x .coreX 2
   530 op add :buildBlock:y .coreY 1
   531 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   532 label *label152
   533 jump *label147 always
-    * label *label149
   534 multijump *tmp140 0 0 (m:marker14)
   535 multilabel *label151 (m:marker14)
-    * label *label150
   536 label *label147
   537 set :buildBlock:block @water-extractor
   538 set :buildBlock:copper 30
 
   544 set :buildBlock:rotation 0
   545 set :buildBlock:config null
   546 setaddr :buildBlock*retaddr *label158 (h:*label158)
-    * label *label154
   547 op add :buildBlock:x .coreX -3.5
   548 op add :buildBlock:y .coreY 4.5
   549 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   550 label *label158
   551 jump *label153 always
-    * label *label155
   552 multijump *tmp144 0 0 (m:marker15)
   553 multilabel *label157 (m:marker15)
-    * label *label156
   554 label *label153
   555 set :buildBlock:block @steam-generator
   556 set :buildBlock:copper 35
 
   562 set :buildBlock:rotation 0
   563 set :buildBlock:config null
   564 setaddr :buildBlock*retaddr *label164 (h:*label164)
-    * label *label160
   565 op add :buildBlock:x .coreX -3.5
   566 op add :buildBlock:y .coreY 2.5
   567 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   568 label *label164
   569 set *tmp147 :buildBlock*retval
   570 jump *label159 always
-    * label *label161
   571 multijump *tmp148 0 0 (m:marker16)
   572 multilabel *label163 (m:marker16)
-    * label *label162
   573 label *label159
   574 write *tmp147 *tmp114 ".generator2"
   575 set :buildBlock:block @sorter
 
   582 set :buildBlock:rotation 0
   583 set :buildBlock:config @coal
   584 setaddr :buildBlock*retaddr *label170 (h:*label170)
-    * label *label166
   585 op add :buildBlock:x .coreX -4
   586 op add :buildBlock:y .coreY 1
   587 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   588 label *label170
   589 jump *label165 always
-    * label *label167
   590 multijump *tmp152 0 0 (m:marker17)
   591 multilabel *label169 (m:marker17)
-    * label *label168
   592 label *label165
   593 label *label171
   594 setaddr :supplyBase*retaddr *label174 (h:*label174)
   595 call *label9 *invalid :supplyBase*retval (m:*label174) (h:*label174)
   596 label *label174
-    * label *label172
   597 jump *label171 always
-    * label *label173
   598 ucontrol stop
   599 print "[salmon]"
   600 print "Done"
   601 printflush message1
   602 stop
-    * label *label175
   603 print .nextBlock
   604 print .totalTargets
   605 print .transportTarget
 
   609 print .status3
   610 print .item2
   611 print .block2
-    * label *label14
   612 wait 1e12
   613 jump *label13 always
   614 end
   615 label *label0
   616 set .status3 "Moving..."
-    * label *label177
   617 op sub *tmp158 :moveTo:radius 0.5
-    * label *label178
   618 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
   619 jump *label180 notEqual *tmp156 false
   620 label *label372
   621 ucontrol approach :moveTo:x :moveTo:y *tmp158
-    * label *label179
   622 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156
   623 jump *label372 equal *tmp156 false
   624 label *label180
-    * label *label176
   625 return :moveTo*retaddr
   626 end
   627 label *label1
 
   631 setaddr :moveTo*retaddr *label182 (h:*label182)
   632 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
   633 label *label182
-    * label *label181
   634 return :moveTo.1*retaddr
   635 end
   636 label *label2
 
   638 jump *label184 equal *tmp161 null
   639 ucontrol itemDrop @air 1000
   640 label *label184
-    * label *label185
   641 set :moveTo.1:x :moveToEmpty:x
   642 set :moveTo.1:y :moveToEmpty:y
   643 setaddr :moveTo.1*retaddr *label186 (h:*label186)
   644 call *label1 *invalid :moveTo.1*retval (m:*label186) (h:*label186)
   645 label *label186
-    * label *label187
   646 sensor *tmp164 @unit @firstItem
   647 jump *label189 equal *tmp164 null
   648 label *label373
   649 ucontrol itemDrop @air 1000
-    * label *label188
   650 sensor *tmp164 @unit @firstItem
   651 jump *label373 notEqual *tmp164 null
   652 label *label189
-    * label *label183
   653 return :moveToEmpty*retaddr
   654 end
   655 label *label3
 
   661 setaddr :moveTo*retaddr *label191 (h:*label191)
   662 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   663 label *label191
-    * label *label190
   664 return :moveToBlock*retaddr
   665 end
   666 label *label4
   667 set .status3 "Depositing..."
-    * label *label193
   668 sensor *tmp168 @unit @firstItem
   669 jump *label194 notEqual *tmp168 :depositItems:item
   670 set *tmp173 5
 
   685 jump *label202 lessThan *tmp175 :depositItems:cap
   686 jump *label201 always
   687 label *label202
-    * label *label203
-    * label *label200
   688 sensor *tmp178 @unit @firstItem
   689 jump *label199 notEqual *tmp178 null
   690 label *label201
   691 jump *label195 always
   692 label *label194
-    * label *label204
   693 sensor *tmp180 @unit @firstItem
   694 jump *label206 equal *tmp180 null
   695 label *label374
   696 ucontrol itemDrop @air 1000
-    * label *label205
   697 sensor *tmp180 @unit @firstItem
   698 jump *label374 notEqual *tmp180 null
   699 label *label206
   700 label *label195
   701 set .transportTarget 0
-    * label *label192
   702 return :depositItems*retaddr
   703 end
   704 label *label5
 
   709 print :locateOre:ore
   710 printflush message1
   711 stop
-    * label *label210
   712 label *label208
-    * label *label209
-    * label *label207
   713 return :locateOre*retaddr
   714 end
   715 label *label6
 
   727 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
   728 label *label213
   729 set .status3 "Mining..."
-    * label *label214
   730 label *label215
   731 sensor :mineOre:item @unit @firstItem
   732 op notEqual *tmp187 :mineOre:item null
 
   735 jump *label218 equal *tmp189 false
   736 jump *label217 always
   737 label *label218
-    * label *label219
   738 ucontrol mine :mineOre:x :mineOre:y
-    * label *label216
   739 sensor *tmp191 @unit @totalItems
   740 jump *label215 lessThan *tmp191 :mineOre:amount
   741 label *label217
 
   746 setaddr :depositItems*retaddr *label220 (h:*label220)
   747 call *label4 *invalid :depositItems*retval (m:*label220) (h:*label220)
   748 label *label220
-    * label *label211
   749 return :mineOre*retaddr
   750 end
   751 label *label7
 
   755 setaddr :mineOre*retaddr *label222 (h:*label222)
   756 call *label6 *invalid :mineOre*retval (m:*label222) (h:*label222)
   757 label *label222
-    * label *label221
   758 return :mineOre.1*retaddr
   759 end
   760 label *label8
 
   763 set .status2 "Fetching "
   764 set .item2 :fetchBlock:item
   765 set .block2 :fetchBlock:block
-    * label *label224
   766 sensor *tmp195 :fetchBlock:block @x
   767 sensor *tmp196 :fetchBlock:block @y
   768 set :moveToEmpty:x *tmp195
 
   779 jump *label229 equal *tmp200 false
   780 ucontrol itemDrop @air 1000
   781 label *label229
-    * label *label230
-    * label *label227
   782 sensor *tmp202 @unit :fetchBlock:item
   783 op lessThan *tmp203 *tmp202 30
   784 sensor *tmp204 :fetchBlock:block :fetchBlock:item
   785 op land *tmp205 *tmp203 *tmp204
   786 jump *label226 notEqual *tmp205 false
-    * label *label228
   787 set :depositItems:block .core
   788 set :depositItems:item :fetchBlock:item
   789 set :depositItems:fromMining false
   790 setaddr :depositItems*retaddr *label231 (h:*label231)
   791 call *label4 *invalid :depositItems*retval (m:*label231) (h:*label231)
   792 label *label231
-    * label *label223
   793 return :fetchBlock*retaddr
   794 end
   795 label *label9
 
   800 sensor *tmp211 .press @coal
   801 jump *label237 greaterThanEq *tmp211 5
   802 set .status1 "Meeting the graphite target"
-    * label *label239
   803 set .status2 "Supplying "
   804 set .item2 @coal
   805 set .block2 .press
-    * label *label241
   806 sensor *tmp214 .press @itemCapacity
   807 sensor *tmp215 .press @coal
   808 op sub :supplyBlock:missing *tmp214 *tmp215
 
   814 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
   815 label *label244
   816 label *label242
-    * label *label243
-    * label *label240
   817 set :supplyBase:supplied true
   818 label *label237
-    * label *label238
   819 label *label235
-    * label *label236
   820 sensor *tmp219 .core @silicon
   821 jump *label245 greaterThanEq *tmp219 .updatedSiliconTarget
   822 sensor *tmp222 .smelter @coal
   823 jump *label247 greaterThanEq *tmp222 5
   824 set .status1 "Meeting the silicon target (coal)"
-    * label *label249
   825 set .status2 "Supplying "
   826 set .item2 @coal
   827 set .block2 .smelter
-    * label *label251
   828 sensor *tmp225 .smelter @itemCapacity
   829 sensor *tmp226 .smelter @coal
   830 op sub :supplyBlock.1:missing *tmp225 *tmp226
 
   836 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
   837 label *label254
   838 label *label252
-    * label *label253
-    * label *label250
   839 set :supplyBase:supplied true
   840 jump *label248 always
   841 label *label247
   842 sensor *tmp230 .smelter @sand
   843 jump *label255 greaterThanEq *tmp230 5
   844 set .status1 "Meeting the silicon target (sand)"
-    * label *label257
   845 set .status2 "Supplying "
   846 set .item2 @sand
   847 set .block2 .smelter
-    * label *label259
   848 sensor *tmp233 .smelter @itemCapacity
   849 sensor *tmp234 .smelter @sand
   850 op sub :supplyBlock.2:missing *tmp233 *tmp234
 
   856 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
   857 label *label262
   858 label *label260
-    * label *label261
-    * label *label258
   859 set :supplyBase:supplied true
   860 label *label255
-    * label *label256
   861 label *label248
   862 label *label245
-    * label *label246
   863 sensor *tmp238 .battery @totalPower
   864 jump *label263 greaterThanEq *tmp238 .powerTarget
   865 set .status1 "Supplying generator"
-    * label *label265
   866 set .status2 "Supplying "
   867 set .item2 @coal
   868 set .block2 .generator
-    * label *label267
   869 sensor *tmp241 .generator @itemCapacity
   870 sensor *tmp242 .generator @coal
   871 op sub :supplyBlock.3:missing *tmp241 *tmp242
 
   877 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
   878 label *label270
   879 label *label268
-    * label *label269
-    * label *label266
   880 set :supplyBase:supplied true
   881 label *label263
-    * label *label264
   882 jump *label234 always
   883 label *label233
   884 jump *label271 equal .processor null
   885 sensor *tmp248 .core @coal
   886 jump *label273 greaterThanEq *tmp248 10
   887 set .status1 "Supplying base"
-    * label *label275
   888 set :mineOre.1:ore @coal
   889 setaddr :mineOre.1*retaddr *label276 (h:*label276)
   890 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
   891 label *label276
   892 jump *label232 always
   893 label *label273
-    * label *label274
   894 label *label271
-    * label *label272
   895 label *label234
   896 sensor *tmp251 .titanium_drill @titanium
   897 jump *label277 greaterThanEq *tmp251 .titaniumTrigger
   898 sensor *tmp254 .core @silicon
   899 jump *label279 greaterThanEq *tmp254 .siliconTarget
   900 set .status1 "Meeting the silicon target"
-    * label *label281
   901 sensor :supplyBase:coal .core @coal
   902 sensor :supplyBase:sand .core @sand
   903 set *tmp260 @sand
 
   907 set .status2 "Mining "
   908 set .item2 *tmp260
   909 set .block2 "core"
-    * label *label284
   910 set :mineOre.1:ore *tmp260
   911 setaddr :mineOre.1*retaddr *label285 (h:*label285)
   912 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
 
   916 sensor *tmp261 .core @copper
   917 jump *label286 greaterThanEq *tmp261 .copperTarget
   918 set .status1 "Meeting the copper target"
-    * label *label288
   919 set .status2 "Mining "
   920 set .item2 @copper
   921 set .block2 "core"
-    * label *label289
   922 set :mineOre.1:ore @copper
   923 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   924 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
 
   928 sensor *tmp264 .core @lead
   929 jump *label291 greaterThanEq *tmp264 .leadTarget
   930 set .status1 "Meeting the lead target"
-    * label *label293
   931 set .status2 "Mining "
   932 set .item2 @lead
   933 set .block2 "core"
-    * label *label294
   934 set :mineOre.1:ore @lead
   935 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   936 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
   940 sensor *tmp267 .core @metaglass
   941 jump *label296 greaterThanEq *tmp267 .metaglassTarget
   942 set .status1 "Meeting the metaglass target"
-    * label *label298
   943 set .status2 "Mining "
   944 set .item2 @sand
   945 set .block2 "core"
-    * label *label299
   946 set :mineOre.1:ore @sand
   947 setaddr :mineOre.1*retaddr *label300 (h:*label300)
   948 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
 
   951 label *label296
   952 jump *label301 notEqual :supplyBase:supplied false
   953 set .status1 "Supplying base"
-    * label *label303
   954 sensor :supplyBase:coal.1 .core @coal
   955 sensor :supplyBase:sand.1 .core @sand
   956 set *tmp275 @sand
 
   960 set .status2 "Mining "
   961 set .item2 *tmp275
   962 set .block2 "core"
-    * label *label306
   963 set :mineOre.1:ore *tmp275
   964 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   965 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   966 label *label307
   967 label *label301
-    * label *label302
   968 label *label297
   969 label *label292
   970 label *label287
 
   972 jump *label278 always
   973 label *label277
   974 set .status1 "Fetching titanium"
-    * label *label308
   975 set :fetchBlock:block .titanium_drill
   976 set :fetchBlock:item @titanium
   977 setaddr :fetchBlock*retaddr *label309 (h:*label309)
 
   989 set .siliconTarget :meetTarget:silicon
   990 set .titaniumTarget :meetTarget:titanium
   991 set .metaglassTarget :meetTarget:metaglass
-    * label *label347
   992 op sign :meetTarget:count :meetTarget:copper
-    * label *label348
-    * label *label351
   993 op sign *tmp277 :meetTarget:lead
   994 op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label352
-    * label *label355
   995 op sign *tmp277 :meetTarget:graphite
   996 op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label356
-    * label *label359
   997 op sign *tmp277 :meetTarget:silicon
   998 op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label360
-    * label *label363
   999 op sign *tmp277 :meetTarget:titanium
  1000 op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label364
-    * label *label367
  1001 op sign *tmp277 :meetTarget:metaglass
  1002 op add :meetTarget:count :meetTarget:count *tmp277
-    * label *label368
-    * label *label313
  1003 set .totalTargets :meetTarget:count
  1004 jump *label320 notEqual .processor null
  1005 op max .updatedGraphiteTarget 10 .graphiteTarget
 
  1019 jump *label323 greaterThanEq *tmp285 *tmp286
  1020 set .titaniumTrigger 7
  1021 label *label323
-    * label *label324
  1022 sensor *tmp289 .core @copper
  1023 op lessThan *tmp290 *tmp289 .copperTarget
  1024 sensor *tmp291 .core @lead
 
  1045 setaddr :supplyBase*retaddr *label327 (h:*label327)
  1046 call *label9 *invalid :supplyBase*retval (m:*label327) (h:*label327)
  1047 label *label327
-    * label *label325
  1048 sensor *tmp289 .core @copper
  1049 op lessThan *tmp290 *tmp289 .copperTarget
  1050 sensor *tmp291 .core @lead
 
  1068 op or *tmp310 *tmp305 *tmp308
  1069 jump *label375 notEqual *tmp310 false
  1070 label *label326
-    * label *label310
  1071 return :meetTarget*retaddr
  1072 end
  1073 label *label11
 
  1077 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1078 label *label329
  1079 set .status3 "Building..."
-    * label *label330
  1080 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1081 jump *label331 equal :buildBlockAt:building null
  1082 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1083 set :buildBlockAt*retval :buildBlockAt:building
  1084 jump *label328 always
  1085 label *label333
-    * label *label334
  1086 jump *label335 equal :buildBlockAt:skipError false
  1087 set :buildBlockAt*retval null
  1088 jump *label328 always
  1089 label *label335
-    * label *label336
  1090 print "[salmon]"
  1091 print "Cannot build at ("
  1092 print :buildBlockAt:x
 
  1096 print :buildBlockAt:building
  1097 printflush message1
  1098 stop
-    * label *label337
  1099 label *label331
-    * label *label332
  1100 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1101 wait 0.25
  1102 label *label338
 
  1104 jump *label341 notEqual :buildBlockAt:building null
  1105 jump *label340 always
  1106 label *label341
-    * label *label342
-    * label *label339
  1107 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1108 label *label340
  1109 set :buildBlockAt*retval :buildBlockAt:building
 
  1131 call *label11 *invalid :buildBlockAt*retval (m:*label345) (h:*label345)
  1132 label *label345
  1133 set :buildBlock*retval :buildBlockAt*retval
-    * label *label343
  1134 return :buildBlock*retaddr
  1135 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   156 op abs *tmp43 *tmp42
   157 op greaterThanEq *tmp44 *tmp43 8
   158 op or *tmp45 *tmp41 *tmp44
-    * jump *label59 equal *tmp45 false
-    * jump *label57 always
+  159 jump *label57 notEqual *tmp45 false
   160 label *label59
   161 op sin *tmp48 :locateOreAway:angle
   162 op mul *tmp49 *tmp48 :locateOreAway:distance
 
   216 set :buildTitaniumDrillCfg:dx 1
   217 set :buildTitaniumDrillCfg:dy 1
   218 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label389 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  219 jump *label66 greaterThanEq :checkOre.3:count 4
   220 label *label389
   221 label *label391
   222 set :checkOre:count 0
 
   245 set :buildTitaniumDrillCfg:dx 1
   246 set :buildTitaniumDrillCfg:dy -1
   247 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label409 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  248 jump *label66 greaterThanEq :checkOre.3:count 4
   249 label *label409
   250 label *label411
   251 set :checkOre:count 0
 
   274 set :buildTitaniumDrillCfg:dx -1
   275 set :buildTitaniumDrillCfg:dy 1
   276 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label429 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  277 jump *label66 greaterThanEq :checkOre.3:count 4
   278 label *label429
   279 label *label431
   280 set :checkOre:count 0
 
   303 set :buildTitaniumDrillCfg:dx -1
   304 set :buildTitaniumDrillCfg:dy -1
   305 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label449 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  306 jump *label66 greaterThanEq :checkOre.3:count 4
   307 label *label449
   308 label *label451
   309 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
 
   677 label *label199
   678 ucontrol itemDrop :depositItems:block 30
   679 sensor *tmp175 :depositItems:block :depositItems:item
-    * jump *label202 lessThan *tmp175 :depositItems:cap
-    * jump *label201 always
+  680 jump *label201 greaterThanEq *tmp175 :depositItems:cap
   681 label *label202
   682 sensor *tmp178 @unit @firstItem
   683 jump *label199 notEqual *tmp178 null
 
   726 op notEqual *tmp187 :mineOre:item null
   727 op notEqual *tmp188 :mineOre:item :mineOre:ore
   728 op land *tmp189 *tmp187 *tmp188
-    * jump *label218 equal *tmp189 false
-    * jump *label217 always
+  729 jump *label217 notEqual *tmp189 false
   730 label *label218
   731 ucontrol mine :mineOre:x :mineOre:y
   732 sensor *tmp191 @unit @totalItems
 
  1094 wait 0.25
  1095 label *label338
  1096 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label341 notEqual :buildBlockAt:building null
-    * jump *label340 always
+ 1097 jump *label340 equal :buildBlockAt:building null
  1098 label *label341
  1099 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1100 label *label340

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   157 op greaterThanEq *tmp44 *tmp43 8
   158 op or *tmp45 *tmp41 *tmp44
   159 jump *label57 notEqual *tmp45 false
-    * label *label59
   160 op sin *tmp48 :locateOreAway:angle
   161 op mul *tmp49 *tmp48 :locateOreAway:distance
   162 op add *tmp50 .coreX *tmp49
 
   216 set :buildTitaniumDrillCfg:dy 1
   217 set :buildTitaniumDrillCfg:best :checkOre.3:count
   218 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label389
   219 label *label391
   220 set :checkOre:count 0
   221 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   244 set :buildTitaniumDrillCfg:dy -1
   245 set :buildTitaniumDrillCfg:best :checkOre.3:count
   246 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label409
   247 label *label411
   248 set :checkOre:count 0
   249 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   272 set :buildTitaniumDrillCfg:dy 1
   273 set :buildTitaniumDrillCfg:best :checkOre.3:count
   274 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label429
   275 label *label431
   276 set :checkOre:count 0
   277 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   300 set :buildTitaniumDrillCfg:dy -1
   301 set :buildTitaniumDrillCfg:best :checkOre.3:count
   302 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label449
   303 label *label451
   304 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   305 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
 
   673 ucontrol itemDrop :depositItems:block 30
   674 sensor *tmp175 :depositItems:block :depositItems:item
   675 jump *label201 greaterThanEq *tmp175 :depositItems:cap
-    * label *label202
   676 sensor *tmp178 @unit @firstItem
   677 jump *label199 notEqual *tmp178 null
   678 label *label201
 
   721 op notEqual *tmp188 :mineOre:item :mineOre:ore
   722 op land *tmp189 *tmp187 *tmp188
   723 jump *label217 notEqual *tmp189 false
-    * label *label218
   724 ucontrol mine :mineOre:x :mineOre:y
   725 sensor *tmp191 @unit @totalItems
   726 jump *label215 lessThan *tmp191 :mineOre:amount
 
  1088 label *label338
  1089 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1090 jump *label340 equal :buildBlockAt:building null
-    * label *label341
  1091 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1092 label *label340
  1093 set :buildBlockAt*retval :buildBlockAt:building

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   325 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   326 label *label90
   327 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  328 jump *label50 lessThanEq :buildTitaniumDrillCfg:attempts 5
   329 op sin *tmp98 :locateOreAway:angle
   330 op mul *tmp99 *tmp98 :locateOreAway:distance
   331 op add *tmp100 .coreX *tmp99
 
   672 label *label199
   673 ucontrol itemDrop :depositItems:block 30
   674 sensor *tmp175 :depositItems:block :depositItems:item
-    * jump *label201 greaterThanEq *tmp175 :depositItems:cap
+  675 jump *label195 greaterThanEq *tmp175 :depositItems:cap
   676 sensor *tmp178 @unit @firstItem
   677 jump *label199 notEqual *tmp178 null
   678 label *label201
 
   847 label *label248
   848 label *label245
   849 sensor *tmp238 .battery @totalPower
-    * jump *label263 greaterThanEq *tmp238 .powerTarget
+  850 jump *label234 greaterThanEq *tmp238 .powerTarget
   851 set .status1 "Supplying generator"
   852 set .status2 "Supplying "
   853 set .item2 @coal
 
   875 setaddr :mineOre.1*retaddr *label276 (h:*label276)
   876 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
   877 label *label276
-    * jump *label232 always
+  878 return :supplyBase*retaddr
   879 label *label273
   880 label *label271
   881 label *label234
 
   897 setaddr :mineOre.1*retaddr *label285 (h:*label285)
   898 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
   899 label *label285
-    * jump *label280 always
+  900 return :supplyBase*retaddr
   901 label *label279
   902 sensor *tmp261 .core @copper
   903 jump *label286 greaterThanEq *tmp261 .copperTarget
 
   909 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   910 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
   911 label *label290
-    * jump *label287 always
+  912 return :supplyBase*retaddr
   913 label *label286
   914 sensor *tmp264 .core @lead
   915 jump *label291 greaterThanEq *tmp264 .leadTarget
 
   921 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   922 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
   923 label *label295
-    * jump *label292 always
+  924 return :supplyBase*retaddr
   925 label *label291
   926 sensor *tmp267 .core @metaglass
   927 jump *label296 greaterThanEq *tmp267 .metaglassTarget
 
   933 setaddr :mineOre.1*retaddr *label300 (h:*label300)
   934 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
   935 label *label300
-    * jump *label297 always
+  936 return :supplyBase*retaddr
   937 label *label296
-    * jump *label301 notEqual :supplyBase:supplied false
+  938 jump *label278 notEqual :supplyBase:supplied false
   939 set .status1 "Supplying base"
   940 sensor :supplyBase:coal.1 .core @coal
   941 sensor :supplyBase:sand.1 .core @sand
 
   955 label *label292
   956 label *label287
   957 label *label280
-    * jump *label278 always
+  958 return :supplyBase*retaddr
   959 label *label277
   960 set .status1 "Fetching titanium"
   961 set :fetchBlock:block .titanium_drill
 
  1067 jump *label331 equal :buildBlockAt:building null
  1068 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1069 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label328 always
+ 1070 return :buildBlockAt*retaddr
  1071 label *label333
  1072 jump *label335 equal :buildBlockAt:skipError false
  1073 set :buildBlockAt*retval null
-    * jump *label328 always
+ 1074 return :buildBlockAt*retaddr
  1075 label *label335
  1076 print "[salmon]"
  1077 print "Cannot build at ("

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-48 instructions):
 
    43 label *label23
    44 set *tmp16 :buildBlock*retval
    45 jump *label18 always
-    * multijump *tmp17 0 0 (m:marker0)
-    * multilabel *label22 (m:marker0)
    46 label *label18
    47 set .press *tmp16
    48 set :buildBlock:block @battery
 
    61 label *label29
    62 set *tmp20 :buildBlock*retval
    63 jump *label24 always
-    * multijump *tmp21 0 0 (m:marker1)
-    * multilabel *label28 (m:marker1)
    64 label *label24
    65 set .battery *tmp20
    66 set :buildBlock:block @combustion-generator
 
    79 label *label35
    80 set *tmp24 :buildBlock*retval
    81 jump *label30 always
-    * multijump *tmp25 0 0 (m:marker2)
-    * multilabel *label34 (m:marker2)
    82 label *label30
    83 set .generator *tmp24
    84 set :buildBlock:block @battery
 
    96 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    97 label *label41
    98 jump *label36 always
-    * multijump *tmp29 0 0 (m:marker3)
-    * multilabel *label40 (m:marker3)
    99 label *label36
   100 set :buildBlock:block @silicon-smelter
   101 set :buildBlock:copper 30
 
   113 label *label47
   114 set *tmp32 :buildBlock*retval
   115 jump *label42 always
-    * multijump *tmp33 0 0 (m:marker4)
-    * multilabel *label46 (m:marker4)
   116 label *label42
   117 set .smelter *tmp32
   118 set :buildTitaniumDrillCfg:distance 32
 
   332 set :buildTitaniumDrillCfg:attempts 0
   333 op sub *tmp104 :buildTitaniumDrillCfg:minimum 1
   334 op max :buildTitaniumDrillCfg:minimum *tmp104 1
-    * label *label95
   335 jump *label50 always
-    * set *tmp37 null
   336 label *label49
   337 set .titanium_drill *tmp37
   338 set :buildBlock:block @unloader
 
   351 label *label104
   352 set *tmp106 :buildBlock*retval
   353 jump *label99 always
-    * multijump *tmp107 0 0 (m:marker6)
-    * multilabel *label103 (m:marker6)
   354 label *label99
   355 set .unloader1 *tmp106
   356 set :buildBlock:block @power-node
 
   368 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   369 label *label110
   370 jump *label105 always
-    * multijump *tmp111 0 0 (m:marker7)
-    * multilabel *label109 (m:marker7)
   371 label *label105
   372 set :buildBlock:block @micro-processor
   373 set :buildBlock:copper 90
 
   385 label *label116
   386 set *tmp114 :buildBlock*retval
   387 jump *label111 always
-    * multijump *tmp115 0 0 (m:marker8)
-    * multilabel *label115 (m:marker8)
   388 label *label111
   389 set .processor *tmp114
   390 write .core *tmp114 ".core"
 
   408 label *label122
   409 set *tmp119 :buildBlock*retval
   410 jump *label117 always
-    * multijump *tmp120 0 0 (m:marker9)
-    * multilabel *label121 (m:marker9)
   411 label *label117
   412 write *tmp119 *tmp114 ".factory"
   413 set :buildBlock:block @unloader
 
   426 label *label128
   427 set *tmp123 :buildBlock*retval
   428 jump *label123 always
-    * multijump *tmp124 0 0 (m:marker10)
-    * multilabel *label127 (m:marker10)
   429 label *label123
   430 write *tmp123 *tmp114 ".unloader2"
   431 set :buildBlock:block @overflow-gate
 
   443 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   444 label *label134
   445 jump *label129 always
-    * multijump *tmp128 0 0 (m:marker11)
-    * multilabel *label133 (m:marker11)
   446 label *label129
   447 write @mono *tmp114 ".unitToProduce"
   448 set :buildBlock:block @unloader
 
   460 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   461 label *label140
   462 jump *label135 always
-    * multijump *tmp132 0 0 (m:marker12)
-    * multilabel *label139 (m:marker12)
   463 label *label135
   464 set :buildBlock:block @kiln
   465 set :buildBlock:copper 60
 
   476 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   477 label *label146
   478 jump *label141 always
-    * multijump *tmp136 0 0 (m:marker13)
-    * multilabel *label145 (m:marker13)
   479 label *label141
   480 write null *tmp114 ".kiln"
   481 set :buildBlock:block @junction
 
   493 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   494 label *label152
   495 jump *label147 always
-    * multijump *tmp140 0 0 (m:marker14)
-    * multilabel *label151 (m:marker14)
   496 label *label147
   497 set :buildBlock:block @water-extractor
   498 set :buildBlock:copper 30
 
   509 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   510 label *label158
   511 jump *label153 always
-    * multijump *tmp144 0 0 (m:marker15)
-    * multilabel *label157 (m:marker15)
   512 label *label153
   513 set :buildBlock:block @steam-generator
   514 set :buildBlock:copper 35
 
   526 label *label164
   527 set *tmp147 :buildBlock*retval
   528 jump *label159 always
-    * multijump *tmp148 0 0 (m:marker16)
-    * multilabel *label163 (m:marker16)
   529 label *label159
   530 write *tmp147 *tmp114 ".generator2"
   531 set :buildBlock:block @sorter
 
   543 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   544 label *label170
   545 jump *label165 always
-    * multijump *tmp152 0 0 (m:marker17)
-    * multilabel *label169 (m:marker17)
   546 label *label165
   547 label *label171
   548 setaddr :supplyBase*retaddr *label174 (h:*label174)
   549 call *label9 *invalid :supplyBase*retval (m:*label174) (h:*label174)
   550 label *label174
   551 jump *label171 always
-    * ucontrol stop
-    * print "[salmon]"
-    * print "Done"
-    * printflush message1
-    * stop
-    * print .nextBlock
-    * print .totalTargets
-    * print .transportTarget
-    * print .transportItem
-    * print .status1
-    * print .status2
-    * print .status3
-    * print .item2
-    * print .block2
-    * wait 1e12
-    * jump *label13 always
-    * end
   552 label *label0
   553 set .status3 "Moving..."
   554 op sub *tmp158 :moveTo:radius 0.5
 
   560 jump *label372 equal *tmp156 false
   561 label *label180
   562 return :moveTo*retaddr
-    * end
   563 label *label1
   564 set :moveTo:x :moveTo.1:x
   565 set :moveTo:y :moveTo.1:y
 
   568 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
   569 label *label182
   570 return :moveTo.1*retaddr
-    * end
   571 label *label2
   572 sensor *tmp161 @unit @firstItem
   573 jump *label184 equal *tmp161 null
 
   586 jump *label373 notEqual *tmp164 null
   587 label *label189
   588 return :moveToEmpty*retaddr
-    * end
   589 label *label3
   590 sensor *tmp166 :moveToBlock:block @x
   591 sensor *tmp167 :moveToBlock:block @y
 
   596 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   597 label *label191
   598 return :moveToBlock*retaddr
-    * end
   599 label *label4
   600 set .status3 "Depositing..."
   601 sensor *tmp168 @unit @firstItem
 
   618 jump *label195 greaterThanEq *tmp175 :depositItems:cap
   619 sensor *tmp178 @unit @firstItem
   620 jump *label199 notEqual *tmp178 null
-    * label *label201
   621 jump *label195 always
   622 label *label194
   623 sensor *tmp180 @unit @firstItem
 
   630 label *label195
   631 set .transportTarget 0
   632 return :depositItems*retaddr
-    * end
   633 label *label5
   634 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp182 0
   635 jump *label208 notEqual *tmp182 false
 
   640 stop
   641 label *label208
   642 return :locateOre*retaddr
-    * end
   643 label *label6
   644 set .transportTarget :mineOre:amount
   645 set .transportItem :mineOre:ore
 
   673 call *label4 *invalid :depositItems*retval (m:*label220) (h:*label220)
   674 label *label220
   675 return :mineOre*retaddr
-    * end
   676 label *label7
   677 set :mineOre:ore :mineOre.1:ore
   678 set :mineOre:amount 30
 
   681 call *label6 *invalid :mineOre*retval (m:*label222) (h:*label222)
   682 label *label222
   683 return :mineOre.1*retaddr
-    * end
   684 label *label8
   685 sensor .transportTarget :fetchBlock:block @itemCapacity
   686 set .transportItem :fetchBlock:item
 
   715 call *label4 *invalid :depositItems*retval (m:*label231) (h:*label231)
   716 label *label231
   717 return :fetchBlock*retaddr
-    * end
   718 label *label9
   719 set :supplyBase:supplied false
   720 jump *label233 notEqual .unloader1 null
 
   801 label *label270
   802 label *label268
   803 set :supplyBase:supplied true
-    * label *label263
   804 jump *label234 always
   805 label *label233
   806 jump *label271 equal .processor null
 
   886 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   887 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   888 label *label307
-    * label *label301
-    * label *label297
-    * label *label292
-    * label *label287
-    * label *label280
   889 return :supplyBase*retaddr
   890 label *label277
   891 set .status1 "Fetching titanium"
 
   895 call *label8 *invalid :fetchBlock*retval (m:*label309) (h:*label309)
   896 label *label309
   897 label *label278
-    * label *label232
   898 return :supplyBase*retaddr
-    * end
   899 label *label10
   900 set .nextBlock :meetTarget:block
   901 set .copperTarget :meetTarget:copper
 
   984 jump *label375 notEqual *tmp310 false
   985 label *label326
   986 return :meetTarget*retaddr
-    * end
   987 label *label11
   988 set :moveTo.1:x :buildBlockAt:x
   989 set :moveTo.1:y :buildBlockAt:y
 
  1019 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1020 label *label340
  1021 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label328
  1022 return :buildBlockAt*retaddr
-    * end
  1023 label *label12
  1024 set :meetTarget:block :buildBlock:block
  1025 set :meetTarget:copper :buildBlock:copper
 
  1042 label *label345
  1043 set :buildBlock*retval :buildBlockAt*retval
  1044 return :buildBlock*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
    22 set .titaniumTrigger 7
    23 set *signature "0:v1"
    24 set .powerTarget 400
-    * label *label13
    25 label *label15
    26 ubind @poly
    27 ulocate building core false @copper .coreX .coreY 0 .core

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    41 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    42 label *label23
    43 set *tmp16 :buildBlock*retval
-    * jump *label18 always
    44 label *label18
    45 set .press *tmp16
    46 set :buildBlock:block @battery
 
    58 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    59 label *label29
    60 set *tmp20 :buildBlock*retval
-    * jump *label24 always
    61 label *label24
    62 set .battery *tmp20
    63 set :buildBlock:block @combustion-generator
 
    75 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    76 label *label35
    77 set *tmp24 :buildBlock*retval
-    * jump *label30 always
    78 label *label30
    79 set .generator *tmp24
    80 set :buildBlock:block @battery
 
    91 op add :buildBlock:y .coreY 4
    92 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    93 label *label41
-    * jump *label36 always
    94 label *label36
    95 set :buildBlock:block @silicon-smelter
    96 set :buildBlock:copper 30
 
   107 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   108 label *label47
   109 set *tmp32 :buildBlock*retval
-    * jump *label42 always
   110 label *label42
   111 set .smelter *tmp32
   112 set :buildTitaniumDrillCfg:distance 32
 
   344 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   345 label *label104
   346 set *tmp106 :buildBlock*retval
-    * jump *label99 always
   347 label *label99
   348 set .unloader1 *tmp106
   349 set :buildBlock:block @power-node
 
   360 op add :buildBlock:y .coreY -1
   361 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   362 label *label110
-    * jump *label105 always
   363 label *label105
   364 set :buildBlock:block @micro-processor
   365 set :buildBlock:copper 90
 
   376 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   377 label *label116
   378 set *tmp114 :buildBlock*retval
-    * jump *label111 always
   379 label *label111
   380 set .processor *tmp114
   381 write .core *tmp114 ".core"
 
   398 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   399 label *label122
   400 set *tmp119 :buildBlock*retval
-    * jump *label117 always
   401 label *label117
   402 write *tmp119 *tmp114 ".factory"
   403 set :buildBlock:block @unloader
 
   415 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   416 label *label128
   417 set *tmp123 :buildBlock*retval
-    * jump *label123 always
   418 label *label123
   419 write *tmp123 *tmp114 ".unloader2"
   420 set :buildBlock:block @overflow-gate
 
   431 op add :buildBlock:y .coreY 1
   432 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   433 label *label134
-    * jump *label129 always
   434 label *label129
   435 write @mono *tmp114 ".unitToProduce"
   436 set :buildBlock:block @unloader
 
   447 set :buildBlock:y .coreY
   448 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   449 label *label140
-    * jump *label135 always
   450 label *label135
   451 set :buildBlock:block @kiln
   452 set :buildBlock:copper 60
 
   462 op add :buildBlock:y .coreY 0.5
   463 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   464 label *label146
-    * jump *label141 always
   465 label *label141
   466 write null *tmp114 ".kiln"
   467 set :buildBlock:block @junction
 
   478 op add :buildBlock:y .coreY 1
   479 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   480 label *label152
-    * jump *label147 always
   481 label *label147
   482 set :buildBlock:block @water-extractor
   483 set :buildBlock:copper 30
 
   493 op add :buildBlock:y .coreY 4.5
   494 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   495 label *label158
-    * jump *label153 always
   496 label *label153
   497 set :buildBlock:block @steam-generator
   498 set :buildBlock:copper 35
 
   509 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   510 label *label164
   511 set *tmp147 :buildBlock*retval
-    * jump *label159 always
   512 label *label159
   513 write *tmp147 *tmp114 ".generator2"
   514 set :buildBlock:block @sorter
 
   525 op add :buildBlock:y .coreY 1
   526 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   527 label *label170
-    * jump *label165 always
   528 label *label165
   529 label *label171
   530 setaddr :supplyBase*retaddr *label174 (h:*label174)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    41 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    42 label *label23
    43 set *tmp16 :buildBlock*retval
-    * label *label18
    44 set .press *tmp16
    45 set :buildBlock:block @battery
    46 set :buildBlock:copper 5
 
    57 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    58 label *label29
    59 set *tmp20 :buildBlock*retval
-    * label *label24
    60 set .battery *tmp20
    61 set :buildBlock:block @combustion-generator
    62 set :buildBlock:copper 25
 
    73 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    74 label *label35
    75 set *tmp24 :buildBlock*retval
-    * label *label30
    76 set .generator *tmp24
    77 set :buildBlock:block @battery
    78 set :buildBlock:copper 5
 
    88 op add :buildBlock:y .coreY 4
    89 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    90 label *label41
-    * label *label36
    91 set :buildBlock:block @silicon-smelter
    92 set :buildBlock:copper 30
    93 set :buildBlock:lead 25
 
   103 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   104 label *label47
   105 set *tmp32 :buildBlock*retval
-    * label *label42
   106 set .smelter *tmp32
   107 set :buildTitaniumDrillCfg:distance 32
   108 set :buildTitaniumDrillCfg:angle 0
 
   339 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   340 label *label104
   341 set *tmp106 :buildBlock*retval
-    * label *label99
   342 set .unloader1 *tmp106
   343 set :buildBlock:block @power-node
   344 set :buildBlock:copper 2
 
   354 op add :buildBlock:y .coreY -1
   355 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   356 label *label110
-    * label *label105
   357 set :buildBlock:block @micro-processor
   358 set :buildBlock:copper 90
   359 set :buildBlock:lead 50
 
   369 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   370 label *label116
   371 set *tmp114 :buildBlock*retval
-    * label *label111
   372 set .processor *tmp114
   373 write .core *tmp114 ".core"
   374 write *tmp20 *tmp114 ".battery"
 
   390 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   391 label *label122
   392 set *tmp119 :buildBlock*retval
-    * label *label117
   393 write *tmp119 *tmp114 ".factory"
   394 set :buildBlock:block @unloader
   395 set :buildBlock:copper 0
 
   406 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   407 label *label128
   408 set *tmp123 :buildBlock*retval
-    * label *label123
   409 write *tmp123 *tmp114 ".unloader2"
   410 set :buildBlock:block @overflow-gate
   411 set :buildBlock:copper 4
 
   421 op add :buildBlock:y .coreY 1
   422 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   423 label *label134
-    * label *label129
   424 write @mono *tmp114 ".unitToProduce"
   425 set :buildBlock:block @unloader
   426 set :buildBlock:copper 0
 
   436 set :buildBlock:y .coreY
   437 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   438 label *label140
-    * label *label135
   439 set :buildBlock:block @kiln
   440 set :buildBlock:copper 60
   441 set :buildBlock:lead 30
 
   450 op add :buildBlock:y .coreY 0.5
   451 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   452 label *label146
-    * label *label141
   453 write null *tmp114 ".kiln"
   454 set :buildBlock:block @junction
   455 set :buildBlock:copper 3
 
   465 op add :buildBlock:y .coreY 1
   466 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   467 label *label152
-    * label *label147
   468 set :buildBlock:block @water-extractor
   469 set :buildBlock:copper 30
   470 set :buildBlock:lead 30
 
   479 op add :buildBlock:y .coreY 4.5
   480 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   481 label *label158
-    * label *label153
   482 set :buildBlock:block @steam-generator
   483 set :buildBlock:copper 35
   484 set :buildBlock:lead 40
 
   494 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   495 label *label164
   496 set *tmp147 :buildBlock*retval
-    * label *label159
   497 write *tmp147 *tmp114 ".generator2"
   498 set :buildBlock:block @sorter
   499 set :buildBlock:copper 2
 
   509 op add :buildBlock:y .coreY 1
   510 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   511 label *label170
-    * label *label165
   512 label *label171
   513 setaddr :supplyBase*retaddr *label174 (h:*label174)
   514 call *label9 *invalid :supplyBase*retval (m:*label174) (h:*label174)

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   598 label *label5
   599 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp182 0
   600 jump *label208 notEqual *tmp182 false
-    * print "[salmon]"
-    * print "Cannot locate "
+  601 print "[salmon]Cannot locate "
   602 print :locateOre:ore
   603 printflush message1
   604 stop
 
   965 set :buildBlockAt*retval null
   966 return :buildBlockAt*retaddr
   967 label *label335
-    * print "[salmon]"
-    * print "Cannot build at ("
-    * print :buildBlockAt:x
-    * print ", "
-    * print :buildBlockAt:y
-    * print "), tile already contains "
+  968 print "[salmon]Cannot build at ({0}, {0}), tile already contains "
+  969 format :buildBlockAt:x
+  970 format :buildBlockAt:y
   971 print :buildBlockAt:building
   972 printflush message1
   973 stop

Final code before resolving virtual instructions:

    0:  jump *label457 always 0 0                                    CoreBuilder.mnd: var
    1:  draw triangle message1 processor1 .battery .block2 .copperTa ...
    2:  draw triangle .coreX .coreY .generator .graphiteTarget .item ...
    3:  draw triangle .metaglassTarget .nextBlock .powerTarget .pres ...
    4:  draw triangle .smelter .status1 .status2 .status3 .titaniumT ...
    5:  draw triangle .titanium_drill .totalTargets .transportItem . ...
    6:  draw triangle .updatedSiliconTarget :buildBlock:block :build ...
    7:  draw triangle :buildBlock:metaglass :buildBlock:rotation :bu ...
    8:  draw triangle :buildBlockAt:block :buildBlockAt:building :bu ...
    9:  draw triangle :buildBlockAt:x :buildBlockAt:y :buildTitanium ...
   10:  draw triangle :buildTitaniumDrillCfg:best :buildTitaniumDril ...
   11:  draw triangle :checkOre.2:count :checkOre.1:count :checkOre. ...
   12:  draw triangle :checkOre.3:floor :checkOre:floor :checkOre.1: ...
   13:  draw triangle :depositItems:item :fetchBlock:block :fetchBlo ...
   14:  draw triangle :locateOre:y :locateOreAway:angle :locateOreAw ...
   15:  draw triangle :meetTarget:copper :meetTarget:count :meetTarg ...
   16:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre: ...
   17:  draw triangle :mineOre:x :mineOre:y :moveTo:radius :moveTo.1 ...
   18:  draw triangle :moveTo:y :moveToBlock:block :moveToBlock:radi ...
   19:  draw triangle :supplyBase:coal.1 :supplyBase:sand.1 :supplyB ...
   20:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing  ...
        label *label457                                              ...
   21:  set .press null                                              ...
   22:  set .generator null                                          ...
   23:  set .battery null                                            ...
   24:  set .smelter null                                            ...
   25:  set .titanium_drill null                                     ...
   26:  set .unloader1 null                                          ...
   27:  set .nextBlock ""                                            CoreBuilder.mnd: remote var
   28:  set .copperTarget 0                                          ...
   29:  set .leadTarget 0                                            ...
   30:  set .graphiteTarget 0                                        ...
   31:  set .siliconTarget 0                                         ...
   32:  set .titaniumTarget 0                                        ...
   33:  set .metaglassTarget 0                                       ...
   34:  set .totalTargets 0                                          ...
   35:  set .powerTarget 0                                           ...
   36:  set .transportTarget 0                                       ...
   37:  set .transportItem null                                      ...
   38:  set .status1 ""                                              ...
   39:  set .status2 ""                                              ...
   40:  set .item2 ""                                                ...
   41:  set .block2 ""                                               ...
   42:  set .status3 ""                                              ...
   43:  set .titaniumTrigger 7                                       CoreBuilder.mnd: var
   44:  set *signature "0:v1"                                        CoreBuilder.mnd: #set target = 8;
   45:  set .powerTarget 400                                         ...
        label *label15                                               CoreBuilder.mnd: do
   46:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   47:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   48:  jump *label15 equal .core null                               CoreBuilder.mnd: do
   49:  set :buildBlock:block @graphite-press                        CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   50:  set :buildBlock:copper 75                                    ...
   51:  set :buildBlock:lead 30                                      ...
   52:  set :buildBlock:graphite 0                                   ...
   53:  set :buildBlock:silicon 0                                    ...
   54:  set :buildBlock:titanium 0                                   ...
   55:  set :buildBlock:metaglass 0                                  ...
   56:  set :buildBlock:rotation 0                                   ...
   57:  set :buildBlock:config null                                  ...
   58:  setaddr :buildBlock*retaddr *label23                         ...
   59:  op add :buildBlock:x .coreX -1.5                             CoreBuilder.mnd: var x = coreX + offsetX;
   60:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
   61:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label23                                               ...
   62:  set *tmp16 :buildBlock*retval                                ...
   63:  set .press *tmp16                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   64:  set :buildBlock:block @battery                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   65:  set :buildBlock:copper 5                                     ...
   66:  set :buildBlock:lead 20                                      ...
   67:  set :buildBlock:graphite 0                                   ...
   68:  set :buildBlock:silicon 0                                    ...
   69:  set :buildBlock:titanium 0                                   ...
   70:  set :buildBlock:metaglass 0                                  ...
   71:  set :buildBlock:rotation 0                                   ...
   72:  set :buildBlock:config null                                  ...
   73:  setaddr :buildBlock*retaddr *label29                         ...
   74:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
   75:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
   76:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label29                                               ...
   77:  set *tmp20 :buildBlock*retval                                ...
   78:  set .battery *tmp20                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   79:  set :buildBlock:block @combustion-generator                  CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   80:  set :buildBlock:copper 25                                    ...
   81:  set :buildBlock:lead 15                                      ...
   82:  set :buildBlock:graphite 0                                   ...
   83:  set :buildBlock:silicon 0                                    ...
   84:  set :buildBlock:titanium 0                                   ...
   85:  set :buildBlock:metaglass 0                                  ...
   86:  set :buildBlock:rotation 0                                   ...
   87:  set :buildBlock:config null                                  ...
   88:  setaddr :buildBlock*retaddr *label35                         ...
   89:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
   90:  op add :buildBlock:y .coreY 3                                CoreBuilder.mnd: var y = coreY + offsetY;
   91:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label35                                               ...
   92:  set *tmp24 :buildBlock*retval                                ...
   93:  set .generator *tmp24                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   94:  set :buildBlock:block @battery                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   95:  set :buildBlock:copper 5                                     ...
   96:  set :buildBlock:lead 20                                      ...
   97:  set :buildBlock:graphite 0                                   ...
   98:  set :buildBlock:silicon 0                                    ...
   99:  set :buildBlock:titanium 0                                   ...
  100:  set :buildBlock:metaglass 0                                  ...
  101:  set :buildBlock:rotation 0                                   ...
  102:  set :buildBlock:config null                                  ...
  103:  setaddr :buildBlock*retaddr *label41                         ...
  104:  op add :buildBlock:x .coreX -1                               CoreBuilder.mnd: var x = coreX + offsetX;
  105:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
  106:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label41                                               ...
  107:  set :buildBlock:block @silicon-smelter                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  108:  set :buildBlock:copper 30                                    ...
  109:  set :buildBlock:lead 25                                      ...
  110:  set :buildBlock:graphite 0                                   ...
  111:  set :buildBlock:silicon 0                                    ...
  112:  set :buildBlock:titanium 0                                   ...
  113:  set :buildBlock:metaglass 0                                  ...
  114:  set :buildBlock:rotation 0                                   ...
  115:  set :buildBlock:config null                                  ...
  116:  setaddr :buildBlock*retaddr *label47                         ...
  117:  op add :buildBlock:x .coreX 1.5                              CoreBuilder.mnd: var x = coreX + offsetX;
  118:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  119:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label47                                               ...
  120:  set *tmp32 :buildBlock*retval                                ...
  121:  set .smelter *tmp32                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  122:  set :buildTitaniumDrillCfg:distance 32                       CoreBuilder.mnd: var distance = 32;
  123:  set :buildTitaniumDrillCfg:angle 0                           CoreBuilder.mnd: var angle = 0;
  124:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
  125:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: var minimum = 3;
        label *label50                                               CoreBuilder.mnd: while true do
  126:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  127:  set :meetTarget:copper 18                                    ...
  128:  set :meetTarget:lead 0                                       ...
  129:  set :meetTarget:graphite 10                                  ...
  130:  set :meetTarget:silicon 0                                    ...
  131:  set :meetTarget:titanium 0                                   ...
  132:  set :meetTarget:metaglass 0                                  ...
  133:  setaddr :meetTarget*retaddr *label53                         ...
  134:  call *label10 *invalid :meetTarget*retval                    ...
        label *label53                                               ...
  135:  set :locateOreAway:distance :buildTitaniumDrillCfg:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  136:  set :locateOreAway:angle :buildTitaniumDrillCfg:angle        ...
        label *label55                                               CoreBuilder.mnd: while true do
  137:  set :locateOre:ore @titanium                                 CoreBuilder.mnd: locateOre(ore, out x, out y);
  138:  setaddr :locateOre*retaddr *label58                          ...
  139:  call *label5 *invalid :locateOre*retval                      ...
        label *label58                                               ...
  140:  set :locateOreAway:x :locateOre:x                            ...
  141:  set :locateOreAway:y :locateOre:y                            ...
  142:  op sub *tmp39 :locateOre:x .coreX                            CoreBuilder.mnd: if abs(x - coreX) >= 8 or abs(y - coreY) >= 8 then break; end;
  143:  op abs *tmp40 *tmp39 0                                       ...
  144:  op greaterThanEq *tmp41 *tmp40 8                             ...
  145:  op sub *tmp42 :locateOre:y .coreY                            ...
  146:  op abs *tmp43 *tmp42 0                                       ...
  147:  op greaterThanEq *tmp44 *tmp43 8                             ...
  148:  op or *tmp45 *tmp41 *tmp44                                   ...
  149:  jump *label57 notEqual *tmp45 false                          ...
  150:  op sin *tmp48 :locateOreAway:angle 0                         CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  151:  op mul *tmp49 *tmp48 :locateOreAway:distance                 ...
  152:  op add *tmp50 .coreX *tmp49                                  ...
  153:  op cos *tmp51 :locateOreAway:angle 0                         ...
  154:  op mul *tmp52 *tmp51 :locateOreAway:distance                 ...
  155:  op add *tmp53 .coreY *tmp52                                  ...
  156:  set :moveTo.1:x *tmp50                                       ...
  157:  set :moveTo.1:y *tmp53                                       ...
  158:  setaddr :moveTo.1*retaddr *label62                           ...
  159:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label62                                               ...
  160:  op add :locateOreAway:distance :locateOreAway:distance 4     CoreBuilder.mnd: distance += 4;
  161:  op add :locateOreAway:angle :locateOreAway:angle 45          CoreBuilder.mnd: angle += 45;
  162:  jump *label55 always 0 0                                     CoreBuilder.mnd: while true do
        label *label57                                               ...
  163:  set :buildTitaniumDrillCfg:distance :locateOreAway:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  164:  set :buildTitaniumDrillCfg:angle :locateOreAway:angle        ...
  165:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  166:  set :moveTo.1:y :locateOreAway:y                             ...
  167:  setaddr :moveTo.1*retaddr *label63                           ...
  168:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label63                                               ...
  169:  set :buildTitaniumDrillCfg:ax :locateOreAway:x               CoreBuilder.mnd: var ax = x, ay = y;
  170:  set :buildTitaniumDrillCfg:ay :locateOreAway:y               ...
  171:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, dx = 0, dy = 0;
  172:  set :buildTitaniumDrillCfg:dx 0                              ...
  173:  set :buildTitaniumDrillCfg:dy 0                              ...
  174:  set :buildTitaniumDrillCfg:searches 0                        CoreBuilder.mnd: SearchLoop:
        label *label346                                              ...
  175:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax : CoreBuilder.mnd: ax += dx;
  176:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay : CoreBuilder.mnd: ay += dy;
  177:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: best = 0;
  178:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  179:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  180:  jump *label377 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  181:  set :checkOre:count 1                                        ...
        label *label377                                              ...
  182:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  183:  set :checkOre.1:count :checkOre:count                        ...
  184:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  185:  jump *label380 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  186:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label380                                              ...
  187:  op add *tmp68 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  188:  set :checkOre.2:count :checkOre.1:count                      ...
  189:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  190:  jump *label383 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  191:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label383                                              ...
  192:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  193:  ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  194:  jump *label386 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  195:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label386                                              ...
  196:  jump *label391 lessThanEq :checkOre.3:count 0                CoreBuilder.mnd: if count > best then
  197:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  198:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  199:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  200:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label391                                              CoreBuilder.mnd: if count > best then
  201:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  202:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  203:  jump *label397 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  204:  set :checkOre:count 1                                        ...
        label *label397                                              ...
  205:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  206:  set :checkOre.1:count :checkOre:count                        ...
  207:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  208:  jump *label400 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  209:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label400                                              ...
  210:  op add *tmp68 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  211:  set :checkOre.2:count :checkOre.1:count                      ...
  212:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  213:  jump *label403 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  214:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label403                                              ...
  215:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  216:  ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  217:  jump *label406 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  218:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label406                                              ...
  219:  jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  220:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  221:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  222:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  223:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label411                                              CoreBuilder.mnd: if count > best then
  224:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  225:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  226:  jump *label417 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  227:  set :checkOre:count 1                                        ...
        label *label417                                              ...
  228:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  229:  set :checkOre.1:count :checkOre:count                        ...
  230:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  231:  jump *label420 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  232:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label420                                              ...
  233:  op add *tmp68 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  234:  set :checkOre.2:count :checkOre.1:count                      ...
  235:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  236:  jump *label423 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  237:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label423                                              ...
  238:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  239:  ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  240:  jump *label426 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  241:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label426                                              ...
  242:  jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  243:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  244:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  245:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  246:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label431                                              CoreBuilder.mnd: if count > best then
  247:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  248:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  249:  jump *label437 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  250:  set :checkOre:count 1                                        ...
        label *label437                                              ...
  251:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  252:  set :checkOre.1:count :checkOre:count                        ...
  253:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  254:  jump *label440 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  255:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label440                                              ...
  256:  op add *tmp68 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  257:  set :checkOre.2:count :checkOre.1:count                      ...
  258:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp68 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  259:  jump *label443 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  260:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label443                                              ...
  261:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  262:  ucontrol getBlock :checkOre.1:x *tmp68 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  263:  jump *label446 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  264:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label446                                              ...
  265:  jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  266:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  267:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  268:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  269:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label451                                              CoreBuilder.mnd: if count > best then
  270:  op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCf CoreBuilder.mnd: SearchLoop:
  271:  jump *label346 lessThan :buildTitaniumDrillCfg:searches 5    ...
        label *label66                                               ...
  272:  jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildT CoreBuilder.mnd: if best > minimum then
  273:  op div *tmp89 :buildTitaniumDrillCfg:dx 2                    CoreBuilder.mnd: ax = ax + dx / 2;
  274:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax * ...
  275:  op div *tmp91 :buildTitaniumDrillCfg:dy 2                    CoreBuilder.mnd: ay = ay + dy / 2;
  276:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay * ...
  277:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, ax, ay, null, 0, true);
  278:  set :buildBlockAt:x :buildTitaniumDrillCfg:ax                ...
  279:  set :buildBlockAt:y :buildTitaniumDrillCfg:ay                ...
  280:  set :buildBlockAt:rotation null                              ...
  281:  set :buildBlockAt:config 0                                   ...
  282:  set :buildBlockAt:skipError true                             ...
  283:  setaddr :buildBlockAt*retaddr *label92                       ...
  284:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label92                                               ...
  285:  jump *label93 equal :buildBlockAt*retval null                CoreBuilder.mnd: if result != null then return result; end;
  286:  set *tmp37 :buildBlockAt*retval                              ...
  287:  jump *label49 always 0 0                                     ...
        label *label93                                               ...
  288:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
        label *label90                                               CoreBuilder.mnd: if best > minimum then
  289:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  290:  jump *label50 lessThanEq :buildTitaniumDrillCfg:attempts 5   ...
  291:  op sin *tmp98 :locateOreAway:angle 0                         CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  292:  op mul *tmp99 *tmp98 :locateOreAway:distance                 ...
  293:  op add *tmp100 .coreX *tmp99                                 ...
  294:  op cos *tmp101 :locateOreAway:angle 0                        ...
  295:  op mul *tmp102 *tmp101 :locateOreAway:distance               ...
  296:  op add *tmp103 .coreY *tmp102                                ...
  297:  set :moveTo.1:x *tmp100                                      ...
  298:  set :moveTo.1:y *tmp103                                      ...
  299:  setaddr :moveTo.1*retaddr *label98                           ...
  300:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label98                                               ...
  301:  op add :buildTitaniumDrillCfg:distance :locateOreAway:distan CoreBuilder.mnd: distance += 4;
  302:  op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45  CoreBuilder.mnd: angle += 45;
  303:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  304:  op sub *tmp104 :buildTitaniumDrillCfg:minimum 1              CoreBuilder.mnd: minimum = max(minimum - 1, 1);
  305:  op max :buildTitaniumDrillCfg:minimum *tmp104 1              ...
  306:  jump *label50 always 0 0                                     CoreBuilder.mnd: while true do
        label *label49                                               CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEU_DRILL);
  307:  set .titanium_drill *tmp37                                   CoreBuilder.mnd: titanium_drill = buildTitaniumDrill();
  308:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  309:  set :buildBlock:copper 0                                     ...
  310:  set :buildBlock:lead 0                                       ...
  311:  set :buildBlock:graphite 0                                   ...
  312:  set :buildBlock:silicon 30                                   ...
  313:  set :buildBlock:titanium 25                                  ...
  314:  set :buildBlock:metaglass 0                                  ...
  315:  set :buildBlock:rotation 0                                   ...
  316:  set :buildBlock:config null                                  ...
  317:  setaddr :buildBlock*retaddr *label104                        ...
  318:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
  319:  op add :buildBlock:y .coreY 2                                CoreBuilder.mnd: var y = coreY + offsetY;
  320:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label104                                              ...
  321:  set *tmp106 :buildBlock*retval                               ...
  322:  set .unloader1 *tmp106                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  323:  set :buildBlock:block @power-node                            CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  324:  set :buildBlock:copper 2                                     ...
  325:  set :buildBlock:lead 6                                       ...
  326:  set :buildBlock:graphite 0                                   ...
  327:  set :buildBlock:silicon 0                                    ...
  328:  set :buildBlock:titanium 0                                   ...
  329:  set :buildBlock:metaglass 0                                  ...
  330:  set :buildBlock:rotation 0                                   ...
  331:  set :buildBlock:config null                                  ...
  332:  setaddr :buildBlock*retaddr *label110                        ...
  333:  op add :buildBlock:x .coreX -2                               CoreBuilder.mnd: var x = coreX + offsetX;
  334:  op add :buildBlock:y .coreY -1                               CoreBuilder.mnd: var y = coreY + offsetY;
  335:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label110                                              ...
  336:  set :buildBlock:block @micro-processor                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  337:  set :buildBlock:copper 90                                    ...
  338:  set :buildBlock:lead 50                                      ...
  339:  set :buildBlock:graphite 0                                   ...
  340:  set :buildBlock:silicon 50                                   ...
  341:  set :buildBlock:titanium 0                                   ...
  342:  set :buildBlock:metaglass 0                                  ...
  343:  set :buildBlock:rotation 0                                   ...
  344:  setaddr :buildBlock*retaddr *label116                        ...
  345:  op add :buildBlock:x .coreX 1                                CoreBuilder.mnd: var x = coreX + offsetX;
  346:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
  347:  set :buildBlock:config processor1                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  348:  call *label12 *invalid :buildBlock*retval                    ...
        label *label116                                              ...
  349:  set *tmp114 :buildBlock*retval                               ...
  350:  set .processor *tmp114                                       CoreBuilder.mnd: processor = buildBlockFromCfg(ref PROCESSOR);
  351:  write .core *tmp114 ".core"                                  CoreBuilder.mnd: processor.core = core;
  352:  write *tmp20 *tmp114 ".battery"                              CoreBuilder.mnd: processor.battery = battery;
  353:  write *tmp24 *tmp114 ".generator"                            CoreBuilder.mnd: processor.generator = generator;
  354:  write *tmp32 *tmp114 ".smelter"                              CoreBuilder.mnd: processor.smelter = smelter;
  355:  write *tmp16 *tmp114 ".press"                                CoreBuilder.mnd: processor.press = press;
  356:  set :buildBlock:block @air-factory                           CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  357:  set :buildBlock:copper 60                                    ...
  358:  set :buildBlock:lead 70                                      ...
  359:  set :buildBlock:graphite 0                                   ...
  360:  set :buildBlock:silicon 0                                    ...
  361:  set :buildBlock:titanium 0                                   ...
  362:  set :buildBlock:metaglass 0                                  ...
  363:  set :buildBlock:rotation 3                                   ...
  364:  set :buildBlock:config @mono                                 ...
  365:  setaddr :buildBlock*retaddr *label122                        ...
  366:  op add :buildBlock:x .coreX -4                               CoreBuilder.mnd: var x = coreX + offsetX;
  367:  op add :buildBlock:y .coreY -1                               CoreBuilder.mnd: var y = coreY + offsetY;
  368:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label122                                              ...
  369:  set *tmp119 :buildBlock*retval                               ...
  370:  write *tmp119 *tmp114 ".factory"                             CoreBuilder.mnd: processor.factory = factory;
  371:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  372:  set :buildBlock:copper 0                                     ...
  373:  set :buildBlock:lead 0                                       ...
  374:  set :buildBlock:graphite 0                                   ...
  375:  set :buildBlock:silicon 30                                   ...
  376:  set :buildBlock:titanium 25                                  ...
  377:  set :buildBlock:metaglass 0                                  ...
  378:  set :buildBlock:rotation 0                                   ...
  379:  set :buildBlock:config null                                  ...
  380:  setaddr :buildBlock*retaddr *label128                        ...
  381:  op add :buildBlock:x .coreX -2                               CoreBuilder.mnd: var x = coreX + offsetX;
  382:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  383:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label128                                              ...
  384:  set *tmp123 :buildBlock*retval                               ...
  385:  write *tmp123 *tmp114 ".unloader2"                           CoreBuilder.mnd: processor.unloader2 = unloader2;
  386:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  387:  set :buildBlock:copper 4                                     ...
  388:  set :buildBlock:lead 2                                       ...
  389:  set :buildBlock:graphite 0                                   ...
  390:  set :buildBlock:silicon 0                                    ...
  391:  set :buildBlock:titanium 0                                   ...
  392:  set :buildBlock:metaglass 0                                  ...
  393:  set :buildBlock:rotation 0                                   ...
  394:  set :buildBlock:config null                                  ...
  395:  setaddr :buildBlock*retaddr *label134                        ...
  396:  op add :buildBlock:x .coreX -3                               CoreBuilder.mnd: var x = coreX + offsetX;
  397:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  398:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label134                                              ...
  399:  write @mono *tmp114 ".unitToProduce"                         CoreBuilder.mnd: processor.unitToProduce = @mono;
  400:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  401:  set :buildBlock:copper 0                                     ...
  402:  set :buildBlock:lead 0                                       ...
  403:  set :buildBlock:graphite 0                                   ...
  404:  set :buildBlock:silicon 30                                   ...
  405:  set :buildBlock:titanium 25                                  ...
  406:  set :buildBlock:metaglass 0                                  ...
  407:  set :buildBlock:rotation 0                                   ...
  408:  set :buildBlock:config null                                  ...
  409:  setaddr :buildBlock*retaddr *label140                        ...
  410:  op add :buildBlock:x .coreX 2                                CoreBuilder.mnd: var x = coreX + offsetX;
  411:  set :buildBlock:y .coreY                                     CoreBuilder.mnd: var y = coreY + offsetY;
  412:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label140                                              ...
  413:  set :buildBlock:block @kiln                                  CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  414:  set :buildBlock:copper 60                                    ...
  415:  set :buildBlock:lead 30                                      ...
  416:  set :buildBlock:graphite 30                                  ...
  417:  set :buildBlock:silicon 0                                    ...
  418:  set :buildBlock:titanium 0                                   ...
  419:  set :buildBlock:metaglass 0                                  ...
  420:  set :buildBlock:rotation 0                                   ...
  421:  set :buildBlock:config null                                  ...
  422:  setaddr :buildBlock*retaddr *label146                        ...
  423:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: var x = coreX + offsetX;
  424:  op add :buildBlock:y .coreY 0.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  425:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label146                                              ...
  426:  write null *tmp114 ".kiln"                                   CoreBuilder.mnd: processor.kiln = kiln;
  427:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  428:  set :buildBlock:copper 3                                     ...
  429:  set :buildBlock:lead 0                                       ...
  430:  set :buildBlock:graphite 0                                   ...
  431:  set :buildBlock:silicon 0                                    ...
  432:  set :buildBlock:titanium 0                                   ...
  433:  set :buildBlock:metaglass 0                                  ...
  434:  set :buildBlock:rotation 0                                   ...
  435:  set :buildBlock:config null                                  ...
  436:  setaddr :buildBlock*retaddr *label152                        ...
  437:  op add :buildBlock:x .coreX 2                                CoreBuilder.mnd: var x = coreX + offsetX;
  438:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  439:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label152                                              ...
  440:  set :buildBlock:block @water-extractor                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  441:  set :buildBlock:copper 30                                    ...
  442:  set :buildBlock:lead 30                                      ...
  443:  set :buildBlock:graphite 30                                  ...
  444:  set :buildBlock:silicon 0                                    ...
  445:  set :buildBlock:titanium 0                                   ...
  446:  set :buildBlock:metaglass 30                                 ...
  447:  set :buildBlock:rotation 0                                   ...
  448:  set :buildBlock:config null                                  ...
  449:  setaddr :buildBlock*retaddr *label158                        ...
  450:  op add :buildBlock:x .coreX -3.5                             CoreBuilder.mnd: var x = coreX + offsetX;
  451:  op add :buildBlock:y .coreY 4.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  452:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label158                                              ...
  453:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  454:  set :buildBlock:copper 35                                    ...
  455:  set :buildBlock:lead 40                                      ...
  456:  set :buildBlock:graphite 25                                  ...
  457:  set :buildBlock:silicon 30                                   ...
  458:  set :buildBlock:titanium 0                                   ...
  459:  set :buildBlock:metaglass 0                                  ...
  460:  set :buildBlock:rotation 0                                   ...
  461:  set :buildBlock:config null                                  ...
  462:  setaddr :buildBlock*retaddr *label164                        ...
  463:  op add :buildBlock:x .coreX -3.5                             CoreBuilder.mnd: var x = coreX + offsetX;
  464:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  465:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label164                                              ...
  466:  set *tmp147 :buildBlock*retval                               ...
  467:  write *tmp147 *tmp114 ".generator2"                          CoreBuilder.mnd: processor.generator2 = generator2;
  468:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  469:  set :buildBlock:copper 2                                     ...
  470:  set :buildBlock:lead 2                                       ...
  471:  set :buildBlock:graphite 0                                   ...
  472:  set :buildBlock:silicon 0                                    ...
  473:  set :buildBlock:titanium 0                                   ...
  474:  set :buildBlock:metaglass 0                                  ...
  475:  set :buildBlock:rotation 0                                   ...
  476:  set :buildBlock:config @coal                                 ...
  477:  setaddr :buildBlock*retaddr *label170                        ...
  478:  op add :buildBlock:x .coreX -4                               CoreBuilder.mnd: var x = coreX + offsetX;
  479:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  480:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label170                                              ...
        label *label171                                              CoreBuilder.mnd: while true do
  481:  setaddr :supplyBase*retaddr *label174                        CoreBuilder.mnd: supplyBase();
  482:  call *label9 *invalid :supplyBase*retval                     ...
        label *label174                                              ...
  483:  jump *label171 always 0 0                                    CoreBuilder.mnd: while true do
        label *label0                                                CoreBuilder.mnd: void moveTo(x, y, radius)
  484:  set .status3 "Moving..."                                     CoreBuilder.mnd: status3 = text;
  485:  op sub *tmp158 :moveTo:radius 0.5                            CoreBuilder.mnd: while !within(x, y, radius) do
  486:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156 0 ...
  487:  jump *label180 notEqual *tmp156 false                        ...
        label *label372                                              ...
  488:  ucontrol approach :moveTo:x :moveTo:y *tmp158 0 0            CoreBuilder.mnd: approach(x, y, radius - 0.5);
  489:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp156 0 CoreBuilder.mnd: while !within(x, y, radius) do
  490:  jump *label372 equal *tmp156 false                           ...
        label *label180                                              ...
  491:  return :moveTo*retaddr                                       CoreBuilder.mnd: void moveTo(x, y, radius)
        label *label1                                                CoreBuilder.mnd: void moveTo(x, y)
  492:  set :moveTo:x :moveTo.1:x                                    CoreBuilder.mnd: moveTo(x, y, REGULAR_RADIUS);
  493:  set :moveTo:y :moveTo.1:y                                    ...
  494:  set :moveTo:radius 5                                         ...
  495:  setaddr :moveTo*retaddr *label182                            ...
  496:  call *label0 *invalid :moveTo*retval                         ...
        label *label182                                              ...
  497:  return :moveTo.1*retaddr                                     CoreBuilder.mnd: void moveTo(x, y)
        label *label2                                                CoreBuilder.mnd: void moveToEmpty(x, y)
  498:  sensor *tmp161 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  499:  jump *label184 equal *tmp161 null                            ...
  500:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label184                                              ...
  501:  set :moveTo.1:x :moveToEmpty:x                               CoreBuilder.mnd: moveTo(x, y);
  502:  set :moveTo.1:y :moveToEmpty:y                               ...
  503:  setaddr :moveTo.1*retaddr *label186                          ...
  504:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label186                                              ...
  505:  sensor *tmp164 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  506:  jump *label189 equal *tmp164 null                            ...
        label *label373                                              ...
  507:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  508:  sensor *tmp164 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  509:  jump *label373 notEqual *tmp164 null                         ...
        label *label189                                              ...
  510:  return :moveToEmpty*retaddr                                  CoreBuilder.mnd: void moveToEmpty(x, y)
        label *label3                                                CoreBuilder.mnd: void moveToBlock(block, radius)
  511:  sensor *tmp166 :moveToBlock:block @x                         CoreBuilder.mnd: moveTo(block.@x, block.@y, radius);
  512:  sensor *tmp167 :moveToBlock:block @y                         ...
  513:  set :moveTo:x *tmp166                                        ...
  514:  set :moveTo:y *tmp167                                        ...
  515:  set :moveTo:radius :moveToBlock:radius                       ...
  516:  setaddr :moveTo*retaddr *label191                            ...
  517:  call *label0 *invalid :moveTo*retval                         ...
        label *label191                                              ...
  518:  return :moveToBlock*retaddr                                  CoreBuilder.mnd: void moveToBlock(block, radius)
        label *label4                                                CoreBuilder.mnd: void depositItems(block, item, fromMining)
  519:  set .status3 "Depositing..."                                 CoreBuilder.mnd: status3 = text;
  520:  sensor *tmp168 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem == item then
  521:  jump *label194 notEqual *tmp168 :depositItems:item           ...
  522:  set *tmp173 5                                                CoreBuilder.mnd: moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
  523:  op equal *tmp171 :depositItems:block .core                   ...
  524:  op land *tmp172 :depositItems:fromMining *tmp171             ...
  525:  jump *label197 equal *tmp172 false                           ...
  526:  set *tmp173 7                                                ...
        label *label197                                              ...
  527:  set :moveToBlock:block :depositItems:block                   ...
  528:  set :moveToBlock:radius *tmp173                              ...
  529:  setaddr :moveToBlock*retaddr *label198                       ...
  530:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label198                                              ...
  531:  sensor :depositItems:cap :depositItems:block @itemCapacity   CoreBuilder.mnd: var cap = block.@itemCapacity;
        label *label199                                              CoreBuilder.mnd: do
  532:  ucontrol itemDrop :depositItems:block 30 0 0 0               CoreBuilder.mnd: itemDrop(block, capacity);
  533:  sensor *tmp175 :depositItems:block :depositItems:item        CoreBuilder.mnd: if block.sensor(item) >= cap then break; end;
  534:  jump *label195 greaterThanEq *tmp175 :depositItems:cap       ...
  535:  sensor *tmp178 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null;
  536:  jump *label199 notEqual *tmp178 null                         CoreBuilder.mnd: do
  537:  jump *label195 always 0 0                                    CoreBuilder.mnd: if @unit.@firstItem == item then
        label *label194                                              ...
  538:  sensor *tmp180 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  539:  jump *label206 equal *tmp180 null                            ...
        label *label374                                              ...
  540:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  541:  sensor *tmp180 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  542:  jump *label374 notEqual *tmp180 null                         ...
        label *label206                                              ...
        label *label195                                              CoreBuilder.mnd: if @unit.@firstItem == item then
  543:  set .transportTarget 0                                       CoreBuilder.mnd: transportTarget = 0;
  544:  return :depositItems*retaddr                                 CoreBuilder.mnd: void depositItems(block, item, fromMining)
        label *label5                                                CoreBuilder.mnd: void locateOre(ore, out x, out y)
  545:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  546:  jump *label208 notEqual *tmp182 false                        ...
  547:  print "[salmon]Cannot locate "                               CoreBuilder.mnd: print("[salmon]", text);
  548:  print :locateOre:ore                                         ...
  549:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  550:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label208                                              CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  551:  return :locateOre*retaddr                                    CoreBuilder.mnd: void locateOre(ore, out x, out y)
        label *label6                                                CoreBuilder.mnd: void mineOre(ore, amount, block)
  552:  set .transportTarget :mineOre:amount                         CoreBuilder.mnd: transportTarget = amount;
  553:  set .transportItem :mineOre:ore                              CoreBuilder.mnd: transportItem = ore;
  554:  set :locateOre:ore :mineOre:ore                              CoreBuilder.mnd: locateOre(ore, out x, out y);
  555:  setaddr :locateOre*retaddr *label212                         ...
  556:  call *label5 *invalid :locateOre*retval                      ...
        label *label212                                              ...
  557:  set :mineOre:x :locateOre:x                                  ...
  558:  set :mineOre:y :locateOre:y                                  ...
  559:  set :moveToEmpty:x :locateOre:x                              CoreBuilder.mnd: moveToEmpty(x, y);
  560:  set :moveToEmpty:y :locateOre:y                              ...
  561:  setaddr :moveToEmpty*retaddr *label213                       ...
  562:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label213                                              ...
  563:  set .status3 "Mining..."                                     CoreBuilder.mnd: status3 = text;
        label *label215                                              CoreBuilder.mnd: do
  564:  sensor :mineOre:item @unit @firstItem                        CoreBuilder.mnd: var item = @unit.@firstItem;
  565:  op notEqual *tmp187 :mineOre:item null                       CoreBuilder.mnd: if item != null && item != ore then break; end;
  566:  op notEqual *tmp188 :mineOre:item :mineOre:ore               ...
  567:  op land *tmp189 *tmp187 *tmp188                              ...
  568:  jump *label217 notEqual *tmp189 false                        ...
  569:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    CoreBuilder.mnd: mine(x, y);
  570:  sensor *tmp191 @unit @totalItems                             CoreBuilder.mnd: while @unit.@totalItems < amount;
  571:  jump *label215 lessThan *tmp191 :mineOre:amount              CoreBuilder.mnd: do
        label *label217                                              ...
  572:  ucontrol unbind 0 0 0 0 0                                    CoreBuilder.mnd: unbind();
  573:  set :depositItems:block :mineOre:block                       CoreBuilder.mnd: depositItems(block, ore, true);
  574:  set :depositItems:item :mineOre:ore                          ...
  575:  set :depositItems:fromMining true                            ...
  576:  setaddr :depositItems*retaddr *label220                      ...
  577:  call *label4 *invalid :depositItems*retval                   ...
        label *label220                                              ...
  578:  return :mineOre*retaddr                                      CoreBuilder.mnd: void mineOre(ore, amount, block)
        label *label7                                                CoreBuilder.mnd: void mineOre(ore)
  579:  set :mineOre:ore :mineOre.1:ore                              CoreBuilder.mnd: mineOre(ore, capacity, core);
  580:  set :mineOre:amount 30                                       ...
  581:  set :mineOre:block .core                                     ...
  582:  setaddr :mineOre*retaddr *label222                           ...
  583:  call *label6 *invalid :mineOre*retval                        ...
        label *label222                                              ...
  584:  return :mineOre.1*retaddr                                    CoreBuilder.mnd: void mineOre(ore)
        label *label8                                                CoreBuilder.mnd: void fetchBlock(block, item)
  585:  sensor .transportTarget :fetchBlock:block @itemCapacity      CoreBuilder.mnd: transportTarget = block.@itemCapacity;
  586:  set .transportItem :fetchBlock:item                          CoreBuilder.mnd: transportItem = item;
  587:  set .status2 "Fetching "                                     CoreBuilder.mnd: status2 = text;
  588:  set .item2 :fetchBlock:item                                  CoreBuilder.mnd: item2 = item;
  589:  set .block2 :fetchBlock:block                                CoreBuilder.mnd: block2 = block;
  590:  sensor *tmp195 :fetchBlock:block @x                          CoreBuilder.mnd: moveToEmpty(block.@x, block.@y);
  591:  sensor *tmp196 :fetchBlock:block @y                          ...
  592:  set :moveToEmpty:x *tmp195                                   ...
  593:  set :moveToEmpty:y *tmp196                                   ...
  594:  setaddr :moveToEmpty*retaddr *label225                       ...
  595:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label225                                              ...
        label *label226                                              CoreBuilder.mnd: do
  596:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  CoreBuilder.mnd: itemTake(block, item, capacity);
  597:  sensor :fetchBlock:unitItem @unit @firstItem                 CoreBuilder.mnd: var unitItem = @unit.@firstItem;
  598:  op notEqual *tmp198 :fetchBlock:unitItem null                CoreBuilder.mnd: if unitItem != null and unitItem != item then
  599:  op notEqual *tmp199 :fetchBlock:unitItem :fetchBlock:item    ...
  600:  op land *tmp200 *tmp198 *tmp199                              ...
  601:  jump *label229 equal *tmp200 false                           ...
  602:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
        label *label229                                              CoreBuilder.mnd: if unitItem != null and unitItem != item then
  603:  sensor *tmp202 @unit :fetchBlock:item                        CoreBuilder.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  604:  op lessThan *tmp203 *tmp202 30                               ...
  605:  sensor *tmp204 :fetchBlock:block :fetchBlock:item            ...
  606:  op land *tmp205 *tmp203 *tmp204                              ...
  607:  jump *label226 notEqual *tmp205 false                        CoreBuilder.mnd: do
  608:  set :depositItems:block .core                                CoreBuilder.mnd: depositItems(core, item, false);
  609:  set :depositItems:item :fetchBlock:item                      ...
  610:  set :depositItems:fromMining false                           ...
  611:  setaddr :depositItems*retaddr *label231                      ...
  612:  call *label4 *invalid :depositItems*retval                   ...
        label *label231                                              ...
  613:  return :fetchBlock*retaddr                                   CoreBuilder.mnd: void fetchBlock(block, item)
        label *label9                                                CoreBuilder.mnd: void supplyBase()
  614:  set :supplyBase:supplied false                               CoreBuilder.mnd: var supplied = false;
  615:  jump *label233 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  616:  sensor *tmp208 .core @graphite                               CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  617:  jump *label235 greaterThanEq *tmp208 .updatedGraphiteTarget  ...
  618:  sensor *tmp211 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  619:  jump *label237 greaterThanEq *tmp211 5                       ...
  620:  set .status1 "Meeting the graphite target"                   CoreBuilder.mnd: status1 = text;
  621:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  622:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  623:  set .block2 .press                                           CoreBuilder.mnd: block2 = block;
  624:  sensor *tmp214 .press @itemCapacity                          CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  625:  sensor *tmp215 .press @coal                                  ...
  626:  op sub :supplyBlock:missing *tmp214 *tmp215                  ...
  627:  jump *label242 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  628:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  629:  set :mineOre:amount :supplyBlock:missing                     ...
  630:  set :mineOre:block .press                                    ...
  631:  setaddr :mineOre*retaddr *label244                           ...
  632:  call *label6 *invalid :mineOre*retval                        ...
        label *label244                                              ...
        label *label242                                              CoreBuilder.mnd: if missing > 0 then
  633:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label237                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label235                                              CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  634:  sensor *tmp219 .core @silicon                                CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  635:  jump *label245 greaterThanEq *tmp219 .updatedSiliconTarget   ...
  636:  sensor *tmp222 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  637:  jump *label247 greaterThanEq *tmp222 5                       ...
  638:  set .status1 "Meeting the silicon target (coal)"             CoreBuilder.mnd: status1 = text;
  639:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  640:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  641:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  642:  sensor *tmp225 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  643:  sensor *tmp226 .smelter @coal                                ...
  644:  op sub :supplyBlock.1:missing *tmp225 *tmp226                ...
  645:  jump *label252 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  646:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  647:  set :mineOre:amount :supplyBlock.1:missing                   ...
  648:  set :mineOre:block .smelter                                  ...
  649:  setaddr :mineOre*retaddr *label254                           ...
  650:  call *label6 *invalid :mineOre*retval                        ...
        label *label254                                              ...
        label *label252                                              CoreBuilder.mnd: if missing > 0 then
  651:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
  652:  jump *label248 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label247                                              ...
  653:  sensor *tmp230 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  654:  jump *label255 greaterThanEq *tmp230 5                       ...
  655:  set .status1 "Meeting the silicon target (sand)"             CoreBuilder.mnd: status1 = text;
  656:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  657:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  658:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  659:  sensor *tmp233 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  660:  sensor *tmp234 .smelter @sand                                ...
  661:  op sub :supplyBlock.2:missing *tmp233 *tmp234                ...
  662:  jump *label260 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  663:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  664:  set :mineOre:amount :supplyBlock.2:missing                   ...
  665:  set :mineOre:block .smelter                                  ...
  666:  setaddr :mineOre*retaddr *label262                           ...
  667:  call *label6 *invalid :mineOre*retval                        ...
        label *label262                                              ...
        label *label260                                              CoreBuilder.mnd: if missing > 0 then
  668:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label255                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label248                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label245                                              CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  669:  sensor *tmp238 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  670:  jump *label234 greaterThanEq *tmp238 .powerTarget            ...
  671:  set .status1 "Supplying generator"                           CoreBuilder.mnd: status1 = text;
  672:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  673:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  674:  set .block2 .generator                                       CoreBuilder.mnd: block2 = block;
  675:  sensor *tmp241 .generator @itemCapacity                      CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  676:  sensor *tmp242 .generator @coal                              ...
  677:  op sub :supplyBlock.3:missing *tmp241 *tmp242                ...
  678:  jump *label268 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  679:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  680:  set :mineOre:amount :supplyBlock.3:missing                   ...
  681:  set :mineOre:block .generator                                ...
  682:  setaddr :mineOre*retaddr *label270                           ...
  683:  call *label6 *invalid :mineOre*retval                        ...
        label *label270                                              ...
        label *label268                                              CoreBuilder.mnd: if missing > 0 then
  684:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
  685:  jump *label234 always 0 0                                    CoreBuilder.mnd: if unloader1 == null then
        label *label233                                              ...
  686:  jump *label271 equal .processor null                         CoreBuilder.mnd: elsif processor != null then
  687:  sensor *tmp248 .core @coal                                   CoreBuilder.mnd: if core.@coal < 10 then
  688:  jump *label273 greaterThanEq *tmp248 10                      ...
  689:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  690:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  691:  setaddr :mineOre.1*retaddr *label276                         ...
  692:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label276                                              ...
  693:  return :supplyBase*retaddr                                   CoreBuilder.mnd: return;
        label *label273                                              CoreBuilder.mnd: if core.@coal < 10 then
        label *label271                                              CoreBuilder.mnd: elsif processor != null then
        label *label234                                              CoreBuilder.mnd: if unloader1 == null then
  694:  sensor *tmp251 .titanium_drill @titanium                     CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  695:  jump *label277 greaterThanEq *tmp251 .titaniumTrigger        ...
  696:  sensor *tmp254 .core @silicon                                CoreBuilder.mnd: if core.@silicon < siliconTarget then
  697:  jump *label279 greaterThanEq *tmp254 .siliconTarget          ...
  698:  set .status1 "Meeting the silicon target"                    CoreBuilder.mnd: status1 = text;
  699:  sensor :supplyBase:coal .core @coal                          CoreBuilder.mnd: var coal = core.@coal;
  700:  sensor :supplyBase:sand .core @sand                          CoreBuilder.mnd: var sand = core.@sand;
  701:  set *tmp260 @sand                                            CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  702:  jump *label283 greaterThanEq :supplyBase:coal :supplyBase:sa ...
  703:  set *tmp260 @coal                                            ...
        label *label283                                              ...
  704:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  705:  set .item2 *tmp260                                           CoreBuilder.mnd: item2 = item;
  706:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  707:  set :mineOre.1:ore *tmp260                                   CoreBuilder.mnd: mineOre(ore);
  708:  setaddr :mineOre.1*retaddr *label285                         ...
  709:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label285                                              ...
  710:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if core.@silicon < siliconTarget then
        label *label279                                              ...
  711:  sensor *tmp261 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
  712:  jump *label286 greaterThanEq *tmp261 .copperTarget           ...
  713:  set .status1 "Meeting the copper target"                     CoreBuilder.mnd: status1 = text;
  714:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  715:  set .item2 @copper                                           CoreBuilder.mnd: item2 = item;
  716:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  717:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  718:  setaddr :mineOre.1*retaddr *label290                         ...
  719:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label290                                              ...
  720:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < copperTarget then
        label *label286                                              ...
  721:  sensor *tmp264 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
  722:  jump *label291 greaterThanEq *tmp264 .leadTarget             ...
  723:  set .status1 "Meeting the lead target"                       CoreBuilder.mnd: status1 = text;
  724:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  725:  set .item2 @lead                                             CoreBuilder.mnd: item2 = item;
  726:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  727:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  728:  setaddr :mineOre.1*retaddr *label295                         ...
  729:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label295                                              ...
  730:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
        label *label291                                              ...
  731:  sensor *tmp267 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
  732:  jump *label296 greaterThanEq *tmp267 .metaglassTarget        ...
  733:  set .status1 "Meeting the metaglass target"                  CoreBuilder.mnd: status1 = text;
  734:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  735:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  736:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  737:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  738:  setaddr :mineOre.1*retaddr *label300                         ...
  739:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label300                                              ...
  740:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
        label *label296                                              ...
  741:  jump *label278 notEqual :supplyBase:supplied false           CoreBuilder.mnd: elsif !supplied then
  742:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  743:  sensor :supplyBase:coal.1 .core @coal                        CoreBuilder.mnd: var coal = core.@coal;
  744:  sensor :supplyBase:sand.1 .core @sand                        CoreBuilder.mnd: var sand = core.@sand;
  745:  set *tmp275 @sand                                            CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  746:  jump *label305 greaterThan :supplyBase:coal.1 :supplyBase:sa ...
  747:  set *tmp275 @coal                                            ...
        label *label305                                              ...
  748:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  749:  set .item2 *tmp275                                           CoreBuilder.mnd: item2 = item;
  750:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  751:  set :mineOre.1:ore *tmp275                                   CoreBuilder.mnd: mineOre(ore);
  752:  setaddr :mineOre.1*retaddr *label307                         ...
  753:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label307                                              ...
  754:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
        label *label277                                              ...
  755:  set .status1 "Fetching titanium"                             CoreBuilder.mnd: status1 = text;
  756:  set :fetchBlock:block .titanium_drill                        CoreBuilder.mnd: fetchBlock(titanium_drill, @titanium);
  757:  set :fetchBlock:item @titanium                               ...
  758:  setaddr :fetchBlock*retaddr *label309                        ...
  759:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label309                                              ...
        label *label278                                              CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  760:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label10                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  761:  set .nextBlock :meetTarget:block                             CoreBuilder.mnd: nextBlock = block;
  762:  set .copperTarget :meetTarget:copper                         CoreBuilder.mnd: copperTarget = copper;
  763:  set .leadTarget :meetTarget:lead                             CoreBuilder.mnd: leadTarget = lead;
  764:  set .graphiteTarget :meetTarget:graphite                     CoreBuilder.mnd: graphiteTarget = graphite;
  765:  set .siliconTarget :meetTarget:silicon                       CoreBuilder.mnd: siliconTarget = silicon;
  766:  set .titaniumTarget :meetTarget:titanium                     CoreBuilder.mnd: titaniumTarget = titanium;
  767:  set .metaglassTarget :meetTarget:metaglass                   CoreBuilder.mnd: metaglassTarget = metaglass;
  768:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  769:  op sign *tmp277 :meetTarget:lead 0                           ...
  770:  op add :meetTarget:count :meetTarget:count *tmp277           ...
  771:  op sign *tmp277 :meetTarget:graphite 0                       ...
  772:  op add :meetTarget:count :meetTarget:count *tmp277           ...
  773:  op sign *tmp277 :meetTarget:silicon 0                        ...
  774:  op add :meetTarget:count :meetTarget:count *tmp277           ...
  775:  op sign *tmp277 :meetTarget:titanium 0                       ...
  776:  op add :meetTarget:count :meetTarget:count *tmp277           ...
  777:  op sign *tmp277 :meetTarget:metaglass 0                      ...
  778:  op add :meetTarget:count :meetTarget:count *tmp277           ...
  779:  set .totalTargets :meetTarget:count                          CoreBuilder.mnd: totalTargets = count;
  780:  jump *label320 notEqual .processor null                      CoreBuilder.mnd: if processor == null then
  781:  op max .updatedGraphiteTarget 10 .graphiteTarget             CoreBuilder.mnd: updatedGraphiteTarget = max(10, graphiteTarget);
  782:  op max .updatedSiliconTarget 10 .siliconTarget               CoreBuilder.mnd: updatedSiliconTarget = max(10, siliconTarget);
  783:  jump *label321 always 0 0                                    CoreBuilder.mnd: if processor == null then
        label *label320                                              ...
  784:  op add *tmp282 .graphiteTarget 30                            CoreBuilder.mnd: processor.pressTarget = graphiteTarget + 30;
  785:  write *tmp282 .processor ".pressTarget"                      ...
  786:  op add *tmp283 .siliconTarget 30                             CoreBuilder.mnd: processor.smelterTarget = siliconTarget + 30;
  787:  write *tmp283 .processor ".smelterTarget"                    ...
  788:  op add *tmp284 .metaglassTarget 30                           CoreBuilder.mnd: processor.kilnTarget = metaglassTarget + 30;
  789:  write *tmp284 .processor ".kilnTarget"                       ...
        label *label321                                              CoreBuilder.mnd: if processor == null then
  790:  set .titaniumTrigger 100                                     CoreBuilder.mnd: titaniumTrigger = core.@titanium < titaniumTarget + 10 ? 7 : 100;
  791:  sensor *tmp285 .core @titanium                               ...
  792:  op add *tmp286 .titaniumTarget 10                            ...
  793:  jump *label323 greaterThanEq *tmp285 *tmp286                 ...
  794:  set .titaniumTrigger 7                                       ...
        label *label323                                              ...
  795:  sensor *tmp289 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  796:  op lessThan *tmp290 *tmp289 .copperTarget                    ...
  797:  sensor *tmp291 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  798:  op lessThan *tmp292 *tmp291 .leadTarget                      ...
  799:  op or *tmp294 *tmp290 *tmp292                                ...
  800:  op notEqual *tmp293 *tmp294 false                            ...
  801:  sensor *tmp295 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  802:  op lessThan *tmp296 *tmp295 .graphiteTarget                  ...
  803:  op or *tmp298 *tmp293 *tmp296                                ...
  804:  op notEqual *tmp297 *tmp298 false                            ...
  805:  sensor *tmp299 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  806:  op lessThan *tmp300 *tmp299 .siliconTarget                   ...
  807:  op or *tmp302 *tmp297 *tmp300                                ...
  808:  op notEqual *tmp301 *tmp302 false                            ...
  809:  sensor *tmp303 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  810:  op lessThan *tmp304 *tmp303 .titaniumTarget                  ...
  811:  op or *tmp306 *tmp301 *tmp304                                ...
  812:  op notEqual *tmp305 *tmp306 false                            ...
  813:  sensor *tmp307 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  814:  op lessThan *tmp308 *tmp307 .metaglassTarget                 ...
  815:  op or *tmp310 *tmp305 *tmp308                                ...
  816:  jump *label326 equal *tmp310 false                           CoreBuilder.mnd: while core.@copper < copperTarget
        label *label375                                              ...
  817:  setaddr :supplyBase*retaddr *label327                        CoreBuilder.mnd: supplyBase();
  818:  call *label9 *invalid :supplyBase*retval                     ...
        label *label327                                              ...
  819:  sensor *tmp289 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  820:  op lessThan *tmp290 *tmp289 .copperTarget                    ...
  821:  sensor *tmp291 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  822:  op lessThan *tmp292 *tmp291 .leadTarget                      ...
  823:  op or *tmp294 *tmp290 *tmp292                                ...
  824:  op notEqual *tmp293 *tmp294 false                            ...
  825:  sensor *tmp295 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  826:  op lessThan *tmp296 *tmp295 .graphiteTarget                  ...
  827:  op or *tmp298 *tmp293 *tmp296                                ...
  828:  op notEqual *tmp297 *tmp298 false                            ...
  829:  sensor *tmp299 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  830:  op lessThan *tmp300 *tmp299 .siliconTarget                   ...
  831:  op or *tmp302 *tmp297 *tmp300                                ...
  832:  op notEqual *tmp301 *tmp302 false                            ...
  833:  sensor *tmp303 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  834:  op lessThan *tmp304 *tmp303 .titaniumTarget                  ...
  835:  op or *tmp306 *tmp301 *tmp304                                ...
  836:  op notEqual *tmp305 *tmp306 false                            ...
  837:  sensor *tmp307 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  838:  op lessThan *tmp308 *tmp307 .metaglassTarget                 ...
  839:  op or *tmp310 *tmp305 *tmp308                                ...
  840:  jump *label375 notEqual *tmp310 false                        CoreBuilder.mnd: while core.@copper < copperTarget
        label *label326                                              ...
  841:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label11                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  842:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  843:  set :moveTo.1:y :buildBlockAt:y                              ...
  844:  setaddr :moveTo.1*retaddr *label329                          ...
  845:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label329                                              ...
  846:  set .status3 "Building..."                                   CoreBuilder.mnd: status3 = text;
  847:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  848:  jump *label331 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  849:  jump *label333 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  850:  set :buildBlockAt*retval :buildBlockAt:building              ...
  851:  return :buildBlockAt*retaddr                                 ...
        label *label333                                              ...
  852:  jump *label335 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  853:  set :buildBlockAt*retval null                                ...
  854:  return :buildBlockAt*retaddr                                 ...
        label *label335                                              ...
  855:  print "[salmon]Cannot build at ({0}, {0}), tile already cont CoreBuilder.mnd: print("[salmon]", text);
  856:  format :buildBlockAt:x                                       ...
  857:  format :buildBlockAt:y                                       ...
  858:  print :buildBlockAt:building                                 ...
  859:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  860:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label331                                              CoreBuilder.mnd: if building != null then
  861:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  862:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label338                                              CoreBuilder.mnd: do
  863:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  864:  jump *label340 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  865:  jump *label338 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label340                                              ...
  866:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  867:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label12                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  868:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  869:  set :meetTarget:copper :buildBlock:copper                    ...
  870:  set :meetTarget:lead :buildBlock:lead                        ...
  871:  set :meetTarget:graphite :buildBlock:graphite                ...
  872:  set :meetTarget:silicon :buildBlock:silicon                  ...
  873:  set :meetTarget:titanium :buildBlock:titanium                ...
  874:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  875:  setaddr :meetTarget*retaddr *label344                        ...
  876:  call *label10 *invalid :meetTarget*retval                    ...
        label *label344                                              ...
  877:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  878:  set :buildBlockAt:x :buildBlock:x                            ...
  879:  set :buildBlockAt:y :buildBlock:y                            ...
  880:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  881:  set :buildBlockAt:config :buildBlock:config                  ...
  882:  set :buildBlockAt:skipError false                            ...
  883:  setaddr :buildBlockAt*retaddr *label345                      ...
  884:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label345                                              ...
  885:  set :buildBlock*retval :buildBlockAt*retval                  ...
  886:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)


Performance: parsed in 378 ms, compiled in 237 ms, optimized in 2,042 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (27 steps):
The program didn't generate any output.
Execution exception at instruction 46: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
