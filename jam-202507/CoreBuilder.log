  1361 instructions before optimizations.
    66 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   117 instructions eliminated by Dead Code Elimination (10 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   145 instructions eliminated by Data Flow Optimization (26 passes, 82 iterations).
     1 loops improved by Loop Hoisting.
    37 instructions added by Loop Optimization (3 iterations).
     8 loops improved by Loop Optimization.
     4 instructions eliminated by Loop Unrolling (35 iterations).
     2 loops unrolled by Loop Unrolling.
    30 instructions added by Function Inlining (35 iterations).
    47 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     2 calls threaded by Jump Threading.
    19 instructions eliminated by Unreachable Code Elimination (2 iterations).
   977 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
  * Unroll iteration loop at CoreBuilder.mnd:334:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Unroll iteration loop at CoreBuilder.mnd:166:5               size   -13, benefit     1026.0, efficiency   Infinity
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     3938.9, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      537.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +179, benefit      266.0, efficiency      1.486
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5072.7, efficiency    338.177
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5072.7, efficiency    112.726
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    12713.1, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:400:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:127:5                size    +0, benefit     1881.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
  ! Inline function call at CoreBuilder.mnd:133:13               size   +31, benefit      537.5, efficiency     17.339
  ! Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:122:5                size    +0, benefit      940.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:59:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:67:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:79:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:90:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:93:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:99:17                size    +0, benefit       29.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:102:17               size    +0, benefit       14.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:105:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:108:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:116:9                size    +0, benefit      470.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +90, benefit       14.0, efficiency      0.156
  ! Inline function call at CoreBuilder.mnd:291:5                size   +90, benefit       28.0, efficiency      0.311
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2687.5, efficiency    335.938
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2687.5, efficiency    116.848
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      537.5, efficiency     67.188
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      537.5, efficiency     23.370
  ! Inline function call at CoreBuilder.mnd:196:9                size  +159, benefit     2850.0, efficiency     17.925
  ! Inline function call at CoreBuilder.mnd:203:5                size   +90, benefit      224.0, efficiency      2.489
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4438.6, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1847.7, efficiency    230.957
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1616.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1847.7, efficiency     80.333
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2853.4, efficiency    407.624
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2219.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
  * Unroll iteration loop at CoreBuilder.mnd:166:5               size   -13, benefit     1026.0, efficiency   Infinity (-10 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     3938.9, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      537.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +179, benefit      266.0, efficiency      1.486
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5072.7, efficiency    338.177
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5072.7, efficiency    112.726
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    12713.1, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:400:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:127:5                size    +0, benefit     1881.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
  ! Inline function call at CoreBuilder.mnd:133:13               size   +31, benefit      537.5, efficiency     17.339
  ! Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:122:5                size    +0, benefit      940.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:59:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:67:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:79:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:90:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:93:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:99:17                size    +0, benefit       29.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:102:17               size    +0, benefit       14.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:105:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:108:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:116:9                size    +0, benefit      470.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +90, benefit       14.0, efficiency      0.156
  ! Inline function call at CoreBuilder.mnd:291:5                size   +90, benefit       28.0, efficiency      0.311
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2687.5, efficiency    335.938
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2687.5, efficiency    116.848
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      537.5, efficiency     67.188
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      537.5, efficiency     23.370
  ! Inline function call at CoreBuilder.mnd:196:9                size  +159, benefit     2850.0, efficiency     17.925
  ! Inline function call at CoreBuilder.mnd:203:5                size   +90, benefit      224.0, efficiency      2.489
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4438.6, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1847.7, efficiency    230.957
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1616.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1847.7, efficiency     80.333
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2853.4, efficiency    407.624
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2219.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     3938.9, efficiency   Infinity (-29 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      537.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5072.7, efficiency    338.177
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5072.7, efficiency    112.726
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    12713.1, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:400:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:127:5                size    +0, benefit     1881.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
  ! Inline function call at CoreBuilder.mnd:133:13               size   +31, benefit      537.5, efficiency     17.339
  ! Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:122:5                size    +0, benefit      940.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:59:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:67:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:79:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:90:17                size    +0, benefit      117.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:93:17                size    +0, benefit       58.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:99:17                size    +0, benefit       29.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:102:17               size    +0, benefit       14.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:105:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:108:17               size    +0, benefit        7.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:116:9                size    +0, benefit      470.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2687.5, efficiency    335.938
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2687.5, efficiency    116.848
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      537.5, efficiency     67.188
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      537.5, efficiency     23.370
  ! Inline function call at CoreBuilder.mnd:196:9                size  +159, benefit     2850.0, efficiency     17.925
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4438.6, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1847.7, efficiency    230.957
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1616.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1847.7, efficiency     80.333
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2853.4, efficiency    407.624
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2219.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      537.5, efficiency   Infinity (-6 instructions)
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5072.7, efficiency    338.177
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5072.7, efficiency    112.726
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    12713.1, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:400:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
  ! Inline function call at CoreBuilder.mnd:133:13               size   +31, benefit      537.5, efficiency     17.339
  ! Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
  ! Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2687.5, efficiency    335.938
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +23, benefit     2687.5, efficiency    116.848
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      537.5, efficiency     67.188
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +23, benefit      537.5, efficiency     23.370
  ! Inline function call at CoreBuilder.mnd:196:9                size  +133, benefit     2850.0, efficiency     21.429
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1847.7, efficiency    230.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1616.7, efficiency   Infinity
    Inline function call at Actions.mnd:124:5                    size   +23, benefit     1847.7, efficiency     80.333
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2853.4, efficiency    407.624
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2219.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 33):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5072.7, efficiency    338.177
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5072.7, efficiency    112.726
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    12713.1, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      537.5, efficiency     67.188
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +23, benefit      537.5, efficiency     23.370
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2687.5, efficiency    335.938
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +23, benefit     2687.5, efficiency    116.848
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4438.6, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1847.7, efficiency    230.957
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1616.7, efficiency   Infinity
    Inline function call at Actions.mnd:124:5                    size   +23, benefit     1847.7, efficiency     80.333
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2853.4, efficiency    407.624
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2219.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 44):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     5072.7, efficiency    123.723
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2078.6, efficiency     61.136
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2536.3, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +21, benefit      537.5, efficiency     25.595
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1511.7, efficiency     43.192
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2687.5, efficiency    127.976
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      566.9, efficiency     16.197
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2536.3, efficiency    422.721
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     1847.7, efficiency     87.984
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2853.4, efficiency    570.674
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350

Pass 1: speed optimization selection (cost limit 50):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2078.6, efficiency     61.136
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2078.6, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1511.7, efficiency     43.192
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      566.9, efficiency     16.197
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2853.4, efficiency    570.674
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2078.6, efficiency    519.653
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2853.4, efficiency   Infinity (-8 instructions)
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2853.4, efficiency    570.674
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    25930.2, efficiency  25930.176 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3111.6, efficiency    622.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      403.1, efficiency    134.375
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2015.6, efficiency    671.875
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      692.9, efficiency    230.957
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    15852.1, efficiency  15852.051 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 61):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    15852.1, efficiency  15852.051 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     5072.7, efficiency    103.524
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +25, benefit      537.5, efficiency     21.500
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     2687.5, efficiency    107.500
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     1847.7, efficiency     73.906

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10145.3, efficiency   5072.656
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     5072.7, efficiency     99.464
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +26, benefit      537.5, efficiency     20.673
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     2687.5, efficiency    103.365
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     5072.7, efficiency   5072.656 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     1847.7, efficiency     71.064

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     5072.7, efficiency   5072.656 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      537.5, efficiency    537.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2687.5, efficiency   2687.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1847.7, efficiency   1847.656
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 69):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2687.5, efficiency     86.694
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6273.6, efficiency   1254.727
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2078.6, efficiency     59.389
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:400:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +32, benefit     2150.0, efficiency     67.188
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +32, benefit      537.5, efficiency     16.797
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1511.7, efficiency     41.992
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3023.4, efficiency   1511.719 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      566.9, efficiency     15.747
  ! Inline function call at CoreBuilder.mnd:196:9                size  +160, benefit     2850.0, efficiency     17.813
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 71):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1175.8, efficiency     22.185
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2687.5, efficiency     92.672
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1007.8, efficiency     19.761
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     3250.2, efficiency   1083.398 (-11 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2078.6, efficiency     59.389
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:400:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +13, benefit      537.5, efficiency     41.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      604.7, efficiency    302.344
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +30, benefit     2150.0, efficiency     71.667
    Inline function call at CoreBuilder.mnd:123:5                size    +9, benefit      940.6, efficiency    104.514
    Inline function call at CoreBuilder.mnd:60:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:68:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit       67.2, efficiency      5.168
    Inline function call at CoreBuilder.mnd:80:17                size   +13, benefit      134.4, efficiency     10.337
    Inline function call at CoreBuilder.mnd:91:17                size    +9, benefit      117.6, efficiency     13.064
    Inline function call at CoreBuilder.mnd:97:17                size    +9, benefit       58.8, efficiency      6.532
    Inline function call at CoreBuilder.mnd:100:17               size    +9, benefit       29.4, efficiency      3.266
    Inline function call at CoreBuilder.mnd:103:17               size    +9, benefit       14.7, efficiency      1.633
    Inline function call at CoreBuilder.mnd:106:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:112:17               size    +9, benefit        7.3, efficiency      0.817
    Inline function call at CoreBuilder.mnd:117:9                size   +30, benefit      537.5, efficiency     17.917
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1511.7, efficiency    755.859
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1511.7, efficiency     41.992
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1133.8, efficiency    566.895
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      566.9, efficiency     15.747
  ! Inline function call at CoreBuilder.mnd:196:9                size  +160, benefit     2850.0, efficiency     17.813
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 82):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      811.8, efficiency    811.850 (-8 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1175.8, efficiency     28.678
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2687.5, efficiency     92.672
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2078.6, efficiency     59.389
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:243:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:400:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +30, benefit     2150.0, efficiency     71.667
    Inline function call at CoreBuilder.mnd:123:5                size    +7, benefit      940.6, efficiency    134.375
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +30, benefit      537.5, efficiency     17.917
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1511.7, efficiency     41.992
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      566.9, efficiency     15.747
  ! Inline function call at CoreBuilder.mnd:196:9                size  +158, benefit     2850.0, efficiency     18.038
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      808.3, efficiency    808.350
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 90):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1175.8, efficiency     28.678
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2687.5, efficiency     92.672
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3111.6, efficiency    444.517
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2078.6, efficiency     62.988
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:400:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +30, benefit     2150.0, efficiency     71.667
    Inline function call at CoreBuilder.mnd:123:5                size    +7, benefit      940.6, efficiency    134.375
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +30, benefit      537.5, efficiency     17.917
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1511.7, efficiency     44.462
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
  * Inline function call at Actions.mnd:137:5                    size    +4, benefit     2015.6, efficiency    503.906 (+3 instructions)
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      566.9, efficiency     16.673
  ! Inline function call at CoreBuilder.mnd:196:9                size  +158, benefit     2850.0, efficiency     18.038
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 87):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1175.8, efficiency     28.678
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2687.5, efficiency     83.984
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5072.7, efficiency    461.151 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1096.0, efficiency    365.332
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2078.6, efficiency     62.988
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:400:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      537.5, efficiency     89.583
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +33, benefit     2150.0, efficiency     65.152
    Inline function call at CoreBuilder.mnd:123:5                size    +7, benefit      940.6, efficiency    134.375
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +33, benefit      537.5, efficiency     16.288
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1511.7, efficiency     44.462
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2687.5, efficiency    447.917
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      566.9, efficiency     16.673
  ! Inline function call at CoreBuilder.mnd:196:9                size  +158, benefit     2850.0, efficiency     18.038
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1847.7, efficiency    307.943
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 87):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1175.8, efficiency     28.678
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2687.5, efficiency     76.786
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1096.0, efficiency    365.332 (-3 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2078.6, efficiency     57.739
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:400:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      403.1, efficiency    100.781
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +36, benefit     2150.0, efficiency     59.722
    Inline function call at CoreBuilder.mnd:123:5                size    +7, benefit      940.6, efficiency    134.375
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +36, benefit      537.5, efficiency     14.931
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1511.7, efficiency     40.857
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      566.9, efficiency     15.321
  ! Inline function call at CoreBuilder.mnd:196:9                size  +161, benefit     2850.0, efficiency     17.702
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      692.9, efficiency    173.218
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 90):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1175.8, efficiency     28.678
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2687.5, efficiency     76.786
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2078.6, efficiency     56.179
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:400:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +36, benefit     2150.0, efficiency     59.722
  * Inline function call at CoreBuilder.mnd:123:5                size    +7, benefit      940.6, efficiency    134.375 (+5 instructions)
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +36, benefit      537.5, efficiency     14.931
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1511.7, efficiency     39.782
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      566.9, efficiency     14.918
  ! Inline function call at CoreBuilder.mnd:196:9                size  +164, benefit     2850.0, efficiency     17.378
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 85):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2687.5, efficiency     76.786
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5072.7, efficiency    107.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3288.0, efficiency     43.840
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:400:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +36, benefit     2150.0, efficiency     59.722
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1209.4, efficiency     31.826
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +36, benefit      537.5, efficiency     14.931
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
    Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1511.7, efficiency     39.782
  * Inline function call at Actions.mnd:147:5                    size   +24, benefit     2687.5, efficiency    111.979 (+21 instructions)
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      566.9, efficiency     14.918
  ! Inline function call at CoreBuilder.mnd:196:9                size  +169, benefit     2850.0, efficiency     16.864
    Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 64):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2385.2, efficiency    103.702 (+15 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3288.0, efficiency     43.840
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:400:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      537.5, efficiency     22.396
    Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1209.4, efficiency     31.826
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1511.7, efficiency     39.782
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      566.9, efficiency     14.918
  ! Inline function call at CoreBuilder.mnd:196:9                size  +169, benefit     2850.0, efficiency     16.864
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1847.7, efficiency     76.986

Pass 1: speed optimization selection (cost limit 49):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1007.8, efficiency     23.438
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3288.0, efficiency     28.102
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +190, benefit       75.0, efficiency      0.395
  ! Inline function call at CoreBuilder.mnd:400:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at CoreBuilder.mnd:131:13               size   +11, benefit      537.5, efficiency     48.864 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +190, benefit     2850.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at CoreBuilder.mnd:195:5            size   +30, benefit      950.0, efficiency     31.667 (+30 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
    Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +159, benefit      266.0, efficiency      1.673
    Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
    Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
    Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
    Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
    Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
    Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
    Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:291:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size   +80, benefit      224.0, efficiency      2.800

Pass 1: speed optimization selection (cost limit 9):
  * Replicate loop condition at CoreBuilder.mnd:394:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 8):
  * Replicate loop condition at CoreBuilder.mnd:399:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 7):
  * Replicate loop condition at CoreBuilder.mnd:415:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
    Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 6):
  * Replicate loop condition at CoreBuilder.mnd:425:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
    Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 5):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +71, benefit      112.0, efficiency      1.577
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
  * Inline function call at CoreBuilder.mnd:309:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 3):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size   +95, benefit      116.0, efficiency      1.221
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +68, benefit       84.0, efficiency      1.235
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit        4.0, efficiency      0.167
  * Inline function call at CoreBuilder.mnd:310:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 1: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size  +119, benefit      120.0, efficiency      1.008
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +65, benefit       80.5, efficiency      1.238
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +219, benefit      266.0, efficiency      1.215
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +21, benefit      304.0, efficiency     14.476
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:400:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:419:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +22, benefit      266.0, efficiency     12.091
  ! Inline function call at CoreBuilder.mnd:228:5                size   +24, benefit      100.0, efficiency      4.167
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:291:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +200, benefit     2850.0, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:203:5                size  +110, benefit      224.0, efficiency      2.036

Pass 2: speed optimization selection (cost limit 8):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size  +114, benefit      120.0, efficiency      1.053
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +65, benefit       80.5, efficiency      1.238
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      235.2, efficiency      6.916
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +217, benefit      266.0, efficiency      1.226
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +20, benefit      304.0, efficiency     15.200
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3590.3, efficiency     20.400
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +197, benefit       75.0, efficiency      0.381
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:400:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:419:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +197, benefit       75.0, efficiency      0.381
    Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  * Inline function call at CoreBuilder.mnd:91:17                size    +7, benefit      117.6, efficiency     16.797 (+5 instructions)
    Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
    Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +21, benefit      266.0, efficiency     12.667
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit      100.0, efficiency      4.348
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +109, benefit       14.0, efficiency      0.128
  ! Inline function call at CoreBuilder.mnd:291:5                size  +109, benefit       28.0, efficiency      0.257
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +197, benefit     2850.0, efficiency     14.467
  ! Inline function call at CoreBuilder.mnd:203:5                size  +109, benefit      224.0, efficiency      2.055

Pass 2: speed optimization selection (cost limit 3):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size  +114, benefit      120.0, efficiency      1.053
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +65, benefit       80.5, efficiency      1.238
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      117.6, efficiency      4.355
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +217, benefit      266.0, efficiency      1.226
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +20, benefit      304.0, efficiency     15.200
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3741.5, efficiency     15.921
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  * Inline function call at CoreBuilder.mnd:311:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:400:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:419:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +21, benefit      266.0, efficiency     12.667
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit      100.0, efficiency      4.348
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +109, benefit       14.0, efficiency      0.128
  ! Inline function call at CoreBuilder.mnd:291:5                size  +109, benefit       28.0, efficiency      0.257
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +202, benefit     2850.0, efficiency     14.109
  ! Inline function call at CoreBuilder.mnd:203:5                size  +109, benefit      224.0, efficiency      2.055

Pass 2: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size  +137, benefit      124.0, efficiency      0.905
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +62, benefit       77.0, efficiency      1.242
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      117.6, efficiency      4.355
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +217, benefit      266.0, efficiency      1.226
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +20, benefit      304.0, efficiency     15.200
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3741.5, efficiency     15.921
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:400:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:419:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +21, benefit      266.0, efficiency     12.667
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit      100.0, efficiency      4.348
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +109, benefit       14.0, efficiency      0.128
  ! Inline function call at CoreBuilder.mnd:291:5                size  +109, benefit       28.0, efficiency      0.257
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +202, benefit     2850.0, efficiency     14.109
  ! Inline function call at CoreBuilder.mnd:203:5                size  +109, benefit      224.0, efficiency      2.055

Pass 3: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:207:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:217:1 size  +137, benefit      124.0, efficiency      0.905
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +62, benefit       77.0, efficiency      1.242
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:231:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:290:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:473:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:487:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      117.6, efficiency      4.355
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2687.5, efficiency     47.991
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      470.3, efficiency     14.697
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      315.0, efficiency      8.514
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:163:1 size  +217, benefit      266.0, efficiency      1.226
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:202:1 size   +20, benefit      304.0, efficiency     15.200
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3741.5, efficiency     15.921
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:312:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:316:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:317:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:238:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:338:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:339:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:341:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:354:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:365:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:366:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:367:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:371:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:372:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:374:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:379:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:389:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:395:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:400:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:267:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:273:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:274:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:275:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:276:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:277:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:278:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:279:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:280:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:416:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:419:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:420:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:423:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:426:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:460:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:461:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:462:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:463:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:466:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:467:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:468:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:469:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      302.3, efficiency      5.124
  ! Inline function call at CoreBuilder.mnd:136:5                size   +57, benefit     2150.0, efficiency     37.719
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1209.4, efficiency     20.498
  ! Inline function call at CoreBuilder.mnd:60:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:68:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at CoreBuilder.mnd:72:17                size   +11, benefit       67.2, efficiency      6.108
  ! Inline function call at CoreBuilder.mnd:80:17                size   +11, benefit      134.4, efficiency     12.216
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:97:17                size    +7, benefit       58.8, efficiency      8.398
  ! Inline function call at CoreBuilder.mnd:100:17               size    +7, benefit       29.4, efficiency      4.199
  ! Inline function call at CoreBuilder.mnd:103:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:106:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:112:17               size    +7, benefit        7.3, efficiency      1.050
  ! Inline function call at CoreBuilder.mnd:117:9                size   +57, benefit      537.5, efficiency      9.430
  ! Inline function call at CoreBuilder.mnd:210:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:211:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:219:5                size   +19, benefit      266.0, efficiency     14.000
  ! Inline function call at CoreBuilder.mnd:220:20               size   +21, benefit      266.0, efficiency     12.667
  ! Inline function call at CoreBuilder.mnd:228:5                size   +23, benefit      100.0, efficiency      4.348
  ! Inline function call at CoreBuilder.mnd:233:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:234:5                size  +109, benefit       14.0, efficiency      0.128
  ! Inline function call at CoreBuilder.mnd:291:5                size  +109, benefit       28.0, efficiency      0.257
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1511.7, efficiency     25.622
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      566.9, efficiency      9.608
  ! Inline function call at CoreBuilder.mnd:196:9                size  +202, benefit     2850.0, efficiency     14.109
  ! Inline function call at CoreBuilder.mnd:203:5                size  +109, benefit      224.0, efficiency      2.055

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-89 instructions):
 
    37 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    38 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    39 label *label51
-    * set *tmp122 :buildBlockFromCfg.1*retval
    40 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    41 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    42 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    43 label *label52
-    * set *tmp123 :buildBlockFromCfg.1*retval
    44 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    45 setaddr :buildBlockFromCfg.1*retaddr *label53 (h:*label53)
    46 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label53) (h:*label53)
    47 label *label53
-    * set *tmp124 :buildBlockFromCfg.1*retval
    48 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    49 setaddr :buildBlockFromCfg.1*retaddr *label54 (h:*label54)
    50 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label54) (h:*label54)
    51 label *label54
-    * set *tmp125 :buildBlockFromCfg.1*retval
    52 set .powerTarget 400
    53 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
    54 setaddr :buildBlockFromCfg.1*retaddr *label55 (h:*label55)
    55 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label55) (h:*label55)
    56 label *label55
-    * set *tmp126 :buildBlockFromCfg.1*retval
    57 set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"
    58 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
    59 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
    60 label *label56
-    * set *tmp127 :buildBlockFromCfg.1*retval
    61 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    62 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    63 setaddr :meetTarget.1*retaddr *label58 (h:*label58)
 
    89 setaddr :error*retaddr *label62 (h:*label62)
    90 call *label13 *invalid :error*retval (m:*label62) (h:*label62)
    91 label *label62
-    * set *tmp142 null
    92 jump *label61 always
    93 label *label60
-    * set *tmp142 null
    94 label *label61
    95 write @pneumatic-drill processor2 ".nextBlock"
    96 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   112 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   113 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   114 label *label64
-    * set *tmp147 :buildBlockFromCfg.1*retval
   115 set :buildBlockFromCfg.1:cfg "A{HNJQ-inverted-sorter7"
   116 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   117 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   118 label *label65
-    * set *tmp148 :buildBlockFromCfg.1*retval
   119 set :buildBlockFromCfg.1:cfg "A~JPJR-overflow-gate8"
   120 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
   121 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   122 label *label66
-    * set *tmp149 :buildBlockFromCfg.1*retval
   123 set .graphiteSurplus 50
   124 set :buildBlockFromCfg:cfg "AÕFFJS-micro-processor9"
   125 set :buildBlockFromCfg:config processor10
 
   181 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   182 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   183 label *label81
-    * set *tmp153 :buildBlockFromCfg.1*retval
   184 set :buildBlockFromCfg.1:cfg "A©FHJU-unloader11"
   185 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   186 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   187 label *label82
-    * set *tmp154 :buildBlockFromCfg.1*retval
   188 set :buildBlockFromCfg.1:cfg "A¾BHMV-air-factory12"
   189 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   190 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   191 label *label83
-    * set *tmp155 :buildBlockFromCfg.1*retval
   192 set :setFlareTarget:target 1
   193 write :setFlareTarget:target .controller ".flareTarget"
   194 write :setFlareTarget:target processor2 ".flareTarget"
 
   213 op lessThan *tmp157 *tmp156 300
   214 jump *label91 equal *tmp157 false
   215 jump *label89 always
-    * set *tmp158 null
   216 jump *label92 always
   217 label *label91
-    * set *tmp158 null
   218 label *label92
   219 label *label88
   220 read *tmp85 .controller ".monos"
 
   226 setaddr :buildBlockFromCfg.1*retaddr *label93 (h:*label93)
   227 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label93) (h:*label93)
   228 label *label93
-    * set *tmp160 :buildBlockFromCfg.1*retval
   229 set :buildBlockFromCfg.1:cfg "A{NJJX-inverted-sorter14"
   230 setaddr :buildBlockFromCfg.1*retaddr *label94 (h:*label94)
   231 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label94) (h:*label94)
   232 label *label94
-    * set *tmp161 :buildBlockFromCfg.1*retval
   233 set :buildBlockFromCfg.1:cfg "ANOMJY-kiln15"
   234 setaddr :buildBlockFromCfg.1*retaddr *label95 (h:*label95)
   235 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label95) (h:*label95)
   236 label *label95
-    * set *tmp162 :buildBlockFromCfg.1*retval
   237 set :buildBlockFromCfg.1:cfg "A¡ASJZ-water-extractor16"
   238 setaddr :buildBlockFromCfg.1*retaddr *label96 (h:*label96)
   239 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label96) (h:*label96)
   240 label *label96
-    * set *tmp163 :buildBlockFromCfg.1*retval
   241 set :buildBlockFromCfg:cfg "A©BLJ[-unloader17"
   242 set :buildBlockFromCfg:config @coal
   243 setaddr :buildBlockFromCfg*retaddr *label97 (h:*label97)
   244 call *label37 *invalid :buildBlockFromCfg*retval (m:*label97) (h:*label97)
   245 label *label97
-    * set *tmp164 :buildBlockFromCfg*retval
   246 set :buildBlockFromCfg.1:cfg "AAOJ\-steam-generator18"
   247 setaddr :buildBlockFromCfg.1*retaddr *label98 (h:*label98)
   248 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label98) (h:*label98)
   249 label *label98
-    * set *tmp165 :buildBlockFromCfg.1*retval
   250 set :buildBlockFromCfg.1:cfg "AKFRJ]-multi-press19"
   251 setaddr :buildBlockFromCfg.1*retaddr *label99 (h:*label99)
   252 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label99) (h:*label99)
   253 label *label99
-    * set *tmp166 :buildBlockFromCfg.1*retval
   254 set :buildBlockFromCfg.1:cfg "AÇBBJ^-payload-router20"
   255 setaddr :buildBlockFromCfg.1*retaddr *label100 (h:*label100)
   256 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label100) (h:*label100)
   257 label *label100
-    * set *tmp167 :buildBlockFromCfg.1*retval
   258 set :buildBlockFromCfg.1:cfg "A©HFJ_-unloader21"
   259 setaddr :buildBlockFromCfg.1*retaddr *label101 (h:*label101)
   260 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label101) (h:*label101)
   261 label *label101
-    * set *tmp168 :buildBlockFromCfg.1*retval
   262 set :buildBlockFromCfg.1:cfg "AÀHBJ`-additive-reconstructor22"
   263 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
   264 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label102) (h:*label102)
   265 label *label102
-    * set *tmp169 :buildBlockFromCfg.1*retval
   266 setaddr :buildUnits*retaddr *label103 (h:*label103)
   267 call *label40 *invalid :buildUnits*retval (m:*label103) (h:*label103)
   268 label *label103
 
   277 setaddr :buildBlockFromCfg.1*retaddr *label105 (h:*label105)
   278 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label105) (h:*label105)
   279 label *label105
-    * set *tmp170 :buildBlockFromCfg.1*retval
   280 set :buildBlockFromCfg.1:cfg "A{PJJb-inverted-sorter24"
   281 setaddr :buildBlockFromCfg.1*retaddr *label106 (h:*label106)
   282 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label106) (h:*label106)
   283 label *label106
-    * set *tmp171 :buildBlockFromCfg.1*retval
   284 set :buildBlockFromCfg.1:cfg "A{PHJc-inverted-sorter25"
   285 setaddr :buildBlockFromCfg.1*retaddr *label107 (h:*label107)
   286 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label107) (h:*label107)
   287 label *label107
-    * set *tmp172 :buildBlockFromCfg.1*retval
   288 setaddr :buildUnits*retaddr *label108 (h:*label108)
   289 call *label40 *invalid :buildUnits*retval (m:*label108) (h:*label108)
   290 label *label108
 
   364 setaddr :error*retaddr *label126 (h:*label126)
   365 call *label13 *invalid :error*retval (m:*label126) (h:*label126)
   366 label *label126
-    * set *tmp197 null
   367 jump *label125 always
   368 label *label124
-    * set *tmp197 null
   369 label *label125
   370 write @laser-drill processor5 ":buildBlockAt:block"
   371 read *tmp55 processor3 ".drillX"
 
   391 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   392 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   393 label *label128
-    * set *tmp206 :buildRemoteBlock*retval
   394 set :buildRemoteBlock:cfg "A¡ASJZ-water-extractor16"
   395 read *tmp61 processor3 ".water2X"
   396 set :buildRemoteBlock:x *tmp61
 
   399 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   400 call *label36 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   401 label *label129
-    * set *tmp207 :buildRemoteBlock*retval
   402 set :buildRemoteBlock:cfg "AAOJ\-steam-generator18"
   403 read *tmp63 processor3 ".generatorX"
   404 set :buildRemoteBlock:x *tmp63
 
   417 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   418 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   419 label *label131
-    * set *tmp209 :buildRemoteBlock*retval
   420 set :buildRemoteBlock:cfg "AFJJT-power-node10"
   421 read *tmp67 processor3 ".node2X"
   422 set :buildRemoteBlock:x *tmp67
 
   425 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
   426 call *label36 *invalid :buildRemoteBlock*retval (m:*label132) (h:*label132)
   427 label *label132
-    * set *tmp210 :buildRemoteBlock*retval
   428 set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"
   429 read *tmp69 processor3 ".panelX"
   430 set :buildRemoteBlock:x *tmp69
 
   433 setaddr :buildRemoteBlock*retaddr *label133 (h:*label133)
   434 call *label36 *invalid :buildRemoteBlock*retval (m:*label133) (h:*label133)
   435 label *label133
-    * set *tmp211 :buildRemoteBlock*retval
   436 set :buildRemoteBlock:cfg "AJTJK-battery1"
   437 read *tmp71 processor3 ".batteryX"
   438 set :buildRemoteBlock:x *tmp71
 
   456 op equal *tmp214 .thoriumContainer null
   457 jump *label136 equal *tmp214 false
   458 set .thoriumContainer .thoriumDrill
-    * set *tmp215 .thoriumContainer
   459 jump *label137 always
   460 label *label136
-    * set *tmp215 null
   461 label *label137
   462 write .thoriumDrill processor2 ".thoriumDrill"
   463 write .thoriumContainer processor2 ".thoriumContainer"
 
   489 setaddr :buildBlockFromCfg*retaddr *label144 (h:*label144)
   490 call *label37 *invalid :buildBlockFromCfg*retval (m:*label144) (h:*label144)
   491 label *label144
-    * set *tmp219 :buildBlockFromCfg*retval
   492 set :buildBlockFromCfg.1:cfg "AÁPBJe-multiplicative-reconstructor27"
   493 setaddr :buildBlockFromCfg.1*retaddr *label145 (h:*label145)
   494 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label145) (h:*label145)
   495 label *label145
-    * set *tmp220 :buildBlockFromCfg.1*retval
   496 set .metaglassSurplus 50
   497 setaddr :buildUnits*retaddr *label146 (h:*label146)
   498 call *label40 *invalid :buildUnits*retval (m:*label146) (h:*label146)
 
   597 label *label174
   598 set *tmp241 null
   599 label *label172
-    * set *tmp238 *tmp241
   600 jump *label170 always
   601 label *label169
-    * set *tmp238 null
   602 label *label170
   603 set :fetchBlock:block .thoriumContainer
   604 set :fetchBlock:item @thorium
 
   606 call *label23 *invalid :fetchBlock*retval (m:*label175) (h:*label175)
   607 label *label175
   608 label *label167
-    * set *tmp235 null
   609 jump *label166 always
   610 label *label165
   611 read *tmp85 .controller ".monos"
 
   647 label *label186
   648 set *tmp251 null
   649 label *label187
-    * set *tmp248 *tmp251
   650 jump *label185 always
   651 label *label184
-    * set *tmp248 null
   652 label *label185
   653 sensor *tmp252 .core @silicon
   654 op lessThan *tmp253 *tmp252 silicon
 
   689 label *label197
   690 set *tmp257 *tmp260
   691 label *label193
-    * set *tmp254 *tmp257
   692 jump *label191 always
   693 label *label190
-    * set *tmp254 null
   694 label *label191
   695 sensor *tmp261 AJTJK-battery1 @totalPower
   696 op lessThan *tmp262 *tmp261 .powerTarget
 
   718 label *label200
   719 set *tmp263 null
   720 label *label201
-    * set *tmp245 *tmp263
   721 jump *label183 always
   722 label *label182
-    * set *tmp245 null
   723 label *label183
   724 sensor *tmp267 .core @titanium
   725 op lessThan *tmp268 *tmp267 titanium
 
   856 label *label210
   857 set *tmp277 null
   858 label *label211
-    * set *tmp275 *tmp277
   859 jump *label209 always
   860 label *label208
   861 set :status1:text "Goal 11: Fetching titanium"
 
   867 setaddr :fetchBlock*retaddr *label239 (h:*label239)
   868 call *label23 *invalid :fetchBlock*retval (m:*label239) (h:*label239)
   869 label *label239
-    * set *tmp275 null
   870 label *label209
   871 label *label181
   872 set *tmp243 null
   873 label *label177
-    * set *tmp235 *tmp243
   874 label *label166
   875 label *label164
   876 return :supplyBase*retaddr
 
   911 label *label244
   912 set :buildRemoteBlock*retval :buildBlock*retval
   913 jump *label240 always
-    * set *tmp304 null
   914 jump *label242 always
   915 label *label241
-    * set *tmp304 null
   916 label *label242
   917 set :buildRemoteBlock*retval false
   918 jump *label240 always
 
  1055 sensor *tmp312 @unit @mining
  1056 jump *label266 equal *tmp312 false
  1057 ucontrol stop
-    * set *tmp313 null
  1058 jump *label267 always
  1059 label *label266
-    * set *tmp313 null
  1060 label *label267
  1061 ubind :lineUpUnits:unit
  1062 label *label264
 
  1121 op land *tmp323 *tmp321 *tmp322
  1122 jump *label280 equal *tmp323 false
  1123 ucontrol itemDrop @air 1000
-    * set *tmp324 null
  1124 jump *label281 always
  1125 label *label280
-    * set *tmp324 null
  1126 label *label281
  1127 label *label278
  1128 sensor *tmp325 @unit :fetchBlock:item
 
  1159 setaddr :mineOre*retaddr *label287 (h:*label287)
  1160 call *label21 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1161 label *label287
-    * set *tmp333 null
  1162 jump *label286 always
  1163 label *label285
-    * set *tmp333 null
  1164 label *label286
  1165 label *label283
  1166 return :supplyBlock*retaddr
 
  1196 op land *tmp339 *tmp337 *tmp338
  1197 jump *label296 equal *tmp339 false
  1198 ucontrol itemDrop @air 1000
-    * set *tmp340 null
  1199 jump *label297 always
  1200 label *label296
-    * set *tmp340 null
  1201 label *label297
  1202 label *label294
  1203 sensor *tmp341 @unit :supplyBlockFromCore:item
 
  1259 sensor *tmp369 :unpackCfg:type @thorium
  1260 set :unpackCfg:th *tmp369
  1261 sensor *tmp370 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp370
  1262 label *label299
  1263 return :unpackCfg*retaddr
  1264 end
 
  1338 jump *label315 equal *tmp386 false
  1339 set *tmp384 false
  1340 jump *label314 always
-    * set *tmp387 null
  1341 jump *label316 always
  1342 label *label315
-    * set *tmp387 null
  1343 label *label316
  1344 sensor *tmp388 .core @lead
  1345 op lessThan *tmp389 *tmp388 lead
  1346 jump *label317 equal *tmp389 false
  1347 set *tmp384 false
  1348 jump *label314 always
-    * set *tmp390 null
  1349 jump *label318 always
  1350 label *label317
-    * set *tmp390 null
  1351 label *label318
  1352 sensor *tmp391 .core @graphite
  1353 op lessThan *tmp392 *tmp391 graphite
  1354 jump *label319 equal *tmp392 false
  1355 set *tmp384 false
  1356 jump *label314 always
-    * set *tmp393 null
  1357 jump *label320 always
  1358 label *label319
-    * set *tmp393 null
  1359 label *label320
  1360 sensor *tmp394 .core @silicon
  1361 op lessThan *tmp395 *tmp394 silicon
  1362 jump *label321 equal *tmp395 false
  1363 set *tmp384 false
  1364 jump *label314 always
-    * set *tmp396 null
  1365 jump *label322 always
  1366 label *label321
-    * set *tmp396 null
  1367 label *label322
  1368 sensor *tmp397 .core @titanium
  1369 op lessThan *tmp398 *tmp397 titanium
  1370 jump *label323 equal *tmp398 false
  1371 set *tmp384 false
  1372 jump *label314 always
-    * set *tmp399 null
  1373 jump *label324 always
  1374 label *label323
-    * set *tmp399 null
  1375 label *label324
  1376 sensor *tmp400 .core @metaglass
  1377 op lessThan *tmp401 *tmp400 metaglass
  1378 jump *label325 equal *tmp401 false
  1379 set *tmp384 false
  1380 jump *label314 always
-    * set *tmp402 null
  1381 jump *label326 always
  1382 label *label325
-    * set *tmp402 null
  1383 label *label326
  1384 sensor *tmp403 .core @thorium
  1385 op lessThan *tmp404 *tmp403 thorium
  1386 jump *label327 equal *tmp404 false
  1387 set *tmp384 false
  1388 jump *label314 always
-    * set *tmp405 null
  1389 jump *label328 always
  1390 label *label327
-    * set *tmp405 null
  1391 label *label328
  1392 set *tmp384 true
  1393 jump *label314 always
 
  1458 op notEqual *tmp416 *tmp415 null
  1459 jump *label340 equal *tmp416 false
  1460 ucontrol itemDrop @air 1000
-    * set *tmp417 null
  1461 jump *label341 always
  1462 label *label340
-    * set *tmp417 null
  1463 label *label341
  1464 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1465 label *label338
 
  1506 op greaterThan *tmp429 *tmp427 *tmp428
  1507 jump *label351 notEqual *tmp429 false
  1508 label *label353
-    * set *tmp424 null
  1509 jump *label349 always
  1510 label *label348
  1511 label *label354
 
  1516 label *label355
  1517 jump *label354 always
  1518 label *label356
-    * set *tmp424 null
  1519 label *label349
  1520 set :transportStatus:target 0
  1521 set :transportStatus:item null
 
  1550 setaddr :dropAll*retaddr *label364 (h:*label364)
  1551 call *label17 *invalid :dropAll*retval (m:*label364) (h:*label364)
  1552 label *label364
-    * set *tmp435 null
  1553 jump *label363 always
  1554 label *label362
-    * set *tmp435 null
  1555 label *label363
  1556 set :status3:text "Mining..."
  1557 setaddr :status3*retaddr *label365 (h:*label365)
 
  1567 op land *tmp440 *tmp438 *tmp439
  1568 jump *label369 equal *tmp440 false
  1569 jump *label368 always
-    * set *tmp441 null
  1570 jump *label370 always
  1571 label *label369
-    * set *tmp441 null
  1572 label *label370
  1573 ucontrol mine :mineOre:x :mineOre:y
  1574 op greaterThan *tmp442 @second :mineOre:stop
  1575 jump *label371 equal *tmp442 false
  1576 jump *label368 always
-    * set *tmp443 null
  1577 jump *label372 always
  1578 label *label371
-    * set *tmp443 null
  1579 label *label372
  1580 label *label367
  1581 sensor *tmp444 @unit @totalItems
 
  1616 setaddr :error*retaddr *label380 (h:*label380)
  1617 call *label13 *invalid :error*retval (m:*label380) (h:*label380)
  1618 label *label380
-    * set *tmp451 null
  1619 jump *label379 always
  1620 label *label378
-    * set *tmp451 null
  1621 label *label379
  1622 label *label377
  1623 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
   587 setaddr :supplyBlock*retaddr *label173 (h:*label173)
   588 call *label24 *invalid :supplyBlock*retval (m:*label173) (h:*label173)
   589 label *label173
-    * set *tmp241 null
   590 jump *label172 always
   591 label *label171
   592 set :supplyBlockFromCore:target .thoriumGenerator
 
   594 setaddr :supplyBlockFromCore*retaddr *label174 (h:*label174)
   595 call *label25 *invalid :supplyBlockFromCore*retval (m:*label174) (h:*label174)
   596 label *label174
-    * set *tmp241 null
   597 label *label172
   598 jump *label170 always
   599 label *label169
 
   618 call *label22 *invalid :mineOre.1*retval (m:*label180) (h:*label180)
   619 label *label180
   620 label *label178
-    * set *tmp243 null
   621 jump *label177 always
   622 label *label176
   623 set :supplyBase0:supplied false
 
   639 call *label24 *invalid :supplyBlock*retval (m:*label189) (h:*label189)
   640 label *label189
   641 set :supplyBase0:supplied true
-    * set *tmp251 :supplyBase0:supplied
   642 jump *label187 always
   643 label *label186
-    * set *tmp251 null
   644 label *label187
   645 jump *label185 always
   646 label *label184
 
   661 call *label24 *invalid :supplyBlock*retval (m:*label195) (h:*label195)
   662 label *label195
   663 set :supplyBase0:supplied true
-    * set *tmp257 :supplyBase0:supplied
   664 jump *label193 always
   665 label *label192
   666 sensor *tmp258 ALMQJN-silicon-smelter4 @sand
 
   681 label *label196
   682 set *tmp260 null
   683 label *label197
-    * set *tmp257 *tmp260
   684 label *label193
   685 jump *label191 always
   686 label *label190
 
   706 label *label202
   707 set *tmp266 null
   708 label *label203
-    * set *tmp263 *tmp266
   709 jump *label201 always
   710 label *label200
-    * set *tmp263 null
   711 label *label201
   712 jump *label183 always
   713 label *label182
 
   842 label *label217
   843 set *tmp281 *tmp284
   844 label *label213
-    * set *tmp277 *tmp281
   845 jump *label211 always
   846 label *label210
-    * set *tmp277 null
   847 label *label211
   848 jump *label209 always
   849 label *label208
 
   858 label *label239
   859 label *label209
   860 label *label181
-    * set *tmp243 null
   861 label *label177
   862 label *label166
   863 label *label164
 
   960 setaddr :buildBlockFromCfg*retaddr *label249 (h:*label249)
   961 call *label37 *invalid :buildBlockFromCfg*retval (m:*label249) (h:*label249)
   962 label *label249
-    * set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
   963 label *label248
   964 return :buildBlockFromCfg.1*retaddr
   965 end
 
  1245 set :unpackCfg:mg *tmp368
  1246 sensor *tmp369 :unpackCfg:type @thorium
  1247 set :unpackCfg:th *tmp369
-    * sensor *tmp370 :unpackCfg:type @size
  1248 label *label299
  1249 return :unpackCfg*retaddr
  1250 end

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
   676 call *label24 *invalid :supplyBlock*retval (m:*label199) (h:*label199)
   677 label *label199
   678 set :supplyBase0:supplied true
-    * set *tmp260 :supplyBase0:supplied
   679 jump *label197 always
   680 label *label196
-    * set *tmp260 null
   681 label *label197
   682 label *label193
   683 jump *label191 always
 
   699 call *label24 *invalid :supplyBlock*retval (m:*label205) (h:*label205)
   700 label *label205
   701 set :supplyBase0:supplied true
-    * set *tmp266 :supplyBase0:supplied
   702 jump *label203 always
   703 label *label202
-    * set *tmp266 null
   704 label *label203
   705 jump *label201 always
   706 label *label200
 
   737 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   738 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
   739 label *label215
-    * set *tmp281 null
   740 jump *label213 always
   741 label *label212
   742 sensor *tmp282 .core @silicon
 
   835 label *label223
   836 set *tmp284 *tmp291
   837 label *label217
-    * set *tmp281 *tmp284
   838 label *label213
   839 jump *label211 always
   840 label *label210

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   762 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   763 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
   764 label *label221
-    * set *tmp284 null
   765 jump *label217 always
   766 label *label216
   767 sensor *tmp289 .core @copper
 
   832 label *label227
   833 set *tmp291 *tmp294
   834 label *label223
-    * set *tmp284 *tmp291
   835 label *label217
   836 label *label213
   837 jump *label211 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   775 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   776 call *label22 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   777 label *label225
-    * set *tmp291 null
   778 jump *label223 always
   779 label *label222
   780 sensor *tmp292 .core @lead
 
   829 label *label231
   830 set *tmp294 *tmp297
   831 label *label227
-    * set *tmp291 *tmp294
   832 label *label223
   833 label *label217
   834 label *label213

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   788 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   789 call *label22 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
   790 label *label229
-    * set *tmp294 null
   791 jump *label227 always
   792 label *label226
   793 sensor *tmp295 .core @metaglass
 
   826 label *label237
   827 set *tmp297 null
   828 label *label231
-    * set *tmp294 *tmp297
   829 label *label227
   830 label *label223
   831 label *label217

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   801 setaddr :mineOre.1*retaddr *label233 (h:*label233)
   802 call *label22 *invalid :mineOre.1*retval (m:*label233) (h:*label233)
   803 label *label233
-    * set *tmp297 null
   804 jump *label231 always
   805 label *label230
   806 set :status1:text "Goal 10: supplying base"
 
   823 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   824 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)
   825 label *label237
-    * set *tmp297 null
   826 label *label231
   827 label *label227
   828 label *label223

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-66 instructions):
 
    25 write 511 bank1 511
    26 label *label48
    27 ubind @poly
-    * set *tmp118 @unit
-    * set .builder *tmp118
-    * ulocate building core false @copper .coreX .coreY *tmp120 *tmp119
-    * set .core *tmp119
+   28 set .builder @unit
+   29 ulocate building core false @copper .coreX .coreY *tmp120 .core
    30 label *label49
    31 op equal *tmp121 .core null
    32 jump *label48 notEqual *tmp121 false
 
    75 wait 1e-15
    76 read *tmp139 processor3 ":findDrillLocation*finished"
    77 jump *label59 equal *tmp139 false
-    * read *tmp136 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp136
-    * read *tmp137 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp137
-    * read *tmp140 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp140
+   78 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+   79 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+   80 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    81 op equal *tmp141 :buildFirstTitaniumDrill:result false
    82 jump *label60 equal *tmp141 false
    83 set :error:error "Cannot locate spot for titanium drill"
 
    96 wait 1e-15
    97 read *tmp145 processor5 ":buildFirstTitaniumDrillAt*finished"
    98 jump *label63 equal *tmp145 false
-    * read *tmp146 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp128 *tmp146
+   99 read *tmp128 processor5 ":buildFirstTitaniumDrillAt*retval"
   100 jump *label57 always
   101 set *tmp128 null
   102 label *label57
 
   120 setaddr :buildBlockFromCfg*retaddr *label67 (h:*label67)
   121 call *label37 *invalid :buildBlockFromCfg*retval (m:*label67) (h:*label67)
   122 label *label67
-    * set *tmp150 :buildBlockFromCfg*retval
-    * set .controller *tmp150
+  123 set .controller :buildBlockFromCfg*retval
   124 write processor1 .controller ".timer"
   125 write processor2 .controller ".display"
   126 write .core .controller ".core"
 
   307 label *label116
   308 write @ore-titanium processor2 ".nextBlock"
   309 ubind @flare
-    * read *tmp53 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp53
+  310 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   311 write .coreX processor3 ":findDrillLocation:x"
   312 write .coreY processor3 ":findDrillLocation:y"
   313 write @unit processor3 ":findDrillLocation:unit"
 
   348 wait 1e-15
   349 read *tmp194 processor3 ":layoutThoriumDrill*finished"
   350 jump *label123 equal *tmp194 false
-    * read *tmp195 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp195
+  351 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   352 op equal *tmp196 :buildThoriumDrill:result false
   353 jump *label124 equal *tmp196 false
   354 set :error:error "Cannot locate spot for thorium drill"
 
   372 wait 1e-15
   373 read *tmp204 processor5 ":buildBlockAt*finished"
   374 jump *label127 equal *tmp204 false
-    * read *tmp205 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp205
+  375 read .thoriumDrill processor5 ":buildBlockAt*retval"
   376 set :buildRemoteBlock:cfg "A¡ASJZ-water-extractor16"
-    * read *tmp57 processor3 ".water1X"
-    * set :buildRemoteBlock:x *tmp57
-    * read *tmp58 processor3 ".water1Y"
-    * set :buildRemoteBlock:y *tmp58
+  377 read :buildRemoteBlock:x processor3 ".water1X"
+  378 read :buildRemoteBlock:y processor3 ".water1Y"
   379 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   380 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   381 label *label128
   382 set :buildRemoteBlock:cfg "A¡ASJZ-water-extractor16"
-    * read *tmp61 processor3 ".water2X"
-    * set :buildRemoteBlock:x *tmp61
-    * read *tmp62 processor3 ".water2Y"
-    * set :buildRemoteBlock:y *tmp62
+  383 read :buildRemoteBlock:x processor3 ".water2X"
+  384 read :buildRemoteBlock:y processor3 ".water2Y"
   385 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   386 call *label36 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   387 label *label129
   388 set :buildRemoteBlock:cfg "AAOJ\-steam-generator18"
-    * read *tmp63 processor3 ".generatorX"
-    * set :buildRemoteBlock:x *tmp63
-    * read *tmp64 processor3 ".generatorY"
-    * set :buildRemoteBlock:y *tmp64
+  389 read :buildRemoteBlock:x processor3 ".generatorX"
+  390 read :buildRemoteBlock:y processor3 ".generatorY"
   391 setaddr :buildRemoteBlock*retaddr *label130 (h:*label130)
   392 call *label36 *invalid :buildRemoteBlock*retval (m:*label130) (h:*label130)
   393 label *label130
-    * set *tmp208 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp208
+  394 set .thoriumGenerator :buildRemoteBlock*retval
   395 set :buildRemoteBlock:cfg "AFJJT-power-node10"
-    * read *tmp65 processor3 ".node1X"
-    * set :buildRemoteBlock:x *tmp65
-    * read *tmp66 processor3 ".node1Y"
-    * set :buildRemoteBlock:y *tmp66
+  396 read :buildRemoteBlock:x processor3 ".node1X"
+  397 read :buildRemoteBlock:y processor3 ".node1Y"
   398 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   399 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   400 label *label131
   401 set :buildRemoteBlock:cfg "AFJJT-power-node10"
-    * read *tmp67 processor3 ".node2X"
-    * set :buildRemoteBlock:x *tmp67
-    * read *tmp68 processor3 ".node2Y"
-    * set :buildRemoteBlock:y *tmp68
+  402 read :buildRemoteBlock:x processor3 ".node2X"
+  403 read :buildRemoteBlock:y processor3 ".node2Y"
   404 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
   405 call *label36 *invalid :buildRemoteBlock*retval (m:*label132) (h:*label132)
   406 label *label132
   407 set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"
-    * read *tmp69 processor3 ".panelX"
-    * set :buildRemoteBlock:x *tmp69
-    * read *tmp70 processor3 ".panelY"
-    * set :buildRemoteBlock:y *tmp70
+  408 read :buildRemoteBlock:x processor3 ".panelX"
+  409 read :buildRemoteBlock:y processor3 ".panelY"
   410 setaddr :buildRemoteBlock*retaddr *label133 (h:*label133)
   411 call *label36 *invalid :buildRemoteBlock*retval (m:*label133) (h:*label133)
   412 label *label133
   413 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read *tmp71 processor3 ".batteryX"
-    * set :buildRemoteBlock:x *tmp71
-    * read *tmp72 processor3 ".batteryY"
-    * set :buildRemoteBlock:y *tmp72
+  414 read :buildRemoteBlock:x processor3 ".batteryX"
+  415 read :buildRemoteBlock:y processor3 ".batteryY"
   416 setaddr :buildRemoteBlock*retaddr *label134 (h:*label134)
   417 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   418 label *label134
-    * set *tmp212 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp212
+  419 set .thoriumBattery :buildRemoteBlock*retval
   420 set :buildRemoteBlock:cfg "A¨JJJ~-container52"
-    * read *tmp59 processor3 ".containerX"
-    * set :buildRemoteBlock:x *tmp59
-    * read *tmp60 processor3 ".containerY"
-    * set :buildRemoteBlock:y *tmp60
+  421 read :buildRemoteBlock:x processor3 ".containerX"
+  422 read :buildRemoteBlock:y processor3 ".containerY"
   423 setaddr :buildRemoteBlock*retaddr *label135 (h:*label135)
   424 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   425 label *label135
-    * set *tmp213 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp213
+  426 set .thoriumContainer :buildRemoteBlock*retval
   427 op equal *tmp214 .thoriumContainer null
   428 jump *label136 equal *tmp214 false
   429 set .thoriumContainer .thoriumDrill
 
   502 label *label155
   503 label *label156
   504 jump *label158 equal true false
-    * op sub *tmp228 @thisy 6
-    * set :lineUpUnits:y *tmp228
+  505 op sub :lineUpUnits:y @thisy 6
   506 set :lineUpUnits:unit @mega
   507 setaddr :lineUpUnits*retaddr *label159 (h:*label159)
   508 call *label42 *invalid :lineUpUnits*retval (m:*label159) (h:*label159)
   509 label *label159
-    * op sub *tmp229 @thisy 10
-    * set :lineUpUnits:y *tmp229
+  510 op sub :lineUpUnits:y @thisy 10
   511 set :lineUpUnits:unit @poly
   512 setaddr :lineUpUnits*retaddr *label160 (h:*label160)
   513 call *label42 *invalid :lineUpUnits*retval (m:*label160) (h:*label160)
   514 label *label160
-    * op sub *tmp230 @thisy 14
-    * set :lineUpUnits:y *tmp230
+  515 op sub :lineUpUnits:y @thisy 14
   516 set :lineUpUnits:unit @mono
   517 setaddr :lineUpUnits*retaddr *label161 (h:*label161)
   518 call *label42 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
   519 label *label161
-    * op sub *tmp231 @thisy 18
-    * set :lineUpUnits:y *tmp231
+  520 op sub :lineUpUnits:y @thisy 18
   521 set :lineUpUnits:unit @flare
   522 setaddr :lineUpUnits*retaddr *label162 (h:*label162)
   523 call *label42 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
 
   680 jump *label206 equal *tmp268 false
   681 sensor *tmp270 .core @titanium
   682 op sub *tmp271 titanium *tmp270
-    * op min *tmp272 7 *tmp271
-    * set *tmp269 *tmp272
+  683 op min *tmp269 7 *tmp271
   684 jump *label207 always
   685 label *label206
   686 set *tmp269 100
 
   712 setaddr :status1*retaddr *label218 (h:*label218)
   713 call *label9 *invalid :status1*retval (m:*label218) (h:*label218)
   714 label *label218
-    * sensor *tmp285 .core @coal
-    * set :supplyBase0:coal *tmp285
-    * sensor *tmp286 .core @sand
-    * set :supplyBase0:sand *tmp286
+  715 sensor :supplyBase0:coal .core @coal
+  716 sensor :supplyBase0:sand .core @sand
   717 op lessThan *tmp287 :supplyBase0:coal :supplyBase0:sand
   718 jump *label219 equal *tmp287 false
   719 set *tmp288 @coal
 
   771 setaddr :status1*retaddr *label234 (h:*label234)
   772 call *label9 *invalid :status1*retval (m:*label234) (h:*label234)
   773 label *label234
-    * sensor *tmp298 .core @coal
-    * set :supplyBase0:coal.1 *tmp298
-    * sensor *tmp299 .core @sand
-    * set :supplyBase0:sand.1 *tmp299
+  774 sensor :supplyBase0:coal.1 .core @coal
+  775 sensor :supplyBase0:sand.1 .core @sand
   776 op lessThanEq *tmp300 :supplyBase0:coal.1 :supplyBase0:sand.1
   777 jump *label235 equal *tmp300 false
   778 set *tmp301 @coal
 
   902 return :buildBlockFromCfg*retaddr
   903 end
   904 label *label38
-    * set *tmp307 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp307
+  905 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   906 set :buildBlockFromCfg:config null
   907 setaddr :buildBlockFromCfg*retaddr *label249 (h:*label249)
   908 call *label37 *invalid :buildBlockFromCfg*retval (m:*label249) (h:*label249)
 
   960 label *label41
   961 label *label256
   962 ubind :flagUnits:unit
-    * set *tmp308 @unit
-    * set :flagUnits:firstUnit *tmp308
+  963 set :flagUnits:firstUnit @unit
   964 label *label257
   965 op equal *tmp309 :flagUnits:firstUnit null
   966 jump *label256 notEqual *tmp309 false
 
   981 ubind :lineUpUnits:unit
   982 set :lineUpUnits:firstUnit @unit
   983 label *label263
-    * sensor *tmp311 @unit @flag
-    * set :lineUpUnits:x *tmp311
+  984 sensor :lineUpUnits:x @unit @flag
   985 ucontrol itemDrop @air 1000
   986 ucontrol move :lineUpUnits:x :lineUpUnits:y
   987 sensor *tmp312 @unit @mining
 
  1010 setaddr :status2*retaddr *label270 (h:*label270)
  1011 call *label10 *invalid :status2*retval (m:*label270) (h:*label270)
  1012 label *label270
-    * set *tmp315 :mineOre.1:ore
-    * set :mineOre:ore *tmp315
+ 1013 set :mineOre:ore :mineOre.1:ore
  1014 set :mineOre:amount 30
  1015 set :mineOre:block .core
  1016 setaddr :mineOre*retaddr *label271 (h:*label271)
 
  1021 end
  1022 label *label23
  1023 sensor *tmp316 :fetchBlock:block @itemCapacity
-    * op min *tmp317 *tmp316 30
-    * set :transportStatus:target *tmp317
+ 1024 op min :transportStatus:target *tmp316 30
  1025 set :transportStatus:item :fetchBlock:item
  1026 setaddr :transportStatus*retaddr *label273 (h:*label273)
  1027 call *label12 *invalid :transportStatus*retval (m:*label273) (h:*label273)
 
  1044 label *label276
  1045 label *label277
  1046 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp320 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp320
+ 1047 sensor :fetchBlock:unitItem @unit @firstItem
  1048 op notEqual *tmp321 :fetchBlock:unitItem null
  1049 op notEqual *tmp322 :fetchBlock:unitItem :fetchBlock:item
  1050 op land *tmp323 *tmp321 *tmp322
 
  1075 setaddr :status2*retaddr *label284 (h:*label284)
  1076 call *label10 *invalid :status2*retval (m:*label284) (h:*label284)
  1077 label *label284
-    * sensor *tmp329 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp329
+ 1078 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1079 sensor *tmp330 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp331 :supplyBlock:blockCapacity *tmp330
-    * set :supplyBlock:missing *tmp331
+ 1080 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
  1081 op greaterThan *tmp332 :supplyBlock:missing 0
  1082 jump *label285 equal *tmp332 false
  1083 set :mineOre:ore :supplyBlock:ore
 
  1094 end
  1095 label *label25
  1096 sensor *tmp334 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp335 *tmp334 30
-    * set :transportStatus:target *tmp335
+ 1097 op min :transportStatus:target *tmp334 30
  1098 set :transportStatus:item :supplyBlockFromCore:item
  1099 setaddr :transportStatus*retaddr *label289 (h:*label289)
  1100 call *label12 *invalid :transportStatus*retval (m:*label289) (h:*label289)
 
  1115 label *label292
  1116 label *label293
  1117 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp336 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp336
+ 1118 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1119 op notEqual *tmp337 :supplyBlockFromCore:unitItem null
  1120 op notEqual *tmp338 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1121 op land *tmp339 *tmp337 *tmp338
 
  1145 op add :unpackCfg:index :unpackCfg:index 1
  1146 read *tmp346 :unpackCfg:cfg *tmp345
  1147 op sub *tmp347 *tmp346 74
-    * lookup block *tmp348 *tmp347
-    * set :unpackCfg:type *tmp348
+ 1148 lookup block :unpackCfg:type *tmp347
  1149 set *tmp349 :unpackCfg:index
  1150 op add :unpackCfg:index :unpackCfg:index 1
  1151 read *tmp350 :unpackCfg:cfg *tmp349
  1152 op sub *tmp351 *tmp350 74
-    * op div *tmp352 *tmp351 2
-    * set :unpackCfg:x *tmp352
+ 1153 op div :unpackCfg:x *tmp351 2
  1154 set *tmp353 :unpackCfg:index
  1155 op add :unpackCfg:index :unpackCfg:index 1
  1156 read *tmp354 :unpackCfg:cfg *tmp353
  1157 op sub *tmp355 *tmp354 74
-    * op div *tmp356 *tmp355 2
-    * set :unpackCfg:y *tmp356
+ 1158 op div :unpackCfg:y *tmp355 2
  1159 set *tmp357 :unpackCfg:index
  1160 op add :unpackCfg:index :unpackCfg:index 1
  1161 read *tmp358 :unpackCfg:cfg *tmp357
-    * op sub *tmp359 *tmp358 74
-    * set :unpackCfg:rotation *tmp359
+ 1162 op sub :unpackCfg:rotation *tmp358 74
  1163 set *tmp360 :unpackCfg:index
  1164 op add :unpackCfg:index :unpackCfg:index 1
  1165 read *tmp361 :unpackCfg:cfg *tmp360
-    * op sub *tmp362 *tmp361 74
-    * set :unpackCfg:ind *tmp362
-    * sensor *tmp363 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp363
-    * sensor *tmp364 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp364
-    * sensor *tmp365 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp365
-    * sensor *tmp366 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp366
-    * sensor *tmp367 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp367
-    * sensor *tmp368 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp368
-    * sensor *tmp369 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp369
+ 1166 op sub :unpackCfg:ind *tmp361 74
+ 1167 sensor :unpackCfg:cu :unpackCfg:type @copper
+ 1168 sensor :unpackCfg:pb :unpackCfg:type @lead
+ 1169 sensor :unpackCfg:gr :unpackCfg:type @graphite
+ 1170 sensor :unpackCfg:si :unpackCfg:type @silicon
+ 1171 sensor :unpackCfg:ti :unpackCfg:type @titanium
+ 1172 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+ 1173 sensor :unpackCfg:th :unpackCfg:type @thorium
  1174 label *label299
  1175 return :unpackCfg*retaddr
  1176 end
 
  1219 write :meetTarget:metaglass processor2 ".targetMetaglass"
  1220 write :meetTarget:thorium processor2 ".targetThorium"
  1221 set copper :meetTarget:copper
-    * op add *tmp373 :meetTarget:lead .leadSurplus
-    * set lead *tmp373
+ 1222 op add lead :meetTarget:lead .leadSurplus
  1223 set graphite :meetTarget:graphite
  1224 set silicon :meetTarget:silicon
  1225 set titanium :meetTarget:titanium
 
  1339 wait 1e-15
  1340 read *tmp413 processor5 ":buildBlockAt*finished"
  1341 jump *label332 equal *tmp413 false
-    * read *tmp414 processor5 ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp414
+ 1342 read :buildBlock*retval processor5 ":buildBlockAt*retval"
  1343 jump *label330 always
  1344 set :buildBlock*retval null
  1345 label *label330
 
  1405 setaddr :moveToBlock*retaddr *label350 (h:*label350)
  1406 call *label18 *invalid :moveToBlock*retval (m:*label350) (h:*label350)
  1407 label *label350
-    * sensor *tmp425 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp425
+ 1408 sensor :depositItems:cap :depositItems:block @itemCapacity
  1409 label *label351
  1410 ucontrol itemDrop :depositItems:block 30
  1411 label *label352
 
  1435 return :depositItems*retaddr
  1436 end
  1437 label *label21
-    * op min *tmp432 :mineOre:amount 30
-    * set :mineOre:amount *tmp432
+ 1438 op min :mineOre:amount :mineOre:amount 30
  1439 set :transportStatus:target :mineOre:amount
  1440 set :transportStatus:item :mineOre:ore
  1441 setaddr :transportStatus*retaddr *label359 (h:*label359)
 
  1465 setaddr :status3*retaddr *label365 (h:*label365)
  1466 call *label11 *invalid :status3*retval (m:*label365) (h:*label365)
  1467 label *label365
-    * op add *tmp436 @second 10
-    * set :mineOre:stop *tmp436
+ 1468 op add :mineOre:stop @second 10
  1469 label *label366
-    * sensor *tmp437 @unit @firstItem
-    * set :mineOre:item *tmp437
+ 1470 sensor :mineOre:item @unit @firstItem
  1471 op notEqual *tmp438 :mineOre:item null
  1472 op notEqual *tmp439 :mineOre:item :mineOre:ore
  1473 op land *tmp440 *tmp438 *tmp439

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   501 call *label41 *invalid :flagUnits*retval (m:*label155) (h:*label155)
   502 label *label155
   503 label *label156
-    * jump *label158 equal true false
   504 op sub :lineUpUnits:y @thisy 6
   505 set :lineUpUnits:unit @mega
   506 setaddr :lineUpUnits*retaddr *label159 (h:*label159)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    28 set .builder @unit
    29 ulocate building core false @copper .coreX .coreY *tmp120 .core
    30 label *label49
-    * op equal *tmp121 .core null
-    * jump *label48 notEqual *tmp121 false
+   31 jump *label48 equal .core null
    32 label *label50
    33 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    34 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
 
    77 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
    78 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    79 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp141 :buildFirstTitaniumDrill:result false
-    * jump *label60 equal *tmp141 false
+   80 jump *label60 notEqual :buildFirstTitaniumDrill:result false
    81 set :error:error "Cannot locate spot for titanium drill"
    82 setaddr :error*retaddr *label62 (h:*label62)
    83 call *label13 *invalid :error*retval (m:*label62) (h:*label62)
 
   201 call *label33 *invalid :supplyBase*retval (m:*label90) (h:*label90)
   202 label *label90
   203 sensor *tmp156 AJTJK-battery1 @totalPower
-    * op lessThan *tmp157 *tmp156 300
-    * jump *label91 equal *tmp157 false
+  204 jump *label91 greaterThanEq *tmp156 300
   205 jump *label89 always
   206 jump *label92 always
   207 label *label91
   208 label *label92
   209 label *label88
   210 read *tmp85 .controller ".monos"
-    * op lessThan *tmp159 *tmp85 3
-    * jump *label87 notEqual *tmp159 false
+  211 jump *label87 lessThan *tmp85 3
   212 label *label89
   213 set .siliconSurplus 65
   214 set :buildBlockFromCfg.1:cfg "A©NHJW-unloader13"
 
   279 label *label108
   280 label *label109
   281 read *tmp86 .controller ".polys"
-    * op lessThan *tmp173 *tmp86 3
-    * jump *label111 equal *tmp173 false
+  282 jump *label111 greaterThanEq *tmp86 3
   283 setaddr :supplyBase*retaddr *label112 (h:*label112)
   284 call *label33 *invalid :supplyBase*retval (m:*label112) (h:*label112)
   285 label *label112
 
   292 label *label113
   293 label *label114
   294 read *tmp84 .controller ".flares"
-    * op lessThan *tmp174 *tmp84 2
-    * jump *label116 equal *tmp174 false
+  295 jump *label116 greaterThanEq *tmp84 2
   296 setaddr :supplyBase*retaddr *label117 (h:*label117)
   297 call *label33 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   298 label *label117
 
   343 read *tmp194 processor3 ":layoutThoriumDrill*finished"
   344 jump *label123 equal *tmp194 false
   345 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp196 :buildThoriumDrill:result false
-    * jump *label124 equal *tmp196 false
+  346 jump *label124 notEqual :buildThoriumDrill:result false
   347 set :error:error "Cannot locate spot for thorium drill"
   348 setaddr :error*retaddr *label126 (h:*label126)
   349 call *label13 *invalid :error*retval (m:*label126) (h:*label126)
 
   417 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   418 label *label135
   419 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp214 .thoriumContainer null
-    * jump *label136 equal *tmp214 false
+  420 jump *label136 notEqual .thoriumContainer null
   421 set .thoriumContainer .thoriumDrill
   422 jump *label137 always
   423 label *label136
 
   439 label *label139
   440 label *label140
   441 read *tmp86 .controller ".polys"
-    * op lessThan *tmp218 *tmp86 3
-    * jump *label142 equal *tmp218 false
+  442 jump *label142 greaterThanEq *tmp86 3
   443 setaddr :supplyBase*retaddr *label143 (h:*label143)
   444 call *label33 *invalid :supplyBase*retval (m:*label143) (h:*label143)
   445 label *label143
 
   461 label *label146
   462 label *label147
   463 read *tmp87 .controller ".megas"
-    * op lessThan *tmp221 *tmp87 1
-    * jump *label149 equal *tmp221 false
+  464 jump *label149 greaterThanEq *tmp87 1
   465 setaddr :supplyBase*retaddr *label150 (h:*label150)
   466 call *label33 *invalid :supplyBase*retval (m:*label150) (h:*label150)
   467 label *label150
 
   533 call *label9 *invalid :status1*retval (m:*label168) (h:*label168)
   534 label *label168
   535 sensor *tmp236 .thoriumBattery @totalPower
-    * op lessThan *tmp237 *tmp236 2000
-    * jump *label169 equal *tmp237 false
+  536 jump *label169 greaterThanEq *tmp236 2000
   537 sensor *tmp239 .core @coal
-    * op lessThan *tmp240 *tmp239 50
-    * jump *label171 equal *tmp240 false
+  538 jump *label171 greaterThanEq *tmp239 50
   539 set :supplyBlock:block .thoriumGenerator
   540 set :supplyBlock:ore @coal
   541 setaddr :supplyBlock*retaddr *label173 (h:*label173)
 
   561 jump *label166 always
   562 label *label165
   563 read *tmp85 .controller ".monos"
-    * op greaterThan *tmp242 *tmp85 3
-    * jump *label176 equal *tmp242 false
+  564 jump *label176 lessThanEq *tmp85 3
   565 set :status1:text "Phase 1: supplying base"
   566 setaddr :status1*retaddr *label179 (h:*label179)
   567 call *label9 *invalid :status1*retval (m:*label179) (h:*label179)
 
   574 jump *label177 always
   575 label *label176
   576 set :supplyBase0:supplied false
-    * op equal *tmp244 A©JNJP-unloader6 null
-    * jump *label182 equal *tmp244 false
+  577 jump *label182 notEqual A©JNJP-unloader6 null
   578 sensor *tmp246 .core @graphite
-    * op lessThan *tmp247 *tmp246 graphite
-    * jump *label184 equal *tmp247 false
+  579 jump *label184 greaterThanEq *tmp246 graphite
   580 sensor *tmp249 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp250 *tmp249 5
-    * jump *label186 equal *tmp250 false
+  581 jump *label186 greaterThanEq *tmp249 5
   582 set :status1:text "Goal 1: graphite requirement"
   583 setaddr :status1*retaddr *label188 (h:*label188)
   584 call *label9 *invalid :status1*retval (m:*label188) (h:*label188)
 
   596 label *label184
   597 label *label185
   598 sensor *tmp252 .core @silicon
-    * op lessThan *tmp253 *tmp252 silicon
-    * jump *label190 equal *tmp253 false
+  599 jump *label190 greaterThanEq *tmp252 silicon
   600 sensor *tmp255 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp256 *tmp255 5
-    * jump *label192 equal *tmp256 false
+  601 jump *label192 greaterThanEq *tmp255 5
   602 set :status1:text "Goal 2: coal for silicon requirement"
   603 setaddr :status1*retaddr *label194 (h:*label194)
   604 call *label9 *invalid :status1*retval (m:*label194) (h:*label194)
 
   612 jump *label193 always
   613 label *label192
   614 sensor *tmp258 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp259 *tmp258 5
-    * jump *label196 equal *tmp259 false
+  615 jump *label196 greaterThanEq *tmp258 5
   616 set :status1:text "Goal 3: sand for silicon requirement"
   617 setaddr :status1*retaddr *label198 (h:*label198)
   618 call *label9 *invalid :status1*retval (m:*label198) (h:*label198)
 
   631 label *label190
   632 label *label191
   633 sensor *tmp261 AJTJK-battery1 @totalPower
-    * op lessThan *tmp262 *tmp261 .powerTarget
-    * jump *label200 equal *tmp262 false
+  634 jump *label200 greaterThanEq *tmp261 .powerTarget
   635 sensor *tmp264 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp265 *tmp264 2
-    * jump *label202 equal *tmp265 false
+  636 jump *label202 greaterThanEq *tmp264 2
   637 set :status1:text "Goal 4: supplying generator"
   638 setaddr :status1*retaddr *label204 (h:*label204)
   639 call *label9 *invalid :status1*retval (m:*label204) (h:*label204)
 
   654 label *label182
   655 label *label183
   656 sensor *tmp267 .core @titanium
-    * op lessThan *tmp268 *tmp267 titanium
-    * jump *label206 equal *tmp268 false
+  657 jump *label206 greaterThanEq *tmp267 titanium
   658 sensor *tmp270 .core @titanium
   659 op sub *tmp271 titanium *tmp270
   660 op min *tmp269 7 *tmp271
 
   664 label *label207
   665 set :supplyBase0:titaniumTrigger *tmp269
   666 sensor *tmp273 .titaniumDrill @titanium
-    * op lessThan *tmp274 *tmp273 :supplyBase0:titaniumTrigger
-    * jump *label208 equal *tmp274 false
-    * op equal *tmp276 :supplyBase0:supplied false
-    * jump *label210 equal *tmp276 false
+  667 jump *label208 greaterThanEq *tmp273 :supplyBase0:titaniumTrigger
+  668 jump *label210 notEqual :supplyBase0:supplied false
   669 sensor *tmp278 AJTJK-battery1 @totalPower
   670 op mul *tmp279 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp280 *tmp278 *tmp279
-    * jump *label212 equal *tmp280 false
+  671 jump *label212 greaterThanEq *tmp278 *tmp279
   672 set :status1:text "Goal 5: supplying generator"
   673 setaddr :status1*retaddr *label214 (h:*label214)
   674 call *label9 *invalid :status1*retval (m:*label214) (h:*label214)
 
   680 jump *label213 always
   681 label *label212
   682 sensor *tmp282 .core @silicon
-    * op lessThan *tmp283 *tmp282 silicon
-    * jump *label216 equal *tmp283 false
+  683 jump *label216 greaterThanEq *tmp282 silicon
   684 set :status1:text "Goal 6: silicon requirement"
   685 setaddr :status1*retaddr *label218 (h:*label218)
   686 call *label9 *invalid :status1*retval (m:*label218) (h:*label218)
   687 label *label218
   688 sensor :supplyBase0:coal .core @coal
   689 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp287 :supplyBase0:coal :supplyBase0:sand
-    * jump *label219 equal *tmp287 false
+  690 jump *label219 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   691 set *tmp288 @coal
   692 jump *label220 always
   693 label *label219
 
   701 jump *label217 always
   702 label *label216
   703 sensor *tmp289 .core @copper
-    * op lessThan *tmp290 *tmp289 copper
-    * jump *label222 equal *tmp290 false
+  704 jump *label222 greaterThanEq *tmp289 copper
   705 set :status1:text "Goal 7: copper requirement"
   706 setaddr :status1*retaddr *label224 (h:*label224)
   707 call *label9 *invalid :status1*retval (m:*label224) (h:*label224)
 
   713 jump *label223 always
   714 label *label222
   715 sensor *tmp292 .core @lead
-    * op lessThan *tmp293 *tmp292 lead
-    * jump *label226 equal *tmp293 false
+  716 jump *label226 greaterThanEq *tmp292 lead
   717 set :status1:text "Goal 8: lead requirement"
   718 setaddr :status1*retaddr *label228 (h:*label228)
   719 call *label9 *invalid :status1*retval (m:*label228) (h:*label228)
 
   725 jump *label227 always
   726 label *label226
   727 sensor *tmp295 .core @metaglass
-    * op lessThan *tmp296 *tmp295 metaglass
-    * jump *label230 equal *tmp296 false
+  728 jump *label230 greaterThanEq *tmp295 metaglass
   729 set :status1:text "Goal 9: metaglass requirement"
   730 setaddr :status1*retaddr *label232 (h:*label232)
   731 call *label9 *invalid :status1*retval (m:*label232) (h:*label232)
 
   742 label *label234
   743 sensor :supplyBase0:coal.1 .core @coal
   744 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp300 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label235 equal *tmp300 false
+  745 jump *label235 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   746 set *tmp301 @coal
   747 jump *label236 always
   748 label *label235
 
   781 end
   782 label *label36
   783 op add *tmp302 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp303 *tmp302 0
-    * jump *label241 equal *tmp303 false
+  784 jump *label241 lessThanEq *tmp302 0
   785 set :unpackCfg:cfg :buildRemoteBlock:cfg
   786 setaddr :unpackCfg*retaddr *label243 (h:*label243)
   787 call *label27 *invalid :unpackCfg*retval (m:*label243) (h:*label243)
 
   929 ubind :flagUnits:unit
   930 set :flagUnits:firstUnit @unit
   931 label *label257
-    * op equal *tmp309 :flagUnits:firstUnit null
-    * jump *label256 notEqual *tmp309 false
+  932 jump *label256 equal :flagUnits:firstUnit null
   933 label *label258
   934 set :flagUnits:x @thisx
   935 label *label259
 
   937 op add :flagUnits:x :flagUnits:x 4
   938 ubind :flagUnits:unit
   939 label *label260
-    * op notEqual *tmp310 @unit :flagUnits:firstUnit
-    * jump *label259 notEqual *tmp310 false
+  940 jump *label259 notEqual @unit :flagUnits:firstUnit
   941 label *label261
   942 label *label255
   943 return :flagUnits*retaddr
 
   957 label *label267
   958 ubind :lineUpUnits:unit
   959 label *label264
-    * op notEqual *tmp314 @unit :lineUpUnits:firstUnit
-    * jump *label263 notEqual *tmp314 false
+  960 jump *label263 notEqual @unit :lineUpUnits:firstUnit
   961 label *label265
   962 label *label262
   963 return :lineUpUnits*retaddr
 
  1042 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1043 sensor *tmp330 :supplyBlock:block :supplyBlock:ore
  1044 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
-    * op greaterThan *tmp332 :supplyBlock:missing 0
-    * jump *label285 equal *tmp332 false
+ 1045 jump *label285 lessThanEq :supplyBlock:missing 0
  1046 set :mineOre:ore :supplyBlock:ore
  1047 set :mineOre:amount :supplyBlock:blockCapacity
  1048 set :mineOre:block :supplyBlock:block
 
  1208 write copper processor7 ".copperTarget"
  1209 label *label311
  1210 sensor *tmp385 .core @copper
-    * op lessThan *tmp386 *tmp385 copper
-    * jump *label315 equal *tmp386 false
+ 1211 jump *label315 greaterThanEq *tmp385 copper
  1212 set *tmp384 false
  1213 jump *label314 always
  1214 jump *label316 always
  1215 label *label315
  1216 label *label316
  1217 sensor *tmp388 .core @lead
-    * op lessThan *tmp389 *tmp388 lead
-    * jump *label317 equal *tmp389 false
+ 1218 jump *label317 greaterThanEq *tmp388 lead
  1219 set *tmp384 false
  1220 jump *label314 always
  1221 jump *label318 always
  1222 label *label317
  1223 label *label318
  1224 sensor *tmp391 .core @graphite
-    * op lessThan *tmp392 *tmp391 graphite
-    * jump *label319 equal *tmp392 false
+ 1225 jump *label319 greaterThanEq *tmp391 graphite
  1226 set *tmp384 false
  1227 jump *label314 always
  1228 jump *label320 always
  1229 label *label319
  1230 label *label320
  1231 sensor *tmp394 .core @silicon
-    * op lessThan *tmp395 *tmp394 silicon
-    * jump *label321 equal *tmp395 false
+ 1232 jump *label321 greaterThanEq *tmp394 silicon
  1233 set *tmp384 false
  1234 jump *label314 always
  1235 jump *label322 always
  1236 label *label321
  1237 label *label322
  1238 sensor *tmp397 .core @titanium
-    * op lessThan *tmp398 *tmp397 titanium
-    * jump *label323 equal *tmp398 false
+ 1239 jump *label323 greaterThanEq *tmp397 titanium
  1240 set *tmp384 false
  1241 jump *label314 always
  1242 jump *label324 always
  1243 label *label323
  1244 label *label324
  1245 sensor *tmp400 .core @metaglass
-    * op lessThan *tmp401 *tmp400 metaglass
-    * jump *label325 equal *tmp401 false
+ 1246 jump *label325 greaterThanEq *tmp400 metaglass
  1247 set *tmp384 false
  1248 jump *label314 always
  1249 jump *label326 always
  1250 label *label325
  1251 label *label326
  1252 sensor *tmp403 .core @thorium
-    * op lessThan *tmp404 *tmp403 thorium
-    * jump *label327 equal *tmp404 false
+ 1253 jump *label327 greaterThanEq *tmp403 thorium
  1254 set *tmp384 false
  1255 jump *label314 always
  1256 jump *label328 always
 
  1260 jump *label314 always
  1261 set *tmp384 null
  1262 label *label314
-    * op equal *tmp406 *tmp384 false
-    * jump *label313 equal *tmp406 false
+ 1263 jump *label313 notEqual *tmp384 false
  1264 setaddr :supplyBase*retaddr *label329 (h:*label329)
  1265 call *label33 *invalid :supplyBase*retval (m:*label329) (h:*label329)
  1266 label *label329
 
  1320 label *label336
  1321 label *label337
  1322 sensor *tmp415 @unit @firstItem
-    * op notEqual *tmp416 *tmp415 null
-    * jump *label340 equal *tmp416 false
+ 1323 jump *label340 equal *tmp415 null
  1324 ucontrol itemDrop @air 1000
  1325 jump *label341 always
  1326 label *label340
 
  1328 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1329 label *label338
  1330 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
-    * op equal *tmp419 *tmp418 false
-    * jump *label337 notEqual *tmp419 false
+ 1331 jump *label337 equal *tmp418 false
  1332 label *label339
  1333 label *label335
  1334 return :moveToEmpty*retaddr
 
  1336 label *label17
  1337 label *label343
  1338 sensor *tmp420 @unit @firstItem
-    * op notEqual *tmp421 *tmp420 null
-    * jump *label345 equal *tmp421 false
+ 1339 jump *label345 equal *tmp420 null
  1340 ucontrol itemDrop @air 1000
  1341 label *label344
  1342 jump *label343 always
 
  1350 call *label11 *invalid :status3*retval (m:*label347) (h:*label347)
  1351 label *label347
  1352 sensor *tmp422 @unit @firstItem
-    * op equal *tmp423 *tmp422 :depositItems:item
-    * jump *label348 equal *tmp423 false
+ 1353 jump *label348 notEqual *tmp422 :depositItems:item
  1354 set :moveToBlock:block :depositItems:block
  1355 set :moveToBlock:radius 6
  1356 setaddr :moveToBlock*retaddr *label350 (h:*label350)
 
  1363 sensor *tmp426 @unit @firstItem
  1364 op mul *tmp427 *tmp426 :depositItems:cap
  1365 sensor *tmp428 :depositItems:block :depositItems:item
-    * op greaterThan *tmp429 *tmp427 *tmp428
-    * jump *label351 notEqual *tmp429 false
+ 1366 jump *label351 greaterThan *tmp427 *tmp428
  1367 label *label353
  1368 jump *label349 always
  1369 label *label348
  1370 label *label354
  1371 sensor *tmp430 @unit @firstItem
-    * op notEqual *tmp431 *tmp430 null
-    * jump *label356 equal *tmp431 false
+ 1372 jump *label356 equal *tmp430 null
  1373 ucontrol itemDrop @air 1000
  1374 label *label355
  1375 jump *label354 always
 
  1402 call *label16 *invalid :moveToEmpty*retval (m:*label361) (h:*label361)
  1403 label *label361
  1404 sensor *tmp433 @unit @firstItem
-    * op notEqual *tmp434 *tmp433 :mineOre:ore
-    * jump *label362 equal *tmp434 false
+ 1405 jump *label362 equal *tmp433 :mineOre:ore
  1406 setaddr :dropAll*retaddr *label364 (h:*label364)
  1407 call *label17 *invalid :dropAll*retval (m:*label364) (h:*label364)
  1408 label *label364
 
  1425 label *label369
  1426 label *label370
  1427 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp442 @second :mineOre:stop
-    * jump *label371 equal *tmp442 false
+ 1428 jump *label371 lessThanEq @second :mineOre:stop
  1429 jump *label368 always
  1430 jump *label372 always
  1431 label *label371
  1432 label *label372
  1433 label *label367
  1434 sensor *tmp444 @unit @totalItems
-    * op lessThan *tmp445 *tmp444 :mineOre:amount
-    * jump *label366 notEqual *tmp445 false
+ 1435 jump *label366 lessThan *tmp444 :mineOre:amount
  1436 label *label368
  1437 ucontrol unbind
  1438 set :depositItems:block :mineOre:block
 
  1462 end
  1463 label *label20
  1464 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
-    * op equal *tmp450 *tmp448 false
-    * jump *label378 equal *tmp450 false
+ 1465 jump *label378 notEqual *tmp448 false
  1466 set :error:error "Cannot locate ore"
  1467 setaddr :error*retaddr *label380 (h:*label380)
  1468 call *label13 *invalid :error*retval (m:*label380) (h:*label380)
 
  1480 label *label382
  1481 label *label383
  1482 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452
-    * op equal *tmp453 *tmp452 false
-    * jump *label385 equal *tmp453 false
+ 1483 jump *label385 notEqual *tmp452 false
  1484 op sub *tmp454 :moveTo:radius 0.5
  1485 ucontrol approach :moveTo:x :moveTo:y *tmp454
  1486 label *label384

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    82 setaddr :error*retaddr *label62 (h:*label62)
    83 call *label13 *invalid :error*retval (m:*label62) (h:*label62)
    84 label *label62
-    * jump *label61 always
    85 label *label60
    86 label *label61
    87 write @pneumatic-drill processor2 ".nextBlock"
 
   202 sensor *tmp156 AJTJK-battery1 @totalPower
   203 jump *label91 greaterThanEq *tmp156 300
   204 jump *label89 always
-    * jump *label92 always
   205 label *label91
   206 label *label92
   207 label *label88
 
   346 setaddr :error*retaddr *label126 (h:*label126)
   347 call *label13 *invalid :error*retval (m:*label126) (h:*label126)
   348 label *label126
-    * jump *label125 always
   349 label *label124
   350 label *label125
   351 write @laser-drill processor5 ":buildBlockAt:block"
 
   416 set .thoriumContainer :buildRemoteBlock*retval
   417 jump *label136 notEqual .thoriumContainer null
   418 set .thoriumContainer .thoriumDrill
-    * jump *label137 always
   419 label *label136
   420 label *label137
   421 write .thoriumDrill processor2 ".thoriumDrill"
 
   545 call *label25 *invalid :supplyBlockFromCore*retval (m:*label174) (h:*label174)
   546 label *label174
   547 label *label172
-    * jump *label170 always
   548 label *label169
   549 label *label170
   550 set :fetchBlock:block .thoriumContainer
 
   584 call *label24 *invalid :supplyBlock*retval (m:*label189) (h:*label189)
   585 label *label189
   586 set :supplyBase0:supplied true
-    * jump *label187 always
   587 label *label186
   588 label *label187
-    * jump *label185 always
   589 label *label184
   590 label *label185
   591 sensor *tmp252 .core @silicon
 
   616 call *label24 *invalid :supplyBlock*retval (m:*label199) (h:*label199)
   617 label *label199
   618 set :supplyBase0:supplied true
-    * jump *label197 always
   619 label *label196
   620 label *label197
   621 label *label193
-    * jump *label191 always
   622 label *label190
   623 label *label191
   624 sensor *tmp261 AJTJK-battery1 @totalPower
 
   635 call *label24 *invalid :supplyBlock*retval (m:*label205) (h:*label205)
   636 label *label205
   637 set :supplyBase0:supplied true
-    * jump *label203 always
   638 label *label202
   639 label *label203
-    * jump *label201 always
   640 label *label200
   641 label *label201
-    * jump *label183 always
   642 label *label182
   643 label *label183
   644 sensor *tmp267 .core @titanium
 
   746 label *label223
   747 label *label217
   748 label *label213
-    * jump *label211 always
   749 label *label210
   750 label *label211
   751 jump *label209 always
 
   801 label *label244
   802 set :buildRemoteBlock*retval :buildBlock*retval
   803 jump *label240 always
-    * jump *label242 always
   804 label *label241
   805 label *label242
   806 set :buildRemoteBlock*retval false
 
   938 sensor *tmp312 @unit @mining
   939 jump *label266 equal *tmp312 false
   940 ucontrol stop
-    * jump *label267 always
   941 label *label266
   942 label *label267
   943 ubind :lineUpUnits:unit
 
   999 op land *tmp323 *tmp321 *tmp322
  1000 jump *label280 equal *tmp323 false
  1001 ucontrol itemDrop @air 1000
-    * jump *label281 always
  1002 label *label280
  1003 label *label281
  1004 label *label278
 
  1033 setaddr :mineOre*retaddr *label287 (h:*label287)
  1034 call *label21 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1035 label *label287
-    * jump *label286 always
  1036 label *label285
  1037 label *label286
  1038 label *label283
 
  1067 op land *tmp339 *tmp337 *tmp338
  1068 jump *label296 equal *tmp339 false
  1069 ucontrol itemDrop @air 1000
-    * jump *label297 always
  1070 label *label296
  1071 label *label297
  1072 label *label294
 
  1193 jump *label315 greaterThanEq *tmp385 copper
  1194 set *tmp384 false
  1195 jump *label314 always
-    * jump *label316 always
  1196 label *label315
  1197 label *label316
  1198 sensor *tmp388 .core @lead
  1199 jump *label317 greaterThanEq *tmp388 lead
  1200 set *tmp384 false
  1201 jump *label314 always
-    * jump *label318 always
  1202 label *label317
  1203 label *label318
  1204 sensor *tmp391 .core @graphite
  1205 jump *label319 greaterThanEq *tmp391 graphite
  1206 set *tmp384 false
  1207 jump *label314 always
-    * jump *label320 always
  1208 label *label319
  1209 label *label320
  1210 sensor *tmp394 .core @silicon
  1211 jump *label321 greaterThanEq *tmp394 silicon
  1212 set *tmp384 false
  1213 jump *label314 always
-    * jump *label322 always
  1214 label *label321
  1215 label *label322
  1216 sensor *tmp397 .core @titanium
  1217 jump *label323 greaterThanEq *tmp397 titanium
  1218 set *tmp384 false
  1219 jump *label314 always
-    * jump *label324 always
  1220 label *label323
  1221 label *label324
  1222 sensor *tmp400 .core @metaglass
  1223 jump *label325 greaterThanEq *tmp400 metaglass
  1224 set *tmp384 false
  1225 jump *label314 always
-    * jump *label326 always
  1226 label *label325
  1227 label *label326
  1228 sensor *tmp403 .core @thorium
  1229 jump *label327 greaterThanEq *tmp403 thorium
  1230 set *tmp384 false
  1231 jump *label314 always
-    * jump *label328 always
  1232 label *label327
  1233 label *label328
  1234 set *tmp384 true
 
  1297 sensor *tmp415 @unit @firstItem
  1298 jump *label340 equal *tmp415 null
  1299 ucontrol itemDrop @air 1000
-    * jump *label341 always
  1300 label *label340
  1301 label *label341
  1302 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1380 setaddr :dropAll*retaddr *label364 (h:*label364)
  1381 call *label17 *invalid :dropAll*retval (m:*label364) (h:*label364)
  1382 label *label364
-    * jump *label363 always
  1383 label *label362
  1384 label *label363
  1385 set :status3:text "Mining..."
 
  1394 op land *tmp440 *tmp438 *tmp439
  1395 jump *label369 equal *tmp440 false
  1396 jump *label368 always
-    * jump *label370 always
  1397 label *label369
  1398 label *label370
  1399 ucontrol mine :mineOre:x :mineOre:y
  1400 jump *label371 lessThanEq @second :mineOre:stop
  1401 jump *label368 always
-    * jump *label372 always
  1402 label *label371
  1403 label *label372
  1404 label *label367
 
  1438 setaddr :error*retaddr *label380 (h:*label380)
  1439 call *label13 *invalid :error*retval (m:*label380) (h:*label380)
  1440 label *label380
-    * jump *label379 always
  1441 label *label378
  1442 label *label379
  1443 label *label377

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-7 instructions):
 
    14 read *tmp116 processor5 "*signature"
    15 jump *label47 notEqual *tmp116 "319badb7a8e178a4:v1"
    16 set .titaniumDrill null
-    * set .thoriumDrill null
    17 set .thoriumBattery null
    18 set .thoriumContainer null
    19 set .thoriumGenerator null
 
    55 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
    56 label *label56
    57 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   58 set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"
    59 setaddr :meetTarget.1*retaddr *label58 (h:*label58)
    60 call *label39 *invalid :meetTarget.1*retval (m:*label58) (h:*label58)
    61 label *label58
 
    94 jump *label63 equal *tmp145 false
    95 read *tmp128 processor5 ":buildFirstTitaniumDrillAt*retval"
    96 jump *label57 always
-    * set *tmp128 null
    97 label *label57
    98 set .titaniumDrill *tmp128
-    * write .titaniumDrill processor2 ".titaniumDrill"
+   99 write *tmp128 processor2 ".titaniumDrill"
   100 set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"
   101 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   102 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   116 call *label37 *invalid :buildBlockFromCfg*retval (m:*label67) (h:*label67)
   117 label *label67
   118 set .controller :buildBlockFromCfg*retval
-    * write processor1 .controller ".timer"
-    * write processor2 .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
+  119 write processor1 :buildBlockFromCfg*retval ".timer"
+  120 write processor2 :buildBlockFromCfg*retval ".display"
+  121 write .core :buildBlockFromCfg*retval ".core"
+  122 write bank1 :buildBlockFromCfg*retval ".bank"
   123 set :block "AJEMJJ-graphite-press0"
   124 setaddr *tmp151 *label71
   125 jump *label68 always
 
   160 setaddr *tmp151 *label80
   161 label *label68
   162 read *tmp152 @this :block
-    * write *tmp152 .controller :block
+  163 write *tmp152 :buildBlockFromCfg*retval :block
   164 label *label69
   165 multijump *tmp151 0 0 (m:marker0)
   166 multilabel *label80 (m:marker0)
 
   178 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   179 label *label83
   180 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target processor2 ".flareTarget"
+  181 write 1 .controller ".flareTarget"
+  182 write 1 processor2 ".flareTarget"
   183 label *label84
   184 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target processor2 ".monoTarget"
+  185 write 3 .controller ".monoTarget"
+  186 write 3 processor2 ".monoTarget"
   187 label *label85
   188 write 85 .controller ".pressTarget"
   189 write 150 .controller ".smelterTarget"
   190 write 30 .controller ".kilnTarget"
   191 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  192 set .siliconSurplus 20
   193 setaddr :buildUnits*retaddr *label86 (h:*label86)
   194 call *label40 *invalid :buildUnits*retval (m:*label86) (h:*label86)
   195 label *label86
 
   255 set .metaglassSurplus 200
   256 set .graphiteSurplus 100
   257 set :setPolyTarget:target 3
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target processor2 ".polyTarget"
+  258 write 3 .controller ".polyTarget"
+  259 write 3 processor2 ".polyTarget"
   260 label *label104
   261 set :buildBlockFromCfg.1:cfg "ALSIJa-silicon-smelter23"
   262 setaddr :buildBlockFromCfg.1*retaddr *label105 (h:*label105)
 
   283 jump *label109 always
   284 label *label111
   285 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target processor2 ".flareTarget"
+  286 write 2 .controller ".flareTarget"
+  287 write 2 processor2 ".flareTarget"
   288 label *label113
   289 label *label114
   290 read *tmp84 .controller ".flares"
 
   386 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   387 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   388 label *label131
-    * set :buildRemoteBlock:cfg "AFJJT-power-node10"
   389 read :buildRemoteBlock:x processor3 ".node2X"
   390 read :buildRemoteBlock:y processor3 ".node2Y"
   391 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
 
   411 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   412 label *label135
   413 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label136 notEqual .thoriumContainer null
+  414 jump *label136 notEqual :buildRemoteBlock*retval null
   415 set .thoriumContainer .thoriumDrill
   416 label *label136
   417 label *label137
 
   427 label *label120
   428 write null processor2 ".nextBlock"
   429 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target processor2 ".megaTarget"
+  430 write 1 .controller ".megaTarget"
+  431 write 1 processor2 ".megaTarget"
   432 label *label139
   433 label *label140
   434 read *tmp86 .controller ".polys"
 
   649 label *label207
   650 set :supplyBase0:titaniumTrigger *tmp269
   651 sensor *tmp273 .titaniumDrill @titanium
-    * jump *label208 greaterThanEq *tmp273 :supplyBase0:titaniumTrigger
+  652 jump *label208 greaterThanEq *tmp273 *tmp269
   653 jump *label210 notEqual :supplyBase0:supplied false
   654 sensor *tmp278 AJTJK-battery1 @totalPower
   655 op mul *tmp279 A©JNJP-unloader6 .powerTarget
 
   679 set *tmp288 @sand
   680 label *label220
   681 set :supplyBase0:ore *tmp288
-    * set :mineOre.1:ore :supplyBase0:ore
+  682 set :mineOre.1:ore *tmp288
   683 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   684 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
   685 label *label221
 
   734 set *tmp301 @sand
   735 label *label236
   736 set :supplyBase0:ore.1 *tmp301
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  737 set :mineOre.1:ore *tmp301
   738 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   739 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)
   740 label *label237
 
   780 set :buildRemoteBlock:th :unpackCfg:th
   781 set :buildRemoteBlock:rotation :unpackCfg:rotation
   782 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  783 set :buildBlock:block :unpackCfg:type
   784 set :buildBlock:x :buildRemoteBlock:x
   785 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  786 set :buildBlock:copper :unpackCfg:cu
+  787 set :buildBlock:lead :unpackCfg:pb
+  788 set :buildBlock:graphite :unpackCfg:gr
+  789 set :buildBlock:silicon :unpackCfg:si
+  790 set :buildBlock:titanium :unpackCfg:ti
+  791 set :buildBlock:metaglass :unpackCfg:mg
+  792 set :buildBlock:thorium :unpackCfg:th
+  793 set :buildBlock:rotation :unpackCfg:rotation
   794 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  795 set :buildBlock:index :unpackCfg:ind
   796 setaddr :buildBlock*retaddr *label244 (h:*label244)
   797 call *label35 *invalid :buildBlock*retval (m:*label244) (h:*label244)
   798 label *label244
 
   802 label *label242
   803 set :buildRemoteBlock*retval false
   804 jump *label240 always
-    * set :buildRemoteBlock*retval null
   805 label *label240
   806 return :buildRemoteBlock*retaddr
   807 end
 
   822 set :buildBlockFromCfg:th :unpackCfg:th
   823 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   824 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp305 .coreX :buildBlockFromCfg:x
-    * op add *tmp306 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  825 op add *tmp305 .coreX :unpackCfg:x
+  826 op add *tmp306 .coreY :unpackCfg:y
+  827 set :buildBlock:block :unpackCfg:type
   828 set :buildBlock:x *tmp305
   829 set :buildBlock:y *tmp306
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  830 set :buildBlock:copper :unpackCfg:cu
+  831 set :buildBlock:lead :unpackCfg:pb
+  832 set :buildBlock:graphite :unpackCfg:gr
+  833 set :buildBlock:silicon :unpackCfg:si
+  834 set :buildBlock:titanium :unpackCfg:ti
+  835 set :buildBlock:metaglass :unpackCfg:mg
+  836 set :buildBlock:thorium :unpackCfg:th
+  837 set :buildBlock:rotation :unpackCfg:rotation
   838 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  839 set :buildBlock:index :unpackCfg:ind
   840 setaddr :buildBlock*retaddr *label247 (h:*label247)
   841 call *label35 *invalid :buildBlock*retval (m:*label247) (h:*label247)
   842 label *label247
   843 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .controller :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+  844 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+  845 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+  846 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
+  847 set :buildBlockFromCfg*retval :buildBlock*retval
   848 jump *label245 always
-    * set :buildBlockFromCfg*retval null
   849 label *label245
   850 return :buildBlockFromCfg*retaddr
   851 end
 
   871 set :meetTarget.1:ti :unpackCfg:ti
   872 set :meetTarget.1:mg :unpackCfg:mg
   873 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  874 set :meetTarget:block :unpackCfg:type
+  875 set :meetTarget:copper :unpackCfg:cu
+  876 set :meetTarget:lead :unpackCfg:pb
+  877 set :meetTarget:graphite :unpackCfg:gr
+  878 set :meetTarget:silicon :unpackCfg:si
+  879 set :meetTarget:titanium :unpackCfg:ti
+  880 set :meetTarget:metaglass :unpackCfg:mg
+  881 set :meetTarget:thorium :unpackCfg:th
   882 setaddr :meetTarget*retaddr *label252 (h:*label252)
   883 call *label34 *invalid :meetTarget*retval (m:*label252) (h:*label252)
   884 label *label252
 
  1081 end
  1082 label *label27
  1083 set :unpackCfg:index 1
-    * set *tmp345 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1084 set *tmp345 1
+ 1085 op add :unpackCfg:index 1 1
  1086 read *tmp346 :unpackCfg:cfg *tmp345
  1087 op sub *tmp347 *tmp346 74
  1088 lookup block :unpackCfg:type *tmp347
-    * set *tmp349 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1089 set *tmp349 2
+ 1090 op add :unpackCfg:index 2 1
  1091 read *tmp350 :unpackCfg:cfg *tmp349
  1092 op sub *tmp351 *tmp350 74
  1093 op div :unpackCfg:x *tmp351 2
-    * set *tmp353 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1094 set *tmp353 3
+ 1095 op add :unpackCfg:index 3 1
  1096 read *tmp354 :unpackCfg:cfg *tmp353
  1097 op sub *tmp355 *tmp354 74
  1098 op div :unpackCfg:y *tmp355 2
-    * set *tmp357 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1099 set *tmp357 4
+ 1100 op add :unpackCfg:index 4 1
  1101 read *tmp358 :unpackCfg:cfg *tmp357
  1102 op sub :unpackCfg:rotation *tmp358 74
-    * set *tmp360 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1103 set *tmp360 5
+ 1104 op add :unpackCfg:index 5 1
  1105 read *tmp361 :unpackCfg:cfg *tmp360
  1106 op sub :unpackCfg:ind *tmp361 74
  1107 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1172 op add *tmp376 :meetTarget:metaglass .metaglassSurplus
  1173 write *tmp376 .controller ".kilnTarget"
  1174 op add *tmp377 :meetTarget:lead .leadSurplus
-    * write *tmp377 .controller ".leadReserve"
+ 1175 write lead .controller ".leadReserve"
  1176 op sign *tmp378 :meetTarget:silicon
  1177 op mul *tmp379 *tmp378 20
  1178 op add *tmp380 :meetTarget:silicon *tmp379
 
  1182 op add *tmp383 :meetTarget:graphite *tmp382
  1183 write *tmp383 .controller ".graphiteReserve"
  1184 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+ 1185 write :meetTarget:copper processor7 ".copperTarget"
  1186 label *label311
  1187 sensor *tmp385 .core @copper
  1188 jump *label315 greaterThanEq *tmp385 copper
 
  1228 label *label328
  1229 set *tmp384 true
  1230 jump *label314 always
-    * set *tmp384 null
  1231 label *label314
  1232 jump *label313 notEqual *tmp384 false
  1233 setaddr :supplyBase*retaddr *label329 (h:*label329)
 
  1265 jump *label332 equal *tmp413 false
  1266 read :buildBlock*retval processor5 ":buildBlockAt*retval"
  1267 jump *label330 always
-    * set :buildBlock*retval null
  1268 label *label330
  1269 return :buildBlock*retaddr
  1270 end
 
  1363 label *label360
  1364 set :mineOre:x :locateOre:x
  1365 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1366 set :moveToEmpty:x :locateOre:x
+ 1367 set :moveToEmpty:y :locateOre:y
  1368 setaddr :moveToEmpty*retaddr *label361 (h:*label361)
  1369 call *label16 *invalid :moveToEmpty*retval (m:*label361) (h:*label361)
  1370 label *label361

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-48 instructions):
 
    54 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
    55 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
    56 label *label56
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    57 set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"
    58 setaddr :meetTarget.1*retaddr *label58 (h:*label58)
    59 call *label39 *invalid :meetTarget.1*retval (m:*label58) (h:*label58)
 
   176 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   177 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   178 label *label83
-    * set :setFlareTarget:target 1
   179 write 1 .controller ".flareTarget"
   180 write 1 processor2 ".flareTarget"
   181 label *label84
-    * set :setMonoTarget:target 3
   182 write 3 .controller ".monoTarget"
   183 write 3 processor2 ".monoTarget"
   184 label *label85
 
   251 set .siliconSurplus 1000
   252 set .metaglassSurplus 200
   253 set .graphiteSurplus 100
-    * set :setPolyTarget:target 3
   254 write 3 .controller ".polyTarget"
   255 write 3 processor2 ".polyTarget"
   256 label *label104
 
   278 label *label110
   279 jump *label109 always
   280 label *label111
-    * set :setFlareTarget.1:target 2
   281 write 2 .controller ".flareTarget"
   282 write 2 processor2 ".flareTarget"
   283 label *label113
 
   362 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   363 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   364 label *label128
-    * set :buildRemoteBlock:cfg "A¡ASJZ-water-extractor16"
   365 read :buildRemoteBlock:x processor3 ".water2X"
   366 read :buildRemoteBlock:y processor3 ".water2Y"
   367 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
 
   420 jump *label138 equal *tmp217 false
   421 label *label120
   422 write null processor2 ".nextBlock"
-    * set :setMegaTarget:target 1
   423 write 1 .controller ".megaTarget"
   424 write 1 processor2 ".megaTarget"
   425 label *label139
 
   640 label *label206
   641 set *tmp269 100
   642 label *label207
-    * set :supplyBase0:titaniumTrigger *tmp269
   643 sensor *tmp273 .titaniumDrill @titanium
   644 jump *label208 greaterThanEq *tmp273 *tmp269
   645 jump *label210 notEqual :supplyBase0:supplied false
 
   670 label *label219
   671 set *tmp288 @sand
   672 label *label220
-    * set :supplyBase0:ore *tmp288
   673 set :mineOre.1:ore *tmp288
   674 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   675 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
 
   724 label *label235
   725 set *tmp301 @sand
   726 label *label236
-    * set :supplyBase0:ore.1 *tmp301
   727 set :mineOre.1:ore *tmp301
   728 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   729 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)
 
   760 setaddr :unpackCfg*retaddr *label243 (h:*label243)
   761 call *label27 *invalid :unpackCfg*retval (m:*label243) (h:*label243)
   762 label *label243
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   763 set :buildBlock:block :unpackCfg:type
   764 set :buildBlock:x :buildRemoteBlock:x
   765 set :buildBlock:y :buildRemoteBlock:y
 
   790 setaddr :unpackCfg*retaddr *label246 (h:*label246)
   791 call *label27 *invalid :unpackCfg*retval (m:*label246) (h:*label246)
   792 label *label246
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   793 op add *tmp305 .coreX :unpackCfg:x
   794 op add *tmp306 .coreY :unpackCfg:y
   795 set :buildBlock:block :unpackCfg:type
 
   808 setaddr :buildBlock*retaddr *label247 (h:*label247)
   809 call *label35 *invalid :buildBlock*retval (m:*label247) (h:*label247)
   810 label *label247
-    * set :buildBlockFromCfg:building :buildBlock*retval
   811 write :buildBlock*retval @this :buildBlockFromCfg:cfg
   812 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   813 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
 
   830 setaddr :unpackCfg*retaddr *label251 (h:*label251)
   831 call *label27 *invalid :unpackCfg*retval (m:*label251) (h:*label251)
   832 label *label251
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   833 set :meetTarget:block :unpackCfg:type
   834 set :meetTarget:copper :unpackCfg:cu
   835 set :meetTarget:lead :unpackCfg:pb
 
  1039 return :supplyBlockFromCore*retaddr
  1040 end
  1041 label *label27
-    * set :unpackCfg:index 1
  1042 set *tmp345 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp346 :unpackCfg:cfg *tmp345
+ 1043 read *tmp346 :unpackCfg:cfg 1
  1044 op sub *tmp347 *tmp346 74
  1045 lookup block :unpackCfg:type *tmp347
  1046 set *tmp349 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp350 :unpackCfg:cfg *tmp349
+ 1047 read *tmp350 :unpackCfg:cfg 2
  1048 op sub *tmp351 *tmp350 74
  1049 op div :unpackCfg:x *tmp351 2
  1050 set *tmp353 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp354 :unpackCfg:cfg *tmp353
+ 1051 read *tmp354 :unpackCfg:cfg 3
  1052 op sub *tmp355 *tmp354 74
  1053 op div :unpackCfg:y *tmp355 2
  1054 set *tmp357 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp358 :unpackCfg:cfg *tmp357
+ 1055 read *tmp358 :unpackCfg:cfg 4
  1056 op sub :unpackCfg:rotation *tmp358 74
  1057 set *tmp360 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp361 :unpackCfg:cfg *tmp360
+ 1058 read *tmp361 :unpackCfg:cfg 5
  1059 op sub :unpackCfg:ind *tmp361 74
  1060 sensor :unpackCfg:cu :unpackCfg:type @copper
  1061 sensor :unpackCfg:pb :unpackCfg:type @lead
 
  1124 write *tmp375 .controller ".smelterTarget"
  1125 op add *tmp376 :meetTarget:metaglass .metaglassSurplus
  1126 write *tmp376 .controller ".kilnTarget"
-    * op add *tmp377 :meetTarget:lead .leadSurplus
  1127 write lead .controller ".leadReserve"
  1128 op sign *tmp378 :meetTarget:silicon
  1129 op mul *tmp379 *tmp378 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
  1039 return :supplyBlockFromCore*retaddr
  1040 end
  1041 label *label27
-    * set *tmp345 1
  1042 read *tmp346 :unpackCfg:cfg 1
  1043 op sub *tmp347 *tmp346 74
  1044 lookup block :unpackCfg:type *tmp347
-    * set *tmp349 2
  1045 read *tmp350 :unpackCfg:cfg 2
  1046 op sub *tmp351 *tmp350 74
  1047 op div :unpackCfg:x *tmp351 2
-    * set *tmp353 3
  1048 read *tmp354 :unpackCfg:cfg 3
  1049 op sub *tmp355 *tmp354 74
  1050 op div :unpackCfg:y *tmp355 2
-    * set *tmp357 4
  1051 read *tmp358 :unpackCfg:cfg 4
  1052 op sub :unpackCfg:rotation *tmp358 74
-    * set *tmp360 5
  1053 read *tmp361 :unpackCfg:cfg 5
  1054 op sub :unpackCfg:ind *tmp361 74
  1055 sensor :unpackCfg:cu :unpackCfg:type @copper

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1388 setaddr :status3*retaddr *label382 (h:*label382)
  1389 call *label11 *invalid :status3*retval (m:*label382) (h:*label382)
  1390 label *label382
+ 1391 op sub *tmp454 :moveTo:radius 0.5
  1392 label *label383
  1393 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452
  1394 jump *label385 notEqual *tmp452 false
-    * op sub *tmp454 :moveTo:radius 0.5
  1395 ucontrol approach :moveTo:x :moveTo:y *tmp454
  1396 label *label384
  1397 jump *label383 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   405 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   406 label *label135
   407 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label136 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label136
-    * label *label137
+  408 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   409 write .thoriumDrill processor2 ".thoriumDrill"
   410 write .thoriumContainer processor2 ".thoriumContainer"
   411 write .thoriumContainer processor6 ":setThoriumContainer:container"
 
   661 label *label218
   662 sensor :supplyBase0:coal .core @coal
   663 sensor :supplyBase0:sand .core @sand
-    * jump *label219 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp288 @coal
-    * jump *label220 always
-    * label *label219
-    * set *tmp288 @sand
-    * label *label220
+  664 select *tmp288 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   665 set :mineOre.1:ore *tmp288
   666 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   667 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
 
   710 label *label234
   711 sensor :supplyBase0:coal.1 .core @coal
   712 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label235 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp301 @coal
-    * jump *label236 always
-    * label *label235
-    * set *tmp301 @sand
-    * label *label236
+  713 select *tmp301 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   714 set :mineOre.1:ore *tmp301
   715 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   716 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   628 label *label201
   629 label *label182
   630 label *label183
+  631 set *tmp269 100
   632 sensor *tmp267 .core @titanium
-    * jump *label206 greaterThanEq *tmp267 titanium
+  633 jump *label207 greaterThanEq *tmp267 titanium
   634 sensor *tmp270 .core @titanium
   635 op sub *tmp271 titanium *tmp270
   636 op min *tmp269 7 *tmp271
   637 jump *label207 always
-    * label *label206
-    * set *tmp269 100
   638 label *label207
   639 sensor *tmp273 .titaniumDrill @titanium
   640 jump *label208 greaterThanEq *tmp273 *tmp269

Modifications by Unroll iteration loop at CoreBuilder.mnd:334:5 (-2 instructions):
 
   119 write processor2 :buildBlockFromCfg*retval ".display"
   120 write .core :buildBlockFromCfg*retval ".core"
   121 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp151 *label71
-    * jump *label68 always
-    * multilabel *label71 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp151 *label72
-    * jump *label68 always
-    * multilabel *label72 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp151 *label73
-    * jump *label68 always
-    * multilabel *label73 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp151 *label74
-    * jump *label68 always
-    * multilabel *label74 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp151 *label75
-    * jump *label68 always
-    * multilabel *label75 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp151 *label76
-    * jump *label68 always
-    * multilabel *label76 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp151 *label77
-    * jump *label68 always
-    * multilabel *label77 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp151 *label78
-    * jump *label68 always
-    * multilabel *label78 (m:marker0)
-    * set :block "A~JPJR-overflow-gate8"
-    * setaddr *tmp151 *label79
-    * jump *label68 always
-    * multilabel *label79 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp151 *label80
-    * label *label68
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
-    * label *label69
-    * multijump *tmp151 0 0 (m:marker0)
-    * multilabel *label80 (m:marker0)
-    * label *label70
+  122 set :block "AJEMJJ-graphite-press0"
+  123 label *label388
+  124 read *tmp152 @this :block
+  125 write *tmp152 :buildBlockFromCfg*retval :block
+  126 label *label389
+  127 set :block "AJTJK-battery1"
+  128 label *label392
+  129 read *tmp152 @this :block
+  130 write *tmp152 :buildBlockFromCfg*retval :block
+  131 label *label393
+  132 set :block "ALTJL-battery2"
+  133 label *label396
+  134 read *tmp152 @this :block
+  135 write *tmp152 :buildBlockFromCfg*retval :block
+  136 label *label397
+  137 set :block "AJRJM-combustion-generator3"
+  138 label *label400
+  139 read *tmp152 @this :block
+  140 write *tmp152 :buildBlockFromCfg*retval :block
+  141 label *label401
+  142 set :block "ALMQJN-silicon-smelter4"
+  143 label *label404
+  144 read *tmp152 @this :block
+  145 write *tmp152 :buildBlockFromCfg*retval :block
+  146 label *label405
+  147 set :block "A{LNJO-inverted-sorter5"
+  148 label *label408
+  149 read *tmp152 @this :block
+  150 write *tmp152 :buildBlockFromCfg*retval :block
+  151 label *label409
+  152 set :block "A©JNJP-unloader6"
+  153 label *label412
+  154 read *tmp152 @this :block
+  155 write *tmp152 :buildBlockFromCfg*retval :block
+  156 label *label413
+  157 set :block "A{HNJQ-inverted-sorter7"
+  158 label *label416
+  159 read *tmp152 @this :block
+  160 write *tmp152 :buildBlockFromCfg*retval :block
+  161 label *label417
+  162 set :block "A~JPJR-overflow-gate8"
+  163 label *label420
+  164 read *tmp152 @this :block
+  165 write *tmp152 :buildBlockFromCfg*retval :block
+  166 label *label421
+  167 set :block "AÕFFJS-micro-processor9"
+  168 label *label424
+  169 read *tmp152 @this :block
+  170 write *tmp152 :buildBlockFromCfg*retval :block
+  171 label *label425
+  172 label *label70
   173 set :buildBlockFromCfg.1:cfg "AFJJT-power-node10"
   174 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   175 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   121 write bank1 :buildBlockFromCfg*retval ".bank"
   122 set :block "AJEMJJ-graphite-press0"
   123 label *label388
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  124 read *tmp152 @this "AJEMJJ-graphite-press0"
+  125 write *tmp152 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   126 label *label389
   127 set :block "AJTJK-battery1"
   128 label *label392
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  129 read *tmp152 @this "AJTJK-battery1"
+  130 write *tmp152 :buildBlockFromCfg*retval "AJTJK-battery1"
   131 label *label393
   132 set :block "ALTJL-battery2"
   133 label *label396
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  134 read *tmp152 @this "ALTJL-battery2"
+  135 write *tmp152 :buildBlockFromCfg*retval "ALTJL-battery2"
   136 label *label397
   137 set :block "AJRJM-combustion-generator3"
   138 label *label400
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  139 read *tmp152 @this "AJRJM-combustion-generator3"
+  140 write *tmp152 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   141 label *label401
   142 set :block "ALMQJN-silicon-smelter4"
   143 label *label404
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  144 read *tmp152 @this "ALMQJN-silicon-smelter4"
+  145 write *tmp152 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   146 label *label405
   147 set :block "A{LNJO-inverted-sorter5"
   148 label *label408
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  149 read *tmp152 @this "A{LNJO-inverted-sorter5"
+  150 write *tmp152 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   151 label *label409
   152 set :block "A©JNJP-unloader6"
   153 label *label412
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  154 read *tmp152 @this "A©JNJP-unloader6"
+  155 write *tmp152 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   156 label *label413
   157 set :block "A{HNJQ-inverted-sorter7"
   158 label *label416
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  159 read *tmp152 @this "A{HNJQ-inverted-sorter7"
+  160 write *tmp152 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   161 label *label417
   162 set :block "A~JPJR-overflow-gate8"
   163 label *label420
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  164 read *tmp152 @this "A~JPJR-overflow-gate8"
+  165 write *tmp152 :buildBlockFromCfg*retval "A~JPJR-overflow-gate8"
   166 label *label421
   167 set :block "AÕFFJS-micro-processor9"
   168 label *label424
-    * read *tmp152 @this :block
-    * write *tmp152 :buildBlockFromCfg*retval :block
+  169 read *tmp152 @this "AÕFFJS-micro-processor9"
+  170 write *tmp152 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
   171 label *label425
   172 label *label70
   173 set :buildBlockFromCfg.1:cfg "AFJJT-power-node10"
 
   411 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   412 label *label135
   413 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  414 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   415 write .thoriumDrill processor2 ".thoriumDrill"
   416 write .thoriumContainer processor2 ".thoriumContainer"
   417 write .thoriumContainer processor6 ":setThoriumContainer:container"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   119 write processor2 :buildBlockFromCfg*retval ".display"
   120 write .core :buildBlockFromCfg*retval ".core"
   121 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   122 label *label388
   123 read *tmp152 @this "AJEMJJ-graphite-press0"
   124 write *tmp152 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   125 label *label389
-    * set :block "AJTJK-battery1"
   126 label *label392
   127 read *tmp152 @this "AJTJK-battery1"
   128 write *tmp152 :buildBlockFromCfg*retval "AJTJK-battery1"
   129 label *label393
-    * set :block "ALTJL-battery2"
   130 label *label396
   131 read *tmp152 @this "ALTJL-battery2"
   132 write *tmp152 :buildBlockFromCfg*retval "ALTJL-battery2"
   133 label *label397
-    * set :block "AJRJM-combustion-generator3"
   134 label *label400
   135 read *tmp152 @this "AJRJM-combustion-generator3"
   136 write *tmp152 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   137 label *label401
-    * set :block "ALMQJN-silicon-smelter4"
   138 label *label404
   139 read *tmp152 @this "ALMQJN-silicon-smelter4"
   140 write *tmp152 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   141 label *label405
-    * set :block "A{LNJO-inverted-sorter5"
   142 label *label408
   143 read *tmp152 @this "A{LNJO-inverted-sorter5"
   144 write *tmp152 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   145 label *label409
-    * set :block "A©JNJP-unloader6"
   146 label *label412
   147 read *tmp152 @this "A©JNJP-unloader6"
   148 write *tmp152 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   149 label *label413
-    * set :block "A{HNJQ-inverted-sorter7"
   150 label *label416
   151 read *tmp152 @this "A{HNJQ-inverted-sorter7"
   152 write *tmp152 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   153 label *label417
-    * set :block "A~JPJR-overflow-gate8"
   154 label *label420
   155 read *tmp152 @this "A~JPJR-overflow-gate8"
   156 write *tmp152 :buildBlockFromCfg*retval "A~JPJR-overflow-gate8"
   157 label *label421
-    * set :block "AÕFFJS-micro-processor9"
   158 label *label424
   159 read *tmp152 @this "AÕFFJS-micro-processor9"
   160 write *tmp152 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
 
   400 setaddr :buildRemoteBlock*retaddr *label135 (h:*label135)
   401 call *label36 *invalid :buildRemoteBlock*retval (m:*label135) (h:*label135)
   402 label *label135
-    * set .thoriumContainer :buildRemoteBlock*retval
   403 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   404 write .thoriumDrill processor2 ".thoriumDrill"
   405 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Unroll iteration loop at CoreBuilder.mnd:166:5 (-2 instructions):
 
  1045 end
  1046 label *label34
  1047 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp371 *label304
-    * jump *label301 always
-    * multilabel *label304 (m:marker1)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp371 *label305
-    * jump *label301 always
-    * multilabel *label305 (m:marker1)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp371 *label306
-    * jump *label301 always
-    * multilabel *label306 (m:marker1)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp371 *label307
-    * jump *label301 always
-    * multilabel *label307 (m:marker1)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp371 *label308
-    * jump *label301 always
-    * multilabel *label308 (m:marker1)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp371 *label309
-    * jump *label301 always
-    * multilabel *label309 (m:marker1)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp371 *label310
-    * label *label301
-    * op sign *tmp372 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label302
-    * multijump *tmp371 0 0 (m:marker1)
-    * multilabel *label310 (m:marker1)
-    * label *label303
+ 1048 set :meetTarget:t :meetTarget:copper
+ 1049 label *label429
+ 1050 op sign *tmp372 :meetTarget:t
+ 1051 op add :meetTarget:count :meetTarget:count *tmp372
+ 1052 label *label430
+ 1053 set :meetTarget:t :meetTarget:lead
+ 1054 label *label433
+ 1055 op sign *tmp372 :meetTarget:t
+ 1056 op add :meetTarget:count :meetTarget:count *tmp372
+ 1057 label *label434
+ 1058 set :meetTarget:t :meetTarget:graphite
+ 1059 label *label437
+ 1060 op sign *tmp372 :meetTarget:t
+ 1061 op add :meetTarget:count :meetTarget:count *tmp372
+ 1062 label *label438
+ 1063 set :meetTarget:t :meetTarget:silicon
+ 1064 label *label441
+ 1065 op sign *tmp372 :meetTarget:t
+ 1066 op add :meetTarget:count :meetTarget:count *tmp372
+ 1067 label *label442
+ 1068 set :meetTarget:t :meetTarget:titanium
+ 1069 label *label445
+ 1070 op sign *tmp372 :meetTarget:t
+ 1071 op add :meetTarget:count :meetTarget:count *tmp372
+ 1072 label *label446
+ 1073 set :meetTarget:t :meetTarget:metaglass
+ 1074 label *label449
+ 1075 op sign *tmp372 :meetTarget:t
+ 1076 op add :meetTarget:count :meetTarget:count *tmp372
+ 1077 label *label450
+ 1078 set :meetTarget:t :meetTarget:thorium
+ 1079 label *label453
+ 1080 op sign *tmp372 :meetTarget:t
+ 1081 op add :meetTarget:count :meetTarget:count *tmp372
+ 1082 label *label454
+ 1083 label *label303
  1084 write :meetTarget:count processor2 ".totalTargets"
  1085 write :meetTarget:block processor2 ".nextBlock"
  1086 write :meetTarget:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1047 set :meetTarget:count 0
  1048 set :meetTarget:t :meetTarget:copper
  1049 label *label429
-    * op sign *tmp372 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp372
+ 1050 op sign *tmp372 :meetTarget:copper
+ 1051 op add :meetTarget:count 0 *tmp372
  1052 label *label430
  1053 set :meetTarget:t :meetTarget:lead
  1054 label *label433
-    * op sign *tmp372 :meetTarget:t
+ 1055 op sign *tmp372 :meetTarget:lead
  1056 op add :meetTarget:count :meetTarget:count *tmp372
  1057 label *label434
  1058 set :meetTarget:t :meetTarget:graphite
  1059 label *label437
-    * op sign *tmp372 :meetTarget:t
+ 1060 op sign *tmp372 :meetTarget:graphite
  1061 op add :meetTarget:count :meetTarget:count *tmp372
  1062 label *label438
  1063 set :meetTarget:t :meetTarget:silicon
  1064 label *label441
-    * op sign *tmp372 :meetTarget:t
+ 1065 op sign *tmp372 :meetTarget:silicon
  1066 op add :meetTarget:count :meetTarget:count *tmp372
  1067 label *label442
  1068 set :meetTarget:t :meetTarget:titanium
  1069 label *label445
-    * op sign *tmp372 :meetTarget:t
+ 1070 op sign *tmp372 :meetTarget:titanium
  1071 op add :meetTarget:count :meetTarget:count *tmp372
  1072 label *label446
  1073 set :meetTarget:t :meetTarget:metaglass
  1074 label *label449
-    * op sign *tmp372 :meetTarget:t
+ 1075 op sign *tmp372 :meetTarget:metaglass
  1076 op add :meetTarget:count :meetTarget:count *tmp372
  1077 label *label450
  1078 set :meetTarget:t :meetTarget:thorium
  1079 label *label453
-    * op sign *tmp372 :meetTarget:t
+ 1080 op sign *tmp372 :meetTarget:thorium
  1081 op add :meetTarget:count :meetTarget:count *tmp372
  1082 label *label454
  1083 label *label303

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1044 return :unpackCfg*retaddr
  1045 end
  1046 label *label34
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1047 label *label429
  1048 op sign *tmp372 :meetTarget:copper
  1049 op add :meetTarget:count 0 *tmp372
  1050 label *label430
-    * set :meetTarget:t :meetTarget:lead
  1051 label *label433
  1052 op sign *tmp372 :meetTarget:lead
  1053 op add :meetTarget:count :meetTarget:count *tmp372
  1054 label *label434
-    * set :meetTarget:t :meetTarget:graphite
  1055 label *label437
  1056 op sign *tmp372 :meetTarget:graphite
  1057 op add :meetTarget:count :meetTarget:count *tmp372
  1058 label *label438
-    * set :meetTarget:t :meetTarget:silicon
  1059 label *label441
  1060 op sign *tmp372 :meetTarget:silicon
  1061 op add :meetTarget:count :meetTarget:count *tmp372
  1062 label *label442
-    * set :meetTarget:t :meetTarget:titanium
  1063 label *label445
  1064 op sign *tmp372 :meetTarget:titanium
  1065 op add :meetTarget:count :meetTarget:count *tmp372
  1066 label *label446
-    * set :meetTarget:t :meetTarget:metaglass
  1067 label *label449
  1068 op sign *tmp372 :meetTarget:metaglass
  1069 op add :meetTarget:count :meetTarget:count *tmp372
  1070 label *label450
-    * set :meetTarget:t :meetTarget:thorium
  1071 label *label453
  1072 op sign *tmp372 :meetTarget:thorium
  1073 op add :meetTarget:count :meetTarget:count *tmp372

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   507 write *tmp234 processor7 ".sandTarget"
   508 jump *label165 equal .thoriumContainer false
   509 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label168 (h:*label168)
-    * call *label9 *invalid :status1*retval (m:*label168) (h:*label168)
-    * label *label168
+  510 label *label458
+  511 write :status1:text processor2 ".status1"
+  512 label *label459
   513 sensor *tmp236 .thoriumBattery @totalPower
   514 jump *label169 greaterThanEq *tmp236 2000
   515 sensor *tmp239 .core @coal
 
   540 read *tmp85 .controller ".monos"
   541 jump *label176 lessThanEq *tmp85 3
   542 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label179 (h:*label179)
-    * call *label9 *invalid :status1*retval (m:*label179) (h:*label179)
-    * label *label179
+  543 label *label460
+  544 write :status1:text processor2 ".status1"
+  545 label *label461
   546 set :mineOre.1:ore @coal
   547 setaddr :mineOre.1*retaddr *label180 (h:*label180)
   548 call *label22 *invalid :mineOre.1*retval (m:*label180) (h:*label180)
 
   557 sensor *tmp249 AJEMJJ-graphite-press0 @coal
   558 jump *label186 greaterThanEq *tmp249 5
   559 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label188 (h:*label188)
-    * call *label9 *invalid :status1*retval (m:*label188) (h:*label188)
-    * label *label188
+  560 label *label462
+  561 write :status1:text processor2 ".status1"
+  562 label *label463
   563 set :supplyBlock:block AJEMJJ-graphite-press0
   564 set :supplyBlock:ore @coal
   565 setaddr :supplyBlock*retaddr *label189 (h:*label189)
 
   575 sensor *tmp255 ALMQJN-silicon-smelter4 @coal
   576 jump *label192 greaterThanEq *tmp255 5
   577 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label194 (h:*label194)
-    * call *label9 *invalid :status1*retval (m:*label194) (h:*label194)
-    * label *label194
+  578 label *label464
+  579 write :status1:text processor2 ".status1"
+  580 label *label465
   581 set :supplyBlock:block ALMQJN-silicon-smelter4
   582 set :supplyBlock:ore @coal
   583 setaddr :supplyBlock*retaddr *label195 (h:*label195)
 
   589 sensor *tmp258 ALMQJN-silicon-smelter4 @sand
   590 jump *label196 greaterThanEq *tmp258 5
   591 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label198 (h:*label198)
-    * call *label9 *invalid :status1*retval (m:*label198) (h:*label198)
-    * label *label198
+  592 label *label466
+  593 write :status1:text processor2 ".status1"
+  594 label *label467
   595 set :supplyBlock:block ALMQJN-silicon-smelter4
   596 set :supplyBlock:ore @sand
   597 setaddr :supplyBlock*retaddr *label199 (h:*label199)
 
   608 sensor *tmp264 AJRJM-combustion-generator3 @coal
   609 jump *label202 greaterThanEq *tmp264 2
   610 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label204 (h:*label204)
-    * call *label9 *invalid :status1*retval (m:*label204) (h:*label204)
-    * label *label204
+  611 label *label468
+  612 write :status1:text processor2 ".status1"
+  613 label *label469
   614 set :supplyBlock:block AJRJM-combustion-generator3
   615 set :supplyBlock:ore @coal
   616 setaddr :supplyBlock*retaddr *label205 (h:*label205)
 
   638 op mul *tmp279 A©JNJP-unloader6 .powerTarget
   639 jump *label212 greaterThanEq *tmp278 *tmp279
   640 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label214 (h:*label214)
-    * call *label9 *invalid :status1*retval (m:*label214) (h:*label214)
-    * label *label214
+  641 label *label470
+  642 write :status1:text processor2 ".status1"
+  643 label *label471
   644 set :mineOre.1:ore @coal
   645 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   646 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
 
   650 sensor *tmp282 .core @silicon
   651 jump *label216 greaterThanEq *tmp282 silicon
   652 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label218 (h:*label218)
-    * call *label9 *invalid :status1*retval (m:*label218) (h:*label218)
-    * label *label218
+  653 label *label472
+  654 write :status1:text processor2 ".status1"
+  655 label *label473
   656 sensor :supplyBase0:coal .core @coal
   657 sensor :supplyBase0:sand .core @sand
   658 select *tmp288 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   665 sensor *tmp289 .core @copper
   666 jump *label222 greaterThanEq *tmp289 copper
   667 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label224 (h:*label224)
-    * call *label9 *invalid :status1*retval (m:*label224) (h:*label224)
-    * label *label224
+  668 label *label474
+  669 write :status1:text processor2 ".status1"
+  670 label *label475
   671 set :mineOre.1:ore @copper
   672 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   673 call *label22 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
 
   677 sensor *tmp292 .core @lead
   678 jump *label226 greaterThanEq *tmp292 lead
   679 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label228 (h:*label228)
-    * call *label9 *invalid :status1*retval (m:*label228) (h:*label228)
-    * label *label228
+  680 label *label476
+  681 write :status1:text processor2 ".status1"
+  682 label *label477
   683 set :mineOre.1:ore @lead
   684 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   685 call *label22 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
 
   689 sensor *tmp295 .core @metaglass
   690 jump *label230 greaterThanEq *tmp295 metaglass
   691 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label232 (h:*label232)
-    * call *label9 *invalid :status1*retval (m:*label232) (h:*label232)
-    * label *label232
+  692 label *label478
+  693 write :status1:text processor2 ".status1"
+  694 label *label479
   695 set :mineOre.1:ore @sand
   696 setaddr :mineOre.1*retaddr *label233 (h:*label233)
   697 call *label22 *invalid :mineOre.1*retval (m:*label233) (h:*label233)
 
   699 jump *label231 always
   700 label *label230
   701 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label234 (h:*label234)
-    * call *label9 *invalid :status1*retval (m:*label234) (h:*label234)
-    * label *label234
+  702 label *label480
+  703 write :status1:text processor2 ".status1"
+  704 label *label481
   705 sensor :supplyBase0:coal.1 .core @coal
   706 sensor :supplyBase0:sand.1 .core @sand
   707 select *tmp301 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   719 jump *label209 always
   720 label *label208
   721 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label238 (h:*label238)
-    * call *label9 *invalid :status1*retval (m:*label238) (h:*label238)
-    * label *label238
+  722 label *label482
+  723 write :status1:text processor2 ".status1"
+  724 label *label483
   725 set :fetchBlock:block .titaniumDrill
   726 set :fetchBlock:item @titanium
   727 setaddr :fetchBlock*retaddr *label239 (h:*label239)
 
   882 label *label262
   883 return :lineUpUnits*retaddr
   884 end
-    * label *label9
-    * write :status1:text processor2 ".status1"
-    * label *label268
-    * return :status1*retaddr
-    * end
   885 label *label22
   886 set :status2:text "Mining "
   887 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   508 jump *label165 equal .thoriumContainer false
   509 set :status1:text "Phase 2: servicing thorium drill"
   510 label *label458
-    * write :status1:text processor2 ".status1"
+  511 write "Phase 2: servicing thorium drill" processor2 ".status1"
   512 label *label459
   513 sensor *tmp236 .thoriumBattery @totalPower
   514 jump *label169 greaterThanEq *tmp236 2000
 
   541 jump *label176 lessThanEq *tmp85 3
   542 set :status1:text "Phase 1: supplying base"
   543 label *label460
-    * write :status1:text processor2 ".status1"
+  544 write "Phase 1: supplying base" processor2 ".status1"
   545 label *label461
   546 set :mineOre.1:ore @coal
   547 setaddr :mineOre.1*retaddr *label180 (h:*label180)
 
   558 jump *label186 greaterThanEq *tmp249 5
   559 set :status1:text "Goal 1: graphite requirement"
   560 label *label462
-    * write :status1:text processor2 ".status1"
+  561 write "Goal 1: graphite requirement" processor2 ".status1"
   562 label *label463
   563 set :supplyBlock:block AJEMJJ-graphite-press0
   564 set :supplyBlock:ore @coal
 
   576 jump *label192 greaterThanEq *tmp255 5
   577 set :status1:text "Goal 2: coal for silicon requirement"
   578 label *label464
-    * write :status1:text processor2 ".status1"
+  579 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   580 label *label465
   581 set :supplyBlock:block ALMQJN-silicon-smelter4
   582 set :supplyBlock:ore @coal
 
   590 jump *label196 greaterThanEq *tmp258 5
   591 set :status1:text "Goal 3: sand for silicon requirement"
   592 label *label466
-    * write :status1:text processor2 ".status1"
+  593 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   594 label *label467
   595 set :supplyBlock:block ALMQJN-silicon-smelter4
   596 set :supplyBlock:ore @sand
 
   609 jump *label202 greaterThanEq *tmp264 2
   610 set :status1:text "Goal 4: supplying generator"
   611 label *label468
-    * write :status1:text processor2 ".status1"
+  612 write "Goal 4: supplying generator" processor2 ".status1"
   613 label *label469
   614 set :supplyBlock:block AJRJM-combustion-generator3
   615 set :supplyBlock:ore @coal
 
   639 jump *label212 greaterThanEq *tmp278 *tmp279
   640 set :status1:text "Goal 5: supplying generator"
   641 label *label470
-    * write :status1:text processor2 ".status1"
+  642 write "Goal 5: supplying generator" processor2 ".status1"
   643 label *label471
   644 set :mineOre.1:ore @coal
   645 setaddr :mineOre.1*retaddr *label215 (h:*label215)
 
   651 jump *label216 greaterThanEq *tmp282 silicon
   652 set :status1:text "Goal 6: silicon requirement"
   653 label *label472
-    * write :status1:text processor2 ".status1"
+  654 write "Goal 6: silicon requirement" processor2 ".status1"
   655 label *label473
   656 sensor :supplyBase0:coal .core @coal
   657 sensor :supplyBase0:sand .core @sand
 
   666 jump *label222 greaterThanEq *tmp289 copper
   667 set :status1:text "Goal 7: copper requirement"
   668 label *label474
-    * write :status1:text processor2 ".status1"
+  669 write "Goal 7: copper requirement" processor2 ".status1"
   670 label *label475
   671 set :mineOre.1:ore @copper
   672 setaddr :mineOre.1*retaddr *label225 (h:*label225)
 
   678 jump *label226 greaterThanEq *tmp292 lead
   679 set :status1:text "Goal 8: lead requirement"
   680 label *label476
-    * write :status1:text processor2 ".status1"
+  681 write "Goal 8: lead requirement" processor2 ".status1"
   682 label *label477
   683 set :mineOre.1:ore @lead
   684 setaddr :mineOre.1*retaddr *label229 (h:*label229)
 
   690 jump *label230 greaterThanEq *tmp295 metaglass
   691 set :status1:text "Goal 9: metaglass requirement"
   692 label *label478
-    * write :status1:text processor2 ".status1"
+  693 write "Goal 9: metaglass requirement" processor2 ".status1"
   694 label *label479
   695 set :mineOre.1:ore @sand
   696 setaddr :mineOre.1*retaddr *label233 (h:*label233)
 
   700 label *label230
   701 set :status1:text "Goal 10: supplying base"
   702 label *label480
-    * write :status1:text processor2 ".status1"
+  703 write "Goal 10: supplying base" processor2 ".status1"
   704 label *label481
   705 sensor :supplyBase0:coal.1 .core @coal
   706 sensor :supplyBase0:sand.1 .core @sand
 
   720 label *label208
   721 set :status1:text "Goal 11: Fetching titanium"
   722 label *label482
-    * write :status1:text processor2 ".status1"
+  723 write "Goal 11: Fetching titanium" processor2 ".status1"
   724 label *label483
   725 set :fetchBlock:block .titaniumDrill
   726 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   506 op max *tmp234 0 *tmp233
   507 write *tmp234 processor7 ".sandTarget"
   508 jump *label165 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   509 label *label458
   510 write "Phase 2: servicing thorium drill" processor2 ".status1"
   511 label *label459
 
   538 label *label165
   539 read *tmp85 .controller ".monos"
   540 jump *label176 lessThanEq *tmp85 3
-    * set :status1:text "Phase 1: supplying base"
   541 label *label460
   542 write "Phase 1: supplying base" processor2 ".status1"
   543 label *label461
 
   554 jump *label184 greaterThanEq *tmp246 graphite
   555 sensor *tmp249 AJEMJJ-graphite-press0 @coal
   556 jump *label186 greaterThanEq *tmp249 5
-    * set :status1:text "Goal 1: graphite requirement"
   557 label *label462
   558 write "Goal 1: graphite requirement" processor2 ".status1"
   559 label *label463
 
   571 jump *label190 greaterThanEq *tmp252 silicon
   572 sensor *tmp255 ALMQJN-silicon-smelter4 @coal
   573 jump *label192 greaterThanEq *tmp255 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   574 label *label464
   575 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   576 label *label465
 
   584 label *label192
   585 sensor *tmp258 ALMQJN-silicon-smelter4 @sand
   586 jump *label196 greaterThanEq *tmp258 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   587 label *label466
   588 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   589 label *label467
 
   602 jump *label200 greaterThanEq *tmp261 .powerTarget
   603 sensor *tmp264 AJRJM-combustion-generator3 @coal
   604 jump *label202 greaterThanEq *tmp264 2
-    * set :status1:text "Goal 4: supplying generator"
   605 label *label468
   606 write "Goal 4: supplying generator" processor2 ".status1"
   607 label *label469
 
   631 sensor *tmp278 AJTJK-battery1 @totalPower
   632 op mul *tmp279 A©JNJP-unloader6 .powerTarget
   633 jump *label212 greaterThanEq *tmp278 *tmp279
-    * set :status1:text "Goal 5: supplying generator"
   634 label *label470
   635 write "Goal 5: supplying generator" processor2 ".status1"
   636 label *label471
 
   642 label *label212
   643 sensor *tmp282 .core @silicon
   644 jump *label216 greaterThanEq *tmp282 silicon
-    * set :status1:text "Goal 6: silicon requirement"
   645 label *label472
   646 write "Goal 6: silicon requirement" processor2 ".status1"
   647 label *label473
 
   656 label *label216
   657 sensor *tmp289 .core @copper
   658 jump *label222 greaterThanEq *tmp289 copper
-    * set :status1:text "Goal 7: copper requirement"
   659 label *label474
   660 write "Goal 7: copper requirement" processor2 ".status1"
   661 label *label475
 
   667 label *label222
   668 sensor *tmp292 .core @lead
   669 jump *label226 greaterThanEq *tmp292 lead
-    * set :status1:text "Goal 8: lead requirement"
   670 label *label476
   671 write "Goal 8: lead requirement" processor2 ".status1"
   672 label *label477
 
   678 label *label226
   679 sensor *tmp295 .core @metaglass
   680 jump *label230 greaterThanEq *tmp295 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   681 label *label478
   682 write "Goal 9: metaglass requirement" processor2 ".status1"
   683 label *label479
 
   687 label *label233
   688 jump *label231 always
   689 label *label230
-    * set :status1:text "Goal 10: supplying base"
   690 label *label480
   691 write "Goal 10: supplying base" processor2 ".status1"
   692 label *label481
 
   706 label *label211
   707 jump *label209 always
   708 label *label208
-    * set :status1:text "Goal 11: Fetching titanium"
   709 label *label482
   710 write "Goal 11: Fetching titanium" processor2 ".status1"
   711 label *label483

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   522 label *label171
   523 set :supplyBlockFromCore:target .thoriumGenerator
   524 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label174 (h:*label174)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label174) (h:*label174)
-    * label *label174
+  525 label *label484
+  526 sensor *tmp334 :supplyBlockFromCore:target @itemCapacity
+  527 op min :transportStatus:target *tmp334 30
+  528 set :transportStatus:item :supplyBlockFromCore:item
+  529 setaddr :transportStatus*retaddr *label485 (h:*label485)
+  530 call *label12 *invalid :transportStatus*retval (m:*label485) (h:*label485)
+  531 label *label485
+  532 set :status2:text "Transferring "
+  533 set :status2:item :supplyBlockFromCore:item
+  534 set :status2:block :supplyBlockFromCore:target
+  535 setaddr :status2*retaddr *label486 (h:*label486)
+  536 call *label10 *invalid :status2*retval (m:*label486) (h:*label486)
+  537 label *label486
+  538 set :moveToEmpty:x .coreX
+  539 set :moveToEmpty:y .coreY
+  540 setaddr :moveToEmpty*retaddr *label487 (h:*label487)
+  541 call *label16 *invalid :moveToEmpty*retval (m:*label487) (h:*label487)
+  542 label *label487
+  543 setaddr :dropAll*retaddr *label488 (h:*label488)
+  544 call *label17 *invalid :dropAll*retval (m:*label488) (h:*label488)
+  545 label *label488
+  546 label *label489
+  547 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  548 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  549 op notEqual *tmp337 :supplyBlockFromCore:unitItem null
+  550 op notEqual *tmp338 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  551 op land *tmp339 *tmp337 *tmp338
+  552 jump *label490 equal *tmp339 false
+  553 ucontrol itemDrop @air 1000
+  554 label *label490
+  555 label *label491
+  556 label *label492
+  557 sensor *tmp341 @unit :supplyBlockFromCore:item
+  558 op lessThan *tmp342 *tmp341 30
+  559 sensor *tmp343 .core :supplyBlockFromCore:item
+  560 op land *tmp344 *tmp342 *tmp343
+  561 jump *label489 notEqual *tmp344 false
+  562 label *label493
+  563 set :depositItems:block :supplyBlockFromCore:target
+  564 set :depositItems:item :supplyBlockFromCore:item
+  565 setaddr :depositItems*retaddr *label494 (h:*label494)
+  566 call *label19 *invalid :depositItems*retval (m:*label494) (h:*label494)
+  567 label *label494
+  568 label *label495
   569 label *label172
   570 label *label169
   571 label *label170
 
   996 label *label283
   997 return :supplyBlock*retaddr
   998 end
-    * label *label25
-    * sensor *tmp334 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp334 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label289 (h:*label289)
-    * call *label12 *invalid :transportStatus*retval (m:*label289) (h:*label289)
-    * label *label289
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label290 (h:*label290)
-    * call *label10 *invalid :status2*retval (m:*label290) (h:*label290)
-    * label *label290
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label291 (h:*label291)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label291) (h:*label291)
-    * label *label291
-    * setaddr :dropAll*retaddr *label292 (h:*label292)
-    * call *label17 *invalid :dropAll*retval (m:*label292) (h:*label292)
-    * label *label292
-    * label *label293
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp337 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp338 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp339 *tmp337 *tmp338
-    * jump *label296 equal *tmp339 false
-    * ucontrol itemDrop @air 1000
-    * label *label296
-    * label *label297
-    * label *label294
-    * sensor *tmp341 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp342 *tmp341 30
-    * sensor *tmp343 .core :supplyBlockFromCore:item
-    * op land *tmp344 *tmp342 *tmp343
-    * jump *label293 notEqual *tmp344 false
-    * label *label295
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label298 (h:*label298)
-    * call *label19 *invalid :depositItems*retval (m:*label298) (h:*label298)
-    * label *label298
-    * label *label288
-    * return :supplyBlockFromCore*retaddr
-    * end
   999 label *label27
  1000 read *tmp346 :unpackCfg:cfg 1
  1001 op sub *tmp347 *tmp346 74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   523 set :supplyBlockFromCore:target .thoriumGenerator
   524 set :supplyBlockFromCore:item @coal
   525 label *label484
-    * sensor *tmp334 :supplyBlockFromCore:target @itemCapacity
+  526 sensor *tmp334 .thoriumGenerator @itemCapacity
   527 op min :transportStatus:target *tmp334 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  528 set :transportStatus:item @coal
   529 setaddr :transportStatus*retaddr *label485 (h:*label485)
   530 call *label12 *invalid :transportStatus*retval (m:*label485) (h:*label485)
   531 label *label485
   532 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  533 set :status2:item @coal
+  534 set :status2:block .thoriumGenerator
   535 setaddr :status2*retaddr *label486 (h:*label486)
   536 call *label10 *invalid :status2*retval (m:*label486) (h:*label486)
   537 label *label486
 
   544 call *label17 *invalid :dropAll*retval (m:*label488) (h:*label488)
   545 label *label488
   546 label *label489
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  547 ucontrol itemTake .core @coal 30
   548 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   549 op notEqual *tmp337 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp338 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  550 op notEqual *tmp338 :supplyBlockFromCore:unitItem @coal
   551 op land *tmp339 *tmp337 *tmp338
   552 jump *label490 equal *tmp339 false
   553 ucontrol itemDrop @air 1000
   554 label *label490
   555 label *label491
   556 label *label492
-    * sensor *tmp341 @unit :supplyBlockFromCore:item
+  557 sensor *tmp341 @unit @coal
   558 op lessThan *tmp342 *tmp341 30
-    * sensor *tmp343 .core :supplyBlockFromCore:item
+  559 sensor *tmp343 .core @coal
   560 op land *tmp344 *tmp342 *tmp343
   561 jump *label489 notEqual *tmp344 false
   562 label *label493
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  563 set :depositItems:block .thoriumGenerator
+  564 set :depositItems:item @coal
   565 setaddr :depositItems*retaddr *label494 (h:*label494)
   566 call *label19 *invalid :depositItems*retval (m:*label494) (h:*label494)
   567 label *label494

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   520 label *label173
   521 jump *label172 always
   522 label *label171
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   523 label *label484
   524 sensor *tmp334 .thoriumGenerator @itemCapacity
   525 op min :transportStatus:target *tmp334 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1181 end
  1182 label *label16
  1183 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label336 (h:*label336)
-    * call *label11 *invalid :status3*retval (m:*label336) (h:*label336)
-    * label *label336
+ 1184 label *label496
+ 1185 write :status3:text processor2 ".status3"
+ 1186 label *label497
  1187 label *label337
  1188 sensor *tmp415 @unit @firstItem
  1189 jump *label340 equal *tmp415 null
 
  1211 end
  1212 label *label19
  1213 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label347 (h:*label347)
-    * call *label11 *invalid :status3*retval (m:*label347) (h:*label347)
-    * label *label347
+ 1214 label *label498
+ 1215 write :status3:text processor2 ".status3"
+ 1216 label *label499
  1217 sensor *tmp422 @unit @firstItem
  1218 jump *label348 notEqual *tmp422 :depositItems:item
  1219 set :moveToBlock:block :depositItems:block
 
  1274 label *label362
  1275 label *label363
  1276 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label365 (h:*label365)
-    * call *label11 *invalid :status3*retval (m:*label365) (h:*label365)
-    * label *label365
+ 1277 label *label500
+ 1278 write :status3:text processor2 ".status3"
+ 1279 label *label501
  1280 op add :mineOre:stop @second 10
  1281 label *label366
  1282 sensor :mineOre:item @unit @firstItem
 
  1305 label *label358
  1306 return :mineOre*retaddr
  1307 end
-    * label *label11
-    * write :status3:text processor2 ".status3"
-    * label *label374
-    * return :status3*retaddr
-    * end
  1308 label *label18
  1309 sensor *tmp446 :moveToBlock:block @x
  1310 sensor *tmp447 :moveToBlock:block @y
 
  1331 end
  1332 label *label14
  1333 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label382 (h:*label382)
-    * call *label11 *invalid :status3*retval (m:*label382) (h:*label382)
-    * label *label382
+ 1334 label *label502
+ 1335 write :status3:text processor2 ".status3"
+ 1336 label *label503
  1337 op sub *tmp454 :moveTo:radius 0.5
  1338 label *label383
  1339 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1182 label *label16
  1183 set :status3:text "Moving..."
  1184 label *label496
-    * write :status3:text processor2 ".status3"
+ 1185 write "Moving..." processor2 ".status3"
  1186 label *label497
  1187 label *label337
  1188 sensor *tmp415 @unit @firstItem
 
  1212 label *label19
  1213 set :status3:text "Depositing..."
  1214 label *label498
-    * write :status3:text processor2 ".status3"
+ 1215 write "Depositing..." processor2 ".status3"
  1216 label *label499
  1217 sensor *tmp422 @unit @firstItem
  1218 jump *label348 notEqual *tmp422 :depositItems:item
 
  1275 label *label363
  1276 set :status3:text "Mining..."
  1277 label *label500
-    * write :status3:text processor2 ".status3"
+ 1278 write "Mining..." processor2 ".status3"
  1279 label *label501
  1280 op add :mineOre:stop @second 10
  1281 label *label366
 
  1332 label *label14
  1333 set :status3:text "Moving..."
  1334 label *label502
-    * write :status3:text processor2 ".status3"
+ 1335 write "Moving..." processor2 ".status3"
  1336 label *label503
  1337 op sub *tmp454 :moveTo:radius 0.5
  1338 label *label383

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1180 return :transportStatus*retaddr
  1181 end
  1182 label *label16
-    * set :status3:text "Moving..."
  1183 label *label496
  1184 write "Moving..." processor2 ".status3"
  1185 label *label497
 
  1209 return :dropAll*retaddr
  1210 end
  1211 label *label19
-    * set :status3:text "Depositing..."
  1212 label *label498
  1213 write "Depositing..." processor2 ".status3"
  1214 label *label499
 
  1271 label *label364
  1272 label *label362
  1273 label *label363
-    * set :status3:text "Mining..."
  1274 label *label500
  1275 write "Mining..." processor2 ".status3"
  1276 label *label501
 
  1327 return :locateOre*retaddr
  1328 end
  1329 label *label14
-    * set :status3:text "Moving..."
  1330 label *label502
  1331 write "Moving..." processor2 ".status3"
  1332 label *label503

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1216 jump *label348 notEqual *tmp422 :depositItems:item
  1217 set :moveToBlock:block :depositItems:block
  1218 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label350 (h:*label350)
-    * call *label18 *invalid :moveToBlock*retval (m:*label350) (h:*label350)
-    * label *label350
+ 1219 label *label504
+ 1220 sensor *tmp446 :moveToBlock:block @x
+ 1221 sensor *tmp447 :moveToBlock:block @y
+ 1222 set :moveTo:x *tmp446
+ 1223 set :moveTo:y *tmp447
+ 1224 set :moveTo:radius :moveToBlock:radius
+ 1225 setaddr :moveTo*retaddr *label505 (h:*label505)
+ 1226 call *label14 *invalid :moveTo*retval (m:*label505) (h:*label505)
+ 1227 label *label505
+ 1228 label *label506
  1229 sensor :depositItems:cap :depositItems:block @itemCapacity
  1230 label *label351
  1231 ucontrol itemDrop :depositItems:block 30
 
  1309 label *label358
  1310 return :mineOre*retaddr
  1311 end
-    * label *label18
-    * sensor *tmp446 :moveToBlock:block @x
-    * sensor *tmp447 :moveToBlock:block @y
-    * set :moveTo:x *tmp446
-    * set :moveTo:y *tmp447
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label376 (h:*label376)
-    * call *label14 *invalid :moveTo*retval (m:*label376) (h:*label376)
-    * label *label376
-    * label *label375
-    * return :moveToBlock*retaddr
-    * end
  1312 label *label20
  1313 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1314 jump *label378 notEqual *tmp448 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1217 set :moveToBlock:block :depositItems:block
  1218 set :moveToBlock:radius 6
  1219 label *label504
-    * sensor *tmp446 :moveToBlock:block @x
-    * sensor *tmp447 :moveToBlock:block @y
+ 1220 sensor *tmp446 :depositItems:block @x
+ 1221 sensor *tmp447 :depositItems:block @y
  1222 set :moveTo:x *tmp446
  1223 set :moveTo:y *tmp447
-    * set :moveTo:radius :moveToBlock:radius
+ 1224 set :moveTo:radius 6
  1225 setaddr :moveTo*retaddr *label505 (h:*label505)
  1226 call *label14 *invalid :moveTo*retval (m:*label505) (h:*label505)
  1227 label *label505

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1214 label *label499
  1215 sensor *tmp422 @unit @firstItem
  1216 jump *label348 notEqual *tmp422 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1217 label *label504
  1218 sensor *tmp446 :depositItems:block @x
  1219 sensor *tmp447 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1259 call *label12 *invalid :transportStatus*retval (m:*label359) (h:*label359)
  1260 label *label359
  1261 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label360 (h:*label360)
-    * call *label20 *invalid :locateOre*retval (m:*label360) (h:*label360)
-    * label *label360
+ 1262 label *label507
+ 1263 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
+ 1264 jump *label509 notEqual *tmp448 false
+ 1265 set :error:error "Cannot locate ore"
+ 1266 setaddr :error*retaddr *label508 (h:*label508)
+ 1267 call *label13 *invalid :error*retval (m:*label508) (h:*label508)
+ 1268 label *label508
+ 1269 label *label509
+ 1270 label *label510
+ 1271 label *label511
  1272 set :mineOre:x :locateOre:x
  1273 set :mineOre:y :locateOre:y
  1274 set :moveToEmpty:x :locateOre:x
 
  1314 label *label358
  1315 return :mineOre*retaddr
  1316 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
-    * jump *label378 notEqual *tmp448 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label380 (h:*label380)
-    * call *label13 *invalid :error*retval (m:*label380) (h:*label380)
-    * label *label380
-    * label *label378
-    * label *label379
-    * label *label377
-    * return :locateOre*retaddr
-    * end
  1317 label *label14
  1318 label *label502
  1319 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1260 label *label359
  1261 set :locateOre:ore :mineOre:ore
  1262 label *label507
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
+ 1263 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1264 jump *label509 notEqual *tmp448 false
  1265 set :error:error "Cannot locate ore"
  1266 setaddr :error*retaddr *label508 (h:*label508)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1258 setaddr :transportStatus*retaddr *label359 (h:*label359)
  1259 call *label12 *invalid :transportStatus*retval (m:*label359) (h:*label359)
  1260 label *label359
-    * set :locateOre:ore :mineOre:ore
  1261 label *label507
  1262 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1263 jump *label509 notEqual *tmp448 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1220 set :moveTo:x *tmp446
  1221 set :moveTo:y *tmp447
  1222 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label505 (h:*label505)
-    * call *label14 *invalid :moveTo*retval (m:*label505) (h:*label505)
-    * label *label505
+ 1223 label *label512
+ 1224 label *label513
+ 1225 write "Moving..." processor2 ".status3"
+ 1226 label *label514
+ 1227 op sub *tmp454 :moveTo:radius 0.5
+ 1228 label *label515
+ 1229 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452
+ 1230 jump *label517 notEqual *tmp452 false
+ 1231 ucontrol approach :moveTo:x :moveTo:y *tmp454
+ 1232 label *label516
+ 1233 jump *label515 always
+ 1234 label *label517
+ 1235 label *label518
  1236 label *label506
  1237 sensor :depositItems:cap :depositItems:block @itemCapacity
  1238 label *label351
 
  1323 label *label358
  1324 return :mineOre*retaddr
  1325 end
-    * label *label14
-    * label *label502
-    * write "Moving..." processor2 ".status3"
-    * label *label503
-    * op sub *tmp454 :moveTo:radius 0.5
-    * label *label383
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452
-    * jump *label385 notEqual *tmp452 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp454
-    * label *label384
-    * jump *label383 always
-    * label *label385
-    * label *label381
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1224 label *label513
  1225 write "Moving..." processor2 ".status3"
  1226 label *label514
-    * op sub *tmp454 :moveTo:radius 0.5
+ 1227 op sub *tmp454 6 0.5
  1228 label *label515
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp452
+ 1229 ucontrol within *tmp446 *tmp447 6 *tmp452
  1230 jump *label517 notEqual *tmp452 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp454
+ 1231 ucontrol approach *tmp446 *tmp447 5.5
  1232 label *label516
  1233 jump *label515 always
  1234 label *label517

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1217 label *label504
  1218 sensor *tmp446 :depositItems:block @x
  1219 sensor *tmp447 :depositItems:block @y
-    * set :moveTo:x *tmp446
-    * set :moveTo:y *tmp447
-    * set :moveTo:radius 6
  1220 label *label512
  1221 label *label513
  1222 write "Moving..." processor2 ".status3"
  1223 label *label514
-    * op sub *tmp454 6 0.5
  1224 label *label515
  1225 ucontrol within *tmp446 *tmp447 6 *tmp452
  1226 jump *label517 notEqual *tmp452 false

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1201 label *label343
  1202 sensor *tmp420 @unit @firstItem
  1203 jump *label345 equal *tmp420 null
+ 1204 label *label519
  1205 ucontrol itemDrop @air 1000
  1206 label *label344
-    * jump *label343 always
+ 1207 sensor *tmp420 @unit @firstItem
+ 1208 jump *label519 notEqual *tmp420 null
  1209 label *label345
  1210 label *label342
  1211 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1226 label *label515
  1227 ucontrol within *tmp446 *tmp447 6 *tmp452
  1228 jump *label517 notEqual *tmp452 false
+ 1229 label *label520
  1230 ucontrol approach *tmp446 *tmp447 5.5
  1231 label *label516
-    * jump *label515 always
+ 1232 ucontrol within *tmp446 *tmp447 6 *tmp452
+ 1233 jump *label520 equal *tmp452 false
  1234 label *label517
  1235 label *label518
  1236 label *label506

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1248 label *label354
  1249 sensor *tmp430 @unit @firstItem
  1250 jump *label356 equal *tmp430 null
+ 1251 label *label521
  1252 ucontrol itemDrop @air 1000
  1253 label *label355
-    * jump *label354 always
+ 1254 sensor *tmp430 @unit @firstItem
+ 1255 jump *label521 notEqual *tmp430 null
  1256 label *label356
  1257 label *label349
  1258 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
  1257 label *label349
  1258 set :transportStatus:target 0
  1259 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label357 (h:*label357)
-    * call *label12 *invalid :transportStatus*retval (m:*label357) (h:*label357)
-    * label *label357
+ 1260 label *label522
+ 1261 write :transportStatus:target processor2 ".transportTarget"
+ 1262 write :transportStatus:item processor2 ".transportItem"
+ 1263 label *label523
  1264 label *label346
  1265 return :depositItems*retaddr
  1266 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1258 set :transportStatus:target 0
  1259 set :transportStatus:item null
  1260 label *label522
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+ 1261 write 0 processor2 ".transportTarget"
+ 1262 write null processor2 ".transportItem"
  1263 label *label523
  1264 label *label346
  1265 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1255 jump *label521 notEqual *tmp430 null
  1256 label *label356
  1257 label *label349
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
  1258 label *label522
  1259 write 0 processor2 ".transportTarget"
  1260 write null processor2 ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   524 sensor *tmp334 .thoriumGenerator @itemCapacity
   525 op min :transportStatus:target *tmp334 30
   526 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label485 (h:*label485)
-    * call *label12 *invalid :transportStatus*retval (m:*label485) (h:*label485)
-    * label *label485
+  527 label *label524
+  528 write :transportStatus:target processor2 ".transportTarget"
+  529 write :transportStatus:item processor2 ".transportItem"
+  530 label *label525
   531 set :status2:text "Transferring "
   532 set :status2:item @coal
   533 set :status2:block .thoriumGenerator
 
   929 sensor *tmp316 :fetchBlock:block @itemCapacity
   930 op min :transportStatus:target *tmp316 30
   931 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label273 (h:*label273)
-    * call *label12 *invalid :transportStatus*retval (m:*label273) (h:*label273)
-    * label *label273
+  932 label *label526
+  933 write :transportStatus:target processor2 ".transportTarget"
+  934 write :transportStatus:item processor2 ".transportItem"
+  935 label *label527
   936 set :status2:text "Fetching "
   937 set :status2:item :fetchBlock:item
   938 set :status2:block :fetchBlock:block
 
  1175 label *label333
  1176 return :status2*retaddr
  1177 end
-    * label *label12
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
-    * label *label334
-    * return :transportStatus*retaddr
-    * end
  1178 label *label16
  1179 label *label496
  1180 write "Moving..." processor2 ".status3"
 
  1262 op min :mineOre:amount :mineOre:amount 30
  1263 set :transportStatus:target :mineOre:amount
  1264 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label359 (h:*label359)
-    * call *label12 *invalid :transportStatus*retval (m:*label359) (h:*label359)
-    * label *label359
+ 1265 label *label528
+ 1266 write :transportStatus:target processor2 ".transportTarget"
+ 1267 write :transportStatus:item processor2 ".transportItem"
+ 1268 label *label529
  1269 label *label507
  1270 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1271 jump *label509 notEqual *tmp448 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   526 set :transportStatus:item @coal
   527 label *label524
   528 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  529 write @coal processor2 ".transportItem"
   530 label *label525
   531 set :status2:text "Transferring "
   532 set :status2:item @coal
 
   931 set :transportStatus:item :fetchBlock:item
   932 label *label526
   933 write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+  934 write :fetchBlock:item processor2 ".transportItem"
   935 label *label527
   936 set :status2:text "Fetching "
   937 set :status2:item :fetchBlock:item
 
  1263 set :transportStatus:target :mineOre:amount
  1264 set :transportStatus:item :mineOre:ore
  1265 label *label528
-    * write :transportStatus:target processor2 ".transportTarget"
-    * write :transportStatus:item processor2 ".transportItem"
+ 1266 write :mineOre:amount processor2 ".transportTarget"
+ 1267 write :mineOre:ore processor2 ".transportItem"
  1268 label *label529
  1269 label *label507
  1270 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   523 label *label484
   524 sensor *tmp334 .thoriumGenerator @itemCapacity
   525 op min :transportStatus:target *tmp334 30
-    * set :transportStatus:item @coal
   526 label *label524
   527 write :transportStatus:target processor2 ".transportTarget"
   528 write @coal processor2 ".transportItem"
 
   927 label *label23
   928 sensor *tmp316 :fetchBlock:block @itemCapacity
   929 op min :transportStatus:target *tmp316 30
-    * set :transportStatus:item :fetchBlock:item
   930 label *label526
   931 write :transportStatus:target processor2 ".transportTarget"
   932 write :fetchBlock:item processor2 ".transportItem"
 
  1259 label *label21
  1260 op min :mineOre:amount :mineOre:amount 30
  1261 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
  1262 label *label528
  1263 write :mineOre:amount processor2 ".transportTarget"
  1264 write :mineOre:ore processor2 ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   934 set :status2:text "Fetching "
   935 set :status2:item :fetchBlock:item
   936 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label274 (h:*label274)
-    * call *label10 *invalid :status2*retval (m:*label274) (h:*label274)
-    * label *label274
+  937 label *label530
+  938 write :status2:text processor2 ".status2"
+  939 write :status2:item processor2 ".item2"
+  940 write :status2:block processor2 ".block2"
+  941 label *label531
   942 sensor *tmp318 :fetchBlock:block @x
   943 sensor *tmp319 :fetchBlock:block @y
   944 set :moveToEmpty:x *tmp318

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   935 set :status2:item :fetchBlock:item
   936 set :status2:block :fetchBlock:block
   937 label *label530
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  938 write "Fetching " processor2 ".status2"
+  939 write :fetchBlock:item processor2 ".item2"
+  940 write :fetchBlock:block processor2 ".block2"
   941 label *label531
   942 sensor *tmp318 :fetchBlock:block @x
   943 sensor *tmp319 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   931 write :transportStatus:target processor2 ".transportTarget"
   932 write :fetchBlock:item processor2 ".transportItem"
   933 label *label527
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   934 label *label530
   935 write "Fetching " processor2 ".status2"
   936 write :fetchBlock:item processor2 ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   530 set :status2:text "Transferring "
   531 set :status2:item @coal
   532 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label486 (h:*label486)
-    * call *label10 *invalid :status2*retval (m:*label486) (h:*label486)
-    * label *label486
+  533 label *label532
+  534 write :status2:text processor2 ".status2"
+  535 write :status2:item processor2 ".item2"
+  536 write :status2:block processor2 ".block2"
+  537 label *label533
   538 set :moveToEmpty:x .coreX
   539 set :moveToEmpty:y .coreY
   540 setaddr :moveToEmpty*retaddr *label487 (h:*label487)
 
   914 set :status2:text "Mining "
   915 set :status2:item :mineOre.1:ore
   916 set :status2:block "core"
-    * setaddr :status2*retaddr *label270 (h:*label270)
-    * call *label10 *invalid :status2*retval (m:*label270) (h:*label270)
-    * label *label270
+  917 label *label534
+  918 write :status2:text processor2 ".status2"
+  919 write :status2:item processor2 ".item2"
+  920 write :status2:block processor2 ".block2"
+  921 label *label535
   922 set :mineOre:ore :mineOre.1:ore
   923 set :mineOre:amount 30
   924 set :mineOre:block .core
 
   979 set :status2:text "Supplying "
   980 set :status2:item :supplyBlock:ore
   981 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label284 (h:*label284)
-    * call *label10 *invalid :status2*retval (m:*label284) (h:*label284)
-    * label *label284
+  982 label *label536
+  983 write :status2:text processor2 ".status2"
+  984 write :status2:item processor2 ".item2"
+  985 write :status2:block processor2 ".block2"
+  986 label *label537
   987 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   988 sensor *tmp330 :supplyBlock:block :supplyBlock:ore
   989 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
 
  1171 label *label330
  1172 return :buildBlock*retaddr
  1173 end
-    * label *label10
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
-    * label *label333
-    * return :status2*retaddr
-    * end
  1174 label *label16
  1175 label *label496
  1176 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   531 set :status2:item @coal
   532 set :status2:block .thoriumGenerator
   533 label *label532
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  534 write "Transferring " processor2 ".status2"
+  535 write @coal processor2 ".item2"
+  536 write .thoriumGenerator processor2 ".block2"
   537 label *label533
   538 set :moveToEmpty:x .coreX
   539 set :moveToEmpty:y .coreY
 
   915 set :status2:item :mineOre.1:ore
   916 set :status2:block "core"
   917 label *label534
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  918 write "Mining " processor2 ".status2"
+  919 write :mineOre.1:ore processor2 ".item2"
+  920 write "core" processor2 ".block2"
   921 label *label535
   922 set :mineOre:ore :mineOre.1:ore
   923 set :mineOre:amount 30
 
   980 set :status2:item :supplyBlock:ore
   981 set :status2:block :supplyBlock:block
   982 label *label536
-    * write :status2:text processor2 ".status2"
-    * write :status2:item processor2 ".item2"
-    * write :status2:block processor2 ".block2"
+  983 write "Supplying " processor2 ".status2"
+  984 write :supplyBlock:ore processor2 ".item2"
+  985 write :supplyBlock:block processor2 ".block2"
   986 label *label537
   987 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   988 sensor *tmp330 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   527 write :transportStatus:target processor2 ".transportTarget"
   528 write @coal processor2 ".transportItem"
   529 label *label525
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   530 label *label532
   531 write "Transferring " processor2 ".status2"
   532 write @coal processor2 ".item2"
 
   908 return :lineUpUnits*retaddr
   909 end
   910 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   911 label *label534
   912 write "Mining " processor2 ".status2"
   913 write :mineOre.1:ore processor2 ".item2"
 
   970 return :fetchBlock*retaddr
   971 end
   972 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   973 label *label536
   974 write "Supplying " processor2 ".status2"
   975 write :supplyBlock:ore processor2 ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    77 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    78 jump *label60 notEqual :buildFirstTitaniumDrill:result false
    79 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label62 (h:*label62)
-    * call *label13 *invalid :error*retval (m:*label62) (h:*label62)
-    * label *label62
+   80 label *label538
+   81 set .ERROR :error:error
+   82 stop
+   83 label *label539
    84 label *label60
    85 label *label61
    86 write @pneumatic-drill processor2 ".nextBlock"
 
   333 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   334 jump *label124 notEqual :buildThoriumDrill:result false
   335 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label126 (h:*label126)
-    * call *label13 *invalid :error*retval (m:*label126) (h:*label126)
-    * label *label126
+  336 label *label540
+  337 set .ERROR :error:error
+  338 stop
+  339 label *label541
   340 label *label124
   341 label *label125
   342 write @laser-drill processor5 ":buildBlockAt:block"
 
   496 label *label158
   497 label *label151
   498 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label163
-    * return :error*retaddr
-    * end
   499 label *label33
   500 sensor *tmp232 .core @silicon
   501 op sub *tmp233 silicon *tmp232
 
  1252 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1253 jump *label509 notEqual *tmp448 false
  1254 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label508 (h:*label508)
-    * call *label13 *invalid :error*retval (m:*label508) (h:*label508)
-    * label *label508
+ 1255 label *label542
+ 1256 set .ERROR :error:error
+ 1257 stop
+ 1258 label *label543
  1259 label *label509
  1260 label *label510
  1261 label *label511

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    78 jump *label60 notEqual :buildFirstTitaniumDrill:result false
    79 set :error:error "Cannot locate spot for titanium drill"
    80 label *label538
-    * set .ERROR :error:error
+   81 set .ERROR "Cannot locate spot for titanium drill"
    82 stop
    83 label *label539
    84 label *label60
 
   334 jump *label124 notEqual :buildThoriumDrill:result false
   335 set :error:error "Cannot locate spot for thorium drill"
   336 label *label540
-    * set .ERROR :error:error
+  337 set .ERROR "Cannot locate spot for thorium drill"
   338 stop
   339 label *label541
   340 label *label124
 
  1243 end
  1244 label *label21
  1245 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
  1246 label *label528
  1247 write :mineOre:amount processor2 ".transportTarget"
  1248 write :mineOre:ore processor2 ".transportItem"
 
  1252 jump *label509 notEqual *tmp448 false
  1253 set :error:error "Cannot locate ore"
  1254 label *label542
-    * set .ERROR :error:error
+ 1255 set .ERROR "Cannot locate ore"
  1256 stop
  1257 label *label543
  1258 label *label509

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    76 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    77 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    78 jump *label60 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    79 label *label538
    80 set .ERROR "Cannot locate spot for titanium drill"
    81 stop
 
   331 jump *label123 equal *tmp194 false
   332 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   333 jump *label124 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   334 label *label540
   335 set .ERROR "Cannot locate spot for thorium drill"
   336 stop
 
  1248 label *label507
  1249 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1250 jump *label509 notEqual *tmp448 false
-    * set :error:error "Cannot locate ore"
  1251 label *label542
  1252 set .ERROR "Cannot locate ore"
  1253 stop

Modifications by Inline function call at Actions.mnd:137:5 (+3 instructions):
 
   935 setaddr :moveToEmpty*retaddr *label275 (h:*label275)
   936 call *label16 *invalid :moveToEmpty*retval (m:*label275) (h:*label275)
   937 label *label275
-    * setaddr :dropAll*retaddr *label276 (h:*label276)
-    * call *label17 *invalid :dropAll*retval (m:*label276) (h:*label276)
-    * label *label276
+  938 label *label544
+  939 label *label545
+  940 sensor *tmp420 @unit @firstItem
+  941 jump *label548 equal *tmp420 null
+  942 label *label546
+  943 ucontrol itemDrop @air 1000
+  944 label *label547
+  945 sensor *tmp420 @unit @firstItem
+  946 jump *label546 notEqual *tmp420 null
+  947 label *label548
+  948 label *label549
   949 label *label277
   950 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   951 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   528 label *label533
   529 set :moveToEmpty:x .coreX
   530 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label487 (h:*label487)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label487) (h:*label487)
-    * label *label487
+  531 label *label550
+  532 label *label551
+  533 write "Moving..." processor2 ".status3"
+  534 label *label552
+  535 label *label553
+  536 sensor *tmp415 @unit @firstItem
+  537 jump *label554 equal *tmp415 null
+  538 ucontrol itemDrop @air 1000
+  539 label *label554
+  540 label *label555
+  541 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  542 label *label556
+  543 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+  544 jump *label553 equal *tmp418 false
+  545 label *label557
+  546 label *label558
   547 setaddr :dropAll*retaddr *label488 (h:*label488)
   548 call *label17 *invalid :dropAll*retval (m:*label488) (h:*label488)
   549 label *label488
 
   945 sensor *tmp319 :fetchBlock:block @y
   946 set :moveToEmpty:x *tmp318
   947 set :moveToEmpty:y *tmp319
-    * setaddr :moveToEmpty*retaddr *label275 (h:*label275)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label275) (h:*label275)
-    * label *label275
+  948 label *label559
+  949 label *label560
+  950 write "Moving..." processor2 ".status3"
+  951 label *label561
+  952 label *label562
+  953 sensor *tmp415 @unit @firstItem
+  954 jump *label563 equal *tmp415 null
+  955 ucontrol itemDrop @air 1000
+  956 label *label563
+  957 label *label564
+  958 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  959 label *label565
+  960 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+  961 jump *label562 equal *tmp418 false
+  962 label *label566
+  963 label *label567
   964 label *label544
   965 label *label545
   966 sensor *tmp420 @unit @firstItem
 
  1190 label *label330
  1191 return :buildBlock*retaddr
  1192 end
-    * label *label16
-    * label *label496
-    * write "Moving..." processor2 ".status3"
-    * label *label497
-    * label *label337
-    * sensor *tmp415 @unit @firstItem
-    * jump *label340 equal *tmp415 null
-    * ucontrol itemDrop @air 1000
-    * label *label340
-    * label *label341
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label338
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
-    * jump *label337 equal *tmp418 false
-    * label *label339
-    * label *label335
-    * return :moveToEmpty*retaddr
-    * end
  1193 label *label17
  1194 label *label343
  1195 sensor *tmp420 @unit @firstItem
 
  1275 set :mineOre:y :locateOre:y
  1276 set :moveToEmpty:x :locateOre:x
  1277 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label361 (h:*label361)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label361) (h:*label361)
-    * label *label361
+ 1278 label *label568
+ 1279 label *label569
+ 1280 write "Moving..." processor2 ".status3"
+ 1281 label *label570
+ 1282 label *label571
+ 1283 sensor *tmp415 @unit @firstItem
+ 1284 jump *label572 equal *tmp415 null
+ 1285 ucontrol itemDrop @air 1000
+ 1286 label *label572
+ 1287 label *label573
+ 1288 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1289 label *label574
+ 1290 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+ 1291 jump *label571 equal *tmp418 false
+ 1292 label *label575
+ 1293 label *label576
  1294 sensor *tmp433 @unit @firstItem
  1295 jump *label362 equal *tmp433 :mineOre:ore
  1296 setaddr :dropAll*retaddr *label364 (h:*label364)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   538 ucontrol itemDrop @air 1000
   539 label *label554
   540 label *label555
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  541 ucontrol approach .coreX .coreY 5.5
   542 label *label556
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+  543 ucontrol within .coreX .coreY 6 *tmp418
   544 jump *label553 equal *tmp418 false
   545 label *label557
   546 label *label558
 
   955 ucontrol itemDrop @air 1000
   956 label *label563
   957 label *label564
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  958 ucontrol approach *tmp318 *tmp319 5.5
   959 label *label565
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+  960 ucontrol within *tmp318 *tmp319 6 *tmp418
   961 jump *label562 equal *tmp418 false
   962 label *label566
   963 label *label567
 
  1285 ucontrol itemDrop @air 1000
  1286 label *label572
  1287 label *label573
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1288 ucontrol approach :locateOre:x :locateOre:y 5.5
  1289 label *label574
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp418
+ 1290 ucontrol within :locateOre:x :locateOre:y 6 *tmp418
  1291 jump *label571 equal *tmp418 false
  1292 label *label575
  1293 label *label576

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   526 write @coal processor2 ".item2"
   527 write .thoriumGenerator processor2 ".block2"
   528 label *label533
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   529 label *label550
   530 label *label551
   531 write "Moving..." processor2 ".status3"
 
   941 label *label531
   942 sensor *tmp318 :fetchBlock:block @x
   943 sensor *tmp319 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp318
-    * set :moveToEmpty:y *tmp319
   944 label *label559
   945 label *label560
   946 write "Moving..." processor2 ".status3"
 
  1269 label *label511
  1270 set :mineOre:x :locateOre:x
  1271 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
  1272 label *label568
  1273 label *label569
  1274 write "Moving..." processor2 ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
   542 jump *label553 equal *tmp418 false
   543 label *label557
   544 label *label558
-    * setaddr :dropAll*retaddr *label488 (h:*label488)
-    * call *label17 *invalid :dropAll*retval (m:*label488) (h:*label488)
-    * label *label488
+  545 label *label577
+  546 label *label578
+  547 sensor *tmp420 @unit @firstItem
+  548 jump *label581 equal *tmp420 null
+  549 label *label579
+  550 ucontrol itemDrop @air 1000
+  551 label *label580
+  552 sensor *tmp420 @unit @firstItem
+  553 jump *label579 notEqual *tmp420 null
+  554 label *label581
+  555 label *label582
   556 label *label489
   557 ucontrol itemTake .core @coal 30
   558 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
  1194 label *label330
  1195 return :buildBlock*retaddr
  1196 end
-    * label *label17
-    * label *label343
-    * sensor *tmp420 @unit @firstItem
-    * jump *label345 equal *tmp420 null
-    * label *label519
-    * ucontrol itemDrop @air 1000
-    * label *label344
-    * sensor *tmp420 @unit @firstItem
-    * jump *label519 notEqual *tmp420 null
-    * label *label345
-    * label *label342
-    * return :dropAll*retaddr
-    * end
  1197 label *label19
  1198 label *label498
  1199 write "Depositing..." processor2 ".status3"
 
  1282 label *label576
  1283 sensor *tmp433 @unit @firstItem
  1284 jump *label362 equal *tmp433 :mineOre:ore
-    * setaddr :dropAll*retaddr *label364 (h:*label364)
-    * call *label17 *invalid :dropAll*retval (m:*label364) (h:*label364)
-    * label *label364
+ 1285 label *label583
+ 1286 label *label584
+ 1287 sensor *tmp420 @unit @firstItem
+ 1288 jump *label587 equal *tmp420 null
+ 1289 label *label585
+ 1290 ucontrol itemDrop @air 1000
+ 1291 label *label586
+ 1292 sensor *tmp420 @unit @firstItem
+ 1293 jump *label585 notEqual *tmp420 null
+ 1294 label *label587
+ 1295 label *label588
  1296 label *label362
  1297 label *label363
  1298 label *label500

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1308 jump *label368 always
  1309 label *label369
  1310 label *label370
-    * ucontrol mine :mineOre:x :mineOre:y
+ 1311 ucontrol mine :locateOre:x :locateOre:y
  1312 jump *label371 lessThanEq @second :mineOre:stop
  1313 jump *label368 always
  1314 label *label371

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1262 label *label509
  1263 label *label510
  1264 label *label511
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
  1265 label *label568
  1266 label *label569
  1267 write "Moving..." processor2 ".status3"

Modifications by Inline function call at CoreBuilder.mnd:123:5 (+6 instructions):
 
   593 write "Phase 1: supplying base" processor2 ".status1"
   594 label *label461
   595 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label180 (h:*label180)
-    * call *label22 *invalid :mineOre.1*retval (m:*label180) (h:*label180)
-    * label *label180
+  596 label *label589
+  597 label *label590
+  598 write "Mining " processor2 ".status2"
+  599 write :mineOre.1:ore processor2 ".item2"
+  600 write "core" processor2 ".block2"
+  601 label *label591
+  602 set :mineOre:ore :mineOre.1:ore
+  603 set :mineOre:amount 30
+  604 set :mineOre:block .core
+  605 setaddr :mineOre*retaddr *label592 (h:*label592)
+  606 call *label21 *invalid :mineOre*retval (m:*label592) (h:*label592)
+  607 label *label592
+  608 label *label593
   609 label *label178
   610 jump *label177 always
   611 label *label176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   596 label *label589
   597 label *label590
   598 write "Mining " processor2 ".status2"
-    * write :mineOre.1:ore processor2 ".item2"
+  599 write @coal processor2 ".item2"
   600 write "core" processor2 ".block2"
   601 label *label591
-    * set :mineOre:ore :mineOre.1:ore
+  602 set :mineOre:ore @coal
   603 set :mineOre:amount 30
   604 set :mineOre:block .core
   605 setaddr :mineOre*retaddr *label592 (h:*label592)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   592 label *label460
   593 write "Phase 1: supplying base" processor2 ".status1"
   594 label *label461
-    * set :mineOre.1:ore @coal
   595 label *label589
   596 label *label590
   597 write "Mining " processor2 ".status2"

Modifications by Inline function call at Actions.mnd:147:5 (+23 instructions):
 
  1004 label *label279
  1005 set :depositItems:block .core
  1006 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label282 (h:*label282)
-    * call *label19 *invalid :depositItems*retval (m:*label282) (h:*label282)
-    * label *label282
+ 1007 label *label594
+ 1008 label *label595
+ 1009 write "Depositing..." processor2 ".status3"
+ 1010 label *label596
+ 1011 sensor *tmp422 @unit @firstItem
+ 1012 jump *label610 notEqual *tmp422 :depositItems:item
+ 1013 label *label597
+ 1014 sensor *tmp446 :depositItems:block @x
+ 1015 sensor *tmp447 :depositItems:block @y
+ 1016 label *label598
+ 1017 label *label599
+ 1018 write "Moving..." processor2 ".status3"
+ 1019 label *label600
+ 1020 label *label601
+ 1021 ucontrol within *tmp446 *tmp447 6 *tmp452
+ 1022 jump *label604 notEqual *tmp452 false
+ 1023 label *label602
+ 1024 ucontrol approach *tmp446 *tmp447 5.5
+ 1025 label *label603
+ 1026 ucontrol within *tmp446 *tmp447 6 *tmp452
+ 1027 jump *label602 equal *tmp452 false
+ 1028 label *label604
+ 1029 label *label605
+ 1030 label *label606
+ 1031 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1032 label *label607
+ 1033 ucontrol itemDrop :depositItems:block 30
+ 1034 label *label608
+ 1035 sensor *tmp426 @unit @firstItem
+ 1036 op mul *tmp427 *tmp426 :depositItems:cap
+ 1037 sensor *tmp428 :depositItems:block :depositItems:item
+ 1038 jump *label607 greaterThan *tmp427 *tmp428
+ 1039 label *label609
+ 1040 jump *label615 always
+ 1041 label *label610
+ 1042 label *label611
+ 1043 sensor *tmp430 @unit @firstItem
+ 1044 jump *label614 equal *tmp430 null
+ 1045 label *label612
+ 1046 ucontrol itemDrop @air 1000
+ 1047 label *label613
+ 1048 sensor *tmp430 @unit @firstItem
+ 1049 jump *label612 notEqual *tmp430 null
+ 1050 label *label614
+ 1051 label *label615
+ 1052 label *label616
+ 1053 write 0 processor2 ".transportTarget"
+ 1054 write null processor2 ".transportItem"
+ 1055 label *label617
+ 1056 label *label618
  1057 label *label272
  1058 return :fetchBlock*retaddr
  1059 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1009 write "Depositing..." processor2 ".status3"
  1010 label *label596
  1011 sensor *tmp422 @unit @firstItem
-    * jump *label610 notEqual *tmp422 :depositItems:item
+ 1012 jump *label610 notEqual *tmp422 :fetchBlock:item
  1013 label *label597
-    * sensor *tmp446 :depositItems:block @x
-    * sensor *tmp447 :depositItems:block @y
+ 1014 sensor *tmp446 .core @x
+ 1015 sensor *tmp447 .core @y
  1016 label *label598
  1017 label *label599
  1018 write "Moving..." processor2 ".status3"
 
  1028 label *label604
  1029 label *label605
  1030 label *label606
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1031 sensor :depositItems:cap .core @itemCapacity
  1032 label *label607
-    * ucontrol itemDrop :depositItems:block 30
+ 1033 ucontrol itemDrop .core 30
  1034 label *label608
  1035 sensor *tmp426 @unit @firstItem
  1036 op mul *tmp427 *tmp426 :depositItems:cap
-    * sensor *tmp428 :depositItems:block :depositItems:item
+ 1037 sensor *tmp428 .core :fetchBlock:item
  1038 jump *label607 greaterThan *tmp427 *tmp428
  1039 label *label609
  1040 jump *label615 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1002 op land *tmp328 *tmp326 *tmp327
  1003 jump *label277 notEqual *tmp328 false
  1004 label *label279
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
  1005 label *label594
  1006 label *label595
  1007 write "Depositing..." processor2 ".status3"

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
   572 label *label493
   573 set :depositItems:block .thoriumGenerator
   574 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label494 (h:*label494)
-    * call *label19 *invalid :depositItems*retval (m:*label494) (h:*label494)
-    * label *label494
+  575 label *label619
+  576 label *label620
+  577 write "Depositing..." processor2 ".status3"
+  578 label *label621
+  579 sensor *tmp422 @unit @firstItem
+  580 jump *label635 notEqual *tmp422 :depositItems:item
+  581 label *label622
+  582 sensor *tmp446 :depositItems:block @x
+  583 sensor *tmp447 :depositItems:block @y
+  584 label *label623
+  585 label *label624
+  586 write "Moving..." processor2 ".status3"
+  587 label *label625
+  588 label *label626
+  589 ucontrol within *tmp446 *tmp447 6 *tmp452
+  590 jump *label629 notEqual *tmp452 false
+  591 label *label627
+  592 ucontrol approach *tmp446 *tmp447 5.5
+  593 label *label628
+  594 ucontrol within *tmp446 *tmp447 6 *tmp452
+  595 jump *label627 equal *tmp452 false
+  596 label *label629
+  597 label *label630
+  598 label *label631
+  599 sensor :depositItems:cap :depositItems:block @itemCapacity
+  600 label *label632
+  601 ucontrol itemDrop :depositItems:block 30
+  602 label *label633
+  603 sensor *tmp426 @unit @firstItem
+  604 op mul *tmp427 *tmp426 :depositItems:cap
+  605 sensor *tmp428 :depositItems:block :depositItems:item
+  606 jump *label632 greaterThan *tmp427 *tmp428
+  607 label *label634
+  608 jump *label640 always
+  609 label *label635
+  610 label *label636
+  611 sensor *tmp430 @unit @firstItem
+  612 jump *label639 equal *tmp430 null
+  613 label *label637
+  614 ucontrol itemDrop @air 1000
+  615 label *label638
+  616 sensor *tmp430 @unit @firstItem
+  617 jump *label637 notEqual *tmp430 null
+  618 label *label639
+  619 label *label640
+  620 label *label641
+  621 write 0 processor2 ".transportTarget"
+  622 write null processor2 ".transportItem"
+  623 label *label642
+  624 label *label643
   625 label *label495
   626 label *label172
   627 label *label169
 
  1295 label *label330
  1296 return :buildBlock*retaddr
  1297 end
-    * label *label19
-    * label *label498
-    * write "Depositing..." processor2 ".status3"
-    * label *label499
-    * sensor *tmp422 @unit @firstItem
-    * jump *label348 notEqual *tmp422 :depositItems:item
-    * label *label504
-    * sensor *tmp446 :depositItems:block @x
-    * sensor *tmp447 :depositItems:block @y
-    * label *label512
-    * label *label513
-    * write "Moving..." processor2 ".status3"
-    * label *label514
-    * label *label515
-    * ucontrol within *tmp446 *tmp447 6 *tmp452
-    * jump *label517 notEqual *tmp452 false
-    * label *label520
-    * ucontrol approach *tmp446 *tmp447 5.5
-    * label *label516
-    * ucontrol within *tmp446 *tmp447 6 *tmp452
-    * jump *label520 equal *tmp452 false
-    * label *label517
-    * label *label518
-    * label *label506
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label351
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label352
-    * sensor *tmp426 @unit @firstItem
-    * op mul *tmp427 *tmp426 :depositItems:cap
-    * sensor *tmp428 :depositItems:block :depositItems:item
-    * jump *label351 greaterThan *tmp427 *tmp428
-    * label *label353
-    * jump *label349 always
-    * label *label348
-    * label *label354
-    * sensor *tmp430 @unit @firstItem
-    * jump *label356 equal *tmp430 null
-    * label *label521
-    * ucontrol itemDrop @air 1000
-    * label *label355
-    * sensor *tmp430 @unit @firstItem
-    * jump *label521 notEqual *tmp430 null
-    * label *label356
-    * label *label349
-    * label *label522
-    * write 0 processor2 ".transportTarget"
-    * write null processor2 ".transportItem"
-    * label *label523
-    * label *label346
-    * return :depositItems*retaddr
-    * end
  1298 label *label21
  1299 op min :mineOre:amount :mineOre:amount 30
  1300 label *label528
 
  1367 ucontrol unbind
  1368 set :depositItems:block :mineOre:block
  1369 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label373 (h:*label373)
-    * call *label19 *invalid :depositItems*retval (m:*label373) (h:*label373)
-    * label *label373
+ 1370 label *label644
+ 1371 label *label645
+ 1372 write "Depositing..." processor2 ".status3"
+ 1373 label *label646
+ 1374 sensor *tmp422 @unit @firstItem
+ 1375 jump *label660 notEqual *tmp422 :depositItems:item
+ 1376 label *label647
+ 1377 sensor *tmp446 :depositItems:block @x
+ 1378 sensor *tmp447 :depositItems:block @y
+ 1379 label *label648
+ 1380 label *label649
+ 1381 write "Moving..." processor2 ".status3"
+ 1382 label *label650
+ 1383 label *label651
+ 1384 ucontrol within *tmp446 *tmp447 6 *tmp452
+ 1385 jump *label654 notEqual *tmp452 false
+ 1386 label *label652
+ 1387 ucontrol approach *tmp446 *tmp447 5.5
+ 1388 label *label653
+ 1389 ucontrol within *tmp446 *tmp447 6 *tmp452
+ 1390 jump *label652 equal *tmp452 false
+ 1391 label *label654
+ 1392 label *label655
+ 1393 label *label656
+ 1394 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1395 label *label657
+ 1396 ucontrol itemDrop :depositItems:block 30
+ 1397 label *label658
+ 1398 sensor *tmp426 @unit @firstItem
+ 1399 op mul *tmp427 *tmp426 :depositItems:cap
+ 1400 sensor *tmp428 :depositItems:block :depositItems:item
+ 1401 jump *label657 greaterThan *tmp427 *tmp428
+ 1402 label *label659
+ 1403 jump *label665 always
+ 1404 label *label660
+ 1405 label *label661
+ 1406 sensor *tmp430 @unit @firstItem
+ 1407 jump *label664 equal *tmp430 null
+ 1408 label *label662
+ 1409 ucontrol itemDrop @air 1000
+ 1410 label *label663
+ 1411 sensor *tmp430 @unit @firstItem
+ 1412 jump *label662 notEqual *tmp430 null
+ 1413 label *label664
+ 1414 label *label665
+ 1415 label *label666
+ 1416 write 0 processor2 ".transportTarget"
+ 1417 write null processor2 ".transportItem"
+ 1418 label *label667
+ 1419 label *label668
  1420 label *label358
  1421 return :mineOre*retaddr
  1422 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   577 write "Depositing..." processor2 ".status3"
   578 label *label621
   579 sensor *tmp422 @unit @firstItem
-    * jump *label635 notEqual *tmp422 :depositItems:item
+  580 jump *label635 notEqual *tmp422 @coal
   581 label *label622
-    * sensor *tmp446 :depositItems:block @x
-    * sensor *tmp447 :depositItems:block @y
+  582 sensor *tmp446 .thoriumGenerator @x
+  583 sensor *tmp447 .thoriumGenerator @y
   584 label *label623
   585 label *label624
   586 write "Moving..." processor2 ".status3"
 
   596 label *label629
   597 label *label630
   598 label *label631
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  599 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   600 label *label632
-    * ucontrol itemDrop :depositItems:block 30
+  601 ucontrol itemDrop .thoriumGenerator 30
   602 label *label633
   603 sensor *tmp426 @unit @firstItem
   604 op mul *tmp427 *tmp426 :depositItems:cap
-    * sensor *tmp428 :depositItems:block :depositItems:item
+  605 sensor *tmp428 .thoriumGenerator @coal
   606 jump *label632 greaterThan *tmp427 *tmp428
   607 label *label634
   608 jump *label640 always
 
  1372 write "Depositing..." processor2 ".status3"
  1373 label *label646
  1374 sensor *tmp422 @unit @firstItem
-    * jump *label660 notEqual *tmp422 :depositItems:item
+ 1375 jump *label660 notEqual *tmp422 :mineOre:ore
  1376 label *label647
-    * sensor *tmp446 :depositItems:block @x
-    * sensor *tmp447 :depositItems:block @y
+ 1377 sensor *tmp446 :mineOre:block @x
+ 1378 sensor *tmp447 :mineOre:block @y
  1379 label *label648
  1380 label *label649
  1381 write "Moving..." processor2 ".status3"
 
  1391 label *label654
  1392 label *label655
  1393 label *label656
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1394 sensor :depositItems:cap :mineOre:block @itemCapacity
  1395 label *label657
-    * ucontrol itemDrop :depositItems:block 30
+ 1396 ucontrol itemDrop :mineOre:block 30
  1397 label *label658
  1398 sensor *tmp426 @unit @firstItem
  1399 op mul *tmp427 *tmp426 :depositItems:cap
-    * sensor *tmp428 :depositItems:block :depositItems:item
+ 1400 sensor *tmp428 :mineOre:block :mineOre:ore
  1401 jump *label657 greaterThan *tmp427 *tmp428
  1402 label *label659
  1403 jump *label665 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   570 op land *tmp344 *tmp342 *tmp343
   571 jump *label489 notEqual *tmp344 false
   572 label *label493
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   573 label *label619
   574 label *label620
   575 write "Depositing..." processor2 ".status3"
 
  1363 jump *label366 lessThan *tmp444 :mineOre:amount
  1364 label *label368
  1365 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
  1366 label *label644
  1367 label *label645
  1368 write "Depositing..." processor2 ".status3"

Modifications by Inline function call at CoreBuilder.mnd:131:13 (+10 instructions):
 
   509 jump *label171 greaterThanEq *tmp239 50
   510 set :supplyBlock:block .thoriumGenerator
   511 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label173 (h:*label173)
-    * call *label24 *invalid :supplyBlock*retval (m:*label173) (h:*label173)
-    * label *label173
+  512 label *label669
+  513 label *label670
+  514 write "Supplying " processor2 ".status2"
+  515 write :supplyBlock:ore processor2 ".item2"
+  516 write :supplyBlock:block processor2 ".block2"
+  517 label *label671
+  518 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  519 sensor *tmp330 :supplyBlock:block :supplyBlock:ore
+  520 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
+  521 jump *label673 lessThanEq :supplyBlock:missing 0
+  522 set :mineOre:ore :supplyBlock:ore
+  523 set :mineOre:amount :supplyBlock:blockCapacity
+  524 set :mineOre:block :supplyBlock:block
+  525 setaddr :mineOre*retaddr *label672 (h:*label672)
+  526 call *label21 *invalid :mineOre*retval (m:*label672) (h:*label672)
+  527 label *label672
+  528 label *label673
+  529 label *label674
+  530 label *label675
   531 jump *label172 always
   532 label *label171
   533 label *label484

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   512 label *label669
   513 label *label670
   514 write "Supplying " processor2 ".status2"
-    * write :supplyBlock:ore processor2 ".item2"
-    * write :supplyBlock:block processor2 ".block2"
+  515 write @coal processor2 ".item2"
+  516 write .thoriumGenerator processor2 ".block2"
   517 label *label671
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp330 :supplyBlock:block :supplyBlock:ore
+  518 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  519 sensor *tmp330 .thoriumGenerator @coal
   520 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
   521 jump *label673 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  522 set :mineOre:ore @coal
   523 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  524 set :mineOre:block .thoriumGenerator
   525 setaddr :mineOre*retaddr *label672 (h:*label672)
   526 call *label21 *invalid :mineOre*retval (m:*label672) (h:*label672)
   527 label *label672

Modifications by Replicate loop condition at CoreBuilder.mnd:195:5 (+30 instructions):
 
  1271 jump *label314 always
  1272 label *label314
  1273 jump *label313 notEqual *tmp384 false
+ 1274 label *label676
  1275 setaddr :supplyBase*retaddr *label329 (h:*label329)
  1276 call *label33 *invalid :supplyBase*retval (m:*label329) (h:*label329)
  1277 label *label329
  1278 label *label312
-    * jump *label311 always
+ 1279 sensor *tmp385 .core @copper
+ 1280 jump *label677 greaterThanEq *tmp385 copper
+ 1281 set *tmp384 false
+ 1282 jump *label691 always
+ 1283 label *label677
+ 1284 label *label678
+ 1285 sensor *tmp388 .core @lead
+ 1286 jump *label679 greaterThanEq *tmp388 lead
+ 1287 set *tmp384 false
+ 1288 jump *label691 always
+ 1289 label *label679
+ 1290 label *label680
+ 1291 sensor *tmp391 .core @graphite
+ 1292 jump *label681 greaterThanEq *tmp391 graphite
+ 1293 set *tmp384 false
+ 1294 jump *label691 always
+ 1295 label *label681
+ 1296 label *label682
+ 1297 sensor *tmp394 .core @silicon
+ 1298 jump *label683 greaterThanEq *tmp394 silicon
+ 1299 set *tmp384 false
+ 1300 jump *label691 always
+ 1301 label *label683
+ 1302 label *label684
+ 1303 sensor *tmp397 .core @titanium
+ 1304 jump *label685 greaterThanEq *tmp397 titanium
+ 1305 set *tmp384 false
+ 1306 jump *label691 always
+ 1307 label *label685
+ 1308 label *label686
+ 1309 sensor *tmp400 .core @metaglass
+ 1310 jump *label687 greaterThanEq *tmp400 metaglass
+ 1311 set *tmp384 false
+ 1312 jump *label691 always
+ 1313 label *label687
+ 1314 label *label688
+ 1315 sensor *tmp403 .core @thorium
+ 1316 jump *label689 greaterThanEq *tmp403 thorium
+ 1317 set *tmp384 false
+ 1318 jump *label691 always
+ 1319 label *label689
+ 1320 label *label690
+ 1321 set *tmp384 true
+ 1322 jump *label691 always
+ 1323 label *label691
+ 1324 jump *label676 equal *tmp384 false
  1325 label *label313
  1326 label *label300
  1327 return :meetTarget*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1226 write :meetTarget:copper processor7 ".copperTarget"
  1227 label *label311
  1228 sensor *tmp385 .core @copper
-    * jump *label315 greaterThanEq *tmp385 copper
+ 1229 jump *label315 greaterThanEq *tmp385 :meetTarget:copper
  1230 set *tmp384 false
  1231 jump *label314 always
  1232 label *label315
 
  1238 label *label317
  1239 label *label318
  1240 sensor *tmp391 .core @graphite
-    * jump *label319 greaterThanEq *tmp391 graphite
+ 1241 jump *label319 greaterThanEq *tmp391 :meetTarget:graphite
  1242 set *tmp384 false
  1243 jump *label314 always
  1244 label *label319
  1245 label *label320
  1246 sensor *tmp394 .core @silicon
-    * jump *label321 greaterThanEq *tmp394 silicon
+ 1247 jump *label321 greaterThanEq *tmp394 :meetTarget:silicon
  1248 set *tmp384 false
  1249 jump *label314 always
  1250 label *label321
  1251 label *label322
  1252 sensor *tmp397 .core @titanium
-    * jump *label323 greaterThanEq *tmp397 titanium
+ 1253 jump *label323 greaterThanEq *tmp397 :meetTarget:titanium
  1254 set *tmp384 false
  1255 jump *label314 always
  1256 label *label323
  1257 label *label324
  1258 sensor *tmp400 .core @metaglass
-    * jump *label325 greaterThanEq *tmp400 metaglass
+ 1259 jump *label325 greaterThanEq *tmp400 :meetTarget:metaglass
  1260 set *tmp384 false
  1261 jump *label314 always
  1262 label *label325
  1263 label *label326
  1264 sensor *tmp403 .core @thorium
-    * jump *label327 greaterThanEq *tmp403 thorium
+ 1265 jump *label327 greaterThanEq *tmp403 :meetTarget:thorium
  1266 set *tmp384 false
  1267 jump *label314 always
  1268 label *label327

Modifications by Replicate loop condition at CoreBuilder.mnd:394:5 (+1 instructions):
 
   268 label *label109
   269 read *tmp86 .controller ".polys"
   270 jump *label111 greaterThanEq *tmp86 3
+  271 label *label692
   272 setaddr :supplyBase*retaddr *label112 (h:*label112)
   273 call *label33 *invalid :supplyBase*retval (m:*label112) (h:*label112)
   274 label *label112
   275 label *label110
-    * jump *label109 always
+  276 read *tmp86 .controller ".polys"
+  277 jump *label692 lessThan *tmp86 3
   278 label *label111
   279 write 2 .controller ".flareTarget"
   280 write 2 processor2 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:399:5 (+1 instructions):
 
   282 label *label114
   283 read *tmp84 .controller ".flares"
   284 jump *label116 greaterThanEq *tmp84 2
+  285 label *label693
   286 setaddr :supplyBase*retaddr *label117 (h:*label117)
   287 call *label33 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   288 label *label117
   289 label *label115
-    * jump *label114 always
+  290 read *tmp84 .controller ".flares"
+  291 jump *label693 lessThan *tmp84 2
   292 label *label116
   293 write @ore-titanium processor2 ".nextBlock"
   294 ubind @flare

Modifications by Replicate loop condition at CoreBuilder.mnd:415:5 (+1 instructions):
 
   422 label *label140
   423 read *tmp86 .controller ".polys"
   424 jump *label142 greaterThanEq *tmp86 3
+  425 label *label694
   426 setaddr :supplyBase*retaddr *label143 (h:*label143)
   427 call *label33 *invalid :supplyBase*retval (m:*label143) (h:*label143)
   428 label *label143
   429 label *label141
-    * jump *label140 always
+  430 read *tmp86 .controller ".polys"
+  431 jump *label694 lessThan *tmp86 3
   432 label *label142
   433 set :buildBlockFromCfg:cfg "A©JFJd-unloader26"
   434 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:425:5 (+1 instructions):
 
   446 label *label147
   447 read *tmp87 .controller ".megas"
   448 jump *label149 greaterThanEq *tmp87 1
+  449 label *label695
   450 setaddr :supplyBase*retaddr *label150 (h:*label150)
   451 call *label33 *invalid :supplyBase*retval (m:*label150) (h:*label150)
   452 label *label150
   453 label *label148
-    * jump *label147 always
+  454 read *tmp87 .controller ".megas"
+  455 jump *label695 lessThan *tmp87 1
   456 label *label149
   457 control enabled processor8 false
   458 control enabled processor7 false

Modifications by Inline function call at CoreBuilder.mnd:309:5 (+2 instructions):
 
    30 jump *label48 equal .core null
    31 label *label50
    32 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
-    * label *label51
+   33 label *label696
+   34 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   35 set :buildBlockFromCfg:config null
+   36 setaddr :buildBlockFromCfg*retaddr *label697 (h:*label697)
+   37 call *label37 *invalid :buildBlockFromCfg*retval (m:*label697) (h:*label697)
+   38 label *label697
+   39 label *label698
    40 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    41 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    42 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    31 label *label50
    32 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    33 label *label696
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   34 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    35 set :buildBlockFromCfg:config null
    36 setaddr :buildBlockFromCfg*retaddr *label697 (h:*label697)
    37 call *label37 *invalid :buildBlockFromCfg*retval (m:*label697) (h:*label697)

Modifications by Inline function call at CoreBuilder.mnd:310:5 (+2 instructions):
 
    38 label *label697
    39 label *label698
    40 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
-    * label *label52
+   41 label *label699
+   42 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   43 set :buildBlockFromCfg:config null
+   44 setaddr :buildBlockFromCfg*retaddr *label700 (h:*label700)
+   45 call *label37 *invalid :buildBlockFromCfg*retval (m:*label700) (h:*label700)
+   46 label *label700
+   47 label *label701
    48 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    49 setaddr :buildBlockFromCfg.1*retaddr *label53 (h:*label53)
    50 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label53) (h:*label53)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    39 label *label698
    40 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    41 label *label699
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   42 set :buildBlockFromCfg:cfg "AJTJK-battery1"
    43 set :buildBlockFromCfg:config null
    44 setaddr :buildBlockFromCfg*retaddr *label700 (h:*label700)
    45 call *label37 *invalid :buildBlockFromCfg*retval (m:*label700) (h:*label700)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
   100 read *tmp145 processor5 ":buildFirstTitaniumDrillAt*finished"
   101 jump *label63 equal *tmp145 false
   102 read *tmp128 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label57 always
   103 label *label57
   104 set .titaniumDrill *tmp128
   105 write *tmp128 processor2 ".titaniumDrill"
 
   759 sensor *tmp270 .core @titanium
   760 op sub *tmp271 titanium *tmp270
   761 op min *tmp269 7 *tmp271
-    * jump *label207 always
   762 label *label207
   763 sensor *tmp273 .titaniumDrill @titanium
   764 jump *label208 greaterThanEq *tmp273 *tmp269
 
   915 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   916 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   917 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label245 always
   918 label *label245
   919 return :buildBlockFromCfg*retaddr
   920 end
 
  1364 read *tmp413 processor5 ":buildBlockAt*finished"
  1365 jump *label332 equal *tmp413 false
  1366 read :buildBlock*retval processor5 ":buildBlockAt*retval"
-    * jump *label330 always
  1367 label *label330
  1368 return :buildBlock*retaddr
  1369 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   127 write .core :buildBlockFromCfg*retval ".core"
   128 write bank1 :buildBlockFromCfg*retval ".bank"
   129 label *label388
-    * read *tmp152 @this "AJEMJJ-graphite-press0"
+  130 set *tmp152 AJEMJJ-graphite-press0
   131 write *tmp152 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   132 label *label389
   133 label *label392
-    * read *tmp152 @this "AJTJK-battery1"
+  134 set *tmp152 AJTJK-battery1
   135 write *tmp152 :buildBlockFromCfg*retval "AJTJK-battery1"
   136 label *label393
   137 label *label396
-    * read *tmp152 @this "ALTJL-battery2"
+  138 set *tmp152 ALTJL-battery2
   139 write *tmp152 :buildBlockFromCfg*retval "ALTJL-battery2"
   140 label *label397
   141 label *label400
-    * read *tmp152 @this "AJRJM-combustion-generator3"
+  142 set *tmp152 AJRJM-combustion-generator3
   143 write *tmp152 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   144 label *label401
   145 label *label404
-    * read *tmp152 @this "ALMQJN-silicon-smelter4"
+  146 set *tmp152 ALMQJN-silicon-smelter4
   147 write *tmp152 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   148 label *label405
   149 label *label408
-    * read *tmp152 @this "A{LNJO-inverted-sorter5"
+  150 set *tmp152 A{LNJO-inverted-sorter5
   151 write *tmp152 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   152 label *label409
   153 label *label412
-    * read *tmp152 @this "A©JNJP-unloader6"
+  154 set *tmp152 A©JNJP-unloader6
   155 write *tmp152 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   156 label *label413
   157 label *label416
-    * read *tmp152 @this "A{HNJQ-inverted-sorter7"
+  158 set *tmp152 A{HNJQ-inverted-sorter7
   159 write *tmp152 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   160 label *label417
   161 label *label420
-    * read *tmp152 @this "A~JPJR-overflow-gate8"
+  162 set *tmp152 A~JPJR-overflow-gate8
   163 write *tmp152 :buildBlockFromCfg*retval "A~JPJR-overflow-gate8"
   164 label *label421
   165 label *label424
-    * read *tmp152 @this "AÕFFJS-micro-processor9"
+  166 set *tmp152 AÕFFJS-micro-processor9
   167 write *tmp152 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
   168 label *label425
   169 label *label70
 
  1177 label *label34
  1178 label *label429
  1179 op sign *tmp372 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp372
+ 1180 set :meetTarget:count *tmp372
  1181 label *label430
  1182 label *label433
  1183 op sign *tmp372 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   782 label *label473
   783 sensor :supplyBase0:coal .core @coal
   784 sensor :supplyBase0:sand .core @sand
-    * select *tmp288 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * set :mineOre.1:ore *tmp288
+  785 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   786 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   787 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
   788 label *label221
 
   826 label *label481
   827 sensor :supplyBase0:coal.1 .core @coal
   828 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp301 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp301
+  829 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   830 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   831 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)
   832 label *label237
 
  1174 end
  1175 label *label34
  1176 label *label429
-    * op sign *tmp372 :meetTarget:copper
-    * set :meetTarget:count *tmp372
+ 1177 op sign :meetTarget:count :meetTarget:copper
  1178 label *label430
  1179 label *label433
  1180 op sign *tmp372 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:91:17 (+6 instructions):
 
   770 write "Goal 5: supplying generator" processor2 ".status1"
   771 label *label471
   772 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label215 (h:*label215)
-    * call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
-    * label *label215
+  773 label *label702
+  774 label *label703
+  775 write "Mining " processor2 ".status2"
+  776 write :mineOre.1:ore processor2 ".item2"
+  777 write "core" processor2 ".block2"
+  778 label *label704
+  779 set :mineOre:ore :mineOre.1:ore
+  780 set :mineOre:amount 30
+  781 set :mineOre:block .core
+  782 setaddr :mineOre*retaddr *label705 (h:*label705)
+  783 call *label21 *invalid :mineOre*retval (m:*label705) (h:*label705)
+  784 label *label705
+  785 label *label706
   786 jump *label213 always
   787 label *label212
   788 sensor *tmp282 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   773 label *label702
   774 label *label703
   775 write "Mining " processor2 ".status2"
-    * write :mineOre.1:ore processor2 ".item2"
+  776 write @coal processor2 ".item2"
   777 write "core" processor2 ".block2"
   778 label *label704
-    * set :mineOre:ore :mineOre.1:ore
+  779 set :mineOre:ore @coal
   780 set :mineOre:amount 30
   781 set :mineOre:block .core
   782 setaddr :mineOre*retaddr *label705 (h:*label705)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   769 label *label470
   770 write "Goal 5: supplying generator" processor2 ".status1"
   771 label *label471
-    * set :mineOre.1:ore @coal
   772 label *label702
   773 label *label703
   774 write "Mining " processor2 ".status2"

Modifications by Inline function call at CoreBuilder.mnd:311:5 (+2 instructions):
 
    46 label *label700
    47 label *label701
    48 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
-    * setaddr :buildBlockFromCfg.1*retaddr *label53 (h:*label53)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label53) (h:*label53)
-    * label *label53
+   49 label *label707
+   50 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   51 set :buildBlockFromCfg:config null
+   52 setaddr :buildBlockFromCfg*retaddr *label708 (h:*label708)
+   53 call *label37 *invalid :buildBlockFromCfg*retval (m:*label708) (h:*label708)
+   54 label *label708
+   55 label *label709
    56 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    57 setaddr :buildBlockFromCfg.1*retaddr *label54 (h:*label54)
    58 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label54) (h:*label54)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    47 label *label701
    48 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    49 label *label707
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   50 set :buildBlockFromCfg:cfg "ALTJL-battery2"
    51 set :buildBlockFromCfg:config null
    52 setaddr :buildBlockFromCfg*retaddr *label708 (h:*label708)
    53 call *label37 *invalid :buildBlockFromCfg*retval (m:*label708) (h:*label708)

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    26 ubind @poly
    27 set .builder @unit
    28 ulocate building core false @copper .coreX .coreY *tmp120 .core
-    * label *label49
    29 jump *label48 equal .core null
-    * label *label50
    30 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * label *label696
    31 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    32 set :buildBlockFromCfg:config null
    33 setaddr :buildBlockFromCfg*retaddr *label697 (h:*label697)
    34 call *label37 *invalid :buildBlockFromCfg*retval (m:*label697) (h:*label697)
    35 label *label697
-    * label *label698
    36 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
-    * label *label699
    37 set :buildBlockFromCfg:cfg "AJTJK-battery1"
    38 set :buildBlockFromCfg:config null
    39 setaddr :buildBlockFromCfg*retaddr *label700 (h:*label700)
    40 call *label37 *invalid :buildBlockFromCfg*retval (m:*label700) (h:*label700)
    41 label *label700
-    * label *label701
    42 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
-    * label *label707
    43 set :buildBlockFromCfg:cfg "ALTJL-battery2"
    44 set :buildBlockFromCfg:config null
    45 setaddr :buildBlockFromCfg*retaddr *label708 (h:*label708)
    46 call *label37 *invalid :buildBlockFromCfg*retval (m:*label708) (h:*label708)
    47 label *label708
-    * label *label709
    48 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    49 setaddr :buildBlockFromCfg.1*retaddr *label54 (h:*label54)
    50 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label54) (h:*label54)
 
    80 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
    81 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
    82 jump *label60 notEqual :buildFirstTitaniumDrill:result false
-    * label *label538
    83 set .ERROR "Cannot locate spot for titanium drill"
    84 stop
-    * label *label539
    85 label *label60
-    * label *label61
    86 write @pneumatic-drill processor2 ".nextBlock"
    87 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    88 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    93 read *tmp145 processor5 ":buildFirstTitaniumDrillAt*finished"
    94 jump *label63 equal *tmp145 false
    95 read *tmp128 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label57
    96 set .titaniumDrill *tmp128
    97 write *tmp128 processor2 ".titaniumDrill"
    98 set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"
 
   118 write processor2 :buildBlockFromCfg*retval ".display"
   119 write .core :buildBlockFromCfg*retval ".core"
   120 write bank1 :buildBlockFromCfg*retval ".bank"
-    * label *label388
   121 set *tmp152 AJEMJJ-graphite-press0
   122 write *tmp152 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
-    * label *label389
-    * label *label392
   123 set *tmp152 AJTJK-battery1
   124 write *tmp152 :buildBlockFromCfg*retval "AJTJK-battery1"
-    * label *label393
-    * label *label396
   125 set *tmp152 ALTJL-battery2
   126 write *tmp152 :buildBlockFromCfg*retval "ALTJL-battery2"
-    * label *label397
-    * label *label400
   127 set *tmp152 AJRJM-combustion-generator3
   128 write *tmp152 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
-    * label *label401
-    * label *label404
   129 set *tmp152 ALMQJN-silicon-smelter4
   130 write *tmp152 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
-    * label *label405
-    * label *label408
   131 set *tmp152 A{LNJO-inverted-sorter5
   132 write *tmp152 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
-    * label *label409
-    * label *label412
   133 set *tmp152 A©JNJP-unloader6
   134 write *tmp152 :buildBlockFromCfg*retval "A©JNJP-unloader6"
-    * label *label413
-    * label *label416
   135 set *tmp152 A{HNJQ-inverted-sorter7
   136 write *tmp152 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
-    * label *label417
-    * label *label420
   137 set *tmp152 A~JPJR-overflow-gate8
   138 write *tmp152 :buildBlockFromCfg*retval "A~JPJR-overflow-gate8"
-    * label *label421
-    * label *label424
   139 set *tmp152 AÕFFJS-micro-processor9
   140 write *tmp152 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
-    * label *label425
-    * label *label70
   141 set :buildBlockFromCfg.1:cfg "AFJJT-power-node10"
   142 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   143 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
 
   152 label *label83
   153 write 1 .controller ".flareTarget"
   154 write 1 processor2 ".flareTarget"
-    * label *label84
   155 write 3 .controller ".monoTarget"
   156 write 3 processor2 ".monoTarget"
-    * label *label85
   157 write 85 .controller ".pressTarget"
   158 write 150 .controller ".smelterTarget"
   159 write 30 .controller ".kilnTarget"
 
   170 jump *label91 greaterThanEq *tmp156 300
   171 jump *label89 always
   172 label *label91
-    * label *label92
-    * label *label88
   173 read *tmp85 .controller ".monos"
   174 jump *label87 lessThan *tmp85 3
   175 label *label89
 
   223 set .graphiteSurplus 100
   224 write 3 .controller ".polyTarget"
   225 write 3 processor2 ".polyTarget"
-    * label *label104
   226 set :buildBlockFromCfg.1:cfg "ALSIJa-silicon-smelter23"
   227 setaddr :buildBlockFromCfg.1*retaddr *label105 (h:*label105)
   228 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label105) (h:*label105)
 
   238 setaddr :buildUnits*retaddr *label108 (h:*label108)
   239 call *label40 *invalid :buildUnits*retval (m:*label108) (h:*label108)
   240 label *label108
-    * label *label109
   241 read *tmp86 .controller ".polys"
   242 jump *label111 greaterThanEq *tmp86 3
   243 label *label692
   244 setaddr :supplyBase*retaddr *label112 (h:*label112)
   245 call *label33 *invalid :supplyBase*retval (m:*label112) (h:*label112)
   246 label *label112
-    * label *label110
   247 read *tmp86 .controller ".polys"
   248 jump *label692 lessThan *tmp86 3
   249 label *label111
   250 write 2 .controller ".flareTarget"
   251 write 2 processor2 ".flareTarget"
-    * label *label113
-    * label *label114
   252 read *tmp84 .controller ".flares"
   253 jump *label116 greaterThanEq *tmp84 2
   254 label *label693
   255 setaddr :supplyBase*retaddr *label117 (h:*label117)
   256 call *label33 *invalid :supplyBase*retval (m:*label117) (h:*label117)
   257 label *label117
-    * label *label115
   258 read *tmp84 .controller ".flares"
   259 jump *label693 lessThan *tmp84 2
   260 label *label116
 
   281 jump *label119 equal *tmp187 false
   282 write false processor3 ":stopLocation*finished"
   283 write 3 processor3 "@counter"
-    * label *label118
   284 write null processor2 ".nextBlock"
   285 write .coreX processor3 ":layoutThoriumDrill:x"
   286 write .coreY processor3 ":layoutThoriumDrill:y"
 
   302 jump *label123 equal *tmp194 false
   303 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   304 jump *label124 notEqual :buildThoriumDrill:result false
-    * label *label540
   305 set .ERROR "Cannot locate spot for thorium drill"
   306 stop
-    * label *label541
   307 label *label124
-    * label *label125
   308 write @laser-drill processor5 ":buildBlockAt:block"
   309 read *tmp55 processor3 ".drillX"
   310 write *tmp55 processor5 ":buildBlockAt:x"
 
   378 wait 1e-15
   379 read *tmp217 processor6 ":setThoriumContainer*finished"
   380 jump *label138 equal *tmp217 false
-    * label *label120
   381 write null processor2 ".nextBlock"
   382 write 1 .controller ".megaTarget"
   383 write 1 processor2 ".megaTarget"
-    * label *label139
-    * label *label140
   384 read *tmp86 .controller ".polys"
   385 jump *label142 greaterThanEq *tmp86 3
   386 label *label694
   387 setaddr :supplyBase*retaddr *label143 (h:*label143)
   388 call *label33 *invalid :supplyBase*retval (m:*label143) (h:*label143)
   389 label *label143
-    * label *label141
   390 read *tmp86 .controller ".polys"
   391 jump *label694 lessThan *tmp86 3
   392 label *label142
 
   403 setaddr :buildUnits*retaddr *label146 (h:*label146)
   404 call *label40 *invalid :buildUnits*retval (m:*label146) (h:*label146)
   405 label *label146
-    * label *label147
   406 read *tmp87 .controller ".megas"
   407 jump *label149 greaterThanEq *tmp87 1
   408 label *label695
   409 setaddr :supplyBase*retaddr *label150 (h:*label150)
   410 call *label33 *invalid :supplyBase*retval (m:*label150) (h:*label150)
   411 label *label150
-    * label *label148
   412 read *tmp87 .controller ".megas"
   413 jump *label695 lessThan *tmp87 1
   414 label *label149
 
   455 setaddr :lineUpUnits*retaddr *label162 (h:*label162)
   456 call *label42 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
   457 label *label162
-    * label *label157
   458 jump *label156 always
-    * label *label158
-    * label *label151
   459 end
   460 label *label33
   461 sensor *tmp232 .core @silicon
 
   463 op max *tmp234 0 *tmp233
   464 write *tmp234 processor7 ".sandTarget"
   465 jump *label165 equal .thoriumContainer false
-    * label *label458
   466 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label459
   467 sensor *tmp236 .thoriumBattery @totalPower
   468 jump *label169 greaterThanEq *tmp236 2000
   469 sensor *tmp239 .core @coal
   470 jump *label171 greaterThanEq *tmp239 50
   471 set :supplyBlock:block .thoriumGenerator
   472 set :supplyBlock:ore @coal
-    * label *label669
-    * label *label670
   473 write "Supplying " processor2 ".status2"
   474 write @coal processor2 ".item2"
   475 write .thoriumGenerator processor2 ".block2"
-    * label *label671
   476 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   477 sensor *tmp330 .thoriumGenerator @coal
   478 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
 
   484 call *label21 *invalid :mineOre*retval (m:*label672) (h:*label672)
   485 label *label672
   486 label *label673
-    * label *label674
-    * label *label675
   487 jump *label172 always
   488 label *label171
-    * label *label484
   489 sensor *tmp334 .thoriumGenerator @itemCapacity
   490 op min :transportStatus:target *tmp334 30
-    * label *label524
   491 write :transportStatus:target processor2 ".transportTarget"
   492 write @coal processor2 ".transportItem"
-    * label *label525
-    * label *label532
   493 write "Transferring " processor2 ".status2"
   494 write @coal processor2 ".item2"
   495 write .thoriumGenerator processor2 ".block2"
-    * label *label533
-    * label *label550
-    * label *label551
   496 write "Moving..." processor2 ".status3"
-    * label *label552
   497 label *label553
   498 sensor *tmp415 @unit @firstItem
   499 jump *label554 equal *tmp415 null
   500 ucontrol itemDrop @air 1000
   501 label *label554
-    * label *label555
   502 ucontrol approach .coreX .coreY 5.5
-    * label *label556
   503 ucontrol within .coreX .coreY 6 *tmp418
   504 jump *label553 equal *tmp418 false
-    * label *label557
-    * label *label558
-    * label *label577
-    * label *label578
   505 sensor *tmp420 @unit @firstItem
   506 jump *label581 equal *tmp420 null
   507 label *label579
   508 ucontrol itemDrop @air 1000
-    * label *label580
   509 sensor *tmp420 @unit @firstItem
   510 jump *label579 notEqual *tmp420 null
   511 label *label581
-    * label *label582
   512 label *label489
   513 ucontrol itemTake .core @coal 30
   514 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   518 jump *label490 equal *tmp339 false
   519 ucontrol itemDrop @air 1000
   520 label *label490
-    * label *label491
-    * label *label492
   521 sensor *tmp341 @unit @coal
   522 op lessThan *tmp342 *tmp341 30
   523 sensor *tmp343 .core @coal
   524 op land *tmp344 *tmp342 *tmp343
   525 jump *label489 notEqual *tmp344 false
-    * label *label493
-    * label *label619
-    * label *label620
   526 write "Depositing..." processor2 ".status3"
-    * label *label621
   527 sensor *tmp422 @unit @firstItem
   528 jump *label635 notEqual *tmp422 @coal
-    * label *label622
   529 sensor *tmp446 .thoriumGenerator @x
   530 sensor *tmp447 .thoriumGenerator @y
-    * label *label623
-    * label *label624
   531 write "Moving..." processor2 ".status3"
-    * label *label625
-    * label *label626
   532 ucontrol within *tmp446 *tmp447 6 *tmp452
   533 jump *label629 notEqual *tmp452 false
   534 label *label627
   535 ucontrol approach *tmp446 *tmp447 5.5
-    * label *label628
   536 ucontrol within *tmp446 *tmp447 6 *tmp452
   537 jump *label627 equal *tmp452 false
   538 label *label629
-    * label *label630
-    * label *label631
   539 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   540 label *label632
   541 ucontrol itemDrop .thoriumGenerator 30
-    * label *label633
   542 sensor *tmp426 @unit @firstItem
   543 op mul *tmp427 *tmp426 :depositItems:cap
   544 sensor *tmp428 .thoriumGenerator @coal
   545 jump *label632 greaterThan *tmp427 *tmp428
-    * label *label634
   546 jump *label640 always
   547 label *label635
-    * label *label636
   548 sensor *tmp430 @unit @firstItem
   549 jump *label639 equal *tmp430 null
   550 label *label637
   551 ucontrol itemDrop @air 1000
-    * label *label638
   552 sensor *tmp430 @unit @firstItem
   553 jump *label637 notEqual *tmp430 null
   554 label *label639
   555 label *label640
-    * label *label641
   556 write 0 processor2 ".transportTarget"
   557 write null processor2 ".transportItem"
-    * label *label642
-    * label *label643
-    * label *label495
   558 label *label172
   559 label *label169
-    * label *label170
   560 set :fetchBlock:block .thoriumContainer
   561 set :fetchBlock:item @thorium
   562 setaddr :fetchBlock*retaddr *label175 (h:*label175)
   563 call *label23 *invalid :fetchBlock*retval (m:*label175) (h:*label175)
   564 label *label175
-    * label *label167
   565 jump *label166 always
   566 label *label165
   567 read *tmp85 .controller ".monos"
   568 jump *label176 lessThanEq *tmp85 3
-    * label *label460
   569 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label461
-    * label *label589
-    * label *label590
   570 write "Mining " processor2 ".status2"
   571 write @coal processor2 ".item2"
   572 write "core" processor2 ".block2"
-    * label *label591
   573 set :mineOre:ore @coal
   574 set :mineOre:amount 30
   575 set :mineOre:block .core
   576 setaddr :mineOre*retaddr *label592 (h:*label592)
   577 call *label21 *invalid :mineOre*retval (m:*label592) (h:*label592)
   578 label *label592
-    * label *label593
-    * label *label178
   579 jump *label177 always
   580 label *label176
   581 set :supplyBase0:supplied false
 
   584 jump *label184 greaterThanEq *tmp246 graphite
   585 sensor *tmp249 AJEMJJ-graphite-press0 @coal
   586 jump *label186 greaterThanEq *tmp249 5
-    * label *label462
   587 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label463
   588 set :supplyBlock:block AJEMJJ-graphite-press0
   589 set :supplyBlock:ore @coal
   590 setaddr :supplyBlock*retaddr *label189 (h:*label189)
 
   592 label *label189
   593 set :supplyBase0:supplied true
   594 label *label186
-    * label *label187
   595 label *label184
-    * label *label185
   596 sensor *tmp252 .core @silicon
   597 jump *label190 greaterThanEq *tmp252 silicon
   598 sensor *tmp255 ALMQJN-silicon-smelter4 @coal
   599 jump *label192 greaterThanEq *tmp255 5
-    * label *label464
   600 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label465
   601 set :supplyBlock:block ALMQJN-silicon-smelter4
   602 set :supplyBlock:ore @coal
   603 setaddr :supplyBlock*retaddr *label195 (h:*label195)
 
   608 label *label192
   609 sensor *tmp258 ALMQJN-silicon-smelter4 @sand
   610 jump *label196 greaterThanEq *tmp258 5
-    * label *label466
   611 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label467
   612 set :supplyBlock:block ALMQJN-silicon-smelter4
   613 set :supplyBlock:ore @sand
   614 setaddr :supplyBlock*retaddr *label199 (h:*label199)
 
   616 label *label199
   617 set :supplyBase0:supplied true
   618 label *label196
-    * label *label197
   619 label *label193
   620 label *label190
-    * label *label191
   621 sensor *tmp261 AJTJK-battery1 @totalPower
   622 jump *label200 greaterThanEq *tmp261 .powerTarget
   623 sensor *tmp264 AJRJM-combustion-generator3 @coal
   624 jump *label202 greaterThanEq *tmp264 2
-    * label *label468
   625 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label469
   626 set :supplyBlock:block AJRJM-combustion-generator3
   627 set :supplyBlock:ore @coal
   628 setaddr :supplyBlock*retaddr *label205 (h:*label205)
 
   630 label *label205
   631 set :supplyBase0:supplied true
   632 label *label202
-    * label *label203
   633 label *label200
-    * label *label201
   634 label *label182
-    * label *label183
   635 set *tmp269 100
   636 sensor *tmp267 .core @titanium
   637 jump *label207 greaterThanEq *tmp267 titanium
 
   645 sensor *tmp278 AJTJK-battery1 @totalPower
   646 op mul *tmp279 A©JNJP-unloader6 .powerTarget
   647 jump *label212 greaterThanEq *tmp278 *tmp279
-    * label *label470
   648 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label471
-    * label *label702
-    * label *label703
   649 write "Mining " processor2 ".status2"
   650 write @coal processor2 ".item2"
   651 write "core" processor2 ".block2"
-    * label *label704
   652 set :mineOre:ore @coal
   653 set :mineOre:amount 30
   654 set :mineOre:block .core
   655 setaddr :mineOre*retaddr *label705 (h:*label705)
   656 call *label21 *invalid :mineOre*retval (m:*label705) (h:*label705)
   657 label *label705
-    * label *label706
   658 jump *label213 always
   659 label *label212
   660 sensor *tmp282 .core @silicon
   661 jump *label216 greaterThanEq *tmp282 silicon
-    * label *label472
   662 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label473
   663 sensor :supplyBase0:coal .core @coal
   664 sensor :supplyBase0:sand .core @sand
   665 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   670 label *label216
   671 sensor *tmp289 .core @copper
   672 jump *label222 greaterThanEq *tmp289 copper
-    * label *label474
   673 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label475
   674 set :mineOre.1:ore @copper
   675 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   676 call *label22 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
 
   679 label *label222
   680 sensor *tmp292 .core @lead
   681 jump *label226 greaterThanEq *tmp292 lead
-    * label *label476
   682 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label477
   683 set :mineOre.1:ore @lead
   684 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   685 call *label22 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
 
   688 label *label226
   689 sensor *tmp295 .core @metaglass
   690 jump *label230 greaterThanEq *tmp295 metaglass
-    * label *label478
   691 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label479
   692 set :mineOre.1:ore @sand
   693 setaddr :mineOre.1*retaddr *label233 (h:*label233)
   694 call *label22 *invalid :mineOre.1*retval (m:*label233) (h:*label233)
   695 label *label233
   696 jump *label231 always
   697 label *label230
-    * label *label480
   698 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label481
   699 sensor :supplyBase0:coal.1 .core @coal
   700 sensor :supplyBase0:sand.1 .core @sand
   701 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   708 label *label217
   709 label *label213
   710 label *label210
-    * label *label211
   711 jump *label209 always
   712 label *label208
-    * label *label482
   713 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label483
   714 set :fetchBlock:block .titaniumDrill
   715 set :fetchBlock:item @titanium
   716 setaddr :fetchBlock*retaddr *label239 (h:*label239)
   717 call *label23 *invalid :fetchBlock*retval (m:*label239) (h:*label239)
   718 label *label239
   719 label *label209
-    * label *label181
   720 label *label177
   721 label *label166
-    * label *label164
   722 return :supplyBase*retaddr
   723 end
   724 label *label36
 
   747 set :buildRemoteBlock*retval :buildBlock*retval
   748 jump *label240 always
   749 label *label241
-    * label *label242
   750 set :buildRemoteBlock*retval false
   751 jump *label240 always
   752 label *label240
 
   779 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   780 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   781 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label245
   782 return :buildBlockFromCfg*retaddr
   783 end
   784 label *label38
 
   787 setaddr :buildBlockFromCfg*retaddr *label249 (h:*label249)
   788 call *label37 *invalid :buildBlockFromCfg*retval (m:*label249) (h:*label249)
   789 label *label249
-    * label *label248
   790 return :buildBlockFromCfg.1*retaddr
   791 end
   792 label *label39
 
   805 setaddr :meetTarget*retaddr *label252 (h:*label252)
   806 call *label34 *invalid :meetTarget*retval (m:*label252) (h:*label252)
   807 label *label252
-    * label *label250
   808 return :meetTarget.1*retaddr
   809 end
   810 label *label40
 
   824 write 0 .controller ".leadReserve"
   825 write 0 .controller ".siliconReserve"
   826 write 0 .controller ".graphiteReserve"
-    * label *label253
   827 return :buildUnits*retaddr
   828 end
   829 label *label41
   830 label *label256
   831 ubind :flagUnits:unit
   832 set :flagUnits:firstUnit @unit
-    * label *label257
   833 jump *label256 equal :flagUnits:firstUnit null
-    * label *label258
   834 set :flagUnits:x @thisx
   835 label *label259
   836 ucontrol flag :flagUnits:x
   837 op add :flagUnits:x :flagUnits:x 4
   838 ubind :flagUnits:unit
-    * label *label260
   839 jump *label259 notEqual @unit :flagUnits:firstUnit
-    * label *label261
-    * label *label255
   840 return :flagUnits*retaddr
   841 end
   842 label *label42
 
   850 jump *label266 equal *tmp312 false
   851 ucontrol stop
   852 label *label266
-    * label *label267
   853 ubind :lineUpUnits:unit
-    * label *label264
   854 jump *label263 notEqual @unit :lineUpUnits:firstUnit
-    * label *label265
-    * label *label262
   855 return :lineUpUnits*retaddr
   856 end
   857 label *label22
-    * label *label534
   858 write "Mining " processor2 ".status2"
   859 write :mineOre.1:ore processor2 ".item2"
   860 write "core" processor2 ".block2"
-    * label *label535
   861 set :mineOre:ore :mineOre.1:ore
   862 set :mineOre:amount 30
   863 set :mineOre:block .core
   864 setaddr :mineOre*retaddr *label271 (h:*label271)
   865 call *label21 *invalid :mineOre*retval (m:*label271) (h:*label271)
   866 label *label271
-    * label *label269
   867 return :mineOre.1*retaddr
   868 end
   869 label *label23
   870 sensor *tmp316 :fetchBlock:block @itemCapacity
   871 op min :transportStatus:target *tmp316 30
-    * label *label526
   872 write :transportStatus:target processor2 ".transportTarget"
   873 write :fetchBlock:item processor2 ".transportItem"
-    * label *label527
-    * label *label530
   874 write "Fetching " processor2 ".status2"
   875 write :fetchBlock:item processor2 ".item2"
   876 write :fetchBlock:block processor2 ".block2"
-    * label *label531
   877 sensor *tmp318 :fetchBlock:block @x
   878 sensor *tmp319 :fetchBlock:block @y
-    * label *label559
-    * label *label560
   879 write "Moving..." processor2 ".status3"
-    * label *label561
   880 label *label562
   881 sensor *tmp415 @unit @firstItem
   882 jump *label563 equal *tmp415 null
   883 ucontrol itemDrop @air 1000
   884 label *label563
-    * label *label564
   885 ucontrol approach *tmp318 *tmp319 5.5
-    * label *label565
   886 ucontrol within *tmp318 *tmp319 6 *tmp418
   887 jump *label562 equal *tmp418 false
-    * label *label566
-    * label *label567
-    * label *label544
-    * label *label545
   888 sensor *tmp420 @unit @firstItem
   889 jump *label548 equal *tmp420 null
   890 label *label546
   891 ucontrol itemDrop @air 1000
-    * label *label547
   892 sensor *tmp420 @unit @firstItem
   893 jump *label546 notEqual *tmp420 null
   894 label *label548
-    * label *label549
   895 label *label277
   896 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   897 sensor :fetchBlock:unitItem @unit @firstItem
 
   901 jump *label280 equal *tmp323 false
   902 ucontrol itemDrop @air 1000
   903 label *label280
-    * label *label281
-    * label *label278
   904 sensor *tmp325 @unit :fetchBlock:item
   905 op lessThan *tmp326 *tmp325 30
   906 sensor *tmp327 :fetchBlock:block :fetchBlock:item
   907 op land *tmp328 *tmp326 *tmp327
   908 jump *label277 notEqual *tmp328 false
-    * label *label279
-    * label *label594
-    * label *label595
   909 write "Depositing..." processor2 ".status3"
-    * label *label596
   910 sensor *tmp422 @unit @firstItem
   911 jump *label610 notEqual *tmp422 :fetchBlock:item
-    * label *label597
   912 sensor *tmp446 .core @x
   913 sensor *tmp447 .core @y
-    * label *label598
-    * label *label599
   914 write "Moving..." processor2 ".status3"
-    * label *label600
-    * label *label601
   915 ucontrol within *tmp446 *tmp447 6 *tmp452
   916 jump *label604 notEqual *tmp452 false
   917 label *label602
   918 ucontrol approach *tmp446 *tmp447 5.5
-    * label *label603
   919 ucontrol within *tmp446 *tmp447 6 *tmp452
   920 jump *label602 equal *tmp452 false
   921 label *label604
-    * label *label605
-    * label *label606
   922 sensor :depositItems:cap .core @itemCapacity
   923 label *label607
   924 ucontrol itemDrop .core 30
-    * label *label608
   925 sensor *tmp426 @unit @firstItem
   926 op mul *tmp427 *tmp426 :depositItems:cap
   927 sensor *tmp428 .core :fetchBlock:item
   928 jump *label607 greaterThan *tmp427 *tmp428
-    * label *label609
   929 jump *label615 always
   930 label *label610
-    * label *label611
   931 sensor *tmp430 @unit @firstItem
   932 jump *label614 equal *tmp430 null
   933 label *label612
   934 ucontrol itemDrop @air 1000
-    * label *label613
   935 sensor *tmp430 @unit @firstItem
   936 jump *label612 notEqual *tmp430 null
   937 label *label614
   938 label *label615
-    * label *label616
   939 write 0 processor2 ".transportTarget"
   940 write null processor2 ".transportItem"
-    * label *label617
-    * label *label618
-    * label *label272
   941 return :fetchBlock*retaddr
   942 end
   943 label *label24
-    * label *label536
   944 write "Supplying " processor2 ".status2"
   945 write :supplyBlock:ore processor2 ".item2"
   946 write :supplyBlock:block processor2 ".block2"
-    * label *label537
   947 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   948 sensor *tmp330 :supplyBlock:block :supplyBlock:ore
   949 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
 
   955 call *label21 *invalid :mineOre*retval (m:*label287) (h:*label287)
   956 label *label287
   957 label *label285
-    * label *label286
-    * label *label283
   958 return :supplyBlock*retaddr
   959 end
   960 label *label27
 
   978 sensor :unpackCfg:ti :unpackCfg:type @titanium
   979 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   980 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label299
   981 return :unpackCfg*retaddr
   982 end
   983 label *label34
-    * label *label429
   984 op sign :meetTarget:count :meetTarget:copper
-    * label *label430
-    * label *label433
   985 op sign *tmp372 :meetTarget:lead
   986 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label434
-    * label *label437
   987 op sign *tmp372 :meetTarget:graphite
   988 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label438
-    * label *label441
   989 op sign *tmp372 :meetTarget:silicon
   990 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label442
-    * label *label445
   991 op sign *tmp372 :meetTarget:titanium
   992 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label446
-    * label *label449
   993 op sign *tmp372 :meetTarget:metaglass
   994 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label450
-    * label *label453
   995 op sign *tmp372 :meetTarget:thorium
   996 op add :meetTarget:count :meetTarget:count *tmp372
-    * label *label454
-    * label *label303
   997 write :meetTarget:count processor2 ".totalTargets"
   998 write :meetTarget:block processor2 ".nextBlock"
   999 write :meetTarget:copper processor2 ".targetCopper"
 
  1027 write *tmp383 .controller ".graphiteReserve"
  1028 write lead processor7 ".leadTarget"
  1029 write :meetTarget:copper processor7 ".copperTarget"
-    * label *label311
  1030 sensor *tmp385 .core @copper
  1031 jump *label315 greaterThanEq *tmp385 :meetTarget:copper
  1032 set *tmp384 false
  1033 jump *label314 always
  1034 label *label315
-    * label *label316
  1035 sensor *tmp388 .core @lead
  1036 jump *label317 greaterThanEq *tmp388 lead
  1037 set *tmp384 false
  1038 jump *label314 always
  1039 label *label317
-    * label *label318
  1040 sensor *tmp391 .core @graphite
  1041 jump *label319 greaterThanEq *tmp391 :meetTarget:graphite
  1042 set *tmp384 false
  1043 jump *label314 always
  1044 label *label319
-    * label *label320
  1045 sensor *tmp394 .core @silicon
  1046 jump *label321 greaterThanEq *tmp394 :meetTarget:silicon
  1047 set *tmp384 false
  1048 jump *label314 always
  1049 label *label321
-    * label *label322
  1050 sensor *tmp397 .core @titanium
  1051 jump *label323 greaterThanEq *tmp397 :meetTarget:titanium
  1052 set *tmp384 false
  1053 jump *label314 always
  1054 label *label323
-    * label *label324
  1055 sensor *tmp400 .core @metaglass
  1056 jump *label325 greaterThanEq *tmp400 :meetTarget:metaglass
  1057 set *tmp384 false
  1058 jump *label314 always
  1059 label *label325
-    * label *label326
  1060 sensor *tmp403 .core @thorium
  1061 jump *label327 greaterThanEq *tmp403 :meetTarget:thorium
  1062 set *tmp384 false
  1063 jump *label314 always
  1064 label *label327
-    * label *label328
  1065 set *tmp384 true
  1066 jump *label314 always
  1067 label *label314
 
  1070 setaddr :supplyBase*retaddr *label329 (h:*label329)
  1071 call *label33 *invalid :supplyBase*retval (m:*label329) (h:*label329)
  1072 label *label329
-    * label *label312
  1073 sensor *tmp385 .core @copper
  1074 jump *label677 greaterThanEq *tmp385 copper
  1075 set *tmp384 false
  1076 jump *label691 always
  1077 label *label677
-    * label *label678
  1078 sensor *tmp388 .core @lead
  1079 jump *label679 greaterThanEq *tmp388 lead
  1080 set *tmp384 false
  1081 jump *label691 always
  1082 label *label679
-    * label *label680
  1083 sensor *tmp391 .core @graphite
  1084 jump *label681 greaterThanEq *tmp391 graphite
  1085 set *tmp384 false
  1086 jump *label691 always
  1087 label *label681
-    * label *label682
  1088 sensor *tmp394 .core @silicon
  1089 jump *label683 greaterThanEq *tmp394 silicon
  1090 set *tmp384 false
  1091 jump *label691 always
  1092 label *label683
-    * label *label684
  1093 sensor *tmp397 .core @titanium
  1094 jump *label685 greaterThanEq *tmp397 titanium
  1095 set *tmp384 false
  1096 jump *label691 always
  1097 label *label685
-    * label *label686
  1098 sensor *tmp400 .core @metaglass
  1099 jump *label687 greaterThanEq *tmp400 metaglass
  1100 set *tmp384 false
  1101 jump *label691 always
  1102 label *label687
-    * label *label688
  1103 sensor *tmp403 .core @thorium
  1104 jump *label689 greaterThanEq *tmp403 thorium
  1105 set *tmp384 false
  1106 jump *label691 always
  1107 label *label689
-    * label *label690
  1108 set *tmp384 true
  1109 jump *label691 always
  1110 label *label691
  1111 jump *label676 equal *tmp384 false
  1112 label *label313
-    * label *label300
  1113 return :meetTarget*retaddr
  1114 end
  1115 label *label35
 
  1137 read *tmp413 processor5 ":buildBlockAt*finished"
  1138 jump *label332 equal *tmp413 false
  1139 read :buildBlock*retval processor5 ":buildBlockAt*retval"
-    * label *label330
  1140 return :buildBlock*retaddr
  1141 end
  1142 label *label21
  1143 op min :mineOre:amount :mineOre:amount 30
-    * label *label528
  1144 write :mineOre:amount processor2 ".transportTarget"
  1145 write :mineOre:ore processor2 ".transportItem"
-    * label *label529
-    * label *label507
  1146 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
  1147 jump *label509 notEqual *tmp448 false
-    * label *label542
  1148 set .ERROR "Cannot locate ore"
  1149 stop
-    * label *label543
  1150 label *label509
-    * label *label510
-    * label *label511
-    * label *label568
-    * label *label569
  1151 write "Moving..." processor2 ".status3"
-    * label *label570
  1152 label *label571
  1153 sensor *tmp415 @unit @firstItem
  1154 jump *label572 equal *tmp415 null
  1155 ucontrol itemDrop @air 1000
  1156 label *label572
-    * label *label573
  1157 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label574
  1158 ucontrol within :locateOre:x :locateOre:y 6 *tmp418
  1159 jump *label571 equal *tmp418 false
-    * label *label575
-    * label *label576
  1160 sensor *tmp433 @unit @firstItem
  1161 jump *label362 equal *tmp433 :mineOre:ore
-    * label *label583
-    * label *label584
  1162 sensor *tmp420 @unit @firstItem
  1163 jump *label587 equal *tmp420 null
  1164 label *label585
  1165 ucontrol itemDrop @air 1000
-    * label *label586
  1166 sensor *tmp420 @unit @firstItem
  1167 jump *label585 notEqual *tmp420 null
  1168 label *label587
-    * label *label588
  1169 label *label362
-    * label *label363
-    * label *label500
  1170 write "Mining..." processor2 ".status3"
-    * label *label501
  1171 op add :mineOre:stop @second 10
  1172 label *label366
  1173 sensor :mineOre:item @unit @firstItem
 
  1177 jump *label369 equal *tmp440 false
  1178 jump *label368 always
  1179 label *label369
-    * label *label370
  1180 ucontrol mine :locateOre:x :locateOre:y
  1181 jump *label371 lessThanEq @second :mineOre:stop
  1182 jump *label368 always
  1183 label *label371
-    * label *label372
-    * label *label367
  1184 sensor *tmp444 @unit @totalItems
  1185 jump *label366 lessThan *tmp444 :mineOre:amount
  1186 label *label368
  1187 ucontrol unbind
-    * label *label644
-    * label *label645
  1188 write "Depositing..." processor2 ".status3"
-    * label *label646
  1189 sensor *tmp422 @unit @firstItem
  1190 jump *label660 notEqual *tmp422 :mineOre:ore
-    * label *label647
  1191 sensor *tmp446 :mineOre:block @x
  1192 sensor *tmp447 :mineOre:block @y
-    * label *label648
-    * label *label649
  1193 write "Moving..." processor2 ".status3"
-    * label *label650
-    * label *label651
  1194 ucontrol within *tmp446 *tmp447 6 *tmp452
  1195 jump *label654 notEqual *tmp452 false
  1196 label *label652
  1197 ucontrol approach *tmp446 *tmp447 5.5
-    * label *label653
  1198 ucontrol within *tmp446 *tmp447 6 *tmp452
  1199 jump *label652 equal *tmp452 false
  1200 label *label654
-    * label *label655
-    * label *label656
  1201 sensor :depositItems:cap :mineOre:block @itemCapacity
  1202 label *label657
  1203 ucontrol itemDrop :mineOre:block 30
-    * label *label658
  1204 sensor *tmp426 @unit @firstItem
  1205 op mul *tmp427 *tmp426 :depositItems:cap
  1206 sensor *tmp428 :mineOre:block :mineOre:ore
  1207 jump *label657 greaterThan *tmp427 *tmp428
-    * label *label659
  1208 jump *label665 always
  1209 label *label660
-    * label *label661
  1210 sensor *tmp430 @unit @firstItem
  1211 jump *label664 equal *tmp430 null
  1212 label *label662
  1213 ucontrol itemDrop @air 1000
-    * label *label663
  1214 sensor *tmp430 @unit @firstItem
  1215 jump *label662 notEqual *tmp430 null
  1216 label *label664
  1217 label *label665
-    * label *label666
  1218 write 0 processor2 ".transportTarget"
  1219 write null processor2 ".transportItem"
-    * label *label667
-    * label *label668
-    * label *label358
  1220 return :mineOre*retaddr
  1221 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   167 call *label33 *invalid :supplyBase*retval (m:*label90) (h:*label90)
   168 label *label90
   169 sensor *tmp156 AJTJK-battery1 @totalPower
-    * jump *label91 greaterThanEq *tmp156 300
-    * jump *label89 always
+  170 jump *label89 lessThan *tmp156 300
   171 label *label91
   172 read *tmp85 .controller ".monos"
   173 jump *label87 lessThan *tmp85 3
 
  1173 op notEqual *tmp438 :mineOre:item null
  1174 op notEqual *tmp439 :mineOre:item :mineOre:ore
  1175 op land *tmp440 *tmp438 *tmp439
-    * jump *label369 equal *tmp440 false
-    * jump *label368 always
+ 1176 jump *label368 notEqual *tmp440 false
  1177 label *label369
  1178 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label371 lessThanEq @second :mineOre:stop
-    * jump *label368 always
+ 1179 jump *label368 greaterThan @second :mineOre:stop
  1180 label *label371
  1181 sensor *tmp444 @unit @totalItems
  1182 jump *label366 lessThan *tmp444 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   168 label *label90
   169 sensor *tmp156 AJTJK-battery1 @totalPower
   170 jump *label89 lessThan *tmp156 300
-    * label *label91
   171 read *tmp85 .controller ".monos"
   172 jump *label87 lessThan *tmp85 3
   173 label *label89
 
  1173 op notEqual *tmp439 :mineOre:item :mineOre:ore
  1174 op land *tmp440 *tmp438 *tmp439
  1175 jump *label368 notEqual *tmp440 false
-    * label *label369
  1176 ucontrol mine :locateOre:x :locateOre:y
  1177 jump *label368 greaterThan @second :mineOre:stop
-    * label *label371
  1178 sensor *tmp444 @unit @totalItems
  1179 jump *label366 lessThan *tmp444 :mineOre:amount
  1180 label *label368

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   450 label *label161
   451 op sub :lineUpUnits:y @thisy 18
   452 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label162 (h:*label162)
+  453 setaddr :lineUpUnits*retaddr *label156 (h:*label162)
   454 call *label42 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
   455 label *label162
   456 jump *label156 always
 
   474 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   475 sensor *tmp330 .thoriumGenerator @coal
   476 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp330
-    * jump *label673 lessThanEq :supplyBlock:missing 0
+  477 jump *label172 lessThanEq :supplyBlock:missing 0
   478 set :mineOre:ore @coal
   479 set :mineOre:amount :supplyBlock:blockCapacity
   480 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label672 (h:*label672)
+  481 setaddr :mineOre*retaddr *label172 (h:*label672)
   482 call *label21 *invalid :mineOre*retval (m:*label672) (h:*label672)
   483 label *label672
   484 label *label673
 
   560 setaddr :fetchBlock*retaddr *label175 (h:*label175)
   561 call *label23 *invalid :fetchBlock*retval (m:*label175) (h:*label175)
   562 label *label175
-    * jump *label166 always
+  563 return :supplyBase*retaddr
   564 label *label165
   565 read *tmp85 .controller ".monos"
   566 jump *label176 lessThanEq *tmp85 3
 
   574 setaddr :mineOre*retaddr *label592 (h:*label592)
   575 call *label21 *invalid :mineOre*retval (m:*label592) (h:*label592)
   576 label *label592
-    * jump *label177 always
+  577 return :supplyBase*retaddr
   578 label *label176
   579 set :supplyBase0:supplied false
   580 jump *label182 notEqual A©JNJP-unloader6 null
 
   639 label *label207
   640 sensor *tmp273 .titaniumDrill @titanium
   641 jump *label208 greaterThanEq *tmp273 *tmp269
-    * jump *label210 notEqual :supplyBase0:supplied false
+  642 jump *label209 notEqual :supplyBase0:supplied false
   643 sensor *tmp278 AJTJK-battery1 @totalPower
   644 op mul *tmp279 A©JNJP-unloader6 .powerTarget
   645 jump *label212 greaterThanEq *tmp278 *tmp279
 
   653 setaddr :mineOre*retaddr *label705 (h:*label705)
   654 call *label21 *invalid :mineOre*retval (m:*label705) (h:*label705)
   655 label *label705
-    * jump *label213 always
+  656 return :supplyBase*retaddr
   657 label *label212
   658 sensor *tmp282 .core @silicon
   659 jump *label216 greaterThanEq *tmp282 silicon
 
   664 setaddr :mineOre.1*retaddr *label221 (h:*label221)
   665 call *label22 *invalid :mineOre.1*retval (m:*label221) (h:*label221)
   666 label *label221
-    * jump *label217 always
+  667 return :supplyBase*retaddr
   668 label *label216
   669 sensor *tmp289 .core @copper
   670 jump *label222 greaterThanEq *tmp289 copper
 
   673 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   674 call *label22 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   675 label *label225
-    * jump *label223 always
+  676 return :supplyBase*retaddr
   677 label *label222
   678 sensor *tmp292 .core @lead
   679 jump *label226 greaterThanEq *tmp292 lead
 
   682 setaddr :mineOre.1*retaddr *label229 (h:*label229)
   683 call *label22 *invalid :mineOre.1*retval (m:*label229) (h:*label229)
   684 label *label229
-    * jump *label227 always
+  685 return :supplyBase*retaddr
   686 label *label226
   687 sensor *tmp295 .core @metaglass
   688 jump *label230 greaterThanEq *tmp295 metaglass
 
   691 setaddr :mineOre.1*retaddr *label233 (h:*label233)
   692 call *label22 *invalid :mineOre.1*retval (m:*label233) (h:*label233)
   693 label *label233
-    * jump *label231 always
+  694 return :supplyBase*retaddr
   695 label *label230
   696 write "Goal 10: supplying base" processor2 ".status1"
   697 sensor :supplyBase0:coal.1 .core @coal
 
   706 label *label217
   707 label *label213
   708 label *label210
-    * jump *label209 always
+  709 return :supplyBase*retaddr
   710 label *label208
   711 write "Goal 11: Fetching titanium" processor2 ".status1"
   712 set :fetchBlock:block .titaniumDrill
 
   743 call *label35 *invalid :buildBlock*retval (m:*label244) (h:*label244)
   744 label *label244
   745 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label240 always
+  746 return :buildRemoteBlock*retaddr
   747 label *label241
   748 set :buildRemoteBlock*retval false
-    * jump *label240 always
+  749 return :buildRemoteBlock*retaddr
   750 label *label240
   751 return :buildRemoteBlock*retaddr
   752 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-19 instructions):
 
   452 set :lineUpUnits:unit @flare
   453 setaddr :lineUpUnits*retaddr *label156 (h:*label162)
   454 call *label42 *invalid :lineUpUnits*retval (m:*label162) (h:*label162)
-    * label *label162
-    * jump *label156 always
-    * end
   455 label *label33
   456 sensor *tmp232 .core @silicon
   457 op sub *tmp233 silicon *tmp232
 
   477 set :mineOre:block .thoriumGenerator
   478 setaddr :mineOre*retaddr *label172 (h:*label672)
   479 call *label21 *invalid :mineOre*retval (m:*label672) (h:*label672)
-    * label *label672
-    * label *label673
-    * jump *label172 always
   480 label *label171
   481 sensor *tmp334 .thoriumGenerator @itemCapacity
   482 op min :transportStatus:target *tmp334 30
 
   694 setaddr :mineOre.1*retaddr *label237 (h:*label237)
   695 call *label22 *invalid :mineOre.1*retval (m:*label237) (h:*label237)
   696 label *label237
-    * label *label231
-    * label *label227
-    * label *label223
-    * label *label217
-    * label *label213
-    * label *label210
   697 return :supplyBase*retaddr
   698 label *label208
   699 write "Goal 11: Fetching titanium" processor2 ".status1"
 
   703 call *label23 *invalid :fetchBlock*retval (m:*label239) (h:*label239)
   704 label *label239
   705 label *label209
-    * label *label177
-    * label *label166
   706 return :supplyBase*retaddr
-    * end
   707 label *label36
   708 op add *tmp302 :buildRemoteBlock:x :buildRemoteBlock:y
   709 jump *label241 lessThanEq *tmp302 0
 
   732 label *label241
   733 set :buildRemoteBlock*retval false
   734 return :buildRemoteBlock*retaddr
-    * label *label240
-    * return :buildRemoteBlock*retaddr
-    * end
   735 label *label37
   736 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   737 setaddr :unpackCfg*retaddr *label246 (h:*label246)
 
   760 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   761 set :buildBlockFromCfg*retval :buildBlock*retval
   762 return :buildBlockFromCfg*retaddr
-    * end
   763 label *label38
   764 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   765 set :buildBlockFromCfg:config null
 
   767 call *label37 *invalid :buildBlockFromCfg*retval (m:*label249) (h:*label249)
   768 label *label249
   769 return :buildBlockFromCfg.1*retaddr
-    * end
   770 label *label39
   771 set :unpackCfg:cfg :meetTarget.1:cfg
   772 setaddr :unpackCfg*retaddr *label251 (h:*label251)
 
   784 call *label34 *invalid :meetTarget*retval (m:*label252) (h:*label252)
   785 label *label252
   786 return :meetTarget.1*retaddr
-    * end
   787 label *label40
   788 set :meetTarget:block 0
   789 set :meetTarget:copper 0
 
   802 write 0 .controller ".siliconReserve"
   803 write 0 .controller ".graphiteReserve"
   804 return :buildUnits*retaddr
-    * end
   805 label *label41
   806 label *label256
   807 ubind :flagUnits:unit
 
   814 ubind :flagUnits:unit
   815 jump *label259 notEqual @unit :flagUnits:firstUnit
   816 return :flagUnits*retaddr
-    * end
   817 label *label42
   818 ubind :lineUpUnits:unit
   819 set :lineUpUnits:firstUnit @unit
 
   828 ubind :lineUpUnits:unit
   829 jump *label263 notEqual @unit :lineUpUnits:firstUnit
   830 return :lineUpUnits*retaddr
-    * end
   831 label *label22
   832 write "Mining " processor2 ".status2"
   833 write :mineOre.1:ore processor2 ".item2"
 
   839 call *label21 *invalid :mineOre*retval (m:*label271) (h:*label271)
   840 label *label271
   841 return :mineOre.1*retaddr
-    * end
   842 label *label23
   843 sensor *tmp316 :fetchBlock:block @itemCapacity
   844 op min :transportStatus:target *tmp316 30
 
   912 write 0 processor2 ".transportTarget"
   913 write null processor2 ".transportItem"
   914 return :fetchBlock*retaddr
-    * end
   915 label *label24
   916 write "Supplying " processor2 ".status2"
   917 write :supplyBlock:ore processor2 ".item2"
 
   928 label *label287
   929 label *label285
   930 return :supplyBlock*retaddr
-    * end
   931 label *label27
   932 read *tmp346 :unpackCfg:cfg 1
   933 op sub *tmp347 *tmp346 74
 
   950 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   951 sensor :unpackCfg:th :unpackCfg:type @thorium
   952 return :unpackCfg*retaddr
-    * end
   953 label *label34
   954 op sign :meetTarget:count :meetTarget:copper
   955 op sign *tmp372 :meetTarget:lead
 
  1081 jump *label676 equal *tmp384 false
  1082 label *label313
  1083 return :meetTarget*retaddr
-    * end
  1084 label *label35
  1085 set :meetTarget:block :buildBlock:block
  1086 set :meetTarget:copper :buildBlock:copper
 
  1107 jump *label332 equal *tmp413 false
  1108 read :buildBlock*retval processor5 ":buildBlockAt*retval"
  1109 return :buildBlock*retaddr
-    * end
  1110 label *label21
  1111 op min :mineOre:amount :mineOre:amount 30
  1112 write :mineOre:amount processor2 ".transportTarget"
 
  1182 write 0 processor2 ".transportTarget"
  1183 write null processor2 ".transportItem"
  1184 return :mineOre*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    25 label *label48
    26 ubind @poly
    27 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp120 .core
+   28 ulocate building core false @copper .coreX .coreY 0 .core
    29 jump *label48 equal .core null
    30 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    31 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
 
  1111 op min :mineOre:amount :mineOre:amount 30
  1112 write :mineOre:amount processor2 ".transportTarget"
  1113 write :mineOre:ore processor2 ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 *tmp449
+ 1114 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp448 0
  1115 jump *label509 notEqual *tmp448 false
  1116 set .ERROR "Cannot locate ore"
  1117 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label43                                               CoreBuilder.mnd: require "Display.mnd" remote display;
    1:  read *tmp33 processor2 "*signature"                          ...
    2:  jump *label43 notEqual *tmp33 "0:v1"                         ...
        label *label44                                               CoreBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    3:  read *tmp73 processor3 "*signature"                          ...
    4:  jump *label44 notEqual *tmp73 "3290b8c661787058:v1"          ...
        label *label45                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    5:  read *tmp98 processor7 "*signature"                          ...
    6:  jump *label45 notEqual *tmp98 "0:v1"                         ...
        label *label46                                               CoreBuilder.mnd: require "PolyController.mnd" remote polyController;
    7:  read *tmp100 processor6 "*signature"                         ...
    8:  jump *label46 notEqual *tmp100 "5f95d6f938a8462e:v1"         ...
        label *label47                                               CoreBuilder.mnd: require "BlockBuilder.mnd" remote blockBuilder;
    9:  read *tmp116 processor5 "*signature"                         ...
   10:  jump *label47 notEqual *tmp116 "319badb7a8e178a4:v1"         ...
   11:  set .titaniumDrill null                                      CoreBuilder.mnd: var
   12:  set .thoriumBattery null                                     ...
   13:  set .thoriumContainer null                                   ...
   14:  set .thoriumGenerator null                                   ...
   15:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   16:  set .graphiteSurplus 20                                      ...
   17:  set .siliconSurplus 20                                       ...
   18:  set .metaglassSurplus 20                                     ...
   19:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label48                                               CoreBuilder.mnd: do
   20:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   21:  set .builder @unit                                           ...
   22:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   23:  jump *label48 equal .core null                               CoreBuilder.mnd: do
   24:  set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"        CoreBuilder.mnd: buildBlockFromCfg(PRESS);
   25:  set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   26:  set :buildBlockFromCfg:config null                           ...
   27:  setaddr :buildBlockFromCfg*retaddr *label697                 ...
   28:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label697                                              ...
   29:  set :buildBlockFromCfg.1:cfg "AJTJK-battery1"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY1);
   30:  set :buildBlockFromCfg:cfg "AJTJK-battery1"                 CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   31:  set :buildBlockFromCfg:config null                           ...
   32:  setaddr :buildBlockFromCfg*retaddr *label700                 ...
   33:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label700                                              ...
   34:  set :buildBlockFromCfg.1:cfg "ALTJL-battery2"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   35:  set :buildBlockFromCfg:cfg "ALTJL-battery2"                 CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   36:  set :buildBlockFromCfg:config null                           ...
   37:  setaddr :buildBlockFromCfg*retaddr *label708                 ...
   38:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label708                                              ...
   39:  set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"  CoreBuilder.mnd: buildBlockFromCfg(GENERATOR);
   40:  setaddr :buildBlockFromCfg.1*retaddr *label54                ...
   41:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label54                                               ...
   42:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   43:  set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"       CoreBuilder.mnd: buildBlockFromCfg(SMELTER);
   44:  setaddr :buildBlockFromCfg.1*retaddr *label55                ...
   45:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label55                                               ...
   46:  set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   47:  setaddr :buildBlockFromCfg.1*retaddr *label56                ...
   48:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label56                                               ...
   49:  set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"             CoreBuilder.mnd: meetTarget(cfg);
   50:  setaddr :meetTarget.1*retaddr *label58                       ...
   51:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label58                                               ...
   52:  write @titanium processor2 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   53:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   54:  write .coreY processor3 ":findDrillLocation:y"               ...
   55:  write @unit processor3 ":findDrillLocation:unit"             ...
   56:  write @titanium processor3 ":findDrillLocation:item"         ...
   57:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
   58:  write 2 processor3 ":findDrillLocation:size"                 ...
   59:  write 4 processor3 ":findDrillLocation:limit"                ...
   60:  write false processor3 ":findDrillLocation*finished"         ...
   61:  write 1 processor3 "@counter"                                ...
        label *label59                                               ...
   62:  wait 1e-15                                                   ...
   63:  read *tmp139 processor3 ":findDrillLocation*finished"        ...
   64:  jump *label59 equal *tmp139 false                            ...
   65:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
   66:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
   67:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
   68:  jump *label60 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   69:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   70:  stop                                                         Actions.mnd: stopProcessor();
        label *label60                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   71:  write @pneumatic-drill processor2 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   72:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   73:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   74:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   75:  write 2 processor5 "@counter"                                ...
        label *label63                                               ...
   76:  wait 1e-15                                                   ...
   77:  read *tmp145 processor5 ":buildFirstTitaniumDrillAt*finished ...
   78:  jump *label63 equal *tmp145 false                            ...
   79:  read *tmp128 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   80:  set .titaniumDrill *tmp128                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   81:  write *tmp128 processor2 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   82:  set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"              CoreBuilder.mnd: buildBlockFromCfg(UNLOADER1);
   83:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
   84:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
   85:  set :buildBlockFromCfg.1:cfg "A{HNJQ-inverted-sorter7"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   86:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
   87:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
   88:  set :buildBlockFromCfg.1:cfg "A~JPJR-overflow-gate8"         CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   89:  setaddr :buildBlockFromCfg.1*retaddr *label66                ...
   90:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label66                                               ...
   91:  set .graphiteSurplus 50                                      CoreBuilder.mnd: graphiteSurplus = 50;
   92:  set :buildBlockFromCfg:cfg "AÕFFJS-micro-processor9"         CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, coreControllerConfig);
   93:  set :buildBlockFromCfg:config processor10                    ...
   94:  setaddr :buildBlockFromCfg*retaddr *label67                  ...
   95:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label67                                               ...
   96:  set .controller :buildBlockFromCfg*retval                    ...
   97:  write processor1 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   98:  write processor2 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   99:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
  100:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
  101:  set *tmp152 AJEMJJ-graphite-press0                           CoreBuilder.mnd: controller.write(@this.read(block), block);
  102:  write *tmp152 :buildBlockFromCfg*retval "AJEMJJ-graphite-pre ...
  103:  set *tmp152 AJTJK-battery1                                  ...
  104:  write *tmp152 :buildBlockFromCfg*retval "AJTJK-battery1"    ...
  105:  set *tmp152 ALTJL-battery2                                  ...
  106:  write *tmp152 :buildBlockFromCfg*retval "ALTJL-battery2"    ...
  107:  set *tmp152 AJRJM-combustion-generator3                     ...
  108:  write *tmp152 :buildBlockFromCfg*retval "AJRJM-combustion-g ...
  109:  set *tmp152 ALMQJN-silicon-smelter4                          ...
  110:  write *tmp152 :buildBlockFromCfg*retval "ALMQJN-silicon-smel ...
  111:  set *tmp152 A{LNJO-inverted-sorter5                          ...
  112:  write *tmp152 :buildBlockFromCfg*retval "A{LNJO-inverted-sor ...
  113:  set *tmp152 A©JNJP-unloader6                                 ...
  114:  write *tmp152 :buildBlockFromCfg*retval "A©JNJP-unloader6"   ...
  115:  set *tmp152 A{HNJQ-inverted-sorter7                          ...
  116:  write *tmp152 :buildBlockFromCfg*retval "A{HNJQ-inverted-sor ...
  117:  set *tmp152 A~JPJR-overflow-gate8                            ...
  118:  write *tmp152 :buildBlockFromCfg*retval "A~JPJR-overflow-gat ...
  119:  set *tmp152 AÕFFJS-micro-processor9                          ...
  120:  write *tmp152 :buildBlockFromCfg*retval "AÕFFJS-micro-proces ...
  121:  set :buildBlockFromCfg.1:cfg "AFJJT-power-node10"           CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  122:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  123:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  124:  set :buildBlockFromCfg.1:cfg "A©FHJU-unloader11"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER2);
  125:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  126:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  127:  set :buildBlockFromCfg.1:cfg "A¾BHMV-air-factory12"          CoreBuilder.mnd: buildBlockFromCfg(AIR_FACTORY);
  128:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  129:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  130:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  131:  write 1 processor2 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  132:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  133:  write 3 processor2 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  134:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  135:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  136:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  137:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  138:  set .siliconSurplus 20                                       ...
  139:  setaddr :buildUnits*retaddr *label86                         CoreBuilder.mnd: buildUnits();
  140:  call *label40 *invalid :buildUnits*retval                    ...
        label *label86                                               ...
        label *label87                                               CoreBuilder.mnd: do
  141:  setaddr :supplyBase*retaddr *label90                         CoreBuilder.mnd: supplyBase();
  142:  call *label33 *invalid :supplyBase*retval                    ...
        label *label90                                               ...
  143:  sensor *tmp156 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  144:  jump *label89 lessThan *tmp156 300                           ...
  145:  read *tmp85 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  146:  jump *label87 lessThan *tmp85 3                              CoreBuilder.mnd: do
        label *label89                                               ...
  147:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  148:  set :buildBlockFromCfg.1:cfg "A©NHJW-unloader13"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  149:  setaddr :buildBlockFromCfg.1*retaddr *label93                ...
  150:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label93                                               ...
  151:  set :buildBlockFromCfg.1:cfg "A{NJJX-inverted-sorter14"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  152:  setaddr :buildBlockFromCfg.1*retaddr *label94                ...
  153:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label94                                               ...
  154:  set :buildBlockFromCfg.1:cfg "ANOMJY-kiln15"                 CoreBuilder.mnd: buildBlockFromCfg(KILN);
  155:  setaddr :buildBlockFromCfg.1*retaddr *label95                ...
  156:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label95                                               ...
  157:  set :buildBlockFromCfg.1:cfg "A¡ASJZ-water-extractor16"      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  158:  setaddr :buildBlockFromCfg.1*retaddr *label96                ...
  159:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label96                                               ...
  160:  set :buildBlockFromCfg:cfg "A©BLJ[-unloader17"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3A, @coal);
  161:  set :buildBlockFromCfg:config @coal                          ...
  162:  setaddr :buildBlockFromCfg*retaddr *label97                  ...
  163:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label97                                               ...
  164:  set :buildBlockFromCfg.1:cfg "AAOJ\-steam-generator18"      CoreBuilder.mnd: buildBlockFromCfg(STEAM_GEN);
  165:  setaddr :buildBlockFromCfg.1*retaddr *label98                ...
  166:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label98                                               ...
  167:  set :buildBlockFromCfg.1:cfg "AKFRJ]-multi-press19"          CoreBuilder.mnd: buildBlockFromCfg(MULTIPRESS);
  168:  setaddr :buildBlockFromCfg.1*retaddr *label99                ...
  169:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label99                                               ...
  170:  set :buildBlockFromCfg.1:cfg "AÇBBJ^-payload-router20"       CoreBuilder.mnd: buildBlockFromCfg(PAYLOAD_ROUTER);
  171:  setaddr :buildBlockFromCfg.1*retaddr *label100               ...
  172:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label100                                              ...
  173:  set :buildBlockFromCfg.1:cfg "A©HFJ_-unloader21"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  174:  setaddr :buildBlockFromCfg.1*retaddr *label101               ...
  175:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label101                                              ...
  176:  set :buildBlockFromCfg.1:cfg "AÀHBJ`-additive-reconstructor2 CoreBuilder.mnd: buildBlockFromCfg(ADDITIVE_REC);
  177:  setaddr :buildBlockFromCfg.1*retaddr *label102               ...
  178:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label102                                              ...
  179:  setaddr :buildUnits*retaddr *label103                        CoreBuilder.mnd: buildUnits();
  180:  call *label40 *invalid :buildUnits*retval                    ...
        label *label103                                              ...
  181:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  182:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  183:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  184:  write 3 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  185:  write 3 processor2 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  186:  set :buildBlockFromCfg.1:cfg "ALSIJa-silicon-smelter23"      CoreBuilder.mnd: buildBlockFromCfg(SMELTER2);
  187:  setaddr :buildBlockFromCfg.1*retaddr *label105               ...
  188:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label105                                              ...
  189:  set :buildBlockFromCfg.1:cfg "A{PJJb-inverted-sorter24"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  190:  setaddr :buildBlockFromCfg.1*retaddr *label106               ...
  191:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label106                                              ...
  192:  set :buildBlockFromCfg.1:cfg "A{PHJc-inverted-sorter25"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  193:  setaddr :buildBlockFromCfg.1*retaddr *label107               ...
  194:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label107                                              ...
  195:  setaddr :buildUnits*retaddr *label108                        CoreBuilder.mnd: buildUnits();
  196:  call *label40 *invalid :buildUnits*retval                    ...
        label *label108                                              ...
  197:  read *tmp86 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  198:  jump *label111 greaterThanEq *tmp86 3                        ...
        label *label692                                              ...
  199:  setaddr :supplyBase*retaddr *label112                        CoreBuilder.mnd: supplyBase();
  200:  call *label33 *invalid :supplyBase*retval                    ...
        label *label112                                              ...
  201:  read *tmp86 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  202:  jump *label692 lessThan *tmp86 3                             ...
        label *label111                                              ...
  203:  write 2 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  204:  write 2 processor2 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  205:  read *tmp84 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  206:  jump *label116 greaterThanEq *tmp84 2                        ...
        label *label693                                              ...
  207:  setaddr :supplyBase*retaddr *label117                        CoreBuilder.mnd: supplyBase();
  208:  call *label33 *invalid :supplyBase*retval                    ...
        label *label117                                              ...
  209:  read *tmp84 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  210:  jump *label693 lessThan *tmp84 2                             ...
        label *label116                                              ...
  211:  write @ore-titanium processor2 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  212:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  213:  read :blocksBuildTitaniumDrills:current processor3 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  214:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  215:  write .coreY processor3 ":findDrillLocation:y"               ...
  216:  write @unit processor3 ":findDrillLocation:unit"             ...
  217:  write @titanium processor3 ":findDrillLocation:item"         ...
  218:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  219:  write 4 processor3 ":findDrillLocation:size"                 ...
  220:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  221:  write false processor3 ":findDrillLocation*finished"         ...
  222:  write 1 processor3 "@counter"                                ...
  223:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  224:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  225:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  226:  write false processor5 ":buildTitaniumDrills*finished"       ...
  227:  write 3 processor5 "@counter"                                ...
        label *label119                                              ...
  228:  wait 1e-15                                                   ...
  229:  read *tmp187 processor5 ":buildTitaniumDrills*finished"      ...
  230:  jump *label119 equal *tmp187 false                           ...
  231:  write false processor3 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  232:  write 3 processor3 "@counter"                                ...
  233:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  234:  write .coreX processor3 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  235:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  236:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  237:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  238:  write false processor3 ":layoutThoriumDrill*finished"        ...
  239:  write 2 processor3 "@counter"                                ...
        label *label121                                              ...
  240:  wait 1e-15                                                   ...
  241:  read *tmp192 processor3 ":layoutThoriumDrill*finished"       ...
  242:  jump *label121 equal *tmp192 false                           ...
  243:  set :meetTarget.1:cfg "AJJJ~-laser-drill52"                 CoreBuilder.mnd: meetTarget(LASER_DRILL);
  244:  setaddr :meetTarget.1*retaddr *label122                      ...
  245:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label122                                              ...
        label *label123                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  246:  wait 1e-15                                                   ...
  247:  read *tmp194 processor3 ":layoutThoriumDrill*finished"       ...
  248:  jump *label123 equal *tmp194 false                           ...
  249:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  250:  jump *label124 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  251:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  252:  stop                                                         Actions.mnd: stopProcessor();
        label *label124                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  253:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  254:  read *tmp55 processor3 ".drillX"                             ...
  255:  write *tmp55 processor5 ":buildBlockAt:x"                    ...
  256:  read *tmp56 processor3 ".drillY"                             ...
  257:  write *tmp56 processor5 ":buildBlockAt:y"                    ...
  258:  write null processor5 ":buildBlockAt:rotation"               ...
  259:  write 0 processor5 ":buildBlockAt:config"                    ...
  260:  write -1 processor5 ":buildBlockAt:index"                    ...
  261:  write false processor5 ":buildBlockAt*finished"              ...
  262:  write 1 processor5 "@counter"                                ...
        label *label127                                              ...
  263:  wait 1e-15                                                   ...
  264:  read *tmp204 processor5 ":buildBlockAt*finished"             ...
  265:  jump *label127 equal *tmp204 false                           ...
  266:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  267:  set :buildRemoteBlock:cfg "A¡ASJZ-water-extractor16"         CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  268:  read :buildRemoteBlock:x processor3 ".water1X"               ...
  269:  read :buildRemoteBlock:y processor3 ".water1Y"               ...
  270:  setaddr :buildRemoteBlock*retaddr *label128                  ...
  271:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label128                                              ...
  272:  read :buildRemoteBlock:x processor3 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  273:  read :buildRemoteBlock:y processor3 ".water2Y"               ...
  274:  setaddr :buildRemoteBlock*retaddr *label129                  ...
  275:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label129                                              ...
  276:  set :buildRemoteBlock:cfg "AAOJ\-steam-generator18"         CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  277:  read :buildRemoteBlock:x processor3 ".generatorX"            ...
  278:  read :buildRemoteBlock:y processor3 ".generatorY"            ...
  279:  setaddr :buildRemoteBlock*retaddr *label130                  ...
  280:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label130                                              ...
  281:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  282:  set :buildRemoteBlock:cfg "AFJJT-power-node10"              CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  283:  read :buildRemoteBlock:x processor3 ".node1X"                ...
  284:  read :buildRemoteBlock:y processor3 ".node1Y"                ...
  285:  setaddr :buildRemoteBlock*retaddr *label131                  ...
  286:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label131                                              ...
  287:  read :buildRemoteBlock:x processor3 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  288:  read :buildRemoteBlock:y processor3 ".node2Y"                ...
  289:  setaddr :buildRemoteBlock*retaddr *label132                  ...
  290:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label132                                              ...
  291:  set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"             CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  292:  read :buildRemoteBlock:x processor3 ".panelX"                ...
  293:  read :buildRemoteBlock:y processor3 ".panelY"                ...
  294:  setaddr :buildRemoteBlock*retaddr *label133                  ...
  295:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label133                                              ...
  296:  set :buildRemoteBlock:cfg "AJTJK-battery1"                  CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  297:  read :buildRemoteBlock:x processor3 ".batteryX"              ...
  298:  read :buildRemoteBlock:y processor3 ".batteryY"              ...
  299:  setaddr :buildRemoteBlock*retaddr *label134                  ...
  300:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label134                                              ...
  301:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  302:  set :buildRemoteBlock:cfg "A¨JJJ~-container52"               CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  303:  read :buildRemoteBlock:x processor3 ".containerX"            ...
  304:  read :buildRemoteBlock:y processor3 ".containerY"            ...
  305:  setaddr :buildRemoteBlock*retaddr *label135                  ...
  306:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label135                                              ...
  307:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  308:  write .thoriumDrill processor2 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  309:  write .thoriumContainer processor2 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  310:  write .thoriumContainer processor6 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  311:  write false processor6 ":setThoriumContainer*finished"       ...
  312:  write 3 processor6 "@counter"                                ...
        label *label138                                              ...
  313:  wait 1e-15                                                   ...
  314:  read *tmp217 processor6 ":setThoriumContainer*finished"      ...
  315:  jump *label138 equal *tmp217 false                           ...
  316:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  317:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  318:  write 1 processor2 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  319:  read *tmp86 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  320:  jump *label142 greaterThanEq *tmp86 3                        ...
        label *label694                                              ...
  321:  setaddr :supplyBase*retaddr *label143                        CoreBuilder.mnd: supplyBase();
  322:  call *label33 *invalid :supplyBase*retval                    ...
        label *label143                                              ...
  323:  read *tmp86 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  324:  jump *label694 lessThan *tmp86 3                             ...
        label *label142                                              ...
  325:  set :buildBlockFromCfg:cfg "A©JFJd-unloader26"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER6, @silicon);
  326:  set :buildBlockFromCfg:config @silicon                       ...
  327:  setaddr :buildBlockFromCfg*retaddr *label144                 ...
  328:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label144                                              ...
  329:  set :buildBlockFromCfg.1:cfg "AÁPBJe-multiplicative-reconstr CoreBuilder.mnd: buildBlockFromCfg(MULTIPLICATIVE_REC);
  330:  setaddr :buildBlockFromCfg.1*retaddr *label145               ...
  331:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label145                                              ...
  332:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  333:  setaddr :buildUnits*retaddr *label146                        CoreBuilder.mnd: buildUnits();
  334:  call *label40 *invalid :buildUnits*retval                    ...
        label *label146                                              ...
  335:  read *tmp87 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  336:  jump *label149 greaterThanEq *tmp87 1                        ...
        label *label695                                              ...
  337:  setaddr :supplyBase*retaddr *label150                        CoreBuilder.mnd: supplyBase();
  338:  call *label33 *invalid :supplyBase*retval                    ...
        label *label150                                              ...
  339:  read *tmp87 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  340:  jump *label695 lessThan *tmp87 1                             ...
        label *label149                                              ...
  341:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  342:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  343:  control enabled processor6 false 0 0 0                       CoreBuilder.mnd: polyController.enabled = false;
  344:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: oreLocator.enabled = false;
  345:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: blockBuilder.enabled = false;
  346:  control enabled processor11 false 0 0 0                      CoreBuilder.mnd: measurements.enabled = false;
  347:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  348:  setaddr :flagUnits*retaddr *label152                         ...
  349:  call *label41 *invalid :flagUnits*retval                     ...
        label *label152                                              ...
  350:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  351:  setaddr :flagUnits*retaddr *label153                         ...
  352:  call *label41 *invalid :flagUnits*retval                     ...
        label *label153                                              ...
  353:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  354:  setaddr :flagUnits*retaddr *label154                         ...
  355:  call *label41 *invalid :flagUnits*retval                     ...
        label *label154                                              ...
  356:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  357:  setaddr :flagUnits*retaddr *label155                         ...
  358:  call *label41 *invalid :flagUnits*retval                     ...
        label *label155                                              ...
        label *label156                                              CoreBuilder.mnd: while true do
  359:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  360:  set :lineUpUnits:unit @mega                                  ...
  361:  setaddr :lineUpUnits*retaddr *label159                       ...
  362:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label159                                              ...
  363:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  364:  set :lineUpUnits:unit @poly                                  ...
  365:  setaddr :lineUpUnits*retaddr *label160                       ...
  366:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label160                                              ...
  367:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  368:  set :lineUpUnits:unit @mono                                  ...
  369:  setaddr :lineUpUnits*retaddr *label161                       ...
  370:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label161                                              ...
  371:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  372:  set :lineUpUnits:unit @flare                                 ...
  373:  setaddr :lineUpUnits*retaddr *label156                       ...
  374:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label33                                               CoreBuilder.mnd: void supplyBase()
  375:  sensor *tmp232 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  376:  op sub *tmp233 silicon *tmp232                               ...
  377:  op max *tmp234 0 *tmp233                                     ...
  378:  write *tmp234 processor7 ".sandTarget"                       ...
  379:  jump *label165 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  380:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  381:  sensor *tmp236 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  382:  jump *label169 greaterThanEq *tmp236 2000                    ...
  383:  sensor *tmp239 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  384:  jump *label171 greaterThanEq *tmp239 50                      ...
  385:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  386:  set :supplyBlock:ore @coal                                   ...
  387:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  388:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  389:  write .thoriumGenerator processor2 ".block2"                 Actions.mnd: display.block2 = block;
  390:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  391:  sensor *tmp330 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  392:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  393:  jump *label172 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  394:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  395:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  396:  set :mineOre:block .thoriumGenerator                         ...
  397:  setaddr :mineOre*retaddr *label172                           ...
  398:  call *label21 *invalid :mineOre*retval                       ...
        label *label171                                              CoreBuilder.mnd: if core.@coal < 50 then
  399:  sensor *tmp334 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  400:  op min :transportStatus:target *tmp334 30                    ...
  401:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  402:  write @coal processor2 ".transportItem"                      Actions.mnd: display.transportItem = item;
  403:  write "Transferring " processor2 ".status2"                  Actions.mnd: display.status2 = text;
  404:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  405:  write .thoriumGenerator processor2 ".block2"                 Actions.mnd: display.block2 = block;
  406:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label553                                              Actions.mnd: do
  407:  sensor *tmp415 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  408:  jump *label554 equal *tmp415 null                            ...
  409:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label554                                              ...
  410:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  411:  ucontrol within .coreX .coreY 6 *tmp418 0                    Actions.mnd: while !within(x, y, RADIUS);
  412:  jump *label553 equal *tmp418 false                           Actions.mnd: do
  413:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  414:  jump *label581 equal *tmp420 null                            ...
        label *label579                                              ...
  415:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  416:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  417:  jump *label579 notEqual *tmp420 null                         ...
        label *label581                                              ...
        label *label489                                              Actions.mnd: do
  418:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  419:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  420:  op notEqual *tmp337 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  421:  op notEqual *tmp338 :supplyBlockFromCore:unitItem @coal      ...
  422:  op land *tmp339 *tmp337 *tmp338                              ...
  423:  jump *label490 equal *tmp339 false                           ...
  424:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label490                                              Actions.mnd: if unitItem != null and unitItem != item then
  425:  sensor *tmp341 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  426:  op lessThan *tmp342 *tmp341 30                               ...
  427:  sensor *tmp343 .core @coal                                   ...
  428:  op land *tmp344 *tmp342 *tmp343                              ...
  429:  jump *label489 notEqual *tmp344 false                        Actions.mnd: do
  430:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  431:  sensor *tmp422 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  432:  jump *label635 notEqual *tmp422 @coal                        ...
  433:  sensor *tmp446 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  434:  sensor *tmp447 .thoriumGenerator @y                          ...
  435:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  436:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  437:  jump *label629 notEqual *tmp452 false                        ...
        label *label627                                              ...
  438:  ucontrol approach *tmp446 *tmp447 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  439:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  440:  jump *label627 equal *tmp452 false                           ...
        label *label629                                              ...
  441:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label632                                              Actions.mnd: do
  442:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  443:  sensor *tmp426 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  444:  op mul *tmp427 *tmp426 :depositItems:cap                     ...
  445:  sensor *tmp428 .thoriumGenerator @coal                       ...
  446:  jump *label632 greaterThan *tmp427 *tmp428                   Actions.mnd: do
  447:  jump *label640 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label635                                              ...
  448:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  449:  jump *label639 equal *tmp430 null                            ...
        label *label637                                              ...
  450:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  451:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  452:  jump *label637 notEqual *tmp430 null                         ...
        label *label639                                              ...
        label *label640                                              Actions.mnd: if @unit.@firstItem == item then
  453:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  454:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
        label *label172                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label169                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  455:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  456:  set :fetchBlock:item @thorium                                ...
  457:  setaddr :fetchBlock*retaddr *label175                        ...
  458:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label175                                              ...
  459:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label165                                              ...
  460:  read *tmp85 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  461:  jump *label176 lessThanEq *tmp85 3                           ...
  462:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  463:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  464:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  465:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  466:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  467:  set :mineOre:amount 30                                       ...
  468:  set :mineOre:block .core                                     ...
  469:  setaddr :mineOre*retaddr *label592                           ...
  470:  call *label21 *invalid :mineOre*retval                       ...
        label *label592                                              ...
  471:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label176                                              ...
  472:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  473:  jump *label182 notEqual A©JNJP-unloader6 null                CoreBuilder.mnd: if unloader1 == null then
  474:  sensor *tmp246 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  475:  jump *label184 greaterThanEq *tmp246 graphite                ...
  476:  sensor *tmp249 AJEMJJ-graphite-press0 @coal                  CoreBuilder.mnd: if press.@coal < 5 then
  477:  jump *label186 greaterThanEq *tmp249 5                       ...
  478:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  479:  set :supplyBlock:block AJEMJJ-graphite-press0                CoreBuilder.mnd: supplyBlock(press, @coal);
  480:  set :supplyBlock:ore @coal                                   ...
  481:  setaddr :supplyBlock*retaddr *label189                       ...
  482:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label189                                              ...
  483:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label186                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label184                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  484:  sensor *tmp252 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  485:  jump *label190 greaterThanEq *tmp252 silicon                 ...
  486:  sensor *tmp255 ALMQJN-silicon-smelter4 @coal                 CoreBuilder.mnd: if smelter.@coal < 5 then
  487:  jump *label192 greaterThanEq *tmp255 5                       ...
  488:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  489:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @coal);
  490:  set :supplyBlock:ore @coal                                   ...
  491:  setaddr :supplyBlock*retaddr *label195                       ...
  492:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label195                                              ...
  493:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  494:  jump *label193 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label192                                              ...
  495:  sensor *tmp258 ALMQJN-silicon-smelter4 @sand                 CoreBuilder.mnd: elsif smelter.@sand < 5 then
  496:  jump *label196 greaterThanEq *tmp258 5                       ...
  497:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  498:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @sand);
  499:  set :supplyBlock:ore @sand                                   ...
  500:  setaddr :supplyBlock*retaddr *label199                       ...
  501:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label199                                              ...
  502:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label196                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label193                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label190                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  503:  sensor *tmp261 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
  504:  jump *label200 greaterThanEq *tmp261 .powerTarget            ...
  505:  sensor *tmp264 AJRJM-combustion-generator3 @coal            CoreBuilder.mnd: if generator.@coal < 2 then
  506:  jump *label202 greaterThanEq *tmp264 2                       ...
  507:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  508:  set :supplyBlock:block AJRJM-combustion-generator3          CoreBuilder.mnd: supplyBlock(generator, @coal);
  509:  set :supplyBlock:ore @coal                                   ...
  510:  setaddr :supplyBlock*retaddr *label205                       ...
  511:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label205                                              ...
  512:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label202                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label200                                              CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
        label *label182                                              CoreBuilder.mnd: if unloader1 == null then
  513:  set *tmp269 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  514:  sensor *tmp267 .core @titanium                               ...
  515:  jump *label207 greaterThanEq *tmp267 titanium                ...
  516:  sensor *tmp270 .core @titanium                               ...
  517:  op sub *tmp271 titanium *tmp270                              ...
  518:  op min *tmp269 7 *tmp271                                     ...
        label *label207                                              ...
  519:  sensor *tmp273 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  520:  jump *label208 greaterThanEq *tmp273 *tmp269                 ...
  521:  jump *label209 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  522:  sensor *tmp278 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  523:  op mul *tmp279 A©JNJP-unloader6 .powerTarget                 ...
  524:  jump *label212 greaterThanEq *tmp278 *tmp279                 ...
  525:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  526:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  527:  write @coal processor2 ".item2"                              Actions.mnd: display.item2 = item;
  528:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  529:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  530:  set :mineOre:amount 30                                       ...
  531:  set :mineOre:block .core                                     ...
  532:  setaddr :mineOre*retaddr *label705                           ...
  533:  call *label21 *invalid :mineOre*retval                       ...
        label *label705                                              ...
  534:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label212                                              ...
  535:  sensor *tmp282 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  536:  jump *label216 greaterThanEq *tmp282 silicon                 ...
  537:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  538:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  539:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  540:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  541:  setaddr :mineOre.1*retaddr *label221                         CoreBuilder.mnd: mineOre(ore);
  542:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label221                                              ...
  543:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label216                                              ...
  544:  sensor *tmp289 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  545:  jump *label222 greaterThanEq *tmp289 copper                  ...
  546:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  547:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  548:  setaddr :mineOre.1*retaddr *label225                         ...
  549:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label225                                              ...
  550:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label222                                              ...
  551:  sensor *tmp292 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  552:  jump *label226 greaterThanEq *tmp292 lead                    ...
  553:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  554:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  555:  setaddr :mineOre.1*retaddr *label229                         ...
  556:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label229                                              ...
  557:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label226                                              ...
  558:  sensor *tmp295 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  559:  jump *label230 greaterThanEq *tmp295 metaglass               ...
  560:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  561:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  562:  setaddr :mineOre.1*retaddr *label233                         ...
  563:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label233                                              ...
  564:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label230                                              ...
  565:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  566:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  567:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  568:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  569:  setaddr :mineOre.1*retaddr *label237                         CoreBuilder.mnd: mineOre(ore);
  570:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label237                                              ...
  571:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label208                                              ...
  572:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  573:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  574:  set :fetchBlock:item @titanium                               ...
  575:  setaddr :fetchBlock*retaddr *label239                        ...
  576:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label239                                              ...
        label *label209                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  577:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label36                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  578:  op add *tmp302 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  579:  jump *label241 lessThanEq *tmp302 0                          ...
  580:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  581:  setaddr :unpackCfg*retaddr *label243                         ...
  582:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label243                                              ...
  583:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  584:  set :buildBlock:x :buildRemoteBlock:x                        ...
  585:  set :buildBlock:y :buildRemoteBlock:y                        ...
  586:  set :buildBlock:copper :unpackCfg:cu                         ...
  587:  set :buildBlock:lead :unpackCfg:pb                           ...
  588:  set :buildBlock:graphite :unpackCfg:gr                       ...
  589:  set :buildBlock:silicon :unpackCfg:si                        ...
  590:  set :buildBlock:titanium :unpackCfg:ti                       ...
  591:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  592:  set :buildBlock:thorium :unpackCfg:th                        ...
  593:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  594:  set :buildBlock:config null                                  ...
  595:  set :buildBlock:index :unpackCfg:ind                         ...
  596:  setaddr :buildBlock*retaddr *label244                        ...
  597:  call *label35 *invalid :buildBlock*retval                    ...
        label *label244                                              ...
  598:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  599:  return :buildRemoteBlock*retaddr                             ...
        label *label241                                              CoreBuilder.mnd: if x + y > 0 then
  600:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  601:  return :buildRemoteBlock*retaddr                             ...
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  602:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  603:  setaddr :unpackCfg*retaddr *label246                         ...
  604:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label246                                              ...
  605:  op add *tmp305 .coreX :unpackCfg:x                           CoreBuilder.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  606:  op add *tmp306 .coreY :unpackCfg:y                           ...
  607:  set :buildBlock:block :unpackCfg:type                        ...
  608:  set :buildBlock:x *tmp305                                    ...
  609:  set :buildBlock:y *tmp306                                    ...
  610:  set :buildBlock:copper :unpackCfg:cu                         ...
  611:  set :buildBlock:lead :unpackCfg:pb                           ...
  612:  set :buildBlock:graphite :unpackCfg:gr                       ...
  613:  set :buildBlock:silicon :unpackCfg:si                        ...
  614:  set :buildBlock:titanium :unpackCfg:ti                       ...
  615:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  616:  set :buildBlock:thorium :unpackCfg:th                        ...
  617:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  618:  set :buildBlock:config :buildBlockFromCfg:config             ...
  619:  set :buildBlock:index :unpackCfg:ind                         ...
  620:  setaddr :buildBlock*retaddr *label247                        ...
  621:  call *label35 *invalid :buildBlock*retval                    ...
        label *label247                                              ...
  622:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        CoreBuilder.mnd: @this.write(building, cfg);
  623:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   CoreBuilder.mnd: display.write(building, cfg);
  624:  write :buildBlock*retval .controller :buildBlockFromCfg:cfg  CoreBuilder.mnd: controller.write(building, cfg);
  625:  set :buildBlockFromCfg*retval :buildBlock*retval             CoreBuilder.mnd: return building;
  626:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label38                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  627:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  628:  set :buildBlockFromCfg:config null                           ...
  629:  setaddr :buildBlockFromCfg*retaddr *label249                 ...
  630:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label249                                              ...
  631:  return :buildBlockFromCfg.1*retaddr                          CoreBuilder.mnd: def buildBlockFromCfg(cfg)
        label *label39                                               CoreBuilder.mnd: void meetTarget(cfg)
  632:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  633:  setaddr :unpackCfg*retaddr *label251                         ...
  634:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label251                                              ...
  635:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  636:  set :meetTarget:copper :unpackCfg:cu                         ...
  637:  set :meetTarget:lead :unpackCfg:pb                           ...
  638:  set :meetTarget:graphite :unpackCfg:gr                       ...
  639:  set :meetTarget:silicon :unpackCfg:si                        ...
  640:  set :meetTarget:titanium :unpackCfg:ti                       ...
  641:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  642:  set :meetTarget:thorium :unpackCfg:th                        ...
  643:  setaddr :meetTarget*retaddr *label252                        ...
  644:  call *label34 *invalid :meetTarget*retval                    ...
        label *label252                                              ...
  645:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  646:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  647:  set :meetTarget:copper 0                                     ...
  648:  set :meetTarget:lead 0                                       ...
  649:  set :meetTarget:graphite 0                                   ...
  650:  set :meetTarget:silicon 0                                    ...
  651:  set :meetTarget:titanium 0                                   ...
  652:  set :meetTarget:metaglass 0                                  ...
  653:  set :meetTarget:thorium 0                                    ...
  654:  setaddr :meetTarget*retaddr *label254                        ...
  655:  call *label34 *invalid :meetTarget*retval                    ...
        label *label254                                              ...
  656:  write 0 processor2 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  657:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  658:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  659:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  660:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  661:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label256                                              CoreBuilder.mnd: do
  662:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  663:  set :flagUnits:firstUnit @unit                               ...
  664:  jump *label256 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  665:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label259                                              CoreBuilder.mnd: do
  666:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  667:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  668:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  669:  jump *label259 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  670:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  671:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  672:  set :lineUpUnits:firstUnit @unit                             ...
        label *label263                                              CoreBuilder.mnd: do
  673:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  674:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  675:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  676:  sensor *tmp312 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  677:  jump *label266 equal *tmp312 false                           ...
  678:  ucontrol stop 0 0 0 0 0                                      ...
        label *label266                                              ...
  679:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  680:  jump *label263 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  681:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)
        label *label22                                               Actions.mnd: void mineOre(ore)
  682:  write "Mining " processor2 ".status2"                        Actions.mnd: display.status2 = text;
  683:  write :mineOre.1:ore processor2 ".item2"                     Actions.mnd: display.item2 = item;
  684:  write "core" processor2 ".block2"                            Actions.mnd: display.block2 = block;
  685:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  686:  set :mineOre:amount 30                                       ...
  687:  set :mineOre:block .core                                     ...
  688:  setaddr :mineOre*retaddr *label271                           ...
  689:  call *label21 *invalid :mineOre*retval                       ...
        label *label271                                              ...
  690:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  691:  sensor *tmp316 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  692:  op min :transportStatus:target *tmp316 30                    ...
  693:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  694:  write :fetchBlock:item processor2 ".transportItem"           Actions.mnd: display.transportItem = item;
  695:  write "Fetching " processor2 ".status2"                      Actions.mnd: display.status2 = text;
  696:  write :fetchBlock:item processor2 ".item2"                   Actions.mnd: display.item2 = item;
  697:  write :fetchBlock:block processor2 ".block2"                 Actions.mnd: display.block2 = block;
  698:  sensor *tmp318 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  699:  sensor *tmp319 :fetchBlock:block @y                          ...
  700:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label562                                              Actions.mnd: do
  701:  sensor *tmp415 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  702:  jump *label563 equal *tmp415 null                            ...
  703:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label563                                              ...
  704:  ucontrol approach *tmp318 *tmp319 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  705:  ucontrol within *tmp318 *tmp319 6 *tmp418 0                  Actions.mnd: while !within(x, y, RADIUS);
  706:  jump *label562 equal *tmp418 false                           Actions.mnd: do
  707:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  708:  jump *label548 equal *tmp420 null                            ...
        label *label546                                              ...
  709:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  710:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  711:  jump *label546 notEqual *tmp420 null                         ...
        label *label548                                              ...
        label *label277                                              Actions.mnd: do
  712:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  713:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  714:  op notEqual *tmp321 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  715:  op notEqual *tmp322 :fetchBlock:unitItem :fetchBlock:item    ...
  716:  op land *tmp323 *tmp321 *tmp322                              ...
  717:  jump *label280 equal *tmp323 false                           ...
  718:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label280                                              Actions.mnd: if unitItem != null and unitItem != item then
  719:  sensor *tmp325 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  720:  op lessThan *tmp326 *tmp325 30                               ...
  721:  sensor *tmp327 :fetchBlock:block :fetchBlock:item            ...
  722:  op land *tmp328 *tmp326 *tmp327                              ...
  723:  jump *label277 notEqual *tmp328 false                        Actions.mnd: do
  724:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  725:  sensor *tmp422 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  726:  jump *label610 notEqual *tmp422 :fetchBlock:item             ...
  727:  sensor *tmp446 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  728:  sensor *tmp447 .core @y                                      ...
  729:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  730:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  731:  jump *label604 notEqual *tmp452 false                        ...
        label *label602                                              ...
  732:  ucontrol approach *tmp446 *tmp447 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  733:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  734:  jump *label602 equal *tmp452 false                           ...
        label *label604                                              ...
  735:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label607                                              Actions.mnd: do
  736:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  737:  sensor *tmp426 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  738:  op mul *tmp427 *tmp426 :depositItems:cap                     ...
  739:  sensor *tmp428 .core :fetchBlock:item                        ...
  740:  jump *label607 greaterThan *tmp427 *tmp428                   Actions.mnd: do
  741:  jump *label615 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label610                                              ...
  742:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  743:  jump *label614 equal *tmp430 null                            ...
        label *label612                                              ...
  744:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  745:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  746:  jump *label612 notEqual *tmp430 null                         ...
        label *label614                                              ...
        label *label615                                              Actions.mnd: if @unit.@firstItem == item then
  747:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  748:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  749:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  750:  write "Supplying " processor2 ".status2"                     Actions.mnd: display.status2 = text;
  751:  write :supplyBlock:ore processor2 ".item2"                   Actions.mnd: display.item2 = item;
  752:  write :supplyBlock:block processor2 ".block2"                Actions.mnd: display.block2 = block;
  753:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  754:  sensor *tmp330 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  755:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  756:  jump *label285 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  757:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  758:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  759:  set :mineOre:block :supplyBlock:block                        ...
  760:  setaddr :mineOre*retaddr *label287                           ...
  761:  call *label21 *invalid :mineOre*retval                       ...
        label *label287                                              ...
        label *label285                                              Actions.mnd: if missing > 0 then
  762:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  763:  read *tmp346 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  764:  op sub *tmp347 *tmp346 74                                    ...
  765:  lookup block :unpackCfg:type *tmp347                         ...
  766:  read *tmp350 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  767:  op sub *tmp351 *tmp350 74                                    ...
  768:  op div :unpackCfg:x *tmp351 2                                ...
  769:  read *tmp354 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  770:  op sub *tmp355 *tmp354 74                                    ...
  771:  op div :unpackCfg:y *tmp355 2                                ...
  772:  read *tmp358 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  773:  op sub :unpackCfg:rotation *tmp358 74                        ...
  774:  read *tmp361 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  775:  op sub :unpackCfg:ind *tmp361 74                             ...
  776:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  777:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  778:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  779:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  780:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  781:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  782:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  783:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label34                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  784:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  785:  op sign *tmp372 :meetTarget:lead 0                           ...
  786:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  787:  op sign *tmp372 :meetTarget:graphite 0                       ...
  788:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  789:  op sign *tmp372 :meetTarget:silicon 0                        ...
  790:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  791:  op sign *tmp372 :meetTarget:titanium 0                       ...
  792:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  793:  op sign *tmp372 :meetTarget:metaglass 0                      ...
  794:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  795:  op sign *tmp372 :meetTarget:thorium 0                        ...
  796:  op add :meetTarget:count :meetTarget:count *tmp372           ...
  797:  write :meetTarget:count processor2 ".totalTargets"           CoreBuilder.mnd: display.totalTargets = count;
  798:  write :meetTarget:block processor2 ".nextBlock"              CoreBuilder.mnd: display.nextBlock = block;
  799:  write :meetTarget:copper processor2 ".targetCopper"          CoreBuilder.mnd: display.targetCopper = copper;
  800:  write :meetTarget:lead processor2 ".targetLead"              CoreBuilder.mnd: display.targetLead = lead;
  801:  write :meetTarget:graphite processor2 ".targetGraphite"      CoreBuilder.mnd: display.targetGraphite = graphite;
  802:  write :meetTarget:silicon processor2 ".targetSilicon"        CoreBuilder.mnd: display.targetSilicon = silicon;
  803:  write :meetTarget:titanium processor2 ".targetTitanium"      CoreBuilder.mnd: display.targetTitanium = titanium;
  804:  write :meetTarget:metaglass processor2 ".targetMetaglass"    CoreBuilder.mnd: display.targetMetaglass = metaglass;
  805:  write :meetTarget:thorium processor2 ".targetThorium"        CoreBuilder.mnd: display.targetThorium = thorium;
  806:  set copper :meetTarget:copper                                CoreBuilder.mnd: targetCopper = copper;
  807:  op add lead :meetTarget:lead .leadSurplus                    CoreBuilder.mnd: targetLead = lead + leadSurplus;
  808:  set graphite :meetTarget:graphite                            CoreBuilder.mnd: targetGraphite = graphite;
  809:  set silicon :meetTarget:silicon                              CoreBuilder.mnd: targetSilicon = silicon;
  810:  set titanium :meetTarget:titanium                            CoreBuilder.mnd: targetTitanium = titanium;
  811:  set metaglass :meetTarget:metaglass                          CoreBuilder.mnd: targetMetaglass = metaglass;
  812:  set thorium :meetTarget:thorium                              CoreBuilder.mnd: targetThorium = thorium;
  813:  op add *tmp374 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  814:  write *tmp374 .controller ".pressTarget"                     ...
  815:  op add *tmp375 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  816:  write *tmp375 .controller ".smelterTarget"                   ...
  817:  op add *tmp376 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  818:  write *tmp376 .controller ".kilnTarget"                      ...
  819:  write lead .controller ".leadReserve"                        CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  820:  op sign *tmp378 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  821:  op mul *tmp379 *tmp378 20                                    ...
  822:  op add *tmp380 :meetTarget:silicon *tmp379                   ...
  823:  write *tmp380 .controller ".siliconReserve"                  ...
  824:  op sign *tmp381 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  825:  op mul *tmp382 *tmp381 20                                    ...
  826:  op add *tmp383 :meetTarget:graphite *tmp382                  ...
  827:  write *tmp383 .controller ".graphiteReserve"                 ...
  828:  write lead processor7 ".leadTarget"                          CoreBuilder.mnd: monoController.leadTarget = targetLead;
  829:  write :meetTarget:copper processor7 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
  830:  sensor *tmp385 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  831:  jump *label315 greaterThanEq *tmp385 :meetTarget:copper      ...
  832:  set *tmp384 false                                            ...
  833:  jump *label314 always 0 0                                    ...
        label *label315                                              ...
  834:  sensor *tmp388 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  835:  jump *label317 greaterThanEq *tmp388 lead                    ...
  836:  set *tmp384 false                                            ...
  837:  jump *label314 always 0 0                                    ...
        label *label317                                              ...
  838:  sensor *tmp391 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  839:  jump *label319 greaterThanEq *tmp391 :meetTarget:graphite    ...
  840:  set *tmp384 false                                            ...
  841:  jump *label314 always 0 0                                    ...
        label *label319                                              ...
  842:  sensor *tmp394 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  843:  jump *label321 greaterThanEq *tmp394 :meetTarget:silicon     ...
  844:  set *tmp384 false                                            ...
  845:  jump *label314 always 0 0                                    ...
        label *label321                                              ...
  846:  sensor *tmp397 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  847:  jump *label323 greaterThanEq *tmp397 :meetTarget:titanium    ...
  848:  set *tmp384 false                                            ...
  849:  jump *label314 always 0 0                                    ...
        label *label323                                              ...
  850:  sensor *tmp400 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  851:  jump *label325 greaterThanEq *tmp400 :meetTarget:metaglass   ...
  852:  set *tmp384 false                                            ...
  853:  jump *label314 always 0 0                                    ...
        label *label325                                              ...
  854:  sensor *tmp403 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  855:  jump *label327 greaterThanEq *tmp403 :meetTarget:thorium     ...
  856:  set *tmp384 false                                            ...
  857:  jump *label314 always 0 0                                    ...
        label *label327                                              ...
  858:  set *tmp384 true                                             CoreBuilder.mnd: return true;
  859:  jump *label314 always 0 0                                    ...
        label *label314                                              CoreBuilder.mnd: while !targetMet() do
  860:  jump *label313 notEqual *tmp384 false                        ...
        label *label676                                              ...
  861:  setaddr :supplyBase*retaddr *label329                        CoreBuilder.mnd: supplyBase();
  862:  call *label33 *invalid :supplyBase*retval                    ...
        label *label329                                              ...
  863:  sensor *tmp385 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  864:  jump *label677 greaterThanEq *tmp385 copper                  ...
  865:  set *tmp384 false                                            ...
  866:  jump *label691 always 0 0                                    ...
        label *label677                                              ...
  867:  sensor *tmp388 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  868:  jump *label679 greaterThanEq *tmp388 lead                    ...
  869:  set *tmp384 false                                            ...
  870:  jump *label691 always 0 0                                    ...
        label *label679                                              ...
  871:  sensor *tmp391 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  872:  jump *label681 greaterThanEq *tmp391 graphite                ...
  873:  set *tmp384 false                                            ...
  874:  jump *label691 always 0 0                                    ...
        label *label681                                              ...
  875:  sensor *tmp394 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  876:  jump *label683 greaterThanEq *tmp394 silicon                 ...
  877:  set *tmp384 false                                            ...
  878:  jump *label691 always 0 0                                    ...
        label *label683                                              ...
  879:  sensor *tmp397 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  880:  jump *label685 greaterThanEq *tmp397 titanium                ...
  881:  set *tmp384 false                                            ...
  882:  jump *label691 always 0 0                                    ...
        label *label685                                              ...
  883:  sensor *tmp400 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  884:  jump *label687 greaterThanEq *tmp400 metaglass               ...
  885:  set *tmp384 false                                            ...
  886:  jump *label691 always 0 0                                    ...
        label *label687                                              ...
  887:  sensor *tmp403 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  888:  jump *label689 greaterThanEq *tmp403 thorium                 ...
  889:  set *tmp384 false                                            ...
  890:  jump *label691 always 0 0                                    ...
        label *label689                                              ...
  891:  set *tmp384 true                                             CoreBuilder.mnd: return true;
  892:  jump *label691 always 0 0                                    ...
        label *label691                                              CoreBuilder.mnd: while !targetMet() do
  893:  jump *label676 equal *tmp384 false                           ...
        label *label313                                              ...
  894:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label35                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  895:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  896:  set :meetTarget:copper :buildBlock:copper                    ...
  897:  set :meetTarget:lead :buildBlock:lead                        ...
  898:  set :meetTarget:graphite :buildBlock:graphite                ...
  899:  set :meetTarget:silicon :buildBlock:silicon                  ...
  900:  set :meetTarget:titanium :buildBlock:titanium                ...
  901:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  902:  set :meetTarget:thorium :buildBlock:thorium                  ...
  903:  setaddr :meetTarget*retaddr *label331                        ...
  904:  call *label34 *invalid :meetTarget*retval                    ...
        label *label331                                              ...
  905:  write :buildBlock:block processor5 ":buildBlockAt:block"     CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  906:  write :buildBlock:x processor5 ":buildBlockAt:x"             ...
  907:  write :buildBlock:y processor5 ":buildBlockAt:y"             ...
  908:  write :buildBlock:rotation processor5 ":buildBlockAt:rotatio ...
  909:  write :buildBlock:config processor5 ":buildBlockAt:config"   ...
  910:  write :buildBlock:index processor5 ":buildBlockAt:index"     ...
  911:  write false processor5 ":buildBlockAt*finished"              ...
  912:  write 1 processor5 "@counter"                                ...
        label *label332                                              ...
  913:  wait 1e-15                                                   ...
  914:  read *tmp413 processor5 ":buildBlockAt*finished"             ...
  915:  jump *label332 equal *tmp413 false                           ...
  916:  read :buildBlock*retval processor5 ":buildBlockAt*retval"    ...
  917:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  918:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  919:  write :mineOre:amount processor2 ".transportTarget"          Actions.mnd: display.transportTarget = target;
  920:  write :mineOre:ore processor2 ".transportItem"               Actions.mnd: display.transportItem = item;
  921:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  922:  jump *label509 notEqual *tmp448 false                        ...
  923:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  924:  stop                                                         Actions.mnd: stopProcessor();
        label *label509                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  925:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label571                                              Actions.mnd: do
  926:  sensor *tmp415 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  927:  jump *label572 equal *tmp415 null                            ...
  928:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label572                                              ...
  929:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  930:  ucontrol within :locateOre:x :locateOre:y 6 *tmp418 0        Actions.mnd: while !within(x, y, RADIUS);
  931:  jump *label571 equal *tmp418 false                           Actions.mnd: do
  932:  sensor *tmp433 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  933:  jump *label362 equal *tmp433 :mineOre:ore                    ...
  934:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  935:  jump *label587 equal *tmp420 null                            ...
        label *label585                                              ...
  936:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  937:  sensor *tmp420 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  938:  jump *label585 notEqual *tmp420 null                         ...
        label *label587                                              ...
        label *label362                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  939:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  940:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label366                                              Actions.mnd: do
  941:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  942:  op notEqual *tmp438 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  943:  op notEqual *tmp439 :mineOre:item :mineOre:ore               ...
  944:  op land *tmp440 *tmp438 *tmp439                              ...
  945:  jump *label368 notEqual *tmp440 false                        ...
  946:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  947:  jump *label368 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  948:  sensor *tmp444 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  949:  jump *label366 lessThan *tmp444 :mineOre:amount              Actions.mnd: do
        label *label368                                              ...
  950:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  951:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  952:  sensor *tmp422 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  953:  jump *label660 notEqual *tmp422 :mineOre:ore                 ...
  954:  sensor *tmp446 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  955:  sensor *tmp447 :mineOre:block @y                             ...
  956:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  957:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  958:  jump *label654 notEqual *tmp452 false                        ...
        label *label652                                              ...
  959:  ucontrol approach *tmp446 *tmp447 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  960:  ucontrol within *tmp446 *tmp447 6 *tmp452 0                  Actions.mnd: while !within(x, y, radius) do
  961:  jump *label652 equal *tmp452 false                           ...
        label *label654                                              ...
  962:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label657                                              Actions.mnd: do
  963:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  964:  sensor *tmp426 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  965:  op mul *tmp427 *tmp426 :depositItems:cap                     ...
  966:  sensor *tmp428 :mineOre:block :mineOre:ore                   ...
  967:  jump *label657 greaterThan *tmp427 *tmp428                   Actions.mnd: do
  968:  jump *label665 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label660                                              ...
  969:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  970:  jump *label664 equal *tmp430 null                            ...
        label *label662                                              ...
  971:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  972:  sensor *tmp430 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  973:  jump *label662 notEqual *tmp430 null                         ...
        label *label664                                              ...
        label *label665                                              Actions.mnd: if @unit.@firstItem == item then
  974:  write 0 processor2 ".transportTarget"                        Actions.mnd: display.transportTarget = target;
  975:  write null processor2 ".transportItem"                       Actions.mnd: display.transportItem = item;
  976:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 738 ms, compiled in 490 ms, optimized in 7,210 ms, run in 3 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (2 steps):
The program didn't generate any output.
Execution exception at instruction 1: read *tmp33 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
