  1403 instructions before optimizations.
    81 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   107 instructions eliminated by Dead Code Elimination (10 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   158 instructions eliminated by Data Flow Optimization (22 passes, 74 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (31 iterations).
     1 loops unrolled by Loop Unrolling.
    32 instructions added by Function Inlining (31 iterations).
    45 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     3 calls threaded by Jump Threading.
    20 instructions eliminated by Unreachable Code Elimination (2 iterations).
   974 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
  * Unroll iteration loop at CoreBuilder.mnd:182:5               size   -13, benefit     1161.0, efficiency   Infinity (-11 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4396.9, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      600.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +181, benefit      301.0, efficiency      1.663
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5662.5, efficiency    377.500
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5662.5, efficiency    125.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    14191.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2831.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:444:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:143:5                size    +0, benefit     2100.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      600.0, efficiency     19.355
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:138:5                size    +0, benefit     1050.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:75:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:83:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:87:17                size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:95:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:106:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit       32.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       16.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:132:9                size    +0, benefit      525.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:323:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      600.0, efficiency     75.000
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      600.0, efficiency     26.087
  ! Inline function call at CoreBuilder.mnd:212:9                size  +159, benefit     3225.0, efficiency     20.283
  ! Inline function call at CoreBuilder.mnd:219:5                size   +91, benefit      259.0, efficiency      2.846
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4954.7, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4954.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2831.3, efficiency    471.875
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2062.5, efficiency    257.813
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1804.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2062.5, efficiency     89.674
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3185.2, efficiency    455.022
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2477.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4396.9, efficiency   Infinity (-29 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      600.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5662.5, efficiency    377.500
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5662.5, efficiency    125.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    14191.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2831.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:444:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:143:5                size    +0, benefit     2100.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      600.0, efficiency     19.355
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:138:5                size    +0, benefit     1050.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:75:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:83:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:87:17                size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:95:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:106:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit       32.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       16.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:132:9                size    +0, benefit      525.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      600.0, efficiency     75.000
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      600.0, efficiency     26.087
  ! Inline function call at CoreBuilder.mnd:212:9                size  +159, benefit     3225.0, efficiency     20.283
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4954.7, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4954.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2831.3, efficiency    471.875
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2062.5, efficiency    257.813
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1804.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2062.5, efficiency     89.674
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3185.2, efficiency    455.022
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2477.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      600.0, efficiency   Infinity (-6 instructions)
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5662.5, efficiency    377.500
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5662.5, efficiency    125.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    14191.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2831.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:444:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
  ! Inline function call at CoreBuilder.mnd:149:13               size   +31, benefit      600.0, efficiency     19.355
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      600.0, efficiency     75.000
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      600.0, efficiency     26.087
  ! Inline function call at CoreBuilder.mnd:212:9                size  +133, benefit     3225.0, efficiency     24.248
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4954.7, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4954.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2831.3, efficiency    471.875
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2062.5, efficiency    257.813
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1804.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2062.5, efficiency     89.674
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3185.2, efficiency    455.022
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2477.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 6):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5662.5, efficiency    377.500
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5662.5, efficiency    125.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    14191.4, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2831.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      600.0, efficiency     75.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      600.0, efficiency     26.087
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
  ! Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
  ! Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
  ! Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4954.7, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4954.7, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2831.3, efficiency    471.875
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2062.5, efficiency    257.813
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1804.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2062.5, efficiency     89.674
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3185.2, efficiency    455.022
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2477.3, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     5662.5, efficiency    138.110
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2320.3, efficiency     68.244
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2831.3, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +21, benefit      600.0, efficiency     28.571
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +21, benefit     3000.0, efficiency    142.857
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      632.8, efficiency     18.080
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2831.3, efficiency    471.875
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
  ! Inline function call at Actions.mnd:124:5                    size   +21, benefit     2062.5, efficiency     98.214
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3185.2, efficiency    637.031
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344

Pass 1: speed optimization selection (cost limit 23):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2320.3, efficiency     68.244
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2320.3, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      632.8, efficiency     18.080
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3185.2, efficiency    637.031
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2320.3, efficiency    580.078
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344

Pass 1: speed optimization selection (cost limit 28):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3185.2, efficiency   Infinity (-8 instructions)
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
  ! Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3185.2, efficiency    637.031
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 36):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    28945.3, efficiency  28945.313 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3473.4, efficiency    694.688
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      450.0, efficiency    150.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      773.4, efficiency    257.813
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 35):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    17695.3, efficiency  17695.313 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 34):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    17695.3, efficiency  17695.313 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     5662.5, efficiency    115.561
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +25, benefit      600.0, efficiency     24.000
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     3000.0, efficiency    120.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     2062.5, efficiency     82.500

Pass 1: speed optimization selection (cost limit 33):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    11325.0, efficiency   5662.500
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     5662.5, efficiency    111.029
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +26, benefit      600.0, efficiency     23.077
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     3000.0, efficiency    115.385
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     5662.5, efficiency   5662.500 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     2062.5, efficiency     79.327

Pass 1: speed optimization selection (cost limit 35):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     5662.5, efficiency   5662.500 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      600.0, efficiency    600.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2062.5, efficiency   2062.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 42):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     3000.0, efficiency     96.774
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     7003.1, efficiency   1400.625
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2320.3, efficiency     66.295
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:444:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +32, benefit     2400.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +32, benefit      600.0, efficiency     18.750
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      632.8, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:212:9                size  +160, benefit     3225.0, efficiency     20.156
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 44):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1125.0, efficiency     22.059
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     3628.1, efficiency   1209.375 (-11 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2320.3, efficiency     66.295
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:444:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +13, benefit      600.0, efficiency     46.154
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      675.0, efficiency    337.500
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:139:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:76:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:84:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:88:17                size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:96:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:128:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      600.0, efficiency     20.000
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1265.6, efficiency    632.813
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      632.8, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:212:9                size  +160, benefit     3225.0, efficiency     20.156
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      905.8, efficiency    905.844 (-8 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2320.3, efficiency     66.295
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:255:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      600.0, efficiency     20.000
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      632.8, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3225.0, efficiency     20.411
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      902.3, efficiency    902.344
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3473.4, efficiency    496.205
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2320.3, efficiency     70.313
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +30, benefit      600.0, efficiency     20.000
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1687.5, efficiency     49.632
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
  * Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500 (+3 instructions)
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      632.8, efficiency     18.612
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3225.0, efficiency     20.411
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5662.5, efficiency    514.773 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1223.4, efficiency    407.813
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2320.3, efficiency     70.313
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      600.0, efficiency    100.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +33, benefit      600.0, efficiency     18.182
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1687.5, efficiency     49.632
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      632.8, efficiency     18.612
  ! Inline function call at CoreBuilder.mnd:212:9                size  +158, benefit     3225.0, efficiency     20.411
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2062.5, efficiency    343.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     3000.0, efficiency     85.714
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1223.4, efficiency    407.813 (-3 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2320.3, efficiency     64.453
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      450.0, efficiency    112.500
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2400.0, efficiency     66.667
    Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      600.0, efficiency     16.667
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      632.8, efficiency     17.103
  ! Inline function call at CoreBuilder.mnd:212:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      773.4, efficiency    193.359
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 63):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     3000.0, efficiency     85.714
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2320.3, efficiency     62.711
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:444:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2400.0, efficiency     66.667
  * Inline function call at CoreBuilder.mnd:139:5                size    +7, benefit     1050.0, efficiency    150.000 (+5 instructions)
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      600.0, efficiency     16.667
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1687.5, efficiency     44.408
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      632.8, efficiency     16.653
  ! Inline function call at CoreBuilder.mnd:212:9                size  +164, benefit     3225.0, efficiency     19.665
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 58):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     3000.0, efficiency     85.714
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5662.5, efficiency    120.479
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3670.3, efficiency     48.938
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:444:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
    Inline function call at CoreBuilder.mnd:152:5                size   +36, benefit     2400.0, efficiency     66.667
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1350.0, efficiency     35.526
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:133:9                size   +36, benefit      600.0, efficiency     16.667
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1687.5, efficiency     44.408
  * Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000 (+21 instructions)
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      632.8, efficiency     16.653
  ! Inline function call at CoreBuilder.mnd:212:9                size  +169, benefit     3225.0, efficiency     19.083
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 37):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2662.5, efficiency    115.761 (+15 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3670.3, efficiency     48.938
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:444:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      600.0, efficiency     25.000
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1350.0, efficiency     35.526
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
    Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1687.5, efficiency     44.408
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      632.8, efficiency     16.653
  ! Inline function call at CoreBuilder.mnd:212:9                size  +169, benefit     3225.0, efficiency     19.083
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2062.5, efficiency     85.938

Pass 1: speed optimization selection (cost limit 22):
    Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1125.0, efficiency     26.163
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3670.3, efficiency     31.370
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +190, benefit       75.0, efficiency      0.395
  ! Inline function call at CoreBuilder.mnd:444:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at CoreBuilder.mnd:147:13               size   +11, benefit      600.0, efficiency     54.545 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
    Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
    Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +190, benefit     3225.0, efficiency     16.974
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 12):
  * Replicate loop condition at CoreBuilder.mnd:438:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4007.8, efficiency     22.772
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:444:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3225.0, efficiency     16.125
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 11):
  * Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4007.8, efficiency     22.772
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:444:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3225.0, efficiency     16.125
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 10):
  * Replicate loop condition at CoreBuilder.mnd:462:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4007.8, efficiency     22.772
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:444:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3225.0, efficiency     16.125
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 9):
  * Replicate loop condition at CoreBuilder.mnd:473:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4007.8, efficiency     22.772
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:444:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3225.0, efficiency     16.125
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 8):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4007.8, efficiency     22.772
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:444:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
  * Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit      131.3, efficiency     18.750 (+5 instructions)
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +200, benefit     3225.0, efficiency     16.125
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 1: speed optimization selection (cost limit 3):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      131.3, efficiency      4.861
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4176.6, efficiency     17.773
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:444:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:466:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:240:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:323:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +205, benefit     3225.0, efficiency     15.732
  ! Inline function call at CoreBuilder.mnd:219:5                size   +81, benefit      259.0, efficiency      3.198

Pass 2: speed optimization selection (cost limit 10):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      131.3, efficiency      4.861
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4176.6, efficiency     17.773
    Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:444:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:466:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  * Inline function call at CoreBuilder.mnd:513:9                size    +9, benefit      100.0, efficiency     11.111 (+7 instructions)
    Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:240:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:323:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +202, benefit     3225.0, efficiency     15.965
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      259.0, efficiency      3.238

Pass 2: speed optimization selection (cost limit 3):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +17, benefit      300.0, efficiency     17.647
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      131.3, efficiency      4.861
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4176.6, efficiency     17.773
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:444:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:466:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:240:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:323:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +202, benefit     3225.0, efficiency     15.965
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      259.0, efficiency      3.238

Pass 3: speed optimization selection (cost limit 3):
  ! Replicate loop condition at CoreBuilder.mnd:211:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:223:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:233:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:239:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:243:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:322:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:520:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:534:1 size   +17, benefit      300.0, efficiency     17.647
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      131.3, efficiency      4.861
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +51, benefit      362.5, efficiency      7.108
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:179:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:218:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4176.6, efficiency     17.773
  ! Inline function call at CoreBuilder.mnd:341:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:342:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:343:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:344:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:348:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:349:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:250:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:352:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:353:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:354:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:370:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:371:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:373:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:388:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:399:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:405:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:408:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:410:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:432:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:436:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:439:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:444:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:281:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:291:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:292:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:293:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:294:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:463:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:466:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:467:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:306:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:474:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:507:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:508:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:509:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:510:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:514:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:515:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:516:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      337.5, efficiency      5.720
  ! Inline function call at CoreBuilder.mnd:152:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:76:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:84:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:88:17                size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:96:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       65.6, efficiency      9.375
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit       32.8, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:119:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:128:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:133:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:226:9                size   +26, benefit       34.0, efficiency      1.308
  ! Inline function call at CoreBuilder.mnd:227:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:235:5                size   +26, benefit      313.5, efficiency     12.058
  ! Inline function call at CoreBuilder.mnd:236:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:240:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:245:5                size   +26, benefit       15.0, efficiency      0.577
  ! Inline function call at CoreBuilder.mnd:246:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:323:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      632.8, efficiency     10.726
  ! Inline function call at CoreBuilder.mnd:212:9                size  +202, benefit     3225.0, efficiency     15.965
  ! Inline function call at CoreBuilder.mnd:219:5                size   +80, benefit      259.0, efficiency      3.238

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-78 instructions):
 
    47 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    48 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    49 label *label49
-    * set *tmp138 :buildBlockFromCfg.1*retval
    50 set :buildBlockFromCfg.1:cfg "|2:KA22222235"
    51 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    52 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
 
    64 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    65 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    66 label *label52
-    * set *tmp141 :buildBlockFromCfg.1*retval
    67 set :buildFirstTitaniumDrill:cfg "22D2<2222248"
    68 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    69 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
 
    95 setaddr :error*retaddr *label58 (h:*label58)
    96 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    97 label *label58
-    * set *tmp156 null
    98 jump *label57 always
    99 label *label56
-    * set *tmp156 null
   100 label *label57
   101 write @pneumatic-drill .display ".nextBlock"
   102 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   124 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   125 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   126 label *label61
-    * set *tmp162 :buildBlockFromCfg.1*retval
   127 set :buildBlockFromCfg.1:cfg "f28642222223;"
   128 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   129 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
   130 label *label62
-    * set *tmp163 :buildBlockFromCfg.1*retval
   131 set .graphiteSurplus 100
   132 set :buildBlockFromCfg:cfg "½8:d2d22223<"
   133 set :buildBlockFromCfg:config processor2
 
   149 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   150 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   151 label *label64
-    * set *tmp165 :buildBlockFromCfg.1*retval
   152 set :buildBlockFromCfg.1:cfg ".2222PK2223>"
   153 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   154 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
 
   187 op lessThan *tmp169 *tmp168 300
   188 jump *label74 equal *tmp169 false
   189 jump *label72 always
-    * set *tmp170 null
   190 jump *label75 always
   191 label *label74
-    * set *tmp170 null
   192 label *label75
   193 label *label71
   194 read *tmp101 .controller ".monos"
 
   200 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   201 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   202 label *label76
-    * set *tmp172 :buildBlockFromCfg.1*retval
   203 set :buildBlockFromCfg.1:cfg "c62442222223A"
   204 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   205 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   206 label *label77
-    * set *tmp173 :buildBlockFromCfg.1*retval
   207 set :buildBlockFromCfg.1:cfg "675nPP222224B"
   208 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   209 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   215 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   216 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   217 label *label79
-    * set *tmp175 :buildBlockFromCfg.1*retval
   218 set :buildBlockFromCfg.1:cfg "f,2642222223D"
   219 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   220 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   221 label *label80
-    * set *tmp176 :buildBlockFromCfg.1*retval
   222 set :buildBlockFromCfg.1:cfg "f*2642222223E"
   223 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   224 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   225 label *label81
-    * set *tmp177 :buildBlockFromCfg.1*retval
   226 set :buildBlockFromCfg.1:cfg "~)5UZKP22224F"
   227 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   228 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
 
   252 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   253 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   254 label *label86
-    * set *tmp182 :buildBlockFromCfg.1*retval
   255 set :buildBlockFromCfg.1:cfg "¨2(úª222225K"
   256 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   257 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
 
   264 setaddr :buildBlockFromCfg.1*retaddr *label88 (h:*label88)
   265 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label88) (h:*label88)
   266 label *label88
-    * set *tmp184 :buildBlockFromCfg.1*retval
   267 setaddr :buildUnits*retaddr *label89 (h:*label89)
   268 call *label40 *invalid :buildUnits*retval (m:*label89) (h:*label89)
   269 label *label89
 
   283 setaddr :buildBlockFromCfg.1*retaddr *label92 (h:*label92)
   284 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label92) (h:*label92)
   285 label *label92
-    * set *tmp186 :buildBlockFromCfg.1*retval
   286 set :buildBlockFromCfg.1:cfg "c80442222223R"
   287 setaddr :buildBlockFromCfg.1*retaddr *label93 (h:*label93)
   288 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label93) (h:*label93)
   289 label *label93
-    * set *tmp187 :buildBlockFromCfg.1*retval
   290 set :buildBlockFromCfg:cfg "88222PK2223S"
   291 set :buildBlockFromCfg:config @sand
   292 setaddr :buildBlockFromCfg*retaddr *label94 (h:*label94)
   293 call *label37 *invalid :buildBlockFromCfg*retval (m:*label94) (h:*label94)
   294 label *label94
-    * set *tmp188 :buildBlockFromCfg*retval
   295 setaddr :buildUnits*retaddr *label95 (h:*label95)
   296 call *label40 *invalid :buildUnits*retval (m:*label95) (h:*label95)
   297 label *label95
 
   377 setaddr :error*retaddr *label114 (h:*label114)
   378 call *label13 *invalid :error*retval (m:*label114) (h:*label114)
   379 label *label114
-    * set *tmp213 null
   380 jump *label113 always
   381 label *label112
-    * set *tmp213 null
   382 label *label113
   383 write @laser-drill .blockBuilder ":buildBlockAt:block"
   384 read *tmp56 .oreLocator ".drillX"
 
   404 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   405 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   406 label *label116
-    * set *tmp222 :buildRemoteBlock*retval
   407 set :buildRemoteBlock:cfg ")9PPP22P224C"
   408 read *tmp62 .oreLocator ".water2X"
   409 set :buildRemoteBlock:x *tmp62
 
   412 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   413 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   414 label *label117
-    * set *tmp223 :buildRemoteBlock*retval
   415 set :buildRemoteBlock:cfg "~)5UZKP22224F"
   416 read *tmp64 .oreLocator ".generatorX"
   417 set :buildRemoteBlock:x *tmp64
 
   430 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   431 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   432 label *label119
-    * set *tmp225 :buildRemoteBlock*retval
   433 set :buildRemoteBlock:cfg "v0,482222223="
   434 read *tmp68 .oreLocator ".node2X"
   435 set :buildRemoteBlock:x *tmp68
 
   438 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   439 call *label36 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   440 label *label120
-    * set *tmp226 :buildRemoteBlock*retval
   441 set :buildRemoteBlock:cfg "222<2:22223N"
   442 read *tmp70 .oreLocator ".panelX"
   443 set :buildRemoteBlock:x *tmp70
 
   446 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   447 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   448 label *label121
-    * set *tmp227 :buildRemoteBlock*retval
   449 set :buildRemoteBlock:cfg "z2<7F22222233"
   450 read *tmp72 .oreLocator ".batteryX"
   451 set :buildRemoteBlock:x *tmp72
 
   469 op equal *tmp230 .thoriumContainer null
   470 jump *label124 equal *tmp230 false
   471 set .thoriumContainer .thoriumDrill
-    * set *tmp231 .thoriumContainer
   472 jump *label125 always
   473 label *label124
-    * set *tmp231 null
   474 label *label125
   475 write .thoriumDrill .display ".thoriumDrill"
   476 write .thoriumContainer .display ".thoriumContainer"
 
   508 setaddr :buildBlockFromCfg.1*retaddr *label133 (h:*label133)
   509 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label133) (h:*label133)
   510 label *label133
-    * set *tmp236 :buildBlockFromCfg.1*retval
   511 set :buildBlockFromCfg.1:cfg "©:*2ʼ2ǴƐ2ʼ27V"
   512 setaddr :buildBlockFromCfg.1*retaddr *label135 (h:*label135)
   513 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label135) (h:*label135)
 
   619 label *label164
   620 set *tmp256 null
   621 label *label162
-    * set *tmp253 *tmp256
   622 jump *label160 always
   623 label *label159
-    * set *tmp253 null
   624 label *label160
   625 set :fetchBlock:block .thoriumContainer
   626 set :fetchBlock:item @thorium
 
   628 call *label23 *invalid :fetchBlock*retval (m:*label165) (h:*label165)
   629 label *label165
   630 label *label157
-    * set *tmp250 null
   631 jump *label156 always
   632 label *label155
   633 read *tmp101 .controller ".monos"
 
   669 label *label176
   670 set *tmp266 null
   671 label *label177
-    * set *tmp263 *tmp266
   672 jump *label175 always
   673 label *label174
-    * set *tmp263 null
   674 label *label175
   675 sensor *tmp267 .core @silicon
   676 op lessThan *tmp268 *tmp267 .targetSilicon
 
   711 label *label187
   712 set *tmp272 *tmp275
   713 label *label183
-    * set *tmp269 *tmp272
   714 jump *label181 always
   715 label *label180
-    * set *tmp269 null
   716 label *label181
   717 sensor *tmp276 .battery @totalPower
   718 op lessThan *tmp277 *tmp276 .powerTarget
 
   740 label *label190
   741 set *tmp278 null
   742 label *label191
-    * set *tmp260 *tmp278
   743 jump *label173 always
   744 label *label172
-    * set *tmp260 null
   745 label *label173
   746 sensor *tmp282 .core @titanium
   747 op lessThan *tmp283 *tmp282 .targetTitanium
 
   878 label *label200
   879 set *tmp292 null
   880 label *label201
-    * set *tmp290 *tmp292
   881 jump *label199 always
   882 label *label198
   883 set :status1:text "Goal 11: Fetching titanium"
 
   889 setaddr :fetchBlock*retaddr *label229 (h:*label229)
   890 call *label23 *invalid :fetchBlock*retval (m:*label229) (h:*label229)
   891 label *label229
-    * set *tmp290 null
   892 label *label199
   893 label *label171
   894 set *tmp258 null
   895 label *label167
-    * set *tmp250 *tmp258
   896 label *label156
   897 label *label154
   898 return :supplyBase*retaddr
 
   933 label *label234
   934 set :buildRemoteBlock*retval :buildBlock*retval
   935 jump *label230 always
-    * set *tmp319 null
   936 jump *label232 always
   937 label *label231
-    * set *tmp319 null
   938 label *label232
   939 set :buildRemoteBlock*retval false
   940 jump *label230 always
 
  1073 sensor *tmp327 @unit @mining
  1074 jump *label256 equal *tmp327 false
  1075 ucontrol stop
-    * set *tmp328 null
  1076 jump *label257 always
  1077 label *label256
-    * set *tmp328 null
  1078 label *label257
  1079 ubind :lineUpUnits:unit
  1080 label *label254
 
  1139 op land *tmp338 *tmp336 *tmp337
  1140 jump *label270 equal *tmp338 false
  1141 ucontrol itemDrop @air 1000
-    * set *tmp339 null
  1142 jump *label271 always
  1143 label *label270
-    * set *tmp339 null
  1144 label *label271
  1145 label *label268
  1146 sensor *tmp340 @unit :fetchBlock:item
 
  1177 setaddr :mineOre*retaddr *label277 (h:*label277)
  1178 call *label21 *invalid :mineOre*retval (m:*label277) (h:*label277)
  1179 label *label277
-    * set *tmp348 null
  1180 jump *label276 always
  1181 label *label275
-    * set *tmp348 null
  1182 label *label276
  1183 label *label273
  1184 return :supplyBlock*retaddr
 
  1214 op land *tmp354 *tmp352 *tmp353
  1215 jump *label286 equal *tmp354 false
  1216 ucontrol itemDrop @air 1000
-    * set *tmp355 null
  1217 jump *label287 always
  1218 label *label286
-    * set *tmp355 null
  1219 label *label287
  1220 label *label284
  1221 sensor *tmp356 @unit :supplyBlockFromCore:item
 
  1296 op add :unpackCfg:index :unpackCfg:index 1
  1297 read *tmp397 :unpackCfg:cfg *tmp396
  1298 op sub *tmp398 *tmp397 50
-    * set :unpackCfg:size *tmp398
  1299 set *tmp399 :unpackCfg:index
  1300 op add :unpackCfg:index :unpackCfg:index 1
  1301 read *tmp400 :unpackCfg:cfg *tmp399
 
  1381 jump *label305 equal *tmp418 false
  1382 set *tmp416 false
  1383 jump *label304 always
-    * set *tmp419 null
  1384 jump *label306 always
  1385 label *label305
-    * set *tmp419 null
  1386 label *label306
  1387 sensor *tmp420 .core @lead
  1388 op lessThan *tmp421 *tmp420 .targetLead
  1389 jump *label307 equal *tmp421 false
  1390 set *tmp416 false
  1391 jump *label304 always
-    * set *tmp422 null
  1392 jump *label308 always
  1393 label *label307
-    * set *tmp422 null
  1394 label *label308
  1395 sensor *tmp423 .core @graphite
  1396 op lessThan *tmp424 *tmp423 .targetGraphite
  1397 jump *label309 equal *tmp424 false
  1398 set *tmp416 false
  1399 jump *label304 always
-    * set *tmp425 null
  1400 jump *label310 always
  1401 label *label309
-    * set *tmp425 null
  1402 label *label310
  1403 sensor *tmp426 .core @silicon
  1404 op lessThan *tmp427 *tmp426 .targetSilicon
  1405 jump *label311 equal *tmp427 false
  1406 set *tmp416 false
  1407 jump *label304 always
-    * set *tmp428 null
  1408 jump *label312 always
  1409 label *label311
-    * set *tmp428 null
  1410 label *label312
  1411 sensor *tmp429 .core @titanium
  1412 op lessThan *tmp430 *tmp429 .targetTitanium
  1413 jump *label313 equal *tmp430 false
  1414 set *tmp416 false
  1415 jump *label304 always
-    * set *tmp431 null
  1416 jump *label314 always
  1417 label *label313
-    * set *tmp431 null
  1418 label *label314
  1419 sensor *tmp432 .core @metaglass
  1420 op lessThan *tmp433 *tmp432 .targetMetaglass
  1421 jump *label315 equal *tmp433 false
  1422 set *tmp416 false
  1423 jump *label304 always
-    * set *tmp434 null
  1424 jump *label316 always
  1425 label *label315
-    * set *tmp434 null
  1426 label *label316
  1427 sensor *tmp435 .core @thorium
  1428 op lessThan *tmp436 *tmp435 .targetThorium
  1429 jump *label317 equal *tmp436 false
  1430 set *tmp416 false
  1431 jump *label304 always
-    * set *tmp437 null
  1432 jump *label318 always
  1433 label *label317
-    * set *tmp437 null
  1434 label *label318
  1435 set *tmp416 true
  1436 jump *label304 always
 
  1501 op notEqual *tmp448 *tmp447 null
  1502 jump *label330 equal *tmp448 false
  1503 ucontrol itemDrop @air 1000
-    * set *tmp449 null
  1504 jump *label331 always
  1505 label *label330
-    * set *tmp449 null
  1506 label *label331
  1507 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1508 label *label328
 
  1549 op greaterThan *tmp461 *tmp459 *tmp460
  1550 jump *label341 notEqual *tmp461 false
  1551 label *label343
-    * set *tmp456 null
  1552 jump *label339 always
  1553 label *label338
  1554 label *label344
 
  1559 label *label345
  1560 jump *label344 always
  1561 label *label346
-    * set *tmp456 null
  1562 label *label339
  1563 set :transportStatus:target 0
  1564 set :transportStatus:item null
 
  1593 setaddr :dropAll*retaddr *label354 (h:*label354)
  1594 call *label17 *invalid :dropAll*retval (m:*label354) (h:*label354)
  1595 label *label354
-    * set *tmp467 null
  1596 jump *label353 always
  1597 label *label352
-    * set *tmp467 null
  1598 label *label353
  1599 set :status3:text "Mining..."
  1600 setaddr :status3*retaddr *label355 (h:*label355)
 
  1610 op land *tmp472 *tmp470 *tmp471
  1611 jump *label359 equal *tmp472 false
  1612 jump *label358 always
-    * set *tmp473 null
  1613 jump *label360 always
  1614 label *label359
-    * set *tmp473 null
  1615 label *label360
  1616 ucontrol mine :mineOre:x :mineOre:y
  1617 op greaterThan *tmp474 @second :mineOre:stop
  1618 jump *label361 equal *tmp474 false
  1619 jump *label358 always
-    * set *tmp475 null
  1620 jump *label362 always
  1621 label *label361
-    * set *tmp475 null
  1622 label *label362
  1623 label *label357
  1624 sensor *tmp476 @unit @totalItems
 
  1659 setaddr :error*retaddr *label370 (h:*label370)
  1660 call *label13 *invalid :error*retval (m:*label370) (h:*label370)
  1661 label *label370
-    * set *tmp483 null
  1662 jump *label369 always
  1663 label *label368
-    * set *tmp483 null
  1664 label *label369
  1665 label *label367
  1666 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-13 instructions):
 
   609 setaddr :supplyBlock*retaddr *label163 (h:*label163)
   610 call *label24 *invalid :supplyBlock*retval (m:*label163) (h:*label163)
   611 label *label163
-    * set *tmp256 null
   612 jump *label162 always
   613 label *label161
   614 set :supplyBlockFromCore:target .thoriumGenerator
 
   616 setaddr :supplyBlockFromCore*retaddr *label164 (h:*label164)
   617 call *label25 *invalid :supplyBlockFromCore*retval (m:*label164) (h:*label164)
   618 label *label164
-    * set *tmp256 null
   619 label *label162
   620 jump *label160 always
   621 label *label159
 
   640 call *label22 *invalid :mineOre.1*retval (m:*label170) (h:*label170)
   641 label *label170
   642 label *label168
-    * set *tmp258 null
   643 jump *label167 always
   644 label *label166
   645 set :supplyBase0:supplied false
 
   661 call *label24 *invalid :supplyBlock*retval (m:*label179) (h:*label179)
   662 label *label179
   663 set :supplyBase0:supplied true
-    * set *tmp266 :supplyBase0:supplied
   664 jump *label177 always
   665 label *label176
-    * set *tmp266 null
   666 label *label177
   667 jump *label175 always
   668 label *label174
 
   683 call *label24 *invalid :supplyBlock*retval (m:*label185) (h:*label185)
   684 label *label185
   685 set :supplyBase0:supplied true
-    * set *tmp272 :supplyBase0:supplied
   686 jump *label183 always
   687 label *label182
   688 sensor *tmp273 .smelter @sand
 
   703 label *label186
   704 set *tmp275 null
   705 label *label187
-    * set *tmp272 *tmp275
   706 label *label183
   707 jump *label181 always
   708 label *label180
 
   728 label *label192
   729 set *tmp281 null
   730 label *label193
-    * set *tmp278 *tmp281
   731 jump *label191 always
   732 label *label190
-    * set *tmp278 null
   733 label *label191
   734 jump *label173 always
   735 label *label172
 
   864 label *label207
   865 set *tmp296 *tmp299
   866 label *label203
-    * set *tmp292 *tmp296
   867 jump *label201 always
   868 label *label200
-    * set *tmp292 null
   869 label *label201
   870 jump *label199 always
   871 label *label198
 
   880 label *label229
   881 label *label199
   882 label *label171
-    * set *tmp258 null
   883 label *label167
   884 label *label156
   885 label *label154
 
  1283 set *tmp396 :unpackCfg:index
  1284 op add :unpackCfg:index :unpackCfg:index 1
  1285 read *tmp397 :unpackCfg:cfg *tmp396
-    * op sub *tmp398 *tmp397 50
  1286 set *tmp399 :unpackCfg:index
  1287 op add :unpackCfg:index :unpackCfg:index 1
  1288 read *tmp400 :unpackCfg:cfg *tmp399

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-7 instructions):
 
   698 call *label24 *invalid :supplyBlock*retval (m:*label189) (h:*label189)
   699 label *label189
   700 set :supplyBase0:supplied true
-    * set *tmp275 :supplyBase0:supplied
   701 jump *label187 always
   702 label *label186
-    * set *tmp275 null
   703 label *label187
   704 label *label183
   705 jump *label181 always
 
   721 call *label24 *invalid :supplyBlock*retval (m:*label195) (h:*label195)
   722 label *label195
   723 set :supplyBase0:supplied true
-    * set *tmp281 :supplyBase0:supplied
   724 jump *label193 always
   725 label *label192
-    * set *tmp281 null
   726 label *label193
   727 jump *label191 always
   728 label *label190
 
   759 setaddr :mineOre.1*retaddr *label205 (h:*label205)
   760 call *label22 *invalid :mineOre.1*retval (m:*label205) (h:*label205)
   761 label *label205
-    * set *tmp296 null
   762 jump *label203 always
   763 label *label202
   764 sensor *tmp297 .core @silicon
 
   857 label *label213
   858 set *tmp299 *tmp306
   859 label *label207
-    * set *tmp296 *tmp299
   860 label *label203
   861 jump *label201 always
   862 label *label200
 
  1276 set :unpackCfg:rotation *tmp395
  1277 set *tmp396 :unpackCfg:index
  1278 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp397 :unpackCfg:cfg *tmp396
  1279 set *tmp399 :unpackCfg:index
  1280 op add :unpackCfg:index :unpackCfg:index 1
  1281 read *tmp400 :unpackCfg:cfg *tmp399

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-3 instructions):
 
   784 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   785 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
   786 label *label211
-    * set *tmp299 null
   787 jump *label207 always
   788 label *label206
   789 sensor *tmp304 .core @copper
 
   854 label *label217
   855 set *tmp306 *tmp309
   856 label *label213
-    * set *tmp299 *tmp306
   857 label *label207
   858 label *label203
   859 jump *label201 always
 
  1272 read *tmp394 :unpackCfg:cfg *tmp393
  1273 op sub *tmp395 *tmp394 50
  1274 set :unpackCfg:rotation *tmp395
-    * set *tmp396 :unpackCfg:index
  1275 op add :unpackCfg:index :unpackCfg:index 1
  1276 set *tmp399 :unpackCfg:index
  1277 op add :unpackCfg:index :unpackCfg:index 1

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   797 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   798 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
   799 label *label215
-    * set *tmp306 null
   800 jump *label213 always
   801 label *label212
   802 sensor *tmp307 .core @lead
 
   851 label *label221
   852 set *tmp309 *tmp312
   853 label *label217
-    * set *tmp306 *tmp309
   854 label *label213
   855 label *label207
   856 label *label203

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   810 setaddr :mineOre.1*retaddr *label219 (h:*label219)
   811 call *label22 *invalid :mineOre.1*retval (m:*label219) (h:*label219)
   812 label *label219
-    * set *tmp309 null
   813 jump *label217 always
   814 label *label216
   815 sensor *tmp310 .core @metaglass
 
   848 label *label227
   849 set *tmp312 null
   850 label *label221
-    * set *tmp309 *tmp312
   851 label *label217
   852 label *label213
   853 label *label207

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   823 setaddr :mineOre.1*retaddr *label223 (h:*label223)
   824 call *label22 *invalid :mineOre.1*retval (m:*label223) (h:*label223)
   825 label *label223
-    * set *tmp312 null
   826 jump *label221 always
   827 label *label220
   828 set :status1:text "Goal 10: supplying base"
 
   845 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   846 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)
   847 label *label227
-    * set *tmp312 null
   848 label *label221
   849 label *label217
   850 label *label213

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-81 instructions):
 
    23 write 511 bank1 511
    24 label *label44
    25 ubind @poly
-    * set *tmp132 @unit
-    * set .builder *tmp132
-    * ulocate building core false @copper .coreX .coreY *tmp134 *tmp133
-    * set .core *tmp133
+   26 set .builder @unit
+   27 ulocate building core false @copper .coreX .coreY *tmp134 .core
    28 label *label45
    29 op equal *tmp135 .core null
    30 jump *label44 notEqual *tmp135 false
 
    33 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    34 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    35 label *label47
-    * set *tmp136 :buildBlockFromCfg.1*retval
-    * set .press *tmp136
+   36 set .press :buildBlockFromCfg.1*retval
    37 set :buildBlockFromCfg.1:cfg "z2<7F22222233"
    38 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    39 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    40 label *label48
-    * set *tmp137 :buildBlockFromCfg.1*retval
-    * set .battery *tmp137
+   41 set .battery :buildBlockFromCfg.1*retval
    42 set :buildBlockFromCfg.1:cfg "z4<7F22222234"
    43 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    44 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
 
    47 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    48 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    49 label *label50
-    * set *tmp139 :buildBlockFromCfg.1*retval
-    * set .generator *tmp139
+   50 set .generator :buildBlockFromCfg.1*retval
    51 set .powerTarget 400
    52 set :buildBlockFromCfg.1:cfg "459PK22222246"
    53 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    54 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    55 label *label51
-    * set *tmp140 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp140
+   56 set .smelter :buildBlockFromCfg.1*retval
    57 set :buildBlockFromCfg.1:cfg "c464422222237"
    58 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    59 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
 
    77 wait 1e-15
    78 read *tmp153 .oreLocator ":findDrillLocation*finished"
    79 jump *label55 equal *tmp153 false
-    * read *tmp150 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp150
-    * read *tmp151 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp151
-    * read *tmp154 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp154
+   80 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   81 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   82 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    83 op equal *tmp155 :buildFirstTitaniumDrill:result false
    84 jump *label56 equal *tmp155 false
    85 set :error:error "Cannot locate spot for titanium drill"
 
    98 wait 1e-15
    99 read *tmp159 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
   100 jump *label59 equal *tmp159 false
-    * read *tmp160 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp142 *tmp160
+  101 read *tmp142 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
   102 jump *label53 always
   103 set *tmp142 null
   104 label *label53
 
   108 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   109 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   110 label *label60
-    * set *tmp161 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp161
+  111 set .unloader1 :buildBlockFromCfg.1*retval
   112 set :buildBlockFromCfg.1:cfg "c06442222223:"
   113 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   114 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
 
   123 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   124 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   125 label *label63
-    * set *tmp164 :buildBlockFromCfg*retval
-    * set .controller *tmp164
+  126 set .controller :buildBlockFromCfg*retval
   127 write processor6 .controller ".timer"
   128 write .display .controller ".display"
   129 write .core .controller ".core"
 
   141 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   142 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   143 label *label65
-    * set *tmp166 :buildBlockFromCfg.1*retval
-    * write *tmp166 .controller ".unloader2"
+  144 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   145 set :buildBlockFromCfg.1:cfg "¦,.nx2222255?"
   146 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
   147 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   148 label *label66
-    * set *tmp167 :buildBlockFromCfg.1*retval
-    * set :factory *tmp167
+  149 set :factory :buildBlockFromCfg.1*retval
   150 write :factory .controller ".factory"
   151 write :factory .display ".airFactory"
   152 set :setFlareTarget:target 1
 
   194 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   195 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   196 label *label78
-    * set *tmp174 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp174
+  197 set .kiln :buildBlockFromCfg.1*retval
   198 write .kiln .controller ".kiln"
   199 set :buildBlockFromCfg.1:cfg ")9PPP22P224C"
   200 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
 
   212 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   213 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   214 label *label82
-    * set *tmp178 :buildBlockFromCfg.1*retval
-    * write *tmp178 .controller ".generator2"
+  215 write :buildBlockFromCfg.1*retval .controller ".generator2"
   216 set :buildBlockFromCfg.1:cfg "3.:2dK2225G"
   217 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   218 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   219 label *label83
-    * set *tmp179 :buildBlockFromCfg.1*retval
-    * write *tmp179 .controller ".multipress"
+  220 write :buildBlockFromCfg.1*retval .controller ".multipress"
   221 set .graphiteSurplus 150
   222 set :buildBlockFromCfg.1:cfg "¯,(<2A222225H"
   223 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   224 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   225 label *label84
-    * set *tmp180 :buildBlockFromCfg.1*retval
-    * write *tmp180 .controller ".payloadRouter"
+  226 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   227 set :buildBlockFromCfg.1:cfg "2.222PK2223I"
   228 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   229 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   230 label *label85
-    * set *tmp181 :buildBlockFromCfg.1*retval
-    * write *tmp181 .controller ".unloader4"
+  231 write :buildBlockFromCfg.1*retval .controller ".unloader4"
   232 set :buildBlockFromCfg.1:cfg "g2,642222223J"
   233 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   234 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   237 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   238 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
   239 label *label87
-    * set *tmp183 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp183
+  240 set :reconstructor :buildBlockFromCfg.1*retval
   241 write :reconstructor .controller ".reconstructor"
   242 write :reconstructor .display ".reconstructor"
   243 set :buildBlockFromCfg.1:cfg "{<62d2PF2225L"
 
   257 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   258 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   259 label *label91
-    * set *tmp185 :buildBlockFromCfg.1*retval
-    * write *tmp185 .controller ".smelter2"
+  260 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   261 set :buildBlockFromCfg.1:cfg "c82442222223Q"
   262 setaddr :buildBlockFromCfg.1*retaddr *label92 (h:*label92)
   263 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label92) (h:*label92)
 
   306 write @ore-titanium .display ".nextBlock"
   307 wait 0.000000001
   308 ubind @flare
-    * read *tmp54 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp54
+  309 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   310 write .coreX .oreLocator ":findDrillLocation:x"
   311 write .coreY .oreLocator ":findDrillLocation:y"
   312 write @unit .oreLocator ":findDrillLocation:unit"
 
   347 wait 1e-15
   348 read *tmp210 .oreLocator ":layoutThoriumDrill*finished"
   349 jump *label111 equal *tmp210 false
-    * read *tmp211 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp211
+  350 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   351 op equal *tmp212 :buildThoriumDrill:result false
   352 jump *label112 equal *tmp212 false
   353 set :error:error "Cannot locate spot for thorium drill"
 
   371 wait 1e-15
   372 read *tmp220 .blockBuilder ":buildBlockAt*finished"
   373 jump *label115 equal *tmp220 false
-    * read *tmp221 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp221
+  374 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   375 set :buildRemoteBlock:cfg ")9PPP22P224C"
-    * read *tmp58 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp59
+  376 read :buildRemoteBlock:x .oreLocator ".water1X"
+  377 read :buildRemoteBlock:y .oreLocator ".water1Y"
   378 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   379 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   380 label *label116
   381 set :buildRemoteBlock:cfg ")9PPP22P224C"
-    * read *tmp62 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp63
+  382 read :buildRemoteBlock:x .oreLocator ".water2X"
+  383 read :buildRemoteBlock:y .oreLocator ".water2Y"
   384 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   385 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   386 label *label117
   387 set :buildRemoteBlock:cfg "~)5UZKP22224F"
-    * read *tmp64 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp65
+  388 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  389 read :buildRemoteBlock:y .oreLocator ".generatorY"
   390 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   391 call *label36 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   392 label *label118
-    * set *tmp224 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp224
+  393 set .thoriumGenerator :buildRemoteBlock*retval
   394 set :buildRemoteBlock:cfg "v0,482222223="
-    * read *tmp66 .oreLocator ".node1X"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".node1Y"
-    * set :buildRemoteBlock:y *tmp67
+  395 read :buildRemoteBlock:x .oreLocator ".node1X"
+  396 read :buildRemoteBlock:y .oreLocator ".node1Y"
   397 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   398 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   399 label *label119
   400 set :buildRemoteBlock:cfg "v0,482222223="
-    * read *tmp68 .oreLocator ".node2X"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 .oreLocator ".node2Y"
-    * set :buildRemoteBlock:y *tmp69
+  401 read :buildRemoteBlock:x .oreLocator ".node2X"
+  402 read :buildRemoteBlock:y .oreLocator ".node2Y"
   403 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   404 call *label36 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   405 label *label120
   406 set :buildRemoteBlock:cfg "222<2:22223N"
-    * read *tmp70 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp70
-    * read *tmp71 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp71
+  407 read :buildRemoteBlock:x .oreLocator ".panelX"
+  408 read :buildRemoteBlock:y .oreLocator ".panelY"
   409 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   410 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   411 label *label121
   412 set :buildRemoteBlock:cfg "z2<7F22222233"
-    * read *tmp72 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp72
-    * read *tmp73 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp73
+  413 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  414 read :buildRemoteBlock:y .oreLocator ".batteryY"
   415 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   416 call *label36 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   417 label *label122
-    * set *tmp228 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp228
+  418 set .thoriumBattery :buildRemoteBlock*retval
   419 set :buildRemoteBlock:cfg "2222222224O"
-    * read *tmp60 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp61
+  420 read :buildRemoteBlock:x .oreLocator ".containerX"
+  421 read :buildRemoteBlock:y .oreLocator ".containerY"
   422 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   423 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   424 label *label123
-    * set *tmp229 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp229
+  425 set .thoriumContainer :buildRemoteBlock*retval
   426 op equal *tmp230 .thoriumContainer null
   427 jump *label124 equal *tmp230 false
   428 set .thoriumContainer .thoriumDrill
 
   459 setaddr :buildBlockFromCfg*retaddr *label132 (h:*label132)
   460 call *label37 *invalid :buildBlockFromCfg*retval (m:*label132) (h:*label132)
   461 label *label132
-    * set *tmp235 :buildBlockFromCfg*retval
-    * write *tmp235 .controller ".unloader6"
+  462 write :buildBlockFromCfg*retval .controller ".unloader6"
   463 set :buildBlockFromCfg.1:cfg "g4,642222223U"
   464 setaddr :buildBlockFromCfg.1*retaddr *label133 (h:*label133)
   465 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label133) (h:*label133)
 
   509 label *label145
   510 label *label146
   511 jump *label148 equal true false
-    * op sub *tmp243 @thisy 6
-    * set :lineUpUnits:y *tmp243
+  512 op sub :lineUpUnits:y @thisy 6
   513 set :lineUpUnits:unit @mega
   514 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   515 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   516 label *label149
-    * op sub *tmp244 @thisy 10
-    * set :lineUpUnits:y *tmp244
+  517 op sub :lineUpUnits:y @thisy 10
   518 set :lineUpUnits:unit @poly
   519 setaddr :lineUpUnits*retaddr *label150 (h:*label150)
   520 call *label42 *invalid :lineUpUnits*retval (m:*label150) (h:*label150)
   521 label *label150
-    * op sub *tmp245 @thisy 14
-    * set :lineUpUnits:y *tmp245
+  522 op sub :lineUpUnits:y @thisy 14
   523 set :lineUpUnits:unit @mono
   524 setaddr :lineUpUnits*retaddr *label151 (h:*label151)
   525 call *label42 *invalid :lineUpUnits*retval (m:*label151) (h:*label151)
   526 label *label151
-    * op sub *tmp246 @thisy 18
-    * set :lineUpUnits:y *tmp246
+  527 op sub :lineUpUnits:y @thisy 18
   528 set :lineUpUnits:unit @flare
   529 setaddr :lineUpUnits*retaddr *label152 (h:*label152)
   530 call *label42 *invalid :lineUpUnits*retval (m:*label152) (h:*label152)
 
   687 jump *label196 equal *tmp283 false
   688 sensor *tmp285 .core @titanium
   689 op sub *tmp286 .targetTitanium *tmp285
-    * op min *tmp287 7 *tmp286
-    * set *tmp284 *tmp287
+  690 op min *tmp284 7 *tmp286
   691 jump *label197 always
   692 label *label196
   693 set *tmp284 100
 
   719 setaddr :status1*retaddr *label208 (h:*label208)
   720 call *label9 *invalid :status1*retval (m:*label208) (h:*label208)
   721 label *label208
-    * sensor *tmp300 .core @coal
-    * set :supplyBase0:coal *tmp300
-    * sensor *tmp301 .core @sand
-    * set :supplyBase0:sand *tmp301
+  722 sensor :supplyBase0:coal .core @coal
+  723 sensor :supplyBase0:sand .core @sand
   724 op lessThan *tmp302 :supplyBase0:coal :supplyBase0:sand
   725 jump *label209 equal *tmp302 false
   726 set *tmp303 @coal
 
   778 setaddr :status1*retaddr *label224 (h:*label224)
   779 call *label9 *invalid :status1*retval (m:*label224) (h:*label224)
   780 label *label224
-    * sensor *tmp313 .core @coal
-    * set :supplyBase0:coal.1 *tmp313
-    * sensor *tmp314 .core @sand
-    * set :supplyBase0:sand.1 *tmp314
+  781 sensor :supplyBase0:coal.1 .core @coal
+  782 sensor :supplyBase0:sand.1 .core @sand
   783 op lessThanEq *tmp315 :supplyBase0:coal.1 :supplyBase0:sand.1
   784 jump *label225 equal *tmp315 false
   785 set *tmp316 @coal
 
   905 return :buildBlockFromCfg*retaddr
   906 end
   907 label *label38
-    * set *tmp322 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp322
+  908 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   909 set :buildBlockFromCfg:config null
   910 setaddr :buildBlockFromCfg*retaddr *label239 (h:*label239)
   911 call *label37 *invalid :buildBlockFromCfg*retval (m:*label239) (h:*label239)
 
   964 label *label41
   965 label *label246
   966 ubind :flagUnits:unit
-    * set *tmp323 @unit
-    * set :flagUnits:firstUnit *tmp323
+  967 set :flagUnits:firstUnit @unit
   968 label *label247
   969 op equal *tmp324 :flagUnits:firstUnit null
   970 jump *label246 notEqual *tmp324 false
 
   985 ubind :lineUpUnits:unit
   986 set :lineUpUnits:firstUnit @unit
   987 label *label253
-    * sensor *tmp326 @unit @flag
-    * set :lineUpUnits:x *tmp326
+  988 sensor :lineUpUnits:x @unit @flag
   989 ucontrol itemDrop @air 1000
   990 ucontrol move :lineUpUnits:x :lineUpUnits:y
   991 sensor *tmp327 @unit @mining
 
  1014 setaddr :status2*retaddr *label260 (h:*label260)
  1015 call *label10 *invalid :status2*retval (m:*label260) (h:*label260)
  1016 label *label260
-    * set *tmp330 :mineOre.1:ore
-    * set :mineOre:ore *tmp330
+ 1017 set :mineOre:ore :mineOre.1:ore
  1018 set :mineOre:amount 30
  1019 set :mineOre:block .core
  1020 setaddr :mineOre*retaddr *label261 (h:*label261)
 
  1025 end
  1026 label *label23
  1027 sensor *tmp331 :fetchBlock:block @itemCapacity
-    * op min *tmp332 *tmp331 30
-    * set :transportStatus:target *tmp332
+ 1028 op min :transportStatus:target *tmp331 30
  1029 set :transportStatus:item :fetchBlock:item
  1030 setaddr :transportStatus*retaddr *label263 (h:*label263)
  1031 call *label12 *invalid :transportStatus*retval (m:*label263) (h:*label263)
 
  1048 label *label266
  1049 label *label267
  1050 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp335 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp335
+ 1051 sensor :fetchBlock:unitItem @unit @firstItem
  1052 op notEqual *tmp336 :fetchBlock:unitItem null
  1053 op notEqual *tmp337 :fetchBlock:unitItem :fetchBlock:item
  1054 op land *tmp338 *tmp336 *tmp337
 
  1079 setaddr :status2*retaddr *label274 (h:*label274)
  1080 call *label10 *invalid :status2*retval (m:*label274) (h:*label274)
  1081 label *label274
-    * sensor *tmp344 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp344
+ 1082 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1083 sensor *tmp345 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp346 :supplyBlock:blockCapacity *tmp345
-    * set :supplyBlock:missing *tmp346
+ 1084 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
  1085 op greaterThan *tmp347 :supplyBlock:missing 0
  1086 jump *label275 equal *tmp347 false
  1087 set :mineOre:ore :supplyBlock:ore
 
  1098 end
  1099 label *label25
  1100 sensor *tmp349 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp350 *tmp349 30
-    * set :transportStatus:target *tmp350
+ 1101 op min :transportStatus:target *tmp349 30
  1102 set :transportStatus:item :supplyBlockFromCore:item
  1103 setaddr :transportStatus*retaddr *label279 (h:*label279)
  1104 call *label12 *invalid :transportStatus*retval (m:*label279) (h:*label279)
 
  1119 label *label282
  1120 label *label283
  1121 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp351 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp351
+ 1122 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1123 op notEqual *tmp352 :supplyBlockFromCore:unitItem null
  1124 op notEqual *tmp353 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1125 op land *tmp354 *tmp352 *tmp353
 
  1149 op add :unpackCfg:index :unpackCfg:index 1
  1150 read *tmp361 :unpackCfg:cfg *tmp360
  1151 op sub *tmp362 *tmp361 50
-    * lookup block *tmp363 *tmp362
-    * set :unpackCfg:type *tmp363
+ 1152 lookup block :unpackCfg:type *tmp362
  1153 set *tmp364 :unpackCfg:index
  1154 op add :unpackCfg:index :unpackCfg:index 1
  1155 read *tmp365 :unpackCfg:cfg *tmp364
  1156 op sub *tmp366 *tmp365 50
-    * op div *tmp367 *tmp366 2
-    * set :unpackCfg:x *tmp367
+ 1157 op div :unpackCfg:x *tmp366 2
  1158 set *tmp368 :unpackCfg:index
  1159 op add :unpackCfg:index :unpackCfg:index 1
  1160 read *tmp369 :unpackCfg:cfg *tmp368
  1161 op sub *tmp370 *tmp369 50
-    * op div *tmp371 *tmp370 2
-    * set :unpackCfg:y *tmp371
+ 1162 op div :unpackCfg:y *tmp370 2
  1163 set *tmp372 :unpackCfg:index
  1164 op add :unpackCfg:index :unpackCfg:index 1
  1165 read *tmp373 :unpackCfg:cfg *tmp372
-    * op sub *tmp374 *tmp373 50
-    * set :unpackCfg:cu *tmp374
+ 1166 op sub :unpackCfg:cu *tmp373 50
  1167 set *tmp375 :unpackCfg:index
  1168 op add :unpackCfg:index :unpackCfg:index 1
  1169 read *tmp376 :unpackCfg:cfg *tmp375
-    * op sub *tmp377 *tmp376 50
-    * set :unpackCfg:pb *tmp377
+ 1170 op sub :unpackCfg:pb *tmp376 50
  1171 set *tmp378 :unpackCfg:index
  1172 op add :unpackCfg:index :unpackCfg:index 1
  1173 read *tmp379 :unpackCfg:cfg *tmp378
-    * op sub *tmp380 *tmp379 50
-    * set :unpackCfg:gr *tmp380
+ 1174 op sub :unpackCfg:gr *tmp379 50
  1175 set *tmp381 :unpackCfg:index
  1176 op add :unpackCfg:index :unpackCfg:index 1
  1177 read *tmp382 :unpackCfg:cfg *tmp381
-    * op sub *tmp383 *tmp382 50
-    * set :unpackCfg:si *tmp383
+ 1178 op sub :unpackCfg:si *tmp382 50
  1179 set *tmp384 :unpackCfg:index
  1180 op add :unpackCfg:index :unpackCfg:index 1
  1181 read *tmp385 :unpackCfg:cfg *tmp384
-    * op sub *tmp386 *tmp385 50
-    * set :unpackCfg:ti *tmp386
+ 1182 op sub :unpackCfg:ti *tmp385 50
  1183 set *tmp387 :unpackCfg:index
  1184 op add :unpackCfg:index :unpackCfg:index 1
  1185 read *tmp388 :unpackCfg:cfg *tmp387
-    * op sub *tmp389 *tmp388 50
-    * set :unpackCfg:mg *tmp389
+ 1186 op sub :unpackCfg:mg *tmp388 50
  1187 set *tmp390 :unpackCfg:index
  1188 op add :unpackCfg:index :unpackCfg:index 1
  1189 read *tmp391 :unpackCfg:cfg *tmp390
-    * op sub *tmp392 *tmp391 50
-    * set :unpackCfg:th *tmp392
+ 1190 op sub :unpackCfg:th *tmp391 50
  1191 set *tmp393 :unpackCfg:index
  1192 op add :unpackCfg:index :unpackCfg:index 1
  1193 read *tmp394 :unpackCfg:cfg *tmp393
-    * op sub *tmp395 *tmp394 50
-    * set :unpackCfg:rotation *tmp395
+ 1194 op sub :unpackCfg:rotation *tmp394 50
  1195 op add :unpackCfg:index :unpackCfg:index 1
  1196 set *tmp399 :unpackCfg:index
  1197 op add :unpackCfg:index :unpackCfg:index 1
  1198 read *tmp400 :unpackCfg:cfg *tmp399
-    * op sub *tmp401 *tmp400 50
-    * set :unpackCfg:ind *tmp401
+ 1199 op sub :unpackCfg:ind *tmp400 50
  1200 label *label289
  1201 return :unpackCfg*retaddr
  1202 end
 
  1246 write :meetTarget:thorium .display ".targetThorium"
  1247 set .targetCopper :meetTarget:copper
  1248 op add *tmp404 :meetTarget:lead .leadSurplus
-    * op add *tmp405 *tmp404 1
-    * set .targetLead *tmp405
+ 1249 op add .targetLead *tmp404 1
  1250 set .targetGraphite :meetTarget:graphite
  1251 set .targetSilicon :meetTarget:silicon
  1252 set .targetTitanium :meetTarget:titanium
 
  1366 wait 1e-15
  1367 read *tmp445 .blockBuilder ":buildBlockAt*finished"
  1368 jump *label322 equal *tmp445 false
-    * read *tmp446 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp446
+ 1369 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1370 jump *label320 always
  1371 set :buildBlock*retval null
  1372 label *label320
 
  1432 setaddr :moveToBlock*retaddr *label340 (h:*label340)
  1433 call *label18 *invalid :moveToBlock*retval (m:*label340) (h:*label340)
  1434 label *label340
-    * sensor *tmp457 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp457
+ 1435 sensor :depositItems:cap :depositItems:block @itemCapacity
  1436 label *label341
  1437 ucontrol itemDrop :depositItems:block 30
  1438 label *label342
 
  1462 return :depositItems*retaddr
  1463 end
  1464 label *label21
-    * op min *tmp464 :mineOre:amount 30
-    * set :mineOre:amount *tmp464
+ 1465 op min :mineOre:amount :mineOre:amount 30
  1466 set :transportStatus:target :mineOre:amount
  1467 set :transportStatus:item :mineOre:ore
  1468 setaddr :transportStatus*retaddr *label349 (h:*label349)
 
  1492 setaddr :status3*retaddr *label355 (h:*label355)
  1493 call *label11 *invalid :status3*retval (m:*label355) (h:*label355)
  1494 label *label355
-    * op add *tmp468 @second 10
-    * set :mineOre:stop *tmp468
+ 1495 op add :mineOre:stop @second 10
  1496 label *label356
-    * sensor *tmp469 @unit @firstItem
-    * set :mineOre:item *tmp469
+ 1497 sensor :mineOre:item @unit @firstItem
  1498 op notEqual *tmp470 :mineOre:item null
  1499 op notEqual *tmp471 :mineOre:item :mineOre:ore
  1500 op land *tmp472 *tmp470 *tmp471

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   508 call *label41 *invalid :flagUnits*retval (m:*label145) (h:*label145)
   509 label *label145
   510 label *label146
-    * jump *label148 equal true false
   511 op sub :lineUpUnits:y @thisy 6
   512 set :lineUpUnits:unit @mega
   513 setaddr :lineUpUnits*retaddr *label149 (h:*label149)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    26 set .builder @unit
    27 ulocate building core false @copper .coreX .coreY *tmp134 .core
    28 label *label45
-    * op equal *tmp135 .core null
-    * jump *label44 notEqual *tmp135 false
+   29 jump *label44 equal .core null
    30 label *label46
    31 set :buildBlockFromCfg.1:cfg "2-5}P22222242"
    32 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
    79 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    80 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    81 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp155 :buildFirstTitaniumDrill:result false
-    * jump *label56 equal *tmp155 false
+   82 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    83 set :error:error "Cannot locate spot for titanium drill"
    84 setaddr :error*retaddr *label58 (h:*label58)
    85 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
 
   168 call *label33 *invalid :supplyBase*retval (m:*label73) (h:*label73)
   169 label *label73
   170 sensor *tmp168 .battery @totalPower
-    * op lessThan *tmp169 *tmp168 300
-    * jump *label74 equal *tmp169 false
+  171 jump *label74 greaterThanEq *tmp168 300
   172 jump *label72 always
   173 jump *label75 always
   174 label *label74
   175 label *label75
   176 label *label71
   177 read *tmp101 .controller ".monos"
-    * op lessThan *tmp171 *tmp101 3
-    * jump *label70 notEqual *tmp171 false
+  178 jump *label70 lessThan *tmp101 3
   179 label *label72
   180 set .siliconSurplus 65
   181 set :buildBlockFromCfg.1:cfg "60222PK2223@"
 
   272 label *label95
   273 label *label96
   274 read *tmp102 .controller ".polys"
-    * op lessThan *tmp189 *tmp102 3
-    * jump *label98 equal *tmp189 false
+  275 jump *label98 greaterThanEq *tmp102 3
   276 setaddr :supplyBase*retaddr *label99 (h:*label99)
   277 call *label33 *invalid :supplyBase*retval (m:*label99) (h:*label99)
   278 label *label99
 
   285 label *label100
   286 label *label101
   287 read *tmp100 .controller ".flares"
-    * op lessThan *tmp190 *tmp100 2
-    * jump *label103 equal *tmp190 false
+  288 jump *label103 greaterThanEq *tmp100 2
   289 setaddr :supplyBase*retaddr *label104 (h:*label104)
   290 call *label33 *invalid :supplyBase*retval (m:*label104) (h:*label104)
   291 label *label104
 
   342 read *tmp210 .oreLocator ":layoutThoriumDrill*finished"
   343 jump *label111 equal *tmp210 false
   344 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp212 :buildThoriumDrill:result false
-    * jump *label112 equal *tmp212 false
+  345 jump *label112 notEqual :buildThoriumDrill:result false
   346 set :error:error "Cannot locate spot for thorium drill"
   347 setaddr :error*retaddr *label114 (h:*label114)
   348 call *label13 *invalid :error*retval (m:*label114) (h:*label114)
 
   416 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   417 label *label123
   418 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp230 .thoriumContainer null
-    * jump *label124 equal *tmp230 false
+  419 jump *label124 notEqual .thoriumContainer null
   420 set .thoriumContainer .thoriumDrill
   421 jump *label125 always
   422 label *label124
 
   438 label *label127
   439 label *label128
   440 read *tmp102 .controller ".polys"
-    * op lessThan *tmp234 *tmp102 5
-    * jump *label130 equal *tmp234 false
+  441 jump *label130 greaterThanEq *tmp102 5
   442 setaddr :supplyBase*retaddr *label131 (h:*label131)
   443 call *label33 *invalid :supplyBase*retval (m:*label131) (h:*label131)
   444 label *label131
 
   469 label *label136
   470 label *label137
   471 read *tmp103 .controller ".megas"
-    * op lessThan *tmp237 *tmp103 1
-    * jump *label139 equal *tmp237 false
+  472 jump *label139 greaterThanEq *tmp103 1
   473 setaddr :supplyBase*retaddr *label140 (h:*label140)
   474 call *label33 *invalid :supplyBase*retval (m:*label140) (h:*label140)
   475 label *label140
 
   540 call *label9 *invalid :status1*retval (m:*label158) (h:*label158)
   541 label *label158
   542 sensor *tmp251 .thoriumBattery @totalPower
-    * op lessThan *tmp252 *tmp251 3000
-    * jump *label159 equal *tmp252 false
+  543 jump *label159 greaterThanEq *tmp251 3000
   544 sensor *tmp254 .core @coal
-    * op lessThan *tmp255 *tmp254 50
-    * jump *label161 equal *tmp255 false
+  545 jump *label161 greaterThanEq *tmp254 50
   546 set :supplyBlock:block .thoriumGenerator
   547 set :supplyBlock:ore @coal
   548 setaddr :supplyBlock*retaddr *label163 (h:*label163)
 
   568 jump *label156 always
   569 label *label155
   570 read *tmp101 .controller ".monos"
-    * op greaterThan *tmp257 *tmp101 3
-    * jump *label166 equal *tmp257 false
+  571 jump *label166 lessThanEq *tmp101 3
   572 set :status1:text "Phase 1: supplying base"
   573 setaddr :status1*retaddr *label169 (h:*label169)
   574 call *label9 *invalid :status1*retval (m:*label169) (h:*label169)
 
   581 jump *label167 always
   582 label *label166
   583 set :supplyBase0:supplied false
-    * op equal *tmp259 .unloader1 null
-    * jump *label172 equal *tmp259 false
+  584 jump *label172 notEqual .unloader1 null
   585 sensor *tmp261 .core @graphite
-    * op lessThan *tmp262 *tmp261 .targetGraphite
-    * jump *label174 equal *tmp262 false
+  586 jump *label174 greaterThanEq *tmp261 .targetGraphite
   587 sensor *tmp264 .press @coal
-    * op lessThan *tmp265 *tmp264 5
-    * jump *label176 equal *tmp265 false
+  588 jump *label176 greaterThanEq *tmp264 5
   589 set :status1:text "Goal 1: graphite requirement"
   590 setaddr :status1*retaddr *label178 (h:*label178)
   591 call *label9 *invalid :status1*retval (m:*label178) (h:*label178)
 
   603 label *label174
   604 label *label175
   605 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 .targetSilicon
-    * jump *label180 equal *tmp268 false
+  606 jump *label180 greaterThanEq *tmp267 .targetSilicon
   607 sensor *tmp270 .smelter @coal
-    * op lessThan *tmp271 *tmp270 5
-    * jump *label182 equal *tmp271 false
+  608 jump *label182 greaterThanEq *tmp270 5
   609 set :status1:text "Goal 2: coal for silicon requirement"
   610 setaddr :status1*retaddr *label184 (h:*label184)
   611 call *label9 *invalid :status1*retval (m:*label184) (h:*label184)
 
   619 jump *label183 always
   620 label *label182
   621 sensor *tmp273 .smelter @sand
-    * op lessThan *tmp274 *tmp273 5
-    * jump *label186 equal *tmp274 false
+  622 jump *label186 greaterThanEq *tmp273 5
   623 set :status1:text "Goal 3: sand for silicon requirement"
   624 setaddr :status1*retaddr *label188 (h:*label188)
   625 call *label9 *invalid :status1*retval (m:*label188) (h:*label188)
 
   638 label *label180
   639 label *label181
   640 sensor *tmp276 .battery @totalPower
-    * op lessThan *tmp277 *tmp276 .powerTarget
-    * jump *label190 equal *tmp277 false
+  641 jump *label190 greaterThanEq *tmp276 .powerTarget
   642 sensor *tmp279 .generator @coal
-    * op lessThan *tmp280 *tmp279 2
-    * jump *label192 equal *tmp280 false
+  643 jump *label192 greaterThanEq *tmp279 2
   644 set :status1:text "Goal 4: supplying generator"
   645 setaddr :status1*retaddr *label194 (h:*label194)
   646 call *label9 *invalid :status1*retval (m:*label194) (h:*label194)
 
   661 label *label172
   662 label *label173
   663 sensor *tmp282 .core @titanium
-    * op lessThan *tmp283 *tmp282 .targetTitanium
-    * jump *label196 equal *tmp283 false
+  664 jump *label196 greaterThanEq *tmp282 .targetTitanium
   665 sensor *tmp285 .core @titanium
   666 op sub *tmp286 .targetTitanium *tmp285
   667 op min *tmp284 7 *tmp286
 
   671 label *label197
   672 set :supplyBase0:titaniumTrigger *tmp284
   673 sensor *tmp288 .titaniumDrill @titanium
-    * op lessThan *tmp289 *tmp288 :supplyBase0:titaniumTrigger
-    * jump *label198 equal *tmp289 false
-    * op equal *tmp291 :supplyBase0:supplied false
-    * jump *label200 equal *tmp291 false
+  674 jump *label198 greaterThanEq *tmp288 :supplyBase0:titaniumTrigger
+  675 jump *label200 notEqual :supplyBase0:supplied false
   676 sensor *tmp293 .battery @totalPower
   677 op mul *tmp294 .unloader1 .powerTarget
-    * op lessThan *tmp295 *tmp293 *tmp294
-    * jump *label202 equal *tmp295 false
+  678 jump *label202 greaterThanEq *tmp293 *tmp294
   679 set :status1:text "Goal 5: supplying generator"
   680 setaddr :status1*retaddr *label204 (h:*label204)
   681 call *label9 *invalid :status1*retval (m:*label204) (h:*label204)
 
   687 jump *label203 always
   688 label *label202
   689 sensor *tmp297 .core @silicon
-    * op lessThan *tmp298 *tmp297 .targetSilicon
-    * jump *label206 equal *tmp298 false
+  690 jump *label206 greaterThanEq *tmp297 .targetSilicon
   691 set :status1:text "Goal 6: silicon requirement"
   692 setaddr :status1*retaddr *label208 (h:*label208)
   693 call *label9 *invalid :status1*retval (m:*label208) (h:*label208)
   694 label *label208
   695 sensor :supplyBase0:coal .core @coal
   696 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp302 :supplyBase0:coal :supplyBase0:sand
-    * jump *label209 equal *tmp302 false
+  697 jump *label209 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   698 set *tmp303 @coal
   699 jump *label210 always
   700 label *label209
 
   708 jump *label207 always
   709 label *label206
   710 sensor *tmp304 .core @copper
-    * op lessThan *tmp305 *tmp304 .targetCopper
-    * jump *label212 equal *tmp305 false
+  711 jump *label212 greaterThanEq *tmp304 .targetCopper
   712 set :status1:text "Goal 7: copper requirement"
   713 setaddr :status1*retaddr *label214 (h:*label214)
   714 call *label9 *invalid :status1*retval (m:*label214) (h:*label214)
 
   720 jump *label213 always
   721 label *label212
   722 sensor *tmp307 .core @lead
-    * op lessThan *tmp308 *tmp307 .targetLead
-    * jump *label216 equal *tmp308 false
+  723 jump *label216 greaterThanEq *tmp307 .targetLead
   724 set :status1:text "Goal 8: lead requirement"
   725 setaddr :status1*retaddr *label218 (h:*label218)
   726 call *label9 *invalid :status1*retval (m:*label218) (h:*label218)
 
   732 jump *label217 always
   733 label *label216
   734 sensor *tmp310 .core @metaglass
-    * op lessThan *tmp311 *tmp310 .targetMetaglass
-    * jump *label220 equal *tmp311 false
+  735 jump *label220 greaterThanEq *tmp310 .targetMetaglass
   736 set :status1:text "Goal 9: metaglass requirement"
   737 setaddr :status1*retaddr *label222 (h:*label222)
   738 call *label9 *invalid :status1*retval (m:*label222) (h:*label222)
 
   749 label *label224
   750 sensor :supplyBase0:coal.1 .core @coal
   751 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp315 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label225 equal *tmp315 false
+  752 jump *label225 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   753 set *tmp316 @coal
   754 jump *label226 always
   755 label *label225
 
   788 end
   789 label *label36
   790 op add *tmp317 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp318 *tmp317 0
-    * jump *label231 equal *tmp318 false
+  791 jump *label231 lessThanEq *tmp317 0
   792 set :unpackCfg:cfg :buildRemoteBlock:cfg
   793 setaddr :unpackCfg*retaddr *label233 (h:*label233)
   794 call *label27 *invalid :unpackCfg*retval (m:*label233) (h:*label233)
 
   933 ubind :flagUnits:unit
   934 set :flagUnits:firstUnit @unit
   935 label *label247
-    * op equal *tmp324 :flagUnits:firstUnit null
-    * jump *label246 notEqual *tmp324 false
+  936 jump *label246 equal :flagUnits:firstUnit null
   937 label *label248
   938 set :flagUnits:x @thisx
   939 label *label249
 
   941 op add :flagUnits:x :flagUnits:x 4
   942 ubind :flagUnits:unit
   943 label *label250
-    * op notEqual *tmp325 @unit :flagUnits:firstUnit
-    * jump *label249 notEqual *tmp325 false
+  944 jump *label249 notEqual @unit :flagUnits:firstUnit
   945 label *label251
   946 label *label245
   947 return :flagUnits*retaddr
 
   961 label *label257
   962 ubind :lineUpUnits:unit
   963 label *label254
-    * op notEqual *tmp329 @unit :lineUpUnits:firstUnit
-    * jump *label253 notEqual *tmp329 false
+  964 jump *label253 notEqual @unit :lineUpUnits:firstUnit
   965 label *label255
   966 label *label252
   967 return :lineUpUnits*retaddr
 
  1046 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1047 sensor *tmp345 :supplyBlock:block :supplyBlock:ore
  1048 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
-    * op greaterThan *tmp347 :supplyBlock:missing 0
-    * jump *label275 equal *tmp347 false
+ 1049 jump *label275 lessThanEq :supplyBlock:missing 0
  1050 set :mineOre:ore :supplyBlock:ore
  1051 set :mineOre:amount :supplyBlock:blockCapacity
  1052 set :mineOre:block :supplyBlock:block
 
  1235 write .targetCopper processor8 ".copperTarget"
  1236 label *label301
  1237 sensor *tmp417 .core @copper
-    * op lessThan *tmp418 *tmp417 .targetCopper
-    * jump *label305 equal *tmp418 false
+ 1238 jump *label305 greaterThanEq *tmp417 .targetCopper
  1239 set *tmp416 false
  1240 jump *label304 always
  1241 jump *label306 always
  1242 label *label305
  1243 label *label306
  1244 sensor *tmp420 .core @lead
-    * op lessThan *tmp421 *tmp420 .targetLead
-    * jump *label307 equal *tmp421 false
+ 1245 jump *label307 greaterThanEq *tmp420 .targetLead
  1246 set *tmp416 false
  1247 jump *label304 always
  1248 jump *label308 always
  1249 label *label307
  1250 label *label308
  1251 sensor *tmp423 .core @graphite
-    * op lessThan *tmp424 *tmp423 .targetGraphite
-    * jump *label309 equal *tmp424 false
+ 1252 jump *label309 greaterThanEq *tmp423 .targetGraphite
  1253 set *tmp416 false
  1254 jump *label304 always
  1255 jump *label310 always
  1256 label *label309
  1257 label *label310
  1258 sensor *tmp426 .core @silicon
-    * op lessThan *tmp427 *tmp426 .targetSilicon
-    * jump *label311 equal *tmp427 false
+ 1259 jump *label311 greaterThanEq *tmp426 .targetSilicon
  1260 set *tmp416 false
  1261 jump *label304 always
  1262 jump *label312 always
  1263 label *label311
  1264 label *label312
  1265 sensor *tmp429 .core @titanium
-    * op lessThan *tmp430 *tmp429 .targetTitanium
-    * jump *label313 equal *tmp430 false
+ 1266 jump *label313 greaterThanEq *tmp429 .targetTitanium
  1267 set *tmp416 false
  1268 jump *label304 always
  1269 jump *label314 always
  1270 label *label313
  1271 label *label314
  1272 sensor *tmp432 .core @metaglass
-    * op lessThan *tmp433 *tmp432 .targetMetaglass
-    * jump *label315 equal *tmp433 false
+ 1273 jump *label315 greaterThanEq *tmp432 .targetMetaglass
  1274 set *tmp416 false
  1275 jump *label304 always
  1276 jump *label316 always
  1277 label *label315
  1278 label *label316
  1279 sensor *tmp435 .core @thorium
-    * op lessThan *tmp436 *tmp435 .targetThorium
-    * jump *label317 equal *tmp436 false
+ 1280 jump *label317 greaterThanEq *tmp435 .targetThorium
  1281 set *tmp416 false
  1282 jump *label304 always
  1283 jump *label318 always
 
  1287 jump *label304 always
  1288 set *tmp416 null
  1289 label *label304
-    * op equal *tmp438 *tmp416 false
-    * jump *label303 equal *tmp438 false
+ 1290 jump *label303 notEqual *tmp416 false
  1291 setaddr :supplyBase*retaddr *label319 (h:*label319)
  1292 call *label33 *invalid :supplyBase*retval (m:*label319) (h:*label319)
  1293 label *label319
 
  1347 label *label326
  1348 label *label327
  1349 sensor *tmp447 @unit @firstItem
-    * op notEqual *tmp448 *tmp447 null
-    * jump *label330 equal *tmp448 false
+ 1350 jump *label330 equal *tmp447 null
  1351 ucontrol itemDrop @air 1000
  1352 jump *label331 always
  1353 label *label330
 
  1355 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1356 label *label328
  1357 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
-    * op equal *tmp451 *tmp450 false
-    * jump *label327 notEqual *tmp451 false
+ 1358 jump *label327 equal *tmp450 false
  1359 label *label329
  1360 label *label325
  1361 return :moveToEmpty*retaddr
 
  1363 label *label17
  1364 label *label333
  1365 sensor *tmp452 @unit @firstItem
-    * op notEqual *tmp453 *tmp452 null
-    * jump *label335 equal *tmp453 false
+ 1366 jump *label335 equal *tmp452 null
  1367 ucontrol itemDrop @air 1000
  1368 label *label334
  1369 jump *label333 always
 
  1377 call *label11 *invalid :status3*retval (m:*label337) (h:*label337)
  1378 label *label337
  1379 sensor *tmp454 @unit @firstItem
-    * op equal *tmp455 *tmp454 :depositItems:item
-    * jump *label338 equal *tmp455 false
+ 1380 jump *label338 notEqual *tmp454 :depositItems:item
  1381 set :moveToBlock:block :depositItems:block
  1382 set :moveToBlock:radius 6
  1383 setaddr :moveToBlock*retaddr *label340 (h:*label340)
 
  1390 sensor *tmp458 @unit @firstItem
  1391 op mul *tmp459 *tmp458 :depositItems:cap
  1392 sensor *tmp460 :depositItems:block :depositItems:item
-    * op greaterThan *tmp461 *tmp459 *tmp460
-    * jump *label341 notEqual *tmp461 false
+ 1393 jump *label341 greaterThan *tmp459 *tmp460
  1394 label *label343
  1395 jump *label339 always
  1396 label *label338
  1397 label *label344
  1398 sensor *tmp462 @unit @firstItem
-    * op notEqual *tmp463 *tmp462 null
-    * jump *label346 equal *tmp463 false
+ 1399 jump *label346 equal *tmp462 null
  1400 ucontrol itemDrop @air 1000
  1401 label *label345
  1402 jump *label344 always
 
  1429 call *label16 *invalid :moveToEmpty*retval (m:*label351) (h:*label351)
  1430 label *label351
  1431 sensor *tmp465 @unit @firstItem
-    * op notEqual *tmp466 *tmp465 :mineOre:ore
-    * jump *label352 equal *tmp466 false
+ 1432 jump *label352 equal *tmp465 :mineOre:ore
  1433 setaddr :dropAll*retaddr *label354 (h:*label354)
  1434 call *label17 *invalid :dropAll*retval (m:*label354) (h:*label354)
  1435 label *label354
 
  1452 label *label359
  1453 label *label360
  1454 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp474 @second :mineOre:stop
-    * jump *label361 equal *tmp474 false
+ 1455 jump *label361 lessThanEq @second :mineOre:stop
  1456 jump *label358 always
  1457 jump *label362 always
  1458 label *label361
  1459 label *label362
  1460 label *label357
  1461 sensor *tmp476 @unit @totalItems
-    * op lessThan *tmp477 *tmp476 :mineOre:amount
-    * jump *label356 notEqual *tmp477 false
+ 1462 jump *label356 lessThan *tmp476 :mineOre:amount
  1463 label *label358
  1464 ucontrol unbind
  1465 set :depositItems:block :mineOre:block
 
  1489 end
  1490 label *label20
  1491 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
-    * op equal *tmp482 *tmp480 false
-    * jump *label368 equal *tmp482 false
+ 1492 jump *label368 notEqual *tmp480 false
  1493 set :error:error "Cannot locate ore"
  1494 setaddr :error*retaddr *label370 (h:*label370)
  1495 call *label13 *invalid :error*retval (m:*label370) (h:*label370)
 
  1507 label *label372
  1508 label *label373
  1509 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484
-    * op equal *tmp485 *tmp484 false
-    * jump *label375 equal *tmp485 false
+ 1510 jump *label375 notEqual *tmp484 false
  1511 op sub *tmp486 :moveTo:radius 0.5
  1512 ucontrol approach :moveTo:x :moveTo:y *tmp486
  1513 label *label374

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    84 setaddr :error*retaddr *label58 (h:*label58)
    85 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    86 label *label58
-    * jump *label57 always
    87 label *label56
    88 label *label57
    89 write @pneumatic-drill .display ".nextBlock"
 
   169 sensor *tmp168 .battery @totalPower
   170 jump *label74 greaterThanEq *tmp168 300
   171 jump *label72 always
-    * jump *label75 always
   172 label *label74
   173 label *label75
   174 label *label71
 
   345 setaddr :error*retaddr *label114 (h:*label114)
   346 call *label13 *invalid :error*retval (m:*label114) (h:*label114)
   347 label *label114
-    * jump *label113 always
   348 label *label112
   349 label *label113
   350 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   415 set .thoriumContainer :buildRemoteBlock*retval
   416 jump *label124 notEqual .thoriumContainer null
   417 set .thoriumContainer .thoriumDrill
-    * jump *label125 always
   418 label *label124
   419 label *label125
   420 write .thoriumDrill .display ".thoriumDrill"
 
   552 call *label25 *invalid :supplyBlockFromCore*retval (m:*label164) (h:*label164)
   553 label *label164
   554 label *label162
-    * jump *label160 always
   555 label *label159
   556 label *label160
   557 set :fetchBlock:block .thoriumContainer
 
   591 call *label24 *invalid :supplyBlock*retval (m:*label179) (h:*label179)
   592 label *label179
   593 set :supplyBase0:supplied true
-    * jump *label177 always
   594 label *label176
   595 label *label177
-    * jump *label175 always
   596 label *label174
   597 label *label175
   598 sensor *tmp267 .core @silicon
 
   623 call *label24 *invalid :supplyBlock*retval (m:*label189) (h:*label189)
   624 label *label189
   625 set :supplyBase0:supplied true
-    * jump *label187 always
   626 label *label186
   627 label *label187
   628 label *label183
-    * jump *label181 always
   629 label *label180
   630 label *label181
   631 sensor *tmp276 .battery @totalPower
 
   642 call *label24 *invalid :supplyBlock*retval (m:*label195) (h:*label195)
   643 label *label195
   644 set :supplyBase0:supplied true
-    * jump *label193 always
   645 label *label192
   646 label *label193
-    * jump *label191 always
   647 label *label190
   648 label *label191
-    * jump *label173 always
   649 label *label172
   650 label *label173
   651 sensor *tmp282 .core @titanium
 
   753 label *label213
   754 label *label207
   755 label *label203
-    * jump *label201 always
   756 label *label200
   757 label *label201
   758 jump *label199 always
 
   808 label *label234
   809 set :buildRemoteBlock*retval :buildBlock*retval
   810 jump *label230 always
-    * jump *label232 always
   811 label *label231
   812 label *label232
   813 set :buildRemoteBlock*retval false
 
   942 sensor *tmp327 @unit @mining
   943 jump *label256 equal *tmp327 false
   944 ucontrol stop
-    * jump *label257 always
   945 label *label256
   946 label *label257
   947 ubind :lineUpUnits:unit
 
  1003 op land *tmp338 *tmp336 *tmp337
  1004 jump *label270 equal *tmp338 false
  1005 ucontrol itemDrop @air 1000
-    * jump *label271 always
  1006 label *label270
  1007 label *label271
  1008 label *label268
 
  1037 setaddr :mineOre*retaddr *label277 (h:*label277)
  1038 call *label21 *invalid :mineOre*retval (m:*label277) (h:*label277)
  1039 label *label277
-    * jump *label276 always
  1040 label *label275
  1041 label *label276
  1042 label *label273
 
  1071 op land *tmp354 *tmp352 *tmp353
  1072 jump *label286 equal *tmp354 false
  1073 ucontrol itemDrop @air 1000
-    * jump *label287 always
  1074 label *label286
  1075 label *label287
  1076 label *label284
 
  1220 jump *label305 greaterThanEq *tmp417 .targetCopper
  1221 set *tmp416 false
  1222 jump *label304 always
-    * jump *label306 always
  1223 label *label305
  1224 label *label306
  1225 sensor *tmp420 .core @lead
  1226 jump *label307 greaterThanEq *tmp420 .targetLead
  1227 set *tmp416 false
  1228 jump *label304 always
-    * jump *label308 always
  1229 label *label307
  1230 label *label308
  1231 sensor *tmp423 .core @graphite
  1232 jump *label309 greaterThanEq *tmp423 .targetGraphite
  1233 set *tmp416 false
  1234 jump *label304 always
-    * jump *label310 always
  1235 label *label309
  1236 label *label310
  1237 sensor *tmp426 .core @silicon
  1238 jump *label311 greaterThanEq *tmp426 .targetSilicon
  1239 set *tmp416 false
  1240 jump *label304 always
-    * jump *label312 always
  1241 label *label311
  1242 label *label312
  1243 sensor *tmp429 .core @titanium
  1244 jump *label313 greaterThanEq *tmp429 .targetTitanium
  1245 set *tmp416 false
  1246 jump *label304 always
-    * jump *label314 always
  1247 label *label313
  1248 label *label314
  1249 sensor *tmp432 .core @metaglass
  1250 jump *label315 greaterThanEq *tmp432 .targetMetaglass
  1251 set *tmp416 false
  1252 jump *label304 always
-    * jump *label316 always
  1253 label *label315
  1254 label *label316
  1255 sensor *tmp435 .core @thorium
  1256 jump *label317 greaterThanEq *tmp435 .targetThorium
  1257 set *tmp416 false
  1258 jump *label304 always
-    * jump *label318 always
  1259 label *label317
  1260 label *label318
  1261 set *tmp416 true
 
  1324 sensor *tmp447 @unit @firstItem
  1325 jump *label330 equal *tmp447 null
  1326 ucontrol itemDrop @air 1000
-    * jump *label331 always
  1327 label *label330
  1328 label *label331
  1329 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1407 setaddr :dropAll*retaddr *label354 (h:*label354)
  1408 call *label17 *invalid :dropAll*retval (m:*label354) (h:*label354)
  1409 label *label354
-    * jump *label353 always
  1410 label *label352
  1411 label *label353
  1412 set :status3:text "Mining..."
 
  1421 op land *tmp472 *tmp470 *tmp471
  1422 jump *label359 equal *tmp472 false
  1423 jump *label358 always
-    * jump *label360 always
  1424 label *label359
  1425 label *label360
  1426 ucontrol mine :mineOre:x :mineOre:y
  1427 jump *label361 lessThanEq @second :mineOre:stop
  1428 jump *label358 always
-    * jump *label362 always
  1429 label *label361
  1430 label *label362
  1431 label *label357
 
  1465 setaddr :error*retaddr *label370 (h:*label370)
  1466 call *label13 *invalid :error*retval (m:*label370) (h:*label370)
  1467 label *label370
-    * jump *label369 always
  1468 label *label368
  1469 label *label369
  1470 label *label367

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    11 set .smelter null
    12 set .titaniumDrill null
    13 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
    14 set .thoriumBattery null
    15 set .thoriumContainer null
    16 set .thoriumGenerator null
 
    56 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    57 label *label52
    58 set :buildFirstTitaniumDrill:cfg "22D2<2222248"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   59 set :meetTarget.1:cfg "22D2<2222248"
    60 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    61 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
    62 label *label54
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   63 write @titanium processor1 ".nextBlock"
+   64 write .coreX processor4 ":findDrillLocation:x"
+   65 write .coreY processor4 ":findDrillLocation:y"
+   66 write @unit processor4 ":findDrillLocation:unit"
+   67 write @titanium processor4 ":findDrillLocation:item"
+   68 write @ore-titanium processor4 ":findDrillLocation:ore"
+   69 write 2 processor4 ":findDrillLocation:size"
+   70 write 4 processor4 ":findDrillLocation:limit"
+   71 write false processor4 ":findDrillLocation*finished"
+   72 write 1 processor4 "@counter"
    73 label *label55
    74 wait 1e-15
-    * read *tmp153 .oreLocator ":findDrillLocation*finished"
+   75 read *tmp153 processor4 ":findDrillLocation*finished"
    76 jump *label55 equal *tmp153 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   77 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   78 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   79 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    80 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    81 set :error:error "Cannot locate spot for titanium drill"
    82 setaddr :error*retaddr *label58 (h:*label58)
 
    84 label *label58
    85 label *label56
    86 label *label57
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   87 write @pneumatic-drill processor1 ".nextBlock"
+   88 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   89 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   90 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   91 write 2 processor5 "@counter"
    92 label *label59
    93 wait 1e-15
-    * read *tmp159 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   94 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    95 jump *label59 equal *tmp159 false
-    * read *tmp142 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   96 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
    97 jump *label53 always
-    * set *tmp142 null
    98 label *label53
    99 set .titaniumDrill *tmp142
-    * write .titaniumDrill .display ".titaniumDrill"
+  100 write *tmp142 processor1 ".titaniumDrill"
   101 set :buildBlockFromCfg.1:cfg "26222PK22239"
   102 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   103 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   118 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   119 label *label63
   120 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  121 write processor6 :buildBlockFromCfg*retval ".timer"
+  122 write processor1 :buildBlockFromCfg*retval ".display"
+  123 write .core :buildBlockFromCfg*retval ".core"
+  124 write bank1 :buildBlockFromCfg*retval ".bank"
+  125 write .battery :buildBlockFromCfg*retval ".battery"
+  126 write .generator :buildBlockFromCfg*retval ".generator"
+  127 write .smelter :buildBlockFromCfg*retval ".smelter"
+  128 write .press :buildBlockFromCfg*retval ".press"
+  129 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   130 set :buildBlockFromCfg.1:cfg "v0,482222223="
   131 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   132 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   141 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   142 label *label66
   143 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  144 write :buildBlockFromCfg.1*retval .controller ".factory"
+  145 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   146 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  147 write 1 .controller ".flareTarget"
+  148 write 1 processor1 ".flareTarget"
   149 label *label67
   150 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  151 write 3 .controller ".monoTarget"
+  152 write 3 processor1 ".monoTarget"
   153 label *label68
   154 write 85 .controller ".pressTarget"
   155 write 150 .controller ".smelterTarget"
   156 write 30 .controller ".kilnTarget"
   157 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  158 set .siliconSurplus 20
   159 setaddr :buildUnits*retaddr *label69 (h:*label69)
   160 call *label40 *invalid :buildUnits*retval (m:*label69) (h:*label69)
   161 label *label69
 
   186 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   187 label *label78
   188 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  189 write :buildBlockFromCfg.1*retval .controller ".kiln"
   190 set :buildBlockFromCfg.1:cfg ")9PPP22P224C"
   191 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   192 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
 
   229 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
   230 label *label87
   231 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  232 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  233 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   234 set :buildBlockFromCfg.1:cfg "{<62d2PF2225L"
   235 setaddr :buildBlockFromCfg.1*retaddr *label88 (h:*label88)
   236 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label88) (h:*label88)
 
   241 set .siliconSurplus 1000
   242 set .metaglassSurplus 200
   243 set :setPolyTarget:target 6
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  244 write 6 .controller ".polyTarget"
+  245 write 6 processor1 ".polyTarget"
   246 label *label90
   247 set :buildBlockFromCfg.1:cfg "4;1PK2222224P"
   248 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
 
   275 jump *label96 always
   276 label *label98
   277 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  278 write 3 .controller ".flareTarget"
+  279 write 3 processor1 ".flareTarget"
   280 label *label100
   281 label *label101
   282 read *tmp100 .controller ".flares"
 
   289 label *label103
   290 set .graphiteSurplus 100
   291 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  292 write 5 .controller ".monoTarget"
+  293 write 5 processor1 ".monoTarget"
   294 label *label105
-    * write @ore-titanium .display ".nextBlock"
+  295 write @ore-titanium processor1 ".nextBlock"
   296 wait 0.000000001
   297 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  298 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  299 write .coreX processor4 ":findDrillLocation:x"
+  300 write .coreY processor4 ":findDrillLocation:y"
+  301 write @unit processor4 ":findDrillLocation:unit"
+  302 write @titanium processor4 ":findDrillLocation:item"
+  303 write @ore-titanium processor4 ":findDrillLocation:ore"
+  304 write 4 processor4 ":findDrillLocation:size"
+  305 write 1000000000 processor4 ":findDrillLocation:limit"
+  306 write false processor4 ":findDrillLocation*finished"
+  307 write 1 processor4 "@counter"
   308 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  309 write .controller processor5 ":buildTitaniumDrills:aController"
+  310 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  311 write false processor5 ":buildTitaniumDrills*finished"
+  312 write 3 processor5 "@counter"
   313 label *label107
   314 wait 1e-15
-    * read *tmp203 .blockBuilder ":buildTitaniumDrills*finished"
+  315 read *tmp203 processor5 ":buildTitaniumDrills*finished"
   316 jump *label107 equal *tmp203 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  317 write false processor4 ":stopLocation*finished"
+  318 write 3 processor4 "@counter"
   319 label *label106
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  320 write null processor1 ".nextBlock"
+  321 write .coreX processor4 ":layoutThoriumDrill:x"
+  322 write .coreY processor4 ":layoutThoriumDrill:y"
+  323 write @unit processor4 ":layoutThoriumDrill:unit"
+  324 write 7 processor4 ":layoutThoriumDrill:limit"
+  325 write false processor4 ":layoutThoriumDrill*finished"
+  326 write 2 processor4 "@counter"
   327 label *label109
   328 wait 1e-15
-    * read *tmp208 .oreLocator ":layoutThoriumDrill*finished"
+  329 read *tmp208 processor4 ":layoutThoriumDrill*finished"
   330 jump *label109 equal *tmp208 false
   331 set :meetTarget.1:cfg "22U2PPF2225M"
   332 setaddr :meetTarget.1*retaddr *label110 (h:*label110)
 
   334 label *label110
   335 label *label111
   336 wait 1e-15
-    * read *tmp210 .oreLocator ":layoutThoriumDrill*finished"
+  337 read *tmp210 processor4 ":layoutThoriumDrill*finished"
   338 jump *label111 equal *tmp210 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  339 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   340 jump *label112 notEqual :buildThoriumDrill:result false
   341 set :error:error "Cannot locate spot for thorium drill"
   342 setaddr :error*retaddr *label114 (h:*label114)
 
   344 label *label114
   345 label *label112
   346 label *label113
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp56 .oreLocator ".drillX"
-    * write *tmp56 .blockBuilder ":buildBlockAt:x"
-    * read *tmp57 .oreLocator ".drillY"
-    * write *tmp57 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  347 write @laser-drill processor5 ":buildBlockAt:block"
+  348 read *tmp56 processor4 ".drillX"
+  349 write *tmp56 processor5 ":buildBlockAt:x"
+  350 read *tmp57 processor4 ".drillY"
+  351 write *tmp57 processor5 ":buildBlockAt:y"
+  352 write null processor5 ":buildBlockAt:rotation"
+  353 write 0 processor5 ":buildBlockAt:config"
+  354 write -1 processor5 ":buildBlockAt:index"
+  355 write false processor5 ":buildBlockAt*finished"
+  356 write 1 processor5 "@counter"
   357 label *label115
   358 wait 1e-15
-    * read *tmp220 .blockBuilder ":buildBlockAt*finished"
+  359 read *tmp220 processor5 ":buildBlockAt*finished"
   360 jump *label115 equal *tmp220 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  361 read .thoriumDrill processor5 ":buildBlockAt*retval"
   362 set :buildRemoteBlock:cfg ")9PPP22P224C"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  363 read :buildRemoteBlock:x processor4 ".water1X"
+  364 read :buildRemoteBlock:y processor4 ".water1Y"
   365 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   366 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   367 label *label116
   368 set :buildRemoteBlock:cfg ")9PPP22P224C"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  369 read :buildRemoteBlock:x processor4 ".water2X"
+  370 read :buildRemoteBlock:y processor4 ".water2Y"
   371 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   372 call *label36 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   373 label *label117
   374 set :buildRemoteBlock:cfg "~)5UZKP22224F"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  375 read :buildRemoteBlock:x processor4 ".generatorX"
+  376 read :buildRemoteBlock:y processor4 ".generatorY"
   377 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   378 call *label36 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   379 label *label118
   380 set .thoriumGenerator :buildRemoteBlock*retval
   381 set :buildRemoteBlock:cfg "v0,482222223="
-    * read :buildRemoteBlock:x .oreLocator ".node1X"
-    * read :buildRemoteBlock:y .oreLocator ".node1Y"
+  382 read :buildRemoteBlock:x processor4 ".node1X"
+  383 read :buildRemoteBlock:y processor4 ".node1Y"
   384 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   385 call *label36 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   386 label *label119
-    * set :buildRemoteBlock:cfg "v0,482222223="
-    * read :buildRemoteBlock:x .oreLocator ".node2X"
-    * read :buildRemoteBlock:y .oreLocator ".node2Y"
+  387 read :buildRemoteBlock:x processor4 ".node2X"
+  388 read :buildRemoteBlock:y processor4 ".node2Y"
   389 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   390 call *label36 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   391 label *label120
   392 set :buildRemoteBlock:cfg "222<2:22223N"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  393 read :buildRemoteBlock:x processor4 ".panelX"
+  394 read :buildRemoteBlock:y processor4 ".panelY"
   395 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   396 call *label36 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   397 label *label121
   398 set :buildRemoteBlock:cfg "z2<7F22222233"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  399 read :buildRemoteBlock:x processor4 ".batteryX"
+  400 read :buildRemoteBlock:y processor4 ".batteryY"
   401 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   402 call *label36 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   403 label *label122
   404 set .thoriumBattery :buildRemoteBlock*retval
   405 set :buildRemoteBlock:cfg "2222222224O"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  406 read :buildRemoteBlock:x processor4 ".containerX"
+  407 read :buildRemoteBlock:y processor4 ".containerY"
   408 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   409 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   410 label *label123
   411 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label124 notEqual .thoriumContainer null
+  412 jump *label124 notEqual :buildRemoteBlock*retval null
   413 set .thoriumContainer .thoriumDrill
   414 label *label124
   415 label *label125
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  416 write .thoriumDrill processor1 ".thoriumDrill"
+  417 write .thoriumContainer processor1 ".thoriumContainer"
+  418 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  419 write false processor3 ":setThoriumContainer*finished"
+  420 write 3 processor3 "@counter"
   421 label *label126
   422 wait 1e-15
-    * read *tmp233 .polyController ":setThoriumContainer*finished"
+  423 read *tmp233 processor3 ":setThoriumContainer*finished"
   424 jump *label126 equal *tmp233 false
   425 label *label108
-    * write null .display ".nextBlock"
+  426 write null processor1 ".nextBlock"
   427 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  428 write 1 .controller ".megaTarget"
+  429 write 1 processor1 ".megaTarget"
   430 label *label127
   431 label *label128
   432 read *tmp102 .controller ".polys"
 
   452 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label135) (h:*label135)
   453 label *label135
   454 set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
-    * write :buildMultiplicativeReconstructor:multiReconstructor .controller ".multiReconstructor"
-    * write :buildMultiplicativeReconstructor:multiReconstructor .display ".multiReconstructor"
+  455 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  456 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   457 label *label134
   458 set .metaglassSurplus 50
   459 setaddr :buildUnits*retaddr *label136 (h:*label136)
 
   655 label *label197
   656 set :supplyBase0:titaniumTrigger *tmp284
   657 sensor *tmp288 .titaniumDrill @titanium
-    * jump *label198 greaterThanEq *tmp288 :supplyBase0:titaniumTrigger
+  658 jump *label198 greaterThanEq *tmp288 *tmp284
   659 jump *label200 notEqual :supplyBase0:supplied false
   660 sensor *tmp293 .battery @totalPower
   661 op mul *tmp294 .unloader1 .powerTarget
 
   685 set *tmp303 @sand
   686 label *label210
   687 set :supplyBase0:ore *tmp303
-    * set :mineOre.1:ore :supplyBase0:ore
+  688 set :mineOre.1:ore *tmp303
   689 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   690 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
   691 label *label211
 
   740 set *tmp316 @sand
   741 label *label226
   742 set :supplyBase0:ore.1 *tmp316
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  743 set :mineOre.1:ore *tmp316
   744 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   745 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)
   746 label *label227
 
   786 set :buildRemoteBlock:th :unpackCfg:th
   787 set :buildRemoteBlock:rotation :unpackCfg:rotation
   788 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  789 set :buildBlock:block :unpackCfg:type
   790 set :buildBlock:x :buildRemoteBlock:x
   791 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  792 set :buildBlock:copper :unpackCfg:cu
+  793 set :buildBlock:lead :unpackCfg:pb
+  794 set :buildBlock:graphite :unpackCfg:gr
+  795 set :buildBlock:silicon :unpackCfg:si
+  796 set :buildBlock:titanium :unpackCfg:ti
+  797 set :buildBlock:metaglass :unpackCfg:mg
+  798 set :buildBlock:thorium :unpackCfg:th
+  799 set :buildBlock:rotation :unpackCfg:rotation
   800 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  801 set :buildBlock:index :unpackCfg:ind
   802 setaddr :buildBlock*retaddr *label234 (h:*label234)
   803 call *label35 *invalid :buildBlock*retval (m:*label234) (h:*label234)
   804 label *label234
 
   808 label *label232
   809 set :buildRemoteBlock*retval false
   810 jump *label230 always
-    * set :buildRemoteBlock*retval null
   811 label *label230
   812 return :buildRemoteBlock*retaddr
   813 end
 
   828 set :buildBlockFromCfg:th :unpackCfg:th
   829 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   830 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp320 .coreX :buildBlockFromCfg:x
-    * op add *tmp321 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  831 op add *tmp320 .coreX :unpackCfg:x
+  832 op add *tmp321 .coreY :unpackCfg:y
+  833 set :buildBlock:block :unpackCfg:type
   834 set :buildBlock:x *tmp320
   835 set :buildBlock:y *tmp321
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  836 set :buildBlock:copper :unpackCfg:cu
+  837 set :buildBlock:lead :unpackCfg:pb
+  838 set :buildBlock:graphite :unpackCfg:gr
+  839 set :buildBlock:silicon :unpackCfg:si
+  840 set :buildBlock:titanium :unpackCfg:ti
+  841 set :buildBlock:metaglass :unpackCfg:mg
+  842 set :buildBlock:thorium :unpackCfg:th
+  843 set :buildBlock:rotation :unpackCfg:rotation
   844 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  845 set :buildBlock:index :unpackCfg:ind
   846 setaddr :buildBlock*retaddr *label237 (h:*label237)
   847 call *label35 *invalid :buildBlock*retval (m:*label237) (h:*label237)
   848 label *label237
   849 set :buildBlockFromCfg*retval :buildBlock*retval
   850 jump *label235 always
-    * set :buildBlockFromCfg*retval null
   851 label *label235
   852 return :buildBlockFromCfg*retaddr
   853 end
 
   874 set :meetTarget.1:ti :unpackCfg:ti
   875 set :meetTarget.1:mg :unpackCfg:mg
   876 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  877 set :meetTarget:block :unpackCfg:type
+  878 set :meetTarget:copper :unpackCfg:cu
+  879 set :meetTarget:lead :unpackCfg:pb
+  880 set :meetTarget:graphite :unpackCfg:gr
+  881 set :meetTarget:silicon :unpackCfg:si
+  882 set :meetTarget:titanium :unpackCfg:ti
+  883 set :meetTarget:metaglass :unpackCfg:mg
+  884 set :meetTarget:thorium :unpackCfg:th
   885 setaddr :meetTarget*retaddr *label242 (h:*label242)
   886 call *label34 *invalid :meetTarget*retval (m:*label242) (h:*label242)
   887 label *label242
 
  1084 end
  1085 label *label27
  1086 set :unpackCfg:index 0
-    * set *tmp360 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1087 set *tmp360 0
+ 1088 op add :unpackCfg:index 0 1
  1089 read *tmp361 :unpackCfg:cfg *tmp360
  1090 op sub *tmp362 *tmp361 50
  1091 lookup block :unpackCfg:type *tmp362
-    * set *tmp364 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1092 set *tmp364 1
+ 1093 op add :unpackCfg:index 1 1
  1094 read *tmp365 :unpackCfg:cfg *tmp364
  1095 op sub *tmp366 *tmp365 50
  1096 op div :unpackCfg:x *tmp366 2
-    * set *tmp368 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1097 set *tmp368 2
+ 1098 op add :unpackCfg:index 2 1
  1099 read *tmp369 :unpackCfg:cfg *tmp368
  1100 op sub *tmp370 *tmp369 50
  1101 op div :unpackCfg:y *tmp370 2
-    * set *tmp372 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1102 set *tmp372 3
+ 1103 op add :unpackCfg:index 3 1
  1104 read *tmp373 :unpackCfg:cfg *tmp372
  1105 op sub :unpackCfg:cu *tmp373 50
-    * set *tmp375 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1106 set *tmp375 4
+ 1107 op add :unpackCfg:index 4 1
  1108 read *tmp376 :unpackCfg:cfg *tmp375
  1109 op sub :unpackCfg:pb *tmp376 50
-    * set *tmp378 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1110 set *tmp378 5
+ 1111 op add :unpackCfg:index 5 1
  1112 read *tmp379 :unpackCfg:cfg *tmp378
  1113 op sub :unpackCfg:gr *tmp379 50
-    * set *tmp381 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1114 set *tmp381 6
+ 1115 op add :unpackCfg:index 6 1
  1116 read *tmp382 :unpackCfg:cfg *tmp381
  1117 op sub :unpackCfg:si *tmp382 50
-    * set *tmp384 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1118 set *tmp384 7
+ 1119 op add :unpackCfg:index 7 1
  1120 read *tmp385 :unpackCfg:cfg *tmp384
  1121 op sub :unpackCfg:ti *tmp385 50
-    * set *tmp387 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1122 set *tmp387 8
+ 1123 op add :unpackCfg:index 8 1
  1124 read *tmp388 :unpackCfg:cfg *tmp387
  1125 op sub :unpackCfg:mg *tmp388 50
-    * set *tmp390 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1126 set *tmp390 9
+ 1127 op add :unpackCfg:index 9 1
  1128 read *tmp391 :unpackCfg:cfg *tmp390
  1129 op sub :unpackCfg:th *tmp391 50
-    * set *tmp393 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1130 set *tmp393 10
+ 1131 op add :unpackCfg:index 10 1
  1132 read *tmp394 :unpackCfg:cfg *tmp393
  1133 op sub :unpackCfg:rotation *tmp394 50
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp399 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1134 op add :unpackCfg:index 11 1
+ 1135 set *tmp399 12
+ 1136 op add :unpackCfg:index 12 1
  1137 read *tmp400 :unpackCfg:cfg *tmp399
  1138 op sub :unpackCfg:ind *tmp400 50
  1139 label *label289
 
  1198 op add *tmp408 :meetTarget:metaglass .metaglassSurplus
  1199 write *tmp408 .controller ".kilnTarget"
  1200 op add *tmp409 :meetTarget:lead .leadSurplus
-    * write *tmp409 .controller ".leadReserve"
+ 1201 write *tmp404 .controller ".leadReserve"
  1202 op sign *tmp410 :meetTarget:silicon
  1203 op mul *tmp411 *tmp410 20
  1204 op add *tmp412 :meetTarget:silicon *tmp411
 
  1208 op add *tmp415 :meetTarget:graphite *tmp414
  1209 write *tmp415 .controller ".graphiteReserve"
  1210 write .targetLead processor8 ".leadTarget"
-    * write .targetCopper processor8 ".copperTarget"
+ 1211 write :meetTarget:copper processor8 ".copperTarget"
  1212 label *label301
  1213 sensor *tmp417 .core @copper
  1214 jump *label305 greaterThanEq *tmp417 .targetCopper
 
  1254 label *label318
  1255 set *tmp416 true
  1256 jump *label304 always
-    * set *tmp416 null
  1257 label *label304
  1258 jump *label303 notEqual *tmp416 false
  1259 setaddr :supplyBase*retaddr *label319 (h:*label319)
 
  1291 jump *label322 equal *tmp445 false
  1292 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1293 jump *label320 always
-    * set :buildBlock*retval null
  1294 label *label320
  1295 return :buildBlock*retaddr
  1296 end
 
  1389 label *label350
  1390 set :mineOre:x :locateOre:x
  1391 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1392 set :moveToEmpty:x :locateOre:x
+ 1393 set :moveToEmpty:y :locateOre:y
  1394 setaddr :moveToEmpty*retaddr *label351 (h:*label351)
  1395 call *label16 *invalid :moveToEmpty*retval (m:*label351) (h:*label351)
  1396 label *label351

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-62 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 label *label43
     4 read *tmp114 processor8 "*signature"
     5 jump *label43 notEqual *tmp114 "0:v1"
 
    53 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    54 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    55 label *label52
-    * set :buildFirstTitaniumDrill:cfg "22D2<2222248"
    56 set :meetTarget.1:cfg "22D2<2222248"
    57 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    58 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
 
   137 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
   138 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
   139 label *label66
-    * set :factory :buildBlockFromCfg.1*retval
   140 write :buildBlockFromCfg.1*retval .controller ".factory"
   141 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   142 write 1 .controller ".flareTarget"
   143 write 1 processor1 ".flareTarget"
   144 label *label67
-    * set :setMonoTarget:target 3
   145 write 3 .controller ".monoTarget"
   146 write 3 processor1 ".monoTarget"
   147 label *label68
 
   179 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   180 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   181 label *label78
-    * set .kiln :buildBlockFromCfg.1*retval
   182 write :buildBlockFromCfg.1*retval .controller ".kiln"
   183 set :buildBlockFromCfg.1:cfg ")9PPP22P224C"
   184 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
 
   221 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   222 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
   223 label *label87
-    * set :reconstructor :buildBlockFromCfg.1*retval
   224 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   225 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   226 set :buildBlockFromCfg.1:cfg "{<62d2PF2225L"
 
   232 label *label89
   233 set .siliconSurplus 1000
   234 set .metaglassSurplus 200
-    * set :setPolyTarget:target 6
   235 write 6 .controller ".polyTarget"
   236 write 6 processor1 ".polyTarget"
   237 label *label90
 
   265 label *label97
   266 jump *label96 always
   267 label *label98
-    * set :setFlareTarget.1:target 3
   268 write 3 .controller ".flareTarget"
   269 write 3 processor1 ".flareTarget"
   270 label *label100
 
   278 jump *label101 always
   279 label *label103
   280 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   281 write 5 .controller ".monoTarget"
   282 write 5 processor1 ".monoTarget"
   283 label *label105
 
   354 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   355 call *label36 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   356 label *label116
-    * set :buildRemoteBlock:cfg ")9PPP22P224C"
   357 read :buildRemoteBlock:x processor4 ".water2X"
   358 read :buildRemoteBlock:y processor4 ".water2Y"
   359 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
 
   412 jump *label126 equal *tmp233 false
   413 label *label108
   414 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   415 write 1 .controller ".megaTarget"
   416 write 1 processor1 ".megaTarget"
   417 label *label127
 
   438 setaddr :buildBlockFromCfg.1*retaddr *label135 (h:*label135)
   439 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label135) (h:*label135)
   440 label *label135
-    * set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
   441 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   442 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   443 label *label134
 
   639 label *label196
   640 set *tmp284 100
   641 label *label197
-    * set :supplyBase0:titaniumTrigger *tmp284
   642 sensor *tmp288 .titaniumDrill @titanium
   643 jump *label198 greaterThanEq *tmp288 *tmp284
   644 jump *label200 notEqual :supplyBase0:supplied false
 
   669 label *label209
   670 set *tmp303 @sand
   671 label *label210
-    * set :supplyBase0:ore *tmp303
   672 set :mineOre.1:ore *tmp303
   673 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   674 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
 
   723 label *label225
   724 set *tmp316 @sand
   725 label *label226
-    * set :supplyBase0:ore.1 *tmp316
   726 set :mineOre.1:ore *tmp316
   727 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   728 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)
 
   759 setaddr :unpackCfg*retaddr *label233 (h:*label233)
   760 call *label27 *invalid :unpackCfg*retval (m:*label233) (h:*label233)
   761 label *label233
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   762 set :buildBlock:block :unpackCfg:type
   763 set :buildBlock:x :buildRemoteBlock:x
   764 set :buildBlock:y :buildRemoteBlock:y
 
   789 setaddr :unpackCfg*retaddr *label236 (h:*label236)
   790 call *label27 *invalid :unpackCfg*retval (m:*label236) (h:*label236)
   791 label *label236
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   792 op add *tmp320 .coreX :unpackCfg:x
   793 op add *tmp321 .coreY :unpackCfg:y
   794 set :buildBlock:block :unpackCfg:type
 
   827 setaddr :unpackCfg*retaddr *label241 (h:*label241)
   828 call *label27 *invalid :unpackCfg*retval (m:*label241) (h:*label241)
   829 label *label241
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   830 set :meetTarget:block :unpackCfg:type
   831 set :meetTarget:copper :unpackCfg:cu
   832 set :meetTarget:lead :unpackCfg:pb
 
  1036 return :supplyBlockFromCore*retaddr
  1037 end
  1038 label *label27
-    * set :unpackCfg:index 0
  1039 set *tmp360 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp361 :unpackCfg:cfg *tmp360
+ 1040 read *tmp361 :unpackCfg:cfg 0
  1041 op sub *tmp362 *tmp361 50
  1042 lookup block :unpackCfg:type *tmp362
  1043 set *tmp364 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp365 :unpackCfg:cfg *tmp364
+ 1044 read *tmp365 :unpackCfg:cfg 1
  1045 op sub *tmp366 *tmp365 50
  1046 op div :unpackCfg:x *tmp366 2
  1047 set *tmp368 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp369 :unpackCfg:cfg *tmp368
+ 1048 read *tmp369 :unpackCfg:cfg 2
  1049 op sub *tmp370 *tmp369 50
  1050 op div :unpackCfg:y *tmp370 2
  1051 set *tmp372 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp373 :unpackCfg:cfg *tmp372
+ 1052 read *tmp373 :unpackCfg:cfg 3
  1053 op sub :unpackCfg:cu *tmp373 50
  1054 set *tmp375 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp376 :unpackCfg:cfg *tmp375
+ 1055 read *tmp376 :unpackCfg:cfg 4
  1056 op sub :unpackCfg:pb *tmp376 50
  1057 set *tmp378 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp379 :unpackCfg:cfg *tmp378
+ 1058 read *tmp379 :unpackCfg:cfg 5
  1059 op sub :unpackCfg:gr *tmp379 50
  1060 set *tmp381 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp382 :unpackCfg:cfg *tmp381
+ 1061 read *tmp382 :unpackCfg:cfg 6
  1062 op sub :unpackCfg:si *tmp382 50
  1063 set *tmp384 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp385 :unpackCfg:cfg *tmp384
+ 1064 read *tmp385 :unpackCfg:cfg 7
  1065 op sub :unpackCfg:ti *tmp385 50
  1066 set *tmp387 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp388 :unpackCfg:cfg *tmp387
+ 1067 read *tmp388 :unpackCfg:cfg 8
  1068 op sub :unpackCfg:mg *tmp388 50
  1069 set *tmp390 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp391 :unpackCfg:cfg *tmp390
+ 1070 read *tmp391 :unpackCfg:cfg 9
  1071 op sub :unpackCfg:th *tmp391 50
  1072 set *tmp393 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp394 :unpackCfg:cfg *tmp393
+ 1073 read *tmp394 :unpackCfg:cfg 10
  1074 op sub :unpackCfg:rotation *tmp394 50
-    * op add :unpackCfg:index 11 1
  1075 set *tmp399 12
-    * op add :unpackCfg:index 12 1
-    * read *tmp400 :unpackCfg:cfg *tmp399
+ 1076 read *tmp400 :unpackCfg:cfg 12
  1077 op sub :unpackCfg:ind *tmp400 50
  1078 label *label289
  1079 return :unpackCfg*retaddr
 
  1136 write *tmp407 .controller ".smelterTarget"
  1137 op add *tmp408 :meetTarget:metaglass .metaglassSurplus
  1138 write *tmp408 .controller ".kilnTarget"
-    * op add *tmp409 :meetTarget:lead .leadSurplus
  1139 write *tmp404 .controller ".leadReserve"
  1140 op sign *tmp410 :meetTarget:silicon
  1141 op mul *tmp411 *tmp410 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-12 instructions):
 
  1036 return :supplyBlockFromCore*retaddr
  1037 end
  1038 label *label27
-    * set *tmp360 0
  1039 read *tmp361 :unpackCfg:cfg 0
  1040 op sub *tmp362 *tmp361 50
  1041 lookup block :unpackCfg:type *tmp362
-    * set *tmp364 1
  1042 read *tmp365 :unpackCfg:cfg 1
  1043 op sub *tmp366 *tmp365 50
  1044 op div :unpackCfg:x *tmp366 2
-    * set *tmp368 2
  1045 read *tmp369 :unpackCfg:cfg 2
  1046 op sub *tmp370 *tmp369 50
  1047 op div :unpackCfg:y *tmp370 2
-    * set *tmp372 3
  1048 read *tmp373 :unpackCfg:cfg 3
  1049 op sub :unpackCfg:cu *tmp373 50
-    * set *tmp375 4
  1050 read *tmp376 :unpackCfg:cfg 4
  1051 op sub :unpackCfg:pb *tmp376 50
-    * set *tmp378 5
  1052 read *tmp379 :unpackCfg:cfg 5
  1053 op sub :unpackCfg:gr *tmp379 50
-    * set *tmp381 6
  1054 read *tmp382 :unpackCfg:cfg 6
  1055 op sub :unpackCfg:si *tmp382 50
-    * set *tmp384 7
  1056 read *tmp385 :unpackCfg:cfg 7
  1057 op sub :unpackCfg:ti *tmp385 50
-    * set *tmp387 8
  1058 read *tmp388 :unpackCfg:cfg 8
  1059 op sub :unpackCfg:mg *tmp388 50
-    * set *tmp390 9
  1060 read *tmp391 :unpackCfg:cfg 9
  1061 op sub :unpackCfg:th *tmp391 50
-    * set *tmp393 10
  1062 read *tmp394 :unpackCfg:cfg 10
  1063 op sub :unpackCfg:rotation *tmp394 50
-    * set *tmp399 12
  1064 read *tmp400 :unpackCfg:cfg 12
  1065 op sub :unpackCfg:ind *tmp400 50
  1066 label *label289

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1393 setaddr :status3*retaddr *label372 (h:*label372)
  1394 call *label11 *invalid :status3*retval (m:*label372) (h:*label372)
  1395 label *label372
+ 1396 op sub *tmp486 :moveTo:radius 0.5
  1397 label *label373
  1398 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484
  1399 jump *label375 notEqual *tmp484 false
-    * op sub *tmp486 :moveTo:radius 0.5
  1400 ucontrol approach :moveTo:x :moveTo:y *tmp486
  1401 label *label374
  1402 jump *label373 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   397 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   398 label *label123
   399 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label124 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label124
-    * label *label125
+  400 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   401 write .thoriumDrill processor1 ".thoriumDrill"
   402 write .thoriumContainer processor1 ".thoriumContainer"
   403 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   660 label *label208
   661 sensor :supplyBase0:coal .core @coal
   662 sensor :supplyBase0:sand .core @sand
-    * jump *label209 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp303 @coal
-    * jump *label210 always
-    * label *label209
-    * set *tmp303 @sand
-    * label *label210
+  663 select *tmp303 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   664 set :mineOre.1:ore *tmp303
   665 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   666 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
 
   709 label *label224
   710 sensor :supplyBase0:coal.1 .core @coal
   711 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label225 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp316 @coal
-    * jump *label226 always
-    * label *label225
-    * set *tmp316 @sand
-    * label *label226
+  712 select *tmp316 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   713 set :mineOre.1:ore *tmp316
   714 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   715 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   627 label *label191
   628 label *label172
   629 label *label173
+  630 set *tmp284 100
   631 sensor *tmp282 .core @titanium
-    * jump *label196 greaterThanEq *tmp282 .targetTitanium
+  632 jump *label197 greaterThanEq *tmp282 .targetTitanium
   633 sensor *tmp285 .core @titanium
   634 op sub *tmp286 .targetTitanium *tmp285
   635 op min *tmp284 7 *tmp286
   636 jump *label197 always
-    * label *label196
-    * set *tmp284 100
   637 label *label197
   638 sensor *tmp288 .titaniumDrill @titanium
   639 jump *label198 greaterThanEq *tmp288 *tmp284

Modifications by Unroll iteration loop at CoreBuilder.mnd:182:5 (-2 instructions):
 
  1054 end
  1055 label *label34
  1056 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp402 *label294
-    * jump *label291 always
-    * multilabel *label294 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp402 *label295
-    * jump *label291 always
-    * multilabel *label295 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp402 *label296
-    * jump *label291 always
-    * multilabel *label296 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp402 *label297
-    * jump *label291 always
-    * multilabel *label297 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp402 *label298
-    * jump *label291 always
-    * multilabel *label298 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp402 *label299
-    * jump *label291 always
-    * multilabel *label299 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp402 *label300
-    * label *label291
-    * op sign *tmp403 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label292
-    * multijump *tmp402 0 0 (m:marker0)
-    * multilabel *label300 (m:marker0)
-    * label *label293
+ 1057 set :meetTarget:t :meetTarget:copper
+ 1058 label *label378
+ 1059 op sign *tmp403 :meetTarget:t
+ 1060 op add :meetTarget:count :meetTarget:count *tmp403
+ 1061 label *label379
+ 1062 set :meetTarget:t :meetTarget:lead
+ 1063 label *label382
+ 1064 op sign *tmp403 :meetTarget:t
+ 1065 op add :meetTarget:count :meetTarget:count *tmp403
+ 1066 label *label383
+ 1067 set :meetTarget:t :meetTarget:graphite
+ 1068 label *label386
+ 1069 op sign *tmp403 :meetTarget:t
+ 1070 op add :meetTarget:count :meetTarget:count *tmp403
+ 1071 label *label387
+ 1072 set :meetTarget:t :meetTarget:silicon
+ 1073 label *label390
+ 1074 op sign *tmp403 :meetTarget:t
+ 1075 op add :meetTarget:count :meetTarget:count *tmp403
+ 1076 label *label391
+ 1077 set :meetTarget:t :meetTarget:titanium
+ 1078 label *label394
+ 1079 op sign *tmp403 :meetTarget:t
+ 1080 op add :meetTarget:count :meetTarget:count *tmp403
+ 1081 label *label395
+ 1082 set :meetTarget:t :meetTarget:metaglass
+ 1083 label *label398
+ 1084 op sign *tmp403 :meetTarget:t
+ 1085 op add :meetTarget:count :meetTarget:count *tmp403
+ 1086 label *label399
+ 1087 set :meetTarget:t :meetTarget:thorium
+ 1088 label *label402
+ 1089 op sign *tmp403 :meetTarget:t
+ 1090 op add :meetTarget:count :meetTarget:count *tmp403
+ 1091 label *label403
+ 1092 label *label293
  1093 write :meetTarget:count .display ".totalTargets"
  1094 write :meetTarget:block .display ".nextBlock"
  1095 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   397 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   398 label *label123
   399 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  400 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   401 write .thoriumDrill processor1 ".thoriumDrill"
   402 write .thoriumContainer processor1 ".thoriumContainer"
   403 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
  1056 set :meetTarget:count 0
  1057 set :meetTarget:t :meetTarget:copper
  1058 label *label378
-    * op sign *tmp403 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp403
+ 1059 op sign *tmp403 :meetTarget:copper
+ 1060 op add :meetTarget:count 0 *tmp403
  1061 label *label379
  1062 set :meetTarget:t :meetTarget:lead
  1063 label *label382
-    * op sign *tmp403 :meetTarget:t
+ 1064 op sign *tmp403 :meetTarget:lead
  1065 op add :meetTarget:count :meetTarget:count *tmp403
  1066 label *label383
  1067 set :meetTarget:t :meetTarget:graphite
  1068 label *label386
-    * op sign *tmp403 :meetTarget:t
+ 1069 op sign *tmp403 :meetTarget:graphite
  1070 op add :meetTarget:count :meetTarget:count *tmp403
  1071 label *label387
  1072 set :meetTarget:t :meetTarget:silicon
  1073 label *label390
-    * op sign *tmp403 :meetTarget:t
+ 1074 op sign *tmp403 :meetTarget:silicon
  1075 op add :meetTarget:count :meetTarget:count *tmp403
  1076 label *label391
  1077 set :meetTarget:t :meetTarget:titanium
  1078 label *label394
-    * op sign *tmp403 :meetTarget:t
+ 1079 op sign *tmp403 :meetTarget:titanium
  1080 op add :meetTarget:count :meetTarget:count *tmp403
  1081 label *label395
  1082 set :meetTarget:t :meetTarget:metaglass
  1083 label *label398
-    * op sign *tmp403 :meetTarget:t
+ 1084 op sign *tmp403 :meetTarget:metaglass
  1085 op add :meetTarget:count :meetTarget:count *tmp403
  1086 label *label399
  1087 set :meetTarget:t :meetTarget:thorium
  1088 label *label402
-    * op sign *tmp403 :meetTarget:t
+ 1089 op sign *tmp403 :meetTarget:thorium
  1090 op add :meetTarget:count :meetTarget:count *tmp403
  1091 label *label403
  1092 label *label293

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   396 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   397 call *label36 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   398 label *label123
-    * set .thoriumContainer :buildRemoteBlock*retval
   399 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   400 write .thoriumDrill processor1 ".thoriumDrill"
   401 write .thoriumContainer processor1 ".thoriumContainer"
 
  1052 return :unpackCfg*retaddr
  1053 end
  1054 label *label34
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1055 label *label378
  1056 op sign *tmp403 :meetTarget:copper
  1057 op add :meetTarget:count 0 *tmp403
  1058 label *label379
-    * set :meetTarget:t :meetTarget:lead
  1059 label *label382
  1060 op sign *tmp403 :meetTarget:lead
  1061 op add :meetTarget:count :meetTarget:count *tmp403
  1062 label *label383
-    * set :meetTarget:t :meetTarget:graphite
  1063 label *label386
  1064 op sign *tmp403 :meetTarget:graphite
  1065 op add :meetTarget:count :meetTarget:count *tmp403
  1066 label *label387
-    * set :meetTarget:t :meetTarget:silicon
  1067 label *label390
  1068 op sign *tmp403 :meetTarget:silicon
  1069 op add :meetTarget:count :meetTarget:count *tmp403
  1070 label *label391
-    * set :meetTarget:t :meetTarget:titanium
  1071 label *label394
  1072 op sign *tmp403 :meetTarget:titanium
  1073 op add :meetTarget:count :meetTarget:count *tmp403
  1074 label *label395
-    * set :meetTarget:t :meetTarget:metaglass
  1075 label *label398
  1076 op sign *tmp403 :meetTarget:metaglass
  1077 op add :meetTarget:count :meetTarget:count *tmp403
  1078 label *label399
-    * set :meetTarget:t :meetTarget:thorium
  1079 label *label402
  1080 op sign *tmp403 :meetTarget:thorium
  1081 op add :meetTarget:count :meetTarget:count *tmp403

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   510 write *tmp249 processor8 ".sandTarget"
   511 jump *label155 equal .thoriumContainer false
   512 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label158 (h:*label158)
-    * call *label9 *invalid :status1*retval (m:*label158) (h:*label158)
-    * label *label158
+  513 label *label407
+  514 write :status1:text .display ".status1"
+  515 label *label408
   516 sensor *tmp251 .thoriumBattery @totalPower
   517 jump *label159 greaterThanEq *tmp251 3000
   518 sensor *tmp254 .core @coal
 
   543 read *tmp101 .controller ".monos"
   544 jump *label166 lessThanEq *tmp101 3
   545 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label169 (h:*label169)
-    * call *label9 *invalid :status1*retval (m:*label169) (h:*label169)
-    * label *label169
+  546 label *label409
+  547 write :status1:text .display ".status1"
+  548 label *label410
   549 set :mineOre.1:ore @coal
   550 setaddr :mineOre.1*retaddr *label170 (h:*label170)
   551 call *label22 *invalid :mineOre.1*retval (m:*label170) (h:*label170)
 
   560 sensor *tmp264 .press @coal
   561 jump *label176 greaterThanEq *tmp264 5
   562 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label178 (h:*label178)
-    * call *label9 *invalid :status1*retval (m:*label178) (h:*label178)
-    * label *label178
+  563 label *label411
+  564 write :status1:text .display ".status1"
+  565 label *label412
   566 set :supplyBlock:block .press
   567 set :supplyBlock:ore @coal
   568 setaddr :supplyBlock*retaddr *label179 (h:*label179)
 
   578 sensor *tmp270 .smelter @coal
   579 jump *label182 greaterThanEq *tmp270 5
   580 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label184 (h:*label184)
-    * call *label9 *invalid :status1*retval (m:*label184) (h:*label184)
-    * label *label184
+  581 label *label413
+  582 write :status1:text .display ".status1"
+  583 label *label414
   584 set :supplyBlock:block .smelter
   585 set :supplyBlock:ore @coal
   586 setaddr :supplyBlock*retaddr *label185 (h:*label185)
 
   592 sensor *tmp273 .smelter @sand
   593 jump *label186 greaterThanEq *tmp273 5
   594 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label188 (h:*label188)
-    * call *label9 *invalid :status1*retval (m:*label188) (h:*label188)
-    * label *label188
+  595 label *label415
+  596 write :status1:text .display ".status1"
+  597 label *label416
   598 set :supplyBlock:block .smelter
   599 set :supplyBlock:ore @sand
   600 setaddr :supplyBlock*retaddr *label189 (h:*label189)
 
   611 sensor *tmp279 .generator @coal
   612 jump *label192 greaterThanEq *tmp279 2
   613 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label194 (h:*label194)
-    * call *label9 *invalid :status1*retval (m:*label194) (h:*label194)
-    * label *label194
+  614 label *label417
+  615 write :status1:text .display ".status1"
+  616 label *label418
   617 set :supplyBlock:block .generator
   618 set :supplyBlock:ore @coal
   619 setaddr :supplyBlock*retaddr *label195 (h:*label195)
 
   641 op mul *tmp294 .unloader1 .powerTarget
   642 jump *label202 greaterThanEq *tmp293 *tmp294
   643 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label204 (h:*label204)
-    * call *label9 *invalid :status1*retval (m:*label204) (h:*label204)
-    * label *label204
+  644 label *label419
+  645 write :status1:text .display ".status1"
+  646 label *label420
   647 set :mineOre.1:ore @coal
   648 setaddr :mineOre.1*retaddr *label205 (h:*label205)
   649 call *label22 *invalid :mineOre.1*retval (m:*label205) (h:*label205)
 
   653 sensor *tmp297 .core @silicon
   654 jump *label206 greaterThanEq *tmp297 .targetSilicon
   655 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label208 (h:*label208)
-    * call *label9 *invalid :status1*retval (m:*label208) (h:*label208)
-    * label *label208
+  656 label *label421
+  657 write :status1:text .display ".status1"
+  658 label *label422
   659 sensor :supplyBase0:coal .core @coal
   660 sensor :supplyBase0:sand .core @sand
   661 select *tmp303 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   668 sensor *tmp304 .core @copper
   669 jump *label212 greaterThanEq *tmp304 .targetCopper
   670 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label214 (h:*label214)
-    * call *label9 *invalid :status1*retval (m:*label214) (h:*label214)
-    * label *label214
+  671 label *label423
+  672 write :status1:text .display ".status1"
+  673 label *label424
   674 set :mineOre.1:ore @copper
   675 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   676 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
 
   680 sensor *tmp307 .core @lead
   681 jump *label216 greaterThanEq *tmp307 .targetLead
   682 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label218 (h:*label218)
-    * call *label9 *invalid :status1*retval (m:*label218) (h:*label218)
-    * label *label218
+  683 label *label425
+  684 write :status1:text .display ".status1"
+  685 label *label426
   686 set :mineOre.1:ore @lead
   687 setaddr :mineOre.1*retaddr *label219 (h:*label219)
   688 call *label22 *invalid :mineOre.1*retval (m:*label219) (h:*label219)
 
   692 sensor *tmp310 .core @metaglass
   693 jump *label220 greaterThanEq *tmp310 .targetMetaglass
   694 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label222 (h:*label222)
-    * call *label9 *invalid :status1*retval (m:*label222) (h:*label222)
-    * label *label222
+  695 label *label427
+  696 write :status1:text .display ".status1"
+  697 label *label428
   698 set :mineOre.1:ore @sand
   699 setaddr :mineOre.1*retaddr *label223 (h:*label223)
   700 call *label22 *invalid :mineOre.1*retval (m:*label223) (h:*label223)
 
   702 jump *label221 always
   703 label *label220
   704 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label224 (h:*label224)
-    * call *label9 *invalid :status1*retval (m:*label224) (h:*label224)
-    * label *label224
+  705 label *label429
+  706 write :status1:text .display ".status1"
+  707 label *label430
   708 sensor :supplyBase0:coal.1 .core @coal
   709 sensor :supplyBase0:sand.1 .core @sand
   710 select *tmp316 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   722 jump *label199 always
   723 label *label198
   724 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label228 (h:*label228)
-    * call *label9 *invalid :status1*retval (m:*label228) (h:*label228)
-    * label *label228
+  725 label *label431
+  726 write :status1:text .display ".status1"
+  727 label *label432
   728 set :fetchBlock:block .titaniumDrill
   729 set :fetchBlock:item @titanium
   730 setaddr :fetchBlock*retaddr *label229 (h:*label229)
 
   883 label *label252
   884 return :lineUpUnits*retaddr
   885 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label258
-    * return :status1*retaddr
-    * end
   886 label *label22
   887 set :status2:text "Mining "
   888 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   511 jump *label155 equal .thoriumContainer false
   512 set :status1:text "Phase 2: servicing thorium drill"
   513 label *label407
-    * write :status1:text .display ".status1"
+  514 write "Phase 2: servicing thorium drill" .display ".status1"
   515 label *label408
   516 sensor *tmp251 .thoriumBattery @totalPower
   517 jump *label159 greaterThanEq *tmp251 3000
 
   544 jump *label166 lessThanEq *tmp101 3
   545 set :status1:text "Phase 1: supplying base"
   546 label *label409
-    * write :status1:text .display ".status1"
+  547 write "Phase 1: supplying base" .display ".status1"
   548 label *label410
   549 set :mineOre.1:ore @coal
   550 setaddr :mineOre.1*retaddr *label170 (h:*label170)
 
   561 jump *label176 greaterThanEq *tmp264 5
   562 set :status1:text "Goal 1: graphite requirement"
   563 label *label411
-    * write :status1:text .display ".status1"
+  564 write "Goal 1: graphite requirement" .display ".status1"
   565 label *label412
   566 set :supplyBlock:block .press
   567 set :supplyBlock:ore @coal
 
   579 jump *label182 greaterThanEq *tmp270 5
   580 set :status1:text "Goal 2: coal for silicon requirement"
   581 label *label413
-    * write :status1:text .display ".status1"
+  582 write "Goal 2: coal for silicon requirement" .display ".status1"
   583 label *label414
   584 set :supplyBlock:block .smelter
   585 set :supplyBlock:ore @coal
 
   593 jump *label186 greaterThanEq *tmp273 5
   594 set :status1:text "Goal 3: sand for silicon requirement"
   595 label *label415
-    * write :status1:text .display ".status1"
+  596 write "Goal 3: sand for silicon requirement" .display ".status1"
   597 label *label416
   598 set :supplyBlock:block .smelter
   599 set :supplyBlock:ore @sand
 
   612 jump *label192 greaterThanEq *tmp279 2
   613 set :status1:text "Goal 4: supplying generator"
   614 label *label417
-    * write :status1:text .display ".status1"
+  615 write "Goal 4: supplying generator" .display ".status1"
   616 label *label418
   617 set :supplyBlock:block .generator
   618 set :supplyBlock:ore @coal
 
   642 jump *label202 greaterThanEq *tmp293 *tmp294
   643 set :status1:text "Goal 5: supplying generator"
   644 label *label419
-    * write :status1:text .display ".status1"
+  645 write "Goal 5: supplying generator" .display ".status1"
   646 label *label420
   647 set :mineOre.1:ore @coal
   648 setaddr :mineOre.1*retaddr *label205 (h:*label205)
 
   654 jump *label206 greaterThanEq *tmp297 .targetSilicon
   655 set :status1:text "Goal 6: silicon requirement"
   656 label *label421
-    * write :status1:text .display ".status1"
+  657 write "Goal 6: silicon requirement" .display ".status1"
   658 label *label422
   659 sensor :supplyBase0:coal .core @coal
   660 sensor :supplyBase0:sand .core @sand
 
   669 jump *label212 greaterThanEq *tmp304 .targetCopper
   670 set :status1:text "Goal 7: copper requirement"
   671 label *label423
-    * write :status1:text .display ".status1"
+  672 write "Goal 7: copper requirement" .display ".status1"
   673 label *label424
   674 set :mineOre.1:ore @copper
   675 setaddr :mineOre.1*retaddr *label215 (h:*label215)
 
   681 jump *label216 greaterThanEq *tmp307 .targetLead
   682 set :status1:text "Goal 8: lead requirement"
   683 label *label425
-    * write :status1:text .display ".status1"
+  684 write "Goal 8: lead requirement" .display ".status1"
   685 label *label426
   686 set :mineOre.1:ore @lead
   687 setaddr :mineOre.1*retaddr *label219 (h:*label219)
 
   693 jump *label220 greaterThanEq *tmp310 .targetMetaglass
   694 set :status1:text "Goal 9: metaglass requirement"
   695 label *label427
-    * write :status1:text .display ".status1"
+  696 write "Goal 9: metaglass requirement" .display ".status1"
   697 label *label428
   698 set :mineOre.1:ore @sand
   699 setaddr :mineOre.1*retaddr *label223 (h:*label223)
 
   703 label *label220
   704 set :status1:text "Goal 10: supplying base"
   705 label *label429
-    * write :status1:text .display ".status1"
+  706 write "Goal 10: supplying base" .display ".status1"
   707 label *label430
   708 sensor :supplyBase0:coal.1 .core @coal
   709 sensor :supplyBase0:sand.1 .core @sand
 
   723 label *label198
   724 set :status1:text "Goal 11: Fetching titanium"
   725 label *label431
-    * write :status1:text .display ".status1"
+  726 write "Goal 11: Fetching titanium" .display ".status1"
   727 label *label432
   728 set :fetchBlock:block .titaniumDrill
   729 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   509 op max *tmp249 0 *tmp248
   510 write *tmp249 processor8 ".sandTarget"
   511 jump *label155 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   512 label *label407
   513 write "Phase 2: servicing thorium drill" .display ".status1"
   514 label *label408
 
   541 label *label155
   542 read *tmp101 .controller ".monos"
   543 jump *label166 lessThanEq *tmp101 3
-    * set :status1:text "Phase 1: supplying base"
   544 label *label409
   545 write "Phase 1: supplying base" .display ".status1"
   546 label *label410
 
   557 jump *label174 greaterThanEq *tmp261 .targetGraphite
   558 sensor *tmp264 .press @coal
   559 jump *label176 greaterThanEq *tmp264 5
-    * set :status1:text "Goal 1: graphite requirement"
   560 label *label411
   561 write "Goal 1: graphite requirement" .display ".status1"
   562 label *label412
 
   574 jump *label180 greaterThanEq *tmp267 .targetSilicon
   575 sensor *tmp270 .smelter @coal
   576 jump *label182 greaterThanEq *tmp270 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   577 label *label413
   578 write "Goal 2: coal for silicon requirement" .display ".status1"
   579 label *label414
 
   587 label *label182
   588 sensor *tmp273 .smelter @sand
   589 jump *label186 greaterThanEq *tmp273 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   590 label *label415
   591 write "Goal 3: sand for silicon requirement" .display ".status1"
   592 label *label416
 
   605 jump *label190 greaterThanEq *tmp276 .powerTarget
   606 sensor *tmp279 .generator @coal
   607 jump *label192 greaterThanEq *tmp279 2
-    * set :status1:text "Goal 4: supplying generator"
   608 label *label417
   609 write "Goal 4: supplying generator" .display ".status1"
   610 label *label418
 
   634 sensor *tmp293 .battery @totalPower
   635 op mul *tmp294 .unloader1 .powerTarget
   636 jump *label202 greaterThanEq *tmp293 *tmp294
-    * set :status1:text "Goal 5: supplying generator"
   637 label *label419
   638 write "Goal 5: supplying generator" .display ".status1"
   639 label *label420
 
   645 label *label202
   646 sensor *tmp297 .core @silicon
   647 jump *label206 greaterThanEq *tmp297 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   648 label *label421
   649 write "Goal 6: silicon requirement" .display ".status1"
   650 label *label422
 
   659 label *label206
   660 sensor *tmp304 .core @copper
   661 jump *label212 greaterThanEq *tmp304 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   662 label *label423
   663 write "Goal 7: copper requirement" .display ".status1"
   664 label *label424
 
   670 label *label212
   671 sensor *tmp307 .core @lead
   672 jump *label216 greaterThanEq *tmp307 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   673 label *label425
   674 write "Goal 8: lead requirement" .display ".status1"
   675 label *label426
 
   681 label *label216
   682 sensor *tmp310 .core @metaglass
   683 jump *label220 greaterThanEq *tmp310 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   684 label *label427
   685 write "Goal 9: metaglass requirement" .display ".status1"
   686 label *label428
 
   690 label *label223
   691 jump *label221 always
   692 label *label220
-    * set :status1:text "Goal 10: supplying base"
   693 label *label429
   694 write "Goal 10: supplying base" .display ".status1"
   695 label *label430
 
   709 label *label201
   710 jump *label199 always
   711 label *label198
-    * set :status1:text "Goal 11: Fetching titanium"
   712 label *label431
   713 write "Goal 11: Fetching titanium" .display ".status1"
   714 label *label432

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   525 label *label161
   526 set :supplyBlockFromCore:target .thoriumGenerator
   527 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label164 (h:*label164)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label164) (h:*label164)
-    * label *label164
+  528 label *label433
+  529 sensor *tmp349 :supplyBlockFromCore:target @itemCapacity
+  530 op min :transportStatus:target *tmp349 30
+  531 set :transportStatus:item :supplyBlockFromCore:item
+  532 setaddr :transportStatus*retaddr *label434 (h:*label434)
+  533 call *label12 *invalid :transportStatus*retval (m:*label434) (h:*label434)
+  534 label *label434
+  535 set :status2:text "Transferring "
+  536 set :status2:item :supplyBlockFromCore:item
+  537 set :status2:block :supplyBlockFromCore:target
+  538 setaddr :status2*retaddr *label435 (h:*label435)
+  539 call *label10 *invalid :status2*retval (m:*label435) (h:*label435)
+  540 label *label435
+  541 set :moveToEmpty:x .coreX
+  542 set :moveToEmpty:y .coreY
+  543 setaddr :moveToEmpty*retaddr *label436 (h:*label436)
+  544 call *label16 *invalid :moveToEmpty*retval (m:*label436) (h:*label436)
+  545 label *label436
+  546 setaddr :dropAll*retaddr *label437 (h:*label437)
+  547 call *label17 *invalid :dropAll*retval (m:*label437) (h:*label437)
+  548 label *label437
+  549 label *label438
+  550 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  551 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  552 op notEqual *tmp352 :supplyBlockFromCore:unitItem null
+  553 op notEqual *tmp353 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  554 op land *tmp354 *tmp352 *tmp353
+  555 jump *label439 equal *tmp354 false
+  556 ucontrol itemDrop @air 1000
+  557 label *label439
+  558 label *label440
+  559 label *label441
+  560 sensor *tmp356 @unit :supplyBlockFromCore:item
+  561 op lessThan *tmp357 *tmp356 30
+  562 sensor *tmp358 .core :supplyBlockFromCore:item
+  563 op land *tmp359 *tmp357 *tmp358
+  564 jump *label438 notEqual *tmp359 false
+  565 label *label442
+  566 set :depositItems:block :supplyBlockFromCore:target
+  567 set :depositItems:item :supplyBlockFromCore:item
+  568 setaddr :depositItems*retaddr *label443 (h:*label443)
+  569 call *label19 *invalid :depositItems*retval (m:*label443) (h:*label443)
+  570 label *label443
+  571 label *label444
   572 label *label162
   573 label *label159
   574 label *label160
 
   997 label *label273
   998 return :supplyBlock*retaddr
   999 end
-    * label *label25
-    * sensor *tmp349 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp349 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label279 (h:*label279)
-    * call *label12 *invalid :transportStatus*retval (m:*label279) (h:*label279)
-    * label *label279
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label280 (h:*label280)
-    * call *label10 *invalid :status2*retval (m:*label280) (h:*label280)
-    * label *label280
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label281 (h:*label281)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label281) (h:*label281)
-    * label *label281
-    * setaddr :dropAll*retaddr *label282 (h:*label282)
-    * call *label17 *invalid :dropAll*retval (m:*label282) (h:*label282)
-    * label *label282
-    * label *label283
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp352 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp353 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp354 *tmp352 *tmp353
-    * jump *label286 equal *tmp354 false
-    * ucontrol itemDrop @air 1000
-    * label *label286
-    * label *label287
-    * label *label284
-    * sensor *tmp356 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp357 *tmp356 30
-    * sensor *tmp358 .core :supplyBlockFromCore:item
-    * op land *tmp359 *tmp357 *tmp358
-    * jump *label283 notEqual *tmp359 false
-    * label *label285
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label288 (h:*label288)
-    * call *label19 *invalid :depositItems*retval (m:*label288) (h:*label288)
-    * label *label288
-    * label *label278
-    * return :supplyBlockFromCore*retaddr
-    * end
  1000 label *label27
  1001 read *tmp361 :unpackCfg:cfg 0
  1002 op sub *tmp362 *tmp361 50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   526 set :supplyBlockFromCore:target .thoriumGenerator
   527 set :supplyBlockFromCore:item @coal
   528 label *label433
-    * sensor *tmp349 :supplyBlockFromCore:target @itemCapacity
+  529 sensor *tmp349 .thoriumGenerator @itemCapacity
   530 op min :transportStatus:target *tmp349 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  531 set :transportStatus:item @coal
   532 setaddr :transportStatus*retaddr *label434 (h:*label434)
   533 call *label12 *invalid :transportStatus*retval (m:*label434) (h:*label434)
   534 label *label434
   535 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  536 set :status2:item @coal
+  537 set :status2:block .thoriumGenerator
   538 setaddr :status2*retaddr *label435 (h:*label435)
   539 call *label10 *invalid :status2*retval (m:*label435) (h:*label435)
   540 label *label435
 
   547 call *label17 *invalid :dropAll*retval (m:*label437) (h:*label437)
   548 label *label437
   549 label *label438
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  550 ucontrol itemTake .core @coal 30
   551 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   552 op notEqual *tmp352 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp353 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  553 op notEqual *tmp353 :supplyBlockFromCore:unitItem @coal
   554 op land *tmp354 *tmp352 *tmp353
   555 jump *label439 equal *tmp354 false
   556 ucontrol itemDrop @air 1000
   557 label *label439
   558 label *label440
   559 label *label441
-    * sensor *tmp356 @unit :supplyBlockFromCore:item
+  560 sensor *tmp356 @unit @coal
   561 op lessThan *tmp357 *tmp356 30
-    * sensor *tmp358 .core :supplyBlockFromCore:item
+  562 sensor *tmp358 .core @coal
   563 op land *tmp359 *tmp357 *tmp358
   564 jump *label438 notEqual *tmp359 false
   565 label *label442
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  566 set :depositItems:block .thoriumGenerator
+  567 set :depositItems:item @coal
   568 setaddr :depositItems*retaddr *label443 (h:*label443)
   569 call *label19 *invalid :depositItems*retval (m:*label443) (h:*label443)
   570 label *label443

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   523 label *label163
   524 jump *label162 always
   525 label *label161
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   526 label *label433
   527 sensor *tmp349 .thoriumGenerator @itemCapacity
   528 op min :transportStatus:target *tmp349 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1190 end
  1191 label *label16
  1192 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label326 (h:*label326)
-    * call *label11 *invalid :status3*retval (m:*label326) (h:*label326)
-    * label *label326
+ 1193 label *label445
+ 1194 write :status3:text .display ".status3"
+ 1195 label *label446
  1196 label *label327
  1197 sensor *tmp447 @unit @firstItem
  1198 jump *label330 equal *tmp447 null
 
  1220 end
  1221 label *label19
  1222 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label337 (h:*label337)
-    * call *label11 *invalid :status3*retval (m:*label337) (h:*label337)
-    * label *label337
+ 1223 label *label447
+ 1224 write :status3:text .display ".status3"
+ 1225 label *label448
  1226 sensor *tmp454 @unit @firstItem
  1227 jump *label338 notEqual *tmp454 :depositItems:item
  1228 set :moveToBlock:block :depositItems:block
 
  1283 label *label352
  1284 label *label353
  1285 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label355 (h:*label355)
-    * call *label11 *invalid :status3*retval (m:*label355) (h:*label355)
-    * label *label355
+ 1286 label *label449
+ 1287 write :status3:text .display ".status3"
+ 1288 label *label450
  1289 op add :mineOre:stop @second 10
  1290 label *label356
  1291 sensor :mineOre:item @unit @firstItem
 
  1314 label *label348
  1315 return :mineOre*retaddr
  1316 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label364
-    * return :status3*retaddr
-    * end
  1317 label *label18
  1318 sensor *tmp478 :moveToBlock:block @x
  1319 sensor *tmp479 :moveToBlock:block @y
 
  1340 end
  1341 label *label14
  1342 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label372 (h:*label372)
-    * call *label11 *invalid :status3*retval (m:*label372) (h:*label372)
-    * label *label372
+ 1343 label *label451
+ 1344 write :status3:text .display ".status3"
+ 1345 label *label452
  1346 op sub *tmp486 :moveTo:radius 0.5
  1347 label *label373
  1348 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1191 label *label16
  1192 set :status3:text "Moving..."
  1193 label *label445
-    * write :status3:text .display ".status3"
+ 1194 write "Moving..." .display ".status3"
  1195 label *label446
  1196 label *label327
  1197 sensor *tmp447 @unit @firstItem
 
  1221 label *label19
  1222 set :status3:text "Depositing..."
  1223 label *label447
-    * write :status3:text .display ".status3"
+ 1224 write "Depositing..." .display ".status3"
  1225 label *label448
  1226 sensor *tmp454 @unit @firstItem
  1227 jump *label338 notEqual *tmp454 :depositItems:item
 
  1284 label *label353
  1285 set :status3:text "Mining..."
  1286 label *label449
-    * write :status3:text .display ".status3"
+ 1287 write "Mining..." .display ".status3"
  1288 label *label450
  1289 op add :mineOre:stop @second 10
  1290 label *label356
 
  1341 label *label14
  1342 set :status3:text "Moving..."
  1343 label *label451
-    * write :status3:text .display ".status3"
+ 1344 write "Moving..." .display ".status3"
  1345 label *label452
  1346 op sub *tmp486 :moveTo:radius 0.5
  1347 label *label373

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1189 return :transportStatus*retaddr
  1190 end
  1191 label *label16
-    * set :status3:text "Moving..."
  1192 label *label445
  1193 write "Moving..." .display ".status3"
  1194 label *label446
 
  1218 return :dropAll*retaddr
  1219 end
  1220 label *label19
-    * set :status3:text "Depositing..."
  1221 label *label447
  1222 write "Depositing..." .display ".status3"
  1223 label *label448
 
  1280 label *label354
  1281 label *label352
  1282 label *label353
-    * set :status3:text "Mining..."
  1283 label *label449
  1284 write "Mining..." .display ".status3"
  1285 label *label450
 
  1336 return :locateOre*retaddr
  1337 end
  1338 label *label14
-    * set :status3:text "Moving..."
  1339 label *label451
  1340 write "Moving..." .display ".status3"
  1341 label *label452

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1225 jump *label338 notEqual *tmp454 :depositItems:item
  1226 set :moveToBlock:block :depositItems:block
  1227 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label340 (h:*label340)
-    * call *label18 *invalid :moveToBlock*retval (m:*label340) (h:*label340)
-    * label *label340
+ 1228 label *label453
+ 1229 sensor *tmp478 :moveToBlock:block @x
+ 1230 sensor *tmp479 :moveToBlock:block @y
+ 1231 set :moveTo:x *tmp478
+ 1232 set :moveTo:y *tmp479
+ 1233 set :moveTo:radius :moveToBlock:radius
+ 1234 setaddr :moveTo*retaddr *label454 (h:*label454)
+ 1235 call *label14 *invalid :moveTo*retval (m:*label454) (h:*label454)
+ 1236 label *label454
+ 1237 label *label455
  1238 sensor :depositItems:cap :depositItems:block @itemCapacity
  1239 label *label341
  1240 ucontrol itemDrop :depositItems:block 30
 
  1318 label *label348
  1319 return :mineOre*retaddr
  1320 end
-    * label *label18
-    * sensor *tmp478 :moveToBlock:block @x
-    * sensor *tmp479 :moveToBlock:block @y
-    * set :moveTo:x *tmp478
-    * set :moveTo:y *tmp479
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label366 (h:*label366)
-    * call *label14 *invalid :moveTo*retval (m:*label366) (h:*label366)
-    * label *label366
-    * label *label365
-    * return :moveToBlock*retaddr
-    * end
  1321 label *label20
  1322 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1323 jump *label368 notEqual *tmp480 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1226 set :moveToBlock:block :depositItems:block
  1227 set :moveToBlock:radius 6
  1228 label *label453
-    * sensor *tmp478 :moveToBlock:block @x
-    * sensor *tmp479 :moveToBlock:block @y
+ 1229 sensor *tmp478 :depositItems:block @x
+ 1230 sensor *tmp479 :depositItems:block @y
  1231 set :moveTo:x *tmp478
  1232 set :moveTo:y *tmp479
-    * set :moveTo:radius :moveToBlock:radius
+ 1233 set :moveTo:radius 6
  1234 setaddr :moveTo*retaddr *label454 (h:*label454)
  1235 call *label14 *invalid :moveTo*retval (m:*label454) (h:*label454)
  1236 label *label454

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1223 label *label448
  1224 sensor *tmp454 @unit @firstItem
  1225 jump *label338 notEqual *tmp454 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1226 label *label453
  1227 sensor *tmp478 :depositItems:block @x
  1228 sensor *tmp479 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1268 call *label12 *invalid :transportStatus*retval (m:*label349) (h:*label349)
  1269 label *label349
  1270 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label350 (h:*label350)
-    * call *label20 *invalid :locateOre*retval (m:*label350) (h:*label350)
-    * label *label350
+ 1271 label *label456
+ 1272 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
+ 1273 jump *label458 notEqual *tmp480 false
+ 1274 set :error:error "Cannot locate ore"
+ 1275 setaddr :error*retaddr *label457 (h:*label457)
+ 1276 call *label13 *invalid :error*retval (m:*label457) (h:*label457)
+ 1277 label *label457
+ 1278 label *label458
+ 1279 label *label459
+ 1280 label *label460
  1281 set :mineOre:x :locateOre:x
  1282 set :mineOre:y :locateOre:y
  1283 set :moveToEmpty:x :locateOre:x
 
  1323 label *label348
  1324 return :mineOre*retaddr
  1325 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
-    * jump *label368 notEqual *tmp480 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label370 (h:*label370)
-    * call *label13 *invalid :error*retval (m:*label370) (h:*label370)
-    * label *label370
-    * label *label368
-    * label *label369
-    * label *label367
-    * return :locateOre*retaddr
-    * end
  1326 label *label14
  1327 label *label451
  1328 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1269 label *label349
  1270 set :locateOre:ore :mineOre:ore
  1271 label *label456
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
+ 1272 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1273 jump *label458 notEqual *tmp480 false
  1274 set :error:error "Cannot locate ore"
  1275 setaddr :error*retaddr *label457 (h:*label457)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1267 setaddr :transportStatus*retaddr *label349 (h:*label349)
  1268 call *label12 *invalid :transportStatus*retval (m:*label349) (h:*label349)
  1269 label *label349
-    * set :locateOre:ore :mineOre:ore
  1270 label *label456
  1271 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1272 jump *label458 notEqual *tmp480 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1229 set :moveTo:x *tmp478
  1230 set :moveTo:y *tmp479
  1231 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label454 (h:*label454)
-    * call *label14 *invalid :moveTo*retval (m:*label454) (h:*label454)
-    * label *label454
+ 1232 label *label461
+ 1233 label *label462
+ 1234 write "Moving..." .display ".status3"
+ 1235 label *label463
+ 1236 op sub *tmp486 :moveTo:radius 0.5
+ 1237 label *label464
+ 1238 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484
+ 1239 jump *label466 notEqual *tmp484 false
+ 1240 ucontrol approach :moveTo:x :moveTo:y *tmp486
+ 1241 label *label465
+ 1242 jump *label464 always
+ 1243 label *label466
+ 1244 label *label467
  1245 label *label455
  1246 sensor :depositItems:cap :depositItems:block @itemCapacity
  1247 label *label341
 
  1332 label *label348
  1333 return :mineOre*retaddr
  1334 end
-    * label *label14
-    * label *label451
-    * write "Moving..." .display ".status3"
-    * label *label452
-    * op sub *tmp486 :moveTo:radius 0.5
-    * label *label373
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484
-    * jump *label375 notEqual *tmp484 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp486
-    * label *label374
-    * jump *label373 always
-    * label *label375
-    * label *label371
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1233 label *label462
  1234 write "Moving..." .display ".status3"
  1235 label *label463
-    * op sub *tmp486 :moveTo:radius 0.5
+ 1236 op sub *tmp486 6 0.5
  1237 label *label464
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp484
+ 1238 ucontrol within *tmp478 *tmp479 6 *tmp484
  1239 jump *label466 notEqual *tmp484 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp486
+ 1240 ucontrol approach *tmp478 *tmp479 5.5
  1241 label *label465
  1242 jump *label464 always
  1243 label *label466

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1226 label *label453
  1227 sensor *tmp478 :depositItems:block @x
  1228 sensor *tmp479 :depositItems:block @y
-    * set :moveTo:x *tmp478
-    * set :moveTo:y *tmp479
-    * set :moveTo:radius 6
  1229 label *label461
  1230 label *label462
  1231 write "Moving..." .display ".status3"
  1232 label *label463
-    * op sub *tmp486 6 0.5
  1233 label *label464
  1234 ucontrol within *tmp478 *tmp479 6 *tmp484
  1235 jump *label466 notEqual *tmp484 false

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1210 label *label333
  1211 sensor *tmp452 @unit @firstItem
  1212 jump *label335 equal *tmp452 null
+ 1213 label *label468
  1214 ucontrol itemDrop @air 1000
  1215 label *label334
-    * jump *label333 always
+ 1216 sensor *tmp452 @unit @firstItem
+ 1217 jump *label468 notEqual *tmp452 null
  1218 label *label335
  1219 label *label332
  1220 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1235 label *label464
  1236 ucontrol within *tmp478 *tmp479 6 *tmp484
  1237 jump *label466 notEqual *tmp484 false
+ 1238 label *label469
  1239 ucontrol approach *tmp478 *tmp479 5.5
  1240 label *label465
-    * jump *label464 always
+ 1241 ucontrol within *tmp478 *tmp479 6 *tmp484
+ 1242 jump *label469 equal *tmp484 false
  1243 label *label466
  1244 label *label467
  1245 label *label455

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1257 label *label344
  1258 sensor *tmp462 @unit @firstItem
  1259 jump *label346 equal *tmp462 null
+ 1260 label *label470
  1261 ucontrol itemDrop @air 1000
  1262 label *label345
-    * jump *label344 always
+ 1263 sensor *tmp462 @unit @firstItem
+ 1264 jump *label470 notEqual *tmp462 null
  1265 label *label346
  1266 label *label339
  1267 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
  1266 label *label339
  1267 set :transportStatus:target 0
  1268 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label347 (h:*label347)
-    * call *label12 *invalid :transportStatus*retval (m:*label347) (h:*label347)
-    * label *label347
+ 1269 label *label471
+ 1270 write :transportStatus:target .display ".transportTarget"
+ 1271 write :transportStatus:item .display ".transportItem"
+ 1272 label *label472
  1273 label *label336
  1274 return :depositItems*retaddr
  1275 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1267 set :transportStatus:target 0
  1268 set :transportStatus:item null
  1269 label *label471
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1270 write 0 .display ".transportTarget"
+ 1271 write null .display ".transportItem"
  1272 label *label472
  1273 label *label336
  1274 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1264 jump *label470 notEqual *tmp462 null
  1265 label *label346
  1266 label *label339
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
  1267 label *label471
  1268 write 0 .display ".transportTarget"
  1269 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   527 sensor *tmp349 .thoriumGenerator @itemCapacity
   528 op min :transportStatus:target *tmp349 30
   529 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label434 (h:*label434)
-    * call *label12 *invalid :transportStatus*retval (m:*label434) (h:*label434)
-    * label *label434
+  530 label *label473
+  531 write :transportStatus:target .display ".transportTarget"
+  532 write :transportStatus:item .display ".transportItem"
+  533 label *label474
   534 set :status2:text "Transferring "
   535 set :status2:item @coal
   536 set :status2:block .thoriumGenerator
 
   930 sensor *tmp331 :fetchBlock:block @itemCapacity
   931 op min :transportStatus:target *tmp331 30
   932 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label263 (h:*label263)
-    * call *label12 *invalid :transportStatus*retval (m:*label263) (h:*label263)
-    * label *label263
+  933 label *label475
+  934 write :transportStatus:target .display ".transportTarget"
+  935 write :transportStatus:item .display ".transportItem"
+  936 label *label476
   937 set :status2:text "Fetching "
   938 set :status2:item :fetchBlock:item
   939 set :status2:block :fetchBlock:block
 
  1184 label *label323
  1185 return :status2*retaddr
  1186 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label324
-    * return :transportStatus*retaddr
-    * end
  1187 label *label16
  1188 label *label445
  1189 write "Moving..." .display ".status3"
 
  1271 op min :mineOre:amount :mineOre:amount 30
  1272 set :transportStatus:target :mineOre:amount
  1273 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label349 (h:*label349)
-    * call *label12 *invalid :transportStatus*retval (m:*label349) (h:*label349)
-    * label *label349
+ 1274 label *label477
+ 1275 write :transportStatus:target .display ".transportTarget"
+ 1276 write :transportStatus:item .display ".transportItem"
+ 1277 label *label478
  1278 label *label456
  1279 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1280 jump *label458 notEqual *tmp480 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   529 set :transportStatus:item @coal
   530 label *label473
   531 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  532 write @coal .display ".transportItem"
   533 label *label474
   534 set :status2:text "Transferring "
   535 set :status2:item @coal
 
   932 set :transportStatus:item :fetchBlock:item
   933 label *label475
   934 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  935 write :fetchBlock:item .display ".transportItem"
   936 label *label476
   937 set :status2:text "Fetching "
   938 set :status2:item :fetchBlock:item
 
  1272 set :transportStatus:target :mineOre:amount
  1273 set :transportStatus:item :mineOre:ore
  1274 label *label477
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1275 write :mineOre:amount .display ".transportTarget"
+ 1276 write :mineOre:ore .display ".transportItem"
  1277 label *label478
  1278 label *label456
  1279 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   526 label *label433
   527 sensor *tmp349 .thoriumGenerator @itemCapacity
   528 op min :transportStatus:target *tmp349 30
-    * set :transportStatus:item @coal
   529 label *label473
   530 write :transportStatus:target .display ".transportTarget"
   531 write @coal .display ".transportItem"
 
   928 label *label23
   929 sensor *tmp331 :fetchBlock:block @itemCapacity
   930 op min :transportStatus:target *tmp331 30
-    * set :transportStatus:item :fetchBlock:item
   931 label *label475
   932 write :transportStatus:target .display ".transportTarget"
   933 write :fetchBlock:item .display ".transportItem"
 
  1268 label *label21
  1269 op min :mineOre:amount :mineOre:amount 30
  1270 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
  1271 label *label477
  1272 write :mineOre:amount .display ".transportTarget"
  1273 write :mineOre:ore .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   935 set :status2:text "Fetching "
   936 set :status2:item :fetchBlock:item
   937 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label264 (h:*label264)
-    * call *label10 *invalid :status2*retval (m:*label264) (h:*label264)
-    * label *label264
+  938 label *label479
+  939 write :status2:text .display ".status2"
+  940 write :status2:item .display ".item2"
+  941 write :status2:block .display ".block2"
+  942 label *label480
   943 sensor *tmp333 :fetchBlock:block @x
   944 sensor *tmp334 :fetchBlock:block @y
   945 set :moveToEmpty:x *tmp333

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   936 set :status2:item :fetchBlock:item
   937 set :status2:block :fetchBlock:block
   938 label *label479
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  939 write "Fetching " .display ".status2"
+  940 write :fetchBlock:item .display ".item2"
+  941 write :fetchBlock:block .display ".block2"
   942 label *label480
   943 sensor *tmp333 :fetchBlock:block @x
   944 sensor *tmp334 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   932 write :transportStatus:target .display ".transportTarget"
   933 write :fetchBlock:item .display ".transportItem"
   934 label *label476
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   935 label *label479
   936 write "Fetching " .display ".status2"
   937 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   533 set :status2:text "Transferring "
   534 set :status2:item @coal
   535 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label435 (h:*label435)
-    * call *label10 *invalid :status2*retval (m:*label435) (h:*label435)
-    * label *label435
+  536 label *label481
+  537 write :status2:text .display ".status2"
+  538 write :status2:item .display ".item2"
+  539 write :status2:block .display ".block2"
+  540 label *label482
   541 set :moveToEmpty:x .coreX
   542 set :moveToEmpty:y .coreY
   543 setaddr :moveToEmpty*retaddr *label436 (h:*label436)
 
   915 set :status2:text "Mining "
   916 set :status2:item :mineOre.1:ore
   917 set :status2:block "core"
-    * setaddr :status2*retaddr *label260 (h:*label260)
-    * call *label10 *invalid :status2*retval (m:*label260) (h:*label260)
-    * label *label260
+  918 label *label483
+  919 write :status2:text .display ".status2"
+  920 write :status2:item .display ".item2"
+  921 write :status2:block .display ".block2"
+  922 label *label484
   923 set :mineOre:ore :mineOre.1:ore
   924 set :mineOre:amount 30
   925 set :mineOre:block .core
 
   980 set :status2:text "Supplying "
   981 set :status2:item :supplyBlock:ore
   982 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label274 (h:*label274)
-    * call *label10 *invalid :status2*retval (m:*label274) (h:*label274)
-    * label *label274
+  983 label *label485
+  984 write :status2:text .display ".status2"
+  985 write :status2:item .display ".item2"
+  986 write :status2:block .display ".block2"
+  987 label *label486
   988 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   989 sensor *tmp345 :supplyBlock:block :supplyBlock:ore
   990 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
 
  1180 label *label320
  1181 return :buildBlock*retaddr
  1182 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label323
-    * return :status2*retaddr
-    * end
  1183 label *label16
  1184 label *label445
  1185 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   534 set :status2:item @coal
   535 set :status2:block .thoriumGenerator
   536 label *label481
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  537 write "Transferring " .display ".status2"
+  538 write @coal .display ".item2"
+  539 write .thoriumGenerator .display ".block2"
   540 label *label482
   541 set :moveToEmpty:x .coreX
   542 set :moveToEmpty:y .coreY
 
   916 set :status2:item :mineOre.1:ore
   917 set :status2:block "core"
   918 label *label483
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  919 write "Mining " .display ".status2"
+  920 write :mineOre.1:ore .display ".item2"
+  921 write "core" .display ".block2"
   922 label *label484
   923 set :mineOre:ore :mineOre.1:ore
   924 set :mineOre:amount 30
 
   981 set :status2:item :supplyBlock:ore
   982 set :status2:block :supplyBlock:block
   983 label *label485
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  984 write "Supplying " .display ".status2"
+  985 write :supplyBlock:ore .display ".item2"
+  986 write :supplyBlock:block .display ".block2"
   987 label *label486
   988 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   989 sensor *tmp345 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   530 write :transportStatus:target .display ".transportTarget"
   531 write @coal .display ".transportItem"
   532 label *label474
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   533 label *label481
   534 write "Transferring " .display ".status2"
   535 write @coal .display ".item2"
 
   909 return :lineUpUnits*retaddr
   910 end
   911 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   912 label *label483
   913 write "Mining " .display ".status2"
   914 write :mineOre.1:ore .display ".item2"
 
   971 return :fetchBlock*retaddr
   972 end
   973 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   974 label *label485
   975 write "Supplying " .display ".status2"
   976 write :supplyBlock:ore .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    76 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    78 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label58 (h:*label58)
-    * call *label13 *invalid :error*retval (m:*label58) (h:*label58)
-    * label *label58
+   79 label *label487
+   80 set .ERROR :error:error
+   81 stop
+   82 label *label488
    83 label *label56
    84 label *label57
    85 write @pneumatic-drill processor1 ".nextBlock"
 
   329 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   330 jump *label112 notEqual :buildThoriumDrill:result false
   331 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label114 (h:*label114)
-    * call *label13 *invalid :error*retval (m:*label114) (h:*label114)
-    * label *label114
+  332 label *label489
+  333 set .ERROR :error:error
+  334 stop
+  335 label *label490
   336 label *label112
   337 label *label113
   338 write @laser-drill processor5 ":buildBlockAt:block"
 
   499 label *label148
   500 label *label141
   501 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label153
-    * return :error*retaddr
-    * end
   502 label *label33
   503 sensor *tmp247 .core @silicon
   504 op sub *tmp248 .targetSilicon *tmp247
 
  1261 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1262 jump *label458 notEqual *tmp480 false
  1263 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label457 (h:*label457)
-    * call *label13 *invalid :error*retval (m:*label457) (h:*label457)
-    * label *label457
+ 1264 label *label491
+ 1265 set .ERROR :error:error
+ 1266 stop
+ 1267 label *label492
  1268 label *label458
  1269 label *label459
  1270 label *label460

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    78 set :error:error "Cannot locate spot for titanium drill"
    79 label *label487
-    * set .ERROR :error:error
+   80 set .ERROR "Cannot locate spot for titanium drill"
    81 stop
    82 label *label488
    83 label *label56
 
   330 jump *label112 notEqual :buildThoriumDrill:result false
   331 set :error:error "Cannot locate spot for thorium drill"
   332 label *label489
-    * set .ERROR :error:error
+  333 set .ERROR "Cannot locate spot for thorium drill"
   334 stop
   335 label *label490
   336 label *label112
 
  1252 end
  1253 label *label21
  1254 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
  1255 label *label477
  1256 write :mineOre:amount .display ".transportTarget"
  1257 write :mineOre:ore .display ".transportItem"
 
  1261 jump *label458 notEqual *tmp480 false
  1262 set :error:error "Cannot locate ore"
  1263 label *label491
-    * set .ERROR :error:error
+ 1264 set .ERROR "Cannot locate ore"
  1265 stop
  1266 label *label492
  1267 label *label458

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    75 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    76 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    77 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    78 label *label487
    79 set .ERROR "Cannot locate spot for titanium drill"
    80 stop
 
   327 jump *label111 equal *tmp210 false
   328 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   329 jump *label112 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   330 label *label489
   331 set .ERROR "Cannot locate spot for thorium drill"
   332 stop
 
  1257 label *label456
  1258 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1259 jump *label458 notEqual *tmp480 false
-    * set :error:error "Cannot locate ore"
  1260 label *label491
  1261 set .ERROR "Cannot locate ore"
  1262 stop

Modifications by Inline function call at Actions.mnd:137:5 (+3 instructions):
 
   936 setaddr :moveToEmpty*retaddr *label265 (h:*label265)
   937 call *label16 *invalid :moveToEmpty*retval (m:*label265) (h:*label265)
   938 label *label265
-    * setaddr :dropAll*retaddr *label266 (h:*label266)
-    * call *label17 *invalid :dropAll*retval (m:*label266) (h:*label266)
-    * label *label266
+  939 label *label493
+  940 label *label494
+  941 sensor *tmp452 @unit @firstItem
+  942 jump *label497 equal *tmp452 null
+  943 label *label495
+  944 ucontrol itemDrop @air 1000
+  945 label *label496
+  946 sensor *tmp452 @unit @firstItem
+  947 jump *label495 notEqual *tmp452 null
+  948 label *label497
+  949 label *label498
   950 label *label267
   951 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   952 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   531 label *label482
   532 set :moveToEmpty:x .coreX
   533 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label436 (h:*label436)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label436) (h:*label436)
-    * label *label436
+  534 label *label499
+  535 label *label500
+  536 write "Moving..." .display ".status3"
+  537 label *label501
+  538 label *label502
+  539 sensor *tmp447 @unit @firstItem
+  540 jump *label503 equal *tmp447 null
+  541 ucontrol itemDrop @air 1000
+  542 label *label503
+  543 label *label504
+  544 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  545 label *label505
+  546 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+  547 jump *label502 equal *tmp450 false
+  548 label *label506
+  549 label *label507
   550 setaddr :dropAll*retaddr *label437 (h:*label437)
   551 call *label17 *invalid :dropAll*retval (m:*label437) (h:*label437)
   552 label *label437
 
   946 sensor *tmp334 :fetchBlock:block @y
   947 set :moveToEmpty:x *tmp333
   948 set :moveToEmpty:y *tmp334
-    * setaddr :moveToEmpty*retaddr *label265 (h:*label265)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label265) (h:*label265)
-    * label *label265
+  949 label *label508
+  950 label *label509
+  951 write "Moving..." .display ".status3"
+  952 label *label510
+  953 label *label511
+  954 sensor *tmp447 @unit @firstItem
+  955 jump *label512 equal *tmp447 null
+  956 ucontrol itemDrop @air 1000
+  957 label *label512
+  958 label *label513
+  959 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  960 label *label514
+  961 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+  962 jump *label511 equal *tmp450 false
+  963 label *label515
+  964 label *label516
   965 label *label493
   966 label *label494
   967 sensor *tmp452 @unit @firstItem
 
  1199 label *label320
  1200 return :buildBlock*retaddr
  1201 end
-    * label *label16
-    * label *label445
-    * write "Moving..." .display ".status3"
-    * label *label446
-    * label *label327
-    * sensor *tmp447 @unit @firstItem
-    * jump *label330 equal *tmp447 null
-    * ucontrol itemDrop @air 1000
-    * label *label330
-    * label *label331
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label328
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
-    * jump *label327 equal *tmp450 false
-    * label *label329
-    * label *label325
-    * return :moveToEmpty*retaddr
-    * end
  1202 label *label17
  1203 label *label333
  1204 sensor *tmp452 @unit @firstItem
 
  1284 set :mineOre:y :locateOre:y
  1285 set :moveToEmpty:x :locateOre:x
  1286 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label351 (h:*label351)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label351) (h:*label351)
-    * label *label351
+ 1287 label *label517
+ 1288 label *label518
+ 1289 write "Moving..." .display ".status3"
+ 1290 label *label519
+ 1291 label *label520
+ 1292 sensor *tmp447 @unit @firstItem
+ 1293 jump *label521 equal *tmp447 null
+ 1294 ucontrol itemDrop @air 1000
+ 1295 label *label521
+ 1296 label *label522
+ 1297 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1298 label *label523
+ 1299 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+ 1300 jump *label520 equal *tmp450 false
+ 1301 label *label524
+ 1302 label *label525
  1303 sensor *tmp465 @unit @firstItem
  1304 jump *label352 equal *tmp465 :mineOre:ore
  1305 setaddr :dropAll*retaddr *label354 (h:*label354)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   541 ucontrol itemDrop @air 1000
   542 label *label503
   543 label *label504
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  544 ucontrol approach .coreX .coreY 5.5
   545 label *label505
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+  546 ucontrol within .coreX .coreY 6 *tmp450
   547 jump *label502 equal *tmp450 false
   548 label *label506
   549 label *label507
 
   956 ucontrol itemDrop @air 1000
   957 label *label512
   958 label *label513
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  959 ucontrol approach *tmp333 *tmp334 5.5
   960 label *label514
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+  961 ucontrol within *tmp333 *tmp334 6 *tmp450
   962 jump *label511 equal *tmp450 false
   963 label *label515
   964 label *label516
 
  1294 ucontrol itemDrop @air 1000
  1295 label *label521
  1296 label *label522
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1297 ucontrol approach :locateOre:x :locateOre:y 5.5
  1298 label *label523
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp450
+ 1299 ucontrol within :locateOre:x :locateOre:y 6 *tmp450
  1300 jump *label520 equal *tmp450 false
  1301 label *label524
  1302 label *label525

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   529 write @coal .display ".item2"
   530 write .thoriumGenerator .display ".block2"
   531 label *label482
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   532 label *label499
   533 label *label500
   534 write "Moving..." .display ".status3"
 
   942 label *label480
   943 sensor *tmp333 :fetchBlock:block @x
   944 sensor *tmp334 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp333
-    * set :moveToEmpty:y *tmp334
   945 label *label508
   946 label *label509
   947 write "Moving..." .display ".status3"
 
  1278 label *label460
  1279 set :mineOre:x :locateOre:x
  1280 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
  1281 label *label517
  1282 label *label518
  1283 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
   545 jump *label502 equal *tmp450 false
   546 label *label506
   547 label *label507
-    * setaddr :dropAll*retaddr *label437 (h:*label437)
-    * call *label17 *invalid :dropAll*retval (m:*label437) (h:*label437)
-    * label *label437
+  548 label *label526
+  549 label *label527
+  550 sensor *tmp452 @unit @firstItem
+  551 jump *label530 equal *tmp452 null
+  552 label *label528
+  553 ucontrol itemDrop @air 1000
+  554 label *label529
+  555 sensor *tmp452 @unit @firstItem
+  556 jump *label528 notEqual *tmp452 null
+  557 label *label530
+  558 label *label531
   559 label *label438
   560 ucontrol itemTake .core @coal 30
   561 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
  1203 label *label320
  1204 return :buildBlock*retaddr
  1205 end
-    * label *label17
-    * label *label333
-    * sensor *tmp452 @unit @firstItem
-    * jump *label335 equal *tmp452 null
-    * label *label468
-    * ucontrol itemDrop @air 1000
-    * label *label334
-    * sensor *tmp452 @unit @firstItem
-    * jump *label468 notEqual *tmp452 null
-    * label *label335
-    * label *label332
-    * return :dropAll*retaddr
-    * end
  1206 label *label19
  1207 label *label447
  1208 write "Depositing..." .display ".status3"
 
  1291 label *label525
  1292 sensor *tmp465 @unit @firstItem
  1293 jump *label352 equal *tmp465 :mineOre:ore
-    * setaddr :dropAll*retaddr *label354 (h:*label354)
-    * call *label17 *invalid :dropAll*retval (m:*label354) (h:*label354)
-    * label *label354
+ 1294 label *label532
+ 1295 label *label533
+ 1296 sensor *tmp452 @unit @firstItem
+ 1297 jump *label536 equal *tmp452 null
+ 1298 label *label534
+ 1299 ucontrol itemDrop @air 1000
+ 1300 label *label535
+ 1301 sensor *tmp452 @unit @firstItem
+ 1302 jump *label534 notEqual *tmp452 null
+ 1303 label *label536
+ 1304 label *label537
  1305 label *label352
  1306 label *label353
  1307 label *label449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1317 jump *label358 always
  1318 label *label359
  1319 label *label360
-    * ucontrol mine :mineOre:x :mineOre:y
+ 1320 ucontrol mine :locateOre:x :locateOre:y
  1321 jump *label361 lessThanEq @second :mineOre:stop
  1322 jump *label358 always
  1323 label *label361

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1271 label *label458
  1272 label *label459
  1273 label *label460
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
  1274 label *label517
  1275 label *label518
  1276 write "Moving..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:139:5 (+6 instructions):
 
   596 write "Phase 1: supplying base" .display ".status1"
   597 label *label410
   598 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label170 (h:*label170)
-    * call *label22 *invalid :mineOre.1*retval (m:*label170) (h:*label170)
-    * label *label170
+  599 label *label538
+  600 label *label539
+  601 write "Mining " .display ".status2"
+  602 write :mineOre.1:ore .display ".item2"
+  603 write "core" .display ".block2"
+  604 label *label540
+  605 set :mineOre:ore :mineOre.1:ore
+  606 set :mineOre:amount 30
+  607 set :mineOre:block .core
+  608 setaddr :mineOre*retaddr *label541 (h:*label541)
+  609 call *label21 *invalid :mineOre*retval (m:*label541) (h:*label541)
+  610 label *label541
+  611 label *label542
   612 label *label168
   613 jump *label167 always
   614 label *label166

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   599 label *label538
   600 label *label539
   601 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  602 write @coal .display ".item2"
   603 write "core" .display ".block2"
   604 label *label540
-    * set :mineOre:ore :mineOre.1:ore
+  605 set :mineOre:ore @coal
   606 set :mineOre:amount 30
   607 set :mineOre:block .core
   608 setaddr :mineOre*retaddr *label541 (h:*label541)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   595 label *label409
   596 write "Phase 1: supplying base" .display ".status1"
   597 label *label410
-    * set :mineOre.1:ore @coal
   598 label *label538
   599 label *label539
   600 write "Mining " .display ".status2"

Modifications by Inline function call at Actions.mnd:147:5 (+23 instructions):
 
  1005 label *label269
  1006 set :depositItems:block .core
  1007 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label272 (h:*label272)
-    * call *label19 *invalid :depositItems*retval (m:*label272) (h:*label272)
-    * label *label272
+ 1008 label *label543
+ 1009 label *label544
+ 1010 write "Depositing..." .display ".status3"
+ 1011 label *label545
+ 1012 sensor *tmp454 @unit @firstItem
+ 1013 jump *label559 notEqual *tmp454 :depositItems:item
+ 1014 label *label546
+ 1015 sensor *tmp478 :depositItems:block @x
+ 1016 sensor *tmp479 :depositItems:block @y
+ 1017 label *label547
+ 1018 label *label548
+ 1019 write "Moving..." .display ".status3"
+ 1020 label *label549
+ 1021 label *label550
+ 1022 ucontrol within *tmp478 *tmp479 6 *tmp484
+ 1023 jump *label553 notEqual *tmp484 false
+ 1024 label *label551
+ 1025 ucontrol approach *tmp478 *tmp479 5.5
+ 1026 label *label552
+ 1027 ucontrol within *tmp478 *tmp479 6 *tmp484
+ 1028 jump *label551 equal *tmp484 false
+ 1029 label *label553
+ 1030 label *label554
+ 1031 label *label555
+ 1032 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1033 label *label556
+ 1034 ucontrol itemDrop :depositItems:block 30
+ 1035 label *label557
+ 1036 sensor *tmp458 @unit @firstItem
+ 1037 op mul *tmp459 *tmp458 :depositItems:cap
+ 1038 sensor *tmp460 :depositItems:block :depositItems:item
+ 1039 jump *label556 greaterThan *tmp459 *tmp460
+ 1040 label *label558
+ 1041 jump *label564 always
+ 1042 label *label559
+ 1043 label *label560
+ 1044 sensor *tmp462 @unit @firstItem
+ 1045 jump *label563 equal *tmp462 null
+ 1046 label *label561
+ 1047 ucontrol itemDrop @air 1000
+ 1048 label *label562
+ 1049 sensor *tmp462 @unit @firstItem
+ 1050 jump *label561 notEqual *tmp462 null
+ 1051 label *label563
+ 1052 label *label564
+ 1053 label *label565
+ 1054 write 0 .display ".transportTarget"
+ 1055 write null .display ".transportItem"
+ 1056 label *label566
+ 1057 label *label567
  1058 label *label262
  1059 return :fetchBlock*retaddr
  1060 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1010 write "Depositing..." .display ".status3"
  1011 label *label545
  1012 sensor *tmp454 @unit @firstItem
-    * jump *label559 notEqual *tmp454 :depositItems:item
+ 1013 jump *label559 notEqual *tmp454 :fetchBlock:item
  1014 label *label546
-    * sensor *tmp478 :depositItems:block @x
-    * sensor *tmp479 :depositItems:block @y
+ 1015 sensor *tmp478 .core @x
+ 1016 sensor *tmp479 .core @y
  1017 label *label547
  1018 label *label548
  1019 write "Moving..." .display ".status3"
 
  1029 label *label553
  1030 label *label554
  1031 label *label555
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1032 sensor :depositItems:cap .core @itemCapacity
  1033 label *label556
-    * ucontrol itemDrop :depositItems:block 30
+ 1034 ucontrol itemDrop .core 30
  1035 label *label557
  1036 sensor *tmp458 @unit @firstItem
  1037 op mul *tmp459 *tmp458 :depositItems:cap
-    * sensor *tmp460 :depositItems:block :depositItems:item
+ 1038 sensor *tmp460 .core :fetchBlock:item
  1039 jump *label556 greaterThan *tmp459 *tmp460
  1040 label *label558
  1041 jump *label564 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1003 op land *tmp343 *tmp341 *tmp342
  1004 jump *label267 notEqual *tmp343 false
  1005 label *label269
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
  1006 label *label543
  1007 label *label544
  1008 write "Depositing..." .display ".status3"

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
   575 label *label442
   576 set :depositItems:block .thoriumGenerator
   577 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label443 (h:*label443)
-    * call *label19 *invalid :depositItems*retval (m:*label443) (h:*label443)
-    * label *label443
+  578 label *label568
+  579 label *label569
+  580 write "Depositing..." .display ".status3"
+  581 label *label570
+  582 sensor *tmp454 @unit @firstItem
+  583 jump *label584 notEqual *tmp454 :depositItems:item
+  584 label *label571
+  585 sensor *tmp478 :depositItems:block @x
+  586 sensor *tmp479 :depositItems:block @y
+  587 label *label572
+  588 label *label573
+  589 write "Moving..." .display ".status3"
+  590 label *label574
+  591 label *label575
+  592 ucontrol within *tmp478 *tmp479 6 *tmp484
+  593 jump *label578 notEqual *tmp484 false
+  594 label *label576
+  595 ucontrol approach *tmp478 *tmp479 5.5
+  596 label *label577
+  597 ucontrol within *tmp478 *tmp479 6 *tmp484
+  598 jump *label576 equal *tmp484 false
+  599 label *label578
+  600 label *label579
+  601 label *label580
+  602 sensor :depositItems:cap :depositItems:block @itemCapacity
+  603 label *label581
+  604 ucontrol itemDrop :depositItems:block 30
+  605 label *label582
+  606 sensor *tmp458 @unit @firstItem
+  607 op mul *tmp459 *tmp458 :depositItems:cap
+  608 sensor *tmp460 :depositItems:block :depositItems:item
+  609 jump *label581 greaterThan *tmp459 *tmp460
+  610 label *label583
+  611 jump *label589 always
+  612 label *label584
+  613 label *label585
+  614 sensor *tmp462 @unit @firstItem
+  615 jump *label588 equal *tmp462 null
+  616 label *label586
+  617 ucontrol itemDrop @air 1000
+  618 label *label587
+  619 sensor *tmp462 @unit @firstItem
+  620 jump *label586 notEqual *tmp462 null
+  621 label *label588
+  622 label *label589
+  623 label *label590
+  624 write 0 .display ".transportTarget"
+  625 write null .display ".transportItem"
+  626 label *label591
+  627 label *label592
   628 label *label444
   629 label *label162
   630 label *label159
 
  1304 label *label320
  1305 return :buildBlock*retaddr
  1306 end
-    * label *label19
-    * label *label447
-    * write "Depositing..." .display ".status3"
-    * label *label448
-    * sensor *tmp454 @unit @firstItem
-    * jump *label338 notEqual *tmp454 :depositItems:item
-    * label *label453
-    * sensor *tmp478 :depositItems:block @x
-    * sensor *tmp479 :depositItems:block @y
-    * label *label461
-    * label *label462
-    * write "Moving..." .display ".status3"
-    * label *label463
-    * label *label464
-    * ucontrol within *tmp478 *tmp479 6 *tmp484
-    * jump *label466 notEqual *tmp484 false
-    * label *label469
-    * ucontrol approach *tmp478 *tmp479 5.5
-    * label *label465
-    * ucontrol within *tmp478 *tmp479 6 *tmp484
-    * jump *label469 equal *tmp484 false
-    * label *label466
-    * label *label467
-    * label *label455
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label341
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label342
-    * sensor *tmp458 @unit @firstItem
-    * op mul *tmp459 *tmp458 :depositItems:cap
-    * sensor *tmp460 :depositItems:block :depositItems:item
-    * jump *label341 greaterThan *tmp459 *tmp460
-    * label *label343
-    * jump *label339 always
-    * label *label338
-    * label *label344
-    * sensor *tmp462 @unit @firstItem
-    * jump *label346 equal *tmp462 null
-    * label *label470
-    * ucontrol itemDrop @air 1000
-    * label *label345
-    * sensor *tmp462 @unit @firstItem
-    * jump *label470 notEqual *tmp462 null
-    * label *label346
-    * label *label339
-    * label *label471
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label472
-    * label *label336
-    * return :depositItems*retaddr
-    * end
  1307 label *label21
  1308 op min :mineOre:amount :mineOre:amount 30
  1309 label *label477
 
  1376 ucontrol unbind
  1377 set :depositItems:block :mineOre:block
  1378 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label363 (h:*label363)
-    * call *label19 *invalid :depositItems*retval (m:*label363) (h:*label363)
-    * label *label363
+ 1379 label *label593
+ 1380 label *label594
+ 1381 write "Depositing..." .display ".status3"
+ 1382 label *label595
+ 1383 sensor *tmp454 @unit @firstItem
+ 1384 jump *label609 notEqual *tmp454 :depositItems:item
+ 1385 label *label596
+ 1386 sensor *tmp478 :depositItems:block @x
+ 1387 sensor *tmp479 :depositItems:block @y
+ 1388 label *label597
+ 1389 label *label598
+ 1390 write "Moving..." .display ".status3"
+ 1391 label *label599
+ 1392 label *label600
+ 1393 ucontrol within *tmp478 *tmp479 6 *tmp484
+ 1394 jump *label603 notEqual *tmp484 false
+ 1395 label *label601
+ 1396 ucontrol approach *tmp478 *tmp479 5.5
+ 1397 label *label602
+ 1398 ucontrol within *tmp478 *tmp479 6 *tmp484
+ 1399 jump *label601 equal *tmp484 false
+ 1400 label *label603
+ 1401 label *label604
+ 1402 label *label605
+ 1403 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1404 label *label606
+ 1405 ucontrol itemDrop :depositItems:block 30
+ 1406 label *label607
+ 1407 sensor *tmp458 @unit @firstItem
+ 1408 op mul *tmp459 *tmp458 :depositItems:cap
+ 1409 sensor *tmp460 :depositItems:block :depositItems:item
+ 1410 jump *label606 greaterThan *tmp459 *tmp460
+ 1411 label *label608
+ 1412 jump *label614 always
+ 1413 label *label609
+ 1414 label *label610
+ 1415 sensor *tmp462 @unit @firstItem
+ 1416 jump *label613 equal *tmp462 null
+ 1417 label *label611
+ 1418 ucontrol itemDrop @air 1000
+ 1419 label *label612
+ 1420 sensor *tmp462 @unit @firstItem
+ 1421 jump *label611 notEqual *tmp462 null
+ 1422 label *label613
+ 1423 label *label614
+ 1424 label *label615
+ 1425 write 0 .display ".transportTarget"
+ 1426 write null .display ".transportItem"
+ 1427 label *label616
+ 1428 label *label617
  1429 label *label348
  1430 return :mineOre*retaddr
  1431 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   580 write "Depositing..." .display ".status3"
   581 label *label570
   582 sensor *tmp454 @unit @firstItem
-    * jump *label584 notEqual *tmp454 :depositItems:item
+  583 jump *label584 notEqual *tmp454 @coal
   584 label *label571
-    * sensor *tmp478 :depositItems:block @x
-    * sensor *tmp479 :depositItems:block @y
+  585 sensor *tmp478 .thoriumGenerator @x
+  586 sensor *tmp479 .thoriumGenerator @y
   587 label *label572
   588 label *label573
   589 write "Moving..." .display ".status3"
 
   599 label *label578
   600 label *label579
   601 label *label580
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  602 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   603 label *label581
-    * ucontrol itemDrop :depositItems:block 30
+  604 ucontrol itemDrop .thoriumGenerator 30
   605 label *label582
   606 sensor *tmp458 @unit @firstItem
   607 op mul *tmp459 *tmp458 :depositItems:cap
-    * sensor *tmp460 :depositItems:block :depositItems:item
+  608 sensor *tmp460 .thoriumGenerator @coal
   609 jump *label581 greaterThan *tmp459 *tmp460
   610 label *label583
   611 jump *label589 always
 
  1381 write "Depositing..." .display ".status3"
  1382 label *label595
  1383 sensor *tmp454 @unit @firstItem
-    * jump *label609 notEqual *tmp454 :depositItems:item
+ 1384 jump *label609 notEqual *tmp454 :mineOre:ore
  1385 label *label596
-    * sensor *tmp478 :depositItems:block @x
-    * sensor *tmp479 :depositItems:block @y
+ 1386 sensor *tmp478 :mineOre:block @x
+ 1387 sensor *tmp479 :mineOre:block @y
  1388 label *label597
  1389 label *label598
  1390 write "Moving..." .display ".status3"
 
  1400 label *label603
  1401 label *label604
  1402 label *label605
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1403 sensor :depositItems:cap :mineOre:block @itemCapacity
  1404 label *label606
-    * ucontrol itemDrop :depositItems:block 30
+ 1405 ucontrol itemDrop :mineOre:block 30
  1406 label *label607
  1407 sensor *tmp458 @unit @firstItem
  1408 op mul *tmp459 *tmp458 :depositItems:cap
-    * sensor *tmp460 :depositItems:block :depositItems:item
+ 1409 sensor *tmp460 :mineOre:block :mineOre:ore
  1410 jump *label606 greaterThan *tmp459 *tmp460
  1411 label *label608
  1412 jump *label614 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   573 op land *tmp359 *tmp357 *tmp358
   574 jump *label438 notEqual *tmp359 false
   575 label *label442
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   576 label *label568
   577 label *label569
   578 write "Depositing..." .display ".status3"
 
  1372 jump *label356 lessThan *tmp476 :mineOre:amount
  1373 label *label358
  1374 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
  1375 label *label593
  1376 label *label594
  1377 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:147:13 (+10 instructions):
 
   512 jump *label161 greaterThanEq *tmp254 50
   513 set :supplyBlock:block .thoriumGenerator
   514 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label163 (h:*label163)
-    * call *label24 *invalid :supplyBlock*retval (m:*label163) (h:*label163)
-    * label *label163
+  515 label *label618
+  516 label *label619
+  517 write "Supplying " .display ".status2"
+  518 write :supplyBlock:ore .display ".item2"
+  519 write :supplyBlock:block .display ".block2"
+  520 label *label620
+  521 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  522 sensor *tmp345 :supplyBlock:block :supplyBlock:ore
+  523 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
+  524 jump *label622 lessThanEq :supplyBlock:missing 0
+  525 set :mineOre:ore :supplyBlock:ore
+  526 set :mineOre:amount :supplyBlock:blockCapacity
+  527 set :mineOre:block :supplyBlock:block
+  528 setaddr :mineOre*retaddr *label621 (h:*label621)
+  529 call *label21 *invalid :mineOre*retval (m:*label621) (h:*label621)
+  530 label *label621
+  531 label *label622
+  532 label *label623
+  533 label *label624
   534 jump *label162 always
   535 label *label161
   536 label *label433

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   515 label *label618
   516 label *label619
   517 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  518 write @coal .display ".item2"
+  519 write .thoriumGenerator .display ".block2"
   520 label *label620
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp345 :supplyBlock:block :supplyBlock:ore
+  521 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  522 sensor *tmp345 .thoriumGenerator @coal
   523 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
   524 jump *label622 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  525 set :mineOre:ore @coal
   526 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  527 set :mineOre:block .thoriumGenerator
   528 setaddr :mineOre*retaddr *label621 (h:*label621)
   529 call *label21 *invalid :mineOre*retval (m:*label621) (h:*label621)
   530 label *label621

Modifications by Replicate loop condition at CoreBuilder.mnd:438:5 (+1 instructions):
 
   259 label *label96
   260 read *tmp102 .controller ".polys"
   261 jump *label98 greaterThanEq *tmp102 3
+  262 label *label625
   263 setaddr :supplyBase*retaddr *label99 (h:*label99)
   264 call *label33 *invalid :supplyBase*retval (m:*label99) (h:*label99)
   265 label *label99
   266 label *label97
-    * jump *label96 always
+  267 read *tmp102 .controller ".polys"
+  268 jump *label625 lessThan *tmp102 3
   269 label *label98
   270 write 3 .controller ".flareTarget"
   271 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:443:5 (+1 instructions):
 
   273 label *label101
   274 read *tmp100 .controller ".flares"
   275 jump *label103 greaterThanEq *tmp100 2
+  276 label *label626
   277 setaddr :supplyBase*retaddr *label104 (h:*label104)
   278 call *label33 *invalid :supplyBase*retval (m:*label104) (h:*label104)
   279 label *label104
   280 label *label102
-    * jump *label101 always
+  281 read *tmp100 .controller ".flares"
+  282 jump *label626 lessThan *tmp100 2
   283 label *label103
   284 set .graphiteSurplus 100
   285 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:462:5 (+1 instructions):
 
   418 label *label128
   419 read *tmp102 .controller ".polys"
   420 jump *label130 greaterThanEq *tmp102 5
+  421 label *label627
   422 setaddr :supplyBase*retaddr *label131 (h:*label131)
   423 call *label33 *invalid :supplyBase*retval (m:*label131) (h:*label131)
   424 label *label131
   425 label *label129
-    * jump *label128 always
+  426 read *tmp102 .controller ".polys"
+  427 jump *label627 lessThan *tmp102 5
   428 label *label130
   429 set :buildBlockFromCfg:cfg "4.222PK2223T"
   430 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:473:5 (+1 instructions):
 
   450 label *label137
   451 read *tmp103 .controller ".megas"
   452 jump *label139 greaterThanEq *tmp103 1
+  453 label *label628
   454 setaddr :supplyBase*retaddr *label140 (h:*label140)
   455 call *label33 *invalid :supplyBase*retval (m:*label140) (h:*label140)
   456 label *label140
   457 label *label138
-    * jump *label137 always
+  458 read *tmp103 .controller ".megas"
+  459 jump *label628 lessThan *tmp103 1
   460 label *label139
   461 control enabled processor7 false
   462 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:107:17 (+6 instructions):
 
   767 write "Goal 5: supplying generator" .display ".status1"
   768 label *label420
   769 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label205 (h:*label205)
-    * call *label22 *invalid :mineOre.1*retval (m:*label205) (h:*label205)
-    * label *label205
+  770 label *label629
+  771 label *label630
+  772 write "Mining " .display ".status2"
+  773 write :mineOre.1:ore .display ".item2"
+  774 write "core" .display ".block2"
+  775 label *label631
+  776 set :mineOre:ore :mineOre.1:ore
+  777 set :mineOre:amount 30
+  778 set :mineOre:block .core
+  779 setaddr :mineOre*retaddr *label632 (h:*label632)
+  780 call *label21 *invalid :mineOre*retval (m:*label632) (h:*label632)
+  781 label *label632
+  782 label *label633
   783 jump *label203 always
   784 label *label202
   785 sensor *tmp297 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   770 label *label629
   771 label *label630
   772 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  773 write @coal .display ".item2"
   774 write "core" .display ".block2"
   775 label *label631
-    * set :mineOre:ore :mineOre.1:ore
+  776 set :mineOre:ore @coal
   777 set :mineOre:amount 30
   778 set :mineOre:block .core
   779 setaddr :mineOre*retaddr *label632 (h:*label632)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   766 label *label419
   767 write "Goal 5: supplying generator" .display ".status1"
   768 label *label420
-    * set :mineOre.1:ore @coal
   769 label *label629
   770 label *label630
   771 write "Mining " .display ".status2"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    91 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    92 jump *label59 equal *tmp159 false
    93 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label53 always
    94 label *label53
    95 set .titaniumDrill *tmp142
    96 write *tmp142 processor1 ".titaniumDrill"
 
   754 sensor *tmp285 .core @titanium
   755 op sub *tmp286 .targetTitanium *tmp285
   756 op min *tmp284 7 *tmp286
-    * jump *label197 always
   757 label *label197
   758 sensor *tmp288 .titaniumDrill @titanium
   759 jump *label198 greaterThanEq *tmp288 *tmp284
 
   916 call *label35 *invalid :buildBlock*retval (m:*label237) (h:*label237)
   917 label *label237
   918 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label235 always
   919 label *label235
   920 return :buildBlockFromCfg*retaddr
   921 end
 
  1328 read *tmp445 .blockBuilder ":buildBlockAt*finished"
  1329 jump *label322 equal *tmp445 false
  1330 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label320 always
  1331 label *label320
  1332 return :buildBlock*retaddr
  1333 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1186 label *label34
  1187 label *label378
  1188 op sign *tmp403 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp403
+ 1189 set :meetTarget:count *tmp403
  1190 label *label379
  1191 label *label382
  1192 op sign *tmp403 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   786 label *label422
   787 sensor :supplyBase0:coal .core @coal
   788 sensor :supplyBase0:sand .core @sand
-    * select *tmp303 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * set :mineOre.1:ore *tmp303
+  789 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   790 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   791 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
   792 label *label211
 
   830 label *label430
   831 sensor :supplyBase0:coal.1 .core @coal
   832 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp316 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp316
+  833 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   834 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   835 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)
   836 label *label227
 
  1183 end
  1184 label *label34
  1185 label *label378
-    * op sign *tmp403 :meetTarget:copper
-    * set :meetTarget:count *tmp403
+ 1186 op sign :meetTarget:count :meetTarget:copper
  1187 label *label379
  1188 label *label382
  1189 op sign *tmp403 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:513:9 (+8 instructions):
 
   481 label *label146
   482 op sub :lineUpUnits:y @thisy 6
   483 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label149 (h:*label149)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
-    * label *label149
+  484 label *label634
+  485 ubind :lineUpUnits:unit
+  486 set :lineUpUnits:firstUnit @unit
+  487 label *label635
+  488 sensor :lineUpUnits:x @unit @flag
+  489 ucontrol itemDrop @air 1000
+  490 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  491 sensor *tmp327 @unit @mining
+  492 jump *label636 equal *tmp327 false
+  493 ucontrol stop
+  494 label *label636
+  495 label *label637
+  496 ubind :lineUpUnits:unit
+  497 label *label638
+  498 jump *label635 notEqual @unit :lineUpUnits:firstUnit
+  499 label *label639
+  500 label *label640
   501 op sub :lineUpUnits:y @thisy 10
   502 set :lineUpUnits:unit @poly
   503 setaddr :lineUpUnits*retaddr *label150 (h:*label150)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   482 op sub :lineUpUnits:y @thisy 6
   483 set :lineUpUnits:unit @mega
   484 label *label634
-    * ubind :lineUpUnits:unit
+  485 ubind @mega
   486 set :lineUpUnits:firstUnit @unit
   487 label *label635
   488 sensor :lineUpUnits:x @unit @flag
 
   493 ucontrol stop
   494 label *label636
   495 label *label637
-    * ubind :lineUpUnits:unit
+  496 ubind @mega
   497 label *label638
   498 jump *label635 notEqual @unit :lineUpUnits:firstUnit
   499 label *label639

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   480 label *label145
   481 label *label146
   482 op sub :lineUpUnits:y @thisy 6
-    * set :lineUpUnits:unit @mega
   483 label *label634
   484 ubind @mega
   485 set :lineUpUnits:firstUnit @unit

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    21 ubind @poly
    22 set .builder @unit
    23 ulocate building core false @copper .coreX .coreY *tmp134 .core
-    * label *label45
    24 jump *label44 equal .core null
-    * label *label46
    25 set :buildBlockFromCfg.1:cfg "2-5}P22222242"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    27 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
 
    73 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    74 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    75 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * label *label487
    76 set .ERROR "Cannot locate spot for titanium drill"
    77 stop
-    * label *label488
    78 label *label56
-    * label *label57
    79 write @pneumatic-drill processor1 ".nextBlock"
    80 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    81 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    86 read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
    87 jump *label59 equal *tmp159 false
    88 read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label53
    89 set .titaniumDrill *tmp142
    90 write *tmp142 processor1 ".titaniumDrill"
    91 set :buildBlockFromCfg.1:cfg "26222PK22239"
 
   134 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   135 write 1 .controller ".flareTarget"
   136 write 1 processor1 ".flareTarget"
-    * label *label67
   137 write 3 .controller ".monoTarget"
   138 write 3 processor1 ".monoTarget"
-    * label *label68
   139 write 85 .controller ".pressTarget"
   140 write 150 .controller ".smelterTarget"
   141 write 30 .controller ".kilnTarget"
 
   152 jump *label74 greaterThanEq *tmp168 300
   153 jump *label72 always
   154 label *label74
-    * label *label75
-    * label *label71
   155 read *tmp101 .controller ".monos"
   156 jump *label70 lessThan *tmp101 3
   157 label *label72
 
   223 set .metaglassSurplus 200
   224 write 6 .controller ".polyTarget"
   225 write 6 processor1 ".polyTarget"
-    * label *label90
   226 set :buildBlockFromCfg.1:cfg "4;1PK2222224P"
   227 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   228 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
 
   244 setaddr :buildUnits*retaddr *label95 (h:*label95)
   245 call *label40 *invalid :buildUnits*retval (m:*label95) (h:*label95)
   246 label *label95
-    * label *label96
   247 read *tmp102 .controller ".polys"
   248 jump *label98 greaterThanEq *tmp102 3
   249 label *label625
   250 setaddr :supplyBase*retaddr *label99 (h:*label99)
   251 call *label33 *invalid :supplyBase*retval (m:*label99) (h:*label99)
   252 label *label99
-    * label *label97
   253 read *tmp102 .controller ".polys"
   254 jump *label625 lessThan *tmp102 3
   255 label *label98
   256 write 3 .controller ".flareTarget"
   257 write 3 processor1 ".flareTarget"
-    * label *label100
-    * label *label101
   258 read *tmp100 .controller ".flares"
   259 jump *label103 greaterThanEq *tmp100 2
   260 label *label626
   261 setaddr :supplyBase*retaddr *label104 (h:*label104)
   262 call *label33 *invalid :supplyBase*retval (m:*label104) (h:*label104)
   263 label *label104
-    * label *label102
   264 read *tmp100 .controller ".flares"
   265 jump *label626 lessThan *tmp100 2
   266 label *label103
   267 set .graphiteSurplus 100
   268 write 5 .controller ".monoTarget"
   269 write 5 processor1 ".monoTarget"
-    * label *label105
   270 write @ore-titanium processor1 ".nextBlock"
   271 wait 0.000000001
   272 ubind @flare
 
   291 jump *label107 equal *tmp203 false
   292 write false processor4 ":stopLocation*finished"
   293 write 3 processor4 "@counter"
-    * label *label106
   294 write null processor1 ".nextBlock"
   295 write .coreX processor4 ":layoutThoriumDrill:x"
   296 write .coreY processor4 ":layoutThoriumDrill:y"
 
   312 jump *label111 equal *tmp210 false
   313 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   314 jump *label112 notEqual :buildThoriumDrill:result false
-    * label *label489
   315 set .ERROR "Cannot locate spot for thorium drill"
   316 stop
-    * label *label490
   317 label *label112
-    * label *label113
   318 write @laser-drill processor5 ":buildBlockAt:block"
   319 read *tmp56 processor4 ".drillX"
   320 write *tmp56 processor5 ":buildBlockAt:x"
 
   388 wait 1e-15
   389 read *tmp233 processor3 ":setThoriumContainer*finished"
   390 jump *label126 equal *tmp233 false
-    * label *label108
   391 write null processor1 ".nextBlock"
   392 write 1 .controller ".megaTarget"
   393 write 1 processor1 ".megaTarget"
-    * label *label127
-    * label *label128
   394 read *tmp102 .controller ".polys"
   395 jump *label130 greaterThanEq *tmp102 5
   396 label *label627
   397 setaddr :supplyBase*retaddr *label131 (h:*label131)
   398 call *label33 *invalid :supplyBase*retval (m:*label131) (h:*label131)
   399 label *label131
-    * label *label129
   400 read *tmp102 .controller ".polys"
   401 jump *label627 lessThan *tmp102 5
   402 label *label130
 
   416 label *label135
   417 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   418 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
-    * label *label134
   419 set .metaglassSurplus 50
   420 setaddr :buildUnits*retaddr *label136 (h:*label136)
   421 call *label40 *invalid :buildUnits*retval (m:*label136) (h:*label136)
   422 label *label136
-    * label *label137
   423 read *tmp103 .controller ".megas"
   424 jump *label139 greaterThanEq *tmp103 1
   425 label *label628
   426 setaddr :supplyBase*retaddr *label140 (h:*label140)
   427 call *label33 *invalid :supplyBase*retval (m:*label140) (h:*label140)
   428 label *label140
-    * label *label138
   429 read *tmp103 .controller ".megas"
   430 jump *label628 lessThan *tmp103 1
   431 label *label139
 
   452 label *label145
   453 label *label146
   454 op sub :lineUpUnits:y @thisy 6
-    * label *label634
   455 ubind @mega
   456 set :lineUpUnits:firstUnit @unit
   457 label *label635
 
   462 jump *label636 equal *tmp327 false
   463 ucontrol stop
   464 label *label636
-    * label *label637
   465 ubind @mega
-    * label *label638
   466 jump *label635 notEqual @unit :lineUpUnits:firstUnit
-    * label *label639
-    * label *label640
   467 op sub :lineUpUnits:y @thisy 10
   468 set :lineUpUnits:unit @poly
   469 setaddr :lineUpUnits*retaddr *label150 (h:*label150)
 
   479 setaddr :lineUpUnits*retaddr *label152 (h:*label152)
   480 call *label42 *invalid :lineUpUnits*retval (m:*label152) (h:*label152)
   481 label *label152
-    * label *label147
   482 jump *label146 always
-    * label *label148
-    * label *label141
   483 end
   484 label *label33
   485 sensor *tmp247 .core @silicon
 
   487 op max *tmp249 0 *tmp248
   488 write *tmp249 processor8 ".sandTarget"
   489 jump *label155 equal .thoriumContainer false
-    * label *label407
   490 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label408
   491 sensor *tmp251 .thoriumBattery @totalPower
   492 jump *label159 greaterThanEq *tmp251 3000
   493 sensor *tmp254 .core @coal
   494 jump *label161 greaterThanEq *tmp254 50
   495 set :supplyBlock:block .thoriumGenerator
   496 set :supplyBlock:ore @coal
-    * label *label618
-    * label *label619
   497 write "Supplying " .display ".status2"
   498 write @coal .display ".item2"
   499 write .thoriumGenerator .display ".block2"
-    * label *label620
   500 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   501 sensor *tmp345 .thoriumGenerator @coal
   502 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
 
   508 call *label21 *invalid :mineOre*retval (m:*label621) (h:*label621)
   509 label *label621
   510 label *label622
-    * label *label623
-    * label *label624
   511 jump *label162 always
   512 label *label161
-    * label *label433
   513 sensor *tmp349 .thoriumGenerator @itemCapacity
   514 op min :transportStatus:target *tmp349 30
-    * label *label473
   515 write :transportStatus:target .display ".transportTarget"
   516 write @coal .display ".transportItem"
-    * label *label474
-    * label *label481
   517 write "Transferring " .display ".status2"
   518 write @coal .display ".item2"
   519 write .thoriumGenerator .display ".block2"
-    * label *label482
-    * label *label499
-    * label *label500
   520 write "Moving..." .display ".status3"
-    * label *label501
   521 label *label502
   522 sensor *tmp447 @unit @firstItem
   523 jump *label503 equal *tmp447 null
   524 ucontrol itemDrop @air 1000
   525 label *label503
-    * label *label504
   526 ucontrol approach .coreX .coreY 5.5
-    * label *label505
   527 ucontrol within .coreX .coreY 6 *tmp450
   528 jump *label502 equal *tmp450 false
-    * label *label506
-    * label *label507
-    * label *label526
-    * label *label527
   529 sensor *tmp452 @unit @firstItem
   530 jump *label530 equal *tmp452 null
   531 label *label528
   532 ucontrol itemDrop @air 1000
-    * label *label529
   533 sensor *tmp452 @unit @firstItem
   534 jump *label528 notEqual *tmp452 null
   535 label *label530
-    * label *label531
   536 label *label438
   537 ucontrol itemTake .core @coal 30
   538 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   542 jump *label439 equal *tmp354 false
   543 ucontrol itemDrop @air 1000
   544 label *label439
-    * label *label440
-    * label *label441
   545 sensor *tmp356 @unit @coal
   546 op lessThan *tmp357 *tmp356 30
   547 sensor *tmp358 .core @coal
   548 op land *tmp359 *tmp357 *tmp358
   549 jump *label438 notEqual *tmp359 false
-    * label *label442
-    * label *label568
-    * label *label569
   550 write "Depositing..." .display ".status3"
-    * label *label570
   551 sensor *tmp454 @unit @firstItem
   552 jump *label584 notEqual *tmp454 @coal
-    * label *label571
   553 sensor *tmp478 .thoriumGenerator @x
   554 sensor *tmp479 .thoriumGenerator @y
-    * label *label572
-    * label *label573
   555 write "Moving..." .display ".status3"
-    * label *label574
-    * label *label575
   556 ucontrol within *tmp478 *tmp479 6 *tmp484
   557 jump *label578 notEqual *tmp484 false
   558 label *label576
   559 ucontrol approach *tmp478 *tmp479 5.5
-    * label *label577
   560 ucontrol within *tmp478 *tmp479 6 *tmp484
   561 jump *label576 equal *tmp484 false
   562 label *label578
-    * label *label579
-    * label *label580
   563 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   564 label *label581
   565 ucontrol itemDrop .thoriumGenerator 30
-    * label *label582
   566 sensor *tmp458 @unit @firstItem
   567 op mul *tmp459 *tmp458 :depositItems:cap
   568 sensor *tmp460 .thoriumGenerator @coal
   569 jump *label581 greaterThan *tmp459 *tmp460
-    * label *label583
   570 jump *label589 always
   571 label *label584
-    * label *label585
   572 sensor *tmp462 @unit @firstItem
   573 jump *label588 equal *tmp462 null
   574 label *label586
   575 ucontrol itemDrop @air 1000
-    * label *label587
   576 sensor *tmp462 @unit @firstItem
   577 jump *label586 notEqual *tmp462 null
   578 label *label588
   579 label *label589
-    * label *label590
   580 write 0 .display ".transportTarget"
   581 write null .display ".transportItem"
-    * label *label591
-    * label *label592
-    * label *label444
   582 label *label162
   583 label *label159
-    * label *label160
   584 set :fetchBlock:block .thoriumContainer
   585 set :fetchBlock:item @thorium
   586 setaddr :fetchBlock*retaddr *label165 (h:*label165)
   587 call *label23 *invalid :fetchBlock*retval (m:*label165) (h:*label165)
   588 label *label165
-    * label *label157
   589 jump *label156 always
   590 label *label155
   591 read *tmp101 .controller ".monos"
   592 jump *label166 lessThanEq *tmp101 3
-    * label *label409
   593 write "Phase 1: supplying base" .display ".status1"
-    * label *label410
-    * label *label538
-    * label *label539
   594 write "Mining " .display ".status2"
   595 write @coal .display ".item2"
   596 write "core" .display ".block2"
-    * label *label540
   597 set :mineOre:ore @coal
   598 set :mineOre:amount 30
   599 set :mineOre:block .core
   600 setaddr :mineOre*retaddr *label541 (h:*label541)
   601 call *label21 *invalid :mineOre*retval (m:*label541) (h:*label541)
   602 label *label541
-    * label *label542
-    * label *label168
   603 jump *label167 always
   604 label *label166
   605 set :supplyBase0:supplied false
 
   608 jump *label174 greaterThanEq *tmp261 .targetGraphite
   609 sensor *tmp264 .press @coal
   610 jump *label176 greaterThanEq *tmp264 5
-    * label *label411
   611 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label412
   612 set :supplyBlock:block .press
   613 set :supplyBlock:ore @coal
   614 setaddr :supplyBlock*retaddr *label179 (h:*label179)
 
   616 label *label179
   617 set :supplyBase0:supplied true
   618 label *label176
-    * label *label177
   619 label *label174
-    * label *label175
   620 sensor *tmp267 .core @silicon
   621 jump *label180 greaterThanEq *tmp267 .targetSilicon
   622 sensor *tmp270 .smelter @coal
   623 jump *label182 greaterThanEq *tmp270 5
-    * label *label413
   624 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label414
   625 set :supplyBlock:block .smelter
   626 set :supplyBlock:ore @coal
   627 setaddr :supplyBlock*retaddr *label185 (h:*label185)
 
   632 label *label182
   633 sensor *tmp273 .smelter @sand
   634 jump *label186 greaterThanEq *tmp273 5
-    * label *label415
   635 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label416
   636 set :supplyBlock:block .smelter
   637 set :supplyBlock:ore @sand
   638 setaddr :supplyBlock*retaddr *label189 (h:*label189)
 
   640 label *label189
   641 set :supplyBase0:supplied true
   642 label *label186
-    * label *label187
   643 label *label183
   644 label *label180
-    * label *label181
   645 sensor *tmp276 .battery @totalPower
   646 jump *label190 greaterThanEq *tmp276 .powerTarget
   647 sensor *tmp279 .generator @coal
   648 jump *label192 greaterThanEq *tmp279 2
-    * label *label417
   649 write "Goal 4: supplying generator" .display ".status1"
-    * label *label418
   650 set :supplyBlock:block .generator
   651 set :supplyBlock:ore @coal
   652 setaddr :supplyBlock*retaddr *label195 (h:*label195)
 
   654 label *label195
   655 set :supplyBase0:supplied true
   656 label *label192
-    * label *label193
   657 label *label190
-    * label *label191
   658 label *label172
-    * label *label173
   659 set *tmp284 100
   660 sensor *tmp282 .core @titanium
   661 jump *label197 greaterThanEq *tmp282 .targetTitanium
 
   669 sensor *tmp293 .battery @totalPower
   670 op mul *tmp294 .unloader1 .powerTarget
   671 jump *label202 greaterThanEq *tmp293 *tmp294
-    * label *label419
   672 write "Goal 5: supplying generator" .display ".status1"
-    * label *label420
-    * label *label629
-    * label *label630
   673 write "Mining " .display ".status2"
   674 write @coal .display ".item2"
   675 write "core" .display ".block2"
-    * label *label631
   676 set :mineOre:ore @coal
   677 set :mineOre:amount 30
   678 set :mineOre:block .core
   679 setaddr :mineOre*retaddr *label632 (h:*label632)
   680 call *label21 *invalid :mineOre*retval (m:*label632) (h:*label632)
   681 label *label632
-    * label *label633
   682 jump *label203 always
   683 label *label202
   684 sensor *tmp297 .core @silicon
   685 jump *label206 greaterThanEq *tmp297 .targetSilicon
-    * label *label421
   686 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label422
   687 sensor :supplyBase0:coal .core @coal
   688 sensor :supplyBase0:sand .core @sand
   689 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   694 label *label206
   695 sensor *tmp304 .core @copper
   696 jump *label212 greaterThanEq *tmp304 .targetCopper
-    * label *label423
   697 write "Goal 7: copper requirement" .display ".status1"
-    * label *label424
   698 set :mineOre.1:ore @copper
   699 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   700 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
 
   703 label *label212
   704 sensor *tmp307 .core @lead
   705 jump *label216 greaterThanEq *tmp307 .targetLead
-    * label *label425
   706 write "Goal 8: lead requirement" .display ".status1"
-    * label *label426
   707 set :mineOre.1:ore @lead
   708 setaddr :mineOre.1*retaddr *label219 (h:*label219)
   709 call *label22 *invalid :mineOre.1*retval (m:*label219) (h:*label219)
 
   712 label *label216
   713 sensor *tmp310 .core @metaglass
   714 jump *label220 greaterThanEq *tmp310 .targetMetaglass
-    * label *label427
   715 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label428
   716 set :mineOre.1:ore @sand
   717 setaddr :mineOre.1*retaddr *label223 (h:*label223)
   718 call *label22 *invalid :mineOre.1*retval (m:*label223) (h:*label223)
   719 label *label223
   720 jump *label221 always
   721 label *label220
-    * label *label429
   722 write "Goal 10: supplying base" .display ".status1"
-    * label *label430
   723 sensor :supplyBase0:coal.1 .core @coal
   724 sensor :supplyBase0:sand.1 .core @sand
   725 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   732 label *label207
   733 label *label203
   734 label *label200
-    * label *label201
   735 jump *label199 always
   736 label *label198
-    * label *label431
   737 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label432
   738 set :fetchBlock:block .titaniumDrill
   739 set :fetchBlock:item @titanium
   740 setaddr :fetchBlock*retaddr *label229 (h:*label229)
   741 call *label23 *invalid :fetchBlock*retval (m:*label229) (h:*label229)
   742 label *label229
   743 label *label199
-    * label *label171
   744 label *label167
   745 label *label156
-    * label *label154
   746 return :supplyBase*retaddr
   747 end
   748 label *label36
 
   771 set :buildRemoteBlock*retval :buildBlock*retval
   772 jump *label230 always
   773 label *label231
-    * label *label232
   774 set :buildRemoteBlock*retval false
   775 jump *label230 always
   776 label *label230
 
   800 call *label35 *invalid :buildBlock*retval (m:*label237) (h:*label237)
   801 label *label237
   802 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label235
   803 return :buildBlockFromCfg*retaddr
   804 end
   805 label *label38
 
   809 call *label37 *invalid :buildBlockFromCfg*retval (m:*label239) (h:*label239)
   810 label *label239
   811 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label238
   812 return :buildBlockFromCfg.1*retaddr
   813 end
   814 label *label39
 
   827 setaddr :meetTarget*retaddr *label242 (h:*label242)
   828 call *label34 *invalid :meetTarget*retval (m:*label242) (h:*label242)
   829 label *label242
-    * label *label240
   830 return :meetTarget.1*retaddr
   831 end
   832 label *label40
 
   846 write 0 .controller ".leadReserve"
   847 write 0 .controller ".siliconReserve"
   848 write 0 .controller ".graphiteReserve"
-    * label *label243
   849 return :buildUnits*retaddr
   850 end
   851 label *label41
   852 label *label246
   853 ubind :flagUnits:unit
   854 set :flagUnits:firstUnit @unit
-    * label *label247
   855 jump *label246 equal :flagUnits:firstUnit null
-    * label *label248
   856 set :flagUnits:x @thisx
   857 label *label249
   858 ucontrol flag :flagUnits:x
   859 op add :flagUnits:x :flagUnits:x 4
   860 ubind :flagUnits:unit
-    * label *label250
   861 jump *label249 notEqual @unit :flagUnits:firstUnit
-    * label *label251
-    * label *label245
   862 return :flagUnits*retaddr
   863 end
   864 label *label42
 
   872 jump *label256 equal *tmp327 false
   873 ucontrol stop
   874 label *label256
-    * label *label257
   875 ubind :lineUpUnits:unit
-    * label *label254
   876 jump *label253 notEqual @unit :lineUpUnits:firstUnit
-    * label *label255
-    * label *label252
   877 return :lineUpUnits*retaddr
   878 end
   879 label *label22
-    * label *label483
   880 write "Mining " .display ".status2"
   881 write :mineOre.1:ore .display ".item2"
   882 write "core" .display ".block2"
-    * label *label484
   883 set :mineOre:ore :mineOre.1:ore
   884 set :mineOre:amount 30
   885 set :mineOre:block .core
   886 setaddr :mineOre*retaddr *label261 (h:*label261)
   887 call *label21 *invalid :mineOre*retval (m:*label261) (h:*label261)
   888 label *label261
-    * label *label259
   889 return :mineOre.1*retaddr
   890 end
   891 label *label23
   892 sensor *tmp331 :fetchBlock:block @itemCapacity
   893 op min :transportStatus:target *tmp331 30
-    * label *label475
   894 write :transportStatus:target .display ".transportTarget"
   895 write :fetchBlock:item .display ".transportItem"
-    * label *label476
-    * label *label479
   896 write "Fetching " .display ".status2"
   897 write :fetchBlock:item .display ".item2"
   898 write :fetchBlock:block .display ".block2"
-    * label *label480
   899 sensor *tmp333 :fetchBlock:block @x
   900 sensor *tmp334 :fetchBlock:block @y
-    * label *label508
-    * label *label509
   901 write "Moving..." .display ".status3"
-    * label *label510
   902 label *label511
   903 sensor *tmp447 @unit @firstItem
   904 jump *label512 equal *tmp447 null
   905 ucontrol itemDrop @air 1000
   906 label *label512
-    * label *label513
   907 ucontrol approach *tmp333 *tmp334 5.5
-    * label *label514
   908 ucontrol within *tmp333 *tmp334 6 *tmp450
   909 jump *label511 equal *tmp450 false
-    * label *label515
-    * label *label516
-    * label *label493
-    * label *label494
   910 sensor *tmp452 @unit @firstItem
   911 jump *label497 equal *tmp452 null
   912 label *label495
   913 ucontrol itemDrop @air 1000
-    * label *label496
   914 sensor *tmp452 @unit @firstItem
   915 jump *label495 notEqual *tmp452 null
   916 label *label497
-    * label *label498
   917 label *label267
   918 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   919 sensor :fetchBlock:unitItem @unit @firstItem
 
   923 jump *label270 equal *tmp338 false
   924 ucontrol itemDrop @air 1000
   925 label *label270
-    * label *label271
-    * label *label268
   926 sensor *tmp340 @unit :fetchBlock:item
   927 op lessThan *tmp341 *tmp340 30
   928 sensor *tmp342 :fetchBlock:block :fetchBlock:item
   929 op land *tmp343 *tmp341 *tmp342
   930 jump *label267 notEqual *tmp343 false
-    * label *label269
-    * label *label543
-    * label *label544
   931 write "Depositing..." .display ".status3"
-    * label *label545
   932 sensor *tmp454 @unit @firstItem
   933 jump *label559 notEqual *tmp454 :fetchBlock:item
-    * label *label546
   934 sensor *tmp478 .core @x
   935 sensor *tmp479 .core @y
-    * label *label547
-    * label *label548
   936 write "Moving..." .display ".status3"
-    * label *label549
-    * label *label550
   937 ucontrol within *tmp478 *tmp479 6 *tmp484
   938 jump *label553 notEqual *tmp484 false
   939 label *label551
   940 ucontrol approach *tmp478 *tmp479 5.5
-    * label *label552
   941 ucontrol within *tmp478 *tmp479 6 *tmp484
   942 jump *label551 equal *tmp484 false
   943 label *label553
-    * label *label554
-    * label *label555
   944 sensor :depositItems:cap .core @itemCapacity
   945 label *label556
   946 ucontrol itemDrop .core 30
-    * label *label557
   947 sensor *tmp458 @unit @firstItem
   948 op mul *tmp459 *tmp458 :depositItems:cap
   949 sensor *tmp460 .core :fetchBlock:item
   950 jump *label556 greaterThan *tmp459 *tmp460
-    * label *label558
   951 jump *label564 always
   952 label *label559
-    * label *label560
   953 sensor *tmp462 @unit @firstItem
   954 jump *label563 equal *tmp462 null
   955 label *label561
   956 ucontrol itemDrop @air 1000
-    * label *label562
   957 sensor *tmp462 @unit @firstItem
   958 jump *label561 notEqual *tmp462 null
   959 label *label563
   960 label *label564
-    * label *label565
   961 write 0 .display ".transportTarget"
   962 write null .display ".transportItem"
-    * label *label566
-    * label *label567
-    * label *label262
   963 return :fetchBlock*retaddr
   964 end
   965 label *label24
-    * label *label485
   966 write "Supplying " .display ".status2"
   967 write :supplyBlock:ore .display ".item2"
   968 write :supplyBlock:block .display ".block2"
-    * label *label486
   969 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   970 sensor *tmp345 :supplyBlock:block :supplyBlock:ore
   971 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
 
   977 call *label21 *invalid :mineOre*retval (m:*label277) (h:*label277)
   978 label *label277
   979 label *label275
-    * label *label276
-    * label *label273
   980 return :supplyBlock*retaddr
   981 end
   982 label *label27
 
  1007 op sub :unpackCfg:rotation *tmp394 50
  1008 read *tmp400 :unpackCfg:cfg 12
  1009 op sub :unpackCfg:ind *tmp400 50
-    * label *label289
  1010 return :unpackCfg*retaddr
  1011 end
  1012 label *label34
-    * label *label378
  1013 op sign :meetTarget:count :meetTarget:copper
-    * label *label379
-    * label *label382
  1014 op sign *tmp403 :meetTarget:lead
  1015 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label383
-    * label *label386
  1016 op sign *tmp403 :meetTarget:graphite
  1017 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label387
-    * label *label390
  1018 op sign *tmp403 :meetTarget:silicon
  1019 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label391
-    * label *label394
  1020 op sign *tmp403 :meetTarget:titanium
  1021 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label395
-    * label *label398
  1022 op sign *tmp403 :meetTarget:metaglass
  1023 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label399
-    * label *label402
  1024 op sign *tmp403 :meetTarget:thorium
  1025 op add :meetTarget:count :meetTarget:count *tmp403
-    * label *label403
-    * label *label293
  1026 write :meetTarget:count .display ".totalTargets"
  1027 write :meetTarget:block .display ".nextBlock"
  1028 write :meetTarget:copper .display ".targetCopper"
 
  1063 set *tmp416 false
  1064 jump *label304 always
  1065 label *label305
-    * label *label306
  1066 sensor *tmp420 .core @lead
  1067 jump *label307 greaterThanEq *tmp420 .targetLead
  1068 set *tmp416 false
  1069 jump *label304 always
  1070 label *label307
-    * label *label308
  1071 sensor *tmp423 .core @graphite
  1072 jump *label309 greaterThanEq *tmp423 .targetGraphite
  1073 set *tmp416 false
  1074 jump *label304 always
  1075 label *label309
-    * label *label310
  1076 sensor *tmp426 .core @silicon
  1077 jump *label311 greaterThanEq *tmp426 .targetSilicon
  1078 set *tmp416 false
  1079 jump *label304 always
  1080 label *label311
-    * label *label312
  1081 sensor *tmp429 .core @titanium
  1082 jump *label313 greaterThanEq *tmp429 .targetTitanium
  1083 set *tmp416 false
  1084 jump *label304 always
  1085 label *label313
-    * label *label314
  1086 sensor *tmp432 .core @metaglass
  1087 jump *label315 greaterThanEq *tmp432 .targetMetaglass
  1088 set *tmp416 false
  1089 jump *label304 always
  1090 label *label315
-    * label *label316
  1091 sensor *tmp435 .core @thorium
  1092 jump *label317 greaterThanEq *tmp435 .targetThorium
  1093 set *tmp416 false
  1094 jump *label304 always
  1095 label *label317
-    * label *label318
  1096 set *tmp416 true
  1097 jump *label304 always
  1098 label *label304
 
  1100 setaddr :supplyBase*retaddr *label319 (h:*label319)
  1101 call *label33 *invalid :supplyBase*retval (m:*label319) (h:*label319)
  1102 label *label319
-    * label *label302
  1103 jump *label301 always
  1104 label *label303
-    * label *label290
  1105 return :meetTarget*retaddr
  1106 end
  1107 label *label35
 
  1129 read *tmp445 .blockBuilder ":buildBlockAt*finished"
  1130 jump *label322 equal *tmp445 false
  1131 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label320
  1132 return :buildBlock*retaddr
  1133 end
  1134 label *label21
  1135 op min :mineOre:amount :mineOre:amount 30
-    * label *label477
  1136 write :mineOre:amount .display ".transportTarget"
  1137 write :mineOre:ore .display ".transportItem"
-    * label *label478
-    * label *label456
  1138 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
  1139 jump *label458 notEqual *tmp480 false
-    * label *label491
  1140 set .ERROR "Cannot locate ore"
  1141 stop
-    * label *label492
  1142 label *label458
-    * label *label459
-    * label *label460
-    * label *label517
-    * label *label518
  1143 write "Moving..." .display ".status3"
-    * label *label519
  1144 label *label520
  1145 sensor *tmp447 @unit @firstItem
  1146 jump *label521 equal *tmp447 null
  1147 ucontrol itemDrop @air 1000
  1148 label *label521
-    * label *label522
  1149 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label523
  1150 ucontrol within :locateOre:x :locateOre:y 6 *tmp450
  1151 jump *label520 equal *tmp450 false
-    * label *label524
-    * label *label525
  1152 sensor *tmp465 @unit @firstItem
  1153 jump *label352 equal *tmp465 :mineOre:ore
-    * label *label532
-    * label *label533
  1154 sensor *tmp452 @unit @firstItem
  1155 jump *label536 equal *tmp452 null
  1156 label *label534
  1157 ucontrol itemDrop @air 1000
-    * label *label535
  1158 sensor *tmp452 @unit @firstItem
  1159 jump *label534 notEqual *tmp452 null
  1160 label *label536
-    * label *label537
  1161 label *label352
-    * label *label353
-    * label *label449
  1162 write "Mining..." .display ".status3"
-    * label *label450
  1163 op add :mineOre:stop @second 10
  1164 label *label356
  1165 sensor :mineOre:item @unit @firstItem
 
  1169 jump *label359 equal *tmp472 false
  1170 jump *label358 always
  1171 label *label359
-    * label *label360
  1172 ucontrol mine :locateOre:x :locateOre:y
  1173 jump *label361 lessThanEq @second :mineOre:stop
  1174 jump *label358 always
  1175 label *label361
-    * label *label362
-    * label *label357
  1176 sensor *tmp476 @unit @totalItems
  1177 jump *label356 lessThan *tmp476 :mineOre:amount
  1178 label *label358
  1179 ucontrol unbind
-    * label *label593
-    * label *label594
  1180 write "Depositing..." .display ".status3"
-    * label *label595
  1181 sensor *tmp454 @unit @firstItem
  1182 jump *label609 notEqual *tmp454 :mineOre:ore
-    * label *label596
  1183 sensor *tmp478 :mineOre:block @x
  1184 sensor *tmp479 :mineOre:block @y
-    * label *label597
-    * label *label598
  1185 write "Moving..." .display ".status3"
-    * label *label599
-    * label *label600
  1186 ucontrol within *tmp478 *tmp479 6 *tmp484
  1187 jump *label603 notEqual *tmp484 false
  1188 label *label601
  1189 ucontrol approach *tmp478 *tmp479 5.5
-    * label *label602
  1190 ucontrol within *tmp478 *tmp479 6 *tmp484
  1191 jump *label601 equal *tmp484 false
  1192 label *label603
-    * label *label604
-    * label *label605
  1193 sensor :depositItems:cap :mineOre:block @itemCapacity
  1194 label *label606
  1195 ucontrol itemDrop :mineOre:block 30
-    * label *label607
  1196 sensor *tmp458 @unit @firstItem
  1197 op mul *tmp459 *tmp458 :depositItems:cap
  1198 sensor *tmp460 :mineOre:block :mineOre:ore
  1199 jump *label606 greaterThan *tmp459 *tmp460
-    * label *label608
  1200 jump *label614 always
  1201 label *label609
-    * label *label610
  1202 sensor *tmp462 @unit @firstItem
  1203 jump *label613 equal *tmp462 null
  1204 label *label611
  1205 ucontrol itemDrop @air 1000
-    * label *label612
  1206 sensor *tmp462 @unit @firstItem
  1207 jump *label611 notEqual *tmp462 null
  1208 label *label613
  1209 label *label614
-    * label *label615
  1210 write 0 .display ".transportTarget"
  1211 write null .display ".transportItem"
-    * label *label616
-    * label *label617
-    * label *label348
  1212 return :mineOre*retaddr
  1213 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   149 call *label33 *invalid :supplyBase*retval (m:*label73) (h:*label73)
   150 label *label73
   151 sensor *tmp168 .battery @totalPower
-    * jump *label74 greaterThanEq *tmp168 300
-    * jump *label72 always
+  152 jump *label72 lessThan *tmp168 300
   153 label *label74
   154 read *tmp101 .controller ".monos"
   155 jump *label70 lessThan *tmp101 3
 
  1165 op notEqual *tmp470 :mineOre:item null
  1166 op notEqual *tmp471 :mineOre:item :mineOre:ore
  1167 op land *tmp472 *tmp470 *tmp471
-    * jump *label359 equal *tmp472 false
-    * jump *label358 always
+ 1168 jump *label358 notEqual *tmp472 false
  1169 label *label359
  1170 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label361 lessThanEq @second :mineOre:stop
-    * jump *label358 always
+ 1171 jump *label358 greaterThan @second :mineOre:stop
  1172 label *label361
  1173 sensor *tmp476 @unit @totalItems
  1174 jump *label356 lessThan *tmp476 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   150 label *label73
   151 sensor *tmp168 .battery @totalPower
   152 jump *label72 lessThan *tmp168 300
-    * label *label74
   153 read *tmp101 .controller ".monos"
   154 jump *label70 lessThan *tmp101 3
   155 label *label72
 
  1165 op notEqual *tmp471 :mineOre:item :mineOre:ore
  1166 op land *tmp472 *tmp470 *tmp471
  1167 jump *label358 notEqual *tmp472 false
-    * label *label359
  1168 ucontrol mine :locateOre:x :locateOre:y
  1169 jump *label358 greaterThan @second :mineOre:stop
-    * label *label361
  1170 sensor *tmp476 @unit @totalItems
  1171 jump *label356 lessThan *tmp476 :mineOre:amount
  1172 label *label358

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   474 label *label151
   475 op sub :lineUpUnits:y @thisy 18
   476 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label152 (h:*label152)
+  477 setaddr :lineUpUnits*retaddr *label146 (h:*label152)
   478 call *label42 *invalid :lineUpUnits*retval (m:*label152) (h:*label152)
   479 label *label152
   480 jump *label146 always
 
   498 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   499 sensor *tmp345 .thoriumGenerator @coal
   500 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
-    * jump *label622 lessThanEq :supplyBlock:missing 0
+  501 jump *label162 lessThanEq :supplyBlock:missing 0
   502 set :mineOre:ore @coal
   503 set :mineOre:amount :supplyBlock:blockCapacity
   504 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label621 (h:*label621)
+  505 setaddr :mineOre*retaddr *label162 (h:*label621)
   506 call *label21 *invalid :mineOre*retval (m:*label621) (h:*label621)
   507 label *label621
   508 label *label622
 
   584 setaddr :fetchBlock*retaddr *label165 (h:*label165)
   585 call *label23 *invalid :fetchBlock*retval (m:*label165) (h:*label165)
   586 label *label165
-    * jump *label156 always
+  587 return :supplyBase*retaddr
   588 label *label155
   589 read *tmp101 .controller ".monos"
   590 jump *label166 lessThanEq *tmp101 3
 
   598 setaddr :mineOre*retaddr *label541 (h:*label541)
   599 call *label21 *invalid :mineOre*retval (m:*label541) (h:*label541)
   600 label *label541
-    * jump *label167 always
+  601 return :supplyBase*retaddr
   602 label *label166
   603 set :supplyBase0:supplied false
   604 jump *label172 notEqual .unloader1 null
 
   663 label *label197
   664 sensor *tmp288 .titaniumDrill @titanium
   665 jump *label198 greaterThanEq *tmp288 *tmp284
-    * jump *label200 notEqual :supplyBase0:supplied false
+  666 jump *label199 notEqual :supplyBase0:supplied false
   667 sensor *tmp293 .battery @totalPower
   668 op mul *tmp294 .unloader1 .powerTarget
   669 jump *label202 greaterThanEq *tmp293 *tmp294
 
   677 setaddr :mineOre*retaddr *label632 (h:*label632)
   678 call *label21 *invalid :mineOre*retval (m:*label632) (h:*label632)
   679 label *label632
-    * jump *label203 always
+  680 return :supplyBase*retaddr
   681 label *label202
   682 sensor *tmp297 .core @silicon
   683 jump *label206 greaterThanEq *tmp297 .targetSilicon
 
   688 setaddr :mineOre.1*retaddr *label211 (h:*label211)
   689 call *label22 *invalid :mineOre.1*retval (m:*label211) (h:*label211)
   690 label *label211
-    * jump *label207 always
+  691 return :supplyBase*retaddr
   692 label *label206
   693 sensor *tmp304 .core @copper
   694 jump *label212 greaterThanEq *tmp304 .targetCopper
 
   697 setaddr :mineOre.1*retaddr *label215 (h:*label215)
   698 call *label22 *invalid :mineOre.1*retval (m:*label215) (h:*label215)
   699 label *label215
-    * jump *label213 always
+  700 return :supplyBase*retaddr
   701 label *label212
   702 sensor *tmp307 .core @lead
   703 jump *label216 greaterThanEq *tmp307 .targetLead
 
   706 setaddr :mineOre.1*retaddr *label219 (h:*label219)
   707 call *label22 *invalid :mineOre.1*retval (m:*label219) (h:*label219)
   708 label *label219
-    * jump *label217 always
+  709 return :supplyBase*retaddr
   710 label *label216
   711 sensor *tmp310 .core @metaglass
   712 jump *label220 greaterThanEq *tmp310 .targetMetaglass
 
   715 setaddr :mineOre.1*retaddr *label223 (h:*label223)
   716 call *label22 *invalid :mineOre.1*retval (m:*label223) (h:*label223)
   717 label *label223
-    * jump *label221 always
+  718 return :supplyBase*retaddr
   719 label *label220
   720 write "Goal 10: supplying base" .display ".status1"
   721 sensor :supplyBase0:coal.1 .core @coal
 
   730 label *label207
   731 label *label203
   732 label *label200
-    * jump *label199 always
+  733 return :supplyBase*retaddr
   734 label *label198
   735 write "Goal 11: Fetching titanium" .display ".status1"
   736 set :fetchBlock:block .titaniumDrill
 
   767 call *label35 *invalid :buildBlock*retval (m:*label234) (h:*label234)
   768 label *label234
   769 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label230 always
+  770 return :buildRemoteBlock*retaddr
   771 label *label231
   772 set :buildRemoteBlock*retval false
-    * jump *label230 always
+  773 return :buildRemoteBlock*retaddr
   774 label *label230
   775 return :buildRemoteBlock*retaddr
   776 end
 
  1095 jump *label304 always
  1096 label *label304
  1097 jump *label303 notEqual *tmp416 false
-    * setaddr :supplyBase*retaddr *label319 (h:*label319)
+ 1098 setaddr :supplyBase*retaddr *label301 (h:*label319)
  1099 call *label33 *invalid :supplyBase*retval (m:*label319) (h:*label319)
  1100 label *label319
  1101 jump *label301 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-20 instructions):
 
   476 set :lineUpUnits:unit @flare
   477 setaddr :lineUpUnits*retaddr *label146 (h:*label152)
   478 call *label42 *invalid :lineUpUnits*retval (m:*label152) (h:*label152)
-    * label *label152
-    * jump *label146 always
-    * end
   479 label *label33
   480 sensor *tmp247 .core @silicon
   481 op sub *tmp248 .targetSilicon *tmp247
 
   501 set :mineOre:block .thoriumGenerator
   502 setaddr :mineOre*retaddr *label162 (h:*label621)
   503 call *label21 *invalid :mineOre*retval (m:*label621) (h:*label621)
-    * label *label621
-    * label *label622
-    * jump *label162 always
   504 label *label161
   505 sensor *tmp349 .thoriumGenerator @itemCapacity
   506 op min :transportStatus:target *tmp349 30
 
   718 setaddr :mineOre.1*retaddr *label227 (h:*label227)
   719 call *label22 *invalid :mineOre.1*retval (m:*label227) (h:*label227)
   720 label *label227
-    * label *label221
-    * label *label217
-    * label *label213
-    * label *label207
-    * label *label203
-    * label *label200
   721 return :supplyBase*retaddr
   722 label *label198
   723 write "Goal 11: Fetching titanium" .display ".status1"
 
   727 call *label23 *invalid :fetchBlock*retval (m:*label229) (h:*label229)
   728 label *label229
   729 label *label199
-    * label *label167
-    * label *label156
   730 return :supplyBase*retaddr
-    * end
   731 label *label36
   732 op add *tmp317 :buildRemoteBlock:x :buildRemoteBlock:y
   733 jump *label231 lessThanEq *tmp317 0
 
   756 label *label231
   757 set :buildRemoteBlock*retval false
   758 return :buildRemoteBlock*retaddr
-    * label *label230
-    * return :buildRemoteBlock*retaddr
-    * end
   759 label *label37
   760 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   761 setaddr :unpackCfg*retaddr *label236 (h:*label236)
 
   781 label *label237
   782 set :buildBlockFromCfg*retval :buildBlock*retval
   783 return :buildBlockFromCfg*retaddr
-    * end
   784 label *label38
   785 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   786 set :buildBlockFromCfg:config null
 
   789 label *label239
   790 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
   791 return :buildBlockFromCfg.1*retaddr
-    * end
   792 label *label39
   793 set :unpackCfg:cfg :meetTarget.1:cfg
   794 setaddr :unpackCfg*retaddr *label241 (h:*label241)
 
   806 call *label34 *invalid :meetTarget*retval (m:*label242) (h:*label242)
   807 label *label242
   808 return :meetTarget.1*retaddr
-    * end
   809 label *label40
   810 set :meetTarget:block 0
   811 set :meetTarget:copper 0
 
   824 write 0 .controller ".siliconReserve"
   825 write 0 .controller ".graphiteReserve"
   826 return :buildUnits*retaddr
-    * end
   827 label *label41
   828 label *label246
   829 ubind :flagUnits:unit
 
   836 ubind :flagUnits:unit
   837 jump *label249 notEqual @unit :flagUnits:firstUnit
   838 return :flagUnits*retaddr
-    * end
   839 label *label42
   840 ubind :lineUpUnits:unit
   841 set :lineUpUnits:firstUnit @unit
 
   850 ubind :lineUpUnits:unit
   851 jump *label253 notEqual @unit :lineUpUnits:firstUnit
   852 return :lineUpUnits*retaddr
-    * end
   853 label *label22
   854 write "Mining " .display ".status2"
   855 write :mineOre.1:ore .display ".item2"
 
   861 call *label21 *invalid :mineOre*retval (m:*label261) (h:*label261)
   862 label *label261
   863 return :mineOre.1*retaddr
-    * end
   864 label *label23
   865 sensor *tmp331 :fetchBlock:block @itemCapacity
   866 op min :transportStatus:target *tmp331 30
 
   934 write 0 .display ".transportTarget"
   935 write null .display ".transportItem"
   936 return :fetchBlock*retaddr
-    * end
   937 label *label24
   938 write "Supplying " .display ".status2"
   939 write :supplyBlock:ore .display ".item2"
 
   950 label *label277
   951 label *label275
   952 return :supplyBlock*retaddr
-    * end
   953 label *label27
   954 read *tmp361 :unpackCfg:cfg 0
   955 op sub *tmp362 *tmp361 50
 
   979 read *tmp400 :unpackCfg:cfg 12
   980 op sub :unpackCfg:ind *tmp400 50
   981 return :unpackCfg*retaddr
-    * end
   982 label *label34
   983 op sign :meetTarget:count :meetTarget:copper
   984 op sign *tmp403 :meetTarget:lead
 
  1069 jump *label303 notEqual *tmp416 false
  1070 setaddr :supplyBase*retaddr *label301 (h:*label319)
  1071 call *label33 *invalid :supplyBase*retval (m:*label319) (h:*label319)
-    * label *label319
-    * jump *label301 always
  1072 label *label303
  1073 return :meetTarget*retaddr
-    * end
  1074 label *label35
  1075 set :meetTarget:block :buildBlock:block
  1076 set :meetTarget:copper :buildBlock:copper
 
  1097 jump *label322 equal *tmp445 false
  1098 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1099 return :buildBlock*retaddr
-    * end
  1100 label *label21
  1101 op min :mineOre:amount :mineOre:amount 30
  1102 write :mineOre:amount .display ".transportTarget"
 
  1172 write 0 .display ".transportTarget"
  1173 write null .display ".transportItem"
  1174 return :mineOre*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    20 label *label44
    21 ubind @poly
    22 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp134 .core
+   23 ulocate building core false @copper .coreX .coreY 0 .core
    24 jump *label44 equal .core null
    25 set :buildBlockFromCfg.1:cfg "2-5}P22222242"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
  1101 op min :mineOre:amount :mineOre:amount 30
  1102 write :mineOre:amount .display ".transportTarget"
  1103 write :mineOre:ore .display ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 *tmp481
+ 1104 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 0
  1105 jump *label458 notEqual *tmp480 false
  1106 set .ERROR "Cannot locate ore"
  1107 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
        label *label43                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    3:  read *tmp114 processor8 "*signature"                         ...
    4:  jump *label43 notEqual *tmp114 "0:v1"                        ...
    5:  set .press null                                              CoreBuilder.mnd: var
    6:  set .generator null                                          ...
    7:  set .battery null                                            ...
    8:  set .smelter null                                            ...
    9:  set .titaniumDrill null                                      ...
   10:  set .unloader1 null                                          ...
   11:  set .thoriumBattery null                                     ...
   12:  set .thoriumContainer null                                   ...
   13:  set .thoriumGenerator null                                   ...
   14:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   15:  set .graphiteSurplus 20                                      ...
   16:  set .siliconSurplus 20                                       ...
   17:  set .metaglassSurplus 20                                     ...
   18:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label44                                               CoreBuilder.mnd: do
   19:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   20:  set .builder @unit                                           ...
   21:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   22:  jump *label44 equal .core null                               CoreBuilder.mnd: do
   23:  set :buildBlockFromCfg.1:cfg "2-5}P22222242"                 CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   24:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   25:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   26:  set .press :buildBlockFromCfg.1*retval                       ...
   27:  set :buildBlockFromCfg.1:cfg "z2<7F22222233"                 CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   28:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   29:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   30:  set .battery :buildBlockFromCfg.1*retval                     ...
   31:  set :buildBlockFromCfg.1:cfg "z4<7F22222234"                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   32:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   33:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   34:  set :buildBlockFromCfg.1:cfg "|2:KA22222235"                 CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   35:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   36:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   37:  set .generator :buildBlockFromCfg.1*retval                   ...
   38:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   39:  set :buildBlockFromCfg.1:cfg "459PK22222246"                 CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   40:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   41:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   42:  set .smelter :buildBlockFromCfg.1*retval                     ...
   43:  set :buildBlockFromCfg.1:cfg "c464422222237"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   44:  setaddr :buildBlockFromCfg.1*retaddr *label52                ...
   45:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label52                                               ...
   46:  set :meetTarget.1:cfg "22D2<2222248"                        CoreBuilder.mnd: meetTarget(cfg);
   47:  setaddr :meetTarget.1*retaddr *label54                       ...
   48:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label54                                               ...
   49:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   50:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   51:  write .coreY processor4 ":findDrillLocation:y"               ...
   52:  write @unit processor4 ":findDrillLocation:unit"             ...
   53:  write @titanium processor4 ":findDrillLocation:item"         ...
   54:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   55:  write 2 processor4 ":findDrillLocation:size"                 ...
   56:  write 4 processor4 ":findDrillLocation:limit"                ...
   57:  write false processor4 ":findDrillLocation*finished"         ...
   58:  write 1 processor4 "@counter"                                ...
        label *label55                                               ...
   59:  wait 1e-15                                                   ...
   60:  read *tmp153 processor4 ":findDrillLocation*finished"        ...
   61:  jump *label55 equal *tmp153 false                            ...
   62:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   63:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   64:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   65:  jump *label56 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   66:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   67:  stop                                                         Actions.mnd: stopProcessor();
        label *label56                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   68:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   69:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   70:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   71:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   72:  write 2 processor5 "@counter"                                ...
        label *label59                                               ...
   73:  wait 1e-15                                                   ...
   74:  read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished ...
   75:  jump *label59 equal *tmp159 false                            ...
   76:  read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   77:  set .titaniumDrill *tmp142                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   78:  write *tmp142 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   79:  set :buildBlockFromCfg.1:cfg "26222PK22239"                 CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
   80:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   81:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   82:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
   83:  set :buildBlockFromCfg.1:cfg "c06442222223:"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   84:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   85:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   86:  set :buildBlockFromCfg.1:cfg "f28642222223;"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   87:  setaddr :buildBlockFromCfg.1*retaddr *label62                ...
   88:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label62                                               ...
   89:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   90:  set :buildBlockFromCfg:cfg "½8:d2d22223<"                   CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   91:  set :buildBlockFromCfg:config processor2                     ...
   92:  setaddr :buildBlockFromCfg*retaddr *label63                  ...
   93:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label63                                               ...
   94:  set .controller :buildBlockFromCfg*retval                    ...
   95:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   96:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   97:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   98:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   99:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
  100:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  101:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  102:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  103:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  104:  set :buildBlockFromCfg.1:cfg "v0,482222223="                 CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  105:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
  106:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
  107:  set :buildBlockFromCfg.1:cfg ".2222PK2223>"                 CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  108:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
  109:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
  110:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  111:  set :buildBlockFromCfg.1:cfg "¦,.nx2222255?"                 CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  112:  setaddr :buildBlockFromCfg.1*retaddr *label66                ...
  113:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label66                                               ...
  114:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  115:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  116:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  117:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  118:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  119:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  120:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  121:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  122:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  123:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  124:  set .siliconSurplus 20                                       ...
  125:  setaddr :buildUnits*retaddr *label69                         CoreBuilder.mnd: buildUnits();
  126:  call *label40 *invalid :buildUnits*retval                    ...
        label *label69                                               ...
        label *label70                                               CoreBuilder.mnd: do
  127:  setaddr :supplyBase*retaddr *label73                         CoreBuilder.mnd: supplyBase();
  128:  call *label33 *invalid :supplyBase*retval                    ...
        label *label73                                               ...
  129:  sensor *tmp168 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  130:  jump *label72 lessThan *tmp168 300                           ...
  131:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: while controller.monos < 3;
  132:  jump *label70 lessThan *tmp101 3                             CoreBuilder.mnd: do
        label *label72                                               ...
  133:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  134:  set :buildBlockFromCfg.1:cfg "60222PK2223@"                 CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  135:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  136:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  137:  set :buildBlockFromCfg.1:cfg "c62442222223A"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  138:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  139:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  140:  set :buildBlockFromCfg.1:cfg "675nPP222224B"                 CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  141:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  142:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  143:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  144:  set :buildBlockFromCfg.1:cfg ")9PPP22P224C"                 CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  145:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  146:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  147:  set :buildBlockFromCfg.1:cfg "f,2642222223D"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  148:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  149:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  150:  set :buildBlockFromCfg.1:cfg "f*2642222223E"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  151:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  152:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  153:  set :buildBlockFromCfg.1:cfg "~)5UZKP22224F"                 CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  154:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  155:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  156:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  157:  set :buildBlockFromCfg.1:cfg "3.:2dK2225G"                 CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  158:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  159:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  160:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  161:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  162:  set :buildBlockFromCfg.1:cfg "¯,(<2A222225H"                 CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  163:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  164:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  165:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  166:  set :buildBlockFromCfg.1:cfg "2.222PK2223I"                 CoreBuilder.mnd: controller.unloader4 = buildBlockFromCfg(UNLOADER4);
  167:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  168:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  169:  write :buildBlockFromCfg.1*retval .controller ".unloader4"   ...
  170:  set :buildBlockFromCfg.1:cfg "g2,642222223J"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  171:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  172:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  173:  set :buildBlockFromCfg.1:cfg "¨2(úª222225K"                 CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  174:  setaddr :buildBlockFromCfg.1*retaddr *label87                ...
  175:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label87                                               ...
  176:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  177:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  178:  set :buildBlockFromCfg.1:cfg "{<62d2PF2225L"                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  179:  setaddr :buildBlockFromCfg.1*retaddr *label88                ...
  180:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label88                                               ...
  181:  setaddr :buildUnits*retaddr *label89                         CoreBuilder.mnd: buildUnits();
  182:  call *label40 *invalid :buildUnits*retval                    ...
        label *label89                                               ...
  183:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  184:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  185:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  186:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  187:  set :buildBlockFromCfg.1:cfg "4;1PK2222224P"                 CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  188:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  189:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  190:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  191:  set :buildBlockFromCfg.1:cfg "c82442222223Q"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  192:  setaddr :buildBlockFromCfg.1*retaddr *label92                ...
  193:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label92                                               ...
  194:  set :buildBlockFromCfg.1:cfg "c80442222223R"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  195:  setaddr :buildBlockFromCfg.1*retaddr *label93                ...
  196:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label93                                               ...
  197:  set :buildBlockFromCfg:cfg "88222PK2223S"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  198:  set :buildBlockFromCfg:config @sand                          ...
  199:  setaddr :buildBlockFromCfg*retaddr *label94                  ...
  200:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label94                                               ...
  201:  setaddr :buildUnits*retaddr *label95                         CoreBuilder.mnd: buildUnits();
  202:  call *label40 *invalid :buildUnits*retval                    ...
        label *label95                                               ...
  203:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  204:  jump *label98 greaterThanEq *tmp102 3                        ...
        label *label625                                              ...
  205:  setaddr :supplyBase*retaddr *label99                         CoreBuilder.mnd: supplyBase();
  206:  call *label33 *invalid :supplyBase*retval                    ...
        label *label99                                               ...
  207:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  208:  jump *label625 lessThan *tmp102 3                            ...
        label *label98                                               ...
  209:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  210:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  211:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  212:  jump *label103 greaterThanEq *tmp100 2                       ...
        label *label626                                              ...
  213:  setaddr :supplyBase*retaddr *label104                        CoreBuilder.mnd: supplyBase();
  214:  call *label33 *invalid :supplyBase*retval                    ...
        label *label104                                              ...
  215:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  216:  jump *label626 lessThan *tmp100 2                            ...
        label *label103                                              ...
  217:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  218:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  219:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  220:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  221:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  222:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  223:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  224:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  225:  write .coreY processor4 ":findDrillLocation:y"               ...
  226:  write @unit processor4 ":findDrillLocation:unit"             ...
  227:  write @titanium processor4 ":findDrillLocation:item"         ...
  228:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  229:  write 4 processor4 ":findDrillLocation:size"                 ...
  230:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  231:  write false processor4 ":findDrillLocation*finished"         ...
  232:  write 1 processor4 "@counter"                                ...
  233:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  234:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  235:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  236:  write false processor5 ":buildTitaniumDrills*finished"       ...
  237:  write 3 processor5 "@counter"                                ...
        label *label107                                              ...
  238:  wait 1e-15                                                   ...
  239:  read *tmp203 processor5 ":buildTitaniumDrills*finished"      ...
  240:  jump *label107 equal *tmp203 false                           ...
  241:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  242:  write 3 processor4 "@counter"                                ...
  243:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  244:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  245:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  246:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  247:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  248:  write false processor4 ":layoutThoriumDrill*finished"        ...
  249:  write 2 processor4 "@counter"                                ...
        label *label109                                              ...
  250:  wait 1e-15                                                   ...
  251:  read *tmp208 processor4 ":layoutThoriumDrill*finished"       ...
  252:  jump *label109 equal *tmp208 false                           ...
  253:  set :meetTarget.1:cfg "22U2PPF2225M"                        CoreBuilder.mnd: meetTarget(LASER_DRILL);
  254:  setaddr :meetTarget.1*retaddr *label110                      ...
  255:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label110                                              ...
        label *label111                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  256:  wait 1e-15                                                   ...
  257:  read *tmp210 processor4 ":layoutThoriumDrill*finished"       ...
  258:  jump *label111 equal *tmp210 false                           ...
  259:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  260:  jump *label112 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  261:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  262:  stop                                                         Actions.mnd: stopProcessor();
        label *label112                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  263:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  264:  read *tmp56 processor4 ".drillX"                             ...
  265:  write *tmp56 processor5 ":buildBlockAt:x"                    ...
  266:  read *tmp57 processor4 ".drillY"                             ...
  267:  write *tmp57 processor5 ":buildBlockAt:y"                    ...
  268:  write null processor5 ":buildBlockAt:rotation"               ...
  269:  write 0 processor5 ":buildBlockAt:config"                    ...
  270:  write -1 processor5 ":buildBlockAt:index"                    ...
  271:  write false processor5 ":buildBlockAt*finished"              ...
  272:  write 1 processor5 "@counter"                                ...
        label *label115                                              ...
  273:  wait 1e-15                                                   ...
  274:  read *tmp220 processor5 ":buildBlockAt*finished"             ...
  275:  jump *label115 equal *tmp220 false                           ...
  276:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  277:  set :buildRemoteBlock:cfg ")9PPP22P224C"                    CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  278:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  279:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  280:  setaddr :buildRemoteBlock*retaddr *label116                  ...
  281:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label116                                              ...
  282:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  283:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  284:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  285:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  286:  set :buildRemoteBlock:cfg "~)5UZKP22224F"                    CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  287:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  288:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  289:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  290:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  291:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  292:  set :buildRemoteBlock:cfg "v0,482222223="                    CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  293:  read :buildRemoteBlock:x processor4 ".node1X"                ...
  294:  read :buildRemoteBlock:y processor4 ".node1Y"                ...
  295:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  296:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  297:  read :buildRemoteBlock:x processor4 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  298:  read :buildRemoteBlock:y processor4 ".node2Y"                ...
  299:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  300:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  301:  set :buildRemoteBlock:cfg "222<2:22223N"                    CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  302:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  303:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  304:  setaddr :buildRemoteBlock*retaddr *label121                  ...
  305:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label121                                              ...
  306:  set :buildRemoteBlock:cfg "z2<7F22222233"                    CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  307:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  308:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  309:  setaddr :buildRemoteBlock*retaddr *label122                  ...
  310:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label122                                              ...
  311:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  312:  set :buildRemoteBlock:cfg "2222222224O"                    CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  313:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  314:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  315:  setaddr :buildRemoteBlock*retaddr *label123                  ...
  316:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label123                                              ...
  317:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  318:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  319:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  320:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  321:  write false processor3 ":setThoriumContainer*finished"       ...
  322:  write 3 processor3 "@counter"                                ...
        label *label126                                              ...
  323:  wait 1e-15                                                   ...
  324:  read *tmp233 processor3 ":setThoriumContainer*finished"      ...
  325:  jump *label126 equal *tmp233 false                           ...
  326:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  327:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  328:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  329:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  330:  jump *label130 greaterThanEq *tmp102 5                       ...
        label *label627                                              ...
  331:  setaddr :supplyBase*retaddr *label131                        CoreBuilder.mnd: supplyBase();
  332:  call *label33 *invalid :supplyBase*retval                    ...
        label *label131                                              ...
  333:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  334:  jump *label627 lessThan *tmp102 5                            ...
        label *label130                                              ...
  335:  set :buildBlockFromCfg:cfg "4.222PK2223T"                   CoreBuilder.mnd: controller.unloader6 = buildBlockFromCfg(UNLOADER6, @silicon);
  336:  set :buildBlockFromCfg:config @silicon                       ...
  337:  setaddr :buildBlockFromCfg*retaddr *label132                 ...
  338:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label132                                              ...
  339:  write :buildBlockFromCfg*retval .controller ".unloader6"     ...
  340:  set :buildBlockFromCfg.1:cfg "g4,642222223U"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  341:  setaddr :buildBlockFromCfg.1*retaddr *label133               ...
  342:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label133                                              ...
  343:  set :buildBlockFromCfg.1:cfg "©:*2ʼ2ǴƐ2ʼ27V"                 CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  344:  setaddr :buildBlockFromCfg.1*retaddr *label135               ...
  345:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label135                                              ...
  346:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  347:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  348:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  349:  setaddr :buildUnits*retaddr *label136                        CoreBuilder.mnd: buildUnits();
  350:  call *label40 *invalid :buildUnits*retval                    ...
        label *label136                                              ...
  351:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  352:  jump *label139 greaterThanEq *tmp103 1                       ...
        label *label628                                              ...
  353:  setaddr :supplyBase*retaddr *label140                        CoreBuilder.mnd: supplyBase();
  354:  call *label33 *invalid :supplyBase*retval                    ...
        label *label140                                              ...
  355:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  356:  jump *label628 lessThan *tmp103 1                            ...
        label *label139                                              ...
  357:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  358:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  359:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  360:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  361:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  362:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  363:  setaddr :flagUnits*retaddr *label142                         ...
  364:  call *label41 *invalid :flagUnits*retval                     ...
        label *label142                                              ...
  365:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  366:  setaddr :flagUnits*retaddr *label143                         ...
  367:  call *label41 *invalid :flagUnits*retval                     ...
        label *label143                                              ...
  368:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  369:  setaddr :flagUnits*retaddr *label144                         ...
  370:  call *label41 *invalid :flagUnits*retval                     ...
        label *label144                                              ...
  371:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  372:  setaddr :flagUnits*retaddr *label145                         ...
  373:  call *label41 *invalid :flagUnits*retval                     ...
        label *label145                                              ...
        label *label146                                              CoreBuilder.mnd: while true do
  374:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  375:  ubind @mega                                                  CoreBuilder.mnd: var firstUnit = ubind(unit);
  376:  set :lineUpUnits:firstUnit @unit                             ...
        label *label635                                              CoreBuilder.mnd: do
  377:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  378:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  379:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  380:  sensor *tmp327 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  381:  jump *label636 equal *tmp327 false                           ...
  382:  ucontrol stop 0 0 0 0 0                                      ...
        label *label636                                              ...
  383:  ubind @mega                                                  CoreBuilder.mnd: ubind(unit);
  384:  jump *label635 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  385:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  386:  set :lineUpUnits:unit @poly                                  ...
  387:  setaddr :lineUpUnits*retaddr *label150                       ...
  388:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label150                                              ...
  389:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  390:  set :lineUpUnits:unit @mono                                  ...
  391:  setaddr :lineUpUnits*retaddr *label151                       ...
  392:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label151                                              ...
  393:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  394:  set :lineUpUnits:unit @flare                                 ...
  395:  setaddr :lineUpUnits*retaddr *label146                       ...
  396:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label33                                               CoreBuilder.mnd: void supplyBase()
  397:  sensor *tmp247 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  398:  op sub *tmp248 .targetSilicon *tmp247                        ...
  399:  op max *tmp249 0 *tmp248                                     ...
  400:  write *tmp249 processor8 ".sandTarget"                       ...
  401:  jump *label155 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  402:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  403:  sensor *tmp251 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 3000 then
  404:  jump *label159 greaterThanEq *tmp251 3000                    ...
  405:  sensor *tmp254 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  406:  jump *label161 greaterThanEq *tmp254 50                      ...
  407:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  408:  set :supplyBlock:ore @coal                                   ...
  409:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  410:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  411:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  412:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  413:  sensor *tmp345 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  414:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  415:  jump *label162 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  416:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  417:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  418:  set :mineOre:block .thoriumGenerator                         ...
  419:  setaddr :mineOre*retaddr *label162                           ...
  420:  call *label21 *invalid :mineOre*retval                       ...
        label *label161                                              CoreBuilder.mnd: if core.@coal < 50 then
  421:  sensor *tmp349 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  422:  op min :transportStatus:target *tmp349 30                    ...
  423:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  424:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  425:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  426:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  427:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  428:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label502                                              Actions.mnd: do
  429:  sensor *tmp447 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  430:  jump *label503 equal *tmp447 null                            ...
  431:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label503                                              ...
  432:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  433:  ucontrol within .coreX .coreY 6 *tmp450 0                    Actions.mnd: while !within(x, y, RADIUS);
  434:  jump *label502 equal *tmp450 false                           Actions.mnd: do
  435:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  436:  jump *label530 equal *tmp452 null                            ...
        label *label528                                              ...
  437:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  438:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  439:  jump *label528 notEqual *tmp452 null                         ...
        label *label530                                              ...
        label *label438                                              Actions.mnd: do
  440:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  441:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  442:  op notEqual *tmp352 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  443:  op notEqual *tmp353 :supplyBlockFromCore:unitItem @coal      ...
  444:  op land *tmp354 *tmp352 *tmp353                              ...
  445:  jump *label439 equal *tmp354 false                           ...
  446:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label439                                              Actions.mnd: if unitItem != null and unitItem != item then
  447:  sensor *tmp356 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  448:  op lessThan *tmp357 *tmp356 30                               ...
  449:  sensor *tmp358 .core @coal                                   ...
  450:  op land *tmp359 *tmp357 *tmp358                              ...
  451:  jump *label438 notEqual *tmp359 false                        Actions.mnd: do
  452:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  453:  sensor *tmp454 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  454:  jump *label584 notEqual *tmp454 @coal                        ...
  455:  sensor *tmp478 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  456:  sensor *tmp479 .thoriumGenerator @y                          ...
  457:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  458:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  459:  jump *label578 notEqual *tmp484 false                        ...
        label *label576                                              ...
  460:  ucontrol approach *tmp478 *tmp479 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  461:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  462:  jump *label576 equal *tmp484 false                           ...
        label *label578                                              ...
  463:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label581                                              Actions.mnd: do
  464:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  465:  sensor *tmp458 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  466:  op mul *tmp459 *tmp458 :depositItems:cap                     ...
  467:  sensor *tmp460 .thoriumGenerator @coal                       ...
  468:  jump *label581 greaterThan *tmp459 *tmp460                   Actions.mnd: do
  469:  jump *label589 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label584                                              ...
  470:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  471:  jump *label588 equal *tmp462 null                            ...
        label *label586                                              ...
  472:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  473:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  474:  jump *label586 notEqual *tmp462 null                         ...
        label *label588                                              ...
        label *label589                                              Actions.mnd: if @unit.@firstItem == item then
  475:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  476:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label162                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label159                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 3000 then
  477:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  478:  set :fetchBlock:item @thorium                                ...
  479:  setaddr :fetchBlock*retaddr *label165                        ...
  480:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label165                                              ...
  481:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label155                                              ...
  482:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: elsif controller.monos > 3 then
  483:  jump *label166 lessThanEq *tmp101 3                          ...
  484:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  485:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  486:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  487:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  488:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  489:  set :mineOre:amount 30                                       ...
  490:  set :mineOre:block .core                                     ...
  491:  setaddr :mineOre*retaddr *label541                           ...
  492:  call *label21 *invalid :mineOre*retval                       ...
        label *label541                                              ...
  493:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label166                                              ...
  494:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  495:  jump *label172 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  496:  sensor *tmp261 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  497:  jump *label174 greaterThanEq *tmp261 .targetGraphite         ...
  498:  sensor *tmp264 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  499:  jump *label176 greaterThanEq *tmp264 5                       ...
  500:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  501:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  502:  set :supplyBlock:ore @coal                                   ...
  503:  setaddr :supplyBlock*retaddr *label179                       ...
  504:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label179                                              ...
  505:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label176                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label174                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  506:  sensor *tmp267 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  507:  jump *label180 greaterThanEq *tmp267 .targetSilicon          ...
  508:  sensor *tmp270 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  509:  jump *label182 greaterThanEq *tmp270 5                       ...
  510:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  511:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  512:  set :supplyBlock:ore @coal                                   ...
  513:  setaddr :supplyBlock*retaddr *label185                       ...
  514:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label185                                              ...
  515:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  516:  jump *label183 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label182                                              ...
  517:  sensor *tmp273 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  518:  jump *label186 greaterThanEq *tmp273 5                       ...
  519:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  520:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  521:  set :supplyBlock:ore @sand                                   ...
  522:  setaddr :supplyBlock*retaddr *label189                       ...
  523:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label189                                              ...
  524:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label186                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label183                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label180                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  525:  sensor *tmp276 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  526:  jump *label190 greaterThanEq *tmp276 .powerTarget            ...
  527:  sensor *tmp279 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  528:  jump *label192 greaterThanEq *tmp279 2                       ...
  529:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  530:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  531:  set :supplyBlock:ore @coal                                   ...
  532:  setaddr :supplyBlock*retaddr *label195                       ...
  533:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label195                                              ...
  534:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label192                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label190                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label172                                              CoreBuilder.mnd: if unloader1 == null then
  535:  set *tmp284 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  536:  sensor *tmp282 .core @titanium                               ...
  537:  jump *label197 greaterThanEq *tmp282 .targetTitanium         ...
  538:  sensor *tmp285 .core @titanium                               ...
  539:  op sub *tmp286 .targetTitanium *tmp285                       ...
  540:  op min *tmp284 7 *tmp286                                     ...
        label *label197                                              ...
  541:  sensor *tmp288 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  542:  jump *label198 greaterThanEq *tmp288 *tmp284                 ...
  543:  jump *label199 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  544:  sensor *tmp293 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  545:  op mul *tmp294 .unloader1 .powerTarget                       ...
  546:  jump *label202 greaterThanEq *tmp293 *tmp294                 ...
  547:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  548:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  549:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  550:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  551:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  552:  set :mineOre:amount 30                                       ...
  553:  set :mineOre:block .core                                     ...
  554:  setaddr :mineOre*retaddr *label632                           ...
  555:  call *label21 *invalid :mineOre*retval                       ...
        label *label632                                              ...
  556:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label202                                              ...
  557:  sensor *tmp297 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  558:  jump *label206 greaterThanEq *tmp297 .targetSilicon          ...
  559:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  560:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  561:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  562:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  563:  setaddr :mineOre.1*retaddr *label211                         CoreBuilder.mnd: mineOre(ore);
  564:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label211                                              ...
  565:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label206                                              ...
  566:  sensor *tmp304 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  567:  jump *label212 greaterThanEq *tmp304 .targetCopper           ...
  568:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  569:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  570:  setaddr :mineOre.1*retaddr *label215                         ...
  571:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label215                                              ...
  572:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label212                                              ...
  573:  sensor *tmp307 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  574:  jump *label216 greaterThanEq *tmp307 .targetLead             ...
  575:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  576:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  577:  setaddr :mineOre.1*retaddr *label219                         ...
  578:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label219                                              ...
  579:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label216                                              ...
  580:  sensor *tmp310 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  581:  jump *label220 greaterThanEq *tmp310 .targetMetaglass        ...
  582:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  583:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  584:  setaddr :mineOre.1*retaddr *label223                         ...
  585:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label223                                              ...
  586:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label220                                              ...
  587:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  588:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  589:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  590:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  591:  setaddr :mineOre.1*retaddr *label227                         CoreBuilder.mnd: mineOre(ore);
  592:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label227                                              ...
  593:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label198                                              ...
  594:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  595:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  596:  set :fetchBlock:item @titanium                               ...
  597:  setaddr :fetchBlock*retaddr *label229                        ...
  598:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label229                                              ...
        label *label199                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  599:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label36                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  600:  op add *tmp317 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  601:  jump *label231 lessThanEq *tmp317 0                          ...
  602:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  603:  setaddr :unpackCfg*retaddr *label233                         ...
  604:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label233                                              ...
  605:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  606:  set :buildBlock:x :buildRemoteBlock:x                        ...
  607:  set :buildBlock:y :buildRemoteBlock:y                        ...
  608:  set :buildBlock:copper :unpackCfg:cu                         ...
  609:  set :buildBlock:lead :unpackCfg:pb                           ...
  610:  set :buildBlock:graphite :unpackCfg:gr                       ...
  611:  set :buildBlock:silicon :unpackCfg:si                        ...
  612:  set :buildBlock:titanium :unpackCfg:ti                       ...
  613:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  614:  set :buildBlock:thorium :unpackCfg:th                        ...
  615:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  616:  set :buildBlock:config null                                  ...
  617:  set :buildBlock:index :unpackCfg:ind                         ...
  618:  setaddr :buildBlock*retaddr *label234                        ...
  619:  call *label35 *invalid :buildBlock*retval                    ...
        label *label234                                              ...
  620:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  621:  return :buildRemoteBlock*retaddr                             ...
        label *label231                                              CoreBuilder.mnd: if x + y > 0 then
  622:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  623:  return :buildRemoteBlock*retaddr                             ...
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  624:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  625:  setaddr :unpackCfg*retaddr *label236                         ...
  626:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label236                                              ...
  627:  op add *tmp320 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  628:  op add *tmp321 .coreY :unpackCfg:y                           ...
  629:  set :buildBlock:block :unpackCfg:type                        ...
  630:  set :buildBlock:x *tmp320                                    ...
  631:  set :buildBlock:y *tmp321                                    ...
  632:  set :buildBlock:copper :unpackCfg:cu                         ...
  633:  set :buildBlock:lead :unpackCfg:pb                           ...
  634:  set :buildBlock:graphite :unpackCfg:gr                       ...
  635:  set :buildBlock:silicon :unpackCfg:si                        ...
  636:  set :buildBlock:titanium :unpackCfg:ti                       ...
  637:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  638:  set :buildBlock:thorium :unpackCfg:th                        ...
  639:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  640:  set :buildBlock:config :buildBlockFromCfg:config             ...
  641:  set :buildBlock:index :unpackCfg:ind                         ...
  642:  setaddr :buildBlock*retaddr *label237                        ...
  643:  call *label35 *invalid :buildBlock*retval                    ...
        label *label237                                              ...
  644:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  645:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label38                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  646:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  647:  set :buildBlockFromCfg:config null                           ...
  648:  setaddr :buildBlockFromCfg*retaddr *label239                 ...
  649:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label239                                              ...
  650:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  651:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label39                                               CoreBuilder.mnd: void meetTarget(cfg)
  652:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  653:  setaddr :unpackCfg*retaddr *label241                         ...
  654:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label241                                              ...
  655:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  656:  set :meetTarget:copper :unpackCfg:cu                         ...
  657:  set :meetTarget:lead :unpackCfg:pb                           ...
  658:  set :meetTarget:graphite :unpackCfg:gr                       ...
  659:  set :meetTarget:silicon :unpackCfg:si                        ...
  660:  set :meetTarget:titanium :unpackCfg:ti                       ...
  661:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  662:  set :meetTarget:thorium :unpackCfg:th                        ...
  663:  setaddr :meetTarget*retaddr *label242                        ...
  664:  call *label34 *invalid :meetTarget*retval                    ...
        label *label242                                              ...
  665:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  666:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  667:  set :meetTarget:copper 0                                     ...
  668:  set :meetTarget:lead 0                                       ...
  669:  set :meetTarget:graphite 0                                   ...
  670:  set :meetTarget:silicon 0                                    ...
  671:  set :meetTarget:titanium 0                                   ...
  672:  set :meetTarget:metaglass 0                                  ...
  673:  set :meetTarget:thorium 0                                    ...
  674:  setaddr :meetTarget*retaddr *label244                        ...
  675:  call *label34 *invalid :meetTarget*retval                    ...
        label *label244                                              ...
  676:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  677:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  678:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  679:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  680:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  681:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label246                                              CoreBuilder.mnd: do
  682:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  683:  set :flagUnits:firstUnit @unit                               ...
  684:  jump *label246 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  685:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label249                                              CoreBuilder.mnd: do
  686:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  687:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  688:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  689:  jump *label249 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  690:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  691:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  692:  set :lineUpUnits:firstUnit @unit                             ...
        label *label253                                              CoreBuilder.mnd: do
  693:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  694:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  695:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  696:  sensor *tmp327 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  697:  jump *label256 equal *tmp327 false                           ...
  698:  ucontrol stop 0 0 0 0 0                                      ...
        label *label256                                              ...
  699:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  700:  jump *label253 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  701:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)
        label *label22                                               Actions.mnd: void mineOre(ore)
  702:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  703:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  704:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  705:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  706:  set :mineOre:amount 30                                       ...
  707:  set :mineOre:block .core                                     ...
  708:  setaddr :mineOre*retaddr *label261                           ...
  709:  call *label21 *invalid :mineOre*retval                       ...
        label *label261                                              ...
  710:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  711:  sensor *tmp331 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  712:  op min :transportStatus:target *tmp331 30                    ...
  713:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  714:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  715:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  716:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  717:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  718:  sensor *tmp333 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  719:  sensor *tmp334 :fetchBlock:block @y                          ...
  720:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label511                                              Actions.mnd: do
  721:  sensor *tmp447 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  722:  jump *label512 equal *tmp447 null                            ...
  723:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label512                                              ...
  724:  ucontrol approach *tmp333 *tmp334 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  725:  ucontrol within *tmp333 *tmp334 6 *tmp450 0                  Actions.mnd: while !within(x, y, RADIUS);
  726:  jump *label511 equal *tmp450 false                           Actions.mnd: do
  727:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  728:  jump *label497 equal *tmp452 null                            ...
        label *label495                                              ...
  729:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  730:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  731:  jump *label495 notEqual *tmp452 null                         ...
        label *label497                                              ...
        label *label267                                              Actions.mnd: do
  732:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  733:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  734:  op notEqual *tmp336 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  735:  op notEqual *tmp337 :fetchBlock:unitItem :fetchBlock:item    ...
  736:  op land *tmp338 *tmp336 *tmp337                              ...
  737:  jump *label270 equal *tmp338 false                           ...
  738:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label270                                              Actions.mnd: if unitItem != null and unitItem != item then
  739:  sensor *tmp340 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  740:  op lessThan *tmp341 *tmp340 30                               ...
  741:  sensor *tmp342 :fetchBlock:block :fetchBlock:item            ...
  742:  op land *tmp343 *tmp341 *tmp342                              ...
  743:  jump *label267 notEqual *tmp343 false                        Actions.mnd: do
  744:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  745:  sensor *tmp454 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  746:  jump *label559 notEqual *tmp454 :fetchBlock:item             ...
  747:  sensor *tmp478 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  748:  sensor *tmp479 .core @y                                      ...
  749:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  750:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  751:  jump *label553 notEqual *tmp484 false                        ...
        label *label551                                              ...
  752:  ucontrol approach *tmp478 *tmp479 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  753:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  754:  jump *label551 equal *tmp484 false                           ...
        label *label553                                              ...
  755:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label556                                              Actions.mnd: do
  756:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  757:  sensor *tmp458 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  758:  op mul *tmp459 *tmp458 :depositItems:cap                     ...
  759:  sensor *tmp460 .core :fetchBlock:item                        ...
  760:  jump *label556 greaterThan *tmp459 *tmp460                   Actions.mnd: do
  761:  jump *label564 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label559                                              ...
  762:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  763:  jump *label563 equal *tmp462 null                            ...
        label *label561                                              ...
  764:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  765:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  766:  jump *label561 notEqual *tmp462 null                         ...
        label *label563                                              ...
        label *label564                                              Actions.mnd: if @unit.@firstItem == item then
  767:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  768:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  769:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  770:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  771:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  772:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  773:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  774:  sensor *tmp345 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  775:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  776:  jump *label275 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  777:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  778:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  779:  set :mineOre:block :supplyBlock:block                        ...
  780:  setaddr :mineOre*retaddr *label277                           ...
  781:  call *label21 *invalid :mineOre*retval                       ...
        label *label277                                              ...
        label *label275                                              Actions.mnd: if missing > 0 then
  782:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  783:  read *tmp361 :unpackCfg:cfg 0                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  784:  op sub *tmp362 *tmp361 50                                    ...
  785:  lookup block :unpackCfg:type *tmp362                         ...
  786:  read *tmp365 :unpackCfg:cfg 1                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  787:  op sub *tmp366 *tmp365 50                                    ...
  788:  op div :unpackCfg:x *tmp366 2                                ...
  789:  read *tmp369 :unpackCfg:cfg 2                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  790:  op sub *tmp370 *tmp369 50                                    ...
  791:  op div :unpackCfg:y *tmp370 2                                ...
  792:  read *tmp373 :unpackCfg:cfg 3                                Common.mnd: cu = char(cfg, index++) - _Common_offset;
  793:  op sub :unpackCfg:cu *tmp373 50                              ...
  794:  read *tmp376 :unpackCfg:cfg 4                                Common.mnd: pb = char(cfg, index++) - _Common_offset;
  795:  op sub :unpackCfg:pb *tmp376 50                              ...
  796:  read *tmp379 :unpackCfg:cfg 5                                Common.mnd: gr = char(cfg, index++) - _Common_offset;
  797:  op sub :unpackCfg:gr *tmp379 50                              ...
  798:  read *tmp382 :unpackCfg:cfg 6                                Common.mnd: si = char(cfg, index++) - _Common_offset;
  799:  op sub :unpackCfg:si *tmp382 50                              ...
  800:  read *tmp385 :unpackCfg:cfg 7                                Common.mnd: ti = char(cfg, index++) - _Common_offset;
  801:  op sub :unpackCfg:ti *tmp385 50                              ...
  802:  read *tmp388 :unpackCfg:cfg 8                                Common.mnd: mg = char(cfg, index++) - _Common_offset;
  803:  op sub :unpackCfg:mg *tmp388 50                              ...
  804:  read *tmp391 :unpackCfg:cfg 9                                Common.mnd: th = char(cfg, index++) - _Common_offset;
  805:  op sub :unpackCfg:th *tmp391 50                              ...
  806:  read *tmp394 :unpackCfg:cfg 10                               Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  807:  op sub :unpackCfg:rotation *tmp394 50                        ...
  808:  read *tmp400 :unpackCfg:cfg 12                               Common.mnd: ind = char(cfg, index++) - _Common_offset;
  809:  op sub :unpackCfg:ind *tmp400 50                             ...
  810:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label34                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  811:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  812:  op sign *tmp403 :meetTarget:lead 0                           ...
  813:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  814:  op sign *tmp403 :meetTarget:graphite 0                       ...
  815:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  816:  op sign *tmp403 :meetTarget:silicon 0                        ...
  817:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  818:  op sign *tmp403 :meetTarget:titanium 0                       ...
  819:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  820:  op sign *tmp403 :meetTarget:metaglass 0                      ...
  821:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  822:  op sign *tmp403 :meetTarget:thorium 0                        ...
  823:  op add :meetTarget:count :meetTarget:count *tmp403           ...
  824:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  825:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  826:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  827:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  828:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  829:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  830:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  831:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  832:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  833:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  834:  op add *tmp404 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  835:  op add .targetLead *tmp404 1                                 ...
  836:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  837:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  838:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  839:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  840:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  841:  op add *tmp406 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  842:  write *tmp406 .controller ".pressTarget"                     ...
  843:  op add *tmp407 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  844:  write *tmp407 .controller ".smelterTarget"                   ...
  845:  op add *tmp408 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  846:  write *tmp408 .controller ".kilnTarget"                      ...
  847:  write *tmp404 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  848:  op sign *tmp410 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  849:  op mul *tmp411 *tmp410 20                                    ...
  850:  op add *tmp412 :meetTarget:silicon *tmp411                   ...
  851:  write *tmp412 .controller ".siliconReserve"                  ...
  852:  op sign *tmp413 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  853:  op mul *tmp414 *tmp413 20                                    ...
  854:  op add *tmp415 :meetTarget:graphite *tmp414                  ...
  855:  write *tmp415 .controller ".graphiteReserve"                 ...
  856:  write .targetLead processor8 ".leadTarget"                   CoreBuilder.mnd: monoController.leadTarget = targetLead;
  857:  write :meetTarget:copper processor8 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
        label *label301                                              CoreBuilder.mnd: while !targetMet() do
  858:  sensor *tmp417 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  859:  jump *label305 greaterThanEq *tmp417 .targetCopper           ...
  860:  set *tmp416 false                                            ...
  861:  jump *label304 always 0 0                                    ...
        label *label305                                              ...
  862:  sensor *tmp420 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  863:  jump *label307 greaterThanEq *tmp420 .targetLead             ...
  864:  set *tmp416 false                                            ...
  865:  jump *label304 always 0 0                                    ...
        label *label307                                              ...
  866:  sensor *tmp423 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  867:  jump *label309 greaterThanEq *tmp423 .targetGraphite         ...
  868:  set *tmp416 false                                            ...
  869:  jump *label304 always 0 0                                    ...
        label *label309                                              ...
  870:  sensor *tmp426 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  871:  jump *label311 greaterThanEq *tmp426 .targetSilicon          ...
  872:  set *tmp416 false                                            ...
  873:  jump *label304 always 0 0                                    ...
        label *label311                                              ...
  874:  sensor *tmp429 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  875:  jump *label313 greaterThanEq *tmp429 .targetTitanium         ...
  876:  set *tmp416 false                                            ...
  877:  jump *label304 always 0 0                                    ...
        label *label313                                              ...
  878:  sensor *tmp432 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  879:  jump *label315 greaterThanEq *tmp432 .targetMetaglass        ...
  880:  set *tmp416 false                                            ...
  881:  jump *label304 always 0 0                                    ...
        label *label315                                              ...
  882:  sensor *tmp435 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  883:  jump *label317 greaterThanEq *tmp435 .targetThorium          ...
  884:  set *tmp416 false                                            ...
  885:  jump *label304 always 0 0                                    ...
        label *label317                                              ...
  886:  set *tmp416 true                                             CoreBuilder.mnd: return true;
  887:  jump *label304 always 0 0                                    ...
        label *label304                                              CoreBuilder.mnd: while !targetMet() do
  888:  jump *label303 notEqual *tmp416 false                        ...
  889:  setaddr :supplyBase*retaddr *label301                        CoreBuilder.mnd: supplyBase();
  890:  call *label33 *invalid :supplyBase*retval                    ...
        label *label303                                              CoreBuilder.mnd: while !targetMet() do
  891:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label35                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  892:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  893:  set :meetTarget:copper :buildBlock:copper                    ...
  894:  set :meetTarget:lead :buildBlock:lead                        ...
  895:  set :meetTarget:graphite :buildBlock:graphite                ...
  896:  set :meetTarget:silicon :buildBlock:silicon                  ...
  897:  set :meetTarget:titanium :buildBlock:titanium                ...
  898:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  899:  set :meetTarget:thorium :buildBlock:thorium                  ...
  900:  setaddr :meetTarget*retaddr *label321                        ...
  901:  call *label34 *invalid :meetTarget*retval                    ...
        label *label321                                              ...
  902:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  903:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  904:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  905:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  906:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  907:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  908:  write false .blockBuilder ":buildBlockAt*finished"           ...
  909:  write 1 .blockBuilder "@counter"                             ...
        label *label322                                              ...
  910:  wait 1e-15                                                   ...
  911:  read *tmp445 .blockBuilder ":buildBlockAt*finished"          ...
  912:  jump *label322 equal *tmp445 false                           ...
  913:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  914:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  915:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  916:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  917:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  918:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  919:  jump *label458 notEqual *tmp480 false                        ...
  920:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  921:  stop                                                         Actions.mnd: stopProcessor();
        label *label458                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  922:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label520                                              Actions.mnd: do
  923:  sensor *tmp447 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  924:  jump *label521 equal *tmp447 null                            ...
  925:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label521                                              ...
  926:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  927:  ucontrol within :locateOre:x :locateOre:y 6 *tmp450 0        Actions.mnd: while !within(x, y, RADIUS);
  928:  jump *label520 equal *tmp450 false                           Actions.mnd: do
  929:  sensor *tmp465 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  930:  jump *label352 equal *tmp465 :mineOre:ore                    ...
  931:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  932:  jump *label536 equal *tmp452 null                            ...
        label *label534                                              ...
  933:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  934:  sensor *tmp452 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  935:  jump *label534 notEqual *tmp452 null                         ...
        label *label536                                              ...
        label *label352                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  936:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  937:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label356                                              Actions.mnd: do
  938:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  939:  op notEqual *tmp470 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  940:  op notEqual *tmp471 :mineOre:item :mineOre:ore               ...
  941:  op land *tmp472 *tmp470 *tmp471                              ...
  942:  jump *label358 notEqual *tmp472 false                        ...
  943:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  944:  jump *label358 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  945:  sensor *tmp476 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  946:  jump *label356 lessThan *tmp476 :mineOre:amount              Actions.mnd: do
        label *label358                                              ...
  947:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  948:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  949:  sensor *tmp454 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  950:  jump *label609 notEqual *tmp454 :mineOre:ore                 ...
  951:  sensor *tmp478 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  952:  sensor *tmp479 :mineOre:block @y                             ...
  953:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  954:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  955:  jump *label603 notEqual *tmp484 false                        ...
        label *label601                                              ...
  956:  ucontrol approach *tmp478 *tmp479 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  957:  ucontrol within *tmp478 *tmp479 6 *tmp484 0                  Actions.mnd: while !within(x, y, radius) do
  958:  jump *label601 equal *tmp484 false                           ...
        label *label603                                              ...
  959:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label606                                              Actions.mnd: do
  960:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  961:  sensor *tmp458 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  962:  op mul *tmp459 *tmp458 :depositItems:cap                     ...
  963:  sensor *tmp460 :mineOre:block :mineOre:ore                   ...
  964:  jump *label606 greaterThan *tmp459 *tmp460                   Actions.mnd: do
  965:  jump *label614 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label609                                              ...
  966:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  967:  jump *label613 equal *tmp462 null                            ...
        label *label611                                              ...
  968:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  969:  sensor *tmp462 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  970:  jump *label611 notEqual *tmp462 null                         ...
        label *label613                                              ...
        label *label614                                              Actions.mnd: if @unit.@firstItem == item then
  971:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  972:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  973:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 1,046 ms, compiled in 553 ms, optimized in 5,192 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: read *tmp114 processor8 "*signature":
Variable 'processor8' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
