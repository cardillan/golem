  1619 instructions before optimizations.
    67 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
   132 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:8:14 Variable 'ERROR' is not used.
     3 instructions eliminated by Jump Normalization (5 iterations).
    61 instructions eliminated by Jump Optimization (5 iterations).
    63 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     8 instructions modified by Expression Optimization (3 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
   414 instructions eliminated by Data Flow Optimization (4 passes, 31 iterations).
    18 loops improved by Loop Hoisting.
     4 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
    62 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
    11 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    16 instructions updated by JumpThreading.
    43 instructions eliminated by Unreachable Code Elimination (2 iterations).
   887 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 82):
    Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   166391.6, efficiency 166391.602
    Replicate loop condition at Actions.mnd:43:5                 size    +1, benefit   278095.7, efficiency 278095.703
    Replicate loop condition at Actions.mnd:66:9                 size    +1, benefit   139047.9, efficiency 139047.852
    Replicate loop condition at CoreBuilder.mnd:262:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221
  * Unroll iteration loop at CoreBuilder.mnd:239:5               size   -15, benefit    13950.0, efficiency   Infinity (-11 instructions)

Pass 1: speed optimization selection (cost limit 93):
    Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   166391.6, efficiency 166391.602
  * Replicate loop condition at Actions.mnd:43:5                 size    +1, benefit   278095.7, efficiency 278095.703 (+1 instructions)
    Replicate loop condition at Actions.mnd:66:9                 size    +1, benefit   139047.9, efficiency 139047.852
    Replicate loop condition at CoreBuilder.mnd:262:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 92):
  * Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   166391.6, efficiency 166391.602 (+1 instructions)
    Replicate loop condition at Actions.mnd:66:9                 size    +1, benefit   139047.9, efficiency 139047.852
    Replicate loop condition at CoreBuilder.mnd:262:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 91):
  * Replicate loop condition at Actions.mnd:66:9                 size    +1, benefit   139047.9, efficiency 139047.852 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:262:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 90):
  * Replicate loop condition at CoreBuilder.mnd:262:5            size    +2, benefit    11250.0, efficiency   5625.000 (+2 instructions)
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 88):
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +169, benefit     6250.0, efficiency     36.982
  * Unroll iteration loop at CoreBuilder.mnd:372:13              size   +77, benefit    11875.0, efficiency    154.221 (+56 instructions)

Pass 1: speed optimization selection (cost limit 32):
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 2: speed optimization selection (cost limit 44):
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 3: speed optimization selection (cost limit 44):
  ! Unroll loop at CoreBuilder.mnd:366:5                         size  +393, benefit     6250.0, efficiency     15.903

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1721 return :supplyBase1*retaddr
  1722 end
  1723 label *label11
-    * set *tmp345 .phase
-    * jump *label350 equal *tmp345 0
+ 1724 jump *label350 equal .phase 0
  1725 jump *label349 always
  1726 label *label350
  1727 setaddr :supplyBase0*retaddr *label351 (h:*label351)
 
  1730 set *tmp344 null
  1731 jump *label348 always
  1732 label *label349
-    * jump *label353 equal *tmp345 1
+ 1733 jump *label353 equal .phase 1
  1734 jump *label352 always
  1735 label *label353
  1736 setaddr :supplyBase1*retaddr *label354 (h:*label354)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-80 instructions):
 
   152 setaddr :buildBlock*retaddr *label44 (h:*label44)
   153 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   154 label *label44
-    * set *tmp59 :buildBlock*retval
   155 jump *label39 always
   156 label *label41
   157 multijump *tmp60 0 0 (m:marker2)
   158 multilabel *label43 (m:marker2)
   159 label *label42
-    * set *tmp59 null
   160 label *label39
   161 set :buildBlockFromCfg.3:block @combustion-generator
   162 set :buildBlockFromCfg.3:offsetX 0
 
   277 op or *tmp80 *tmp76 *tmp79
   278 jump *label68 equal *tmp80 false
   279 jump *label66 always
-    * set *tmp81 null
   280 jump *label69 always
   281 label *label68
-    * set *tmp81 null
   282 label *label69
   283 op sin *tmp83 :locateOreAway:angle
   284 op mul *tmp84 *tmp83 :locateOreAway:distance
 
   293 label *label71
   294 op add :locateOreAway:distance :locateOreAway:distance 4
   295 op add :locateOreAway:angle :locateOreAway:angle 45
-    * set *tmp82 :locateOreAway:angle
   296 label *label70
   297 label *label65
   298 jump *label64 always
   299 label *label66
-    * set *tmp73 null
   300 label *label63
   301 set :buildTitaniumDrillCfg:x :locateOreAway:x
   302 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   352 label *label84
   353 set *tmp94 null
   354 label *label85
-    * set *tmp90 *tmp94
   355 label *label83
   356 set :buildTitaniumDrillCfg:count :checkOre:count
   357 op add *tmp96 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   369 label *label87
   370 set *tmp101 null
   371 label *label88
-    * set *tmp97 *tmp101
   372 label *label86
   373 set :buildTitaniumDrillCfg:count :checkOre.1:count
   374 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
 
   386 label *label90
   387 set *tmp108 null
   388 label *label91
-    * set *tmp104 *tmp108
   389 label *label89
   390 set :buildTitaniumDrillCfg:count :checkOre.2:count
   391 op add *tmp110 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   404 label *label93
   405 set *tmp116 null
   406 label *label94
-    * set *tmp112 *tmp116
   407 label *label92
   408 set :buildTitaniumDrillCfg:count :checkOre.3:count
   409 op greaterThan *tmp118 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
   419 label *label97
   420 set *tmp121 null
   421 label *label98
-    * set *tmp119 *tmp121
   422 jump *label96 always
   423 label *label95
-    * set *tmp119 null
   424 label *label96
   425 label *label77
   426 multijump *tmp89 0 0 (m:marker5)
 
   460 jump *label104 equal *tmp136 false
   461 set *tmp72 :buildTitaniumDrillCfg:result
   462 jump *label58 always
-    * set *tmp137 null
   463 jump *label105 always
   464 label *label104
-    * set *tmp137 null
   465 label *label105
   466 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   467 set *tmp135 null
 
   471 set :buildTitaniumDrillCfg:minimum 3
   472 set *tmp135 :buildTitaniumDrillCfg:minimum
   473 label *label102
-    * set *tmp123 *tmp135
   474 jump *label100 always
   475 label *label99
-    * set *tmp123 null
   476 label *label100
   477 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   478 op greaterThan *tmp138 :buildTitaniumDrillCfg:attempts 5
 
   491 label *label109
   492 op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
   493 op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
-    * set *tmp140 :buildTitaniumDrillCfg:angle
   494 label *label108
   495 set :buildTitaniumDrillCfg:attempts 0
   496 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
   497 op max *tmp148 *tmp147 1
   498 set :buildTitaniumDrillCfg:minimum *tmp148
-    * set *tmp139 :buildTitaniumDrillCfg:minimum
   499 jump *label107 always
   500 label *label106
-    * set *tmp139 null
   501 label *label107
   502 label *label60
   503 jump *label59 always
 
   630 setaddr :buildBlock*retaddr *label127 (h:*label127)
   631 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   632 label *label127
-    * set *tmp157 :buildBlock*retval
   633 jump *label122 always
   634 label *label124
   635 multijump *tmp158 0 0 (m:marker8)
   636 multilabel *label126 (m:marker8)
   637 label *label125
-    * set *tmp157 null
   638 label *label122
   639 set :buildBlockFromCfg.8:block @unloader
   640 set :buildBlockFromCfg.8:offsetX -2
 
   708 setaddr :buildBlock*retaddr *label139 (h:*label139)
   709 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   710 label *label139
-    * set *tmp165 :buildBlock*retval
   711 jump *label134 always
   712 label *label136
   713 multijump *tmp166 0 0 (m:marker10)
   714 multilabel *label138 (m:marker10)
   715 label *label137
-    * set *tmp165 null
   716 label *label134
   717 set :buildBlockFromCfg.10:block @air-factory
   718 set :buildBlockFromCfg.10:offsetX -4
 
   761 label *label146
   762 write @flare .controller ".unitToProduce"
   763 write true .controller ".buildUnits"
-    * set *tmp173 .phase
   764 op add .phase .phase 1
   765 write 85 .controller ".pressTarget"
   766 write 60 .controller ".smelterTarget"
 
   773 op lessThan *tmp175 *tmp174 500
   774 jump *label151 equal *tmp175 false
   775 jump *label149 always
-    * set *tmp176 null
   776 jump *label152 always
   777 label *label151
-    * set *tmp176 null
   778 label *label152
   779 label *label148
   780 read *tmp36 .controller ".monos"
 
   813 setaddr :buildBlock*retaddr *label158 (h:*label158)
   814 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   815 label *label158
-    * set *tmp178 :buildBlock*retval
   816 jump *label153 always
   817 label *label155
   818 multijump *tmp179 0 0 (m:marker12)
   819 multilabel *label157 (m:marker12)
   820 label *label156
-    * set *tmp178 null
   821 label *label153
   822 set :buildBlockFromCfg.12:block @kiln
   823 set :buildBlockFromCfg.12:offsetX 3.5
 
   891 setaddr :buildBlock*retaddr *label170 (h:*label170)
   892 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   893 label *label170
-    * set *tmp186 :buildBlock*retval
   894 jump *label165 always
   895 label *label167
   896 multijump *tmp187 0 0 (m:marker14)
   897 multilabel *label169 (m:marker14)
   898 label *label168
-    * set *tmp186 null
   899 label *label165
   900 set :buildBlockFromCfg.14:block @water-extractor
   901 set :buildBlockFromCfg.14:offsetX -3.5
 
   928 setaddr :buildBlock*retaddr *label176 (h:*label176)
   929 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   930 label *label176
-    * set *tmp190 :buildBlock*retval
   931 jump *label171 always
   932 label *label173
   933 multijump *tmp191 0 0 (m:marker15)
   934 multilabel *label175 (m:marker15)
   935 label *label174
-    * set *tmp190 null
   936 label *label171
   937 set :buildBlockFromCfg.15:block @steam-generator
   938 set :buildBlockFromCfg.15:offsetX -3.5
 
  1006 setaddr :buildBlock*retaddr *label188 (h:*label188)
  1007 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
  1008 label *label188
-    * set *tmp198 :buildBlock*retval
  1009 jump *label183 always
  1010 label *label185
  1011 multijump *tmp199 0 0 (m:marker17)
  1012 multilabel *label187 (m:marker17)
  1013 label *label186
-    * set *tmp198 null
  1014 label *label183
  1015 write true .controller ".buildUnits"
  1016 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)
 
  1067 op notEqual *tmp208 *tmp207 null
  1068 jump *label208 equal *tmp208 false
  1069 ucontrol itemDrop @air 1000
-    * set *tmp209 null
  1070 jump *label209 always
  1071 label *label208
-    * set *tmp209 null
  1072 label *label209
  1073 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1074 label *label206
 
  1122 op greaterThan *tmp223 *tmp221 *tmp222
  1123 jump *label220 notEqual *tmp223 false
  1124 label *label222
-    * set *tmp218 null
  1125 jump *label218 always
  1126 label *label217
  1127 label *label223
 
  1132 label *label224
  1133 jump *label223 always
  1134 label *label225
-    * set *tmp218 null
  1135 label *label218
  1136 set :transportStatus:target 0
  1137 set :transportStatus:item null
 
  1149 set .ERROR :error.1:error
  1150 stop
  1151 label *label230
-    * set *tmp229 null
  1152 jump *label229 always
  1153 label *label228
-    * set *tmp229 null
  1154 label *label229
  1155 label *label227
  1156 return :locateOre*retaddr
 
  1187 op land *tmp235 *tmp233 *tmp234
  1188 jump *label239 equal *tmp235 false
  1189 jump *label238 always
-    * set *tmp236 null
  1190 jump *label240 always
  1191 label *label239
-    * set *tmp236 null
  1192 label *label240
  1193 ucontrol mine :mineOre:x :mineOre:y
  1194 op greaterThan *tmp237 @second :mineOre:stop
  1195 jump *label241 equal *tmp237 false
  1196 jump *label238 always
-    * set *tmp238 null
  1197 jump *label242 always
  1198 label *label241
-    * set *tmp238 null
  1199 label *label242
  1200 label *label237
  1201 sensor *tmp239 @unit @totalItems
 
  1259 op land *tmp248 *tmp246 *tmp247
  1260 jump *label254 equal *tmp248 false
  1261 ucontrol itemDrop @air 1000
-    * set *tmp249 null
  1262 jump *label255 always
  1263 label *label254
-    * set *tmp249 null
  1264 label *label255
  1265 label *label252
  1266 sensor *tmp250 @unit :fetchBlock:item
 
  1312 setaddr :mineOre*retaddr *label269 (h:*label269)
  1313 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1314 label *label269
-    * set *tmp266 null
  1315 jump *label268 always
  1316 label *label267
-    * set *tmp266 null
  1317 label *label268
  1318 label *label265
  1319 set :supplyBase0:supplied true
 
  1322 label *label262
  1323 set *tmp261 null
  1324 label *label263
-    * set *tmp258 *tmp261
  1325 jump *label261 always
  1326 label *label260
-    * set *tmp258 null
  1327 label *label261
  1328 sensor *tmp267 .core @silicon
  1329 op lessThan *tmp268 *tmp267 .targetSilicon
 
  1356 setaddr :mineOre*retaddr *label279 (h:*label279)
  1357 call *label6 *invalid :mineOre*retval (m:*label279) (h:*label279)
  1358 label *label279
-    * set *tmp277 null
  1359 jump *label278 always
  1360 label *label277
-    * set *tmp277 null
  1361 label *label278
  1362 label *label275
  1363 set :supplyBase0:supplied true
 
  1392 setaddr :mineOre*retaddr *label287 (h:*label287)
  1393 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1394 label *label287
-    * set *tmp285 null
  1395 jump *label286 always
  1396 label *label285
-    * set *tmp285 null
  1397 label *label286
  1398 label *label283
  1399 set :supplyBase0:supplied true
 
  1404 label *label281
  1405 set *tmp272 *tmp280
  1406 label *label273
-    * set *tmp269 *tmp272
  1407 jump *label271 always
  1408 label *label270
-    * set *tmp269 null
  1409 label *label271
  1410 sensor *tmp286 .battery @totalPower
  1411 op lessThan *tmp287 *tmp286 .powerTarget
 
  1438 setaddr :mineOre*retaddr *label297 (h:*label297)
  1439 call *label6 *invalid :mineOre*retval (m:*label297) (h:*label297)
  1440 label *label297
-    * set *tmp296 null
  1441 jump *label296 always
  1442 label *label295
-    * set *tmp296 null
  1443 label *label296
  1444 label *label293
  1445 set :supplyBase0:supplied true
 
  1453 label *label288
  1454 set *tmp288 null
  1455 label *label289
-    * set *tmp255 *tmp288
  1456 jump *label259 always
  1457 label *label258
-    * set *tmp255 null
  1458 label *label259
  1459 sensor *tmp297 .core @titanium
  1460 op lessThan *tmp298 *tmp297 .targetTitanium
 
  1585 label *label302
  1586 set *tmp307 null
  1587 label *label303
-    * set *tmp305 *tmp307
  1588 jump *label301 always
  1589 label *label300
  1590 set :status1.10:text "Goal 11: Fetching titanium"
 
  1595 setaddr :fetchBlock*retaddr *label331 (h:*label331)
  1596 call *label8 *invalid :fetchBlock*retval (m:*label331) (h:*label331)
  1597 label *label331
-    * set *tmp305 null
  1598 label *label301
  1599 label *label257
  1600 return :supplyBase0*retaddr
 
  1627 label *label340
  1628 set *tmp339 null
  1629 label *label336
-    * set *tmp335 *tmp339
  1630 jump *label334 always
  1631 label *label333
  1632 sensor *tmp340 .core @coal
 
  1652 label *label346
  1653 set *tmp343 null
  1654 label *label342
-    * set *tmp335 *tmp343
  1655 label *label334
  1656 label *label332
  1657 return :supplyBase1*retaddr
 
  1663 setaddr :supplyBase0*retaddr *label351 (h:*label351)
  1664 call *label9 *invalid :supplyBase0*retval (m:*label351) (h:*label351)
  1665 label *label351
-    * set *tmp344 null
  1666 jump *label348 always
  1667 label *label349
  1668 jump *label353 equal .phase 1
 
  1671 setaddr :supplyBase1*retaddr *label354 (h:*label354)
  1672 call *label10 *invalid :supplyBase1*retval (m:*label354) (h:*label354)
  1673 label *label354
-    * set *tmp344 null
  1674 jump *label348 always
  1675 label *label352
-    * set *tmp344 null
  1676 label *label348
  1677 label *label347
  1678 return :supplyBase*retaddr
 
  1723 label *label358
  1724 set *tmp351 null
  1725 label *label359
-    * set *tmp348 *tmp351
  1726 jump *label357 always
  1727 label *label356
-    * set *tmp348 null
  1728 label *label357
  1729 set :targetMet*retval false
  1730 jump *label355 always
 
  1854 jump *label397 equal *tmp387 false
  1855 set :buildBlockAt*retval :buildBlockAt:building
  1856 jump *label392 always
-    * set *tmp388 null
  1857 jump *label398 always
  1858 label *label397
-    * set *tmp388 null
  1859 label *label398
  1860 jump *label399 equal :buildBlockAt:skipError false
  1861 set :buildBlockAt*retval null
  1862 jump *label392 always
-    * set *tmp389 null
  1863 jump *label400 always
  1864 label *label399
-    * set *tmp389 null
  1865 label *label400
  1866 set :error.2:error "Cannot build at ("
  1867 set .ERROR :error.2:error
  1868 stop
  1869 label *label401
-    * set *tmp386 null
  1870 jump *label396 always
  1871 label *label395
-    * set *tmp386 null
  1872 label *label396
  1873 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1874 wait 0.25
 
  1878 op equal *tmp392 :buildBlockAt:building null
  1879 jump *label405 equal *tmp392 false
  1880 jump *label404 always
-    * set *tmp393 null
  1881 jump *label406 always
  1882 label *label405
-    * set *tmp393 null
  1883 label *label406
  1884 label *label403
  1885 op notEqual *tmp394 :buildBlockAt:type :buildBlockAt:block
 
  1930 op notEqual *tmp395 :findUnits:firstUnit null
  1931 jump *label412 equal *tmp395 false
  1932 label *label414
-    * set *tmp397 :findUnits:count
  1933 op add :findUnits:count :findUnits:count 1
  1934 ubind :findUnits:type
  1935 label *label415
  1936 op notEqual *tmp398 @unit :findUnits:firstUnit
  1937 jump *label414 notEqual *tmp398 false
  1938 label *label416
-    * set *tmp396 null
  1939 jump *label413 always
  1940 label *label412
-    * set *tmp396 null
  1941 label *label413
  1942 set :findUnits*retval :findUnits:count
  1943 label *label411

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-26 instructions):
 
   347 jump *label84 equal *tmp93 false
   348 set *tmp95 :checkOre:count
   349 op add :checkOre:count :checkOre:count 1
-    * set *tmp94 *tmp95
   350 jump *label85 always
   351 label *label84
-    * set *tmp94 null
   352 label *label85
   353 label *label83
   354 set :buildTitaniumDrillCfg:count :checkOre:count
 
   362 jump *label87 equal *tmp100 false
   363 set *tmp102 :checkOre.1:count
   364 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp101 *tmp102
   365 jump *label88 always
   366 label *label87
-    * set *tmp101 null
   367 label *label88
   368 label *label86
   369 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
   377 jump *label90 equal *tmp107 false
   378 set *tmp109 :checkOre.2:count
   379 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp108 *tmp109
   380 jump *label91 always
   381 label *label90
-    * set *tmp108 null
   382 label *label91
   383 label *label89
   384 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
   393 jump *label93 equal *tmp115 false
   394 set *tmp117 :checkOre.3:count
   395 op add :checkOre.3:count :checkOre.3:count 1
-    * set *tmp116 *tmp117
   396 jump *label94 always
   397 label *label93
-    * set *tmp116 null
   398 label *label94
   399 label *label92
   400 set :buildTitaniumDrillCfg:count :checkOre.3:count
 
   406 op greaterThanEq *tmp120 :buildTitaniumDrillCfg:count 4
   407 jump *label97 equal *tmp120 false
   408 jump *label75 always
-    * set *tmp121 null
   409 jump *label98 always
   410 label *label97
-    * set *tmp121 null
   411 label *label98
   412 jump *label96 always
   413 label *label95
 
   454 label *label104
   455 label *label105
   456 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * set *tmp135 null
   457 jump *label102 always
   458 label *label101
   459 set :buildTitaniumDrillCfg:attempts 1000
   460 set :buildTitaniumDrillCfg:minimum 3
-    * set *tmp135 :buildTitaniumDrillCfg:minimum
   461 label *label102
   462 jump *label100 always
   463 label *label99
 
  1305 label *label268
  1306 label *label265
  1307 set :supplyBase0:supplied true
-    * set *tmp261 :supplyBase0:supplied
  1308 jump *label263 always
  1309 label *label262
-    * set *tmp261 null
  1310 label *label263
  1311 jump *label261 always
  1312 label *label260
 
  1347 label *label278
  1348 label *label275
  1349 set :supplyBase0:supplied true
-    * set *tmp272 :supplyBase0:supplied
  1350 jump *label273 always
  1351 label *label272
  1352 sensor *tmp278 .smelter @sand
 
  1387 label *label280
  1388 set *tmp280 null
  1389 label *label281
-    * set *tmp272 *tmp280
  1390 label *label273
  1391 jump *label271 always
  1392 label *label270
 
  1432 label *label290
  1433 set *tmp291 null
  1434 label *label291
-    * set *tmp288 *tmp291
  1435 jump *label289 always
  1436 label *label288
-    * set *tmp288 null
  1437 label *label289
  1438 jump *label259 always
  1439 label *label258
 
  1562 label *label309
  1563 set *tmp311 *tmp314
  1564 label *label305
-    * set *tmp307 *tmp311
  1565 jump *label303 always
  1566 label *label302
-    * set *tmp307 null
  1567 label *label303
  1568 jump *label301 always
  1569 label *label300
 
  1595 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1596 call *label7 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
  1597 label *label338
-    * set *tmp339 null
  1598 jump *label336 always
  1599 label *label335
  1600 set :status1.12:text "Phase 1: mining lead"
 
  1604 setaddr :mineOre.1*retaddr *label340 (h:*label340)
  1605 call *label7 *invalid :mineOre.1*retval (m:*label340) (h:*label340)
  1606 label *label340
-    * set *tmp339 null
  1607 label *label336
  1608 jump *label334 always
  1609 label *label333
 
  1618 setaddr :mineOre.1*retaddr *label344 (h:*label344)
  1619 call *label7 *invalid :mineOre.1*retval (m:*label344) (h:*label344)
  1620 label *label344
-    * set *tmp343 null
  1621 jump *label342 always
  1622 label *label341
  1623 set :status1.14:text "Phase 1: mining lead"
 
  1627 setaddr :mineOre.1*retaddr *label346 (h:*label346)
  1628 call *label7 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
  1629 label *label346
-    * set *tmp343 null
  1630 label *label342
  1631 label *label334
  1632 label *label332
 
  1694 label *label360
  1695 set *tmp354 null
  1696 label *label361
-    * set *tmp351 *tmp354
  1697 jump *label359 always
  1698 label *label358
-    * set *tmp351 null
  1699 label *label359
  1700 jump *label357 always
  1701 label *label356

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-12 instructions):
 
   345 ucontrol getBlock :checkOre:x :checkOre:y *tmp92 *tmp91 :checkOre:floor
   346 op equal *tmp93 :checkOre:floor :checkOre:ore
   347 jump *label84 equal *tmp93 false
-    * set *tmp95 :checkOre:count
   348 op add :checkOre:count :checkOre:count 1
   349 jump *label85 always
   350 label *label84
 
   359 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp99 *tmp98 :checkOre.1:floor
   360 op equal *tmp100 :checkOre.1:floor :checkOre.1:ore
   361 jump *label87 equal *tmp100 false
-    * set *tmp102 :checkOre.1:count
   362 op add :checkOre.1:count :checkOre.1:count 1
   363 jump *label88 always
   364 label *label87
 
   373 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp106 *tmp105 :checkOre.2:floor
   374 op equal *tmp107 :checkOre.2:floor :checkOre.2:ore
   375 jump *label90 equal *tmp107 false
-    * set *tmp109 :checkOre.2:count
   376 op add :checkOre.2:count :checkOre.2:count 1
   377 jump *label91 always
   378 label *label90
 
   388 ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp114 *tmp113 :checkOre.3:floor
   389 op equal *tmp115 :checkOre.3:floor :checkOre.3:ore
   390 jump *label93 equal *tmp115 false
-    * set *tmp117 :checkOre.3:count
   391 op add :checkOre.3:count :checkOre.3:count 1
   392 jump *label94 always
   393 label *label93
 
  1378 label *label286
  1379 label *label283
  1380 set :supplyBase0:supplied true
-    * set *tmp280 :supplyBase0:supplied
  1381 jump *label281 always
  1382 label *label280
-    * set *tmp280 null
  1383 label *label281
  1384 label *label273
  1385 jump *label271 always
 
  1421 label *label296
  1422 label *label293
  1423 set :supplyBase0:supplied true
-    * set *tmp291 :supplyBase0:supplied
  1424 jump *label291 always
  1425 label *label290
-    * set *tmp291 null
  1426 label *label291
  1427 jump *label289 always
  1428 label *label288
 
  1458 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1459 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1460 label *label307
-    * set *tmp311 null
  1461 jump *label305 always
  1462 label *label304
  1463 sensor *tmp312 .core @silicon
 
  1551 label *label315
  1552 set *tmp314 *tmp321
  1553 label *label309
-    * set *tmp311 *tmp314
  1554 label *label305
  1555 jump *label303 always
  1556 label *label302
 
  1679 label *label362
  1680 set *tmp357 null
  1681 label *label363
-    * set *tmp354 *tmp357
  1682 jump *label361 always
  1683 label *label360
-    * set *tmp354 null
  1684 label *label361
  1685 jump *label359 always
  1686 label *label358

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1482 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1483 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
  1484 label *label313
-    * set *tmp314 null
  1485 jump *label309 always
  1486 label *label308
  1487 sensor *tmp319 .core @copper
 
  1548 label *label319
  1549 set *tmp321 *tmp324
  1550 label *label315
-    * set *tmp314 *tmp321
  1551 label *label309
  1552 label *label305
  1553 jump *label303 always
 
  1672 label *label364
  1673 set *tmp360 null
  1674 label *label365
-    * set *tmp357 *tmp360
  1675 jump *label363 always
  1676 label *label362
-    * set *tmp357 null
  1677 label *label363
  1678 jump *label361 always
  1679 label *label360

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1494 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1495 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
  1496 label *label317
-    * set *tmp321 null
  1497 jump *label315 always
  1498 label *label314
  1499 sensor *tmp322 .core @lead
 
  1545 label *label323
  1546 set *tmp324 *tmp327
  1547 label *label319
-    * set *tmp321 *tmp324
  1548 label *label315
  1549 label *label309
  1550 label *label305
 
  1665 label *label366
  1666 set *tmp363 null
  1667 label *label367
-    * set *tmp360 *tmp363
  1668 jump *label365 always
  1669 label *label364
-    * set *tmp360 null
  1670 label *label365
  1671 jump *label363 always
  1672 label *label362

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1506 setaddr :mineOre.1*retaddr *label321 (h:*label321)
  1507 call *label7 *invalid :mineOre.1*retval (m:*label321) (h:*label321)
  1508 label *label321
-    * set *tmp324 null
  1509 jump *label319 always
  1510 label *label318
  1511 sensor *tmp325 .core @metaglass
 
  1542 label *label329
  1543 set *tmp327 null
  1544 label *label323
-    * set *tmp324 *tmp327
  1545 label *label319
  1546 label *label315
  1547 label *label309
 
  1658 jump *label366 equal *tmp362 false
  1659 set :targetMet*retval true
  1660 jump *label355 always
-    * set *tmp363 null
  1661 jump *label367 always
  1662 label *label366
-    * set *tmp363 null
  1663 label *label367
  1664 jump *label365 always
  1665 label *label364

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1518 setaddr :mineOre.1*retaddr *label325 (h:*label325)
  1519 call *label7 *invalid :mineOre.1*retval (m:*label325) (h:*label325)
  1520 label *label325
-    * set *tmp327 null
  1521 jump *label323 always
  1522 label *label322
  1523 set :status1.9:text "Goal 10: supplying base"
 
  1539 setaddr :mineOre.1*retaddr *label329 (h:*label329)
  1540 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
  1541 label *label329
-    * set *tmp327 null
  1542 label *label323
  1543 label *label319
  1544 label *label315

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-67 instructions):
 
    12 write 510 bank1 511
    13 label *label21
    14 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp43 *tmp42
-    * set .core *tmp42
+   15 ulocate building core false @copper .coreX .coreY 0 .core
    16 label *label22
    17 op equal *tmp44 .core null
    18 jump *label21 notEqual *tmp44 false
 
    24 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
    25 label *label24
    26 write :findUnits:count .display ".monos"
-    * set *tmp46 :findUnits*retval
-    * set :monos *tmp46
+   27 set :monos :findUnits*retval
    28 set :findUnits:type @flare
    29 setaddr :findUnits*retaddr *label25 (h:*label25)
    30 call *label19 *invalid :findUnits*retval (m:*label25) (h:*label25)
    31 label *label25
    32 write :findUnits:count .display ".flares"
-    * set *tmp48 :findUnits*retval
-    * set :flares *tmp48
+   33 set :flares :findUnits*retval
    34 set :findUnits:type @poly
    35 setaddr :findUnits*retaddr *label26 (h:*label26)
    36 call *label19 *invalid :findUnits*retval (m:*label26) (h:*label26)
    37 label *label26
    38 write :findUnits:count .display ".polys"
-    * set *tmp50 :findUnits*retval
-    * set :polys *tmp50
+   39 set :polys :findUnits*retval
    40 set :buildBlockFromCfg:block @graphite-press
    41 set :buildBlockFromCfg:offsetX -1.5
    42 set :buildBlockFromCfg:offsetY 2.5
 
    50 set :buildBlockFromCfg:config null
    51 setaddr *tmp52 *label31
    52 label *label28
-    * op add *tmp53 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp53
-    * op add *tmp54 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp54
+   53 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   54 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    55 set :buildBlock:block :buildBlockFromCfg:block
    56 set :buildBlock:x :buildBlockFromCfg:x
    57 set :buildBlock:y :buildBlockFromCfg:y
 
    88 set :buildBlockFromCfg.1:config null
    89 setaddr *tmp56 *label37
    90 label *label34
-    * op add *tmp57 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp57
-    * op add *tmp58 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp58
+   91 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   92 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    93 set :buildBlock:block :buildBlockFromCfg.1:block
    94 set :buildBlock:x :buildBlockFromCfg.1:x
    95 set :buildBlock:y :buildBlockFromCfg.1:y
 
   126 set :buildBlockFromCfg.2:config null
   127 setaddr *tmp60 *label43
   128 label *label40
-    * op add *tmp61 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp61
-    * op add *tmp62 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp62
+  129 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  130 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   131 set :buildBlock:block :buildBlockFromCfg.2:block
   132 set :buildBlock:x :buildBlockFromCfg.2:x
   133 set :buildBlock:y :buildBlockFromCfg.2:y
 
   161 set :buildBlockFromCfg.3:config null
   162 setaddr *tmp64 *label49
   163 label *label46
-    * op add *tmp65 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp65
-    * op add *tmp66 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp66
+  164 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  165 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   166 set :buildBlock:block :buildBlockFromCfg.3:block
   167 set :buildBlock:x :buildBlockFromCfg.3:x
   168 set :buildBlock:y :buildBlockFromCfg.3:y
 
   200 set :buildBlockFromCfg.4:config null
   201 setaddr *tmp68 *label55
   202 label *label52
-    * op add *tmp69 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp69
-    * op add *tmp70 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp70
+  203 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  204 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   205 set :buildBlock:block :buildBlockFromCfg.4:block
   206 set :buildBlock:x :buildBlockFromCfg.4:x
   207 set :buildBlock:y :buildBlockFromCfg.4:y
 
   328 set :checkOre:y :buildTitaniumDrillCfg:ay
   329 set :checkOre:ore @ore-titanium
   330 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp92 *tmp91 :checkOre:floor
+  331 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   332 op equal *tmp93 :checkOre:floor :checkOre:ore
   333 jump *label84 equal *tmp93 false
   334 op add :checkOre:count :checkOre:count 1
 
   337 label *label85
   338 label *label83
   339 set :buildTitaniumDrillCfg:count :checkOre:count
-    * op add *tmp96 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:x *tmp96
+  340 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   341 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   342 set :checkOre.1:ore @ore-titanium
   343 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp99 *tmp98 :checkOre.1:floor
+  344 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   345 op equal *tmp100 :checkOre.1:floor :checkOre.1:ore
   346 jump *label87 equal *tmp100 false
   347 op add :checkOre.1:count :checkOre.1:count 1
 
   355 set :checkOre.2:y *tmp103
   356 set :checkOre.2:ore @ore-titanium
   357 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp106 *tmp105 :checkOre.2:floor
+  358 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   359 op equal *tmp107 :checkOre.2:floor :checkOre.2:ore
   360 jump *label90 equal *tmp107 false
   361 op add :checkOre.2:count :checkOre.2:count 1
 
   370 set :checkOre.3:y *tmp111
   371 set :checkOre.3:ore @ore-titanium
   372 set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp114 *tmp113 :checkOre.3:floor
+  373 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   374 op equal *tmp115 :checkOre.3:floor :checkOre.3:ore
   375 jump *label93 equal *tmp115 false
   376 op add :checkOre.3:count :checkOre.3:count 1
 
   404 op greaterThan *tmp122 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   405 jump *label99 equal *tmp122 false
   406 op div *tmp124 :buildTitaniumDrillCfg:dx 2
-    * op add *tmp125 :buildTitaniumDrillCfg:ax *tmp124
-    * set :buildTitaniumDrillCfg:ax *tmp125
+  407 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp124
   408 op div *tmp126 :buildTitaniumDrillCfg:dy 2
-    * op add *tmp127 :buildTitaniumDrillCfg:ay *tmp126
-    * set :buildTitaniumDrillCfg:ay *tmp127
+  409 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp126
   410 op sub *tmp128 :buildTitaniumDrillCfg:x .coreX
   411 op abs *tmp129 *tmp128
   412 op greaterThanEq *tmp130 *tmp129 10
 
   461 label *label108
   462 set :buildTitaniumDrillCfg:attempts 0
   463 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
-    * op max *tmp148 *tmp147 1
-    * set :buildTitaniumDrillCfg:minimum *tmp148
+  464 op max :buildTitaniumDrillCfg:minimum *tmp147 1
   465 jump *label107 always
   466 label *label106
   467 label *label107
 
   489 set :buildBlockFromCfg.5:config null
   490 setaddr *tmp150 *label114
   491 label *label111
-    * op add *tmp151 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp151
-    * op add *tmp152 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp152
+  492 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  493 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   494 set :buildBlock:block :buildBlockFromCfg.5:block
   495 set :buildBlock:x :buildBlockFromCfg.5:x
   496 set :buildBlock:y :buildBlockFromCfg.5:y
 
   527 set :buildBlockFromCfg.6:config processor2
   528 setaddr *tmp154 *label120
   529 label *label117
-    * op add *tmp155 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp155
-    * op add *tmp156 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp156
+  530 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  531 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   532 set :buildBlock:block :buildBlockFromCfg.6:block
   533 set :buildBlock:x :buildBlockFromCfg.6:x
   534 set :buildBlock:y :buildBlockFromCfg.6:y
 
   574 set :buildBlockFromCfg.7:config null
   575 setaddr *tmp158 *label126
   576 label *label123
-    * op add *tmp159 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp159
-    * op add *tmp160 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp160
+  577 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  578 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   579 set :buildBlock:block :buildBlockFromCfg.7:block
   580 set :buildBlock:x :buildBlockFromCfg.7:x
   581 set :buildBlock:y :buildBlockFromCfg.7:y
 
   609 set :buildBlockFromCfg.8:config null
   610 setaddr *tmp162 *label132
   611 label *label129
-    * op add *tmp163 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp163
-    * op add *tmp164 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp164
+  612 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  613 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   614 set :buildBlock:block :buildBlockFromCfg.8:block
   615 set :buildBlock:x :buildBlockFromCfg.8:x
   616 set :buildBlock:y :buildBlockFromCfg.8:y
 
   648 set :buildBlockFromCfg.9:config null
   649 setaddr *tmp166 *label138
   650 label *label135
-    * op add *tmp167 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp167
-    * op add *tmp168 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp168
+  651 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  652 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   653 set :buildBlock:block :buildBlockFromCfg.9:block
   654 set :buildBlock:x :buildBlockFromCfg.9:x
   655 set :buildBlock:y :buildBlockFromCfg.9:y
 
   683 set :buildBlockFromCfg.10:config @mono
   684 setaddr *tmp170 *label144
   685 label *label141
-    * op add *tmp171 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp171
-    * op add *tmp172 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp172
+  686 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  687 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   688 set :buildBlock:block :buildBlockFromCfg.10:block
   689 set :buildBlock:x :buildBlockFromCfg.10:x
   690 set :buildBlock:y :buildBlockFromCfg.10:y
 
   749 set :buildBlockFromCfg.11:config null
   750 setaddr *tmp179 *label157
   751 label *label154
-    * op add *tmp180 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp180
-    * op add *tmp181 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp181
+  752 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  753 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   754 set :buildBlock:block :buildBlockFromCfg.11:block
   755 set :buildBlock:x :buildBlockFromCfg.11:x
   756 set :buildBlock:y :buildBlockFromCfg.11:y
 
   784 set :buildBlockFromCfg.12:config null
   785 setaddr *tmp183 *label163
   786 label *label160
-    * op add *tmp184 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp184
-    * op add *tmp185 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp185
+  787 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  788 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   789 set :buildBlock:block :buildBlockFromCfg.12:block
   790 set :buildBlock:x :buildBlockFromCfg.12:x
   791 set :buildBlock:y :buildBlockFromCfg.12:y
 
   823 set :buildBlockFromCfg.13:config null
   824 setaddr *tmp187 *label169
   825 label *label166
-    * op add *tmp188 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp188
-    * op add *tmp189 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp189
+  826 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  827 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   828 set :buildBlock:block :buildBlockFromCfg.13:block
   829 set :buildBlock:x :buildBlockFromCfg.13:x
   830 set :buildBlock:y :buildBlockFromCfg.13:y
 
   858 set :buildBlockFromCfg.14:config null
   859 setaddr *tmp191 *label175
   860 label *label172
-    * op add *tmp192 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp192
-    * op add *tmp193 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp193
+  861 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  862 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   863 set :buildBlock:block :buildBlockFromCfg.14:block
   864 set :buildBlock:x :buildBlockFromCfg.14:x
   865 set :buildBlock:y :buildBlockFromCfg.14:y
 
   893 set :buildBlockFromCfg.15:config null
   894 setaddr *tmp195 *label181
   895 label *label178
-    * op add *tmp196 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp196
-    * op add *tmp197 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp197
+  896 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  897 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   898 set :buildBlock:block :buildBlockFromCfg.15:block
   899 set :buildBlock:x :buildBlockFromCfg.15:x
   900 set :buildBlock:y :buildBlockFromCfg.15:y
 
   932 set :buildBlockFromCfg.16:config @coal
   933 setaddr *tmp199 *label187
   934 label *label184
-    * op add *tmp200 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp200
-    * op add *tmp201 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp201
+  935 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  936 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   937 set :buildBlock:block :buildBlockFromCfg.16:block
   938 set :buildBlock:x :buildBlockFromCfg.16:x
   939 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1053 setaddr :moveToBlock*retaddr *label219 (h:*label219)
  1054 call *label3 *invalid :moveToBlock*retval (m:*label219) (h:*label219)
  1055 label *label219
-    * sensor *tmp219 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp219
+ 1056 sensor :depositItems:cap :depositItems:block @itemCapacity
  1057 label *label220
  1058 ucontrol itemDrop :depositItems:block 30
  1059 label *label221
 
  1083 return :depositItems*retaddr
  1084 end
  1085 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 *tmp227
+ 1086 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 0
  1087 op equal *tmp228 *tmp226 false
  1088 jump *label228 equal *tmp228 false
  1089 set :error.1:error "Cannot locate ore"
 
  1097 return :locateOre*retaddr
  1098 end
  1099 label *label6
-    * op min *tmp230 :mineOre:amount 30
-    * set :mineOre:amount *tmp230
+ 1100 op min :mineOre:amount :mineOre:amount 30
  1101 set :transportStatus.1:target :mineOre:amount
  1102 set :transportStatus.1:item :mineOre:ore
  1103 write :transportStatus.1:target .display ".transportTarget"
 
  1117 set :status3.3:text "Mining..."
  1118 write :status3.3:text .display ".status3"
  1119 label *label235
-    * op add *tmp231 @second 10
-    * set :mineOre:stop *tmp231
+ 1120 op add :mineOre:stop @second 10
  1121 label *label236
-    * sensor *tmp232 @unit @firstItem
-    * set :mineOre:item *tmp232
+ 1122 sensor :mineOre:item @unit @firstItem
  1123 op notEqual *tmp233 :mineOre:item null
  1124 op notEqual *tmp234 :mineOre:item :mineOre:ore
  1125 op land *tmp235 *tmp233 *tmp234
 
  1157 write :status2:item .display ".item2"
  1158 write :status2:block .display ".block2"
  1159 label *label245
-    * set *tmp241 :mineOre.1:ore
-    * set :mineOre:ore *tmp241
+ 1160 set :mineOre:ore :mineOre.1:ore
  1161 set :mineOre:amount 30
  1162 set :mineOre:block .core
  1163 setaddr :mineOre*retaddr *label246 (h:*label246)
 
  1167 return :mineOre.1*retaddr
  1168 end
  1169 label *label8
-    * sensor *tmp242 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp242
+ 1170 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1171 set :transportStatus.2:item :fetchBlock:item
  1172 write :transportStatus.2:target .display ".transportTarget"
  1173 write :transportStatus.2:item .display ".transportItem"
 
  1188 label *label250
  1189 label *label251
  1190 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp245 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp245
+ 1191 sensor :fetchBlock:unitItem @unit @firstItem
  1192 op notEqual *tmp246 :fetchBlock:unitItem null
  1193 op notEqual *tmp247 :fetchBlock:unitItem :fetchBlock:item
  1194 op land *tmp248 *tmp246 *tmp247
 
  1234 write :status2.2:item .display ".item2"
  1235 write :status2.2:block .display ".block2"
  1236 label *label266
-    * sensor *tmp262 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp262
+ 1237 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1238 sensor *tmp263 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp264 :supplyBlock:blockCapacity *tmp263
-    * set :supplyBlock:missing *tmp264
+ 1239 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp263
  1240 op greaterThan *tmp265 :supplyBlock:missing 0
  1241 jump *label267 equal *tmp265 false
  1242 set :mineOre:ore :supplyBlock:ore
 
  1274 write :status2.3:item .display ".item2"
  1275 write :status2.3:block .display ".block2"
  1276 label *label276
-    * sensor *tmp273 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp273
+ 1277 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1278 sensor *tmp274 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp275 :supplyBlock.1:blockCapacity *tmp274
-    * set :supplyBlock.1:missing *tmp275
+ 1279 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp274
  1280 op greaterThan *tmp276 :supplyBlock.1:missing 0
  1281 jump *label277 equal *tmp276 false
  1282 set :mineOre:ore :supplyBlock.1:ore
 
  1307 write :status2.4:item .display ".item2"
  1308 write :status2.4:block .display ".block2"
  1309 label *label284
-    * sensor *tmp281 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp281
+ 1310 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1311 sensor *tmp282 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp283 :supplyBlock.2:blockCapacity *tmp282
-    * set :supplyBlock.2:missing *tmp283
+ 1312 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp282
  1313 op greaterThan *tmp284 :supplyBlock.2:missing 0
  1314 jump *label285 equal *tmp284 false
  1315 set :mineOre:ore :supplyBlock.2:ore
 
  1348 write :status2.5:item .display ".item2"
  1349 write :status2.5:block .display ".block2"
  1350 label *label294
-    * sensor *tmp292 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp292
+ 1351 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1352 sensor *tmp293 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp294 :supplyBlock.3:blockCapacity *tmp293
-    * set :supplyBlock.3:missing *tmp294
+ 1353 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp293
  1354 op greaterThan *tmp295 :supplyBlock.3:missing 0
  1355 jump *label295 equal *tmp295 false
  1356 set :mineOre:ore :supplyBlock.3:ore
 
  1378 jump *label298 equal *tmp298 false
  1379 sensor *tmp300 .core @titanium
  1380 op sub *tmp301 .targetTitanium *tmp300
-    * op min *tmp302 7 *tmp301
-    * set *tmp299 *tmp302
+ 1381 op min *tmp299 7 *tmp301
  1382 jump *label299 always
  1383 label *label298
  1384 set *tmp299 100
 
  1408 set :status1.5:text "Goal 6: silicon requirement"
  1409 write :status1.5:text .display ".status1"
  1410 label *label310
-    * sensor *tmp315 .core @coal
-    * set :supplyBase0:coal *tmp315
-    * sensor *tmp316 .core @sand
-    * set :supplyBase0:sand *tmp316
+ 1411 sensor :supplyBase0:coal .core @coal
+ 1412 sensor :supplyBase0:sand .core @sand
  1413 op lessThan *tmp317 :supplyBase0:coal :supplyBase0:sand
  1414 jump *label311 equal *tmp317 false
  1415 set *tmp318 @coal
 
  1463 set :status1.9:text "Goal 10: supplying base"
  1464 write :status1.9:text .display ".status1"
  1465 label *label326
-    * sensor *tmp328 .core @coal
-    * set :supplyBase0:coal.1 *tmp328
-    * sensor *tmp329 .core @sand
-    * set :supplyBase0:sand.1 *tmp329
+ 1466 sensor :supplyBase0:coal.1 .core @coal
+ 1467 sensor :supplyBase0:sand.1 .core @sand
  1468 op lessThanEq *tmp330 :supplyBase0:coal.1 :supplyBase0:sand.1
  1469 jump *label327 equal *tmp330 false
  1470 set *tmp331 @coal
 
  1666 write :meetTarget:titanium .display ".targetTitanium"
  1667 write :meetTarget:metaglass .display ".targetMetaglass"
  1668 set .targetCopper :meetTarget:copper
-    * op max *tmp366 :meetTarget:lead :meetTarget:leadFactory
-    * set .targetLead *tmp366
+ 1669 op max .targetLead :meetTarget:lead :meetTarget:leadFactory
  1670 set .targetGraphite :meetTarget:graphite
-    * op max *tmp367 :meetTarget:silicon :meetTarget:siliconFactory
-    * set .targetSilicon *tmp367
+ 1671 op max .targetSilicon :meetTarget:silicon :meetTarget:siliconFactory
  1672 set .targetTitanium :meetTarget:titanium
  1673 set .targetMetaglass :meetTarget:metaglass
  1674 op add *tmp368 .targetGraphite 20
 
  1713 return :log*retaddr
  1714 end
  1715 label *label15
-    * sensor *tmp380 :logBlock:block @id
-    * set :log:encodedId *tmp380
+ 1716 sensor :log:encodedId :logBlock:block @id
  1717 setaddr :log*retaddr *label389 (h:*label389)
  1718 call *label14 *invalid :log*retval (m:*label389) (h:*label389)
  1719 label *label389
 
  1729 set :status3.4:text "Building..."
  1730 write :status3.4:text .display ".status3"
  1731 label *label394
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp383 *tmp384
-    * set :buildBlockAt:building *tmp383
+ 1732 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1733 op notEqual *tmp385 :buildBlockAt:building null
  1734 jump *label395 equal *tmp385 false
  1735 op equal *tmp387 :buildBlockAt:type :buildBlockAt:block
 
  1755 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1756 wait 0.25
  1757 label *label402
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp390 *tmp391
-    * set :buildBlockAt:building *tmp390
+ 1758 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1759 op equal *tmp392 :buildBlockAt:building null
  1760 jump *label405 equal *tmp392 false
  1761 jump *label404 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
   230 set :buildTitaniumDrillCfg:attempts 0
   231 set :buildTitaniumDrillCfg:minimum 3
   232 label *label59
-    * jump *label61 equal true false
   233 set :meetTarget:block @pneumatic-drill
   234 set :meetTarget:copper 18
   235 set :meetTarget:lead 0
 
   246 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   247 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   248 label *label64
-    * jump *label66 equal true false
   249 set :locateOre:ore :locateOreAway:ore
   250 setaddr :locateOre*retaddr *label67 (h:*label67)
   251 call *label5 *invalid :locateOre*retval (m:*label67) (h:*label67)
 
   957 call *label20 *invalid :displayUnitBuilds*retval (m:*label189) (h:*label189)
   958 label *label189
   959 label *label190
-    * jump *label192 equal true false
   960 setaddr :supplyBase*retaddr *label193 (h:*label193)
   961 call *label11 *invalid :supplyBase*retval (m:*label193) (h:*label193)
   962 label *label193

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1550 return :supplyBase1*retaddr
  1551 end
  1552 label *label11
-    * jump *label350 equal .phase 0
-    * jump *label349 always
+ 1553 jump *label349 notEqual .phase 0
  1554 label *label350
  1555 setaddr :supplyBase0*retaddr *label351 (h:*label351)
  1556 call *label9 *invalid :supplyBase0*retval (m:*label351) (h:*label351)
  1557 label *label351
  1558 jump *label348 always
  1559 label *label349
-    * jump *label353 equal .phase 1
-    * jump *label352 always
+ 1560 jump *label352 notEqual .phase 1
  1561 label *label353
  1562 setaddr :supplyBase1*retaddr *label354 (h:*label354)
  1563 call *label10 *invalid :supplyBase1*retval (m:*label354) (h:*label354)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-61 instructions):
 
    14 ubind @poly
    15 ulocate building core false @copper .coreX .coreY 0 .core
    16 label *label22
-    * op equal *tmp44 .core null
-    * jump *label21 notEqual *tmp44 false
+   17 jump *label21 equal .core null
    18 label *label23
    19 set .display processor1
    20 set .flareController processor3
 
   326 set :checkOre:ore @ore-titanium
   327 set :checkOre:count :buildTitaniumDrillCfg:count
   328 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp93 :checkOre:floor :checkOre:ore
-    * jump *label84 equal *tmp93 false
+  329 jump *label84 notEqual :checkOre:floor :checkOre:ore
   330 op add :checkOre:count :checkOre:count 1
   331 jump *label85 always
   332 label *label84
 
   338 set :checkOre.1:ore @ore-titanium
   339 set :checkOre.1:count :buildTitaniumDrillCfg:count
   340 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp100 :checkOre.1:floor :checkOre.1:ore
-    * jump *label87 equal *tmp100 false
+  341 jump *label87 notEqual :checkOre.1:floor :checkOre.1:ore
   342 op add :checkOre.1:count :checkOre.1:count 1
   343 jump *label88 always
   344 label *label87
 
   351 set :checkOre.2:ore @ore-titanium
   352 set :checkOre.2:count :buildTitaniumDrillCfg:count
   353 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp107 :checkOre.2:floor :checkOre.2:ore
-    * jump *label90 equal *tmp107 false
+  354 jump *label90 notEqual :checkOre.2:floor :checkOre.2:ore
   355 op add :checkOre.2:count :checkOre.2:count 1
   356 jump *label91 always
   357 label *label90
 
   365 set :checkOre.3:ore @ore-titanium
   366 set :checkOre.3:count :buildTitaniumDrillCfg:count
   367 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * op equal *tmp115 :checkOre.3:floor :checkOre.3:ore
-    * jump *label93 equal *tmp115 false
+  368 jump *label93 notEqual :checkOre.3:floor :checkOre.3:ore
   369 op add :checkOre.3:count :checkOre.3:count 1
   370 jump *label94 always
   371 label *label93
   372 label *label94
   373 label *label92
   374 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * op greaterThan *tmp118 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label95 equal *tmp118 false
+  375 jump *label95 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
   376 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   377 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
   378 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp120 :buildTitaniumDrillCfg:count 4
-    * jump *label97 equal *tmp120 false
+  379 jump *label97 lessThan :buildTitaniumDrillCfg:count 4
   380 jump *label75 always
   381 jump *label98 always
   382 label *label97
 
   392 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   393 jump *label73 always
   394 label *label75
-    * op greaterThan *tmp122 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
-    * jump *label99 equal *tmp122 false
+  395 jump *label99 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   396 op div *tmp124 :buildTitaniumDrillCfg:dx 2
   397 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp124
   398 op div *tmp126 :buildTitaniumDrillCfg:dy 2
 
   415 call *label17 *invalid :buildBlockAt*retval (m:*label103) (h:*label103)
   416 label *label103
   417 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp136 :buildTitaniumDrillCfg:result null
-    * jump *label104 equal *tmp136 false
+  418 jump *label104 equal :buildTitaniumDrillCfg:result null
   419 set *tmp72 :buildTitaniumDrillCfg:result
   420 jump *label58 always
   421 jump *label105 always
 
   431 label *label99
   432 label *label100
   433 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp138 :buildTitaniumDrillCfg:attempts 5
-    * jump *label106 equal *tmp138 false
+  434 jump *label106 lessThanEq :buildTitaniumDrillCfg:attempts 5
   435 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   436 op sin *tmp141 :buildTitaniumDrillCfg:angle
   437 op mul *tmp142 *tmp141 :buildTitaniumDrillCfg:distance
 
   712 call *label10 *invalid :supplyBase1*retval (m:*label150) (h:*label150)
   713 label *label150
   714 sensor *tmp174 .battery @totalPower
-    * op lessThan *tmp175 *tmp174 500
-    * jump *label151 equal *tmp175 false
+  715 jump *label151 greaterThanEq *tmp174 500
   716 jump *label149 always
   717 jump *label152 always
   718 label *label151
   719 label *label152
   720 label *label148
   721 read *tmp36 .controller ".monos"
-    * op lessThan *tmp177 *tmp36 3
-    * jump *label147 notEqual *tmp177 false
+  722 jump *label147 lessThan *tmp36 3
   723 label *label149
   724 write false .controller ".buildUnits"
   725 set :buildBlockFromCfg.11:block @unloader
 
   963 label *label197
   964 label *label198
   965 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
-    * op equal *tmp203 *tmp202 false
-    * jump *label200 equal *tmp203 false
+  966 jump *label200 notEqual *tmp202 false
   967 op sub *tmp204 :moveTo:radius 0.5
   968 ucontrol approach :moveTo:x :moveTo:y *tmp204
   969 label *label199
 
   990 label *label204
   991 label *label205
   992 sensor *tmp207 @unit @firstItem
-    * op notEqual *tmp208 *tmp207 null
-    * jump *label208 equal *tmp208 false
+  993 jump *label208 equal *tmp207 null
   994 ucontrol itemDrop @air 1000
   995 jump *label209 always
   996 label *label208
 
   998 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   999 label *label206
  1000 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp210
-    * op equal *tmp211 *tmp210 false
-    * jump *label205 notEqual *tmp211 false
+ 1001 jump *label205 equal *tmp210 false
  1002 label *label207
  1003 label *label210
  1004 sensor *tmp212 @unit @firstItem
-    * op notEqual *tmp213 *tmp212 null
-    * jump *label212 equal *tmp213 false
+ 1005 jump *label212 equal *tmp212 null
  1006 ucontrol itemDrop @air 1000
  1007 label *label211
  1008 jump *label210 always
 
  1027 write :status3.2:text .display ".status3"
  1028 label *label216
  1029 sensor *tmp216 @unit @firstItem
-    * op equal *tmp217 *tmp216 :depositItems:item
-    * jump *label217 equal *tmp217 false
+ 1030 jump *label217 notEqual *tmp216 :depositItems:item
  1031 set :moveToBlock:block :depositItems:block
  1032 set :moveToBlock:radius 6
  1033 setaddr :moveToBlock*retaddr *label219 (h:*label219)
 
  1040 sensor *tmp220 @unit @firstItem
  1041 op mul *tmp221 *tmp220 :depositItems:cap
  1042 sensor *tmp222 :depositItems:block :depositItems:item
-    * op greaterThan *tmp223 *tmp221 *tmp222
-    * jump *label220 notEqual *tmp223 false
+ 1043 jump *label220 greaterThan *tmp221 *tmp222
  1044 label *label222
  1045 jump *label218 always
  1046 label *label217
  1047 label *label223
  1048 sensor *tmp224 @unit @firstItem
-    * op notEqual *tmp225 *tmp224 null
-    * jump *label225 equal *tmp225 false
+ 1049 jump *label225 equal *tmp224 null
  1050 ucontrol itemDrop @air 1000
  1051 label *label224
  1052 jump *label223 always
 
  1062 end
  1063 label *label5
  1064 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 0
-    * op equal *tmp228 *tmp226 false
-    * jump *label228 equal *tmp228 false
+ 1065 jump *label228 notEqual *tmp226 false
  1066 set :error.1:error "Cannot locate ore"
  1067 set .ERROR :error.1:error
  1068 stop
 
  1106 label *label239
  1107 label *label240
  1108 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp237 @second :mineOre:stop
-    * jump *label241 equal *tmp237 false
+ 1109 jump *label241 lessThanEq @second :mineOre:stop
  1110 jump *label238 always
  1111 jump *label242 always
  1112 label *label241
  1113 label *label242
  1114 label *label237
  1115 sensor *tmp239 @unit @totalItems
-    * op lessThan *tmp240 *tmp239 :mineOre:amount
-    * jump *label236 notEqual *tmp240 false
+ 1116 jump *label236 lessThan *tmp239 :mineOre:amount
  1117 label *label238
  1118 ucontrol unbind
  1119 set :depositItems:block :mineOre:block
 
  1189 end
  1190 label *label9
  1191 set :supplyBase0:supplied false
-    * op equal *tmp254 .unloader1 null
-    * jump *label258 equal *tmp254 false
+ 1192 jump *label258 notEqual .unloader1 null
  1193 sensor *tmp256 .core @graphite
-    * op lessThan *tmp257 *tmp256 .targetGraphite
-    * jump *label260 equal *tmp257 false
+ 1194 jump *label260 greaterThanEq *tmp256 .targetGraphite
  1195 sensor *tmp259 .press @coal
-    * op lessThan *tmp260 *tmp259 5
-    * jump *label262 equal *tmp260 false
+ 1196 jump *label262 greaterThanEq *tmp259 5
  1197 set :status1:text "Goal 1: graphite requirement"
  1198 write :status1:text .display ".status1"
  1199 label *label264
 
  1209 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1210 sensor *tmp263 :supplyBlock:block :supplyBlock:ore
  1211 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp263
-    * op greaterThan *tmp265 :supplyBlock:missing 0
-    * jump *label267 equal *tmp265 false
+ 1212 jump *label267 lessThanEq :supplyBlock:missing 0
  1213 set :mineOre:ore :supplyBlock:ore
  1214 set :mineOre:amount :supplyBlock:blockCapacity
  1215 set :mineOre:block :supplyBlock:block
 
  1228 label *label260
  1229 label *label261
  1230 sensor *tmp267 .core @silicon
-    * op lessThan *tmp268 *tmp267 .targetSilicon
-    * jump *label270 equal *tmp268 false
+ 1231 jump *label270 greaterThanEq *tmp267 .targetSilicon
  1232 sensor *tmp270 .smelter @coal
-    * op lessThan *tmp271 *tmp270 5
-    * jump *label272 equal *tmp271 false
+ 1233 jump *label272 greaterThanEq *tmp270 5
  1234 set :status1.1:text "Goal 2: coal for silicon requirement"
  1235 write :status1.1:text .display ".status1"
  1236 label *label274
 
  1246 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1247 sensor *tmp274 :supplyBlock.1:block :supplyBlock.1:ore
  1248 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp274
-    * op greaterThan *tmp276 :supplyBlock.1:missing 0
-    * jump *label277 equal *tmp276 false
+ 1249 jump *label277 lessThanEq :supplyBlock.1:missing 0
  1250 set :mineOre:ore :supplyBlock.1:ore
  1251 set :mineOre:amount :supplyBlock.1:blockCapacity
  1252 set :mineOre:block :supplyBlock.1:block
 
  1261 jump *label273 always
  1262 label *label272
  1263 sensor *tmp278 .smelter @sand
-    * op lessThan *tmp279 *tmp278 5
-    * jump *label280 equal *tmp279 false
+ 1264 jump *label280 greaterThanEq *tmp278 5
  1265 set :status1.2:text "Goal 3: sand for silicon requirement"
  1266 write :status1.2:text .display ".status1"
  1267 label *label282
 
  1277 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1278 sensor *tmp282 :supplyBlock.2:block :supplyBlock.2:ore
  1279 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp282
-    * op greaterThan *tmp284 :supplyBlock.2:missing 0
-    * jump *label285 equal *tmp284 false
+ 1280 jump *label285 lessThanEq :supplyBlock.2:missing 0
  1281 set :mineOre:ore :supplyBlock.2:ore
  1282 set :mineOre:amount :supplyBlock.2:blockCapacity
  1283 set :mineOre:block :supplyBlock.2:block
 
  1297 label *label270
  1298 label *label271
  1299 sensor *tmp286 .battery @totalPower
-    * op lessThan *tmp287 *tmp286 .powerTarget
-    * jump *label288 equal *tmp287 false
+ 1300 jump *label288 greaterThanEq *tmp286 .powerTarget
  1301 sensor *tmp289 .generator @coal
-    * op lessThan *tmp290 *tmp289 2
-    * jump *label290 equal *tmp290 false
+ 1302 jump *label290 greaterThanEq *tmp289 2
  1303 set :status1.3:text "Goal 4: supplying generator"
  1304 write :status1.3:text .display ".status1"
  1305 label *label292
 
  1315 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1316 sensor *tmp293 :supplyBlock.3:block :supplyBlock.3:ore
  1317 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp293
-    * op greaterThan *tmp295 :supplyBlock.3:missing 0
-    * jump *label295 equal *tmp295 false
+ 1318 jump *label295 lessThanEq :supplyBlock.3:missing 0
  1319 set :mineOre:ore :supplyBlock.3:ore
  1320 set :mineOre:amount :supplyBlock.3:blockCapacity
  1321 set :mineOre:block :supplyBlock.3:block
 
  1337 label *label258
  1338 label *label259
  1339 sensor *tmp297 .core @titanium
-    * op lessThan *tmp298 *tmp297 .targetTitanium
-    * jump *label298 equal *tmp298 false
+ 1340 jump *label298 greaterThanEq *tmp297 .targetTitanium
  1341 sensor *tmp300 .core @titanium
  1342 op sub *tmp301 .targetTitanium *tmp300
  1343 op min *tmp299 7 *tmp301
 
  1347 label *label299
  1348 set :supplyBase0:titaniumTrigger *tmp299
  1349 sensor *tmp303 .titaniumDrill @titanium
-    * op lessThan *tmp304 *tmp303 :supplyBase0:titaniumTrigger
-    * jump *label300 equal *tmp304 false
-    * op equal *tmp306 :supplyBase0:supplied false
-    * jump *label302 equal *tmp306 false
+ 1350 jump *label300 greaterThanEq *tmp303 :supplyBase0:titaniumTrigger
+ 1351 jump *label302 notEqual :supplyBase0:supplied false
  1352 sensor *tmp308 .battery @totalPower
  1353 op mul *tmp309 .unloader1 .powerTarget
-    * op lessThan *tmp310 *tmp308 *tmp309
-    * jump *label304 equal *tmp310 false
+ 1354 jump *label304 greaterThanEq *tmp308 *tmp309
  1355 set :status1.4:text "Goal 5: supplying generator"
  1356 write :status1.4:text .display ".status1"
  1357 label *label306
 
  1362 jump *label305 always
  1363 label *label304
  1364 sensor *tmp312 .core @silicon
-    * op lessThan *tmp313 *tmp312 .targetSilicon
-    * jump *label308 equal *tmp313 false
+ 1365 jump *label308 greaterThanEq *tmp312 .targetSilicon
  1366 set :status1.5:text "Goal 6: silicon requirement"
  1367 write :status1.5:text .display ".status1"
  1368 label *label310
  1369 sensor :supplyBase0:coal .core @coal
  1370 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp317 :supplyBase0:coal :supplyBase0:sand
-    * jump *label311 equal *tmp317 false
+ 1371 jump *label311 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1372 set *tmp318 @coal
  1373 jump *label312 always
  1374 label *label311
 
  1382 jump *label309 always
  1383 label *label308
  1384 sensor *tmp319 .core @copper
-    * op lessThan *tmp320 *tmp319 .targetCopper
-    * jump *label314 equal *tmp320 false
+ 1385 jump *label314 greaterThanEq *tmp319 .targetCopper
  1386 set :status1.6:text "Goal 7: copper requirement"
  1387 write :status1.6:text .display ".status1"
  1388 label *label316
 
  1393 jump *label315 always
  1394 label *label314
  1395 sensor *tmp322 .core @lead
-    * op lessThan *tmp323 *tmp322 .targetLead
-    * jump *label318 equal *tmp323 false
+ 1396 jump *label318 greaterThanEq *tmp322 .targetLead
  1397 set :status1.7:text "Goal 8: lead requirement"
  1398 write :status1.7:text .display ".status1"
  1399 label *label320
 
  1404 jump *label319 always
  1405 label *label318
  1406 sensor *tmp325 .core @metaglass
-    * op lessThan *tmp326 *tmp325 .targetMetaglass
-    * jump *label322 equal *tmp326 false
+ 1407 jump *label322 greaterThanEq *tmp325 .targetMetaglass
  1408 set :status1.8:text "Goal 9: metaglass requirement"
  1409 write :status1.8:text .display ".status1"
  1410 label *label324
 
  1419 label *label326
  1420 sensor :supplyBase0:coal.1 .core @coal
  1421 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp330 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label327 equal *tmp330 false
+ 1422 jump *label327 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1423 set *tmp331 @coal
  1424 jump *label328 always
  1425 label *label327
 
  1455 label *label10
  1456 sensor *tmp332 .core @sand
  1457 sensor *tmp333 .core @coal
-    * op lessThan *tmp334 *tmp332 *tmp333
-    * jump *label333 equal *tmp334 false
+ 1458 jump *label333 greaterThanEq *tmp332 *tmp333
  1459 sensor *tmp336 .core @sand
  1460 sensor *tmp337 .core @lead
-    * op lessThan *tmp338 *tmp336 *tmp337
-    * jump *label335 equal *tmp338 false
+ 1461 jump *label335 greaterThanEq *tmp336 *tmp337
  1462 set :status1.11:text "Phase 1: mining sand"
  1463 write :status1.11:text .display ".status1"
  1464 label *label337
 
  1480 label *label333
  1481 sensor *tmp340 .core @coal
  1482 sensor *tmp341 .core @lead
-    * op lessThan *tmp342 *tmp340 *tmp341
-    * jump *label341 equal *tmp342 false
+ 1483 jump *label341 greaterThanEq *tmp340 *tmp341
  1484 set :status1.13:text "Phase 1: mining coal"
  1485 write :status1.13:text .display ".status1"
  1486 label *label343
 
  1523 end
  1524 label *label12
  1525 sensor *tmp346 .core @copper
-    * op greaterThanEq *tmp347 *tmp346 .targetCopper
-    * jump *label356 equal *tmp347 false
+ 1526 jump *label356 lessThan *tmp346 .targetCopper
  1527 sensor *tmp349 .leadSiliconBlock @lead
-    * op greaterThanEq *tmp350 *tmp349 .targetLead
-    * jump *label358 equal *tmp350 false
+ 1528 jump *label358 lessThan *tmp349 .targetLead
  1529 sensor *tmp352 .core @graphite
-    * op greaterThanEq *tmp353 *tmp352 .targetGraphite
-    * jump *label360 equal *tmp353 false
+ 1530 jump *label360 lessThan *tmp352 .targetGraphite
  1531 sensor *tmp355 .leadSiliconBlock @silicon
-    * op greaterThanEq *tmp356 *tmp355 .targetSilicon
-    * jump *label362 equal *tmp356 false
+ 1532 jump *label362 lessThan *tmp355 .targetSilicon
  1533 sensor *tmp358 .core @titanium
-    * op greaterThanEq *tmp359 *tmp358 .targetTitanium
-    * jump *label364 equal *tmp359 false
+ 1534 jump *label364 lessThan *tmp358 .targetTitanium
  1535 sensor *tmp361 .core @metaglass
-    * op greaterThanEq *tmp362 *tmp361 .targetMetaglass
-    * jump *label366 equal *tmp362 false
+ 1536 jump *label366 lessThan *tmp361 .targetMetaglass
  1537 set :targetMet*retval true
  1538 jump *label355 always
  1539 jump *label367 always
 
  1619 write *tmp369 .controller ".smelterTarget"
  1620 op add *tmp370 .targetMetaglass 20
  1621 write *tmp370 .controller ".kilnTarget"
-    * op greaterThan *tmp371 :meetTarget:siliconFactory 0
-    * jump *label380 equal *tmp371 false
+ 1622 jump *label380 lessThanEq :meetTarget:siliconFactory 0
  1623 set *tmp372 .factory
  1624 jump *label381 always
  1625 label *label380
 
  1630 setaddr :targetMet*retaddr *label385 (h:*label385)
  1631 call *label12 *invalid :targetMet*retval (m:*label385) (h:*label385)
  1632 label *label385
-    * op equal *tmp373 :targetMet*retval false
-    * jump *label384 equal *tmp373 false
+ 1633 jump *label384 notEqual :targetMet*retval false
  1634 setaddr :supplyBase*retaddr *label386 (h:*label386)
  1635 call *label11 *invalid :supplyBase*retval (m:*label386) (h:*label386)
  1636 label *label386
 
  1670 write :status3.4:text .display ".status3"
  1671 label *label394
  1672 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp385 :buildBlockAt:building null
-    * jump *label395 equal *tmp385 false
-    * op equal *tmp387 :buildBlockAt:type :buildBlockAt:block
-    * jump *label397 equal *tmp387 false
+ 1673 jump *label395 equal :buildBlockAt:building null
+ 1674 jump *label397 notEqual :buildBlockAt:type :buildBlockAt:block
  1675 set :buildBlockAt*retval :buildBlockAt:building
  1676 jump *label392 always
  1677 jump *label398 always
 
  1694 wait 0.25
  1695 label *label402
  1696 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp392 :buildBlockAt:building null
-    * jump *label405 equal *tmp392 false
+ 1697 jump *label405 notEqual :buildBlockAt:building null
  1698 jump *label404 always
  1699 jump *label406 always
  1700 label *label405
  1701 label *label406
  1702 label *label403
-    * op notEqual *tmp394 :buildBlockAt:type :buildBlockAt:block
-    * jump *label402 notEqual *tmp394 false
+ 1703 jump *label402 notEqual :buildBlockAt:type :buildBlockAt:block
  1704 label *label404
  1705 set :logBlock:block :buildBlockAt:block
  1706 setaddr :logBlock*retaddr *label407 (h:*label407)
 
  1744 set :findUnits:count 0
  1745 ubind :findUnits:type
  1746 set :findUnits:firstUnit @unit
-    * op notEqual *tmp395 :findUnits:firstUnit null
-    * jump *label412 equal *tmp395 false
+ 1747 jump *label412 equal :findUnits:firstUnit null
  1748 label *label414
  1749 op add :findUnits:count :findUnits:count 1
  1750 ubind :findUnits:type
  1751 label *label415
-    * op notEqual *tmp398 @unit :findUnits:firstUnit
-    * jump *label414 notEqual *tmp398 false
+ 1752 jump *label414 notEqual @unit :findUnits:firstUnit
  1753 label *label416
  1754 jump *label413 always
  1755 label *label412

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-40 instructions):
 
   260 op or *tmp80 *tmp76 *tmp79
   261 jump *label68 equal *tmp80 false
   262 jump *label66 always
-    * jump *label69 always
   263 label *label68
   264 label *label69
   265 op sin *tmp83 :locateOreAway:angle
 
   327 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   328 jump *label84 notEqual :checkOre:floor :checkOre:ore
   329 op add :checkOre:count :checkOre:count 1
-    * jump *label85 always
   330 label *label84
   331 label *label85
   332 label *label83
 
   338 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   339 jump *label87 notEqual :checkOre.1:floor :checkOre.1:ore
   340 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label88 always
   341 label *label87
   342 label *label88
   343 label *label86
 
   350 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   351 jump *label90 notEqual :checkOre.2:floor :checkOre.2:ore
   352 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label91 always
   353 label *label90
   354 label *label91
   355 label *label89
 
   363 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   364 jump *label93 notEqual :checkOre.3:floor :checkOre.3:ore
   365 op add :checkOre.3:count :checkOre.3:count 1
-    * jump *label94 always
   366 label *label93
   367 label *label94
   368 label *label92
 
   373 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
   374 jump *label97 lessThan :buildTitaniumDrillCfg:count 4
   375 jump *label75 always
-    * jump *label98 always
   376 label *label97
   377 label *label98
-    * jump *label96 always
   378 label *label95
   379 label *label96
   380 label *label77
 
   411 jump *label104 equal :buildTitaniumDrillCfg:result null
   412 set *tmp72 :buildTitaniumDrillCfg:result
   413 jump *label58 always
-    * jump *label105 always
   414 label *label104
   415 label *label105
   416 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
 
   419 set :buildTitaniumDrillCfg:attempts 1000
   420 set :buildTitaniumDrillCfg:minimum 3
   421 label *label102
-    * jump *label100 always
   422 label *label99
   423 label *label100
   424 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
   441 set :buildTitaniumDrillCfg:attempts 0
   442 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
   443 op max :buildTitaniumDrillCfg:minimum *tmp147 1
-    * jump *label107 always
   444 label *label106
   445 label *label107
   446 label *label60
 
   704 sensor *tmp174 .battery @totalPower
   705 jump *label151 greaterThanEq *tmp174 500
   706 jump *label149 always
-    * jump *label152 always
   707 label *label151
   708 label *label152
   709 label *label148
 
   981 sensor *tmp207 @unit @firstItem
   982 jump *label208 equal *tmp207 null
   983 ucontrol itemDrop @air 1000
-    * jump *label209 always
   984 label *label208
   985 label *label209
   986 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1055 set .ERROR :error.1:error
  1056 stop
  1057 label *label230
-    * jump *label229 always
  1058 label *label228
  1059 label *label229
  1060 label *label227
 
  1089 op land *tmp235 *tmp233 *tmp234
  1090 jump *label239 equal *tmp235 false
  1091 jump *label238 always
-    * jump *label240 always
  1092 label *label239
  1093 label *label240
  1094 ucontrol mine :mineOre:x :mineOre:y
  1095 jump *label241 lessThanEq @second :mineOre:stop
  1096 jump *label238 always
-    * jump *label242 always
  1097 label *label241
  1098 label *label242
  1099 label *label237
 
  1154 op land *tmp248 *tmp246 *tmp247
  1155 jump *label254 equal *tmp248 false
  1156 ucontrol itemDrop @air 1000
-    * jump *label255 always
  1157 label *label254
  1158 label *label255
  1159 label *label252
 
  1200 setaddr :mineOre*retaddr *label269 (h:*label269)
  1201 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1202 label *label269
-    * jump *label268 always
  1203 label *label267
  1204 label *label268
  1205 label *label265
  1206 set :supplyBase0:supplied true
-    * jump *label263 always
  1207 label *label262
  1208 label *label263
-    * jump *label261 always
  1209 label *label260
  1210 label *label261
  1211 sensor *tmp267 .core @silicon
 
  1234 setaddr :mineOre*retaddr *label279 (h:*label279)
  1235 call *label6 *invalid :mineOre*retval (m:*label279) (h:*label279)
  1236 label *label279
-    * jump *label278 always
  1237 label *label277
  1238 label *label278
  1239 label *label275
 
  1264 setaddr :mineOre*retaddr *label287 (h:*label287)
  1265 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1266 label *label287
-    * jump *label286 always
  1267 label *label285
  1268 label *label286
  1269 label *label283
  1270 set :supplyBase0:supplied true
-    * jump *label281 always
  1271 label *label280
  1272 label *label281
  1273 label *label273
-    * jump *label271 always
  1274 label *label270
  1275 label *label271
  1276 sensor *tmp286 .battery @totalPower
 
  1299 setaddr :mineOre*retaddr *label297 (h:*label297)
  1300 call *label6 *invalid :mineOre*retval (m:*label297) (h:*label297)
  1301 label *label297
-    * jump *label296 always
  1302 label *label295
  1303 label *label296
  1304 label *label293
  1305 set :supplyBase0:supplied true
-    * jump *label291 always
  1306 label *label290
  1307 label *label291
-    * jump *label289 always
  1308 label *label288
  1309 label *label289
-    * jump *label259 always
  1310 label *label258
  1311 label *label259
  1312 sensor *tmp297 .core @titanium
 
  1408 label *label315
  1409 label *label309
  1410 label *label305
-    * jump *label303 always
  1411 label *label302
  1412 label *label303
  1413 jump *label301 always
 
  1487 setaddr :supplyBase1*retaddr *label354 (h:*label354)
  1488 call *label10 *invalid :supplyBase1*retval (m:*label354) (h:*label354)
  1489 label *label354
-    * jump *label348 always
  1490 label *label352
  1491 label *label348
  1492 label *label347
 
  1507 jump *label366 lessThan *tmp361 .targetMetaglass
  1508 set :targetMet*retval true
  1509 jump *label355 always
-    * jump *label367 always
  1510 label *label366
  1511 label *label367
-    * jump *label365 always
  1512 label *label364
  1513 label *label365
-    * jump *label363 always
  1514 label *label362
  1515 label *label363
-    * jump *label361 always
  1516 label *label360
  1517 label *label361
-    * jump *label359 always
  1518 label *label358
  1519 label *label359
-    * jump *label357 always
  1520 label *label356
  1521 label *label357
  1522 set :targetMet*retval false
 
  1639 jump *label397 notEqual :buildBlockAt:type :buildBlockAt:block
  1640 set :buildBlockAt*retval :buildBlockAt:building
  1641 jump *label392 always
-    * jump *label398 always
  1642 label *label397
  1643 label *label398
  1644 jump *label399 equal :buildBlockAt:skipError false
  1645 set :buildBlockAt*retval null
  1646 jump *label392 always
-    * jump *label400 always
  1647 label *label399
  1648 label *label400
  1649 set :error.2:error "Cannot build at ("
  1650 set .ERROR :error.2:error
  1651 stop
  1652 label *label401
-    * jump *label396 always
  1653 label *label395
  1654 label *label396
  1655 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1658 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1659 jump *label405 notEqual :buildBlockAt:building null
  1660 jump *label404 always
-    * jump *label406 always
  1661 label *label405
  1662 label *label406
  1663 label *label403
 
  1712 label *label415
  1713 jump *label414 notEqual @unit :findUnits:firstUnit
  1714 label *label416
-    * jump *label413 always
  1715 label *label412
  1716 label *label413
  1717 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-34 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .unloader2 null
     7 set .factory null
-    * set .generator2 null
-    * set .kiln null
     8 set .phase 0
     9 write 510 bank1 511
    10 label *label21
 
    19 setaddr :findUnits*retaddr *label24 (h:*label24)
    20 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
    21 label *label24
-    * write :findUnits:count .display ".monos"
+   22 write :findUnits:count processor1 ".monos"
    23 set :monos :findUnits*retval
    24 set :findUnits:type @flare
    25 setaddr :findUnits*retaddr *label25 (h:*label25)
    26 call *label19 *invalid :findUnits*retval (m:*label25) (h:*label25)
    27 label *label25
-    * write :findUnits:count .display ".flares"
+   28 write :findUnits:count processor1 ".flares"
    29 set :flares :findUnits*retval
    30 set :findUnits:type @poly
    31 setaddr :findUnits*retaddr *label26 (h:*label26)
    32 call *label19 *invalid :findUnits*retval (m:*label26) (h:*label26)
    33 label *label26
-    * write :findUnits:count .display ".polys"
+   34 write :findUnits:count processor1 ".polys"
    35 set :polys :findUnits*retval
    36 set :buildBlockFromCfg:block @graphite-press
    37 set :buildBlockFromCfg:offsetX -1.5
 
    44 set :buildBlockFromCfg:metaglass 0
    45 set :buildBlockFromCfg:rotation 0
    46 set :buildBlockFromCfg:config null
-    * setaddr *tmp52 *label31
    47 label *label28
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   48 op add :buildBlockFromCfg:x .coreX -1.5
+   49 op add :buildBlockFromCfg:y .coreY 2.5
+   50 set :buildBlock:block @graphite-press
    51 set :buildBlock:x :buildBlockFromCfg:x
    52 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   53 set :buildBlock:copper 75
+   54 set :buildBlock:lead 30
+   55 set :buildBlock:graphite 0
+   56 set :buildBlock:silicon 0
+   57 set :buildBlock:titanium 0
+   58 set :buildBlock:metaglass 0
+   59 set :buildBlock:rotation 0
+   60 set :buildBlock:config null
    61 setaddr :buildBlock*retaddr *label32 (h:*label32)
    62 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    63 label *label32
 
    67 multijump *tmp52 0 0 (m:marker0)
    68 multilabel *label31 (m:marker0)
    69 label *label30
-    * set *tmp51 null
    70 label *label27
    71 set .press *tmp51
    72 set :buildBlockFromCfg.1:block @battery
 
    80 set :buildBlockFromCfg.1:metaglass 0
    81 set :buildBlockFromCfg.1:rotation 0
    82 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp56 *label37
    83 label *label34
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   84 op add :buildBlockFromCfg.1:x .coreX 0
+   85 op add :buildBlockFromCfg.1:y .coreY 4
+   86 set :buildBlock:block @battery
    87 set :buildBlock:x :buildBlockFromCfg.1:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   89 set :buildBlock:copper 5
+   90 set :buildBlock:lead 20
+   91 set :buildBlock:graphite 0
+   92 set :buildBlock:silicon 0
+   93 set :buildBlock:titanium 0
+   94 set :buildBlock:metaglass 0
+   95 set :buildBlock:rotation 0
+   96 set :buildBlock:config null
    97 setaddr :buildBlock*retaddr *label38 (h:*label38)
    98 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    99 label *label38
 
   103 multijump *tmp56 0 0 (m:marker1)
   104 multilabel *label37 (m:marker1)
   105 label *label36
-    * set *tmp55 null
   106 label *label33
   107 set .battery *tmp55
   108 set :buildBlockFromCfg.2:block @battery
 
   116 set :buildBlockFromCfg.2:metaglass 0
   117 set :buildBlockFromCfg.2:rotation 0
   118 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp60 *label43
   119 label *label40
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  120 op add :buildBlockFromCfg.2:x .coreX -1
+  121 op add :buildBlockFromCfg.2:y .coreY 4
+  122 set :buildBlock:block @battery
   123 set :buildBlock:x :buildBlockFromCfg.2:x
   124 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  125 set :buildBlock:copper 5
+  126 set :buildBlock:lead 20
+  127 set :buildBlock:graphite 0
+  128 set :buildBlock:silicon 0
+  129 set :buildBlock:titanium 0
+  130 set :buildBlock:metaglass 0
+  131 set :buildBlock:rotation 0
+  132 set :buildBlock:config null
   133 setaddr :buildBlock*retaddr *label44 (h:*label44)
   134 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   135 label *label44
 
   150 set :buildBlockFromCfg.3:metaglass 0
   151 set :buildBlockFromCfg.3:rotation 0
   152 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp64 *label49
   153 label *label46
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  154 op add :buildBlockFromCfg.3:x .coreX 0
+  155 op add :buildBlockFromCfg.3:y .coreY 3
+  156 set :buildBlock:block @combustion-generator
   157 set :buildBlock:x :buildBlockFromCfg.3:x
   158 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  159 set :buildBlock:copper 25
+  160 set :buildBlock:lead 15
+  161 set :buildBlock:graphite 0
+  162 set :buildBlock:silicon 0
+  163 set :buildBlock:titanium 0
+  164 set :buildBlock:metaglass 0
+  165 set :buildBlock:rotation 0
+  166 set :buildBlock:config null
   167 setaddr :buildBlock*retaddr *label50 (h:*label50)
   168 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   169 label *label50
 
   173 multijump *tmp64 0 0 (m:marker3)
   174 multilabel *label49 (m:marker3)
   175 label *label48
-    * set *tmp63 null
   176 label *label45
   177 set .generator *tmp63
   178 set .powerTarget 800
 
   187 set :buildBlockFromCfg.4:metaglass 0
   188 set :buildBlockFromCfg.4:rotation 0
   189 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp68 *label55
   190 label *label52
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  191 op add :buildBlockFromCfg.4:x .coreX 1.5
+  192 op add :buildBlockFromCfg.4:y .coreY 2.5
+  193 set :buildBlock:block @silicon-smelter
   194 set :buildBlock:x :buildBlockFromCfg.4:x
   195 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  196 set :buildBlock:copper 30
+  197 set :buildBlock:lead 25
+  198 set :buildBlock:graphite 0
+  199 set :buildBlock:silicon 0
+  200 set :buildBlock:titanium 0
+  201 set :buildBlock:metaglass 0
+  202 set :buildBlock:rotation 0
+  203 set :buildBlock:config null
   204 setaddr :buildBlock*retaddr *label56 (h:*label56)
   205 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   206 label *label56
 
   210 multijump *tmp68 0 0 (m:marker4)
   211 multilabel *label55 (m:marker4)
   212 label *label54
-    * set *tmp67 null
   213 label *label51
   214 set .smelter *tmp67
   215 set :buildTitaniumDrillCfg:distance 32
 
   233 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   234 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   235 label *label64
-    * set :locateOre:ore :locateOreAway:ore
+  236 set :locateOre:ore @titanium
   237 setaddr :locateOre*retaddr *label67 (h:*label67)
   238 call *label5 *invalid :locateOre*retval (m:*label67) (h:*label67)
   239 label *label67
   240 set :locateOreAway:x :locateOre:x
   241 set :locateOreAway:y :locateOre:y
-    * op sub *tmp74 :locateOreAway:x .coreX
+  242 op sub *tmp74 :locateOre:x .coreX
   243 op abs *tmp75 *tmp74
   244 op greaterThanEq *tmp76 *tmp75 10
-    * op sub *tmp77 :locateOreAway:y .coreY
+  245 op sub *tmp77 :locateOre:y .coreY
   246 op abs *tmp78 *tmp77
   247 op greaterThanEq *tmp79 *tmp78 10
   248 op or *tmp80 *tmp76 *tmp79
 
   272 set :buildTitaniumDrillCfg:y :locateOreAway:y
   273 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   274 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  275 set :moveTo.1:x :locateOreAway:x
+  276 set :moveTo.1:y :locateOreAway:y
   277 setaddr :moveTo.1*retaddr *label72 (h:*label72)
   278 call *label1 *invalid :moveTo.1*retval (m:*label72) (h:*label72)
   279 label *label72
-    * set :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:x
-    * set :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:y
+  280 set :buildTitaniumDrillCfg:ax :locateOreAway:x
+  281 set :buildTitaniumDrillCfg:ay :locateOreAway:y
   282 set :buildTitaniumDrillCfg:best 0
   283 set :buildTitaniumDrillCfg:dx 0
   284 set :buildTitaniumDrillCfg:dy 0
 
   311 set :checkOre:x :buildTitaniumDrillCfg:ax
   312 set :checkOre:y :buildTitaniumDrillCfg:ay
   313 set :checkOre:ore @ore-titanium
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * jump *label84 notEqual :checkOre:floor :checkOre:ore
-    * op add :checkOre:count :checkOre:count 1
+  314 set :checkOre:count 0
+  315 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  316 jump *label84 notEqual :checkOre:floor @ore-titanium
+  317 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   318 label *label84
   319 label *label85
   320 label *label83
 
   322 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   323 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   324 set :checkOre.1:ore @ore-titanium
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * jump *label87 notEqual :checkOre.1:floor :checkOre.1:ore
-    * op add :checkOre.1:count :checkOre.1:count 1
+  325 set :checkOre.1:count :checkOre:count
+  326 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  327 jump *label87 notEqual :checkOre.1:floor @ore-titanium
+  328 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   329 label *label87
   330 label *label88
   331 label *label86
 
   334 set :checkOre.2:x :buildTitaniumDrillCfg:ax
   335 set :checkOre.2:y *tmp103
   336 set :checkOre.2:ore @ore-titanium
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * jump *label90 notEqual :checkOre.2:floor :checkOre.2:ore
-    * op add :checkOre.2:count :checkOre.2:count 1
+  337 set :checkOre.2:count :checkOre.1:count
+  338 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
+  339 jump *label90 notEqual :checkOre.2:floor @ore-titanium
+  340 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   341 label *label90
   342 label *label91
   343 label *label89
   344 set :buildTitaniumDrillCfg:count :checkOre.2:count
   345 op add *tmp110 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   346 op add *tmp111 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x *tmp110
-    * set :checkOre.3:y *tmp111
+  347 set :checkOre.3:x :checkOre.1:x
+  348 set :checkOre.3:y *tmp103
   349 set :checkOre.3:ore @ore-titanium
-    * set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * jump *label93 notEqual :checkOre.3:floor :checkOre.3:ore
-    * op add :checkOre.3:count :checkOre.3:count 1
+  350 set :checkOre.3:count :checkOre.2:count
+  351 ucontrol getBlock *tmp110 *tmp111 0 0 :checkOre.3:floor
+  352 jump *label93 notEqual :checkOre.3:floor @ore-titanium
+  353 op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
   354 label *label93
   355 label *label94
   356 label *label92
   357 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * jump *label95 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  358 jump *label95 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   359 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   360 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label97 lessThan :buildTitaniumDrillCfg:count 4
+  361 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  362 jump *label97 lessThan :checkOre.3:count 4
   363 jump *label75 always
   364 label *label97
   365 label *label98
 
   378 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp124
   379 op div *tmp126 :buildTitaniumDrillCfg:dy 2
   380 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp126
-    * op sub *tmp128 :buildTitaniumDrillCfg:x .coreX
+  381 op sub *tmp128 :locateOreAway:x .coreX
   382 op abs *tmp129 *tmp128
   383 op greaterThanEq *tmp130 *tmp129 10
-    * op sub *tmp131 :buildTitaniumDrillCfg:y .coreY
+  384 op sub *tmp131 :locateOreAway:y .coreY
   385 op abs *tmp132 *tmp131
   386 op greaterThanEq *tmp133 *tmp132 10
   387 op or *tmp134 *tmp130 *tmp133
 
   396 call *label17 *invalid :buildBlockAt*retval (m:*label103) (h:*label103)
   397 label *label103
   398 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label104 equal :buildTitaniumDrillCfg:result null
-    * set *tmp72 :buildTitaniumDrillCfg:result
+  399 jump *label104 equal :buildBlockAt*retval null
+  400 set *tmp72 :buildBlockAt*retval
   401 jump *label58 always
   402 label *label104
   403 label *label105
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
+  404 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   405 jump *label102 always
   406 label *label101
   407 set :buildTitaniumDrillCfg:attempts 1000
 
   411 label *label100
   412 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   413 jump *label106 lessThanEq :buildTitaniumDrillCfg:attempts 5
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * op sin *tmp141 :buildTitaniumDrillCfg:angle
-    * op mul *tmp142 *tmp141 :buildTitaniumDrillCfg:distance
+  414 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
+  415 op sin *tmp141 :locateOreAway:angle
+  416 op mul *tmp142 *tmp141 :locateOreAway:distance
   417 op add *tmp143 .coreX *tmp142
-    * op cos *tmp144 :buildTitaniumDrillCfg:angle
-    * op mul *tmp145 *tmp144 :buildTitaniumDrillCfg:distance
+  418 op cos *tmp144 :locateOreAway:angle
+  419 op mul *tmp145 *tmp144 :locateOreAway:distance
   420 op add *tmp146 .coreY *tmp145
   421 set :moveTo.1:x *tmp143
   422 set :moveTo.1:y *tmp146
   423 setaddr :moveTo.1*retaddr *label109 (h:*label109)
   424 call *label1 *invalid :moveTo.1*retval (m:*label109) (h:*label109)
   425 label *label109
-    * op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
-    * op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
+  426 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
+  427 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
   428 label *label108
   429 set :buildTitaniumDrillCfg:attempts 0
   430 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
 
   438 label *label58
   439 set *tmp71 *tmp72
   440 label *label57
-    * set .titaniumDrill *tmp71
-    * write .titaniumDrill .display ".titaniumDrill"
-    * write .core .flareController ".core"
-    * write .titaniumDrill .flareController ".drill"
+  441 set .titaniumDrill *tmp72
+  442 write *tmp71 processor1 ".titaniumDrill"
+  443 write .core processor3 ".core"
+  444 write *tmp71 processor3 ".drill"
   445 set :buildBlockFromCfg.5:block @unloader
   446 set :buildBlockFromCfg.5:offsetX 0
   447 set :buildBlockFromCfg.5:offsetY 2
 
   453 set :buildBlockFromCfg.5:metaglass 0
   454 set :buildBlockFromCfg.5:rotation 0
   455 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp150 *label114
   456 label *label111
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  457 op add :buildBlockFromCfg.5:x .coreX 0
+  458 op add :buildBlockFromCfg.5:y .coreY 2
+  459 set :buildBlock:block @unloader
   460 set :buildBlock:x :buildBlockFromCfg.5:x
   461 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  462 set :buildBlock:copper 0
+  463 set :buildBlock:lead 0
+  464 set :buildBlock:graphite 0
+  465 set :buildBlock:silicon 30
+  466 set :buildBlock:titanium 25
+  467 set :buildBlock:metaglass 0
+  468 set :buildBlock:rotation 0
+  469 set :buildBlock:config null
   470 setaddr :buildBlock*retaddr *label115 (h:*label115)
   471 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   472 label *label115
 
   476 multijump *tmp150 0 0 (m:marker6)
   477 multilabel *label114 (m:marker6)
   478 label *label113
-    * set *tmp149 null
   479 label *label110
   480 set .unloader1 *tmp149
   481 set :buildBlockFromCfg.6:block @micro-processor
 
   489 set :buildBlockFromCfg.6:metaglass 0
   490 set :buildBlockFromCfg.6:rotation 0
   491 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp154 *label120
   492 label *label117
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  493 op add :buildBlockFromCfg.6:x .coreX 1
+  494 op add :buildBlockFromCfg.6:y .coreY 4
+  495 set :buildBlock:block @micro-processor
   496 set :buildBlock:x :buildBlockFromCfg.6:x
   497 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  498 set :buildBlock:copper 90
+  499 set :buildBlock:lead 50
+  500 set :buildBlock:graphite 0
+  501 set :buildBlock:silicon 50
+  502 set :buildBlock:titanium 0
+  503 set :buildBlock:metaglass 0
+  504 set :buildBlock:rotation 0
+  505 set :buildBlock:config processor2
   506 setaddr :buildBlock*retaddr *label121 (h:*label121)
   507 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   508 label *label121
 
   512 multijump *tmp154 0 0 (m:marker7)
   513 multilabel *label120 (m:marker7)
   514 label *label119
-    * set *tmp153 null
   515 label *label116
   516 set .controller *tmp153
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  517 write processor1 *tmp153 ".display"
+  518 write .core *tmp153 ".core"
+  519 write *tmp55 *tmp153 ".battery"
+  520 write *tmp63 *tmp153 ".generator"
+  521 write *tmp67 *tmp153 ".smelter"
+  522 write *tmp51 *tmp153 ".press"
+  523 write :monos *tmp153 ".monos"
+  524 write :flares *tmp153 ".flares"
+  525 write :polys *tmp153 ".polys"
   526 set :buildBlockFromCfg.7:block @power-node
   527 set :buildBlockFromCfg.7:offsetX -2
   528 set :buildBlockFromCfg.7:offsetY -1
 
   534 set :buildBlockFromCfg.7:metaglass 0
   535 set :buildBlockFromCfg.7:rotation 0
   536 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp158 *label126
   537 label *label123
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  538 op add :buildBlockFromCfg.7:x .coreX -2
+  539 op add :buildBlockFromCfg.7:y .coreY -1
+  540 set :buildBlock:block @power-node
   541 set :buildBlock:x :buildBlockFromCfg.7:x
   542 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  543 set :buildBlock:copper 2
+  544 set :buildBlock:lead 6
+  545 set :buildBlock:graphite 0
+  546 set :buildBlock:silicon 0
+  547 set :buildBlock:titanium 0
+  548 set :buildBlock:metaglass 0
+  549 set :buildBlock:rotation 0
+  550 set :buildBlock:config null
   551 setaddr :buildBlock*retaddr *label127 (h:*label127)
   552 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   553 label *label127
 
   568 set :buildBlockFromCfg.8:metaglass 0
   569 set :buildBlockFromCfg.8:rotation 0
   570 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp162 *label132
   571 label *label129
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  572 op add :buildBlockFromCfg.8:x .coreX -2
+  573 op add :buildBlockFromCfg.8:y .coreY 1
+  574 set :buildBlock:block @unloader
   575 set :buildBlock:x :buildBlockFromCfg.8:x
   576 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  577 set :buildBlock:copper 0
+  578 set :buildBlock:lead 0
+  579 set :buildBlock:graphite 0
+  580 set :buildBlock:silicon 30
+  581 set :buildBlock:titanium 25
+  582 set :buildBlock:metaglass 0
+  583 set :buildBlock:rotation 0
+  584 set :buildBlock:config null
   585 setaddr :buildBlock*retaddr *label133 (h:*label133)
   586 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   587 label *label133
 
   591 multijump *tmp162 0 0 (m:marker9)
   592 multilabel *label132 (m:marker9)
   593 label *label131
-    * set *tmp161 null
   594 label *label128
   595 set .unloader2 *tmp161
-    * write .unloader2 .controller ".unloader2"
+  596 write *tmp161 *tmp153 ".unloader2"
   597 set :buildBlockFromCfg.9:block @overflow-gate
   598 set :buildBlockFromCfg.9:offsetX -3
   599 set :buildBlockFromCfg.9:offsetY 1
 
   605 set :buildBlockFromCfg.9:metaglass 0
   606 set :buildBlockFromCfg.9:rotation 0
   607 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp166 *label138
   608 label *label135
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  609 op add :buildBlockFromCfg.9:x .coreX -3
+  610 op add :buildBlockFromCfg.9:y .coreY 1
+  611 set :buildBlock:block @overflow-gate
   612 set :buildBlock:x :buildBlockFromCfg.9:x
   613 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  614 set :buildBlock:copper 4
+  615 set :buildBlock:lead 2
+  616 set :buildBlock:graphite 0
+  617 set :buildBlock:silicon 0
+  618 set :buildBlock:titanium 0
+  619 set :buildBlock:metaglass 0
+  620 set :buildBlock:rotation 0
+  621 set :buildBlock:config null
   622 setaddr :buildBlock*retaddr *label139 (h:*label139)
   623 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   624 label *label139
 
   639 set :buildBlockFromCfg.10:metaglass 0
   640 set :buildBlockFromCfg.10:rotation 3
   641 set :buildBlockFromCfg.10:config @mono
-    * setaddr *tmp170 *label144
   642 label *label141
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  643 op add :buildBlockFromCfg.10:x .coreX -4
+  644 op add :buildBlockFromCfg.10:y .coreY -1
+  645 set :buildBlock:block @air-factory
   646 set :buildBlock:x :buildBlockFromCfg.10:x
   647 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  648 set :buildBlock:copper 60
+  649 set :buildBlock:lead 70
+  650 set :buildBlock:graphite 0
+  651 set :buildBlock:silicon 0
+  652 set :buildBlock:titanium 0
+  653 set :buildBlock:metaglass 0
+  654 set :buildBlock:rotation 3
+  655 set :buildBlock:config @mono
   656 setaddr :buildBlock*retaddr *label145 (h:*label145)
   657 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   658 label *label145
 
   662 multijump *tmp170 0 0 (m:marker11)
   663 multilabel *label144 (m:marker11)
   664 label *label143
-    * set *tmp169 null
   665 label *label140
   666 set .factory *tmp169
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
+  667 write *tmp169 *tmp153 ".factory"
+  668 write *tmp169 processor1 ".factory"
   669 setaddr :displayUnitBuilds*retaddr *label146 (h:*label146)
   670 call *label20 *invalid :displayUnitBuilds*retval (m:*label146) (h:*label146)
   671 label *label146
-    * write @flare .controller ".unitToProduce"
-    * write true .controller ".buildUnits"
-    * op add .phase .phase 1
-    * write 85 .controller ".pressTarget"
-    * write 60 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  672 write @flare *tmp153 ".unitToProduce"
+  673 write true *tmp153 ".buildUnits"
+  674 op add .phase 0 1
+  675 write 85 *tmp153 ".pressTarget"
+  676 write 60 *tmp153 ".smelterTarget"
+  677 write 30 *tmp153 ".kilnTarget"
   678 label *label147
   679 setaddr :supplyBase1*retaddr *label150 (h:*label150)
   680 call *label10 *invalid :supplyBase1*retval (m:*label150) (h:*label150)
   681 label *label150
-    * sensor *tmp174 .battery @totalPower
+  682 sensor *tmp174 *tmp55 @totalPower
   683 jump *label151 greaterThanEq *tmp174 500
   684 jump *label149 always
   685 label *label151
   686 label *label152
   687 label *label148
-    * read *tmp36 .controller ".monos"
+  688 read *tmp36 *tmp153 ".monos"
   689 jump *label147 lessThan *tmp36 3
   690 label *label149
-    * write false .controller ".buildUnits"
+  691 write false *tmp153 ".buildUnits"
   692 set :buildBlockFromCfg.11:block @unloader
   693 set :buildBlockFromCfg.11:offsetX 2
   694 set :buildBlockFromCfg.11:offsetY 0
 
   700 set :buildBlockFromCfg.11:metaglass 0
   701 set :buildBlockFromCfg.11:rotation 0
   702 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp179 *label157
   703 label *label154
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  704 op add :buildBlockFromCfg.11:x .coreX 2
+  705 op add :buildBlockFromCfg.11:y .coreY 0
+  706 set :buildBlock:block @unloader
   707 set :buildBlock:x :buildBlockFromCfg.11:x
   708 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  709 set :buildBlock:copper 0
+  710 set :buildBlock:lead 0
+  711 set :buildBlock:graphite 0
+  712 set :buildBlock:silicon 30
+  713 set :buildBlock:titanium 25
+  714 set :buildBlock:metaglass 0
+  715 set :buildBlock:rotation 0
+  716 set :buildBlock:config null
   717 setaddr :buildBlock*retaddr *label158 (h:*label158)
   718 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   719 label *label158
 
   734 set :buildBlockFromCfg.12:metaglass 0
   735 set :buildBlockFromCfg.12:rotation 0
   736 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp183 *label163
   737 label *label160
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  738 op add :buildBlockFromCfg.12:x .coreX 3.5
+  739 op add :buildBlockFromCfg.12:y .coreY 0.5
+  740 set :buildBlock:block @kiln
   741 set :buildBlock:x :buildBlockFromCfg.12:x
   742 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  743 set :buildBlock:copper 60
+  744 set :buildBlock:lead 30
+  745 set :buildBlock:graphite 30
+  746 set :buildBlock:silicon 0
+  747 set :buildBlock:titanium 0
+  748 set :buildBlock:metaglass 0
+  749 set :buildBlock:rotation 0
+  750 set :buildBlock:config null
   751 setaddr :buildBlock*retaddr *label164 (h:*label164)
   752 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   753 label *label164
 
   757 multijump *tmp183 0 0 (m:marker13)
   758 multilabel *label163 (m:marker13)
   759 label *label162
-    * set *tmp182 null
   760 label *label159
   761 set .kiln *tmp182
-    * write .kiln .controller ".kiln"
+  762 write *tmp182 *tmp153 ".kiln"
   763 set :buildBlockFromCfg.13:block @junction
   764 set :buildBlockFromCfg.13:offsetX 2
   765 set :buildBlockFromCfg.13:offsetY 1
 
   771 set :buildBlockFromCfg.13:metaglass 0
   772 set :buildBlockFromCfg.13:rotation 0
   773 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp187 *label169
   774 label *label166
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  775 op add :buildBlockFromCfg.13:x .coreX 2
+  776 op add :buildBlockFromCfg.13:y .coreY 1
+  777 set :buildBlock:block @junction
   778 set :buildBlock:x :buildBlockFromCfg.13:x
   779 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  780 set :buildBlock:copper 3
+  781 set :buildBlock:lead 0
+  782 set :buildBlock:graphite 0
+  783 set :buildBlock:silicon 0
+  784 set :buildBlock:titanium 0
+  785 set :buildBlock:metaglass 0
+  786 set :buildBlock:rotation 0
+  787 set :buildBlock:config null
   788 setaddr :buildBlock*retaddr *label170 (h:*label170)
   789 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   790 label *label170
 
   805 set :buildBlockFromCfg.14:metaglass 30
   806 set :buildBlockFromCfg.14:rotation 0
   807 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp191 *label175
   808 label *label172
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  809 op add :buildBlockFromCfg.14:x .coreX -3.5
+  810 op add :buildBlockFromCfg.14:y .coreY 4.5
+  811 set :buildBlock:block @water-extractor
   812 set :buildBlock:x :buildBlockFromCfg.14:x
   813 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  814 set :buildBlock:copper 30
+  815 set :buildBlock:lead 30
+  816 set :buildBlock:graphite 30
+  817 set :buildBlock:silicon 0
+  818 set :buildBlock:titanium 0
+  819 set :buildBlock:metaglass 30
+  820 set :buildBlock:rotation 0
+  821 set :buildBlock:config null
   822 setaddr :buildBlock*retaddr *label176 (h:*label176)
   823 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   824 label *label176
 
   839 set :buildBlockFromCfg.15:metaglass 0
   840 set :buildBlockFromCfg.15:rotation 0
   841 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp195 *label181
   842 label *label178
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  843 op add :buildBlockFromCfg.15:x .coreX -3.5
+  844 op add :buildBlockFromCfg.15:y .coreY 2.5
+  845 set :buildBlock:block @steam-generator
   846 set :buildBlock:x :buildBlockFromCfg.15:x
   847 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  848 set :buildBlock:copper 35
+  849 set :buildBlock:lead 40
+  850 set :buildBlock:graphite 25
+  851 set :buildBlock:silicon 30
+  852 set :buildBlock:titanium 0
+  853 set :buildBlock:metaglass 0
+  854 set :buildBlock:rotation 0
+  855 set :buildBlock:config null
   856 setaddr :buildBlock*retaddr *label182 (h:*label182)
   857 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   858 label *label182
 
   862 multijump *tmp195 0 0 (m:marker16)
   863 multilabel *label181 (m:marker16)
   864 label *label180
-    * set *tmp194 null
   865 label *label177
   866 set .generator2 *tmp194
-    * write .generator2 .controller ".generator2"
+  867 write *tmp194 *tmp153 ".generator2"
   868 set :buildBlockFromCfg.16:block @sorter
   869 set :buildBlockFromCfg.16:offsetX -4
   870 set :buildBlockFromCfg.16:offsetY 1
 
   876 set :buildBlockFromCfg.16:metaglass 0
   877 set :buildBlockFromCfg.16:rotation 0
   878 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp199 *label187
   879 label *label184
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  880 op add :buildBlockFromCfg.16:x .coreX -4
+  881 op add :buildBlockFromCfg.16:y .coreY 1
+  882 set :buildBlock:block @sorter
   883 set :buildBlock:x :buildBlockFromCfg.16:x
   884 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  885 set :buildBlock:copper 2
+  886 set :buildBlock:lead 2
+  887 set :buildBlock:graphite 0
+  888 set :buildBlock:silicon 0
+  889 set :buildBlock:titanium 0
+  890 set :buildBlock:metaglass 0
+  891 set :buildBlock:rotation 0
+  892 set :buildBlock:config @coal
   893 setaddr :buildBlock*retaddr *label188 (h:*label188)
   894 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   895 label *label188
 
   899 multilabel *label187 (m:marker17)
   900 label *label186
   901 label *label183
-    * write true .controller ".buildUnits"
+  902 write true *tmp153 ".buildUnits"
   903 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)
   904 call *label20 *invalid :displayUnitBuilds*retval (m:*label189) (h:*label189)
   905 label *label189
 
   911 jump *label190 always
   912 label *label192
   913 ucontrol stop
-    * set :error:error "Done"
-    * set .ERROR :error:error
+  914 set .ERROR "Done"
   915 stop
   916 label *label194
   917 end
   918 label *label0
   919 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  920 write "Moving..." .display ".status3"
   921 label *label197
   922 label *label198
   923 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
 
   933 label *label1
   934 set *tmp205 :moveTo.1:x
   935 set *tmp206 :moveTo.1:y
-    * set :moveTo:x *tmp205
-    * set :moveTo:y *tmp206
+  936 set :moveTo:x :moveTo.1:x
+  937 set :moveTo:y :moveTo.1:y
   938 set :moveTo:radius 6
   939 setaddr :moveTo*retaddr *label202 (h:*label202)
   940 call *label0 *invalid :moveTo*retval (m:*label202) (h:*label202)
 
   944 end
   945 label *label2
   946 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  947 write "Moving..." .display ".status3"
   948 label *label204
   949 label *label205
   950 sensor *tmp207 @unit @firstItem
 
   981 end
   982 label *label4
   983 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+  984 write "Depositing..." .display ".status3"
   985 label *label216
   986 sensor *tmp216 @unit @firstItem
   987 jump *label217 notEqual *tmp216 :depositItems:item
 
  1011 label *label218
  1012 set :transportStatus:target 0
  1013 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1014 write 0 .display ".transportTarget"
+ 1015 write null .display ".transportItem"
  1016 label *label226
  1017 label *label215
  1018 return :depositItems*retaddr
 
  1021 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 0
  1022 jump *label228 notEqual *tmp226 false
  1023 set :error.1:error "Cannot locate ore"
-    * set .ERROR :error.1:error
+ 1024 set .ERROR "Cannot locate ore"
  1025 stop
  1026 label *label230
  1027 label *label228
 
  1033 op min :mineOre:amount :mineOre:amount 30
  1034 set :transportStatus.1:target :mineOre:amount
  1035 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1036 write :mineOre:amount .display ".transportTarget"
+ 1037 write :mineOre:ore .display ".transportItem"
  1038 label *label232
  1039 set :locateOre:ore :mineOre:ore
  1040 setaddr :locateOre*retaddr *label233 (h:*label233)
 
  1042 label *label233
  1043 set :mineOre:x :locateOre:x
  1044 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1045 set :moveToEmpty:x :locateOre:x
+ 1046 set :moveToEmpty:y :locateOre:y
  1047 setaddr :moveToEmpty*retaddr *label234 (h:*label234)
  1048 call *label2 *invalid :moveToEmpty*retval (m:*label234) (h:*label234)
  1049 label *label234
  1050 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1051 write "Mining..." .display ".status3"
  1052 label *label235
  1053 op add :mineOre:stop @second 10
  1054 label *label236
 
  1082 set :status2:text "Mining "
  1083 set :status2:item :mineOre.1:ore
  1084 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1085 write "Mining " .display ".status2"
+ 1086 write :mineOre.1:ore .display ".item2"
+ 1087 write "core" .display ".block2"
  1088 label *label245
  1089 set :mineOre:ore :mineOre.1:ore
  1090 set :mineOre:amount 30
 
  1099 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1100 set :transportStatus.2:item :fetchBlock:item
  1101 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1102 write :fetchBlock:item .display ".transportItem"
  1103 label *label248
  1104 set :status2.1:text "Fetching "
  1105 set :status2.1:item :fetchBlock:item
  1106 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1107 write "Fetching " .display ".status2"
+ 1108 write :fetchBlock:item .display ".item2"
+ 1109 write :fetchBlock:block .display ".block2"
  1110 label *label249
  1111 sensor *tmp243 :fetchBlock:block @x
  1112 sensor *tmp244 :fetchBlock:block @y
 
  1148 sensor *tmp259 .press @coal
  1149 jump *label262 greaterThanEq *tmp259 5
  1150 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1151 write "Goal 1: graphite requirement" .display ".status1"
  1152 label *label264
  1153 set :supplyBlock:block .press
  1154 set :supplyBlock:ore @coal
  1155 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1156 set :status2.2:item @coal
+ 1157 set :status2.2:block .press
+ 1158 write "Supplying " .display ".status2"
+ 1159 write :supplyBlock:ore .display ".item2"
+ 1160 write :supplyBlock:block .display ".block2"
  1161 label *label266
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp263 :supplyBlock:block :supplyBlock:ore
+ 1162 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1163 sensor *tmp263 .press @coal
  1164 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp263
  1165 jump *label267 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1166 set :mineOre:ore @coal
  1167 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1168 set :mineOre:block .press
  1169 setaddr :mineOre*retaddr *label269 (h:*label269)
  1170 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1171 label *label269
 
  1182 sensor *tmp270 .smelter @coal
  1183 jump *label272 greaterThanEq *tmp270 5
  1184 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1185 write "Goal 2: coal for silicon requirement" .display ".status1"
  1186 label *label274
  1187 set :supplyBlock.1:block .smelter
  1188 set :supplyBlock.1:ore @coal
  1189 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1190 set :status2.3:item @coal
+ 1191 set :status2.3:block .smelter
+ 1192 write "Supplying " .display ".status2"
+ 1193 write :supplyBlock.1:ore .display ".item2"
+ 1194 write :supplyBlock.1:block .display ".block2"
  1195 label *label276
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp274 :supplyBlock.1:block :supplyBlock.1:ore
+ 1196 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1197 sensor *tmp274 .smelter @coal
  1198 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp274
  1199 jump *label277 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1200 set :mineOre:ore @coal
  1201 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1202 set :mineOre:block .smelter
  1203 setaddr :mineOre*retaddr *label279 (h:*label279)
  1204 call *label6 *invalid :mineOre*retval (m:*label279) (h:*label279)
  1205 label *label279
 
  1212 sensor *tmp278 .smelter @sand
  1213 jump *label280 greaterThanEq *tmp278 5
  1214 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1215 write "Goal 3: sand for silicon requirement" .display ".status1"
  1216 label *label282
  1217 set :supplyBlock.2:block .smelter
  1218 set :supplyBlock.2:ore @sand
  1219 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1220 set :status2.4:item @sand
+ 1221 set :status2.4:block .smelter
+ 1222 write "Supplying " .display ".status2"
+ 1223 write :supplyBlock.2:ore .display ".item2"
+ 1224 write :supplyBlock.2:block .display ".block2"
  1225 label *label284
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp282 :supplyBlock.2:block :supplyBlock.2:ore
+ 1226 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1227 sensor *tmp282 .smelter @sand
  1228 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp282
  1229 jump *label285 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1230 set :mineOre:ore @sand
  1231 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1232 set :mineOre:block .smelter
  1233 setaddr :mineOre*retaddr *label287 (h:*label287)
  1234 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1235 label *label287
 
  1247 sensor *tmp289 .generator @coal
  1248 jump *label290 greaterThanEq *tmp289 2
  1249 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1250 write "Goal 4: supplying generator" .display ".status1"
  1251 label *label292
  1252 set :supplyBlock.3:block .generator
  1253 set :supplyBlock.3:ore @coal
  1254 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1255 set :status2.5:item @coal
+ 1256 set :status2.5:block .generator
+ 1257 write "Supplying " .display ".status2"
+ 1258 write :supplyBlock.3:ore .display ".item2"
+ 1259 write :supplyBlock.3:block .display ".block2"
  1260 label *label294
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp293 :supplyBlock.3:block :supplyBlock.3:ore
+ 1261 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1262 sensor *tmp293 .generator @coal
  1263 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp293
  1264 jump *label295 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1265 set :mineOre:ore @coal
  1266 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1267 set :mineOre:block .generator
  1268 setaddr :mineOre*retaddr *label297 (h:*label297)
  1269 call *label6 *invalid :mineOre*retval (m:*label297) (h:*label297)
  1270 label *label297
 
  1289 label *label299
  1290 set :supplyBase0:titaniumTrigger *tmp299
  1291 sensor *tmp303 .titaniumDrill @titanium
-    * jump *label300 greaterThanEq *tmp303 :supplyBase0:titaniumTrigger
+ 1292 jump *label300 greaterThanEq *tmp303 *tmp299
  1293 jump *label302 notEqual :supplyBase0:supplied false
  1294 sensor *tmp308 .battery @totalPower
  1295 op mul *tmp309 .unloader1 .powerTarget
  1296 jump *label304 greaterThanEq *tmp308 *tmp309
  1297 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1298 write "Goal 5: supplying generator" .display ".status1"
  1299 label *label306
  1300 set :mineOre.1:ore @coal
  1301 setaddr :mineOre.1*retaddr *label307 (h:*label307)
 
  1306 sensor *tmp312 .core @silicon
  1307 jump *label308 greaterThanEq *tmp312 .targetSilicon
  1308 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1309 write "Goal 6: silicon requirement" .display ".status1"
  1310 label *label310
  1311 sensor :supplyBase0:coal .core @coal
  1312 sensor :supplyBase0:sand .core @sand
 
  1317 set *tmp318 @sand
  1318 label *label312
  1319 set :supplyBase0:ore *tmp318
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1320 set :mineOre.1:ore *tmp318
  1321 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1322 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
  1323 label *label313
 
  1326 sensor *tmp319 .core @copper
  1327 jump *label314 greaterThanEq *tmp319 .targetCopper
  1328 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1329 write "Goal 7: copper requirement" .display ".status1"
  1330 label *label316
  1331 set :mineOre.1:ore @copper
  1332 setaddr :mineOre.1*retaddr *label317 (h:*label317)
 
  1337 sensor *tmp322 .core @lead
  1338 jump *label318 greaterThanEq *tmp322 .targetLead
  1339 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1340 write "Goal 8: lead requirement" .display ".status1"
  1341 label *label320
  1342 set :mineOre.1:ore @lead
  1343 setaddr :mineOre.1*retaddr *label321 (h:*label321)
 
  1348 sensor *tmp325 .core @metaglass
  1349 jump *label322 greaterThanEq *tmp325 .targetMetaglass
  1350 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1351 write "Goal 9: metaglass requirement" .display ".status1"
  1352 label *label324
  1353 set :mineOre.1:ore @sand
  1354 setaddr :mineOre.1*retaddr *label325 (h:*label325)
 
  1357 jump *label323 always
  1358 label *label322
  1359 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1360 write "Goal 10: supplying base" .display ".status1"
  1361 label *label326
  1362 sensor :supplyBase0:coal.1 .core @coal
  1363 sensor :supplyBase0:sand.1 .core @sand
 
  1368 set *tmp331 @sand
  1369 label *label328
  1370 set :supplyBase0:ore.1 *tmp331
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1371 set :mineOre.1:ore *tmp331
  1372 setaddr :mineOre.1*retaddr *label329 (h:*label329)
  1373 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
  1374 label *label329
 
  1382 jump *label301 always
  1383 label *label300
  1384 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1385 write "Goal 11: Fetching titanium" .display ".status1"
  1386 label *label330
  1387 set :fetchBlock:block .titaniumDrill
  1388 set :fetchBlock:item @titanium
 
  1401 sensor *tmp337 .core @lead
  1402 jump *label335 greaterThanEq *tmp336 *tmp337
  1403 set :status1.11:text "Phase 1: mining sand"
-    * write :status1.11:text .display ".status1"
+ 1404 write "Phase 1: mining sand" .display ".status1"
  1405 label *label337
  1406 set :mineOre.1:ore @sand
  1407 setaddr :mineOre.1*retaddr *label338 (h:*label338)
 
  1410 jump *label336 always
  1411 label *label335
  1412 set :status1.12:text "Phase 1: mining lead"
-    * write :status1.12:text .display ".status1"
+ 1413 write "Phase 1: mining lead" .display ".status1"
  1414 label *label339
  1415 set :mineOre.1:ore @lead
  1416 setaddr :mineOre.1*retaddr *label340 (h:*label340)
 
  1423 sensor *tmp341 .core @lead
  1424 jump *label341 greaterThanEq *tmp340 *tmp341
  1425 set :status1.13:text "Phase 1: mining coal"
-    * write :status1.13:text .display ".status1"
+ 1426 write "Phase 1: mining coal" .display ".status1"
  1427 label *label343
  1428 set :mineOre.1:ore @coal
  1429 setaddr :mineOre.1*retaddr *label344 (h:*label344)
 
  1432 jump *label342 always
  1433 label *label341
  1434 set :status1.14:text "Phase 1: mining lead"
-    * write :status1.14:text .display ".status1"
+ 1435 write "Phase 1: mining lead" .display ".status1"
  1436 label *label345
  1437 set :mineOre.1:ore @lead
  1438 setaddr :mineOre.1*retaddr *label346 (h:*label346)
 
  1490 label *label357
  1491 set :targetMet*retval false
  1492 jump *label355 always
-    * set :targetMet*retval null
  1493 label *label355
  1494 return :targetMet*retaddr
  1495 end
 
  1546 op max .targetSilicon :meetTarget:silicon :meetTarget:siliconFactory
  1547 set .targetTitanium :meetTarget:titanium
  1548 set .targetMetaglass :meetTarget:metaglass
-    * op add *tmp368 .targetGraphite 20
+ 1549 op add *tmp368 :meetTarget:graphite 20
  1550 write *tmp368 .controller ".pressTarget"
  1551 op add *tmp369 .targetSilicon 20
  1552 write *tmp369 .controller ".smelterTarget"
-    * op add *tmp370 .targetMetaglass 20
+ 1553 op add *tmp370 :meetTarget:metaglass 20
  1554 write *tmp370 .controller ".kilnTarget"
  1555 jump *label380 lessThanEq :meetTarget:siliconFactory 0
  1556 set *tmp372 .factory
 
  1581 op floor *tmp377 @second
  1582 op mul *tmp378 *tmp377 1000
  1583 op add *tmp379 :log:encodedId *tmp378
-    * write *tmp379 bank1 *tmp375
+ 1584 write *tmp379 bank1 *tmp374
  1585 label *label387
  1586 return :log*retaddr
  1587 end
 
  1600 call *label1 *invalid :moveTo.1*retval (m:*label393) (h:*label393)
  1601 label *label393
  1602 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1603 write "Building..." .display ".status3"
  1604 label *label394
  1605 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1606 jump *label395 equal :buildBlockAt:building null
 
  1615 label *label399
  1616 label *label400
  1617 set :error.2:error "Cannot build at ("
-    * set .ERROR :error.2:error
+ 1618 set .ERROR "Cannot build at ("
  1619 stop
  1620 label *label401
  1621 label *label395
 
  1637 label *label407
  1638 set :buildBlockAt*retval :buildBlockAt:building
  1639 jump *label392 always
-    * set :buildBlockAt*retval null
  1640 label *label392
  1641 return :buildBlockAt*retaddr
  1642 end
 
  1664 label *label410
  1665 set :buildBlock*retval :buildBlockAt*retval
  1666 jump *label408 always
-    * set :buildBlock*retval null
  1667 label *label408
  1668 return :buildBlock*retaddr
  1669 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-267 instructions):
 
    14 jump *label21 equal .core null
    15 label *label23
    16 set .display processor1
-    * set .flareController processor3
    17 set :findUnits:type @mono
    18 setaddr :findUnits*retaddr *label24 (h:*label24)
    19 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
 
    32 label *label26
    33 write :findUnits:count processor1 ".polys"
    34 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    35 label *label28
    36 op add :buildBlockFromCfg:x .coreX -1.5
    37 op add :buildBlockFromCfg:y .coreY 2.5
 
    57 label *label30
    58 label *label27
    59 set .press *tmp51
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    60 label *label34
    61 op add :buildBlockFromCfg.1:x .coreX 0
    62 op add :buildBlockFromCfg.1:y .coreY 4
 
    82 label *label36
    83 label *label33
    84 set .battery *tmp55
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    85 label *label40
    86 op add :buildBlockFromCfg.2:x .coreX -1
    87 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    88 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   89 set :buildBlock:y :buildBlockFromCfg.1:y
    90 set :buildBlock:graphite 0
    91 set :buildBlock:silicon 0
    92 set :buildBlock:titanium 0
 
   102 multilabel *label43 (m:marker2)
   103 label *label42
   104 label *label39
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   105 label *label46
   106 op add :buildBlockFromCfg.3:x .coreX 0
   107 op add :buildBlockFromCfg.3:y .coreY 3
   108 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  109 set :buildBlock:x :buildBlockFromCfg.1:x
   110 set :buildBlock:y :buildBlockFromCfg.3:y
   111 set :buildBlock:copper 25
   112 set :buildBlock:lead 15
 
   128 label *label45
   129 set .generator *tmp63
   130 set .powerTarget 800
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   131 label *label52
   132 op add :buildBlockFromCfg.4:x .coreX 1.5
   133 op add :buildBlockFromCfg.4:y .coreY 2.5
   134 set :buildBlock:block @silicon-smelter
   135 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  136 set :buildBlock:y :buildBlockFromCfg:y
   137 set :buildBlock:copper 30
   138 set :buildBlock:lead 25
   139 set :buildBlock:graphite 0
 
   170 setaddr :meetTarget*retaddr *label62 (h:*label62)
   171 call *label13 *invalid :meetTarget*retval (m:*label62) (h:*label62)
   172 label *label62
-    * set :locateOreAway:ore @titanium
   173 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   174 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   175 label *label64
 
   208 jump *label64 always
   209 label *label66
   210 label *label63
-    * set :buildTitaniumDrillCfg:x :locateOreAway:x
-    * set :buildTitaniumDrillCfg:y :locateOreAway:y
   211 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   212 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   213 set :moveTo.1:x :locateOreAway:x
 
   246 setaddr *tmp89 *label82
   247 label *label76
   248 set :buildTitaniumDrillCfg:count 0
-    * set :checkOre:x :buildTitaniumDrillCfg:ax
-    * set :checkOre:y :buildTitaniumDrillCfg:ay
-    * set :checkOre:ore @ore-titanium
   249 set :checkOre:count 0
   250 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   251 jump *label84 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  252 op add :checkOre:count 0 1
   253 label *label84
   254 label *label85
   255 label *label83
   256 set :buildTitaniumDrillCfg:count :checkOre:count
   257 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:y :buildTitaniumDrillCfg:ay
-    * set :checkOre.1:ore @ore-titanium
   258 set :checkOre.1:count :checkOre:count
   259 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   260 jump *label87 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  261 op add :checkOre.1:count :checkOre:count 1
   262 label *label87
   263 label *label88
   264 label *label86
   265 set :buildTitaniumDrillCfg:count :checkOre.1:count
   266 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :buildTitaniumDrillCfg:ax
-    * set :checkOre.2:y *tmp103
-    * set :checkOre.2:ore @ore-titanium
   267 set :checkOre.2:count :checkOre.1:count
   268 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   269 jump *label90 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  270 op add :checkOre.2:count :checkOre.1:count 1
   271 label *label90
   272 label *label91
   273 label *label89
   274 set :buildTitaniumDrillCfg:count :checkOre.2:count
   275 op add *tmp110 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   276 op add *tmp111 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x :checkOre.1:x
-    * set :checkOre.3:y *tmp103
-    * set :checkOre.3:ore @ore-titanium
   277 set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock *tmp110 *tmp111 0 0 :checkOre.3:floor
+  278 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   279 jump *label93 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
+  280 op add :checkOre.3:count :checkOre.2:count 1
   281 label *label93
   282 label *label94
   283 label *label92
-    * set :buildTitaniumDrillCfg:count :checkOre.3:count
   284 jump *label95 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   285 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   286 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
 
   321 setaddr :buildBlockAt*retaddr *label103 (h:*label103)
   322 call *label17 *invalid :buildBlockAt*retval (m:*label103) (h:*label103)
   323 label *label103
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   324 jump *label104 equal :buildBlockAt*retval null
   325 set *tmp72 :buildBlockAt*retval
   326 jump *label58 always
 
   364 set *tmp71 *tmp72
   365 label *label57
   366 set .titaniumDrill *tmp72
-    * write *tmp71 processor1 ".titaniumDrill"
+  367 write *tmp72 processor1 ".titaniumDrill"
   368 write .core processor3 ".core"
-    * write *tmp71 processor3 ".drill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  369 write *tmp72 processor3 ".drill"
   370 label *label111
   371 op add :buildBlockFromCfg.5:x .coreX 0
   372 op add :buildBlockFromCfg.5:y .coreY 2
   373 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  374 set :buildBlock:x :buildBlockFromCfg.1:x
   375 set :buildBlock:y :buildBlockFromCfg.5:y
   376 set :buildBlock:copper 0
   377 set :buildBlock:lead 0
 
   392 label *label113
   393 label *label110
   394 set .unloader1 *tmp149
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   395 label *label117
   396 op add :buildBlockFromCfg.6:x .coreX 1
   397 op add :buildBlockFromCfg.6:y .coreY 4
   398 set :buildBlock:block @micro-processor
   399 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  400 set :buildBlock:y :buildBlockFromCfg.1:y
   401 set :buildBlock:copper 90
   402 set :buildBlock:lead 50
   403 set :buildBlock:graphite 0
 
   426 write :monos *tmp153 ".monos"
   427 write :flares *tmp153 ".flares"
   428 write :polys *tmp153 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   429 label *label123
   430 op add :buildBlockFromCfg.7:x .coreX -2
   431 op add :buildBlockFromCfg.7:y .coreY -1
 
   449 multilabel *label126 (m:marker8)
   450 label *label125
   451 label *label122
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 1
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   452 label *label129
   453 op add :buildBlockFromCfg.8:x .coreX -2
   454 op add :buildBlockFromCfg.8:y .coreY 1
   455 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  456 set :buildBlock:x :buildBlockFromCfg.7:x
   457 set :buildBlock:y :buildBlockFromCfg.8:y
   458 set :buildBlock:copper 0
   459 set :buildBlock:lead 0
 
   473 multilabel *label132 (m:marker9)
   474 label *label131
   475 label *label128
-    * set .unloader2 *tmp161
   476 write *tmp161 *tmp153 ".unloader2"
-    * set :buildBlockFromCfg.9:block @overflow-gate
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 4
-    * set :buildBlockFromCfg.9:lead 2
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   477 label *label135
   478 op add :buildBlockFromCfg.9:x .coreX -3
   479 op add :buildBlockFromCfg.9:y .coreY 1
   480 set :buildBlock:block @overflow-gate
   481 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  482 set :buildBlock:y :buildBlockFromCfg.8:y
   483 set :buildBlock:copper 4
   484 set :buildBlock:lead 2
   485 set :buildBlock:graphite 0
 
   497 multilabel *label138 (m:marker10)
   498 label *label137
   499 label *label134
-    * set :buildBlockFromCfg.10:block @air-factory
-    * set :buildBlockFromCfg.10:offsetX -4
-    * set :buildBlockFromCfg.10:offsetY -1
-    * set :buildBlockFromCfg.10:copper 60
-    * set :buildBlockFromCfg.10:lead 70
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 3
-    * set :buildBlockFromCfg.10:config @mono
   500 label *label141
   501 op add :buildBlockFromCfg.10:x .coreX -4
   502 op add :buildBlockFromCfg.10:y .coreY -1
   503 set :buildBlock:block @air-factory
   504 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  505 set :buildBlock:y :buildBlockFromCfg.7:y
   506 set :buildBlock:copper 60
   507 set :buildBlock:lead 70
   508 set :buildBlock:graphite 0
 
   547 jump *label147 lessThan *tmp36 3
   548 label *label149
   549 write false *tmp153 ".buildUnits"
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   550 label *label154
   551 op add :buildBlockFromCfg.11:x .coreX 2
   552 op add :buildBlockFromCfg.11:y .coreY 0
 
   555 set :buildBlock:y :buildBlockFromCfg.11:y
   556 set :buildBlock:copper 0
   557 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   558 set :buildBlock:silicon 30
   559 set :buildBlock:titanium 25
   560 set :buildBlock:metaglass 0
 
   569 multilabel *label157 (m:marker12)
   570 label *label156
   571 label *label153
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   572 label *label160
   573 op add :buildBlockFromCfg.12:x .coreX 3.5
   574 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   593 multilabel *label163 (m:marker13)
   594 label *label162
   595 label *label159
-    * set .kiln *tmp182
   596 write *tmp182 *tmp153 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   597 label *label166
   598 op add :buildBlockFromCfg.13:x .coreX 2
   599 op add :buildBlockFromCfg.13:y .coreY 1
   600 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  601 set :buildBlock:x :buildBlockFromCfg.11:x
+  602 set :buildBlock:y :buildBlockFromCfg.8:y
   603 set :buildBlock:copper 3
   604 set :buildBlock:lead 0
   605 set :buildBlock:graphite 0
 
   617 multilabel *label169 (m:marker14)
   618 label *label168
   619 label *label165
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   620 label *label172
   621 op add :buildBlockFromCfg.14:x .coreX -3.5
   622 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   626 set :buildBlock:copper 30
   627 set :buildBlock:lead 30
   628 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   629 set :buildBlock:titanium 0
   630 set :buildBlock:metaglass 30
   631 set :buildBlock:rotation 0
 
   639 multilabel *label175 (m:marker15)
   640 label *label174
   641 label *label171
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   642 label *label178
   643 op add :buildBlockFromCfg.15:x .coreX -3.5
   644 op add :buildBlockFromCfg.15:y .coreY 2.5
   645 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  646 set :buildBlock:x :buildBlockFromCfg.14:x
+  647 set :buildBlock:y :buildBlockFromCfg:y
   648 set :buildBlock:copper 35
   649 set :buildBlock:lead 40
   650 set :buildBlock:graphite 25
 
   652 set :buildBlock:titanium 0
   653 set :buildBlock:metaglass 0
   654 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   655 setaddr :buildBlock*retaddr *label182 (h:*label182)
   656 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   657 label *label182
 
   662 multilabel *label181 (m:marker16)
   663 label *label180
   664 label *label177
-    * set .generator2 *tmp194
   665 write *tmp194 *tmp153 ".generator2"
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   666 label *label184
   667 op add :buildBlockFromCfg.16:x .coreX -4
   668 op add :buildBlockFromCfg.16:y .coreY 1
   669 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  670 set :buildBlock:x :buildBlockFromCfg.10:x
+  671 set :buildBlock:y :buildBlockFromCfg.8:y
   672 set :buildBlock:copper 2
   673 set :buildBlock:lead 2
   674 set :buildBlock:graphite 0
   675 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   676 set :buildBlock:config @coal
   677 setaddr :buildBlock*retaddr *label188 (h:*label188)
   678 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
 
   700 label *label194
   701 end
   702 label *label0
-    * set :status3:text "Moving..."
   703 write "Moving..." .display ".status3"
   704 label *label197
   705 label *label198
 
   714 return :moveTo*retaddr
   715 end
   716 label *label1
-    * set *tmp205 :moveTo.1:x
-    * set *tmp206 :moveTo.1:y
   717 set :moveTo:x :moveTo.1:x
   718 set :moveTo:y :moveTo.1:y
   719 set :moveTo:radius 6
 
   724 return :moveTo.1*retaddr
   725 end
   726 label *label2
-    * set :status3.1:text "Moving..."
   727 write "Moving..." .display ".status3"
   728 label *label204
   729 label *label205
 
   760 return :moveToBlock*retaddr
   761 end
   762 label *label4
-    * set :status3.2:text "Depositing..."
   763 write "Depositing..." .display ".status3"
   764 label *label216
   765 sensor *tmp216 @unit @firstItem
 
   788 jump *label223 always
   789 label *label225
   790 label *label218
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   791 write 0 .display ".transportTarget"
   792 write null .display ".transportItem"
   793 label *label226
 
   797 label *label5
   798 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 0
   799 jump *label228 notEqual *tmp226 false
-    * set :error.1:error "Cannot locate ore"
   800 set .ERROR "Cannot locate ore"
   801 stop
   802 label *label230
 
   807 end
   808 label *label6
   809 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   810 write :mineOre:amount .display ".transportTarget"
   811 write :mineOre:ore .display ".transportItem"
   812 label *label232
 
   821 setaddr :moveToEmpty*retaddr *label234 (h:*label234)
   822 call *label2 *invalid :moveToEmpty*retval (m:*label234) (h:*label234)
   823 label *label234
-    * set :status3.3:text "Mining..."
   824 write "Mining..." .display ".status3"
   825 label *label235
   826 op add :mineOre:stop @second 10
 
   852 return :mineOre*retaddr
   853 end
   854 label *label7
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   855 write "Mining " .display ".status2"
   856 write :mineOre.1:ore .display ".item2"
   857 write "core" .display ".block2"
 
   867 end
   868 label *label8
   869 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   870 write :transportStatus.2:target .display ".transportTarget"
   871 write :fetchBlock:item .display ".transportItem"
   872 label *label248
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   873 write "Fetching " .display ".status2"
   874 write :fetchBlock:item .display ".item2"
   875 write :fetchBlock:block .display ".block2"
 
   913 jump *label260 greaterThanEq *tmp256 .targetGraphite
   914 sensor *tmp259 .press @coal
   915 jump *label262 greaterThanEq *tmp259 5
-    * set :status1:text "Goal 1: graphite requirement"
   916 write "Goal 1: graphite requirement" .display ".status1"
   917 label *label264
   918 set :supplyBlock:block .press
   919 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
   920 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  921 write @coal .display ".item2"
+  922 write .press .display ".block2"
   923 label *label266
   924 sensor :supplyBlock:blockCapacity .press @itemCapacity
   925 sensor *tmp263 .press @coal
 
   943 jump *label270 greaterThanEq *tmp267 .targetSilicon
   944 sensor *tmp270 .smelter @coal
   945 jump *label272 greaterThanEq *tmp270 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
   946 write "Goal 2: coal for silicon requirement" .display ".status1"
   947 label *label274
   948 set :supplyBlock.1:block .smelter
   949 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
   950 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+  951 write @coal .display ".item2"
+  952 write .smelter .display ".block2"
   953 label *label276
   954 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   955 sensor *tmp274 .smelter @coal
 
   969 label *label272
   970 sensor *tmp278 .smelter @sand
   971 jump *label280 greaterThanEq *tmp278 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
   972 write "Goal 3: sand for silicon requirement" .display ".status1"
   973 label *label282
   974 set :supplyBlock.2:block .smelter
   975 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
   976 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+  977 write @sand .display ".item2"
+  978 write .smelter .display ".block2"
   979 label *label284
   980 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   981 sensor *tmp282 .smelter @sand
 
  1000 jump *label288 greaterThanEq *tmp286 .powerTarget
  1001 sensor *tmp289 .generator @coal
  1002 jump *label290 greaterThanEq *tmp289 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1003 write "Goal 4: supplying generator" .display ".status1"
  1004 label *label292
  1005 set :supplyBlock.3:block .generator
  1006 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1007 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1008 write @coal .display ".item2"
+ 1009 write .generator .display ".block2"
  1010 label *label294
  1011 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1012 sensor *tmp293 .generator @coal
 
  1037 label *label298
  1038 set *tmp299 100
  1039 label *label299
-    * set :supplyBase0:titaniumTrigger *tmp299
  1040 sensor *tmp303 .titaniumDrill @titanium
  1041 jump *label300 greaterThanEq *tmp303 *tmp299
  1042 jump *label302 notEqual :supplyBase0:supplied false
  1043 sensor *tmp308 .battery @totalPower
  1044 op mul *tmp309 .unloader1 .powerTarget
  1045 jump *label304 greaterThanEq *tmp308 *tmp309
-    * set :status1.4:text "Goal 5: supplying generator"
  1046 write "Goal 5: supplying generator" .display ".status1"
  1047 label *label306
  1048 set :mineOre.1:ore @coal
 
  1053 label *label304
  1054 sensor *tmp312 .core @silicon
  1055 jump *label308 greaterThanEq *tmp312 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1056 write "Goal 6: silicon requirement" .display ".status1"
  1057 label *label310
  1058 sensor :supplyBase0:coal .core @coal
 
  1063 label *label311
  1064 set *tmp318 @sand
  1065 label *label312
-    * set :supplyBase0:ore *tmp318
  1066 set :mineOre.1:ore *tmp318
  1067 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1068 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
 
  1071 label *label308
  1072 sensor *tmp319 .core @copper
  1073 jump *label314 greaterThanEq *tmp319 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1074 write "Goal 7: copper requirement" .display ".status1"
  1075 label *label316
  1076 set :mineOre.1:ore @copper
 
  1081 label *label314
  1082 sensor *tmp322 .core @lead
  1083 jump *label318 greaterThanEq *tmp322 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1084 write "Goal 8: lead requirement" .display ".status1"
  1085 label *label320
  1086 set :mineOre.1:ore @lead
 
  1091 label *label318
  1092 sensor *tmp325 .core @metaglass
  1093 jump *label322 greaterThanEq *tmp325 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1094 write "Goal 9: metaglass requirement" .display ".status1"
  1095 label *label324
  1096 set :mineOre.1:ore @sand
 
  1099 label *label325
  1100 jump *label323 always
  1101 label *label322
-    * set :status1.9:text "Goal 10: supplying base"
  1102 write "Goal 10: supplying base" .display ".status1"
  1103 label *label326
  1104 sensor :supplyBase0:coal.1 .core @coal
 
  1109 label *label327
  1110 set *tmp331 @sand
  1111 label *label328
-    * set :supplyBase0:ore.1 *tmp331
  1112 set :mineOre.1:ore *tmp331
  1113 setaddr :mineOre.1*retaddr *label329 (h:*label329)
  1114 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
 
  1122 label *label303
  1123 jump *label301 always
  1124 label *label300
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1125 write "Goal 11: Fetching titanium" .display ".status1"
  1126 label *label330
  1127 set :fetchBlock:block .titaniumDrill
 
  1140 sensor *tmp336 .core @sand
  1141 sensor *tmp337 .core @lead
  1142 jump *label335 greaterThanEq *tmp336 *tmp337
-    * set :status1.11:text "Phase 1: mining sand"
  1143 write "Phase 1: mining sand" .display ".status1"
  1144 label *label337
  1145 set :mineOre.1:ore @sand
 
  1148 label *label338
  1149 jump *label336 always
  1150 label *label335
-    * set :status1.12:text "Phase 1: mining lead"
  1151 write "Phase 1: mining lead" .display ".status1"
  1152 label *label339
  1153 set :mineOre.1:ore @lead
 
  1160 sensor *tmp340 .core @coal
  1161 sensor *tmp341 .core @lead
  1162 jump *label341 greaterThanEq *tmp340 *tmp341
-    * set :status1.13:text "Phase 1: mining coal"
  1163 write "Phase 1: mining coal" .display ".status1"
  1164 label *label343
  1165 set :mineOre.1:ore @coal
 
  1168 label *label344
  1169 jump *label342 always
  1170 label *label341
-    * set :status1.14:text "Phase 1: mining lead"
  1171 write "Phase 1: mining lead" .display ".status1"
  1172 label *label345
  1173 set :mineOre.1:ore @lead
 
  1313 read *tmp41 bank1 511
  1314 op sub *tmp374 *tmp41 1
  1315 write *tmp374 bank1 511
-    * set *tmp375 *tmp374
  1316 op floor *tmp377 @second
  1317 op mul *tmp378 *tmp377 1000
  1318 op add *tmp379 :log:encodedId *tmp378
 
  1334 setaddr :moveTo.1*retaddr *label393 (h:*label393)
  1335 call *label1 *invalid :moveTo.1*retval (m:*label393) (h:*label393)
  1336 label *label393
-    * set :status3.4:text "Building..."
  1337 write "Building..." .display ".status3"
  1338 label *label394
  1339 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1348 jump *label392 always
  1349 label *label399
  1350 label *label400
-    * set :error.2:error "Cannot build at ("
  1351 set .ERROR "Cannot build at ("
  1352 stop
  1353 label *label401

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-35 instructions):
 
    84 set .battery *tmp55
    85 label *label40
    86 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    87 set :buildBlock:x :buildBlockFromCfg.2:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
    89 set :buildBlock:graphite 0
 
   102 label *label42
   103 label *label39
   104 label *label46
-    * op add :buildBlockFromCfg.3:x .coreX 0
   105 op add :buildBlockFromCfg.3:y .coreY 3
   106 set :buildBlock:block @combustion-generator
   107 set :buildBlock:x :buildBlockFromCfg.1:x
 
   128 set .powerTarget 800
   129 label *label52
   130 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   131 set :buildBlock:block @silicon-smelter
   132 set :buildBlock:x :buildBlockFromCfg.4:x
   133 set :buildBlock:y :buildBlockFromCfg:y
 
   242 set :buildTitaniumDrillCfg:yy -1
   243 setaddr *tmp89 *label82
   244 label *label76
-    * set :buildTitaniumDrillCfg:count 0
   245 set :checkOre:count 0
   246 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   247 jump *label84 notEqual :checkOre:floor @ore-titanium
 
   249 label *label84
   250 label *label85
   251 label *label83
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   252 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   253 set :checkOre.1:count :checkOre:count
   254 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
 
   257 label *label87
   258 label *label88
   259 label *label86
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
   260 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   261 set :checkOre.2:count :checkOre.1:count
   262 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
 
   265 label *label90
   266 label *label91
   267 label *label89
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op add *tmp110 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * op add *tmp111 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   268 set :checkOre.3:count :checkOre.2:count
   269 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   270 jump *label93 notEqual :checkOre.3:floor @ore-titanium
 
   352 label *label61
   353 set *tmp72 null
   354 label *label58
-    * set *tmp71 *tmp72
   355 label *label57
   356 set .titaniumDrill *tmp72
   357 write *tmp72 processor1 ".titaniumDrill"
   358 write .core processor3 ".core"
   359 write *tmp72 processor3 ".drill"
   360 label *label111
-    * op add :buildBlockFromCfg.5:x .coreX 0
   361 op add :buildBlockFromCfg.5:y .coreY 2
   362 set :buildBlock:block @unloader
   363 set :buildBlock:x :buildBlockFromCfg.1:x
 
   383 set .unloader1 *tmp149
   384 label *label117
   385 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   386 set :buildBlock:block @micro-processor
   387 set :buildBlock:x :buildBlockFromCfg.6:x
   388 set :buildBlock:y :buildBlockFromCfg.1:y
 
   438 label *label125
   439 label *label122
   440 label *label129
-    * op add :buildBlockFromCfg.8:x .coreX -2
   441 op add :buildBlockFromCfg.8:y .coreY 1
   442 set :buildBlock:block @unloader
   443 set :buildBlock:x :buildBlockFromCfg.7:x
 
   463 write *tmp161 *tmp153 ".unloader2"
   464 label *label135
   465 op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY 1
   466 set :buildBlock:block @overflow-gate
   467 set :buildBlock:x :buildBlockFromCfg.9:x
   468 set :buildBlock:y :buildBlockFromCfg.8:y
 
   485 label *label134
   486 label *label141
   487 op add :buildBlockFromCfg.10:x .coreX -4
-    * op add :buildBlockFromCfg.10:y .coreY -1
   488 set :buildBlock:block @air-factory
   489 set :buildBlock:x :buildBlockFromCfg.10:x
   490 set :buildBlock:y :buildBlockFromCfg.7:y
   491 set :buildBlock:copper 60
   492 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   493 set :buildBlock:silicon 0
   494 set :buildBlock:titanium 0
   495 set :buildBlock:metaglass 0
 
   579 label *label159
   580 write *tmp182 *tmp153 ".kiln"
   581 label *label166
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   582 set :buildBlock:block @junction
   583 set :buildBlock:x :buildBlockFromCfg.11:x
   584 set :buildBlock:y :buildBlockFromCfg.8:y
   585 set :buildBlock:copper 3
   586 set :buildBlock:lead 0
   587 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   588 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   589 set :buildBlock:rotation 0
   590 set :buildBlock:config null
   591 setaddr :buildBlock*retaddr *label170 (h:*label170)
 
   609 set :buildBlock:titanium 0
   610 set :buildBlock:metaglass 30
   611 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   612 setaddr :buildBlock*retaddr *label176 (h:*label176)
   613 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   614 label *label176
 
   619 label *label174
   620 label *label171
   621 label *label178
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   622 set :buildBlock:block @steam-generator
   623 set :buildBlock:x :buildBlockFromCfg.14:x
   624 set :buildBlock:y :buildBlockFromCfg:y
 
   626 set :buildBlock:lead 40
   627 set :buildBlock:graphite 25
   628 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   629 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   630 setaddr :buildBlock*retaddr *label182 (h:*label182)
   631 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   632 label *label182
 
   639 label *label177
   640 write *tmp194 *tmp153 ".generator2"
   641 label *label184
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   642 set :buildBlock:block @sorter
   643 set :buildBlock:x :buildBlockFromCfg.10:x
   644 set :buildBlock:y :buildBlockFromCfg.8:y
 
   888 jump *label262 greaterThanEq *tmp259 5
   889 write "Goal 1: graphite requirement" .display ".status1"
   890 label *label264
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   891 write "Supplying " .display ".status2"
   892 write @coal .display ".item2"
   893 write .press .display ".block2"
 
   916 jump *label272 greaterThanEq *tmp270 5
   917 write "Goal 2: coal for silicon requirement" .display ".status1"
   918 label *label274
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   919 write "Supplying " .display ".status2"
   920 write @coal .display ".item2"
   921 write .smelter .display ".block2"
 
   940 jump *label280 greaterThanEq *tmp278 5
   941 write "Goal 3: sand for silicon requirement" .display ".status1"
   942 label *label282
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   943 write "Supplying " .display ".status2"
   944 write @sand .display ".item2"
   945 write .smelter .display ".block2"
 
   969 jump *label290 greaterThanEq *tmp289 2
   970 write "Goal 4: supplying generator" .display ".status1"
   971 label *label292
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   972 write "Supplying " .display ".status2"
   973 write @coal .display ".item2"
   974 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   468 set :buildBlock:y :buildBlockFromCfg.8:y
   469 set :buildBlock:copper 4
   470 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   471 set :buildBlock:silicon 0
   472 set :buildBlock:titanium 0
   473 set :buildBlock:metaglass 0
 
   489 set :buildBlock:y :buildBlockFromCfg.7:y
   490 set :buildBlock:copper 60
   491 set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
   492 set :buildBlock:titanium 0
   493 set :buildBlock:metaglass 0
   494 set :buildBlock:rotation 3
 
   562 set :buildBlock:graphite 30
   563 set :buildBlock:silicon 0
   564 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   565 set :buildBlock:rotation 0
   566 set :buildBlock:config null
   567 setaddr :buildBlock*retaddr *label164 (h:*label164)
 
   584 set :buildBlock:graphite 0
   585 set :buildBlock:titanium 0
   586 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   587 setaddr :buildBlock*retaddr *label170 (h:*label170)
   588 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   589 label *label170
 
   602 set :buildBlock:copper 30
   603 set :buildBlock:lead 30
   604 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   605 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   606 setaddr :buildBlock*retaddr *label176 (h:*label176)
   607 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   608 label *label176

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   134 set :buildBlock:copper 30
   135 set :buildBlock:lead 25
   136 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   137 set :buildBlock:titanium 0
   138 set :buildBlock:metaglass 0
   139 set :buildBlock:rotation 0
 
   443 set :buildBlock:y :buildBlockFromCfg.8:y
   444 set :buildBlock:copper 0
   445 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   446 set :buildBlock:silicon 30
   447 set :buildBlock:titanium 25
   448 set :buildBlock:metaglass 0
 
   537 set :buildBlock:lead 0
   538 set :buildBlock:silicon 30
   539 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   540 set :buildBlock:rotation 0
   541 set :buildBlock:config null
   542 setaddr :buildBlock*retaddr *label158 (h:*label158)
 
   560 set :buildBlock:silicon 0
   561 set :buildBlock:titanium 0
   562 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   563 setaddr :buildBlock*retaddr *label164 (h:*label164)
   564 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   565 label *label164
 
   578 set :buildBlock:copper 3
   579 set :buildBlock:lead 0
   580 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   581 setaddr :buildBlock*retaddr *label170 (h:*label170)
   582 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   583 label *label170

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   109 set :buildBlock:copper 25
   110 set :buildBlock:lead 15
   111 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   112 set :buildBlock:titanium 0
   113 set :buildBlock:metaglass 0
   114 set :buildBlock:rotation 0
 
   420 set :buildBlock:y :buildBlockFromCfg.7:y
   421 set :buildBlock:copper 2
   422 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   423 set :buildBlock:silicon 0
   424 set :buildBlock:titanium 0
   425 set :buildBlock:metaglass 0
 
   468 set :buildBlock:titanium 0
   469 set :buildBlock:metaglass 0
   470 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   471 setaddr :buildBlock*retaddr *label139 (h:*label139)
   472 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   473 label *label139
 
   484 set :buildBlock:y :buildBlockFromCfg.7:y
   485 set :buildBlock:copper 60
   486 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   487 set :buildBlock:rotation 3
   488 set :buildBlock:config @mono
   489 setaddr :buildBlock*retaddr *label145 (h:*label145)
 
   554 set :buildBlock:graphite 30
   555 set :buildBlock:silicon 0
   556 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   557 setaddr :buildBlock*retaddr *label164 (h:*label164)
   558 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   559 label *label164

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    87 set :buildBlock:x :buildBlockFromCfg.2:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
    89 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    90 set :buildBlock:titanium 0
    91 set :buildBlock:metaglass 0
    92 set :buildBlock:rotation 0
 
   385 set :buildBlock:y :buildBlockFromCfg.1:y
   386 set :buildBlock:copper 90
   387 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   388 set :buildBlock:silicon 50
   389 set :buildBlock:titanium 0
   390 set :buildBlock:metaglass 0
 
   419 set :buildBlock:copper 2
   420 set :buildBlock:lead 6
   421 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   422 set :buildBlock:metaglass 0
   423 set :buildBlock:rotation 0
   424 set :buildBlock:config null
 
   442 set :buildBlock:titanium 25
   443 set :buildBlock:metaglass 0
   444 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   445 setaddr :buildBlock*retaddr *label133 (h:*label133)
   446 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   447 label *label133
 
   462 set :buildBlock:lead 2
   463 set :buildBlock:silicon 0
   464 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   465 setaddr :buildBlock*retaddr *label139 (h:*label139)
   466 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   467 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    66 set :buildBlock:copper 5
    67 set :buildBlock:lead 20
    68 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    69 set :buildBlock:titanium 0
    70 set :buildBlock:metaglass 0
    71 set :buildBlock:rotation 0
 
   131 set :buildBlock:copper 30
   132 set :buildBlock:lead 25
   133 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   134 set :buildBlock:metaglass 0
   135 set :buildBlock:rotation 0
   136 set :buildBlock:config null
 
   359 set :buildBlock:y :buildBlockFromCfg.5:y
   360 set :buildBlock:copper 0
   361 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   362 set :buildBlock:silicon 30
   363 set :buildBlock:titanium 25
   364 set :buildBlock:metaglass 0
   365 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   366 setaddr :buildBlock*retaddr *label115 (h:*label115)
   367 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   368 label *label115
 
   436 set :buildBlock:lead 0
   437 set :buildBlock:silicon 30
   438 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   439 setaddr :buildBlock*retaddr *label133 (h:*label133)
   440 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   441 label *label133

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   107 set :buildBlock:copper 25
   108 set :buildBlock:lead 15
   109 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   110 set :buildBlock:metaglass 0
   111 set :buildBlock:rotation 0
   112 set :buildBlock:config null
 
   129 set :buildBlock:y :buildBlockFromCfg:y
   130 set :buildBlock:copper 30
   131 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   132 set :buildBlock:metaglass 0
   133 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   134 setaddr :buildBlock*retaddr *label56 (h:*label56)
   135 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   136 label *label56
 
   412 set :buildBlock:copper 2
   413 set :buildBlock:lead 6
   414 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   415 set :buildBlock:config null
   416 setaddr :buildBlock*retaddr *label127 (h:*label127)
   417 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    86 set :buildBlock:x :buildBlockFromCfg.2:x
    87 set :buildBlock:y :buildBlockFromCfg.1:y
    88 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    89 set :buildBlock:metaglass 0
    90 set :buildBlock:rotation 0
    91 set :buildBlock:config null
 
   105 set :buildBlock:y :buildBlockFromCfg.3:y
   106 set :buildBlock:copper 25
   107 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   108 set :buildBlock:metaglass 0
   109 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   110 setaddr :buildBlock*retaddr *label50 (h:*label50)
   111 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   112 label *label50
 
   377 set :buildBlock:lead 50
   378 set :buildBlock:silicon 50
   379 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   380 set :buildBlock:config processor2
   381 setaddr :buildBlock*retaddr *label121 (h:*label121)
   382 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    66 set :buildBlock:copper 5
    67 set :buildBlock:lead 20
    68 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    69 set :buildBlock:metaglass 0
    70 set :buildBlock:rotation 0
    71 set :buildBlock:config null
 
    84 op add :buildBlockFromCfg.2:x .coreX -1
    85 set :buildBlock:x :buildBlockFromCfg.2:x
    86 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    87 set :buildBlock:metaglass 0
    88 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    89 setaddr :buildBlock*retaddr *label44 (h:*label44)
    90 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    91 label *label44
 
   352 set :buildBlock:lead 0
   353 set :buildBlock:silicon 30
   354 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   355 setaddr :buildBlock*retaddr *label115 (h:*label115)
   356 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   357 label *label115

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    65 set :buildBlock:y :buildBlockFromCfg.1:y
    66 set :buildBlock:copper 5
    67 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    68 set :buildBlock:metaglass 0
    69 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    70 setaddr :buildBlock*retaddr *label38 (h:*label38)
    71 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    72 label *label38
 
   121 set :buildBlock:y :buildBlockFromCfg:y
   122 set :buildBlock:copper 30
   123 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   124 setaddr :buildBlock*retaddr *label56 (h:*label56)
   125 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   126 label *label56

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
   100 set :buildBlock:y :buildBlockFromCfg.3:y
   101 set :buildBlock:copper 25
   102 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   103 setaddr :buildBlock*retaddr *label50 (h:*label50)
   104 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   105 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    82 op add :buildBlockFromCfg.2:x .coreX -1
    83 set :buildBlock:x :buildBlockFromCfg.2:x
    84 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    85 setaddr :buildBlock*retaddr *label44 (h:*label44)
    86 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    87 label *label44

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    65 set :buildBlock:y :buildBlockFromCfg.1:y
    66 set :buildBlock:copper 5
    67 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    68 setaddr :buildBlock*retaddr *label38 (h:*label38)
    69 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    70 label *label38

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    32 label *label26
    33 write :findUnits:count processor1 ".polys"
    34 set :polys :findUnits*retval
+   35 op add :buildBlockFromCfg:x .coreX -1.5
+   36 op add :buildBlockFromCfg:y .coreY 2.5
+   37 set :buildBlock:block @graphite-press
+   38 set :buildBlock:x :buildBlockFromCfg:x
+   39 set :buildBlock:y :buildBlockFromCfg:y
+   40 set :buildBlock:copper 75
+   41 set :buildBlock:lead 30
+   42 set :buildBlock:graphite 0
+   43 set :buildBlock:silicon 0
+   44 set :buildBlock:titanium 0
+   45 set :buildBlock:metaglass 0
+   46 set :buildBlock:rotation 0
+   47 set :buildBlock:config null
+   48 setaddr :buildBlock*retaddr *label32 (h:*label32)
    49 label *label28
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label32 (h:*label32)
    50 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    51 label *label32
    52 set *tmp51 :buildBlock*retval
 
    57 label *label30
    58 label *label27
    59 set .press *tmp51
+   60 op add :buildBlockFromCfg.1:x .coreX 0
+   61 op add :buildBlockFromCfg.1:y .coreY 4
+   62 set :buildBlock:block @battery
+   63 set :buildBlock:x :buildBlockFromCfg.1:x
+   64 set :buildBlock:y :buildBlockFromCfg.1:y
+   65 set :buildBlock:copper 5
+   66 set :buildBlock:lead 20
+   67 setaddr :buildBlock*retaddr *label38 (h:*label38)
    68 label *label34
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label38 (h:*label38)
    69 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    70 label *label38
    71 set *tmp55 :buildBlock*retval
 
    76 label *label36
    77 label *label33
    78 set .battery *tmp55
+   79 op add :buildBlockFromCfg.2:x .coreX -1
+   80 set :buildBlock:x :buildBlockFromCfg.2:x
+   81 set :buildBlock:y :buildBlockFromCfg.1:y
+   82 setaddr :buildBlock*retaddr *label44 (h:*label44)
    83 label *label40
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label44 (h:*label44)
    84 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    85 label *label44
    86 jump *label39 always
 
    89 multilabel *label43 (m:marker2)
    90 label *label42
    91 label *label39
+   92 op add :buildBlockFromCfg.3:y .coreY 3
+   93 set :buildBlock:block @combustion-generator
+   94 set :buildBlock:x :buildBlockFromCfg.1:x
+   95 set :buildBlock:y :buildBlockFromCfg.3:y
+   96 set :buildBlock:copper 25
+   97 set :buildBlock:lead 15
+   98 setaddr :buildBlock*retaddr *label50 (h:*label50)
    99 label *label46
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label50 (h:*label50)
   100 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   101 label *label50
   102 set *tmp63 :buildBlock*retval
 
   108 label *label45
   109 set .generator *tmp63
   110 set .powerTarget 800
+  111 op add :buildBlockFromCfg.4:x .coreX 1.5
+  112 set :buildBlock:block @silicon-smelter
+  113 set :buildBlock:x :buildBlockFromCfg.4:x
+  114 set :buildBlock:y :buildBlockFromCfg:y
+  115 set :buildBlock:copper 30
+  116 set :buildBlock:lead 25
+  117 setaddr :buildBlock*retaddr *label56 (h:*label56)
   118 label *label52
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label56 (h:*label56)
   119 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   120 label *label56
   121 set *tmp67 :buildBlock*retval
 
   333 write *tmp72 processor1 ".titaniumDrill"
   334 write .core processor3 ".core"
   335 write *tmp72 processor3 ".drill"
+  336 op add :buildBlockFromCfg.5:y .coreY 2
+  337 set :buildBlock:block @unloader
+  338 set :buildBlock:x :buildBlockFromCfg.1:x
+  339 set :buildBlock:y :buildBlockFromCfg.5:y
+  340 set :buildBlock:copper 0
+  341 set :buildBlock:lead 0
+  342 set :buildBlock:silicon 30
+  343 set :buildBlock:titanium 25
+  344 setaddr :buildBlock*retaddr *label115 (h:*label115)
   345 label *label111
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   346 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   347 label *label115
   348 set *tmp149 :buildBlock*retval
 
   353 label *label113
   354 label *label110
   355 set .unloader1 *tmp149
+  356 op add :buildBlockFromCfg.6:x .coreX 1
+  357 set :buildBlock:block @micro-processor
+  358 set :buildBlock:x :buildBlockFromCfg.6:x
+  359 set :buildBlock:y :buildBlockFromCfg.1:y
+  360 set :buildBlock:copper 90
+  361 set :buildBlock:lead 50
+  362 set :buildBlock:silicon 50
+  363 set :buildBlock:titanium 0
+  364 setaddr :buildBlock*retaddr *label121 (h:*label121)
   365 label *label117
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   366 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   367 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   368 label *label121
   369 set *tmp153 :buildBlock*retval
 
   383 write :monos *tmp153 ".monos"
   384 write :flares *tmp153 ".flares"
   385 write :polys *tmp153 ".polys"
+  386 op add :buildBlockFromCfg.7:x .coreX -2
+  387 op add :buildBlockFromCfg.7:y .coreY -1
+  388 set :buildBlock:block @power-node
+  389 set :buildBlock:x :buildBlockFromCfg.7:x
+  390 set :buildBlock:y :buildBlockFromCfg.7:y
+  391 set :buildBlock:copper 2
+  392 set :buildBlock:lead 6
+  393 set :buildBlock:silicon 0
+  394 set :buildBlock:config null
+  395 setaddr :buildBlock*retaddr *label127 (h:*label127)
   396 label *label123
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   397 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   398 label *label127
   399 jump *label122 always
 
   402 multilabel *label126 (m:marker8)
   403 label *label125
   404 label *label122
+  405 op add :buildBlockFromCfg.8:y .coreY 1
+  406 set :buildBlock:block @unloader
+  407 set :buildBlock:x :buildBlockFromCfg.7:x
+  408 set :buildBlock:y :buildBlockFromCfg.8:y
+  409 set :buildBlock:copper 0
+  410 set :buildBlock:lead 0
+  411 set :buildBlock:silicon 30
+  412 set :buildBlock:titanium 25
+  413 setaddr :buildBlock*retaddr *label133 (h:*label133)
   414 label *label129
-    * op add :buildBlockFromCfg.8:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   415 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   416 label *label133
   417 set *tmp161 :buildBlock*retval
 
   422 label *label131
   423 label *label128
   424 write *tmp161 *tmp153 ".unloader2"
+  425 op add :buildBlockFromCfg.9:x .coreX -3
+  426 set :buildBlock:block @overflow-gate
+  427 set :buildBlock:x :buildBlockFromCfg.9:x
+  428 set :buildBlock:y :buildBlockFromCfg.8:y
+  429 set :buildBlock:copper 4
+  430 set :buildBlock:lead 2
+  431 set :buildBlock:silicon 0
+  432 set :buildBlock:titanium 0
+  433 setaddr :buildBlock*retaddr *label139 (h:*label139)
   434 label *label135
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   435 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   436 label *label139
   437 jump *label134 always
 
   440 multilabel *label138 (m:marker10)
   441 label *label137
   442 label *label134
+  443 op add :buildBlockFromCfg.10:x .coreX -4
+  444 set :buildBlock:block @air-factory
+  445 set :buildBlock:x :buildBlockFromCfg.10:x
+  446 set :buildBlock:y :buildBlockFromCfg.7:y
+  447 set :buildBlock:copper 60
+  448 set :buildBlock:lead 70
+  449 set :buildBlock:rotation 3
+  450 set :buildBlock:config @mono
+  451 setaddr :buildBlock*retaddr *label145 (h:*label145)
   452 label *label141
-    * op add :buildBlockFromCfg.10:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label145 (h:*label145)
   453 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   454 label *label145
   455 set *tmp169 :buildBlock*retval
 
   485 jump *label147 lessThan *tmp36 3
   486 label *label149
   487 write false *tmp153 ".buildUnits"
+  488 op add :buildBlockFromCfg.11:x .coreX 2
+  489 op add :buildBlockFromCfg.11:y .coreY 0
+  490 set :buildBlock:block @unloader
+  491 set :buildBlock:x :buildBlockFromCfg.11:x
+  492 set :buildBlock:y :buildBlockFromCfg.11:y
+  493 set :buildBlock:copper 0
+  494 set :buildBlock:lead 0
+  495 set :buildBlock:silicon 30
+  496 set :buildBlock:titanium 25
+  497 set :buildBlock:rotation 0
+  498 set :buildBlock:config null
+  499 setaddr :buildBlock*retaddr *label158 (h:*label158)
   500 label *label154
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label158 (h:*label158)
   501 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   502 label *label158
   503 jump *label153 always
 
   506 multilabel *label157 (m:marker12)
   507 label *label156
   508 label *label153
+  509 op add :buildBlockFromCfg.12:x .coreX 3.5
+  510 op add :buildBlockFromCfg.12:y .coreY 0.5
+  511 set :buildBlock:block @kiln
+  512 set :buildBlock:x :buildBlockFromCfg.12:x
+  513 set :buildBlock:y :buildBlockFromCfg.12:y
+  514 set :buildBlock:copper 60
+  515 set :buildBlock:lead 30
+  516 set :buildBlock:graphite 30
+  517 set :buildBlock:silicon 0
+  518 set :buildBlock:titanium 0
+  519 setaddr :buildBlock*retaddr *label164 (h:*label164)
   520 label *label160
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label164 (h:*label164)
   521 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   522 label *label164
   523 set *tmp182 :buildBlock*retval
 
   528 label *label162
   529 label *label159
   530 write *tmp182 *tmp153 ".kiln"
+  531 set :buildBlock:block @junction
+  532 set :buildBlock:x :buildBlockFromCfg.11:x
+  533 set :buildBlock:y :buildBlockFromCfg.8:y
+  534 set :buildBlock:copper 3
+  535 set :buildBlock:lead 0
+  536 set :buildBlock:graphite 0
+  537 setaddr :buildBlock*retaddr *label170 (h:*label170)
   538 label *label166
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label170 (h:*label170)
   539 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   540 label *label170
   541 jump *label165 always
 
   544 multilabel *label169 (m:marker14)
   545 label *label168
   546 label *label165
+  547 op add :buildBlockFromCfg.14:x .coreX -3.5
+  548 op add :buildBlockFromCfg.14:y .coreY 4.5
+  549 set :buildBlock:block @water-extractor
+  550 set :buildBlock:x :buildBlockFromCfg.14:x
+  551 set :buildBlock:y :buildBlockFromCfg.14:y
+  552 set :buildBlock:copper 30
+  553 set :buildBlock:lead 30
+  554 set :buildBlock:graphite 30
+  555 set :buildBlock:metaglass 30
+  556 setaddr :buildBlock*retaddr *label176 (h:*label176)
   557 label *label172
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label176 (h:*label176)
   558 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   559 label *label176
   560 jump *label171 always
 
   563 multilabel *label175 (m:marker15)
   564 label *label174
   565 label *label171
+  566 set :buildBlock:block @steam-generator
+  567 set :buildBlock:x :buildBlockFromCfg.14:x
+  568 set :buildBlock:y :buildBlockFromCfg:y
+  569 set :buildBlock:copper 35
+  570 set :buildBlock:lead 40
+  571 set :buildBlock:graphite 25
+  572 set :buildBlock:silicon 30
+  573 set :buildBlock:metaglass 0
+  574 setaddr :buildBlock*retaddr *label182 (h:*label182)
   575 label *label178
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label182 (h:*label182)
   576 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   577 label *label182
   578 set *tmp194 :buildBlock*retval
 
   583 label *label180
   584 label *label177
   585 write *tmp194 *tmp153 ".generator2"
+  586 set :buildBlock:block @sorter
+  587 set :buildBlock:x :buildBlockFromCfg.10:x
+  588 set :buildBlock:y :buildBlockFromCfg.8:y
+  589 set :buildBlock:copper 2
+  590 set :buildBlock:lead 2
+  591 set :buildBlock:graphite 0
+  592 set :buildBlock:silicon 0
+  593 set :buildBlock:config @coal
+  594 setaddr :buildBlock*retaddr *label188 (h:*label188)
   595 label *label184
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label188 (h:*label188)
   596 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   597 label *label188
   598 jump *label183 always
 
   620 label *label0
   621 write "Moving..." .display ".status3"
   622 label *label197
+  623 op sub *tmp204 :moveTo:radius 0.5
   624 label *label198
   625 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
   626 jump *label200 notEqual *tmp202 false
-    * op sub *tmp204 :moveTo:radius 0.5
   627 ucontrol approach :moveTo:x :moveTo:y *tmp204
   628 label *label199
   629 jump *label198 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   195 set :buildTitaniumDrillCfg:dy 0
   196 set :buildTitaniumDrillCfg:searches 0
   197 label *label73
-    * jump *label75 greaterThanEq :buildTitaniumDrillCfg:searches 5
+  198 label *label418
   199 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   200 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   201 set :buildTitaniumDrillCfg:best 0
 
   264 label *label78
   265 label *label74
   266 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
-    * jump *label73 always
+  267 jump *label418 lessThan :buildTitaniumDrillCfg:searches 5
   268 label *label75
   269 jump *label99 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   270 op div *tmp124 :buildTitaniumDrillCfg:dx 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-3 instructions):
 
   938 label *label289
   939 label *label258
   940 label *label259
+  941 set *tmp299 100
   942 sensor *tmp297 .core @titanium
-    * jump *label298 greaterThanEq *tmp297 .targetTitanium
+  943 jump *label299 greaterThanEq *tmp297 .targetTitanium
   944 sensor *tmp300 .core @titanium
   945 op sub *tmp301 .targetTitanium *tmp300
   946 op min *tmp299 7 *tmp301
   947 jump *label299 always
-    * label *label298
-    * set *tmp299 100
   948 label *label299
   949 sensor *tmp303 .titaniumDrill @titanium
   950 jump *label300 greaterThanEq *tmp303 *tmp299
 
   966 label *label310
   967 sensor :supplyBase0:coal .core @coal
   968 sensor :supplyBase0:sand .core @sand
-    * jump *label311 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp318 @coal
+  969 set :mineOre.1:ore @sand
+  970 jump *label312 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  971 set :mineOre.1:ore @coal
   972 jump *label312 always
-    * label *label311
-    * set *tmp318 @sand
   973 label *label312
-    * set :mineOre.1:ore *tmp318
   974 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   975 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
   976 label *label313
 
  1010 label *label326
  1011 sensor :supplyBase0:coal.1 .core @coal
  1012 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label327 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp331 @coal
+ 1013 set :mineOre.1:ore @sand
+ 1014 jump *label328 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1015 set :mineOre.1:ore @coal
  1016 jump *label328 always
-    * label *label327
-    * set *tmp331 @sand
  1017 label *label328
-    * set :mineOre.1:ore *tmp331
  1018 setaddr :mineOre.1*retaddr *label329 (h:*label329)
  1019 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
  1020 label *label329
 
  1193 write *tmp369 .controller ".smelterTarget"
  1194 op add *tmp370 :meetTarget:metaglass 20
  1195 write *tmp370 .controller ".kilnTarget"
-    * jump *label380 lessThanEq :meetTarget:siliconFactory 0
-    * set *tmp372 .factory
+ 1196 set .leadSiliconBlock .core
+ 1197 jump *label381 lessThanEq :meetTarget:siliconFactory 0
+ 1198 set .leadSiliconBlock .factory
  1199 jump *label381 always
-    * label *label380
-    * set *tmp372 .core
  1200 label *label381
-    * set .leadSiliconBlock *tmp372
  1201 label *label382
  1202 setaddr :targetMet*retaddr *label385 (h:*label385)
  1203 call *label12 *invalid :targetMet*retval (m:*label385) (h:*label385)

Modifications by Unroll iteration loop at CoreBuilder.mnd:239:5 (-2 instructions):
 
  1136 end
  1137 label *label13
  1138 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp364 *label372
-    * jump *label369 always
-    * multilabel *label372 (m:marker18)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp364 *label373
-    * jump *label369 always
-    * multilabel *label373 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp364 *label374
-    * jump *label369 always
-    * multilabel *label374 (m:marker18)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp364 *label375
-    * jump *label369 always
-    * multilabel *label375 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp364 *label376
-    * jump *label369 always
-    * multilabel *label376 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp364 *label377
-    * jump *label369 always
-    * multilabel *label377 (m:marker18)
-    * set :meetTarget:t :meetTarget:leadFactory
-    * setaddr *tmp364 *label378
-    * jump *label369 always
-    * multilabel *label378 (m:marker18)
-    * set :meetTarget:t :meetTarget:siliconFactory
-    * setaddr *tmp364 *label379
-    * label *label369
-    * op sign *tmp365 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label370
-    * multijump *tmp364 0 0 (m:marker18)
-    * multilabel *label379 (m:marker18)
-    * label *label371
+ 1139 set :meetTarget:t :meetTarget:copper
+ 1140 label *label419
+ 1141 op sign *tmp365 :meetTarget:t
+ 1142 op add :meetTarget:count :meetTarget:count *tmp365
+ 1143 label *label420
+ 1144 set :meetTarget:t :meetTarget:lead
+ 1145 label *label423
+ 1146 op sign *tmp365 :meetTarget:t
+ 1147 op add :meetTarget:count :meetTarget:count *tmp365
+ 1148 label *label424
+ 1149 set :meetTarget:t :meetTarget:graphite
+ 1150 label *label427
+ 1151 op sign *tmp365 :meetTarget:t
+ 1152 op add :meetTarget:count :meetTarget:count *tmp365
+ 1153 label *label428
+ 1154 set :meetTarget:t :meetTarget:silicon
+ 1155 label *label431
+ 1156 op sign *tmp365 :meetTarget:t
+ 1157 op add :meetTarget:count :meetTarget:count *tmp365
+ 1158 label *label432
+ 1159 set :meetTarget:t :meetTarget:titanium
+ 1160 label *label435
+ 1161 op sign *tmp365 :meetTarget:t
+ 1162 op add :meetTarget:count :meetTarget:count *tmp365
+ 1163 label *label436
+ 1164 set :meetTarget:t :meetTarget:metaglass
+ 1165 label *label439
+ 1166 op sign *tmp365 :meetTarget:t
+ 1167 op add :meetTarget:count :meetTarget:count *tmp365
+ 1168 label *label440
+ 1169 set :meetTarget:t :meetTarget:leadFactory
+ 1170 label *label443
+ 1171 op sign *tmp365 :meetTarget:t
+ 1172 op add :meetTarget:count :meetTarget:count *tmp365
+ 1173 label *label444
+ 1174 set :meetTarget:t :meetTarget:siliconFactory
+ 1175 label *label447
+ 1176 op sign *tmp365 :meetTarget:t
+ 1177 op add :meetTarget:count :meetTarget:count *tmp365
+ 1178 label *label448
+ 1179 label *label371
  1180 write :meetTarget:count .display ".totalTargets"
  1181 write :meetTarget:block .display ".nextBlock"
  1182 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1138 set :meetTarget:count 0
  1139 set :meetTarget:t :meetTarget:copper
  1140 label *label419
-    * op sign *tmp365 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp365
+ 1141 op sign *tmp365 :meetTarget:copper
+ 1142 op add :meetTarget:count 0 *tmp365
  1143 label *label420
  1144 set :meetTarget:t :meetTarget:lead
  1145 label *label423
-    * op sign *tmp365 :meetTarget:t
+ 1146 op sign *tmp365 :meetTarget:lead
  1147 op add :meetTarget:count :meetTarget:count *tmp365
  1148 label *label424
  1149 set :meetTarget:t :meetTarget:graphite
  1150 label *label427
-    * op sign *tmp365 :meetTarget:t
+ 1151 op sign *tmp365 :meetTarget:graphite
  1152 op add :meetTarget:count :meetTarget:count *tmp365
  1153 label *label428
  1154 set :meetTarget:t :meetTarget:silicon
  1155 label *label431
-    * op sign *tmp365 :meetTarget:t
+ 1156 op sign *tmp365 :meetTarget:silicon
  1157 op add :meetTarget:count :meetTarget:count *tmp365
  1158 label *label432
  1159 set :meetTarget:t :meetTarget:titanium
  1160 label *label435
-    * op sign *tmp365 :meetTarget:t
+ 1161 op sign *tmp365 :meetTarget:titanium
  1162 op add :meetTarget:count :meetTarget:count *tmp365
  1163 label *label436
  1164 set :meetTarget:t :meetTarget:metaglass
  1165 label *label439
-    * op sign *tmp365 :meetTarget:t
+ 1166 op sign *tmp365 :meetTarget:metaglass
  1167 op add :meetTarget:count :meetTarget:count *tmp365
  1168 label *label440
  1169 set :meetTarget:t :meetTarget:leadFactory
  1170 label *label443
-    * op sign *tmp365 :meetTarget:t
+ 1171 op sign *tmp365 :meetTarget:leadFactory
  1172 op add :meetTarget:count :meetTarget:count *tmp365
  1173 label *label444
  1174 set :meetTarget:t :meetTarget:siliconFactory
  1175 label *label447
-    * op sign *tmp365 :meetTarget:t
+ 1176 op sign *tmp365 :meetTarget:siliconFactory
  1177 op add :meetTarget:count :meetTarget:count *tmp365
  1178 label *label448
  1179 label *label371

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
  1135 return :targetMet*retaddr
  1136 end
  1137 label *label13
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1138 label *label419
  1139 op sign *tmp365 :meetTarget:copper
  1140 op add :meetTarget:count 0 *tmp365
  1141 label *label420
-    * set :meetTarget:t :meetTarget:lead
  1142 label *label423
  1143 op sign *tmp365 :meetTarget:lead
  1144 op add :meetTarget:count :meetTarget:count *tmp365
  1145 label *label424
-    * set :meetTarget:t :meetTarget:graphite
  1146 label *label427
  1147 op sign *tmp365 :meetTarget:graphite
  1148 op add :meetTarget:count :meetTarget:count *tmp365
  1149 label *label428
-    * set :meetTarget:t :meetTarget:silicon
  1150 label *label431
  1151 op sign *tmp365 :meetTarget:silicon
  1152 op add :meetTarget:count :meetTarget:count *tmp365
  1153 label *label432
-    * set :meetTarget:t :meetTarget:titanium
  1154 label *label435
  1155 op sign *tmp365 :meetTarget:titanium
  1156 op add :meetTarget:count :meetTarget:count *tmp365
  1157 label *label436
-    * set :meetTarget:t :meetTarget:metaglass
  1158 label *label439
  1159 op sign *tmp365 :meetTarget:metaglass
  1160 op add :meetTarget:count :meetTarget:count *tmp365
  1161 label *label440
-    * set :meetTarget:t :meetTarget:leadFactory
  1162 label *label443
  1163 op sign *tmp365 :meetTarget:leadFactory
  1164 op add :meetTarget:count :meetTarget:count *tmp365
  1165 label *label444
-    * set :meetTarget:t :meetTarget:siliconFactory
  1166 label *label447
  1167 op sign *tmp365 :meetTarget:siliconFactory
  1168 op add :meetTarget:count :meetTarget:count *tmp365

Modifications by Replicate loop condition at Actions.mnd:43:5 (+1 instructions):
 
   658 label *label210
   659 sensor *tmp212 @unit @firstItem
   660 jump *label212 equal *tmp212 null
+  661 label *label452
   662 ucontrol itemDrop @air 1000
   663 label *label211
-    * jump *label210 always
+  664 sensor *tmp212 @unit @firstItem
+  665 jump *label452 notEqual *tmp212 null
   666 label *label212
   667 label *label203
   668 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at Actions.mnd:23:5 (+1 instructions):
 
   624 label *label198
   625 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
   626 jump *label200 notEqual *tmp202 false
+  627 label *label453
   628 ucontrol approach :moveTo:x :moveTo:y *tmp204
   629 label *label199
-    * jump *label198 always
+  630 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
+  631 jump *label453 equal *tmp202 false
   632 label *label200
   633 label *label196
   634 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:66:9 (+1 instructions):
 
   705 label *label223
   706 sensor *tmp224 @unit @firstItem
   707 jump *label225 equal *tmp224 null
+  708 label *label454
   709 ucontrol itemDrop @air 1000
   710 label *label224
-    * jump *label223 always
+  711 sensor *tmp224 @unit @firstItem
+  712 jump *label454 notEqual *tmp224 null
   713 label *label225
   714 label *label218
   715 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:262:5 (+2 instructions):
 
  1204 call *label12 *invalid :targetMet*retval (m:*label385) (h:*label385)
  1205 label *label385
  1206 jump *label384 notEqual :targetMet*retval false
+ 1207 label *label455
  1208 setaddr :supplyBase*retaddr *label386 (h:*label386)
  1209 call *label11 *invalid :supplyBase*retval (m:*label386) (h:*label386)
  1210 label *label386
  1211 label *label383
-    * jump *label382 always
+ 1212 setaddr :targetMet*retaddr *label456 (h:*label456)
+ 1213 call *label12 *invalid :targetMet*retval (m:*label456) (h:*label456)
+ 1214 label *label456
+ 1215 jump *label455 equal :targetMet*retval false
  1216 label *label384
  1217 label *label368
  1218 return :meetTarget*retaddr

Modifications by Unroll iteration loop at CoreBuilder.mnd:372:13 (+64 instructions):
 
   199 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   200 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   201 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp89 *label79
-    * jump *label76 always
-    * multilabel *label79 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp89 *label80
-    * jump *label76 always
-    * multilabel *label80 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp89 *label81
-    * jump *label76 always
-    * multilabel *label81 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp89 *label82
-    * label *label76
-    * set :checkOre:count 0
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
-    * jump *label84 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
-    * label *label84
-    * label *label85
-    * label *label83
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
-    * jump *label87 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label87
-    * label *label88
-    * label *label86
-    * op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
-    * jump *label90 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label90
-    * label *label91
-    * label *label89
-    * set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
-    * jump *label93 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :checkOre.2:count 1
-    * label *label93
-    * label *label94
-    * label *label92
-    * jump *label95 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label97 lessThan :checkOre.3:count 4
-    * jump *label75 always
-    * label *label97
-    * label *label98
-    * label *label95
-    * label *label96
-    * label *label77
-    * multijump *tmp89 0 0 (m:marker5)
-    * multilabel *label82 (m:marker5)
-    * label *label78
+  202 set :buildTitaniumDrillCfg:xx 1
+  203 set :buildTitaniumDrillCfg:yy 1
+  204 label *label457
+  205 set :checkOre:count 0
+  206 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  207 jump *label458 notEqual :checkOre:floor @ore-titanium
+  208 op add :checkOre:count 0 1
+  209 label *label458
+  210 label *label459
+  211 label *label460
+  212 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  213 set :checkOre.1:count :checkOre:count
+  214 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  215 jump *label461 notEqual :checkOre.1:floor @ore-titanium
+  216 op add :checkOre.1:count :checkOre:count 1
+  217 label *label461
+  218 label *label462
+  219 label *label463
+  220 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  221 set :checkOre.2:count :checkOre.1:count
+  222 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
+  223 jump *label464 notEqual :checkOre.2:floor @ore-titanium
+  224 op add :checkOre.2:count :checkOre.1:count 1
+  225 label *label464
+  226 label *label465
+  227 label *label466
+  228 set :checkOre.3:count :checkOre.2:count
+  229 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
+  230 jump *label467 notEqual :checkOre.3:floor @ore-titanium
+  231 op add :checkOre.3:count :checkOre.2:count 1
+  232 label *label467
+  233 label *label468
+  234 label *label469
+  235 jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  236 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  237 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  238 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  239 jump *label470 lessThan :checkOre.3:count 4
+  240 jump *label75 always
+  241 label *label470
+  242 label *label471
+  243 label *label472
+  244 label *label473
+  245 label *label474
+  246 set :buildTitaniumDrillCfg:xx 1
+  247 set :buildTitaniumDrillCfg:yy -1
+  248 label *label477
+  249 set :checkOre:count 0
+  250 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  251 jump *label478 notEqual :checkOre:floor @ore-titanium
+  252 op add :checkOre:count 0 1
+  253 label *label478
+  254 label *label479
+  255 label *label480
+  256 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  257 set :checkOre.1:count :checkOre:count
+  258 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  259 jump *label481 notEqual :checkOre.1:floor @ore-titanium
+  260 op add :checkOre.1:count :checkOre:count 1
+  261 label *label481
+  262 label *label482
+  263 label *label483
+  264 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  265 set :checkOre.2:count :checkOre.1:count
+  266 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
+  267 jump *label484 notEqual :checkOre.2:floor @ore-titanium
+  268 op add :checkOre.2:count :checkOre.1:count 1
+  269 label *label484
+  270 label *label485
+  271 label *label486
+  272 set :checkOre.3:count :checkOre.2:count
+  273 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
+  274 jump *label487 notEqual :checkOre.3:floor @ore-titanium
+  275 op add :checkOre.3:count :checkOre.2:count 1
+  276 label *label487
+  277 label *label488
+  278 label *label489
+  279 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  280 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  281 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  282 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  283 jump *label490 lessThan :checkOre.3:count 4
+  284 jump *label75 always
+  285 label *label490
+  286 label *label491
+  287 label *label492
+  288 label *label493
+  289 label *label494
+  290 set :buildTitaniumDrillCfg:xx -1
+  291 set :buildTitaniumDrillCfg:yy 1
+  292 label *label497
+  293 set :checkOre:count 0
+  294 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  295 jump *label498 notEqual :checkOre:floor @ore-titanium
+  296 op add :checkOre:count 0 1
+  297 label *label498
+  298 label *label499
+  299 label *label500
+  300 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  301 set :checkOre.1:count :checkOre:count
+  302 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  303 jump *label501 notEqual :checkOre.1:floor @ore-titanium
+  304 op add :checkOre.1:count :checkOre:count 1
+  305 label *label501
+  306 label *label502
+  307 label *label503
+  308 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  309 set :checkOre.2:count :checkOre.1:count
+  310 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
+  311 jump *label504 notEqual :checkOre.2:floor @ore-titanium
+  312 op add :checkOre.2:count :checkOre.1:count 1
+  313 label *label504
+  314 label *label505
+  315 label *label506
+  316 set :checkOre.3:count :checkOre.2:count
+  317 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
+  318 jump *label507 notEqual :checkOre.3:floor @ore-titanium
+  319 op add :checkOre.3:count :checkOre.2:count 1
+  320 label *label507
+  321 label *label508
+  322 label *label509
+  323 jump *label512 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  324 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  325 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  326 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  327 jump *label510 lessThan :checkOre.3:count 4
+  328 jump *label75 always
+  329 label *label510
+  330 label *label511
+  331 label *label512
+  332 label *label513
+  333 label *label514
+  334 set :buildTitaniumDrillCfg:xx -1
+  335 set :buildTitaniumDrillCfg:yy -1
+  336 label *label517
+  337 set :checkOre:count 0
+  338 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  339 jump *label518 notEqual :checkOre:floor @ore-titanium
+  340 op add :checkOre:count 0 1
+  341 label *label518
+  342 label *label519
+  343 label *label520
+  344 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  345 set :checkOre.1:count :checkOre:count
+  346 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  347 jump *label521 notEqual :checkOre.1:floor @ore-titanium
+  348 op add :checkOre.1:count :checkOre:count 1
+  349 label *label521
+  350 label *label522
+  351 label *label523
+  352 op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  353 set :checkOre.2:count :checkOre.1:count
+  354 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
+  355 jump *label524 notEqual :checkOre.2:floor @ore-titanium
+  356 op add :checkOre.2:count :checkOre.1:count 1
+  357 label *label524
+  358 label *label525
+  359 label *label526
+  360 set :checkOre.3:count :checkOre.2:count
+  361 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
+  362 jump *label527 notEqual :checkOre.3:floor @ore-titanium
+  363 op add :checkOre.3:count :checkOre.2:count 1
+  364 label *label527
+  365 label *label528
+  366 label *label529
+  367 jump *label532 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  368 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  369 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  370 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  371 jump *label530 lessThan :checkOre.3:count 4
+  372 jump *label75 always
+  373 label *label530
+  374 label *label531
+  375 label *label532
+  376 label *label533
+  377 label *label534
+  378 label *label78
   379 label *label74
   380 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   381 jump *label418 lessThan :buildTitaniumDrillCfg:searches 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   209 label *label458
   210 label *label459
   211 label *label460
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  212 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   213 set :checkOre.1:count :checkOre:count
   214 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   215 jump *label461 notEqual :checkOre.1:floor @ore-titanium
 
   217 label *label461
   218 label *label462
   219 label *label463
-    * op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  220 op add *tmp103 :buildTitaniumDrillCfg:ay 1
   221 set :checkOre.2:count :checkOre.1:count
   222 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   223 jump *label464 notEqual :checkOre.2:floor @ore-titanium
 
   232 label *label467
   233 label *label468
   234 label *label469
-    * jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  235 jump *label472 lessThanEq :checkOre.3:count 0
+  236 set :buildTitaniumDrillCfg:dx 1
+  237 set :buildTitaniumDrillCfg:dy 1
   238 set :buildTitaniumDrillCfg:best :checkOre.3:count
   239 jump *label470 lessThan :checkOre.3:count 4
   240 jump *label75 always
 
   253 label *label478
   254 label *label479
   255 label *label480
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  256 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   257 set :checkOre.1:count :checkOre:count
   258 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   259 jump *label481 notEqual :checkOre.1:floor @ore-titanium
 
   261 label *label481
   262 label *label482
   263 label *label483
-    * op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  264 op add *tmp103 :buildTitaniumDrillCfg:ay -1
   265 set :checkOre.2:count :checkOre.1:count
   266 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   267 jump *label484 notEqual :checkOre.2:floor @ore-titanium
 
   277 label *label488
   278 label *label489
   279 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  280 set :buildTitaniumDrillCfg:dx 1
+  281 set :buildTitaniumDrillCfg:dy -1
   282 set :buildTitaniumDrillCfg:best :checkOre.3:count
   283 jump *label490 lessThan :checkOre.3:count 4
   284 jump *label75 always
 
   297 label *label498
   298 label *label499
   299 label *label500
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  300 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   301 set :checkOre.1:count :checkOre:count
   302 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   303 jump *label501 notEqual :checkOre.1:floor @ore-titanium
 
   305 label *label501
   306 label *label502
   307 label *label503
-    * op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  308 op add *tmp103 :buildTitaniumDrillCfg:ay 1
   309 set :checkOre.2:count :checkOre.1:count
   310 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   311 jump *label504 notEqual :checkOre.2:floor @ore-titanium
 
   321 label *label508
   322 label *label509
   323 jump *label512 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  324 set :buildTitaniumDrillCfg:dx -1
+  325 set :buildTitaniumDrillCfg:dy 1
   326 set :buildTitaniumDrillCfg:best :checkOre.3:count
   327 jump *label510 lessThan :checkOre.3:count 4
   328 jump *label75 always
 
   341 label *label518
   342 label *label519
   343 label *label520
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  344 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   345 set :checkOre.1:count :checkOre:count
   346 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   347 jump *label521 notEqual :checkOre.1:floor @ore-titanium
 
   349 label *label521
   350 label *label522
   351 label *label523
-    * op add *tmp103 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  352 op add *tmp103 :buildTitaniumDrillCfg:ay -1
   353 set :checkOre.2:count :checkOre.1:count
   354 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   355 jump *label524 notEqual :checkOre.2:floor @ore-titanium
 
   365 label *label528
   366 label *label529
   367 jump *label532 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  368 set :buildTitaniumDrillCfg:dx -1
+  369 set :buildTitaniumDrillCfg:dy -1
   370 set :buildTitaniumDrillCfg:best :checkOre.3:count
   371 jump *label530 lessThan :checkOre.3:count 4
   372 jump *label75 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   199 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   200 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   201 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   202 label *label457
   203 set :checkOre:count 0
   204 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   241 label *label472
   242 label *label473
   243 label *label474
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   244 label *label477
   245 set :checkOre:count 0
   246 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   283 label *label492
   284 label *label493
   285 label *label494
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   286 label *label497
   287 set :checkOre:count 0
   288 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   325 label *label512
   326 label *label513
   327 label *label514
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   328 label *label517
   329 set :checkOre:count 0
   330 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
  1056 sensor *tmp300 .core @titanium
  1057 op sub *tmp301 .targetTitanium *tmp300
  1058 op min *tmp299 7 *tmp301
-    * jump *label299 always
  1059 label *label299
  1060 sensor *tmp303 .titaniumDrill @titanium
  1061 jump *label300 greaterThanEq *tmp303 *tmp299
 
  1080 set :mineOre.1:ore @sand
  1081 jump *label312 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1082 set :mineOre.1:ore @coal
-    * jump *label312 always
  1083 label *label312
  1084 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1085 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
 
  1123 set :mineOre.1:ore @sand
  1124 jump *label328 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1125 set :mineOre.1:ore @coal
-    * jump *label328 always
  1126 label *label328
  1127 setaddr :mineOre.1*retaddr *label329 (h:*label329)
  1128 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
 
  1300 set .leadSiliconBlock .core
  1301 jump *label381 lessThanEq :meetTarget:siliconFactory 0
  1302 set .leadSiliconBlock .factory
-    * jump *label381 always
  1303 label *label381
  1304 label *label382
  1305 setaddr :targetMet*retaddr *label385 (h:*label385)
 
  1379 call *label15 *invalid :logBlock*retval (m:*label407) (h:*label407)
  1380 label *label407
  1381 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label392 always
  1382 label *label392
  1383 return :buildBlockAt*retaddr
  1384 end
 
  1405 call *label17 *invalid :buildBlockAt*retval (m:*label410) (h:*label410)
  1406 label *label410
  1407 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label408 always
  1408 label *label408
  1409 return :buildBlock*retaddr
  1410 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    57 label *label30
    58 label *label27
    59 set .press *tmp51
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   60 set :buildBlockFromCfg.1:x .coreX
    61 op add :buildBlockFromCfg.1:y .coreY 4
    62 set :buildBlock:block @battery
    63 set :buildBlock:x :buildBlockFromCfg.1:x
 
   203 set :checkOre:count 0
   204 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   205 jump *label458 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  206 set :checkOre:count 1
   207 label *label458
   208 label *label459
   209 label *label460
 
   245 set :checkOre:count 0
   246 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   247 jump *label478 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  248 set :checkOre:count 1
   249 label *label478
   250 label *label479
   251 label *label480
 
   287 set :checkOre:count 0
   288 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   289 jump *label498 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  290 set :checkOre:count 1
   291 label *label498
   292 label *label499
   293 label *label500
 
   329 set :checkOre:count 0
   330 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   331 jump *label518 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  332 set :checkOre:count 1
   333 label *label518
   334 label *label519
   335 label *label520
 
   573 label *label146
   574 write @flare *tmp153 ".unitToProduce"
   575 write true *tmp153 ".buildUnits"
-    * op add .phase 0 1
+  576 set .phase 1
   577 write 85 *tmp153 ".pressTarget"
   578 write 60 *tmp153 ".smelterTarget"
   579 write 30 *tmp153 ".kilnTarget"
 
   592 label *label149
   593 write false *tmp153 ".buildUnits"
   594 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  595 set :buildBlockFromCfg.11:y .coreY
   596 set :buildBlock:block @unloader
   597 set :buildBlock:x :buildBlockFromCfg.11:x
   598 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1246 label *label13
  1247 label *label419
  1248 op sign *tmp365 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp365
+ 1249 set :meetTarget:count *tmp365
  1250 label *label420
  1251 label *label423
  1252 op sign *tmp365 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-5 instructions):
 
   592 label *label149
   593 write false *tmp153 ".buildUnits"
   594 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
+  595 set :buildBlock:y .coreY
   596 set :buildBlock:block @unloader
   597 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
   598 set :buildBlock:copper 0
   599 set :buildBlock:lead 0
   600 set :buildBlock:silicon 30
 
   611 multilabel *label157 (m:marker12)
   612 label *label156
   613 label *label153
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
+  614 op add :buildBlock:x .coreX 3.5
+  615 op add :buildBlock:y .coreY 0.5
   616 set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
   617 set :buildBlock:copper 60
   618 set :buildBlock:lead 30
   619 set :buildBlock:graphite 30
 
   648 label *label168
   649 label *label165
   650 op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
+  651 op add :buildBlock:y .coreY 4.5
   652 set :buildBlock:block @water-extractor
   653 set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
   654 set :buildBlock:copper 30
   655 set :buildBlock:lead 30
   656 set :buildBlock:graphite 30
 
  1241 end
  1242 label *label13
  1243 label *label419
-    * op sign *tmp365 :meetTarget:copper
-    * set :meetTarget:count *tmp365
+ 1244 op sign :meetTarget:count :meetTarget:copper
  1245 label *label420
  1246 label *label423
  1247 op sign *tmp365 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    60 set :buildBlockFromCfg.1:x .coreX
    61 op add :buildBlockFromCfg.1:y .coreY 4
    62 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   63 set :buildBlock:x .coreX
    64 set :buildBlock:y :buildBlockFromCfg.1:y
    65 set :buildBlock:copper 5
    66 set :buildBlock:lead 20
 
    91 label *label39
    92 op add :buildBlockFromCfg.3:y .coreY 3
    93 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   94 set :buildBlock:x .coreX
    95 set :buildBlock:y :buildBlockFromCfg.3:y
    96 set :buildBlock:copper 25
    97 set :buildBlock:lead 15
 
   441 write *tmp72 processor3 ".drill"
   442 op add :buildBlockFromCfg.5:y .coreY 2
   443 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  444 set :buildBlock:x .coreX
   445 set :buildBlock:y :buildBlockFromCfg.5:y
   446 set :buildBlock:copper 0
   447 set :buildBlock:lead 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    57 label *label30
    58 label *label27
    59 set .press *tmp51
-    * set :buildBlockFromCfg.1:x .coreX
    60 op add :buildBlockFromCfg.1:y .coreY 4
    61 set :buildBlock:block @battery
    62 set :buildBlock:x .coreX

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    10 label *label21
    11 ubind @poly
    12 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label22
    13 jump *label21 equal .core null
-    * label *label23
    14 set .display processor1
    15 set :findUnits:type @mono
    16 setaddr :findUnits*retaddr *label24 (h:*label24)
 
    44 set :buildBlock:rotation 0
    45 set :buildBlock:config null
    46 setaddr :buildBlock*retaddr *label32 (h:*label32)
-    * label *label28
    47 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    48 label *label32
    49 set *tmp51 :buildBlock*retval
    50 jump *label27 always
-    * label *label29
    51 multijump *tmp52 0 0 (m:marker0)
    52 multilabel *label31 (m:marker0)
-    * label *label30
    53 label *label27
    54 set .press *tmp51
    55 op add :buildBlockFromCfg.1:y .coreY 4
 
    59 set :buildBlock:copper 5
    60 set :buildBlock:lead 20
    61 setaddr :buildBlock*retaddr *label38 (h:*label38)
-    * label *label34
    62 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    63 label *label38
    64 set *tmp55 :buildBlock*retval
    65 jump *label33 always
-    * label *label35
    66 multijump *tmp56 0 0 (m:marker1)
    67 multilabel *label37 (m:marker1)
-    * label *label36
    68 label *label33
    69 set .battery *tmp55
    70 op add :buildBlockFromCfg.2:x .coreX -1
    71 set :buildBlock:x :buildBlockFromCfg.2:x
    72 set :buildBlock:y :buildBlockFromCfg.1:y
    73 setaddr :buildBlock*retaddr *label44 (h:*label44)
-    * label *label40
    74 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    75 label *label44
    76 jump *label39 always
-    * label *label41
    77 multijump *tmp60 0 0 (m:marker2)
    78 multilabel *label43 (m:marker2)
-    * label *label42
    79 label *label39
    80 op add :buildBlockFromCfg.3:y .coreY 3
    81 set :buildBlock:block @combustion-generator
 
    84 set :buildBlock:copper 25
    85 set :buildBlock:lead 15
    86 setaddr :buildBlock*retaddr *label50 (h:*label50)
-    * label *label46
    87 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    88 label *label50
    89 set *tmp63 :buildBlock*retval
    90 jump *label45 always
-    * label *label47
    91 multijump *tmp64 0 0 (m:marker3)
    92 multilabel *label49 (m:marker3)
-    * label *label48
    93 label *label45
    94 set .generator *tmp63
    95 set .powerTarget 800
 
   100 set :buildBlock:copper 30
   101 set :buildBlock:lead 25
   102 setaddr :buildBlock*retaddr *label56 (h:*label56)
-    * label *label52
   103 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   104 label *label56
   105 set *tmp67 :buildBlock*retval
   106 jump *label51 always
-    * label *label53
   107 multijump *tmp68 0 0 (m:marker4)
   108 multilabel *label55 (m:marker4)
-    * label *label54
   109 label *label51
   110 set .smelter *tmp67
   111 set :buildTitaniumDrillCfg:distance 32
 
   144 jump *label68 equal *tmp80 false
   145 jump *label66 always
   146 label *label68
-    * label *label69
   147 op sin *tmp83 :locateOreAway:angle
   148 op mul *tmp84 *tmp83 :locateOreAway:distance
   149 op add *tmp85 .coreX *tmp84
 
   157 label *label71
   158 op add :locateOreAway:distance :locateOreAway:distance 4
   159 op add :locateOreAway:angle :locateOreAway:angle 45
-    * label *label70
-    * label *label65
   160 jump *label64 always
   161 label *label66
-    * label *label63
   162 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   163 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   164 set :moveTo.1:x :locateOreAway:x
 
   172 set :buildTitaniumDrillCfg:dx 0
   173 set :buildTitaniumDrillCfg:dy 0
   174 set :buildTitaniumDrillCfg:searches 0
-    * label *label73
   175 label *label418
   176 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   177 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   178 set :buildTitaniumDrillCfg:best 0
-    * label *label457
   179 set :checkOre:count 0
   180 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   181 jump *label458 notEqual :checkOre:floor @ore-titanium
   182 set :checkOre:count 1
   183 label *label458
-    * label *label459
-    * label *label460
   184 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   185 set :checkOre.1:count :checkOre:count
   186 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   187 jump *label461 notEqual :checkOre.1:floor @ore-titanium
   188 op add :checkOre.1:count :checkOre:count 1
   189 label *label461
-    * label *label462
-    * label *label463
   190 op add *tmp103 :buildTitaniumDrillCfg:ay 1
   191 set :checkOre.2:count :checkOre.1:count
   192 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   193 jump *label464 notEqual :checkOre.2:floor @ore-titanium
   194 op add :checkOre.2:count :checkOre.1:count 1
   195 label *label464
-    * label *label465
-    * label *label466
   196 set :checkOre.3:count :checkOre.2:count
   197 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   198 jump *label467 notEqual :checkOre.3:floor @ore-titanium
   199 op add :checkOre.3:count :checkOre.2:count 1
   200 label *label467
-    * label *label468
-    * label *label469
   201 jump *label472 lessThanEq :checkOre.3:count 0
   202 set :buildTitaniumDrillCfg:dx 1
   203 set :buildTitaniumDrillCfg:dy 1
 
   205 jump *label470 lessThan :checkOre.3:count 4
   206 jump *label75 always
   207 label *label470
-    * label *label471
   208 label *label472
-    * label *label473
-    * label *label474
-    * label *label477
   209 set :checkOre:count 0
   210 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   211 jump *label478 notEqual :checkOre:floor @ore-titanium
   212 set :checkOre:count 1
   213 label *label478
-    * label *label479
-    * label *label480
   214 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   215 set :checkOre.1:count :checkOre:count
   216 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   217 jump *label481 notEqual :checkOre.1:floor @ore-titanium
   218 op add :checkOre.1:count :checkOre:count 1
   219 label *label481
-    * label *label482
-    * label *label483
   220 op add *tmp103 :buildTitaniumDrillCfg:ay -1
   221 set :checkOre.2:count :checkOre.1:count
   222 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   223 jump *label484 notEqual :checkOre.2:floor @ore-titanium
   224 op add :checkOre.2:count :checkOre.1:count 1
   225 label *label484
-    * label *label485
-    * label *label486
   226 set :checkOre.3:count :checkOre.2:count
   227 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   228 jump *label487 notEqual :checkOre.3:floor @ore-titanium
   229 op add :checkOre.3:count :checkOre.2:count 1
   230 label *label487
-    * label *label488
-    * label *label489
   231 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   232 set :buildTitaniumDrillCfg:dx 1
   233 set :buildTitaniumDrillCfg:dy -1
 
   235 jump *label490 lessThan :checkOre.3:count 4
   236 jump *label75 always
   237 label *label490
-    * label *label491
   238 label *label492
-    * label *label493
-    * label *label494
-    * label *label497
   239 set :checkOre:count 0
   240 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   241 jump *label498 notEqual :checkOre:floor @ore-titanium
   242 set :checkOre:count 1
   243 label *label498
-    * label *label499
-    * label *label500
   244 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   245 set :checkOre.1:count :checkOre:count
   246 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   247 jump *label501 notEqual :checkOre.1:floor @ore-titanium
   248 op add :checkOre.1:count :checkOre:count 1
   249 label *label501
-    * label *label502
-    * label *label503
   250 op add *tmp103 :buildTitaniumDrillCfg:ay 1
   251 set :checkOre.2:count :checkOre.1:count
   252 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   253 jump *label504 notEqual :checkOre.2:floor @ore-titanium
   254 op add :checkOre.2:count :checkOre.1:count 1
   255 label *label504
-    * label *label505
-    * label *label506
   256 set :checkOre.3:count :checkOre.2:count
   257 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   258 jump *label507 notEqual :checkOre.3:floor @ore-titanium
   259 op add :checkOre.3:count :checkOre.2:count 1
   260 label *label507
-    * label *label508
-    * label *label509
   261 jump *label512 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   262 set :buildTitaniumDrillCfg:dx -1
   263 set :buildTitaniumDrillCfg:dy 1
 
   265 jump *label510 lessThan :checkOre.3:count 4
   266 jump *label75 always
   267 label *label510
-    * label *label511
   268 label *label512
-    * label *label513
-    * label *label514
-    * label *label517
   269 set :checkOre:count 0
   270 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   271 jump *label518 notEqual :checkOre:floor @ore-titanium
   272 set :checkOre:count 1
   273 label *label518
-    * label *label519
-    * label *label520
   274 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   275 set :checkOre.1:count :checkOre:count
   276 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   277 jump *label521 notEqual :checkOre.1:floor @ore-titanium
   278 op add :checkOre.1:count :checkOre:count 1
   279 label *label521
-    * label *label522
-    * label *label523
   280 op add *tmp103 :buildTitaniumDrillCfg:ay -1
   281 set :checkOre.2:count :checkOre.1:count
   282 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :checkOre.2:floor
   283 jump *label524 notEqual :checkOre.2:floor @ore-titanium
   284 op add :checkOre.2:count :checkOre.1:count 1
   285 label *label524
-    * label *label525
-    * label *label526
   286 set :checkOre.3:count :checkOre.2:count
   287 ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floor
   288 jump *label527 notEqual :checkOre.3:floor @ore-titanium
   289 op add :checkOre.3:count :checkOre.2:count 1
   290 label *label527
-    * label *label528
-    * label *label529
   291 jump *label532 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   292 set :buildTitaniumDrillCfg:dx -1
   293 set :buildTitaniumDrillCfg:dy -1
 
   295 jump *label530 lessThan :checkOre.3:count 4
   296 jump *label75 always
   297 label *label530
-    * label *label531
   298 label *label532
-    * label *label533
-    * label *label534
-    * label *label78
-    * label *label74
   299 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   300 jump *label418 lessThan :buildTitaniumDrillCfg:searches 5
   301 label *label75
 
   325 set *tmp72 :buildBlockAt*retval
   326 jump *label58 always
   327 label *label104
-    * label *label105
   328 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   329 jump *label102 always
   330 label *label101
 
   332 set :buildTitaniumDrillCfg:minimum 3
   333 label *label102
   334 label *label99
-    * label *label100
   335 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   336 jump *label106 lessThanEq :buildTitaniumDrillCfg:attempts 5
   337 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
 
   348 label *label109
   349 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
   350 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
-    * label *label108
   351 set :buildTitaniumDrillCfg:attempts 0
   352 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
   353 op max :buildTitaniumDrillCfg:minimum *tmp147 1
   354 label *label106
-    * label *label107
-    * label *label60
   355 jump *label59 always
-    * label *label61
   356 set *tmp72 null
   357 label *label58
-    * label *label57
   358 set .titaniumDrill *tmp72
   359 write *tmp72 processor1 ".titaniumDrill"
   360 write .core processor3 ".core"
 
   368 set :buildBlock:silicon 30
   369 set :buildBlock:titanium 25
   370 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   371 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   372 label *label115
   373 set *tmp149 :buildBlock*retval
   374 jump *label110 always
-    * label *label112
   375 multijump *tmp150 0 0 (m:marker6)
   376 multilabel *label114 (m:marker6)
-    * label *label113
   377 label *label110
   378 set .unloader1 *tmp149
   379 op add :buildBlockFromCfg.6:x .coreX 1
 
   385 set :buildBlock:silicon 50
   386 set :buildBlock:titanium 0
   387 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   388 set :buildBlock:config processor2
   389 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   390 label *label121
   391 set *tmp153 :buildBlock*retval
   392 jump *label116 always
-    * label *label118
   393 multijump *tmp154 0 0 (m:marker7)
   394 multilabel *label120 (m:marker7)
-    * label *label119
   395 label *label116
   396 set .controller *tmp153
   397 write processor1 *tmp153 ".display"
 
   413 set :buildBlock:silicon 0
   414 set :buildBlock:config null
   415 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   416 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   417 label *label127
   418 jump *label122 always
-    * label *label124
   419 multijump *tmp158 0 0 (m:marker8)
   420 multilabel *label126 (m:marker8)
-    * label *label125
   421 label *label122
   422 op add :buildBlockFromCfg.8:y .coreY 1
   423 set :buildBlock:block @unloader
 
   428 set :buildBlock:silicon 30
   429 set :buildBlock:titanium 25
   430 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   431 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   432 label *label133
   433 set *tmp161 :buildBlock*retval
   434 jump *label128 always
-    * label *label130
   435 multijump *tmp162 0 0 (m:marker9)
   436 multilabel *label132 (m:marker9)
-    * label *label131
   437 label *label128
   438 write *tmp161 *tmp153 ".unloader2"
   439 op add :buildBlockFromCfg.9:x .coreX -3
 
   445 set :buildBlock:silicon 0
   446 set :buildBlock:titanium 0
   447 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   448 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   449 label *label139
   450 jump *label134 always
-    * label *label136
   451 multijump *tmp166 0 0 (m:marker10)
   452 multilabel *label138 (m:marker10)
-    * label *label137
   453 label *label134
   454 op add :buildBlockFromCfg.10:x .coreX -4
   455 set :buildBlock:block @air-factory
 
   460 set :buildBlock:rotation 3
   461 set :buildBlock:config @mono
   462 setaddr :buildBlock*retaddr *label145 (h:*label145)
-    * label *label141
   463 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   464 label *label145
   465 set *tmp169 :buildBlock*retval
   466 jump *label140 always
-    * label *label142
   467 multijump *tmp170 0 0 (m:marker11)
   468 multilabel *label144 (m:marker11)
-    * label *label143
   469 label *label140
   470 set .factory *tmp169
   471 write *tmp169 *tmp153 ".factory"
 
   487 jump *label151 greaterThanEq *tmp174 500
   488 jump *label149 always
   489 label *label151
-    * label *label152
-    * label *label148
   490 read *tmp36 *tmp153 ".monos"
   491 jump *label147 lessThan *tmp36 3
   492 label *label149
 
   502 set :buildBlock:rotation 0
   503 set :buildBlock:config null
   504 setaddr :buildBlock*retaddr *label158 (h:*label158)
-    * label *label154
   505 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   506 label *label158
   507 jump *label153 always
-    * label *label155
   508 multijump *tmp179 0 0 (m:marker12)
   509 multilabel *label157 (m:marker12)
-    * label *label156
   510 label *label153
   511 op add :buildBlock:x .coreX 3.5
   512 op add :buildBlock:y .coreY 0.5
 
   517 set :buildBlock:silicon 0
   518 set :buildBlock:titanium 0
   519 setaddr :buildBlock*retaddr *label164 (h:*label164)
-    * label *label160
   520 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   521 label *label164
   522 set *tmp182 :buildBlock*retval
   523 jump *label159 always
-    * label *label161
   524 multijump *tmp183 0 0 (m:marker13)
   525 multilabel *label163 (m:marker13)
-    * label *label162
   526 label *label159
   527 write *tmp182 *tmp153 ".kiln"
   528 set :buildBlock:block @junction
 
   532 set :buildBlock:lead 0
   533 set :buildBlock:graphite 0
   534 setaddr :buildBlock*retaddr *label170 (h:*label170)
-    * label *label166
   535 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   536 label *label170
   537 jump *label165 always
-    * label *label167
   538 multijump *tmp187 0 0 (m:marker14)
   539 multilabel *label169 (m:marker14)
-    * label *label168
   540 label *label165
   541 op add :buildBlockFromCfg.14:x .coreX -3.5
   542 op add :buildBlock:y .coreY 4.5
 
   547 set :buildBlock:graphite 30
   548 set :buildBlock:metaglass 30
   549 setaddr :buildBlock*retaddr *label176 (h:*label176)
-    * label *label172
   550 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   551 label *label176
   552 jump *label171 always
-    * label *label173
   553 multijump *tmp191 0 0 (m:marker15)
   554 multilabel *label175 (m:marker15)
-    * label *label174
   555 label *label171
   556 set :buildBlock:block @steam-generator
   557 set :buildBlock:x :buildBlockFromCfg.14:x
 
   562 set :buildBlock:silicon 30
   563 set :buildBlock:metaglass 0
   564 setaddr :buildBlock*retaddr *label182 (h:*label182)
-    * label *label178
   565 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   566 label *label182
   567 set *tmp194 :buildBlock*retval
   568 jump *label177 always
-    * label *label179
   569 multijump *tmp195 0 0 (m:marker16)
   570 multilabel *label181 (m:marker16)
-    * label *label180
   571 label *label177
   572 write *tmp194 *tmp153 ".generator2"
   573 set :buildBlock:block @sorter
 
   579 set :buildBlock:silicon 0
   580 set :buildBlock:config @coal
   581 setaddr :buildBlock*retaddr *label188 (h:*label188)
-    * label *label184
   582 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   583 label *label188
   584 jump *label183 always
-    * label *label185
   585 multijump *tmp199 0 0 (m:marker17)
   586 multilabel *label187 (m:marker17)
-    * label *label186
   587 label *label183
   588 write true *tmp153 ".buildUnits"
   589 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)
 
   593 setaddr :supplyBase*retaddr *label193 (h:*label193)
   594 call *label11 *invalid :supplyBase*retval (m:*label193) (h:*label193)
   595 label *label193
-    * label *label191
   596 jump *label190 always
-    * label *label192
   597 ucontrol stop
   598 set .ERROR "Done"
   599 stop
-    * label *label194
   600 end
   601 label *label0
   602 write "Moving..." .display ".status3"
-    * label *label197
   603 op sub *tmp204 :moveTo:radius 0.5
-    * label *label198
   604 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
   605 jump *label200 notEqual *tmp202 false
   606 label *label453
   607 ucontrol approach :moveTo:x :moveTo:y *tmp204
-    * label *label199
   608 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202
   609 jump *label453 equal *tmp202 false
   610 label *label200
-    * label *label196
   611 return :moveTo*retaddr
   612 end
   613 label *label1
 
   617 setaddr :moveTo*retaddr *label202 (h:*label202)
   618 call *label0 *invalid :moveTo*retval (m:*label202) (h:*label202)
   619 label *label202
-    * label *label201
   620 return :moveTo.1*retaddr
   621 end
   622 label *label2
   623 write "Moving..." .display ".status3"
-    * label *label204
   624 label *label205
   625 sensor *tmp207 @unit @firstItem
   626 jump *label208 equal *tmp207 null
   627 ucontrol itemDrop @air 1000
   628 label *label208
-    * label *label209
   629 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label206
   630 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp210
   631 jump *label205 equal *tmp210 false
-    * label *label207
-    * label *label210
   632 sensor *tmp212 @unit @firstItem
   633 jump *label212 equal *tmp212 null
   634 label *label452
   635 ucontrol itemDrop @air 1000
-    * label *label211
   636 sensor *tmp212 @unit @firstItem
   637 jump *label452 notEqual *tmp212 null
   638 label *label212
-    * label *label203
   639 return :moveToEmpty*retaddr
   640 end
   641 label *label3
 
   647 setaddr :moveTo*retaddr *label214 (h:*label214)
   648 call *label0 *invalid :moveTo*retval (m:*label214) (h:*label214)
   649 label *label214
-    * label *label213
   650 return :moveToBlock*retaddr
   651 end
   652 label *label4
   653 write "Depositing..." .display ".status3"
-    * label *label216
   654 sensor *tmp216 @unit @firstItem
   655 jump *label217 notEqual *tmp216 :depositItems:item
   656 set :moveToBlock:block :depositItems:block
 
   661 sensor :depositItems:cap :depositItems:block @itemCapacity
   662 label *label220
   663 ucontrol itemDrop :depositItems:block 30
-    * label *label221
   664 sensor *tmp220 @unit @firstItem
   665 op mul *tmp221 *tmp220 :depositItems:cap
   666 sensor *tmp222 :depositItems:block :depositItems:item
   667 jump *label220 greaterThan *tmp221 *tmp222
-    * label *label222
   668 jump *label218 always
   669 label *label217
-    * label *label223
   670 sensor *tmp224 @unit @firstItem
   671 jump *label225 equal *tmp224 null
   672 label *label454
   673 ucontrol itemDrop @air 1000
-    * label *label224
   674 sensor *tmp224 @unit @firstItem
   675 jump *label454 notEqual *tmp224 null
   676 label *label225
   677 label *label218
   678 write 0 .display ".transportTarget"
   679 write null .display ".transportItem"
-    * label *label226
-    * label *label215
   680 return :depositItems*retaddr
   681 end
   682 label *label5
 
   684 jump *label228 notEqual *tmp226 false
   685 set .ERROR "Cannot locate ore"
   686 stop
-    * label *label230
   687 label *label228
-    * label *label229
-    * label *label227
   688 return :locateOre*retaddr
   689 end
   690 label *label6
   691 op min :mineOre:amount :mineOre:amount 30
   692 write :mineOre:amount .display ".transportTarget"
   693 write :mineOre:ore .display ".transportItem"
-    * label *label232
   694 set :locateOre:ore :mineOre:ore
   695 setaddr :locateOre*retaddr *label233 (h:*label233)
   696 call *label5 *invalid :locateOre*retval (m:*label233) (h:*label233)
 
   703 call *label2 *invalid :moveToEmpty*retval (m:*label234) (h:*label234)
   704 label *label234
   705 write "Mining..." .display ".status3"
-    * label *label235
   706 op add :mineOre:stop @second 10
   707 label *label236
   708 sensor :mineOre:item @unit @firstItem
 
   712 jump *label239 equal *tmp235 false
   713 jump *label238 always
   714 label *label239
-    * label *label240
   715 ucontrol mine :mineOre:x :mineOre:y
   716 jump *label241 lessThanEq @second :mineOre:stop
   717 jump *label238 always
   718 label *label241
-    * label *label242
-    * label *label237
   719 sensor *tmp239 @unit @totalItems
   720 jump *label236 lessThan *tmp239 :mineOre:amount
   721 label *label238
 
   725 setaddr :depositItems*retaddr *label243 (h:*label243)
   726 call *label4 *invalid :depositItems*retval (m:*label243) (h:*label243)
   727 label *label243
-    * label *label231
   728 return :mineOre*retaddr
   729 end
   730 label *label7
   731 write "Mining " .display ".status2"
   732 write :mineOre.1:ore .display ".item2"
   733 write "core" .display ".block2"
-    * label *label245
   734 set :mineOre:ore :mineOre.1:ore
   735 set :mineOre:amount 30
   736 set :mineOre:block .core
   737 setaddr :mineOre*retaddr *label246 (h:*label246)
   738 call *label6 *invalid :mineOre*retval (m:*label246) (h:*label246)
   739 label *label246
-    * label *label244
   740 return :mineOre.1*retaddr
   741 end
   742 label *label8
   743 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   744 write :transportStatus.2:target .display ".transportTarget"
   745 write :fetchBlock:item .display ".transportItem"
-    * label *label248
   746 write "Fetching " .display ".status2"
   747 write :fetchBlock:item .display ".item2"
   748 write :fetchBlock:block .display ".block2"
-    * label *label249
   749 sensor *tmp243 :fetchBlock:block @x
   750 sensor *tmp244 :fetchBlock:block @y
   751 set :moveToEmpty:x *tmp243
 
   762 jump *label254 equal *tmp248 false
   763 ucontrol itemDrop @air 1000
   764 label *label254
-    * label *label255
-    * label *label252
   765 sensor *tmp250 @unit :fetchBlock:item
   766 op lessThan *tmp251 *tmp250 30
   767 sensor *tmp252 :fetchBlock:block :fetchBlock:item
   768 op land *tmp253 *tmp251 *tmp252
   769 jump *label251 notEqual *tmp253 false
-    * label *label253
   770 set :depositItems:block .core
   771 set :depositItems:item :fetchBlock:item
   772 setaddr :depositItems*retaddr *label256 (h:*label256)
   773 call *label4 *invalid :depositItems*retval (m:*label256) (h:*label256)
   774 label *label256
-    * label *label247
   775 return :fetchBlock*retaddr
   776 end
   777 label *label9
 
   782 sensor *tmp259 .press @coal
   783 jump *label262 greaterThanEq *tmp259 5
   784 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label264
   785 write "Supplying " .display ".status2"
   786 write @coal .display ".item2"
   787 write .press .display ".block2"
-    * label *label266
   788 sensor :supplyBlock:blockCapacity .press @itemCapacity
   789 sensor *tmp263 .press @coal
   790 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp263
 
   796 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
   797 label *label269
   798 label *label267
-    * label *label268
-    * label *label265
   799 set :supplyBase0:supplied true
   800 label *label262
-    * label *label263
   801 label *label260
-    * label *label261
   802 sensor *tmp267 .core @silicon
   803 jump *label270 greaterThanEq *tmp267 .targetSilicon
   804 sensor *tmp270 .smelter @coal
   805 jump *label272 greaterThanEq *tmp270 5
   806 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label274
   807 write "Supplying " .display ".status2"
   808 write @coal .display ".item2"
   809 write .smelter .display ".block2"
-    * label *label276
   810 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   811 sensor *tmp274 .smelter @coal
   812 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp274
 
   818 call *label6 *invalid :mineOre*retval (m:*label279) (h:*label279)
   819 label *label279
   820 label *label277
-    * label *label278
-    * label *label275
   821 set :supplyBase0:supplied true
   822 jump *label273 always
   823 label *label272
   824 sensor *tmp278 .smelter @sand
   825 jump *label280 greaterThanEq *tmp278 5
   826 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label282
   827 write "Supplying " .display ".status2"
   828 write @sand .display ".item2"
   829 write .smelter .display ".block2"
-    * label *label284
   830 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   831 sensor *tmp282 .smelter @sand
   832 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp282
 
   838 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
   839 label *label287
   840 label *label285
-    * label *label286
-    * label *label283
   841 set :supplyBase0:supplied true
   842 label *label280
-    * label *label281
   843 label *label273
   844 label *label270
-    * label *label271
   845 sensor *tmp286 .battery @totalPower
   846 jump *label288 greaterThanEq *tmp286 .powerTarget
   847 sensor *tmp289 .generator @coal
   848 jump *label290 greaterThanEq *tmp289 2
   849 write "Goal 4: supplying generator" .display ".status1"
-    * label *label292
   850 write "Supplying " .display ".status2"
   851 write @coal .display ".item2"
   852 write .generator .display ".block2"
-    * label *label294
   853 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   854 sensor *tmp293 .generator @coal
   855 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp293
 
   861 call *label6 *invalid :mineOre*retval (m:*label297) (h:*label297)
   862 label *label297
   863 label *label295
-    * label *label296
-    * label *label293
   864 set :supplyBase0:supplied true
   865 label *label290
-    * label *label291
   866 label *label288
-    * label *label289
   867 label *label258
-    * label *label259
   868 set *tmp299 100
   869 sensor *tmp297 .core @titanium
   870 jump *label299 greaterThanEq *tmp297 .targetTitanium
 
   879 op mul *tmp309 .unloader1 .powerTarget
   880 jump *label304 greaterThanEq *tmp308 *tmp309
   881 write "Goal 5: supplying generator" .display ".status1"
-    * label *label306
   882 set :mineOre.1:ore @coal
   883 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   884 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
 
   888 sensor *tmp312 .core @silicon
   889 jump *label308 greaterThanEq *tmp312 .targetSilicon
   890 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label310
   891 sensor :supplyBase0:coal .core @coal
   892 sensor :supplyBase0:sand .core @sand
   893 set :mineOre.1:ore @sand
 
   902 sensor *tmp319 .core @copper
   903 jump *label314 greaterThanEq *tmp319 .targetCopper
   904 write "Goal 7: copper requirement" .display ".status1"
-    * label *label316
   905 set :mineOre.1:ore @copper
   906 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   907 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
 
   911 sensor *tmp322 .core @lead
   912 jump *label318 greaterThanEq *tmp322 .targetLead
   913 write "Goal 8: lead requirement" .display ".status1"
-    * label *label320
   914 set :mineOre.1:ore @lead
   915 setaddr :mineOre.1*retaddr *label321 (h:*label321)
   916 call *label7 *invalid :mineOre.1*retval (m:*label321) (h:*label321)
 
   920 sensor *tmp325 .core @metaglass
   921 jump *label322 greaterThanEq *tmp325 .targetMetaglass
   922 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label324
   923 set :mineOre.1:ore @sand
   924 setaddr :mineOre.1*retaddr *label325 (h:*label325)
   925 call *label7 *invalid :mineOre.1*retval (m:*label325) (h:*label325)
 
   927 jump *label323 always
   928 label *label322
   929 write "Goal 10: supplying base" .display ".status1"
-    * label *label326
   930 sensor :supplyBase0:coal.1 .core @coal
   931 sensor :supplyBase0:sand.1 .core @sand
   932 set :mineOre.1:ore @sand
 
   942 label *label309
   943 label *label305
   944 label *label302
-    * label *label303
   945 jump *label301 always
   946 label *label300
   947 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label330
   948 set :fetchBlock:block .titaniumDrill
   949 set :fetchBlock:item @titanium
   950 setaddr :fetchBlock*retaddr *label331 (h:*label331)
   951 call *label8 *invalid :fetchBlock*retval (m:*label331) (h:*label331)
   952 label *label331
   953 label *label301
-    * label *label257
   954 return :supplyBase0*retaddr
   955 end
   956 label *label10
 
   961 sensor *tmp337 .core @lead
   962 jump *label335 greaterThanEq *tmp336 *tmp337
   963 write "Phase 1: mining sand" .display ".status1"
-    * label *label337
   964 set :mineOre.1:ore @sand
   965 setaddr :mineOre.1*retaddr *label338 (h:*label338)
   966 call *label7 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
 
   968 jump *label336 always
   969 label *label335
   970 write "Phase 1: mining lead" .display ".status1"
-    * label *label339
   971 set :mineOre.1:ore @lead
   972 setaddr :mineOre.1*retaddr *label340 (h:*label340)
   973 call *label7 *invalid :mineOre.1*retval (m:*label340) (h:*label340)
 
   979 sensor *tmp341 .core @lead
   980 jump *label341 greaterThanEq *tmp340 *tmp341
   981 write "Phase 1: mining coal" .display ".status1"
-    * label *label343
   982 set :mineOre.1:ore @coal
   983 setaddr :mineOre.1*retaddr *label344 (h:*label344)
   984 call *label7 *invalid :mineOre.1*retval (m:*label344) (h:*label344)
 
   986 jump *label342 always
   987 label *label341
   988 write "Phase 1: mining lead" .display ".status1"
-    * label *label345
   989 set :mineOre.1:ore @lead
   990 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   991 call *label7 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
   992 label *label346
   993 label *label342
   994 label *label334
-    * label *label332
   995 return :supplyBase1*retaddr
   996 end
   997 label *label11
   998 jump *label349 notEqual .phase 0
-    * label *label350
   999 setaddr :supplyBase0*retaddr *label351 (h:*label351)
  1000 call *label9 *invalid :supplyBase0*retval (m:*label351) (h:*label351)
  1001 label *label351
  1002 jump *label348 always
  1003 label *label349
  1004 jump *label352 notEqual .phase 1
-    * label *label353
  1005 setaddr :supplyBase1*retaddr *label354 (h:*label354)
  1006 call *label10 *invalid :supplyBase1*retval (m:*label354) (h:*label354)
  1007 label *label354
  1008 label *label352
  1009 label *label348
-    * label *label347
  1010 return :supplyBase*retaddr
  1011 end
  1012 label *label12
 
  1025 set :targetMet*retval true
  1026 jump *label355 always
  1027 label *label366
-    * label *label367
  1028 label *label364
-    * label *label365
  1029 label *label362
-    * label *label363
  1030 label *label360
-    * label *label361
  1031 label *label358
-    * label *label359
  1032 label *label356
-    * label *label357
  1033 set :targetMet*retval false
  1034 jump *label355 always
  1035 label *label355
  1036 return :targetMet*retaddr
  1037 end
  1038 label *label13
-    * label *label419
  1039 op sign :meetTarget:count :meetTarget:copper
-    * label *label420
-    * label *label423
  1040 op sign *tmp365 :meetTarget:lead
  1041 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label424
-    * label *label427
  1042 op sign *tmp365 :meetTarget:graphite
  1043 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label428
-    * label *label431
  1044 op sign *tmp365 :meetTarget:silicon
  1045 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label432
-    * label *label435
  1046 op sign *tmp365 :meetTarget:titanium
  1047 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label436
-    * label *label439
  1048 op sign *tmp365 :meetTarget:metaglass
  1049 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label440
-    * label *label443
  1050 op sign *tmp365 :meetTarget:leadFactory
  1051 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label444
-    * label *label447
  1052 op sign *tmp365 :meetTarget:siliconFactory
  1053 op add :meetTarget:count :meetTarget:count *tmp365
-    * label *label448
-    * label *label371
  1054 write :meetTarget:count .display ".totalTargets"
  1055 write :meetTarget:block .display ".nextBlock"
  1056 write :meetTarget:copper .display ".targetCopper"
 
  1075 jump *label381 lessThanEq :meetTarget:siliconFactory 0
  1076 set .leadSiliconBlock .factory
  1077 label *label381
-    * label *label382
  1078 setaddr :targetMet*retaddr *label385 (h:*label385)
  1079 call *label12 *invalid :targetMet*retval (m:*label385) (h:*label385)
  1080 label *label385
 
  1083 setaddr :supplyBase*retaddr *label386 (h:*label386)
  1084 call *label11 *invalid :supplyBase*retval (m:*label386) (h:*label386)
  1085 label *label386
-    * label *label383
  1086 setaddr :targetMet*retaddr *label456 (h:*label456)
  1087 call *label12 *invalid :targetMet*retval (m:*label456) (h:*label456)
  1088 label *label456
  1089 jump *label455 equal :targetMet*retval false
  1090 label *label384
-    * label *label368
  1091 return :meetTarget*retaddr
  1092 end
  1093 label *label14
 
  1098 op mul *tmp378 *tmp377 1000
  1099 op add *tmp379 :log:encodedId *tmp378
  1100 write *tmp379 bank1 *tmp374
-    * label *label387
  1101 return :log*retaddr
  1102 end
  1103 label *label15
 
  1105 setaddr :log*retaddr *label389 (h:*label389)
  1106 call *label14 *invalid :log*retval (m:*label389) (h:*label389)
  1107 label *label389
-    * label *label388
  1108 return :logBlock*retaddr
  1109 end
  1110 label *label17
 
  1114 call *label1 *invalid :moveTo.1*retval (m:*label393) (h:*label393)
  1115 label *label393
  1116 write "Building..." .display ".status3"
-    * label *label394
  1117 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1118 jump *label395 equal :buildBlockAt:building null
  1119 jump *label397 notEqual :buildBlockAt:type :buildBlockAt:block
  1120 set :buildBlockAt*retval :buildBlockAt:building
  1121 jump *label392 always
  1122 label *label397
-    * label *label398
  1123 jump *label399 equal :buildBlockAt:skipError false
  1124 set :buildBlockAt*retval null
  1125 jump *label392 always
  1126 label *label399
-    * label *label400
  1127 set .ERROR "Cannot build at ("
  1128 stop
-    * label *label401
  1129 label *label395
-    * label *label396
  1130 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1131 wait 0.25
  1132 label *label402
 
  1134 jump *label405 notEqual :buildBlockAt:building null
  1135 jump *label404 always
  1136 label *label405
-    * label *label406
-    * label *label403
  1137 jump *label402 notEqual :buildBlockAt:type :buildBlockAt:block
  1138 label *label404
  1139 set :logBlock:block :buildBlockAt:block
 
  1167 call *label17 *invalid :buildBlockAt*retval (m:*label410) (h:*label410)
  1168 label *label410
  1169 set :buildBlock*retval :buildBlockAt*retval
-    * label *label408
  1170 return :buildBlock*retaddr
  1171 end
  1172 label *label19
 
  1177 label *label414
  1178 op add :findUnits:count :findUnits:count 1
  1179 ubind :findUnits:type
-    * label *label415
  1180 jump *label414 notEqual @unit :findUnits:firstUnit
-    * label *label416
  1181 label *label412
-    * label *label413
  1182 set :findUnits*retval :findUnits:count
-    * label *label411
  1183 return :findUnits*retaddr
  1184 end
  1185 label *label20
  1186 write 0 .display ".totalTargets"
  1187 write null .display ".nextBlock"
-    * label *label417
  1188 return :displayUnitBuilds*retaddr
  1189 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-9 instructions):
 
   141 op abs *tmp78 *tmp77
   142 op greaterThanEq *tmp79 *tmp78 10
   143 op or *tmp80 *tmp76 *tmp79
-    * jump *label68 equal *tmp80 false
-    * jump *label66 always
+  144 jump *label66 notEqual *tmp80 false
   145 label *label68
   146 op sin *tmp83 :locateOreAway:angle
   147 op mul *tmp84 *tmp83 :locateOreAway:distance
 
   201 set :buildTitaniumDrillCfg:dx 1
   202 set :buildTitaniumDrillCfg:dy 1
   203 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label470 lessThan :checkOre.3:count 4
-    * jump *label75 always
+  204 jump *label75 greaterThanEq :checkOre.3:count 4
   205 label *label470
   206 label *label472
   207 set :checkOre:count 0
 
   230 set :buildTitaniumDrillCfg:dx 1
   231 set :buildTitaniumDrillCfg:dy -1
   232 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label490 lessThan :checkOre.3:count 4
-    * jump *label75 always
+  233 jump *label75 greaterThanEq :checkOre.3:count 4
   234 label *label490
   235 label *label492
   236 set :checkOre:count 0
 
   259 set :buildTitaniumDrillCfg:dx -1
   260 set :buildTitaniumDrillCfg:dy 1
   261 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label510 lessThan :checkOre.3:count 4
-    * jump *label75 always
+  262 jump *label75 greaterThanEq :checkOre.3:count 4
   263 label *label510
   264 label *label512
   265 set :checkOre:count 0
 
   288 set :buildTitaniumDrillCfg:dx -1
   289 set :buildTitaniumDrillCfg:dy -1
   290 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label530 lessThan :checkOre.3:count 4
-    * jump *label75 always
+  291 jump *label75 greaterThanEq :checkOre.3:count 4
   292 label *label530
   293 label *label532
   294 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
 
   479 call *label10 *invalid :supplyBase1*retval (m:*label150) (h:*label150)
   480 label *label150
   481 sensor *tmp174 *tmp55 @totalPower
-    * jump *label151 greaterThanEq *tmp174 500
-    * jump *label149 always
+  482 jump *label149 lessThan *tmp174 500
   483 label *label151
   484 read *tmp36 *tmp153 ".monos"
   485 jump *label147 lessThan *tmp36 3
 
   703 op notEqual *tmp233 :mineOre:item null
   704 op notEqual *tmp234 :mineOre:item :mineOre:ore
   705 op land *tmp235 *tmp233 *tmp234
-    * jump *label239 equal *tmp235 false
-    * jump *label238 always
+  706 jump *label238 notEqual *tmp235 false
   707 label *label239
   708 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label241 lessThanEq @second :mineOre:stop
-    * jump *label238 always
+  709 jump *label238 greaterThan @second :mineOre:stop
   710 label *label241
   711 sensor *tmp239 @unit @totalItems
   712 jump *label236 lessThan *tmp239 :mineOre:amount
 
  1123 wait 0.25
  1124 label *label402
  1125 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label405 notEqual :buildBlockAt:building null
-    * jump *label404 always
+ 1126 jump *label404 equal :buildBlockAt:building null
  1127 label *label405
  1128 jump *label402 notEqual :buildBlockAt:type :buildBlockAt:block
  1129 label *label404

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   142 op greaterThanEq *tmp79 *tmp78 10
   143 op or *tmp80 *tmp76 *tmp79
   144 jump *label66 notEqual *tmp80 false
-    * label *label68
   145 op sin *tmp83 :locateOreAway:angle
   146 op mul *tmp84 *tmp83 :locateOreAway:distance
   147 op add *tmp85 .coreX *tmp84
 
   201 set :buildTitaniumDrillCfg:dy 1
   202 set :buildTitaniumDrillCfg:best :checkOre.3:count
   203 jump *label75 greaterThanEq :checkOre.3:count 4
-    * label *label470
   204 label *label472
   205 set :checkOre:count 0
   206 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   229 set :buildTitaniumDrillCfg:dy -1
   230 set :buildTitaniumDrillCfg:best :checkOre.3:count
   231 jump *label75 greaterThanEq :checkOre.3:count 4
-    * label *label490
   232 label *label492
   233 set :checkOre:count 0
   234 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   257 set :buildTitaniumDrillCfg:dy 1
   258 set :buildTitaniumDrillCfg:best :checkOre.3:count
   259 jump *label75 greaterThanEq :checkOre.3:count 4
-    * label *label510
   260 label *label512
   261 set :checkOre:count 0
   262 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   285 set :buildTitaniumDrillCfg:dy -1
   286 set :buildTitaniumDrillCfg:best :checkOre.3:count
   287 jump *label75 greaterThanEq :checkOre.3:count 4
-    * label *label530
   288 label *label532
   289 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   290 jump *label418 lessThan :buildTitaniumDrillCfg:searches 5
 
   475 label *label150
   476 sensor *tmp174 *tmp55 @totalPower
   477 jump *label149 lessThan *tmp174 500
-    * label *label151
   478 read *tmp36 *tmp153 ".monos"
   479 jump *label147 lessThan *tmp36 3
   480 label *label149
 
   698 op notEqual *tmp234 :mineOre:item :mineOre:ore
   699 op land *tmp235 *tmp233 *tmp234
   700 jump *label238 notEqual *tmp235 false
-    * label *label239
   701 ucontrol mine :mineOre:x :mineOre:y
   702 jump *label238 greaterThan @second :mineOre:stop
-    * label *label241
   703 sensor *tmp239 @unit @totalItems
   704 jump *label236 lessThan *tmp239 :mineOre:amount
   705 label *label238
 
  1116 label *label402
  1117 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1118 jump *label404 equal :buildBlockAt:building null
-    * label *label405
  1119 jump *label402 notEqual :buildBlockAt:type :buildBlockAt:block
  1120 label *label404
  1121 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   323 label *label102
   324 label *label99
   325 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label106 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  326 jump *label59 lessThanEq :buildTitaniumDrillCfg:attempts 5
   327 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   328 op sin *tmp141 :locateOreAway:angle
   329 op mul *tmp142 *tmp141 :locateOreAway:distance
 
   858 label *label299
   859 sensor *tmp303 .titaniumDrill @titanium
   860 jump *label300 greaterThanEq *tmp303 *tmp299
-    * jump *label302 notEqual :supplyBase0:supplied false
+  861 jump *label301 notEqual :supplyBase0:supplied false
   862 sensor *tmp308 .battery @totalPower
   863 op mul *tmp309 .unloader1 .powerTarget
   864 jump *label304 greaterThanEq *tmp308 *tmp309
 
   867 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   868 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   869 label *label307
-    * jump *label305 always
+  870 return :supplyBase0*retaddr
   871 label *label304
   872 sensor *tmp312 .core @silicon
   873 jump *label308 greaterThanEq *tmp312 .targetSilicon
 
   881 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   882 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
   883 label *label313
-    * jump *label309 always
+  884 return :supplyBase0*retaddr
   885 label *label308
   886 sensor *tmp319 .core @copper
   887 jump *label314 greaterThanEq *tmp319 .targetCopper
 
   890 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   891 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
   892 label *label317
-    * jump *label315 always
+  893 return :supplyBase0*retaddr
   894 label *label314
   895 sensor *tmp322 .core @lead
   896 jump *label318 greaterThanEq *tmp322 .targetLead
 
   899 setaddr :mineOre.1*retaddr *label321 (h:*label321)
   900 call *label7 *invalid :mineOre.1*retval (m:*label321) (h:*label321)
   901 label *label321
-    * jump *label319 always
+  902 return :supplyBase0*retaddr
   903 label *label318
   904 sensor *tmp325 .core @metaglass
   905 jump *label322 greaterThanEq *tmp325 .targetMetaglass
 
   908 setaddr :mineOre.1*retaddr *label325 (h:*label325)
   909 call *label7 *invalid :mineOre.1*retval (m:*label325) (h:*label325)
   910 label *label325
-    * jump *label323 always
+  911 return :supplyBase0*retaddr
   912 label *label322
   913 write "Goal 10: supplying base" .display ".status1"
   914 sensor :supplyBase0:coal.1 .core @coal
 
   926 label *label309
   927 label *label305
   928 label *label302
-    * jump *label301 always
+  929 return :supplyBase0*retaddr
   930 label *label300
   931 write "Goal 11: Fetching titanium" .display ".status1"
   932 set :fetchBlock:block .titaniumDrill
 
   949 setaddr :mineOre.1*retaddr *label338 (h:*label338)
   950 call *label7 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
   951 label *label338
-    * jump *label336 always
+  952 return :supplyBase1*retaddr
   953 label *label335
   954 write "Phase 1: mining lead" .display ".status1"
   955 set :mineOre.1:ore @lead
 
   957 call *label7 *invalid :mineOre.1*retval (m:*label340) (h:*label340)
   958 label *label340
   959 label *label336
-    * jump *label334 always
+  960 return :supplyBase1*retaddr
   961 label *label333
   962 sensor *tmp340 .core @coal
   963 sensor *tmp341 .core @lead
 
   967 setaddr :mineOre.1*retaddr *label344 (h:*label344)
   968 call *label7 *invalid :mineOre.1*retval (m:*label344) (h:*label344)
   969 label *label344
-    * jump *label342 always
+  970 return :supplyBase1*retaddr
   971 label *label341
   972 write "Phase 1: mining lead" .display ".status1"
   973 set :mineOre.1:ore @lead
 
   983 setaddr :supplyBase0*retaddr *label351 (h:*label351)
   984 call *label9 *invalid :supplyBase0*retval (m:*label351) (h:*label351)
   985 label *label351
-    * jump *label348 always
+  986 return :supplyBase*retaddr
   987 label *label349
   988 jump *label352 notEqual .phase 1
   989 setaddr :supplyBase1*retaddr *label354 (h:*label354)
 
  1007 sensor *tmp361 .core @metaglass
  1008 jump *label366 lessThan *tmp361 .targetMetaglass
  1009 set :targetMet*retval true
-    * jump *label355 always
+ 1010 return :targetMet*retaddr
  1011 label *label366
  1012 label *label364
  1013 label *label362
 
  1015 label *label358
  1016 label *label356
  1017 set :targetMet*retval false
-    * jump *label355 always
+ 1018 return :targetMet*retaddr
  1019 label *label355
  1020 return :targetMet*retaddr
  1021 end
 
  1102 jump *label395 equal :buildBlockAt:building null
  1103 jump *label397 notEqual :buildBlockAt:type :buildBlockAt:block
  1104 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label392 always
+ 1105 return :buildBlockAt*retaddr
  1106 label *label397
  1107 jump *label399 equal :buildBlockAt:skipError false
  1108 set :buildBlockAt*retval null
-    * jump *label392 always
+ 1109 return :buildBlockAt*retaddr
  1110 label *label399
  1111 set .ERROR "Cannot build at ("
  1112 stop

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-43 instructions):
 
    48 label *label32
    49 set *tmp51 :buildBlock*retval
    50 jump *label27 always
-    * multijump *tmp52 0 0 (m:marker0)
-    * multilabel *label31 (m:marker0)
    51 label *label27
    52 set .press *tmp51
    53 op add :buildBlockFromCfg.1:y .coreY 4
 
    61 label *label38
    62 set *tmp55 :buildBlock*retval
    63 jump *label33 always
-    * multijump *tmp56 0 0 (m:marker1)
-    * multilabel *label37 (m:marker1)
    64 label *label33
    65 set .battery *tmp55
    66 op add :buildBlockFromCfg.2:x .coreX -1
 
    70 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    71 label *label44
    72 jump *label39 always
-    * multijump *tmp60 0 0 (m:marker2)
-    * multilabel *label43 (m:marker2)
    73 label *label39
    74 op add :buildBlockFromCfg.3:y .coreY 3
    75 set :buildBlock:block @combustion-generator
 
    82 label *label50
    83 set *tmp63 :buildBlock*retval
    84 jump *label45 always
-    * multijump *tmp64 0 0 (m:marker3)
-    * multilabel *label49 (m:marker3)
    85 label *label45
    86 set .generator *tmp63
    87 set .powerTarget 800
 
    96 label *label56
    97 set *tmp67 :buildBlock*retval
    98 jump *label51 always
-    * multijump *tmp68 0 0 (m:marker4)
-    * multilabel *label55 (m:marker4)
    99 label *label51
   100 set .smelter *tmp67
   101 set :buildTitaniumDrillCfg:distance 32
 
   331 set :buildTitaniumDrillCfg:attempts 0
   332 op sub *tmp147 :buildTitaniumDrillCfg:minimum 1
   333 op max :buildTitaniumDrillCfg:minimum *tmp147 1
-    * label *label106
   334 jump *label59 always
-    * set *tmp72 null
   335 label *label58
   336 set .titaniumDrill *tmp72
   337 write *tmp72 processor1 ".titaniumDrill"
 
   350 label *label115
   351 set *tmp149 :buildBlock*retval
   352 jump *label110 always
-    * multijump *tmp150 0 0 (m:marker6)
-    * multilabel *label114 (m:marker6)
   353 label *label110
   354 set .unloader1 *tmp149
   355 op add :buildBlockFromCfg.6:x .coreX 1
 
   366 label *label121
   367 set *tmp153 :buildBlock*retval
   368 jump *label116 always
-    * multijump *tmp154 0 0 (m:marker7)
-    * multilabel *label120 (m:marker7)
   369 label *label116
   370 set .controller *tmp153
   371 write processor1 *tmp153 ".display"
 
   390 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   391 label *label127
   392 jump *label122 always
-    * multijump *tmp158 0 0 (m:marker8)
-    * multilabel *label126 (m:marker8)
   393 label *label122
   394 op add :buildBlockFromCfg.8:y .coreY 1
   395 set :buildBlock:block @unloader
 
   404 label *label133
   405 set *tmp161 :buildBlock*retval
   406 jump *label128 always
-    * multijump *tmp162 0 0 (m:marker9)
-    * multilabel *label132 (m:marker9)
   407 label *label128
   408 write *tmp161 *tmp153 ".unloader2"
   409 op add :buildBlockFromCfg.9:x .coreX -3
 
   418 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   419 label *label139
   420 jump *label134 always
-    * multijump *tmp166 0 0 (m:marker10)
-    * multilabel *label138 (m:marker10)
   421 label *label134
   422 op add :buildBlockFromCfg.10:x .coreX -4
   423 set :buildBlock:block @air-factory
 
   432 label *label145
   433 set *tmp169 :buildBlock*retval
   434 jump *label140 always
-    * multijump *tmp170 0 0 (m:marker11)
-    * multilabel *label144 (m:marker11)
   435 label *label140
   436 set .factory *tmp169
   437 write *tmp169 *tmp153 ".factory"
 
   469 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   470 label *label158
   471 jump *label153 always
-    * multijump *tmp179 0 0 (m:marker12)
-    * multilabel *label157 (m:marker12)
   472 label *label153
   473 op add :buildBlock:x .coreX 3.5
   474 op add :buildBlock:y .coreY 0.5
 
   483 label *label164
   484 set *tmp182 :buildBlock*retval
   485 jump *label159 always
-    * multijump *tmp183 0 0 (m:marker13)
-    * multilabel *label163 (m:marker13)
   486 label *label159
   487 write *tmp182 *tmp153 ".kiln"
   488 set :buildBlock:block @junction
 
   495 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   496 label *label170
   497 jump *label165 always
-    * multijump *tmp187 0 0 (m:marker14)
-    * multilabel *label169 (m:marker14)
   498 label *label165
   499 op add :buildBlockFromCfg.14:x .coreX -3.5
   500 op add :buildBlock:y .coreY 4.5
 
   508 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   509 label *label176
   510 jump *label171 always
-    * multijump *tmp191 0 0 (m:marker15)
-    * multilabel *label175 (m:marker15)
   511 label *label171
   512 set :buildBlock:block @steam-generator
   513 set :buildBlock:x :buildBlockFromCfg.14:x
 
   522 label *label182
   523 set *tmp194 :buildBlock*retval
   524 jump *label177 always
-    * multijump *tmp195 0 0 (m:marker16)
-    * multilabel *label181 (m:marker16)
   525 label *label177
   526 write *tmp194 *tmp153 ".generator2"
   527 set :buildBlock:block @sorter
 
   536 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   537 label *label188
   538 jump *label183 always
-    * multijump *tmp199 0 0 (m:marker17)
-    * multilabel *label187 (m:marker17)
   539 label *label183
   540 write true *tmp153 ".buildUnits"
   541 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)
 
   546 call *label11 *invalid :supplyBase*retval (m:*label193) (h:*label193)
   547 label *label193
   548 jump *label190 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   549 label *label0
   550 write "Moving..." .display ".status3"
   551 op sub *tmp204 :moveTo:radius 0.5
 
   557 jump *label453 equal *tmp202 false
   558 label *label200
   559 return :moveTo*retaddr
-    * end
   560 label *label1
   561 set :moveTo:x :moveTo.1:x
   562 set :moveTo:y :moveTo.1:y
 
   565 call *label0 *invalid :moveTo*retval (m:*label202) (h:*label202)
   566 label *label202
   567 return :moveTo.1*retaddr
-    * end
   568 label *label2
   569 write "Moving..." .display ".status3"
   570 label *label205
 
   583 jump *label452 notEqual *tmp212 null
   584 label *label212
   585 return :moveToEmpty*retaddr
-    * end
   586 label *label3
   587 sensor *tmp214 :moveToBlock:block @x
   588 sensor *tmp215 :moveToBlock:block @y
 
   593 call *label0 *invalid :moveTo*retval (m:*label214) (h:*label214)
   594 label *label214
   595 return :moveToBlock*retaddr
-    * end
   596 label *label4
   597 write "Depositing..." .display ".status3"
   598 sensor *tmp216 @unit @firstItem
 
   622 write 0 .display ".transportTarget"
   623 write null .display ".transportItem"
   624 return :depositItems*retaddr
-    * end
   625 label *label5
   626 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp226 0
   627 jump *label228 notEqual *tmp226 false
 
   629 stop
   630 label *label228
   631 return :locateOre*retaddr
-    * end
   632 label *label6
   633 op min :mineOre:amount :mineOre:amount 30
   634 write :mineOre:amount .display ".transportTarget"
 
   664 call *label4 *invalid :depositItems*retval (m:*label243) (h:*label243)
   665 label *label243
   666 return :mineOre*retaddr
-    * end
   667 label *label7
   668 write "Mining " .display ".status2"
   669 write :mineOre.1:ore .display ".item2"
 
   675 call *label6 *invalid :mineOre*retval (m:*label246) (h:*label246)
   676 label *label246
   677 return :mineOre.1*retaddr
-    * end
   678 label *label8
   679 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   680 write :transportStatus.2:target .display ".transportTarget"
 
   709 call *label4 *invalid :depositItems*retval (m:*label256) (h:*label256)
   710 label *label256
   711 return :fetchBlock*retaddr
-    * end
   712 label *label9
   713 set :supplyBase0:supplied false
   714 jump *label258 notEqual .unloader1 null
 
   871 setaddr :mineOre.1*retaddr *label329 (h:*label329)
   872 call *label7 *invalid :mineOre.1*retval (m:*label329) (h:*label329)
   873 label *label329
-    * label *label323
-    * label *label319
-    * label *label315
-    * label *label309
-    * label *label305
-    * label *label302
   874 return :supplyBase0*retaddr
   875 label *label300
   876 write "Goal 11: Fetching titanium" .display ".status1"
 
   881 label *label331
   882 label *label301
   883 return :supplyBase0*retaddr
-    * end
   884 label *label10
   885 sensor *tmp332 .core @sand
   886 sensor *tmp333 .core @coal
 
   900 setaddr :mineOre.1*retaddr *label340 (h:*label340)
   901 call *label7 *invalid :mineOre.1*retval (m:*label340) (h:*label340)
   902 label *label340
-    * label *label336
   903 return :supplyBase1*retaddr
   904 label *label333
   905 sensor *tmp340 .core @coal
 
   917 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   918 call *label7 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
   919 label *label346
-    * label *label342
-    * label *label334
   920 return :supplyBase1*retaddr
-    * end
   921 label *label11
   922 jump *label349 notEqual .phase 0
   923 setaddr :supplyBase0*retaddr *label351 (h:*label351)
 
   930 call *label10 *invalid :supplyBase1*retval (m:*label354) (h:*label354)
   931 label *label354
   932 label *label352
-    * label *label348
   933 return :supplyBase*retaddr
-    * end
   934 label *label12
   935 sensor *tmp346 .core @copper
   936 jump *label356 lessThan *tmp346 .targetCopper
 
   954 label *label356
   955 set :targetMet*retval false
   956 return :targetMet*retaddr
-    * label *label355
-    * return :targetMet*retaddr
-    * end
   957 label *label13
   958 op sign :meetTarget:count :meetTarget:copper
   959 op sign *tmp365 :meetTarget:lead
 
  1008 jump *label455 equal :targetMet*retval false
  1009 label *label384
  1010 return :meetTarget*retaddr
-    * end
  1011 label *label14
  1012 read *tmp41 bank1 511
  1013 op sub *tmp374 *tmp41 1
 
  1017 op add *tmp379 :log:encodedId *tmp378
  1018 write *tmp379 bank1 *tmp374
  1019 return :log*retaddr
-    * end
  1020 label *label15
  1021 sensor :log:encodedId :logBlock:block @id
  1022 setaddr :log*retaddr *label389 (h:*label389)
  1023 call *label14 *invalid :log*retval (m:*label389) (h:*label389)
  1024 label *label389
  1025 return :logBlock*retaddr
-    * end
  1026 label *label17
  1027 set :moveTo.1:x :buildBlockAt:x
  1028 set :moveTo.1:y :buildBlockAt:y
 
  1055 call *label15 *invalid :logBlock*retval (m:*label407) (h:*label407)
  1056 label *label407
  1057 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label392
  1058 return :buildBlockAt*retaddr
-    * end
  1059 label *label18
  1060 set :meetTarget:block :buildBlock:block
  1061 set :meetTarget:copper :buildBlock:copper
 
  1080 label *label410
  1081 set :buildBlock*retval :buildBlockAt*retval
  1082 return :buildBlock*retaddr
-    * end
  1083 label *label19
  1084 set :findUnits:count 0
  1085 ubind :findUnits:type
 
  1092 label *label412
  1093 set :findUnits*retval :findUnits:count
  1094 return :findUnits*retaddr
-    * end
  1095 label *label20
  1096 write 0 .display ".totalTargets"
  1097 write null .display ".nextBlock"
  1098 return :displayUnitBuilds*retaddr
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    47 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    48 label *label32
    49 set *tmp51 :buildBlock*retval
-    * jump *label27 always
    50 label *label27
    51 set .press *tmp51
    52 op add :buildBlockFromCfg.1:y .coreY 4
 
    59 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    60 label *label38
    61 set *tmp55 :buildBlock*retval
-    * jump *label33 always
    62 label *label33
    63 set .battery *tmp55
    64 op add :buildBlockFromCfg.2:x .coreX -1
 
    67 setaddr :buildBlock*retaddr *label44 (h:*label44)
    68 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    69 label *label44
-    * jump *label39 always
    70 label *label39
    71 op add :buildBlockFromCfg.3:y .coreY 3
    72 set :buildBlock:block @combustion-generator
 
    78 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    79 label *label50
    80 set *tmp63 :buildBlock*retval
-    * jump *label45 always
    81 label *label45
    82 set .generator *tmp63
    83 set .powerTarget 800
 
    91 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
    92 label *label56
    93 set *tmp67 :buildBlock*retval
-    * jump *label51 always
    94 label *label51
    95 set .smelter *tmp67
    96 set :buildTitaniumDrillCfg:distance 32
 
   344 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   345 label *label115
   346 set *tmp149 :buildBlock*retval
-    * jump *label110 always
   347 label *label110
   348 set .unloader1 *tmp149
   349 op add :buildBlockFromCfg.6:x .coreX 1
 
   359 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   360 label *label121
   361 set *tmp153 :buildBlock*retval
-    * jump *label116 always
   362 label *label116
   363 set .controller *tmp153
   364 write processor1 *tmp153 ".display"
 
   382 setaddr :buildBlock*retaddr *label127 (h:*label127)
   383 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   384 label *label127
-    * jump *label122 always
   385 label *label122
   386 op add :buildBlockFromCfg.8:y .coreY 1
   387 set :buildBlock:block @unloader
 
   395 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   396 label *label133
   397 set *tmp161 :buildBlock*retval
-    * jump *label128 always
   398 label *label128
   399 write *tmp161 *tmp153 ".unloader2"
   400 op add :buildBlockFromCfg.9:x .coreX -3
 
   408 setaddr :buildBlock*retaddr *label139 (h:*label139)
   409 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   410 label *label139
-    * jump *label134 always
   411 label *label134
   412 op add :buildBlockFromCfg.10:x .coreX -4
   413 set :buildBlock:block @air-factory
 
   421 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   422 label *label145
   423 set *tmp169 :buildBlock*retval
-    * jump *label140 always
   424 label *label140
   425 set .factory *tmp169
   426 write *tmp169 *tmp153 ".factory"
 
   457 setaddr :buildBlock*retaddr *label158 (h:*label158)
   458 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   459 label *label158
-    * jump *label153 always
   460 label *label153
   461 op add :buildBlock:x .coreX 3.5
   462 op add :buildBlock:y .coreY 0.5
 
   470 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   471 label *label164
   472 set *tmp182 :buildBlock*retval
-    * jump *label159 always
   473 label *label159
   474 write *tmp182 *tmp153 ".kiln"
   475 set :buildBlock:block @junction
 
   481 setaddr :buildBlock*retaddr *label170 (h:*label170)
   482 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   483 label *label170
-    * jump *label165 always
   484 label *label165
   485 op add :buildBlockFromCfg.14:x .coreX -3.5
   486 op add :buildBlock:y .coreY 4.5
 
   493 setaddr :buildBlock*retaddr *label176 (h:*label176)
   494 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   495 label *label176
-    * jump *label171 always
   496 label *label171
   497 set :buildBlock:block @steam-generator
   498 set :buildBlock:x :buildBlockFromCfg.14:x
 
   506 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   507 label *label182
   508 set *tmp194 :buildBlock*retval
-    * jump *label177 always
   509 label *label177
   510 write *tmp194 *tmp153 ".generator2"
   511 set :buildBlock:block @sorter
 
   519 setaddr :buildBlock*retaddr *label188 (h:*label188)
   520 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   521 label *label188
-    * jump *label183 always
   522 label *label183
   523 write true *tmp153 ".buildUnits"
   524 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    47 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    48 label *label32
    49 set *tmp51 :buildBlock*retval
-    * label *label27
    50 set .press *tmp51
    51 op add :buildBlockFromCfg.1:y .coreY 4
    52 set :buildBlock:block @battery
 
    58 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    59 label *label38
    60 set *tmp55 :buildBlock*retval
-    * label *label33
    61 set .battery *tmp55
    62 op add :buildBlockFromCfg.2:x .coreX -1
    63 set :buildBlock:x :buildBlockFromCfg.2:x
 
    65 setaddr :buildBlock*retaddr *label44 (h:*label44)
    66 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    67 label *label44
-    * label *label39
    68 op add :buildBlockFromCfg.3:y .coreY 3
    69 set :buildBlock:block @combustion-generator
    70 set :buildBlock:x .coreX
 
    75 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    76 label *label50
    77 set *tmp63 :buildBlock*retval
-    * label *label45
    78 set .generator *tmp63
    79 set .powerTarget 800
    80 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    87 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
    88 label *label56
    89 set *tmp67 :buildBlock*retval
-    * label *label51
    90 set .smelter *tmp67
    91 set :buildTitaniumDrillCfg:distance 32
    92 set :buildTitaniumDrillCfg:angle 0
 
   339 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   340 label *label115
   341 set *tmp149 :buildBlock*retval
-    * label *label110
   342 set .unloader1 *tmp149
   343 op add :buildBlockFromCfg.6:x .coreX 1
   344 set :buildBlock:block @micro-processor
 
   353 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   354 label *label121
   355 set *tmp153 :buildBlock*retval
-    * label *label116
   356 set .controller *tmp153
   357 write processor1 *tmp153 ".display"
   358 write .core *tmp153 ".core"
 
   375 setaddr :buildBlock*retaddr *label127 (h:*label127)
   376 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   377 label *label127
-    * label *label122
   378 op add :buildBlockFromCfg.8:y .coreY 1
   379 set :buildBlock:block @unloader
   380 set :buildBlock:x :buildBlockFromCfg.7:x
 
   387 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   388 label *label133
   389 set *tmp161 :buildBlock*retval
-    * label *label128
   390 write *tmp161 *tmp153 ".unloader2"
   391 op add :buildBlockFromCfg.9:x .coreX -3
   392 set :buildBlock:block @overflow-gate
 
   399 setaddr :buildBlock*retaddr *label139 (h:*label139)
   400 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   401 label *label139
-    * label *label134
   402 op add :buildBlockFromCfg.10:x .coreX -4
   403 set :buildBlock:block @air-factory
   404 set :buildBlock:x :buildBlockFromCfg.10:x
 
   411 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   412 label *label145
   413 set *tmp169 :buildBlock*retval
-    * label *label140
   414 set .factory *tmp169
   415 write *tmp169 *tmp153 ".factory"
   416 write *tmp169 processor1 ".factory"
 
   446 setaddr :buildBlock*retaddr *label158 (h:*label158)
   447 call *label18 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   448 label *label158
-    * label *label153
   449 op add :buildBlock:x .coreX 3.5
   450 op add :buildBlock:y .coreY 0.5
   451 set :buildBlock:block @kiln
 
   458 call *label18 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   459 label *label164
   460 set *tmp182 :buildBlock*retval
-    * label *label159
   461 write *tmp182 *tmp153 ".kiln"
   462 set :buildBlock:block @junction
   463 set :buildBlock:x :buildBlockFromCfg.11:x
 
   468 setaddr :buildBlock*retaddr *label170 (h:*label170)
   469 call *label18 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   470 label *label170
-    * label *label165
   471 op add :buildBlockFromCfg.14:x .coreX -3.5
   472 op add :buildBlock:y .coreY 4.5
   473 set :buildBlock:block @water-extractor
 
   479 setaddr :buildBlock*retaddr *label176 (h:*label176)
   480 call *label18 *invalid :buildBlock*retval (m:*label176) (h:*label176)
   481 label *label176
-    * label *label171
   482 set :buildBlock:block @steam-generator
   483 set :buildBlock:x :buildBlockFromCfg.14:x
   484 set :buildBlock:y :buildBlockFromCfg:y
 
   491 call *label18 *invalid :buildBlock*retval (m:*label182) (h:*label182)
   492 label *label182
   493 set *tmp194 :buildBlock*retval
-    * label *label177
   494 write *tmp194 *tmp153 ".generator2"
   495 set :buildBlock:block @sorter
   496 set :buildBlock:x :buildBlockFromCfg.10:x
 
   503 setaddr :buildBlock*retaddr *label188 (h:*label188)
   504 call *label18 *invalid :buildBlock*retval (m:*label188) (h:*label188)
   505 label *label188
-    * label *label183
   506 write true *tmp153 ".buildUnits"
   507 setaddr :displayUnitBuilds*retaddr *label189 (h:*label189)
   508 call *label20 *invalid :displayUnitBuilds*retval (m:*label189) (h:*label189)

Final code before resolving virtual instructions:

    0:  jump *label538 always 0 0                                    Actions.mnd: volatile var ERROR = "";
    1:  draw triangle bank1 processor1 processor2 processor3 .ERROR  ...
    2:  draw triangle .controller .core .coreX .coreY .display .fact ...
    3:  draw triangle .generator .leadSiliconBlock .phase .powerTarg ...
    4:  draw triangle .targetCopper .targetGraphite .targetLead .tar ...
    5:  draw triangle .titaniumDrill .unloader1 :flares :monos :poly ...
    6:  draw triangle :buildBlock:config :buildBlock:copper :buildBl ...
    7:  draw triangle :buildBlock:silicon :buildBlock:titanium :buil ...
    8:  draw triangle :buildBlockAt:config :buildBlockAt:rotation :b ...
    9:  draw triangle :buildBlockFromCfg.10:x :buildBlockFromCfg.14: ...
   10:  draw triangle :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x ...
   11:  draw triangle :buildBlockFromCfg.8:y :buildBlockFromCfg.3:y  ...
   12:  draw triangle :buildTitaniumDrillCfg:ay :buildTitaniumDrillC ...
   13:  draw triangle :buildTitaniumDrillCfg:searches :checkOre.2:co ...
   14:  draw triangle :checkOre.1:floor :checkOre.3:floor :checkOre: ...
   15:  draw triangle :depositItems:item :fetchBlock:block :fetchBlo ...
   16:  draw triangle :findUnits:type :locateOre:ore :locateOre:x :l ...
   17:  draw triangle :locateOreAway:x :locateOreAway:y :log:encoded ...
   18:  draw triangle :meetTarget:count :meetTarget:graphite :meetTa ...
   19:  draw triangle :meetTarget:siliconFactory :meetTarget:titaniu ...
   20:  draw triangle :mineOre:ore :mineOre:stop :mineOre:x :mineOre ...
   21:  draw triangle :moveTo:x :moveTo.1:y :moveTo:y :moveToBlock:b ...
   22:  draw triangle :moveToEmpty:y :supplyBase0:coal.1 :supplyBase ...
   23:  draw triangle :supplyBlock.3:blockCapacity :supplyBlock:bloc ...
   24:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing  ...
        label *label538                                              ...
   25:  set .ERROR ""                                                ...
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .factory null                                            ...
   33:  set .phase 0                                                 CoreBuilder.mnd: var phase = 0;
   34:  write 510 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 510;
        label *label21                                               CoreBuilder.mnd: do
   35:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   36:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   37:  jump *label21 equal .core null                               CoreBuilder.mnd: do
   38:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   39:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.monos);
   40:  setaddr :findUnits*retaddr *label24                          ...
   41:  call *label19 *invalid :findUnits*retval                     ...
        label *label24                                               ...
   42:  write :findUnits:count processor1 ".monos"                   ...
   43:  set :monos :findUnits*retval                                 ...
   44:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.flares);
   45:  setaddr :findUnits*retaddr *label25                          ...
   46:  call *label19 *invalid :findUnits*retval                     ...
        label *label25                                               ...
   47:  write :findUnits:count processor1 ".flares"                  ...
   48:  set :flares :findUnits*retval                                ...
   49:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.polys);
   50:  setaddr :findUnits*retaddr *label26                          ...
   51:  call *label19 *invalid :findUnits*retval                     ...
        label *label26                                               ...
   52:  write :findUnits:count processor1 ".polys"                   ...
   53:  set :polys :findUnits*retval                                 ...
   54:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   55:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   56:  set :buildBlock:block @graphite-press                        ...
   57:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   58:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   59:  set :buildBlock:copper 75                                    ...
   60:  set :buildBlock:lead 30                                      ...
   61:  set :buildBlock:graphite 0                                   ...
   62:  set :buildBlock:silicon 0                                    ...
   63:  set :buildBlock:titanium 0                                   ...
   64:  set :buildBlock:metaglass 0                                  ...
   65:  set :buildBlock:rotation 0                                   ...
   66:  set :buildBlock:config null                                  ...
   67:  setaddr :buildBlock*retaddr *label32                         ...
   68:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label32                                               ...
   69:  set *tmp51 :buildBlock*retval                                ...
   70:  set .press *tmp51                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   71:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   72:  set :buildBlock:block @battery                               ...
   73:  set :buildBlock:x .coreX                                     ...
   74:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   75:  set :buildBlock:copper 5                                     ...
   76:  set :buildBlock:lead 20                                      ...
   77:  setaddr :buildBlock*retaddr *label38                         ...
   78:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label38                                               ...
   79:  set *tmp55 :buildBlock*retval                                ...
   80:  set .battery *tmp55                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   81:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   82:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   83:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   84:  setaddr :buildBlock*retaddr *label44                         ...
   85:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label44                                               ...
   86:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   87:  set :buildBlock:block @combustion-generator                  ...
   88:  set :buildBlock:x .coreX                                     ...
   89:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   90:  set :buildBlock:copper 25                                    ...
   91:  set :buildBlock:lead 15                                      ...
   92:  setaddr :buildBlock*retaddr *label50                         ...
   93:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label50                                               ...
   94:  set *tmp63 :buildBlock*retval                                ...
   95:  set .generator *tmp63                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   96:  set .powerTarget 800                                         CoreBuilder.mnd: powerTarget = 800;
   97:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   98:  set :buildBlock:block @silicon-smelter                       ...
   99:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  100:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  101:  set :buildBlock:copper 30                                    ...
  102:  set :buildBlock:lead 25                                      ...
  103:  setaddr :buildBlock*retaddr *label56                         ...
  104:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label56                                               ...
  105:  set *tmp67 :buildBlock*retval                                ...
  106:  set .smelter *tmp67                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  107:  set :buildTitaniumDrillCfg:distance 32                       CoreBuilder.mnd: var distance = 32;
  108:  set :buildTitaniumDrillCfg:angle 0                           CoreBuilder.mnd: var angle = 0;
  109:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
  110:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: var minimum = 3;
        label *label59                                               CoreBuilder.mnd: while true do
  111:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  112:  set :meetTarget:copper 18                                    ...
  113:  set :meetTarget:lead 0                                       ...
  114:  set :meetTarget:graphite 10                                  ...
  115:  set :meetTarget:silicon 0                                    ...
  116:  set :meetTarget:titanium 0                                   ...
  117:  set :meetTarget:metaglass 0                                  ...
  118:  set :meetTarget:leadFactory 0                                ...
  119:  set :meetTarget:siliconFactory 0                             ...
  120:  setaddr :meetTarget*retaddr *label62                         ...
  121:  call *label13 *invalid :meetTarget*retval                    ...
        label *label62                                               ...
  122:  set :locateOreAway:distance :buildTitaniumDrillCfg:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  123:  set :locateOreAway:angle :buildTitaniumDrillCfg:angle        ...
        label *label64                                               CoreBuilder.mnd: while true do
  124:  set :locateOre:ore @titanium                                 CoreBuilder.mnd: locateOre(ore, out x, out y);
  125:  setaddr :locateOre*retaddr *label67                          ...
  126:  call *label5 *invalid :locateOre*retval                      ...
        label *label67                                               ...
  127:  set :locateOreAway:x :locateOre:x                            ...
  128:  set :locateOreAway:y :locateOre:y                            ...
  129:  op sub *tmp74 :locateOre:x .coreX                            CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then break; end;
  130:  op abs *tmp75 *tmp74 0                                       ...
  131:  op greaterThanEq *tmp76 *tmp75 10                            ...
  132:  op sub *tmp77 :locateOre:y .coreY                            ...
  133:  op abs *tmp78 *tmp77 0                                       ...
  134:  op greaterThanEq *tmp79 *tmp78 10                            ...
  135:  op or *tmp80 *tmp76 *tmp79                                   ...
  136:  jump *label66 notEqual *tmp80 false                          ...
  137:  op sin *tmp83 :locateOreAway:angle 0                         CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  138:  op mul *tmp84 *tmp83 :locateOreAway:distance                 ...
  139:  op add *tmp85 .coreX *tmp84                                  ...
  140:  op cos *tmp86 :locateOreAway:angle 0                         ...
  141:  op mul *tmp87 *tmp86 :locateOreAway:distance                 ...
  142:  op add *tmp88 .coreY *tmp87                                  ...
  143:  set :moveTo.1:x *tmp85                                       ...
  144:  set :moveTo.1:y *tmp88                                       ...
  145:  setaddr :moveTo.1*retaddr *label71                           ...
  146:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label71                                               ...
  147:  op add :locateOreAway:distance :locateOreAway:distance 4     CoreBuilder.mnd: distance += 4;
  148:  op add :locateOreAway:angle :locateOreAway:angle 45          CoreBuilder.mnd: angle += 45;
  149:  jump *label64 always 0 0                                     CoreBuilder.mnd: while true do
        label *label66                                               ...
  150:  set :buildTitaniumDrillCfg:distance :locateOreAway:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  151:  set :buildTitaniumDrillCfg:angle :locateOreAway:angle        ...
  152:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  153:  set :moveTo.1:y :locateOreAway:y                             ...
  154:  setaddr :moveTo.1*retaddr *label72                           ...
  155:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label72                                               ...
  156:  set :buildTitaniumDrillCfg:ax :locateOreAway:x               CoreBuilder.mnd: var ax = x, ay = y;
  157:  set :buildTitaniumDrillCfg:ay :locateOreAway:y               ...
  158:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, dx = 0, dy = 0;
  159:  set :buildTitaniumDrillCfg:dx 0                              ...
  160:  set :buildTitaniumDrillCfg:dy 0                              ...
  161:  set :buildTitaniumDrillCfg:searches 0                        CoreBuilder.mnd: SearchLoop:
        label *label418                                              ...
  162:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax : CoreBuilder.mnd: ax += dx;
  163:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay : CoreBuilder.mnd: ay += dy;
  164:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: best = 0;
  165:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  166:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  167:  jump *label458 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  168:  set :checkOre:count 1                                        ...
        label *label458                                              ...
  169:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  170:  set :checkOre.1:count :checkOre:count                        ...
  171:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  172:  jump *label461 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  173:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label461                                              ...
  174:  op add *tmp103 :buildTitaniumDrillCfg:ay 1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  175:  set :checkOre.2:count :checkOre.1:count                      ...
  176:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :che CoreBuilder.mnd: getBlock(x, y, , out floor);
  177:  jump *label464 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  178:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label464                                              ...
  179:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  180:  ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floo CoreBuilder.mnd: getBlock(x, y, , out floor);
  181:  jump *label467 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  182:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label467                                              ...
  183:  jump *label472 lessThanEq :checkOre.3:count 0                CoreBuilder.mnd: if count > best then
  184:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  185:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  186:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  187:  jump *label75 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label472                                              CoreBuilder.mnd: if count > best then
  188:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  189:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  190:  jump *label478 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  191:  set :checkOre:count 1                                        ...
        label *label478                                              ...
  192:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  193:  set :checkOre.1:count :checkOre:count                        ...
  194:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  195:  jump *label481 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  196:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label481                                              ...
  197:  op add *tmp103 :buildTitaniumDrillCfg:ay -1                  CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  198:  set :checkOre.2:count :checkOre.1:count                      ...
  199:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :che CoreBuilder.mnd: getBlock(x, y, , out floor);
  200:  jump *label484 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  201:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label484                                              ...
  202:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  203:  ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floo CoreBuilder.mnd: getBlock(x, y, , out floor);
  204:  jump *label487 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  205:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label487                                              ...
  206:  jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  207:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  208:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  209:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  210:  jump *label75 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label492                                              CoreBuilder.mnd: if count > best then
  211:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  212:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  213:  jump *label498 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  214:  set :checkOre:count 1                                        ...
        label *label498                                              ...
  215:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  216:  set :checkOre.1:count :checkOre:count                        ...
  217:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  218:  jump *label501 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  219:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label501                                              ...
  220:  op add *tmp103 :buildTitaniumDrillCfg:ay 1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  221:  set :checkOre.2:count :checkOre.1:count                      ...
  222:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :che CoreBuilder.mnd: getBlock(x, y, , out floor);
  223:  jump *label504 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  224:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label504                                              ...
  225:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  226:  ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floo CoreBuilder.mnd: getBlock(x, y, , out floor);
  227:  jump *label507 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  228:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label507                                              ...
  229:  jump *label512 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  230:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  231:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  232:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  233:  jump *label75 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label512                                              CoreBuilder.mnd: if count > best then
  234:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  235:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  236:  jump *label518 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  237:  set :checkOre:count 1                                        ...
        label *label518                                              ...
  238:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  239:  set :checkOre.1:count :checkOre:count                        ...
  240:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  241:  jump *label521 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  242:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label521                                              ...
  243:  op add *tmp103 :buildTitaniumDrillCfg:ay -1                  CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  244:  set :checkOre.2:count :checkOre.1:count                      ...
  245:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp103 0 0 :che CoreBuilder.mnd: getBlock(x, y, , out floor);
  246:  jump *label524 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  247:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label524                                              ...
  248:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  249:  ucontrol getBlock :checkOre.1:x *tmp103 0 0 :checkOre.3:floo CoreBuilder.mnd: getBlock(x, y, , out floor);
  250:  jump *label527 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  251:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label527                                              ...
  252:  jump *label532 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  253:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  254:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  255:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  256:  jump *label75 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label532                                              CoreBuilder.mnd: if count > best then
  257:  op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCf CoreBuilder.mnd: SearchLoop:
  258:  jump *label418 lessThan :buildTitaniumDrillCfg:searches 5    ...
        label *label75                                               ...
  259:  jump *label99 lessThanEq :buildTitaniumDrillCfg:best :buildT CoreBuilder.mnd: if best > minimum then
  260:  op div *tmp124 :buildTitaniumDrillCfg:dx 2                   CoreBuilder.mnd: ax = ax + dx / 2;
  261:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax * ...
  262:  op div *tmp126 :buildTitaniumDrillCfg:dy 2                   CoreBuilder.mnd: ay = ay + dy / 2;
  263:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay * ...
  264:  op sub *tmp128 :locateOreAway:x .coreX                       CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
  265:  op abs *tmp129 *tmp128 0                                     ...
  266:  op greaterThanEq *tmp130 *tmp129 10                          ...
  267:  op sub *tmp131 :locateOreAway:y .coreY                       ...
  268:  op abs *tmp132 *tmp131 0                                     ...
  269:  op greaterThanEq *tmp133 *tmp132 10                          ...
  270:  op or *tmp134 *tmp130 *tmp133                                ...
  271:  jump *label101 equal *tmp134 false                           ...
  272:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, ax, ay, null, 0, true);
  273:  set :buildBlockAt:x :buildTitaniumDrillCfg:ax                ...
  274:  set :buildBlockAt:y :buildTitaniumDrillCfg:ay                ...
  275:  set :buildBlockAt:rotation null                              ...
  276:  set :buildBlockAt:config 0                                   ...
  277:  set :buildBlockAt:skipError true                             ...
  278:  setaddr :buildBlockAt*retaddr *label103                      ...
  279:  call *label17 *invalid :buildBlockAt*retval                  ...
        label *label103                                              ...
  280:  jump *label104 equal :buildBlockAt*retval null               CoreBuilder.mnd: if result != null then return result; end;
  281:  set *tmp72 :buildBlockAt*retval                              ...
  282:  jump *label58 always 0 0                                     ...
        label *label104                                              ...
  283:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  284:  jump *label102 always 0 0                                    CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label101                                              ...
  285:  set :buildTitaniumDrillCfg:attempts 1000                     CoreBuilder.mnd: attempts = 1000;
  286:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: minimum = 3;
        label *label102                                              CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label99                                               CoreBuilder.mnd: if best > minimum then
  287:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  288:  jump *label59 lessThanEq :buildTitaniumDrillCfg:attempts 5   ...
  289:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  290:  op sin *tmp141 :locateOreAway:angle 0                        CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  291:  op mul *tmp142 *tmp141 :locateOreAway:distance               ...
  292:  op add *tmp143 .coreX *tmp142                                ...
  293:  op cos *tmp144 :locateOreAway:angle 0                        ...
  294:  op mul *tmp145 *tmp144 :locateOreAway:distance               ...
  295:  op add *tmp146 .coreY *tmp145                                ...
  296:  set :moveTo.1:x *tmp143                                      ...
  297:  set :moveTo.1:y *tmp146                                      ...
  298:  setaddr :moveTo.1*retaddr *label109                          ...
  299:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label109                                              ...
  300:  op add :buildTitaniumDrillCfg:distance :locateOreAway:distan CoreBuilder.mnd: distance += 4;
  301:  op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45  CoreBuilder.mnd: angle += 45;
  302:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  303:  op sub *tmp147 :buildTitaniumDrillCfg:minimum 1              CoreBuilder.mnd: minimum = max(minimum - 1, 1);
  304:  op max :buildTitaniumDrillCfg:minimum *tmp147 1              ...
  305:  jump *label59 always 0 0                                     CoreBuilder.mnd: while true do
        label *label58                                               CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEUMATIC_DRILL);
  306:  set .titaniumDrill *tmp72                                    CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill();
  307:  write *tmp72 processor1 ".titaniumDrill"                     CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  308:  write .core processor3 ".core"                               CoreBuilder.mnd: flareController.core = core;
  309:  write *tmp72 processor3 ".drill"                             CoreBuilder.mnd: flareController.drill = titaniumDrill;
  310:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  311:  set :buildBlock:block @unloader                              ...
  312:  set :buildBlock:x .coreX                                     ...
  313:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  314:  set :buildBlock:copper 0                                     ...
  315:  set :buildBlock:lead 0                                       ...
  316:  set :buildBlock:silicon 30                                   ...
  317:  set :buildBlock:titanium 25                                  ...
  318:  setaddr :buildBlock*retaddr *label115                        ...
  319:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label115                                              ...
  320:  set *tmp149 :buildBlock*retval                               ...
  321:  set .unloader1 *tmp149                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  322:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  323:  set :buildBlock:block @micro-processor                       ...
  324:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  325:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  326:  set :buildBlock:copper 90                                    ...
  327:  set :buildBlock:lead 50                                      ...
  328:  set :buildBlock:silicon 50                                   ...
  329:  set :buildBlock:titanium 0                                   ...
  330:  setaddr :buildBlock*retaddr *label121                        ...
  331:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  332:  call *label18 *invalid :buildBlock*retval                    ...
        label *label121                                              ...
  333:  set *tmp153 :buildBlock*retval                               ...
  334:  set .controller *tmp153                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  335:  write processor1 *tmp153 ".display"                          CoreBuilder.mnd: controller.display = display;
  336:  write .core *tmp153 ".core"                                  CoreBuilder.mnd: controller.core = core;
  337:  write *tmp55 *tmp153 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  338:  write *tmp63 *tmp153 ".generator"                            CoreBuilder.mnd: controller.generator = generator;
  339:  write *tmp67 *tmp153 ".smelter"                              CoreBuilder.mnd: controller.smelter = smelter;
  340:  write *tmp51 *tmp153 ".press"                                CoreBuilder.mnd: controller.press = press;
  341:  write :monos *tmp153 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  342:  write :flares *tmp153 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  343:  write :polys *tmp153 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  344:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  345:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  346:  set :buildBlock:block @power-node                            ...
  347:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  348:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  349:  set :buildBlock:copper 2                                     ...
  350:  set :buildBlock:lead 6                                       ...
  351:  set :buildBlock:silicon 0                                    ...
  352:  set :buildBlock:config null                                  ...
  353:  setaddr :buildBlock*retaddr *label127                        ...
  354:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  355:  op add :buildBlockFromCfg.8:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  356:  set :buildBlock:block @unloader                              ...
  357:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  358:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  359:  set :buildBlock:copper 0                                     ...
  360:  set :buildBlock:lead 0                                       ...
  361:  set :buildBlock:silicon 30                                   ...
  362:  set :buildBlock:titanium 25                                  ...
  363:  setaddr :buildBlock*retaddr *label133                        ...
  364:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  365:  set *tmp161 :buildBlock*retval                               ...
  366:  write *tmp161 *tmp153 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  367:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  368:  set :buildBlock:block @overflow-gate                         ...
  369:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  370:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  371:  set :buildBlock:copper 4                                     ...
  372:  set :buildBlock:lead 2                                       ...
  373:  set :buildBlock:silicon 0                                    ...
  374:  set :buildBlock:titanium 0                                   ...
  375:  setaddr :buildBlock*retaddr *label139                        ...
  376:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  377:  op add :buildBlockFromCfg.10:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  378:  set :buildBlock:block @air-factory                           ...
  379:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  380:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  381:  set :buildBlock:copper 60                                    ...
  382:  set :buildBlock:lead 70                                      ...
  383:  set :buildBlock:rotation 3                                   ...
  384:  set :buildBlock:config @mono                                 ...
  385:  setaddr :buildBlock*retaddr *label145                        ...
  386:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label145                                              ...
  387:  set *tmp169 :buildBlock*retval                               ...
  388:  set .factory *tmp169                                         CoreBuilder.mnd: factory = buildBlockFromCfg(ref AIR_FACTORY);
  389:  write *tmp169 *tmp153 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  390:  write *tmp169 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  391:  setaddr :displayUnitBuilds*retaddr *label146                 CoreBuilder.mnd: displayUnitBuilds();
  392:  call *label20 *invalid :displayUnitBuilds*retval             ...
        label *label146                                              ...
  393:  write @flare *tmp153 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = @flare;
  394:  write true *tmp153 ".buildUnits"                             CoreBuilder.mnd: controller.buildUnits = true;
  395:  set .phase 1                                                 CoreBuilder.mnd: begin
  396:  write 85 *tmp153 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  397:  write 60 *tmp153 ".smelterTarget"                            CoreBuilder.mnd: controller.smelterTarget = 60;
  398:  write 30 *tmp153 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
        label *label147                                              CoreBuilder.mnd: do
  399:  setaddr :supplyBase1*retaddr *label150                       CoreBuilder.mnd: supplyBase1();
  400:  call *label10 *invalid :supplyBase1*retval                   ...
        label *label150                                              ...
  401:  sensor *tmp174 *tmp55 @totalPower                            CoreBuilder.mnd: if battery.@totalPower < 500 then break; end;
  402:  jump *label149 lessThan *tmp174 500                          ...
  403:  read *tmp36 *tmp153 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  404:  jump *label147 lessThan *tmp36 3                             CoreBuilder.mnd: do
        label *label149                                              ...
  405:  write false *tmp153 ".buildUnits"                            CoreBuilder.mnd: controller.buildUnits = false;
  406:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  407:  set :buildBlock:y .coreY                                     ...
  408:  set :buildBlock:block @unloader                              ...
  409:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  410:  set :buildBlock:copper 0                                     ...
  411:  set :buildBlock:lead 0                                       ...
  412:  set :buildBlock:silicon 30                                   ...
  413:  set :buildBlock:titanium 25                                  ...
  414:  set :buildBlock:rotation 0                                   ...
  415:  set :buildBlock:config null                                  ...
  416:  setaddr :buildBlock*retaddr *label158                        ...
  417:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label158                                              ...
  418:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  419:  op add :buildBlock:y .coreY 0.5                              ...
  420:  set :buildBlock:block @kiln                                  ...
  421:  set :buildBlock:copper 60                                    ...
  422:  set :buildBlock:lead 30                                      ...
  423:  set :buildBlock:graphite 30                                  ...
  424:  set :buildBlock:silicon 0                                    ...
  425:  set :buildBlock:titanium 0                                   ...
  426:  setaddr :buildBlock*retaddr *label164                        ...
  427:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label164                                              ...
  428:  set *tmp182 :buildBlock*retval                               ...
  429:  write *tmp182 *tmp153 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  430:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  431:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  432:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  433:  set :buildBlock:copper 3                                     ...
  434:  set :buildBlock:lead 0                                       ...
  435:  set :buildBlock:graphite 0                                   ...
  436:  setaddr :buildBlock*retaddr *label170                        ...
  437:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label170                                              ...
  438:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  439:  op add :buildBlock:y .coreY 4.5                              ...
  440:  set :buildBlock:block @water-extractor                       ...
  441:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  442:  set :buildBlock:copper 30                                    ...
  443:  set :buildBlock:lead 30                                      ...
  444:  set :buildBlock:graphite 30                                  ...
  445:  set :buildBlock:metaglass 30                                 ...
  446:  setaddr :buildBlock*retaddr *label176                        ...
  447:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label176                                              ...
  448:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  449:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  450:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  451:  set :buildBlock:copper 35                                    ...
  452:  set :buildBlock:lead 40                                      ...
  453:  set :buildBlock:graphite 25                                  ...
  454:  set :buildBlock:silicon 30                                   ...
  455:  set :buildBlock:metaglass 0                                  ...
  456:  setaddr :buildBlock*retaddr *label182                        ...
  457:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label182                                              ...
  458:  set *tmp194 :buildBlock*retval                               ...
  459:  write *tmp194 *tmp153 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  460:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  461:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  462:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  463:  set :buildBlock:copper 2                                     ...
  464:  set :buildBlock:lead 2                                       ...
  465:  set :buildBlock:graphite 0                                   ...
  466:  set :buildBlock:silicon 0                                    ...
  467:  set :buildBlock:config @coal                                 ...
  468:  setaddr :buildBlock*retaddr *label188                        ...
  469:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label188                                              ...
  470:  write true *tmp153 ".buildUnits"                             CoreBuilder.mnd: controller.buildUnits = true;
  471:  setaddr :displayUnitBuilds*retaddr *label189                 CoreBuilder.mnd: displayUnitBuilds();
  472:  call *label20 *invalid :displayUnitBuilds*retval             ...
        label *label189                                              ...
        label *label190                                              CoreBuilder.mnd: while true do
  473:  setaddr :supplyBase*retaddr *label193                        CoreBuilder.mnd: supplyBase();
  474:  call *label11 *invalid :supplyBase*retval                    ...
        label *label193                                              ...
  475:  jump *label190 always 0 0                                    CoreBuilder.mnd: while true do
        label *label0                                                Actions.mnd: void moveTo(x, y, radius)
  476:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  477:  op sub *tmp204 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  478:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202 0 ...
  479:  jump *label200 notEqual *tmp202 false                        ...
        label *label453                                              ...
  480:  ucontrol approach :moveTo:x :moveTo:y *tmp204 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  481:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp202 0 Actions.mnd: while !within(x, y, radius) do
  482:  jump *label453 equal *tmp202 false                           ...
        label *label200                                              ...
  483:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label1                                                Actions.mnd: void moveTo(x, y)
  484:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  485:  set :moveTo:y :moveTo.1:y                                    ...
  486:  set :moveTo:radius 6                                         ...
  487:  setaddr :moveTo*retaddr *label202                            ...
  488:  call *label0 *invalid :moveTo*retval                         ...
        label *label202                                              ...
  489:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label2                                                Actions.mnd: void moveToEmpty(x, y)
  490:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label205                                              Actions.mnd: do
  491:  sensor *tmp207 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  492:  jump *label208 equal *tmp207 null                            ...
  493:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label208                                              ...
  494:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  495:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp210 0    Actions.mnd: while !within(x, y, RADIUS);
  496:  jump *label205 equal *tmp210 false                           Actions.mnd: do
  497:  sensor *tmp212 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  498:  jump *label212 equal *tmp212 null                            ...
        label *label452                                              ...
  499:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  500:  sensor *tmp212 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  501:  jump *label452 notEqual *tmp212 null                         ...
        label *label212                                              ...
  502:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label3                                                Actions.mnd: void moveToBlock(block, radius)
  503:  sensor *tmp214 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  504:  sensor *tmp215 :moveToBlock:block @y                         ...
  505:  set :moveTo:x *tmp214                                        ...
  506:  set :moveTo:y *tmp215                                        ...
  507:  set :moveTo:radius :moveToBlock:radius                       ...
  508:  setaddr :moveTo*retaddr *label214                            ...
  509:  call *label0 *invalid :moveTo*retval                         ...
        label *label214                                              ...
  510:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label4                                                Actions.mnd: void depositItems(block, item)
  511:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  512:  sensor *tmp216 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  513:  jump *label217 notEqual *tmp216 :depositItems:item           ...
  514:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  515:  set :moveToBlock:radius 6                                    ...
  516:  setaddr :moveToBlock*retaddr *label219                       ...
  517:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label219                                              ...
  518:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label220                                              Actions.mnd: do
  519:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  520:  sensor *tmp220 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  521:  op mul *tmp221 *tmp220 :depositItems:cap                     ...
  522:  sensor *tmp222 :depositItems:block :depositItems:item        ...
  523:  jump *label220 greaterThan *tmp221 *tmp222                   Actions.mnd: do
  524:  jump *label218 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label217                                              ...
  525:  sensor *tmp224 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  526:  jump *label225 equal *tmp224 null                            ...
        label *label454                                              ...
  527:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  528:  sensor *tmp224 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  529:  jump *label454 notEqual *tmp224 null                         ...
        label *label225                                              ...
        label *label218                                              Actions.mnd: if @unit.@firstItem == item then
  530:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  531:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  532:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label5                                                Actions.mnd: void locateOre(ore, out x, out y)
  533:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  534:  jump *label228 notEqual *tmp226 false                        ...
  535:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  536:  stop                                                         Actions.mnd: stopProcessor();
        label *label228                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  537:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label6                                                Actions.mnd: void mineOre(ore, amount, block)
  538:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  539:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  540:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  541:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  542:  setaddr :locateOre*retaddr *label233                         ...
  543:  call *label5 *invalid :locateOre*retval                      ...
        label *label233                                              ...
  544:  set :mineOre:x :locateOre:x                                  ...
  545:  set :mineOre:y :locateOre:y                                  ...
  546:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  547:  set :moveToEmpty:y :locateOre:y                              ...
  548:  setaddr :moveToEmpty*retaddr *label234                       ...
  549:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label234                                              ...
  550:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  551:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label236                                              Actions.mnd: do
  552:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  553:  op notEqual *tmp233 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  554:  op notEqual *tmp234 :mineOre:item :mineOre:ore               ...
  555:  op land *tmp235 *tmp233 *tmp234                              ...
  556:  jump *label238 notEqual *tmp235 false                        ...
  557:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  558:  jump *label238 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  559:  sensor *tmp239 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  560:  jump *label236 lessThan *tmp239 :mineOre:amount              Actions.mnd: do
        label *label238                                              ...
  561:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  562:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  563:  set :depositItems:item :mineOre:ore                          ...
  564:  setaddr :depositItems*retaddr *label243                      ...
  565:  call *label4 *invalid :depositItems*retval                   ...
        label *label243                                              ...
  566:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label7                                                Actions.mnd: void mineOre(ore)
  567:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  568:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  569:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  570:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  571:  set :mineOre:amount 30                                       ...
  572:  set :mineOre:block .core                                     ...
  573:  setaddr :mineOre*retaddr *label246                           ...
  574:  call *label6 *invalid :mineOre*retval                        ...
        label *label246                                              ...
  575:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label8                                                Actions.mnd: void fetchBlock(block, item)
  576:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  577:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  578:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  579:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  580:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  581:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  582:  sensor *tmp243 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  583:  sensor *tmp244 :fetchBlock:block @y                          ...
  584:  set :moveToEmpty:x *tmp243                                   ...
  585:  set :moveToEmpty:y *tmp244                                   ...
  586:  setaddr :moveToEmpty*retaddr *label250                       ...
  587:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label250                                              ...
        label *label251                                              Actions.mnd: do
  588:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  589:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  590:  op notEqual *tmp246 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  591:  op notEqual *tmp247 :fetchBlock:unitItem :fetchBlock:item    ...
  592:  op land *tmp248 *tmp246 *tmp247                              ...
  593:  jump *label254 equal *tmp248 false                           ...
  594:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label254                                              Actions.mnd: if unitItem != null and unitItem != item then
  595:  sensor *tmp250 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  596:  op lessThan *tmp251 *tmp250 30                               ...
  597:  sensor *tmp252 :fetchBlock:block :fetchBlock:item            ...
  598:  op land *tmp253 *tmp251 *tmp252                              ...
  599:  jump *label251 notEqual *tmp253 false                        Actions.mnd: do
  600:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  601:  set :depositItems:item :fetchBlock:item                      ...
  602:  setaddr :depositItems*retaddr *label256                      ...
  603:  call *label4 *invalid :depositItems*retval                   ...
        label *label256                                              ...
  604:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label9                                                CoreBuilder.mnd: void supplyBase0()
  605:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  606:  jump *label258 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  607:  sensor *tmp256 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  608:  jump *label260 greaterThanEq *tmp256 .targetGraphite         ...
  609:  sensor *tmp259 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  610:  jump *label262 greaterThanEq *tmp259 5                       ...
  611:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  612:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  613:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  614:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  615:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  616:  sensor *tmp263 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  617:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  618:  jump *label267 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  619:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  620:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  621:  set :mineOre:block .press                                    ...
  622:  setaddr :mineOre*retaddr *label269                           ...
  623:  call *label6 *invalid :mineOre*retval                        ...
        label *label269                                              ...
        label *label267                                              CoreBuilder.mnd: if missing > 0 then
  624:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label262                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label260                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  625:  sensor *tmp267 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  626:  jump *label270 greaterThanEq *tmp267 .targetSilicon          ...
  627:  sensor *tmp270 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  628:  jump *label272 greaterThanEq *tmp270 5                       ...
  629:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  630:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  631:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  632:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  633:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  634:  sensor *tmp274 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  635:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  636:  jump *label277 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  637:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  638:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  639:  set :mineOre:block .smelter                                  ...
  640:  setaddr :mineOre*retaddr *label279                           ...
  641:  call *label6 *invalid :mineOre*retval                        ...
        label *label279                                              ...
        label *label277                                              CoreBuilder.mnd: if missing > 0 then
  642:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  643:  jump *label273 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label272                                              ...
  644:  sensor *tmp278 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  645:  jump *label280 greaterThanEq *tmp278 5                       ...
  646:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  647:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  648:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  649:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  650:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  651:  sensor *tmp282 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  652:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  653:  jump *label285 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  654:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  655:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  656:  set :mineOre:block .smelter                                  ...
  657:  setaddr :mineOre*retaddr *label287                           ...
  658:  call *label6 *invalid :mineOre*retval                        ...
        label *label287                                              ...
        label *label285                                              CoreBuilder.mnd: if missing > 0 then
  659:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label280                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label273                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label270                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  660:  sensor *tmp286 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  661:  jump *label288 greaterThanEq *tmp286 .powerTarget            ...
  662:  sensor *tmp289 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  663:  jump *label290 greaterThanEq *tmp289 2                       ...
  664:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  665:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  666:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  667:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  668:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  669:  sensor *tmp293 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  670:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  671:  jump *label295 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  672:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  673:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  674:  set :mineOre:block .generator                                ...
  675:  setaddr :mineOre*retaddr *label297                           ...
  676:  call *label6 *invalid :mineOre*retval                        ...
        label *label297                                              ...
        label *label295                                              CoreBuilder.mnd: if missing > 0 then
  677:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label290                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label288                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label258                                              CoreBuilder.mnd: if unloader1 == null then
  678:  set *tmp299 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  679:  sensor *tmp297 .core @titanium                               ...
  680:  jump *label299 greaterThanEq *tmp297 .targetTitanium         ...
  681:  sensor *tmp300 .core @titanium                               ...
  682:  op sub *tmp301 .targetTitanium *tmp300                       ...
  683:  op min *tmp299 7 *tmp301                                     ...
        label *label299                                              ...
  684:  sensor *tmp303 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  685:  jump *label300 greaterThanEq *tmp303 *tmp299                 ...
  686:  jump *label301 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  687:  sensor *tmp308 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  688:  op mul *tmp309 .unloader1 .powerTarget                       ...
  689:  jump *label304 greaterThanEq *tmp308 *tmp309                 ...
  690:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  691:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  692:  setaddr :mineOre.1*retaddr *label307                         ...
  693:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label307                                              ...
  694:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label304                                              ...
  695:  sensor *tmp312 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  696:  jump *label308 greaterThanEq *tmp312 .targetSilicon          ...
  697:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  698:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  699:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  700:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  701:  jump *label312 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  702:  set :mineOre.1:ore @coal                                     ...
        label *label312                                              ...
  703:  setaddr :mineOre.1*retaddr *label313                         CoreBuilder.mnd: mineOre(ore);
  704:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label313                                              ...
  705:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label308                                              ...
  706:  sensor *tmp319 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  707:  jump *label314 greaterThanEq *tmp319 .targetCopper           ...
  708:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  709:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  710:  setaddr :mineOre.1*retaddr *label317                         ...
  711:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label317                                              ...
  712:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label314                                              ...
  713:  sensor *tmp322 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  714:  jump *label318 greaterThanEq *tmp322 .targetLead             ...
  715:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  716:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  717:  setaddr :mineOre.1*retaddr *label321                         ...
  718:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label321                                              ...
  719:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label318                                              ...
  720:  sensor *tmp325 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  721:  jump *label322 greaterThanEq *tmp325 .targetMetaglass        ...
  722:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  723:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  724:  setaddr :mineOre.1*retaddr *label325                         ...
  725:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label325                                              ...
  726:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label322                                              ...
  727:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  728:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  729:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  730:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  731:  jump *label328 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  732:  set :mineOre.1:ore @coal                                     ...
        label *label328                                              ...
  733:  setaddr :mineOre.1*retaddr *label329                         CoreBuilder.mnd: mineOre(ore);
  734:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label329                                              ...
  735:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label300                                              ...
  736:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  737:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  738:  set :fetchBlock:item @titanium                               ...
  739:  setaddr :fetchBlock*retaddr *label331                        ...
  740:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label331                                              ...
        label *label301                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  741:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label10                                               CoreBuilder.mnd: void supplyBase1()
  742:  sensor *tmp332 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@coal then
  743:  sensor *tmp333 .core @coal                                   ...
  744:  jump *label333 greaterThanEq *tmp332 *tmp333                 ...
  745:  sensor *tmp336 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@lead then
  746:  sensor *tmp337 .core @lead                                   ...
  747:  jump *label335 greaterThanEq *tmp336 *tmp337                 ...
  748:  write "Phase 1: mining sand" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  749:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  750:  setaddr :mineOre.1*retaddr *label338                         ...
  751:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label338                                              ...
  752:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@lead then
        label *label335                                              ...
  753:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  754:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  755:  setaddr :mineOre.1*retaddr *label340                         ...
  756:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label340                                              ...
  757:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@coal then
        label *label333                                              ...
  758:  sensor *tmp340 .core @coal                                   CoreBuilder.mnd: if core.@coal < core.@lead then
  759:  sensor *tmp341 .core @lead                                   ...
  760:  jump *label341 greaterThanEq *tmp340 *tmp341                 ...
  761:  write "Phase 1: mining coal" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  762:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  763:  setaddr :mineOre.1*retaddr *label344                         ...
  764:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label344                                              ...
  765:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@coal < core.@lead then
        label *label341                                              ...
  766:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  767:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  768:  setaddr :mineOre.1*retaddr *label346                         ...
  769:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label346                                              ...
  770:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label11                                               CoreBuilder.mnd: void supplyBase()
  771:  jump *label349 notEqual .phase 0                             CoreBuilder.mnd: case phase
  772:  setaddr :supplyBase0*retaddr *label351                       CoreBuilder.mnd: when 0 then supplyBase0();
  773:  call *label9 *invalid :supplyBase0*retval                    ...
        label *label351                                              ...
  774:  return :supplyBase*retaddr                                   CoreBuilder.mnd: case phase
        label *label349                                              ...
  775:  jump *label352 notEqual .phase 1                             ...
  776:  setaddr :supplyBase1*retaddr *label354                       CoreBuilder.mnd: when 1 then supplyBase1();
  777:  call *label10 *invalid :supplyBase1*retval                   ...
        label *label354                                              ...
        label *label352                                              CoreBuilder.mnd: case phase
  778:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label12                                               CoreBuilder.mnd: def targetMet()
  779:  sensor *tmp346 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  780:  jump *label356 lessThan *tmp346 .targetCopper                ...
  781:  sensor *tmp349 .leadSiliconBlock @lead                       CoreBuilder.mnd: if leadSiliconBlock.@lead >= targetLead then
  782:  jump *label358 lessThan *tmp349 .targetLead                  ...
  783:  sensor *tmp352 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  784:  jump *label360 lessThan *tmp352 .targetGraphite              ...
  785:  sensor *tmp355 .leadSiliconBlock @silicon                    CoreBuilder.mnd: if leadSiliconBlock.@silicon >= targetSilicon then
  786:  jump *label362 lessThan *tmp355 .targetSilicon               ...
  787:  sensor *tmp358 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  788:  jump *label364 lessThan *tmp358 .targetTitanium              ...
  789:  sensor *tmp361 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  790:  jump *label366 lessThan *tmp361 .targetMetaglass             ...
  791:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  792:  return :targetMet*retaddr                                    ...
        label *label366                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label364                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label362                                              CoreBuilder.mnd: if leadSiliconBlock.@silicon >= targetSilicon then
        label *label360                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label358                                              CoreBuilder.mnd: if leadSiliconBlock.@lead >= targetLead then
        label *label356                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  793:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  794:  return :targetMet*retaddr                                    ...
        label *label13                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory)
  795:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory do count += sign(t); end;
  796:  op sign *tmp365 :meetTarget:lead 0                           ...
  797:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  798:  op sign *tmp365 :meetTarget:graphite 0                       ...
  799:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  800:  op sign *tmp365 :meetTarget:silicon 0                        ...
  801:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  802:  op sign *tmp365 :meetTarget:titanium 0                       ...
  803:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  804:  op sign *tmp365 :meetTarget:metaglass 0                      ...
  805:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  806:  op sign *tmp365 :meetTarget:leadFactory 0                    ...
  807:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  808:  op sign *tmp365 :meetTarget:siliconFactory 0                 ...
  809:  op add :meetTarget:count :meetTarget:count *tmp365           ...
  810:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  811:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  812:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  813:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  814:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  815:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  816:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  817:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  818:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  819:  op max .targetLead :meetTarget:lead :meetTarget:leadFactory  CoreBuilder.mnd: targetLead = max(lead, leadFactory);
  820:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  821:  op max .targetSilicon :meetTarget:silicon :meetTarget:silico CoreBuilder.mnd: targetSilicon = max(silicon, siliconFactory);
  822:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  823:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  824:  op add *tmp368 :meetTarget:graphite 20                       CoreBuilder.mnd: controller.pressTarget = targetGraphite + 20;
  825:  write *tmp368 .controller ".pressTarget"                     ...
  826:  op add *tmp369 .targetSilicon 20                             CoreBuilder.mnd: controller.smelterTarget = targetSilicon + 20;
  827:  write *tmp369 .controller ".smelterTarget"                   ...
  828:  op add *tmp370 :meetTarget:metaglass 20                      CoreBuilder.mnd: controller.kilnTarget = targetMetaglass + 20;
  829:  write *tmp370 .controller ".kilnTarget"                      ...
  830:  set .leadSiliconBlock .core                                  CoreBuilder.mnd: leadSiliconBlock = siliconFactory > 0 ? factory : core;
  831:  jump *label381 lessThanEq :meetTarget:siliconFactory 0       ...
  832:  set .leadSiliconBlock .factory                               ...
        label *label381                                              ...
  833:  setaddr :targetMet*retaddr *label385                         CoreBuilder.mnd: while !targetMet() do
  834:  call *label12 *invalid :targetMet*retval                     ...
        label *label385                                              ...
  835:  jump *label384 notEqual :targetMet*retval false              ...
        label *label455                                              ...
  836:  setaddr :supplyBase*retaddr *label386                        CoreBuilder.mnd: supplyBase();
  837:  call *label11 *invalid :supplyBase*retval                    ...
        label *label386                                              ...
  838:  setaddr :targetMet*retaddr *label456                         CoreBuilder.mnd: while !targetMet() do
  839:  call *label12 *invalid :targetMet*retval                     ...
        label *label456                                              ...
  840:  jump *label455 equal :targetMet*retval false                 ...
        label *label384                                              ...
  841:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory)
        label *label14                                               CoreBuilder.mnd: void log(encodedId)
  842:  read *tmp41 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(@second) * 1000;
  843:  op sub *tmp374 *tmp41 1                                      ...
  844:  write *tmp374 bank1 511                                      ...
  845:  op floor *tmp377 @second 0                                   ...
  846:  op mul *tmp378 *tmp377 1000                                  ...
  847:  op add *tmp379 :log:encodedId *tmp378                        ...
  848:  write *tmp379 bank1 *tmp374                                  ...
  849:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label15                                               CoreBuilder.mnd: void logBlock(block)
  850:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  851:  setaddr :log*retaddr *label389                               ...
  852:  call *label14 *invalid :log*retval                           ...
        label *label389                                              ...
  853:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label17                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  854:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  855:  set :moveTo.1:y :buildBlockAt:y                              ...
  856:  setaddr :moveTo.1*retaddr *label393                          ...
  857:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label393                                              ...
  858:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  859:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  860:  jump *label395 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  861:  jump *label397 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  862:  set :buildBlockAt*retval :buildBlockAt:building              ...
  863:  return :buildBlockAt*retaddr                                 ...
        label *label397                                              ...
  864:  jump *label399 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  865:  set :buildBlockAt*retval null                                ...
  866:  return :buildBlockAt*retaddr                                 ...
        label *label399                                              ...
  867:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  868:  stop                                                         Actions.mnd: stopProcessor();
        label *label395                                              CoreBuilder.mnd: if building != null then
  869:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  870:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label402                                              CoreBuilder.mnd: do
  871:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  872:  jump *label404 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  873:  jump *label402 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label404                                              ...
  874:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  875:  setaddr :logBlock*retaddr *label407                          ...
  876:  call *label15 *invalid :logBlock*retval                      ...
        label *label407                                              ...
  877:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  878:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label18                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  879:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, 0, 0);
  880:  set :meetTarget:copper :buildBlock:copper                    ...
  881:  set :meetTarget:lead :buildBlock:lead                        ...
  882:  set :meetTarget:graphite :buildBlock:graphite                ...
  883:  set :meetTarget:silicon :buildBlock:silicon                  ...
  884:  set :meetTarget:titanium :buildBlock:titanium                ...
  885:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  886:  set :meetTarget:leadFactory 0                                ...
  887:  set :meetTarget:siliconFactory 0                             ...
  888:  setaddr :meetTarget*retaddr *label409                        ...
  889:  call *label13 *invalid :meetTarget*retval                    ...
        label *label409                                              ...
  890:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  891:  set :buildBlockAt:x :buildBlock:x                            ...
  892:  set :buildBlockAt:y :buildBlock:y                            ...
  893:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  894:  set :buildBlockAt:config :buildBlock:config                  ...
  895:  set :buildBlockAt:skipError false                            ...
  896:  setaddr :buildBlockAt*retaddr *label410                      ...
  897:  call *label17 *invalid :buildBlockAt*retval                  ...
        label *label410                                              ...
  898:  set :buildBlock*retval :buildBlockAt*retval                  ...
  899:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label19                                               CoreBuilder.mnd: def findUnits(type, out count)
  900:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  901:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  902:  set :findUnits:firstUnit @unit                               ...
  903:  jump *label412 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label414                                              CoreBuilder.mnd: do
  904:  op add :findUnits:count :findUnits:count 1                   ...
  905:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  906:  jump *label414 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label412                                              CoreBuilder.mnd: if firstUnit != null then
  907:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  908:  return :findUnits*retaddr                                    ...
        label *label20                                               CoreBuilder.mnd: void displayUnitBuilds()
  909:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  910:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  911:  return :displayUnitBuilds*retaddr                            CoreBuilder.mnd: void displayUnitBuilds()


Performance: parsed in 552 ms, compiled in 485 ms, optimized in 2,725 ms, run in 4 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (12 steps):
The program didn't generate any output.
Execution exception at instruction 35: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
