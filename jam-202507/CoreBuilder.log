  1385 instructions before optimizations.
    78 instructions eliminated by Temp Variables Elimination (2 iterations).
   105 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\CoreBuilder.mnd:123:9 Variable 'unpackCfg.size' is not used.
C:\Home\golem\jam-202507\Actions.mnd:29:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    54 instructions eliminated by Jump Optimization (5 iterations).
    35 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   153 instructions eliminated by Data Flow Optimization (21 passes, 67 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (30 iterations).
     1 loops unrolled by Loop Unrolling.
    36 instructions added by Function Inlining (30 iterations).
    46 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by JumpThreading.
    17 instructions eliminated by Unreachable Code Elimination (2 iterations).
   978 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Unroll iteration loop at CoreBuilder.mnd:241:5               size   -13, benefit     1147.5, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4351.1, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +181, benefit      297.5, efficiency      1.644
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:502:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
    Inline function call at CoreBuilder.mnd:204:5                size    +0, benefit     2078.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:199:5                size    +0, benefit     1039.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:136:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:144:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:148:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:156:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:167:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:170:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:176:17               size    +0, benefit       32.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:179:17               size    +0, benefit       16.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:182:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:185:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:193:9                size    +0, benefit      519.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +161, benefit     3187.5, efficiency     19.798
  ! Inline function call at CoreBuilder.mnd:278:5                size   +91, benefit      255.5, efficiency      2.808
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:381:5                size   +91, benefit       28.0, efficiency      0.308

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4351.1, efficiency   Infinity (-29 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:502:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
    Inline function call at CoreBuilder.mnd:204:5                size    +0, benefit     2078.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:199:5                size    +0, benefit     1039.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:136:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:144:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:148:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:156:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:167:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:170:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:176:17               size    +0, benefit       32.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:179:17               size    +0, benefit       16.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:182:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:185:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:193:9                size    +0, benefit      519.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +161, benefit     3187.5, efficiency     19.798
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 6):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:502:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
  ! Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
  ! Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
  ! Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
  ! Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
  ! Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
  ! Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
  ! Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
  ! Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
  ! Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
  ! Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6494.1, efficiency    158.394
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:502:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3653.0, efficiency    730.591
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
  ! Inline function call at Actions.mnd:124:5                    size   +21, benefit     2337.9, efficiency    111.328
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +21, benefit     2968.8, efficiency    141.369
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +21, benefit     1187.5, efficiency     56.548
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 24):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity (-7 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6494.1, efficiency    158.394
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:502:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:77:9                     size    +7, benefit     3247.1, efficiency    463.867
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     2337.9, efficiency    111.328
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2968.8, efficiency    141.369
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +21, benefit     1187.5, efficiency     56.548
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 31):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:502:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 36):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity (-4 instructions)
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:502:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at CoreBuilder.mnd:209:9                size   +31, benefit     1187.5, efficiency     38.306
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     6494.1, efficiency    132.533
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     2337.9, efficiency     93.516
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     2968.8, efficiency    118.750
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +25, benefit     1187.5, efficiency     47.500
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 37):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     6494.1, efficiency    127.336
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     2337.9, efficiency     89.919
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     2968.8, efficiency    114.183
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +26, benefit     1187.5, efficiency     45.673
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     6494.1, efficiency   6494.141 (-7 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2968.8, efficiency     95.766
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:502:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +32, benefit     2375.0, efficiency     74.219
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +32, benefit      593.8, efficiency     18.555
  ! Inline function call at CoreBuilder.mnd:271:9                size  +164, benefit     3187.5, efficiency     19.436
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 48):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     4926.3, efficiency   1642.090 (-11 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:502:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:207:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:200:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:137:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:145:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:149:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:168:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:174:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:177:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:180:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:183:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:189:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:194:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:271:9                size  +164, benefit     3187.5, efficiency     19.436
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 59):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:314:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +162, benefit       75.0, efficiency      0.463
  ! Inline function call at CoreBuilder.mnd:502:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:343:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:200:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:194:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:271:9                size  +162, benefit     3187.5, efficiency     19.676
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +162, benefit       75.0, efficiency      0.463
  ! Inline function call at CoreBuilder.mnd:502:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:200:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:194:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:271:9                size  +162, benefit     3187.5, efficiency     19.676
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557 (-2 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2630.1, efficiency     71.085
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:502:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1669.9, efficiency     43.945
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      960.2, efficiency     25.269
    Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:200:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:194:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:271:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 68):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +38, benefit     2630.1, efficiency     69.214
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2968.8, efficiency     84.821
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +166, benefit       75.0, efficiency      0.452
  ! Inline function call at CoreBuilder.mnd:502:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1669.9, efficiency     42.819
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      960.2, efficiency     24.621
    Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +36, benefit     2375.0, efficiency     65.972
  * Inline function call at CoreBuilder.mnd:200:5                size    +7, benefit     1039.1, efficiency    148.438 (+6 instructions)
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:194:9                size   +36, benefit      593.8, efficiency     16.493
  ! Inline function call at CoreBuilder.mnd:271:9                size  +166, benefit     3187.5, efficiency     19.202
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173 (+35 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +77, benefit     3966.1, efficiency     51.507
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2968.8, efficiency     84.821
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:502:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1669.9, efficiency     42.819
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      960.2, efficiency     24.621
    Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:211:5                size   +36, benefit     2375.0, efficiency     65.972
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1335.9, efficiency     34.255
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:194:9                size   +36, benefit      593.8, efficiency     16.493
  ! Inline function call at CoreBuilder.mnd:271:9                size  +172, benefit     3187.5, efficiency     18.532
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3966.1, efficiency     33.898
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +193, benefit       75.0, efficiency      0.389
  ! Inline function call at CoreBuilder.mnd:502:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  * Inline function call at CoreBuilder.mnd:207:9                size   +11, benefit     1187.5, efficiency    107.955 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +193, benefit     3187.5, efficiency     16.516
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
    Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
    Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 17):
  * Replicate loop condition at CoreBuilder.mnd:496:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:502:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 16):
  * Replicate loop condition at CoreBuilder.mnd:501:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:502:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 15):
  * Replicate loop condition at CoreBuilder.mnd:520:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:502:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 14):
  * Replicate loop condition at CoreBuilder.mnd:531:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:502:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 13):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:502:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  * Inline function call at CoreBuilder.mnd:168:17               size    +7, benefit      129.9, efficiency     18.555 (+6 instructions)
    Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 7):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4801.0, efficiency     20.430
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:502:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  * Inline function call at CoreBuilder.mnd:174:17               size    +7, benefit       64.9, efficiency      9.277 (+6 instructions)
    Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +209, benefit     3187.5, efficiency     15.251
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       64.9, efficiency      3.247
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +21, benefit      346.8, efficiency     16.512
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:502:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:524:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639
  ! Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +215, benefit     3187.5, efficiency     14.826
  ! Inline function call at CoreBuilder.mnd:278:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +22, benefit       33.3, efficiency      1.511
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:299:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:381:5                size   +81, benefit       28.0, efficiency      0.346

Pass 2: speed optimization selection (cost limit 8):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       64.9, efficiency      3.247
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +20, benefit      346.8, efficiency     17.338
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:502:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:524:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       83.5, efficiency      1.415
  * Inline function call at CoreBuilder.mnd:177:17               size    +7, benefit       32.5, efficiency      4.639 (+6 instructions)
    Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +212, benefit     3187.5, efficiency     15.035
  ! Inline function call at CoreBuilder.mnd:278:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +21, benefit       33.3, efficiency      1.583
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:299:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:381:5                size   +80, benefit       28.0, efficiency      0.350

Pass 2: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +353, benefit     4926.3, efficiency     13.955
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +13, benefit       32.5, efficiency      2.498
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +20, benefit      346.8, efficiency     17.338
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:502:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:524:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       41.7, efficiency      0.708
  ! Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +218, benefit     3187.5, efficiency     14.622
  ! Inline function call at CoreBuilder.mnd:278:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +21, benefit       33.3, efficiency      1.583
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:299:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:381:5                size   +80, benefit       28.0, efficiency      0.350

Pass 3: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:270:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +353, benefit     4926.3, efficiency     13.955
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +13, benefit       32.5, efficiency      2.498
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +47, benefit      358.3, efficiency      7.622
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:238:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:277:1 size   +20, benefit      346.8, efficiency     17.338
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:282:1 size  +137, benefit       31.5, efficiency      0.230
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:292:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:302:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:380:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:578:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:592:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:399:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:400:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:402:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:406:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:407:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:309:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:410:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:411:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:417:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:428:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:431:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:444:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:446:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:457:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:458:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:459:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:463:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:464:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:465:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:466:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:468:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:481:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:483:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:490:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:491:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:492:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:494:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:497:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:502:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:340:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:346:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:347:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:348:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:349:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:350:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:351:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:352:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:521:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:524:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:525:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:529:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:532:9                size  +218, benefit       75.0, efficiency      0.344
  ! Inline function call at CoreBuilder.mnd:565:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:566:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:567:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:568:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:571:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:572:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:573:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:574:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:211:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at CoreBuilder.mnd:137:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:145:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:149:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:157:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       41.7, efficiency      0.708
  ! Inline function call at CoreBuilder.mnd:180:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:183:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:189:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:194:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:271:9                size  +218, benefit     3187.5, efficiency     14.622
  ! Inline function call at CoreBuilder.mnd:278:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:285:9                size   +24, benefit       29.8, efficiency      1.240
  ! Inline function call at CoreBuilder.mnd:286:16               size   +21, benefit       33.3, efficiency      1.583
  ! Inline function call at CoreBuilder.mnd:294:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:295:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:299:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:304:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:305:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:381:5                size   +80, benefit       28.0, efficiency      0.350

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-78 instructions):
 
    43 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    44 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    45 label *label47
-    * set *tmp131 :buildBlockFromCfg.1*retval
    46 set :buildBlockFromCfg.1:cfg "m*.<2######$&"
    47 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    48 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
 
    60 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    61 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    62 label *label50
-    * set *tmp134 :buildBlockFromCfg.1*retval
    63 set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
    64 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    65 setaddr :meetTarget.1*retaddr *label52 (h:*label52)
 
    91 setaddr :error*retaddr *label56 (h:*label56)
    92 call *label13 *invalid :error*retval (m:*label56) (h:*label56)
    93 label *label56
-    * set *tmp149 null
    94 jump *label55 always
    95 label *label54
-    * set *tmp149 null
    96 label *label55
    97 write @pneumatic-drill .display ".nextBlock"
    98 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   120 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   121 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
   122 label *label59
-    * set *tmp155 :buildBlockFromCfg.1*retval
   123 set :buildBlockFromCfg.1:cfg "W*-'%######$,"
   124 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   125 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   126 label *label60
-    * set *tmp156 :buildBlockFromCfg.1*retval
   127 set .graphiteSurplus 100
   128 set :buildBlockFromCfg:cfg "®-.}U#U####$-"
   129 set :buildBlockFromCfg:config processor2
 
   145 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   146 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
   147 label *label62
-    * set *tmp158 :buildBlockFromCfg.1*retval
   148 set :buildBlockFromCfg.1:cfg "(*###A<###$/"
   149 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   150 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
 
   183 op lessThan *tmp162 *tmp161 300
   184 jump *label72 equal *tmp162 false
   185 jump *label70 always
-    * set *tmp163 null
   186 jump *label73 always
   187 label *label72
-    * set *tmp163 null
   188 label *label73
   189 label *label69
   190 read *tmp99 .controller ".monos"
 
   196 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
   197 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label74) (h:*label74)
   198 label *label74
-    * set *tmp165 :buildBlockFromCfg.1*retval
   199 set :buildBlockFromCfg.1:cfg "T,*%%######$2"
   200 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   201 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
   202 label *label75
-    * set *tmp166 :buildBlockFromCfg.1*retval
   203 set :buildBlockFromCfg.1:cfg "',+_AA#####%3"
   204 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   205 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
 
   211 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   212 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   213 label *label77
-    * set *tmp168 :buildBlockFromCfg.1*retval
   214 set :buildBlockFromCfg.1:cfg "W'*'%######$5"
   215 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   216 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   217 label *label78
-    * set *tmp169 :buildBlockFromCfg.1*retval
   218 set :buildBlockFromCfg.1:cfg "W&*'%######$6"
   219 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   220 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   221 label *label79
-    * set *tmp170 :buildBlockFromCfg.1*retval
   222 set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"
   223 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   224 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
 
   248 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   249 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   250 label *label84
-    * set *tmp175 :buildBlockFromCfg.1*retval
   251 set :buildBlockFromCfg.1:cfg "*%ë#}####&="
   252 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   253 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
 
   260 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   261 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   262 label *label86
-    * set *tmp177 :buildBlockFromCfg.1*retval
   263 setaddr :buildUnits*retaddr *label87 (h:*label87)
   264 call *label39 *invalid :buildUnits*retval (m:*label87) (h:*label87)
   265 label *label87
 
   279 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   280 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
   281 label *label90
-    * set *tmp179 :buildBlockFromCfg.1*retval
   282 set :buildBlockFromCfg.1:cfg "T-)%%######$E"
   283 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   284 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   285 label *label91
-    * set *tmp180 :buildBlockFromCfg.1*retval
   286 set :buildBlockFromCfg:cfg "--###A<###$F"
   287 set :buildBlockFromCfg:config @sand
   288 setaddr :buildBlockFromCfg*retaddr *label92 (h:*label92)
   289 call *label36 *invalid :buildBlockFromCfg*retval (m:*label92) (h:*label92)
   290 label *label92
-    * set *tmp181 :buildBlockFromCfg*retval
   291 setaddr :buildUnits*retaddr *label93 (h:*label93)
   292 call *label39 *invalid :buildUnits*retval (m:*label93) (h:*label93)
   293 label *label93
 
   373 setaddr :error*retaddr *label112 (h:*label112)
   374 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
   375 label *label112
-    * set *tmp206 null
   376 jump *label111 always
   377 label *label110
-    * set *tmp206 null
   378 label *label111
   379 write @laser-drill .blockBuilder ":buildBlockAt:block"
   380 read *tmp56 .oreLocator ".drillX"
 
   400 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   401 call *label35 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   402 label *label114
-    * set *tmp215 :buildRemoteBlock*retval
   403 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
   404 read *tmp62 .oreLocator ".water2X"
   405 set :buildRemoteBlock:x *tmp62
 
   408 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   409 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   410 label *label115
-    * set *tmp216 :buildRemoteBlock*retval
   411 set :buildRemoteBlock:cfg "o%+FK<A####%7"
   412 read *tmp64 .oreLocator ".generatorX"
   413 set :buildRemoteBlock:x *tmp64
 
   426 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   427 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   428 label *label117
-    * set *tmp218 :buildRemoteBlock*retval
   429 set :buildRemoteBlock:cfg "r**#-#+####$A"
   430 read *tmp68 .oreLocator ".panelX"
   431 set :buildRemoteBlock:x *tmp68
 
   434 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   435 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   436 label *label118
-    * set *tmp219 :buildRemoteBlock*retval
   437 set :buildRemoteBlock:cfg "k*/(7######$$"
   438 read *tmp70 .oreLocator ".batteryX"
   439 set :buildRemoteBlock:x *tmp70
 
   442 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   443 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   444 label *label119
-    * set *tmp220 :buildRemoteBlock*retval
   445 set :buildRemoteBlock:cfg "**#######%B"
   446 read *tmp60 .oreLocator ".containerX"
   447 set :buildRemoteBlock:x *tmp60
 
   455 op equal *tmp222 .thoriumContainer null
   456 jump *label121 equal *tmp222 false
   457 set .thoriumContainer .thoriumDrill
-    * set *tmp223 .thoriumContainer
   458 jump *label122 always
   459 label *label121
-    * set *tmp223 null
   460 label *label122
   461 write .thoriumDrill .display ".thoriumDrill"
   462 write .thoriumContainer .display ".thoriumContainer"
 
   494 setaddr :buildBlockFromCfg.1*retaddr *label130 (h:*label130)
   495 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label130) (h:*label130)
   496 label *label130
-    * set *tmp228 :buildBlockFromCfg.1*retval
   497 set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(I"
   498 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   499 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
 
   624 op notEqual *tmp245 *tmp244 null
   625 jump *label167 equal *tmp245 false
   626 ucontrol itemDrop @air 1000
-    * set *tmp246 null
   627 jump *label168 always
   628 label *label167
-    * set *tmp246 null
   629 label *label168
   630 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   631 label *label165
 
   684 op greaterThan *tmp260 *tmp258 *tmp259
   685 jump *label180 notEqual *tmp260 false
   686 label *label182
-    * set *tmp255 null
   687 jump *label178 always
   688 label *label177
   689 label *label183
 
   694 label *label184
   695 jump *label183 always
   696 label *label185
-    * set *tmp255 null
   697 label *label178
   698 set :transportStatus:target 0
   699 set :transportStatus:item null
 
   711 setaddr :error*retaddr *label190 (h:*label190)
   712 call *label13 *invalid :error*retval (m:*label190) (h:*label190)
   713 label *label190
-    * set *tmp266 null
   714 jump *label189 always
   715 label *label188
-    * set *tmp266 null
   716 label *label189
   717 label *label187
   718 return :locateOre*retaddr
 
   742 setaddr :dropAll*retaddr *label197 (h:*label197)
   743 call *label17 *invalid :dropAll*retval (m:*label197) (h:*label197)
   744 label *label197
-    * set *tmp270 null
   745 jump *label196 always
   746 label *label195
-    * set *tmp270 null
   747 label *label196
   748 set :status3:text "Mining..."
   749 setaddr :status3*retaddr *label198 (h:*label198)
 
   759 op land *tmp275 *tmp273 *tmp274
   760 jump *label202 equal *tmp275 false
   761 jump *label201 always
-    * set *tmp276 null
   762 jump *label203 always
   763 label *label202
-    * set *tmp276 null
   764 label *label203
   765 ucontrol mine :mineOre:x :mineOre:y
   766 op greaterThan *tmp277 @second :mineOre:stop
   767 jump *label204 equal *tmp277 false
   768 jump *label201 always
-    * set *tmp278 null
   769 jump *label205 always
   770 label *label204
-    * set *tmp278 null
   771 label *label205
   772 label *label200
   773 sensor *tmp279 @unit @totalItems
 
   833 op land *tmp289 *tmp287 *tmp288
   834 jump *label218 equal *tmp289 false
   835 ucontrol itemDrop @air 1000
-    * set *tmp290 null
   836 jump *label219 always
   837 label *label218
-    * set *tmp290 null
   838 label *label219
   839 label *label216
   840 sensor *tmp291 @unit :fetchBlock:item
 
   871 setaddr :mineOre*retaddr *label225 (h:*label225)
   872 call *label21 *invalid :mineOre*retval (m:*label225) (h:*label225)
   873 label *label225
-    * set *tmp299 null
   874 jump *label224 always
   875 label *label223
-    * set *tmp299 null
   876 label *label224
   877 label *label221
   878 return :supplyBlock*retaddr
 
   908 op land *tmp305 *tmp303 *tmp304
   909 jump *label234 equal *tmp305 false
   910 ucontrol itemDrop @air 1000
-    * set *tmp306 null
   911 jump *label235 always
   912 label *label234
-    * set *tmp306 null
   913 label *label235
   914 label *label232
   915 sensor *tmp307 @unit :supplyBlockFromCore:item
 
   990 op add :unpackCfg:index :unpackCfg:index 1
   991 read *tmp348 :unpackCfg:cfg *tmp347
   992 op sub *tmp349 *tmp348 35
-    * set :unpackCfg:size *tmp349
   993 set *tmp350 :unpackCfg:index
   994 op add :unpackCfg:index :unpackCfg:index 1
   995 read *tmp351 :unpackCfg:cfg *tmp350
 
  1016 setaddr :supplyBlock*retaddr *label245 (h:*label245)
  1017 call *label24 *invalid :supplyBlock*retval (m:*label245) (h:*label245)
  1018 label *label245
-    * set *tmp359 null
  1019 jump *label244 always
  1020 label *label243
  1021 set :supplyBlockFromCore:target .thoriumGenerator
 
  1023 setaddr :supplyBlockFromCore*retaddr *label246 (h:*label246)
  1024 call *label25 *invalid :supplyBlockFromCore*retval (m:*label246) (h:*label246)
  1025 label *label246
-    * set *tmp359 null
  1026 label *label244
  1027 set :fetchBlock:block .thoriumContainer
  1028 set :fetchBlock:item @thorium
 
  1030 call *label23 *invalid :fetchBlock*retval (m:*label247) (h:*label247)
  1031 label *label247
  1032 label *label241
-    * set *tmp356 null
  1033 jump *label240 always
  1034 label *label239
  1035 read *tmp99 .controller ".monos"
 
  1071 label *label258
  1072 set *tmp369 null
  1073 label *label259
-    * set *tmp366 *tmp369
  1074 jump *label257 always
  1075 label *label256
-    * set *tmp366 null
  1076 label *label257
  1077 sensor *tmp370 .core @silicon
  1078 op lessThan *tmp371 *tmp370 .targetSilicon
 
  1113 label *label269
  1114 set *tmp375 *tmp378
  1115 label *label265
-    * set *tmp372 *tmp375
  1116 jump *label263 always
  1117 label *label262
-    * set *tmp372 null
  1118 label *label263
  1119 sensor *tmp379 .battery @totalPower
  1120 op lessThan *tmp380 *tmp379 .powerTarget
 
  1142 label *label272
  1143 set *tmp381 null
  1144 label *label273
-    * set *tmp363 *tmp381
  1145 jump *label255 always
  1146 label *label254
-    * set *tmp363 null
  1147 label *label255
  1148 sensor *tmp385 .core @titanium
  1149 op lessThan *tmp386 *tmp385 .targetTitanium
 
  1280 label *label282
  1281 set *tmp395 null
  1282 label *label283
-    * set *tmp393 *tmp395
  1283 jump *label281 always
  1284 label *label280
  1285 set :status1:text "Goal 11: Fetching titanium"
 
  1291 setaddr :fetchBlock*retaddr *label311 (h:*label311)
  1292 call *label23 *invalid :fetchBlock*retval (m:*label311) (h:*label311)
  1293 label *label311
-    * set *tmp393 null
  1294 label *label281
  1295 label *label253
  1296 set *tmp361 null
  1297 label *label249
-    * set *tmp356 *tmp361
  1298 label *label240
  1299 label *label238
  1300 return :supplyBase*retaddr
 
  1376 jump *label327 equal *tmp436 false
  1377 set *tmp434 false
  1378 jump *label326 always
-    * set *tmp437 null
  1379 jump *label328 always
  1380 label *label327
-    * set *tmp437 null
  1381 label *label328
  1382 sensor *tmp438 .core @lead
  1383 op lessThan *tmp439 *tmp438 .targetLead
  1384 jump *label329 equal *tmp439 false
  1385 set *tmp434 false
  1386 jump *label326 always
-    * set *tmp440 null
  1387 jump *label330 always
  1388 label *label329
-    * set *tmp440 null
  1389 label *label330
  1390 sensor *tmp441 .core @graphite
  1391 op lessThan *tmp442 *tmp441 .targetGraphite
  1392 jump *label331 equal *tmp442 false
  1393 set *tmp434 false
  1394 jump *label326 always
-    * set *tmp443 null
  1395 jump *label332 always
  1396 label *label331
-    * set *tmp443 null
  1397 label *label332
  1398 sensor *tmp444 .core @silicon
  1399 op lessThan *tmp445 *tmp444 .targetSilicon
  1400 jump *label333 equal *tmp445 false
  1401 set *tmp434 false
  1402 jump *label326 always
-    * set *tmp446 null
  1403 jump *label334 always
  1404 label *label333
-    * set *tmp446 null
  1405 label *label334
  1406 sensor *tmp447 .core @titanium
  1407 op lessThan *tmp448 *tmp447 .targetTitanium
  1408 jump *label335 equal *tmp448 false
  1409 set *tmp434 false
  1410 jump *label326 always
-    * set *tmp449 null
  1411 jump *label336 always
  1412 label *label335
-    * set *tmp449 null
  1413 label *label336
  1414 sensor *tmp450 .core @metaglass
  1415 op lessThan *tmp451 *tmp450 .targetMetaglass
  1416 jump *label337 equal *tmp451 false
  1417 set *tmp434 false
  1418 jump *label326 always
-    * set *tmp452 null
  1419 jump *label338 always
  1420 label *label337
-    * set *tmp452 null
  1421 label *label338
  1422 sensor *tmp453 .core @thorium
  1423 op lessThan *tmp454 *tmp453 .targetThorium
  1424 jump *label339 equal *tmp454 false
  1425 set *tmp434 false
  1426 jump *label326 always
-    * set *tmp455 null
  1427 jump *label340 always
  1428 label *label339
-    * set *tmp455 null
  1429 label *label340
  1430 set *tmp434 true
  1431 jump *label326 always
 
  1509 label *label349
  1510 set :buildRemoteBlock*retval :buildBlock*retval
  1511 jump *label345 always
-    * set *tmp467 null
  1512 jump *label347 always
  1513 label *label346
-    * set *tmp467 null
  1514 label *label347
  1515 set :buildRemoteBlock*retval false
  1516 jump *label345 always
 
  1649 sensor *tmp475 @unit @mining
  1650 jump *label371 equal *tmp475 false
  1651 ucontrol stop
-    * set *tmp476 null
  1652 jump *label372 always
  1653 label *label371
-    * set *tmp476 null
  1654 label *label372
  1655 ubind :lineUpUnits:unit
  1656 label *label369

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-11 instructions):
 
   989 set *tmp347 :unpackCfg:index
   990 op add :unpackCfg:index :unpackCfg:index 1
   991 read *tmp348 :unpackCfg:cfg *tmp347
-    * op sub *tmp349 *tmp348 35
   992 set *tmp350 :unpackCfg:index
   993 op add :unpackCfg:index :unpackCfg:index 1
   994 read *tmp351 :unpackCfg:cfg *tmp350
 
  1043 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
  1044 label *label252
  1045 label *label250
-    * set *tmp361 null
  1046 jump *label249 always
  1047 label *label248
  1048 set :supplyBase0:supplied false
 
  1064 call *label24 *invalid :supplyBlock*retval (m:*label261) (h:*label261)
  1065 label *label261
  1066 set :supplyBase0:supplied true
-    * set *tmp369 :supplyBase0:supplied
  1067 jump *label259 always
  1068 label *label258
-    * set *tmp369 null
  1069 label *label259
  1070 jump *label257 always
  1071 label *label256
 
  1086 call *label24 *invalid :supplyBlock*retval (m:*label267) (h:*label267)
  1087 label *label267
  1088 set :supplyBase0:supplied true
-    * set *tmp375 :supplyBase0:supplied
  1089 jump *label265 always
  1090 label *label264
  1091 sensor *tmp376 .smelter @sand
 
  1106 label *label268
  1107 set *tmp378 null
  1108 label *label269
-    * set *tmp375 *tmp378
  1109 label *label265
  1110 jump *label263 always
  1111 label *label262
 
  1131 label *label274
  1132 set *tmp384 null
  1133 label *label275
-    * set *tmp381 *tmp384
  1134 jump *label273 always
  1135 label *label272
-    * set *tmp381 null
  1136 label *label273
  1137 jump *label255 always
  1138 label *label254
 
  1267 label *label289
  1268 set *tmp399 *tmp402
  1269 label *label285
-    * set *tmp395 *tmp399
  1270 jump *label283 always
  1271 label *label282
-    * set *tmp395 null
  1272 label *label283
  1273 jump *label281 always
  1274 label *label280
 
  1283 label *label311
  1284 label *label281
  1285 label *label253
-    * set *tmp361 null
  1286 label *label249
  1287 label *label240
  1288 label *label238

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-7 instructions):
 
   988 set :unpackCfg:rotation *tmp346
   989 set *tmp347 :unpackCfg:index
   990 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp348 :unpackCfg:cfg *tmp347
   991 set *tmp350 :unpackCfg:index
   992 op add :unpackCfg:index :unpackCfg:index 1
   993 read *tmp351 :unpackCfg:cfg *tmp350
 
  1100 call *label24 *invalid :supplyBlock*retval (m:*label271) (h:*label271)
  1101 label *label271
  1102 set :supplyBase0:supplied true
-    * set *tmp378 :supplyBase0:supplied
  1103 jump *label269 always
  1104 label *label268
-    * set *tmp378 null
  1105 label *label269
  1106 label *label265
  1107 jump *label263 always
 
  1123 call *label24 *invalid :supplyBlock*retval (m:*label277) (h:*label277)
  1124 label *label277
  1125 set :supplyBase0:supplied true
-    * set *tmp384 :supplyBase0:supplied
  1126 jump *label275 always
  1127 label *label274
-    * set *tmp384 null
  1128 label *label275
  1129 jump *label273 always
  1130 label *label272
 
  1161 setaddr :mineOre.1*retaddr *label287 (h:*label287)
  1162 call *label22 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
  1163 label *label287
-    * set *tmp399 null
  1164 jump *label285 always
  1165 label *label284
  1166 sensor *tmp400 .core @silicon
 
  1259 label *label295
  1260 set *tmp402 *tmp409
  1261 label *label289
-    * set *tmp399 *tmp402
  1262 label *label285
  1263 jump *label283 always
  1264 label *label282

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-3 instructions):
 
   986 read *tmp345 :unpackCfg:cfg *tmp344
   987 op sub *tmp346 *tmp345 35
   988 set :unpackCfg:rotation *tmp346
-    * set *tmp347 :unpackCfg:index
   989 op add :unpackCfg:index :unpackCfg:index 1
   990 set *tmp350 :unpackCfg:index
   991 op add :unpackCfg:index :unpackCfg:index 1
 
  1185 setaddr :mineOre.1*retaddr *label293 (h:*label293)
  1186 call *label22 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
  1187 label *label293
-    * set *tmp402 null
  1188 jump *label289 always
  1189 label *label288
  1190 sensor *tmp407 .core @copper
 
  1255 label *label299
  1256 set *tmp409 *tmp412
  1257 label *label295
-    * set *tmp402 *tmp409
  1258 label *label289
  1259 label *label285
  1260 jump *label283 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1198 setaddr :mineOre.1*retaddr *label297 (h:*label297)
  1199 call *label22 *invalid :mineOre.1*retval (m:*label297) (h:*label297)
  1200 label *label297
-    * set *tmp409 null
  1201 jump *label295 always
  1202 label *label294
  1203 sensor *tmp410 .core @lead
 
  1252 label *label303
  1253 set *tmp412 *tmp415
  1254 label *label299
-    * set *tmp409 *tmp412
  1255 label *label295
  1256 label *label289
  1257 label *label285

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1211 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1212 call *label22 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
  1213 label *label301
-    * set *tmp412 null
  1214 jump *label299 always
  1215 label *label298
  1216 sensor *tmp413 .core @metaglass
 
  1249 label *label309
  1250 set *tmp415 null
  1251 label *label303
-    * set *tmp412 *tmp415
  1252 label *label299
  1253 label *label295
  1254 label *label289

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1224 setaddr :mineOre.1*retaddr *label305 (h:*label305)
  1225 call *label22 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
  1226 label *label305
-    * set *tmp415 null
  1227 jump *label303 always
  1228 label *label302
  1229 set :status1:text "Goal 10: supplying base"
 
  1246 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1247 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
  1248 label *label309
-    * set *tmp415 null
  1249 label *label303
  1250 label *label299
  1251 label *label295

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-78 instructions):
 
    19 write 511 bank1 511
    20 label *label42
    21 ubind @poly
-    * set *tmp125 @unit
-    * set .builder *tmp125
-    * ulocate building core false @copper .coreX .coreY *tmp127 *tmp126
-    * set .core *tmp126
+   22 set .builder @unit
+   23 ulocate building core false @copper .coreX .coreY 0 .core
    24 label *label43
    25 op equal *tmp128 .core null
    26 jump *label42 notEqual *tmp128 false
 
    29 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    30 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
    31 label *label45
-    * set *tmp129 :buildBlockFromCfg.1*retval
-    * set .press *tmp129
+   32 set .press :buildBlockFromCfg.1*retval
    33 set :buildBlockFromCfg.1:cfg "k*/(7######$$"
    34 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    35 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
    36 label *label46
-    * set *tmp130 :buildBlockFromCfg.1*retval
-    * set .battery *tmp130
+   37 set .battery :buildBlockFromCfg.1*retval
    38 set :buildBlockFromCfg.1:cfg "k+/(7######$%"
    39 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    40 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
 
    43 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    44 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    45 label *label48
-    * set *tmp132 :buildBlockFromCfg.1*retval
-    * set .generator *tmp132
+   46 set .generator :buildBlockFromCfg.1*retval
    47 set .powerTarget 400
    48 set :buildBlockFromCfg.1:cfg "%+-A<######%'"
    49 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    50 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    51 label *label49
-    * set *tmp133 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp133
+   52 set .smelter :buildBlockFromCfg.1*retval
    53 set :buildBlockFromCfg.1:cfg "T+,%%######$("
    54 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    55 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
 
    73 wait 1e-15
    74 read *tmp146 .oreLocator ":findDrillLocation*finished"
    75 jump *label53 equal *tmp146 false
-    * read *tmp143 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp143
-    * read *tmp144 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp144
-    * read *tmp147 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp147
+   76 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   77 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   78 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    79 op equal *tmp148 :buildFirstTitaniumDrill:result false
    80 jump *label54 equal *tmp148 false
    81 set :error:error "Cannot locate spot for titanium drill"
 
    94 wait 1e-15
    95 read *tmp152 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
    96 jump *label57 equal *tmp152 false
-    * read *tmp153 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp135 *tmp153
+   97 read *tmp135 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
    98 jump *label51 always
    99 set *tmp135 null
   100 label *label51
 
   104 setaddr :buildBlockFromCfg.1*retaddr *label58 (h:*label58)
   105 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label58) (h:*label58)
   106 label *label58
-    * set *tmp154 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp154
+  107 set .unloader1 :buildBlockFromCfg.1*retval
   108 set :buildBlockFromCfg.1:cfg "T),%%######$+"
   109 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   110 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
 
   119 setaddr :buildBlockFromCfg*retaddr *label61 (h:*label61)
   120 call *label36 *invalid :buildBlockFromCfg*retval (m:*label61) (h:*label61)
   121 label *label61
-    * set *tmp157 :buildBlockFromCfg*retval
-    * set .controller *tmp157
+  122 set .controller :buildBlockFromCfg*retval
   123 write processor6 .controller ".timer"
   124 write .display .controller ".display"
   125 write .core .controller ".core"
 
   137 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   138 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
   139 label *label63
-    * set *tmp159 :buildBlockFromCfg.1*retval
-    * write *tmp159 .controller ".unloader2"
+  140 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   141 set :buildBlockFromCfg.1:cfg "'(_i#####&&0"
   142 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   143 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   144 label *label64
-    * set *tmp160 :buildBlockFromCfg.1*retval
-    * set :factory *tmp160
+  145 set :factory :buildBlockFromCfg.1*retval
   146 write :factory .controller ".factory"
   147 write :factory .display ".airFactory"
   148 set :setFlareTarget:target 1
 
   190 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   191 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   192 label *label76
-    * set *tmp167 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp167
+  193 set .kiln :buildBlockFromCfg.1*retval
   194 write .kiln .controller ".kiln"
   195 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   196 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
 
   208 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   209 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   210 label *label80
-    * set *tmp171 :buildBlockFromCfg.1*retval
-    * write *tmp171 .controller ".generator2"
+  211 write :buildBlockFromCfg.1*retval .controller ".generator2"
   212 set :buildBlockFromCfg.1:cfg "$(.#U<###&8"
   213 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   214 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   215 label *label81
-    * set *tmp172 :buildBlockFromCfg.1*retval
-    * write *tmp172 .controller ".multipress"
+  216 write :buildBlockFromCfg.1*retval .controller ".multipress"
   217 set .graphiteSurplus 150
   218 set :buildBlockFromCfg.1:cfg " '%-#2#####&:"
   219 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   220 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   221 label *label82
-    * set *tmp173 :buildBlockFromCfg.1*retval
-    * write *tmp173 .controller ".payloadRouter"
+  222 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   223 set :buildBlockFromCfg.1:cfg "*(###A<###$;"
   224 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   225 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   226 label *label83
-    * set *tmp174 :buildBlockFromCfg.1*retval
-    * write *tmp174 .controller ".unloader4"
+  227 write :buildBlockFromCfg.1*retval .controller ".unloader4"
   228 set :buildBlockFromCfg.1:cfg "X*''%######$<"
   229 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   230 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
 
   233 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   234 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   235 label *label85
-    * set *tmp176 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp176
+  236 set :reconstructor :buildBlockFromCfg.1*retval
   237 write :reconstructor .controller ".reconstructor"
   238 write :reconstructor .display ".reconstructor"
   239 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"
 
   253 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
   254 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label89) (h:*label89)
   255 label *label89
-    * set *tmp178 :buildBlockFromCfg.1*retval
-    * write *tmp178 .controller ".smelter2"
+  256 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   257 set :buildBlockFromCfg.1:cfg "T-*%%######$D"
   258 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   259 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
 
   302 write @ore-titanium .display ".nextBlock"
   303 wait 0.000000001
   304 ubind @flare
-    * read *tmp54 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp54
+  305 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   306 write .coreX .oreLocator ":findDrillLocation:x"
   307 write .coreY .oreLocator ":findDrillLocation:y"
   308 write @unit .oreLocator ":findDrillLocation:unit"
 
   343 wait 1e-15
   344 read *tmp203 .oreLocator ":layoutThoriumDrill*finished"
   345 jump *label109 equal *tmp203 false
-    * read *tmp204 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp204
+  346 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   347 op equal *tmp205 :buildThoriumDrill:result false
   348 jump *label110 equal *tmp205 false
   349 set :error:error "Cannot locate spot for thorium drill"
 
   367 wait 1e-15
   368 read *tmp213 .blockBuilder ":buildBlockAt*finished"
   369 jump *label113 equal *tmp213 false
-    * read *tmp214 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp214
+  370 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   371 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read *tmp58 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp59
+  372 read :buildRemoteBlock:x .oreLocator ".water1X"
+  373 read :buildRemoteBlock:y .oreLocator ".water1Y"
   374 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   375 call *label35 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   376 label *label114
   377 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read *tmp62 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp63
+  378 read :buildRemoteBlock:x .oreLocator ".water2X"
+  379 read :buildRemoteBlock:y .oreLocator ".water2Y"
   380 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   381 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   382 label *label115
   383 set :buildRemoteBlock:cfg "o%+FK<A####%7"
-    * read *tmp64 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp65
+  384 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  385 read :buildRemoteBlock:y .oreLocator ".generatorY"
   386 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   387 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   388 label *label116
-    * set *tmp217 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp217
+  389 set .thoriumGenerator :buildRemoteBlock*retval
   390 set :buildRemoteBlock:cfg "g)'%)######$."
-    * read *tmp66 .oreLocator ".nodeX"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".nodeY"
-    * set :buildRemoteBlock:y *tmp67
+  391 read :buildRemoteBlock:x .oreLocator ".nodeX"
+  392 read :buildRemoteBlock:y .oreLocator ".nodeY"
   393 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   394 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   395 label *label117
   396 set :buildRemoteBlock:cfg "r**#-#+####$A"
-    * read *tmp68 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp69
+  397 read :buildRemoteBlock:x .oreLocator ".panelX"
+  398 read :buildRemoteBlock:y .oreLocator ".panelY"
   399 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   400 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   401 label *label118
   402 set :buildRemoteBlock:cfg "k*/(7######$$"
-    * read *tmp70 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp70
-    * read *tmp71 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp71
+  403 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  404 read :buildRemoteBlock:y .oreLocator ".batteryY"
   405 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   406 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   407 label *label119
   408 set :buildRemoteBlock:cfg "**#######%B"
-    * read *tmp60 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp61
+  409 read :buildRemoteBlock:x .oreLocator ".containerX"
+  410 read :buildRemoteBlock:y .oreLocator ".containerY"
   411 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   412 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   413 label *label120
-    * set *tmp221 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp221
+  414 set .thoriumContainer :buildRemoteBlock*retval
   415 op equal *tmp222 .thoriumContainer null
   416 jump *label121 equal *tmp222 false
   417 set .thoriumContainer .thoriumDrill
 
   448 setaddr :buildBlockFromCfg*retaddr *label129 (h:*label129)
   449 call *label36 *invalid :buildBlockFromCfg*retval (m:*label129) (h:*label129)
   450 label *label129
-    * set *tmp227 :buildBlockFromCfg*retval
-    * write *tmp227 .controller ".unloader6"
+  451 write :buildBlockFromCfg*retval .controller ".unloader6"
   452 set :buildBlockFromCfg.1:cfg "X+''%######$H"
   453 setaddr :buildBlockFromCfg.1*retaddr *label130 (h:*label130)
   454 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label130) (h:*label130)
 
   498 label *label142
   499 label *label143
   500 jump *label145 equal true false
-    * op sub *tmp235 @thisy 6
-    * set :lineUpUnits:y *tmp235
+  501 op sub :lineUpUnits:y @thisy 6
   502 set :lineUpUnits:unit @mega
   503 setaddr :lineUpUnits*retaddr *label146 (h:*label146)
   504 call *label41 *invalid :lineUpUnits*retval (m:*label146) (h:*label146)
   505 label *label146
-    * op sub *tmp236 @thisy 10
-    * set :lineUpUnits:y *tmp236
+  506 op sub :lineUpUnits:y @thisy 10
   507 set :lineUpUnits:unit @poly
   508 setaddr :lineUpUnits*retaddr *label147 (h:*label147)
   509 call *label41 *invalid :lineUpUnits*retval (m:*label147) (h:*label147)
   510 label *label147
-    * op sub *tmp237 @thisy 14
-    * set :lineUpUnits:y *tmp237
+  511 op sub :lineUpUnits:y @thisy 14
   512 set :lineUpUnits:unit @mono
   513 setaddr :lineUpUnits*retaddr *label148 (h:*label148)
   514 call *label41 *invalid :lineUpUnits*retval (m:*label148) (h:*label148)
   515 label *label148
-    * op sub *tmp238 @thisy 18
-    * set :lineUpUnits:y *tmp238
+  516 op sub :lineUpUnits:y @thisy 18
   517 set :lineUpUnits:unit @flare
   518 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   519 call *label41 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
 
   628 setaddr :moveToBlock*retaddr *label179 (h:*label179)
   629 call *label18 *invalid :moveToBlock*retval (m:*label179) (h:*label179)
   630 label *label179
-    * sensor *tmp256 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp256
+  631 sensor :depositItems:cap :depositItems:block @itemCapacity
   632 label *label180
   633 ucontrol itemDrop :depositItems:block 30
   634 label *label181
 
   658 return :depositItems*retaddr
   659 end
   660 label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 *tmp264
+  661 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 0
   662 op equal *tmp265 *tmp263 false
   663 jump *label188 equal *tmp265 false
   664 set :error:error "Cannot locate ore"
 
   672 return :locateOre*retaddr
   673 end
   674 label *label21
-    * op min *tmp267 :mineOre:amount 30
-    * set :mineOre:amount *tmp267
+  675 op min :mineOre:amount :mineOre:amount 30
   676 set :transportStatus:target :mineOre:amount
   677 set :transportStatus:item :mineOre:ore
   678 setaddr :transportStatus*retaddr *label192 (h:*label192)
 
   702 setaddr :status3*retaddr *label198 (h:*label198)
   703 call *label11 *invalid :status3*retval (m:*label198) (h:*label198)
   704 label *label198
-    * op add *tmp271 @second 10
-    * set :mineOre:stop *tmp271
+  705 op add :mineOre:stop @second 10
   706 label *label199
-    * sensor *tmp272 @unit @firstItem
-    * set :mineOre:item *tmp272
+  707 sensor :mineOre:item @unit @firstItem
   708 op notEqual *tmp273 :mineOre:item null
   709 op notEqual *tmp274 :mineOre:item :mineOre:ore
   710 op land *tmp275 *tmp273 *tmp274
 
   741 setaddr :status2*retaddr *label208 (h:*label208)
   742 call *label10 *invalid :status2*retval (m:*label208) (h:*label208)
   743 label *label208
-    * set *tmp281 :mineOre.1:ore
-    * set :mineOre:ore *tmp281
+  744 set :mineOre:ore :mineOre.1:ore
   745 set :mineOre:amount 30
   746 set :mineOre:block .core
   747 setaddr :mineOre*retaddr *label209 (h:*label209)
 
   752 end
   753 label *label23
   754 sensor *tmp282 :fetchBlock:block @itemCapacity
-    * op min *tmp283 *tmp282 30
-    * set :transportStatus:target *tmp283
+  755 op min :transportStatus:target *tmp282 30
   756 set :transportStatus:item :fetchBlock:item
   757 setaddr :transportStatus*retaddr *label211 (h:*label211)
   758 call *label12 *invalid :transportStatus*retval (m:*label211) (h:*label211)
 
   775 label *label214
   776 label *label215
   777 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp286 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp286
+  778 sensor :fetchBlock:unitItem @unit @firstItem
   779 op notEqual *tmp287 :fetchBlock:unitItem null
   780 op notEqual *tmp288 :fetchBlock:unitItem :fetchBlock:item
   781 op land *tmp289 *tmp287 *tmp288
 
   806 setaddr :status2*retaddr *label222 (h:*label222)
   807 call *label10 *invalid :status2*retval (m:*label222) (h:*label222)
   808 label *label222
-    * sensor *tmp295 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp295
+  809 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   810 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp297 :supplyBlock:blockCapacity *tmp296
-    * set :supplyBlock:missing *tmp297
+  811 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
   812 op greaterThan *tmp298 :supplyBlock:missing 0
   813 jump *label223 equal *tmp298 false
   814 set :mineOre:ore :supplyBlock:ore
 
   825 end
   826 label *label25
   827 sensor *tmp300 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp301 *tmp300 30
-    * set :transportStatus:target *tmp301
+  828 op min :transportStatus:target *tmp300 30
   829 set :transportStatus:item :supplyBlockFromCore:item
   830 setaddr :transportStatus*retaddr *label227 (h:*label227)
   831 call *label12 *invalid :transportStatus*retval (m:*label227) (h:*label227)
 
   846 label *label230
   847 label *label231
   848 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp302 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp302
+  849 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   850 op notEqual *tmp303 :supplyBlockFromCore:unitItem null
   851 op notEqual *tmp304 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   852 op land *tmp305 *tmp303 *tmp304
 
   876 op add :unpackCfg:index :unpackCfg:index 1
   877 read *tmp312 :unpackCfg:cfg *tmp311
   878 op sub *tmp313 *tmp312 35
-    * lookup block *tmp314 *tmp313
-    * set :unpackCfg:type *tmp314
+  879 lookup block :unpackCfg:type *tmp313
   880 set *tmp315 :unpackCfg:index
   881 op add :unpackCfg:index :unpackCfg:index 1
   882 read *tmp316 :unpackCfg:cfg *tmp315
   883 op sub *tmp317 *tmp316 35
-    * op sub *tmp318 *tmp317 7
-    * set :unpackCfg:x *tmp318
+  884 op sub :unpackCfg:x *tmp317 7
   885 set *tmp319 :unpackCfg:index
   886 op add :unpackCfg:index :unpackCfg:index 1
   887 read *tmp320 :unpackCfg:cfg *tmp319
   888 op sub *tmp321 *tmp320 35
-    * op sub *tmp322 *tmp321 7
-    * set :unpackCfg:y *tmp322
+  889 op sub :unpackCfg:y *tmp321 7
   890 set *tmp323 :unpackCfg:index
   891 op add :unpackCfg:index :unpackCfg:index 1
   892 read *tmp324 :unpackCfg:cfg *tmp323
-    * op sub *tmp325 *tmp324 35
-    * set :unpackCfg:cu *tmp325
+  893 op sub :unpackCfg:cu *tmp324 35
   894 set *tmp326 :unpackCfg:index
   895 op add :unpackCfg:index :unpackCfg:index 1
   896 read *tmp327 :unpackCfg:cfg *tmp326
-    * op sub *tmp328 *tmp327 35
-    * set :unpackCfg:pb *tmp328
+  897 op sub :unpackCfg:pb *tmp327 35
   898 set *tmp329 :unpackCfg:index
   899 op add :unpackCfg:index :unpackCfg:index 1
   900 read *tmp330 :unpackCfg:cfg *tmp329
-    * op sub *tmp331 *tmp330 35
-    * set :unpackCfg:gr *tmp331
+  901 op sub :unpackCfg:gr *tmp330 35
   902 set *tmp332 :unpackCfg:index
   903 op add :unpackCfg:index :unpackCfg:index 1
   904 read *tmp333 :unpackCfg:cfg *tmp332
-    * op sub *tmp334 *tmp333 35
-    * set :unpackCfg:si *tmp334
+  905 op sub :unpackCfg:si *tmp333 35
   906 set *tmp335 :unpackCfg:index
   907 op add :unpackCfg:index :unpackCfg:index 1
   908 read *tmp336 :unpackCfg:cfg *tmp335
-    * op sub *tmp337 *tmp336 35
-    * set :unpackCfg:ti *tmp337
+  909 op sub :unpackCfg:ti *tmp336 35
   910 set *tmp338 :unpackCfg:index
   911 op add :unpackCfg:index :unpackCfg:index 1
   912 read *tmp339 :unpackCfg:cfg *tmp338
-    * op sub *tmp340 *tmp339 35
-    * set :unpackCfg:mg *tmp340
+  913 op sub :unpackCfg:mg *tmp339 35
   914 set *tmp341 :unpackCfg:index
   915 op add :unpackCfg:index :unpackCfg:index 1
   916 read *tmp342 :unpackCfg:cfg *tmp341
-    * op sub *tmp343 *tmp342 35
-    * set :unpackCfg:th *tmp343
+  917 op sub :unpackCfg:th *tmp342 35
   918 set *tmp344 :unpackCfg:index
   919 op add :unpackCfg:index :unpackCfg:index 1
   920 read *tmp345 :unpackCfg:cfg *tmp344
-    * op sub *tmp346 *tmp345 35
-    * set :unpackCfg:rotation *tmp346
+  921 op sub :unpackCfg:rotation *tmp345 35
   922 op add :unpackCfg:index :unpackCfg:index 1
   923 set *tmp350 :unpackCfg:index
   924 op add :unpackCfg:index :unpackCfg:index 1
   925 read *tmp351 :unpackCfg:cfg *tmp350
-    * op sub *tmp352 *tmp351 35
-    * set :unpackCfg:ind *tmp352
+  926 op sub :unpackCfg:ind *tmp351 35
   927 label *label237
   928 return :unpackCfg*retaddr
   929 end
 
  1068 jump *label278 equal *tmp386 false
  1069 sensor *tmp388 .core @titanium
  1070 op sub *tmp389 .targetTitanium *tmp388
-    * op min *tmp390 7 *tmp389
-    * set *tmp387 *tmp390
+ 1071 op min *tmp387 7 *tmp389
  1072 jump *label279 always
  1073 label *label278
  1074 set *tmp387 100
 
  1100 setaddr :status1*retaddr *label290 (h:*label290)
  1101 call *label9 *invalid :status1*retval (m:*label290) (h:*label290)
  1102 label *label290
-    * sensor *tmp403 .core @coal
-    * set :supplyBase0:coal *tmp403
-    * sensor *tmp404 .core @sand
-    * set :supplyBase0:sand *tmp404
+ 1103 sensor :supplyBase0:coal .core @coal
+ 1104 sensor :supplyBase0:sand .core @sand
  1105 op lessThan *tmp405 :supplyBase0:coal :supplyBase0:sand
  1106 jump *label291 equal *tmp405 false
  1107 set *tmp406 @coal
 
  1159 setaddr :status1*retaddr *label306 (h:*label306)
  1160 call *label9 *invalid :status1*retval (m:*label306) (h:*label306)
  1161 label *label306
-    * sensor *tmp416 .core @coal
-    * set :supplyBase0:coal.1 *tmp416
-    * sensor *tmp417 .core @sand
-    * set :supplyBase0:sand.1 *tmp417
+ 1162 sensor :supplyBase0:coal.1 .core @coal
+ 1163 sensor :supplyBase0:sand.1 .core @sand
  1164 op lessThanEq *tmp418 :supplyBase0:coal.1 :supplyBase0:sand.1
  1165 jump *label307 equal *tmp418 false
  1166 set *tmp419 @coal
 
  1245 write :meetTarget:thorium .display ".targetThorium"
  1246 set .targetCopper :meetTarget:copper
  1247 op add *tmp422 :meetTarget:lead .leadSurplus
-    * op add *tmp423 *tmp422 1
-    * set .targetLead *tmp423
+ 1248 op add .targetLead *tmp422 1
  1249 set .targetGraphite :meetTarget:graphite
  1250 set .targetSilicon :meetTarget:silicon
  1251 set .targetTitanium :meetTarget:titanium
 
  1365 wait 1e-15
  1366 read *tmp463 .blockBuilder ":buildBlockAt*finished"
  1367 jump *label344 equal *tmp463 false
-    * read *tmp464 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp464
+ 1368 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1369 jump *label342 always
  1370 set :buildBlock*retval null
  1371 label *label342
 
  1458 return :buildBlockFromCfg*retaddr
  1459 end
  1460 label *label37
-    * set *tmp470 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp470
+ 1461 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1462 set :buildBlockFromCfg:config null
  1463 setaddr :buildBlockFromCfg*retaddr *label354 (h:*label354)
  1464 call *label36 *invalid :buildBlockFromCfg*retval (m:*label354) (h:*label354)
 
  1517 label *label40
  1518 label *label361
  1519 ubind :flagUnits:unit
-    * set *tmp471 @unit
-    * set :flagUnits:firstUnit *tmp471
+ 1520 set :flagUnits:firstUnit @unit
  1521 label *label362
  1522 op equal *tmp472 :flagUnits:firstUnit null
  1523 jump *label361 notEqual *tmp472 false
 
  1538 ubind :lineUpUnits:unit
  1539 set :lineUpUnits:firstUnit @unit
  1540 label *label368
-    * sensor *tmp474 @unit @flag
-    * set :lineUpUnits:x *tmp474
+ 1541 sensor :lineUpUnits:x @unit @flag
  1542 ucontrol itemDrop @air 1000
  1543 ucontrol move :lineUpUnits:x :lineUpUnits:y
  1544 sensor *tmp475 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   497 call *label40 *invalid :flagUnits*retval (m:*label142) (h:*label142)
   498 label *label142
   499 label *label143
-    * jump *label145 equal true false
   500 op sub :lineUpUnits:y @thisy 6
   501 set :lineUpUnits:unit @mega
   502 setaddr :lineUpUnits*retaddr *label146 (h:*label146)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-54 instructions):
 
    22 set .builder @unit
    23 ulocate building core false @copper .coreX .coreY 0 .core
    24 label *label43
-    * op equal *tmp128 .core null
-    * jump *label42 notEqual *tmp128 false
+   25 jump *label42 equal .core null
    26 label *label44
    27 set :buildBlockFromCfg.1:cfg "#'+nA######%#"
    28 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
 
    75 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    76 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    77 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp148 :buildFirstTitaniumDrill:result false
-    * jump *label54 equal *tmp148 false
+   78 jump *label54 notEqual :buildFirstTitaniumDrill:result false
    79 set :error:error "Cannot locate spot for titanium drill"
    80 setaddr :error*retaddr *label56 (h:*label56)
    81 call *label13 *invalid :error*retval (m:*label56) (h:*label56)
 
   164 call *label32 *invalid :supplyBase*retval (m:*label71) (h:*label71)
   165 label *label71
   166 sensor *tmp161 .battery @totalPower
-    * op lessThan *tmp162 *tmp161 300
-    * jump *label72 equal *tmp162 false
+  167 jump *label72 greaterThanEq *tmp161 300
   168 jump *label70 always
   169 jump *label73 always
   170 label *label72
   171 label *label73
   172 label *label69
   173 read *tmp99 .controller ".monos"
-    * op lessThan *tmp164 *tmp99 3
-    * jump *label68 notEqual *tmp164 false
+  174 jump *label68 lessThan *tmp99 3
   175 label *label70
   176 set .siliconSurplus 65
   177 set :buildBlockFromCfg.1:cfg ",)###A<###$1"
 
   268 label *label93
   269 label *label94
   270 read *tmp100 .controller ".polys"
-    * op lessThan *tmp182 *tmp100 3
-    * jump *label96 equal *tmp182 false
+  271 jump *label96 greaterThanEq *tmp100 3
   272 setaddr :supplyBase*retaddr *label97 (h:*label97)
   273 call *label32 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   274 label *label97
 
   281 label *label98
   282 label *label99
   283 read *tmp98 .controller ".flares"
-    * op lessThan *tmp183 *tmp98 2
-    * jump *label101 equal *tmp183 false
+  284 jump *label101 greaterThanEq *tmp98 2
   285 setaddr :supplyBase*retaddr *label102 (h:*label102)
   286 call *label32 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   287 label *label102
 
   338 read *tmp203 .oreLocator ":layoutThoriumDrill*finished"
   339 jump *label109 equal *tmp203 false
   340 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp205 :buildThoriumDrill:result false
-    * jump *label110 equal *tmp205 false
+  341 jump *label110 notEqual :buildThoriumDrill:result false
   342 set :error:error "Cannot locate spot for thorium drill"
   343 setaddr :error*retaddr *label112 (h:*label112)
   344 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
 
   405 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   406 label *label120
   407 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp222 .thoriumContainer null
-    * jump *label121 equal *tmp222 false
+  408 jump *label121 notEqual .thoriumContainer null
   409 set .thoriumContainer .thoriumDrill
   410 jump *label122 always
   411 label *label121
 
   427 label *label124
   428 label *label125
   429 read *tmp100 .controller ".polys"
-    * op lessThan *tmp226 *tmp100 5
-    * jump *label127 equal *tmp226 false
+  430 jump *label127 greaterThanEq *tmp100 5
   431 setaddr :supplyBase*retaddr *label128 (h:*label128)
   432 call *label32 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   433 label *label128
 
   458 label *label133
   459 label *label134
   460 read *tmp101 .controller ".megas"
-    * op lessThan *tmp229 *tmp101 1
-    * jump *label136 equal *tmp229 false
+  461 jump *label136 greaterThanEq *tmp101 1
   462 setaddr :supplyBase*retaddr *label137 (h:*label137)
   463 call *label32 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   464 label *label137
 
   548 label *label156
   549 label *label157
   550 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
-    * op equal *tmp240 *tmp239 false
-    * jump *label159 equal *tmp240 false
+  551 jump *label159 notEqual *tmp239 false
   552 op sub *tmp241 :moveTo:radius 0.5
   553 ucontrol approach :moveTo:x :moveTo:y *tmp241
   554 label *label158
 
   564 label *label163
   565 label *label164
   566 sensor *tmp244 @unit @firstItem
-    * op notEqual *tmp245 *tmp244 null
-    * jump *label167 equal *tmp245 false
+  567 jump *label167 equal *tmp244 null
   568 ucontrol itemDrop @air 1000
   569 jump *label168 always
   570 label *label167
 
   572 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   573 label *label165
   574 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
-    * op equal *tmp248 *tmp247 false
-    * jump *label164 notEqual *tmp248 false
+  575 jump *label164 equal *tmp247 false
   576 label *label166
   577 label *label162
   578 return :moveToEmpty*retaddr
 
   580 label *label17
   581 label *label170
   582 sensor *tmp249 @unit @firstItem
-    * op notEqual *tmp250 *tmp249 null
-    * jump *label172 equal *tmp250 false
+  583 jump *label172 equal *tmp249 null
   584 ucontrol itemDrop @air 1000
   585 label *label171
   586 jump *label170 always
 
   606 call *label11 *invalid :status3*retval (m:*label176) (h:*label176)
   607 label *label176
   608 sensor *tmp253 @unit @firstItem
-    * op equal *tmp254 *tmp253 :depositItems:item
-    * jump *label177 equal *tmp254 false
+  609 jump *label177 notEqual *tmp253 :depositItems:item
   610 set :moveToBlock:block :depositItems:block
   611 set :moveToBlock:radius 6
   612 setaddr :moveToBlock*retaddr *label179 (h:*label179)
 
   619 sensor *tmp257 @unit @firstItem
   620 op mul *tmp258 *tmp257 :depositItems:cap
   621 sensor *tmp259 :depositItems:block :depositItems:item
-    * op greaterThan *tmp260 *tmp258 *tmp259
-    * jump *label180 notEqual *tmp260 false
+  622 jump *label180 greaterThan *tmp258 *tmp259
   623 label *label182
   624 jump *label178 always
   625 label *label177
   626 label *label183
   627 sensor *tmp261 @unit @firstItem
-    * op notEqual *tmp262 *tmp261 null
-    * jump *label185 equal *tmp262 false
+  628 jump *label185 equal *tmp261 null
   629 ucontrol itemDrop @air 1000
   630 label *label184
   631 jump *label183 always
 
   641 end
   642 label *label20
   643 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 0
-    * op equal *tmp265 *tmp263 false
-    * jump *label188 equal *tmp265 false
+  644 jump *label188 notEqual *tmp263 false
   645 set :error:error "Cannot locate ore"
   646 setaddr :error*retaddr *label190 (h:*label190)
   647 call *label13 *invalid :error*retval (m:*label190) (h:*label190)
 
   671 call *label16 *invalid :moveToEmpty*retval (m:*label194) (h:*label194)
   672 label *label194
   673 sensor *tmp268 @unit @firstItem
-    * op notEqual *tmp269 *tmp268 :mineOre:ore
-    * jump *label195 equal *tmp269 false
+  674 jump *label195 equal *tmp268 :mineOre:ore
   675 setaddr :dropAll*retaddr *label197 (h:*label197)
   676 call *label17 *invalid :dropAll*retval (m:*label197) (h:*label197)
   677 label *label197
 
   694 label *label202
   695 label *label203
   696 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp277 @second :mineOre:stop
-    * jump *label204 equal *tmp277 false
+  697 jump *label204 lessThanEq @second :mineOre:stop
   698 jump *label201 always
   699 jump *label205 always
   700 label *label204
   701 label *label205
   702 label *label200
   703 sensor *tmp279 @unit @totalItems
-    * op lessThan *tmp280 *tmp279 :mineOre:amount
-    * jump *label199 notEqual *tmp280 false
+  704 jump *label199 lessThan *tmp279 :mineOre:amount
   705 label *label201
   706 ucontrol unbind
   707 set :depositItems:block :mineOre:block
 
   787 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   788 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
   789 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
-    * op greaterThan *tmp298 :supplyBlock:missing 0
-    * jump *label223 equal *tmp298 false
+  790 jump *label223 lessThanEq :supplyBlock:missing 0
   791 set :mineOre:ore :supplyBlock:ore
   792 set :mineOre:amount :supplyBlock:blockCapacity
   793 set :mineOre:block :supplyBlock:block
 
   915 call *label9 *invalid :status1*retval (m:*label242) (h:*label242)
   916 label *label242
   917 sensor *tmp357 .core @coal
-    * op lessThan *tmp358 *tmp357 50
-    * jump *label243 equal *tmp358 false
+  918 jump *label243 greaterThanEq *tmp357 50
   919 set :supplyBlock:block .thoriumGenerator
   920 set :supplyBlock:ore @coal
   921 setaddr :supplyBlock*retaddr *label245 (h:*label245)
 
   938 jump *label240 always
   939 label *label239
   940 read *tmp99 .controller ".monos"
-    * op greaterThan *tmp360 *tmp99 3
-    * jump *label248 equal *tmp360 false
+  941 jump *label248 lessThanEq *tmp99 3
   942 set :status1:text "Phase 1: supplying base"
   943 setaddr :status1*retaddr *label251 (h:*label251)
   944 call *label9 *invalid :status1*retval (m:*label251) (h:*label251)
 
   951 jump *label249 always
   952 label *label248
   953 set :supplyBase0:supplied false
-    * op equal *tmp362 .unloader1 null
-    * jump *label254 equal *tmp362 false
+  954 jump *label254 notEqual .unloader1 null
   955 sensor *tmp364 .core @graphite
-    * op lessThan *tmp365 *tmp364 .targetGraphite
-    * jump *label256 equal *tmp365 false
+  956 jump *label256 greaterThanEq *tmp364 .targetGraphite
   957 sensor *tmp367 .press @coal
-    * op lessThan *tmp368 *tmp367 5
-    * jump *label258 equal *tmp368 false
+  958 jump *label258 greaterThanEq *tmp367 5
   959 set :status1:text "Goal 1: graphite requirement"
   960 setaddr :status1*retaddr *label260 (h:*label260)
   961 call *label9 *invalid :status1*retval (m:*label260) (h:*label260)
 
   973 label *label256
   974 label *label257
   975 sensor *tmp370 .core @silicon
-    * op lessThan *tmp371 *tmp370 .targetSilicon
-    * jump *label262 equal *tmp371 false
+  976 jump *label262 greaterThanEq *tmp370 .targetSilicon
   977 sensor *tmp373 .smelter @coal
-    * op lessThan *tmp374 *tmp373 5
-    * jump *label264 equal *tmp374 false
+  978 jump *label264 greaterThanEq *tmp373 5
   979 set :status1:text "Goal 2: coal for silicon requirement"
   980 setaddr :status1*retaddr *label266 (h:*label266)
   981 call *label9 *invalid :status1*retval (m:*label266) (h:*label266)
 
   989 jump *label265 always
   990 label *label264
   991 sensor *tmp376 .smelter @sand
-    * op lessThan *tmp377 *tmp376 5
-    * jump *label268 equal *tmp377 false
+  992 jump *label268 greaterThanEq *tmp376 5
   993 set :status1:text "Goal 3: sand for silicon requirement"
   994 setaddr :status1*retaddr *label270 (h:*label270)
   995 call *label9 *invalid :status1*retval (m:*label270) (h:*label270)
 
  1008 label *label262
  1009 label *label263
  1010 sensor *tmp379 .battery @totalPower
-    * op lessThan *tmp380 *tmp379 .powerTarget
-    * jump *label272 equal *tmp380 false
+ 1011 jump *label272 greaterThanEq *tmp379 .powerTarget
  1012 sensor *tmp382 .generator @coal
-    * op lessThan *tmp383 *tmp382 2
-    * jump *label274 equal *tmp383 false
+ 1013 jump *label274 greaterThanEq *tmp382 2
  1014 set :status1:text "Goal 4: supplying generator"
  1015 setaddr :status1*retaddr *label276 (h:*label276)
  1016 call *label9 *invalid :status1*retval (m:*label276) (h:*label276)
 
  1031 label *label254
  1032 label *label255
  1033 sensor *tmp385 .core @titanium
-    * op lessThan *tmp386 *tmp385 .targetTitanium
-    * jump *label278 equal *tmp386 false
+ 1034 jump *label278 greaterThanEq *tmp385 .targetTitanium
  1035 sensor *tmp388 .core @titanium
  1036 op sub *tmp389 .targetTitanium *tmp388
  1037 op min *tmp387 7 *tmp389
 
  1041 label *label279
  1042 set :supplyBase0:titaniumTrigger *tmp387
  1043 sensor *tmp391 .titaniumDrill @titanium
-    * op lessThan *tmp392 *tmp391 :supplyBase0:titaniumTrigger
-    * jump *label280 equal *tmp392 false
-    * op equal *tmp394 :supplyBase0:supplied false
-    * jump *label282 equal *tmp394 false
+ 1044 jump *label280 greaterThanEq *tmp391 :supplyBase0:titaniumTrigger
+ 1045 jump *label282 notEqual :supplyBase0:supplied false
  1046 sensor *tmp396 .battery @totalPower
  1047 op mul *tmp397 .unloader1 .powerTarget
-    * op lessThan *tmp398 *tmp396 *tmp397
-    * jump *label284 equal *tmp398 false
+ 1048 jump *label284 greaterThanEq *tmp396 *tmp397
  1049 set :status1:text "Goal 5: supplying generator"
  1050 setaddr :status1*retaddr *label286 (h:*label286)
  1051 call *label9 *invalid :status1*retval (m:*label286) (h:*label286)
 
  1057 jump *label285 always
  1058 label *label284
  1059 sensor *tmp400 .core @silicon
-    * op lessThan *tmp401 *tmp400 .targetSilicon
-    * jump *label288 equal *tmp401 false
+ 1060 jump *label288 greaterThanEq *tmp400 .targetSilicon
  1061 set :status1:text "Goal 6: silicon requirement"
  1062 setaddr :status1*retaddr *label290 (h:*label290)
  1063 call *label9 *invalid :status1*retval (m:*label290) (h:*label290)
  1064 label *label290
  1065 sensor :supplyBase0:coal .core @coal
  1066 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp405 :supplyBase0:coal :supplyBase0:sand
-    * jump *label291 equal *tmp405 false
+ 1067 jump *label291 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1068 set *tmp406 @coal
  1069 jump *label292 always
  1070 label *label291
 
  1078 jump *label289 always
  1079 label *label288
  1080 sensor *tmp407 .core @copper
-    * op lessThan *tmp408 *tmp407 .targetCopper
-    * jump *label294 equal *tmp408 false
+ 1081 jump *label294 greaterThanEq *tmp407 .targetCopper
  1082 set :status1:text "Goal 7: copper requirement"
  1083 setaddr :status1*retaddr *label296 (h:*label296)
  1084 call *label9 *invalid :status1*retval (m:*label296) (h:*label296)
 
  1090 jump *label295 always
  1091 label *label294
  1092 sensor *tmp410 .core @lead
-    * op lessThan *tmp411 *tmp410 .targetLead
-    * jump *label298 equal *tmp411 false
+ 1093 jump *label298 greaterThanEq *tmp410 .targetLead
  1094 set :status1:text "Goal 8: lead requirement"
  1095 setaddr :status1*retaddr *label300 (h:*label300)
  1096 call *label9 *invalid :status1*retval (m:*label300) (h:*label300)
 
  1102 jump *label299 always
  1103 label *label298
  1104 sensor *tmp413 .core @metaglass
-    * op lessThan *tmp414 *tmp413 .targetMetaglass
-    * jump *label302 equal *tmp414 false
+ 1105 jump *label302 greaterThanEq *tmp413 .targetMetaglass
  1106 set :status1:text "Goal 9: metaglass requirement"
  1107 setaddr :status1*retaddr *label304 (h:*label304)
  1108 call *label9 *invalid :status1*retval (m:*label304) (h:*label304)
 
  1119 label *label306
  1120 sensor :supplyBase0:coal.1 .core @coal
  1121 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp418 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label307 equal *tmp418 false
+ 1122 jump *label307 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1123 set *tmp419 @coal
  1124 jump *label308 always
  1125 label *label307
 
  1228 write .targetCopper processor8 ".monoCopperTarget"
  1229 label *label323
  1230 sensor *tmp435 .core @copper
-    * op lessThan *tmp436 *tmp435 .targetCopper
-    * jump *label327 equal *tmp436 false
+ 1231 jump *label327 greaterThanEq *tmp435 .targetCopper
  1232 set *tmp434 false
  1233 jump *label326 always
  1234 jump *label328 always
  1235 label *label327
  1236 label *label328
  1237 sensor *tmp438 .core @lead
-    * op lessThan *tmp439 *tmp438 .targetLead
-    * jump *label329 equal *tmp439 false
+ 1238 jump *label329 greaterThanEq *tmp438 .targetLead
  1239 set *tmp434 false
  1240 jump *label326 always
  1241 jump *label330 always
  1242 label *label329
  1243 label *label330
  1244 sensor *tmp441 .core @graphite
-    * op lessThan *tmp442 *tmp441 .targetGraphite
-    * jump *label331 equal *tmp442 false
+ 1245 jump *label331 greaterThanEq *tmp441 .targetGraphite
  1246 set *tmp434 false
  1247 jump *label326 always
  1248 jump *label332 always
  1249 label *label331
  1250 label *label332
  1251 sensor *tmp444 .core @silicon
-    * op lessThan *tmp445 *tmp444 .targetSilicon
-    * jump *label333 equal *tmp445 false
+ 1252 jump *label333 greaterThanEq *tmp444 .targetSilicon
  1253 set *tmp434 false
  1254 jump *label326 always
  1255 jump *label334 always
  1256 label *label333
  1257 label *label334
  1258 sensor *tmp447 .core @titanium
-    * op lessThan *tmp448 *tmp447 .targetTitanium
-    * jump *label335 equal *tmp448 false
+ 1259 jump *label335 greaterThanEq *tmp447 .targetTitanium
  1260 set *tmp434 false
  1261 jump *label326 always
  1262 jump *label336 always
  1263 label *label335
  1264 label *label336
  1265 sensor *tmp450 .core @metaglass
-    * op lessThan *tmp451 *tmp450 .targetMetaglass
-    * jump *label337 equal *tmp451 false
+ 1266 jump *label337 greaterThanEq *tmp450 .targetMetaglass
  1267 set *tmp434 false
  1268 jump *label326 always
  1269 jump *label338 always
  1270 label *label337
  1271 label *label338
  1272 sensor *tmp453 .core @thorium
-    * op lessThan *tmp454 *tmp453 .targetThorium
-    * jump *label339 equal *tmp454 false
+ 1273 jump *label339 greaterThanEq *tmp453 .targetThorium
  1274 set *tmp434 false
  1275 jump *label326 always
  1276 jump *label340 always
 
  1280 jump *label326 always
  1281 set *tmp434 null
  1282 label *label326
-    * op equal *tmp456 *tmp434 false
-    * jump *label325 equal *tmp456 false
+ 1283 jump *label325 notEqual *tmp434 false
  1284 setaddr :supplyBase*retaddr *label341 (h:*label341)
  1285 call *label32 *invalid :supplyBase*retval (m:*label341) (h:*label341)
  1286 label *label341
 
  1322 end
  1323 label *label35
  1324 op add *tmp465 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp466 *tmp465 0
-    * jump *label346 equal *tmp466 false
+ 1325 jump *label346 lessThanEq *tmp465 0
  1326 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1327 setaddr :unpackCfg*retaddr *label348 (h:*label348)
  1328 call *label31 *invalid :unpackCfg*retval (m:*label348) (h:*label348)
 
  1467 ubind :flagUnits:unit
  1468 set :flagUnits:firstUnit @unit
  1469 label *label362
-    * op equal *tmp472 :flagUnits:firstUnit null
-    * jump *label361 notEqual *tmp472 false
+ 1470 jump *label361 equal :flagUnits:firstUnit null
  1471 label *label363
  1472 set :flagUnits:x @thisx
  1473 label *label364
 
  1475 op add :flagUnits:x :flagUnits:x 4
  1476 ubind :flagUnits:unit
  1477 label *label365
-    * op notEqual *tmp473 @unit :flagUnits:firstUnit
-    * jump *label364 notEqual *tmp473 false
+ 1478 jump *label364 notEqual @unit :flagUnits:firstUnit
  1479 label *label366
  1480 label *label360
  1481 return :flagUnits*retaddr
 
  1495 label *label372
  1496 ubind :lineUpUnits:unit
  1497 label *label369
-    * op notEqual *tmp477 @unit :lineUpUnits:firstUnit
-    * jump *label368 notEqual *tmp477 false
+ 1498 jump *label368 notEqual @unit :lineUpUnits:firstUnit
  1499 label *label370
  1500 label *label367
  1501 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-29 instructions):
 
    80 setaddr :error*retaddr *label56 (h:*label56)
    81 call *label13 *invalid :error*retval (m:*label56) (h:*label56)
    82 label *label56
-    * jump *label55 always
    83 label *label54
    84 label *label55
    85 write @pneumatic-drill .display ".nextBlock"
 
   165 sensor *tmp161 .battery @totalPower
   166 jump *label72 greaterThanEq *tmp161 300
   167 jump *label70 always
-    * jump *label73 always
   168 label *label72
   169 label *label73
   170 label *label69
 
   341 setaddr :error*retaddr *label112 (h:*label112)
   342 call *label13 *invalid :error*retval (m:*label112) (h:*label112)
   343 label *label112
-    * jump *label111 always
   344 label *label110
   345 label *label111
   346 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   404 set .thoriumContainer :buildRemoteBlock*retval
   405 jump *label121 notEqual .thoriumContainer null
   406 set .thoriumContainer .thoriumDrill
-    * jump *label122 always
   407 label *label121
   408 label *label122
   409 write .thoriumDrill .display ".thoriumDrill"
 
   562 sensor *tmp244 @unit @firstItem
   563 jump *label167 equal *tmp244 null
   564 ucontrol itemDrop @air 1000
-    * jump *label168 always
   565 label *label167
   566 label *label168
   567 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   641 setaddr :error*retaddr *label190 (h:*label190)
   642 call *label13 *invalid :error*retval (m:*label190) (h:*label190)
   643 label *label190
-    * jump *label189 always
   644 label *label188
   645 label *label189
   646 label *label187
 
   669 setaddr :dropAll*retaddr *label197 (h:*label197)
   670 call *label17 *invalid :dropAll*retval (m:*label197) (h:*label197)
   671 label *label197
-    * jump *label196 always
   672 label *label195
   673 label *label196
   674 set :status3:text "Mining..."
 
   683 op land *tmp275 *tmp273 *tmp274
   684 jump *label202 equal *tmp275 false
   685 jump *label201 always
-    * jump *label203 always
   686 label *label202
   687 label *label203
   688 ucontrol mine :mineOre:x :mineOre:y
   689 jump *label204 lessThanEq @second :mineOre:stop
   690 jump *label201 always
-    * jump *label205 always
   691 label *label204
   692 label *label205
   693 label *label200
 
   750 op land *tmp289 *tmp287 *tmp288
   751 jump *label218 equal *tmp289 false
   752 ucontrol itemDrop @air 1000
-    * jump *label219 always
   753 label *label218
   754 label *label219
   755 label *label216
 
   784 setaddr :mineOre*retaddr *label225 (h:*label225)
   785 call *label21 *invalid :mineOre*retval (m:*label225) (h:*label225)
   786 label *label225
-    * jump *label224 always
   787 label *label223
   788 label *label224
   789 label *label221
 
   818 op land *tmp305 *tmp303 *tmp304
   819 jump *label234 equal *tmp305 false
   820 ucontrol itemDrop @air 1000
-    * jump *label235 always
   821 label *label234
   822 label *label235
   823 label *label232
 
   954 call *label24 *invalid :supplyBlock*retval (m:*label261) (h:*label261)
   955 label *label261
   956 set :supplyBase0:supplied true
-    * jump *label259 always
   957 label *label258
   958 label *label259
-    * jump *label257 always
   959 label *label256
   960 label *label257
   961 sensor *tmp370 .core @silicon
 
   986 call *label24 *invalid :supplyBlock*retval (m:*label271) (h:*label271)
   987 label *label271
   988 set :supplyBase0:supplied true
-    * jump *label269 always
   989 label *label268
   990 label *label269
   991 label *label265
-    * jump *label263 always
   992 label *label262
   993 label *label263
   994 sensor *tmp379 .battery @totalPower
 
  1005 call *label24 *invalid :supplyBlock*retval (m:*label277) (h:*label277)
  1006 label *label277
  1007 set :supplyBase0:supplied true
-    * jump *label275 always
  1008 label *label274
  1009 label *label275
-    * jump *label273 always
  1010 label *label272
  1011 label *label273
-    * jump *label255 always
  1012 label *label254
  1013 label *label255
  1014 sensor *tmp385 .core @titanium
 
  1116 label *label295
  1117 label *label289
  1118 label *label285
-    * jump *label283 always
  1119 label *label282
  1120 label *label283
  1121 jump *label281 always
 
  1211 jump *label327 greaterThanEq *tmp435 .targetCopper
  1212 set *tmp434 false
  1213 jump *label326 always
-    * jump *label328 always
  1214 label *label327
  1215 label *label328
  1216 sensor *tmp438 .core @lead
  1217 jump *label329 greaterThanEq *tmp438 .targetLead
  1218 set *tmp434 false
  1219 jump *label326 always
-    * jump *label330 always
  1220 label *label329
  1221 label *label330
  1222 sensor *tmp441 .core @graphite
  1223 jump *label331 greaterThanEq *tmp441 .targetGraphite
  1224 set *tmp434 false
  1225 jump *label326 always
-    * jump *label332 always
  1226 label *label331
  1227 label *label332
  1228 sensor *tmp444 .core @silicon
  1229 jump *label333 greaterThanEq *tmp444 .targetSilicon
  1230 set *tmp434 false
  1231 jump *label326 always
-    * jump *label334 always
  1232 label *label333
  1233 label *label334
  1234 sensor *tmp447 .core @titanium
  1235 jump *label335 greaterThanEq *tmp447 .targetTitanium
  1236 set *tmp434 false
  1237 jump *label326 always
-    * jump *label336 always
  1238 label *label335
  1239 label *label336
  1240 sensor *tmp450 .core @metaglass
  1241 jump *label337 greaterThanEq *tmp450 .targetMetaglass
  1242 set *tmp434 false
  1243 jump *label326 always
-    * jump *label338 always
  1244 label *label337
  1245 label *label338
  1246 sensor *tmp453 .core @thorium
  1247 jump *label339 greaterThanEq *tmp453 .targetThorium
  1248 set *tmp434 false
  1249 jump *label326 always
-    * jump *label340 always
  1250 label *label339
  1251 label *label340
  1252 set *tmp434 true
 
  1328 label *label349
  1329 set :buildRemoteBlock*retval :buildBlock*retval
  1330 jump *label345 always
-    * jump *label347 always
  1331 label *label346
  1332 label *label347
  1333 set :buildRemoteBlock*retval false
 
  1462 sensor *tmp475 @unit @mining
  1463 jump *label371 equal *tmp475 false
  1464 ucontrol stop
-    * jump *label372 always
  1465 label *label371
  1466 label *label372
  1467 ubind :lineUpUnits:unit

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
     8 set .smelter null
     9 set .titaniumDrill null
    10 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
    11 set .thoriumContainer null
    12 set .thoriumGenerator null
    13 set .leadSurplus 0
 
    52 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    53 label *label50
    54 set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   55 set :meetTarget.1:cfg "w**5#-#####%)"
    56 setaddr :meetTarget.1*retaddr *label52 (h:*label52)
    57 call *label38 *invalid :meetTarget.1*retval (m:*label52) (h:*label52)
    58 label *label52
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   59 write @titanium processor1 ".nextBlock"
+   60 write .coreX processor4 ":findDrillLocation:x"
+   61 write .coreY processor4 ":findDrillLocation:y"
+   62 write @unit processor4 ":findDrillLocation:unit"
+   63 write @titanium processor4 ":findDrillLocation:item"
+   64 write @ore-titanium processor4 ":findDrillLocation:ore"
+   65 write 2 processor4 ":findDrillLocation:size"
+   66 write 4 processor4 ":findDrillLocation:limit"
+   67 write false processor4 ":findDrillLocation*finished"
+   68 write 1 processor4 "@counter"
    69 label *label53
    70 wait 1e-15
-    * read *tmp146 .oreLocator ":findDrillLocation*finished"
+   71 read *tmp146 processor4 ":findDrillLocation*finished"
    72 jump *label53 equal *tmp146 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   73 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   74 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   75 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    76 jump *label54 notEqual :buildFirstTitaniumDrill:result false
    77 set :error:error "Cannot locate spot for titanium drill"
    78 setaddr :error*retaddr *label56 (h:*label56)
 
    80 label *label56
    81 label *label54
    82 label *label55
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   83 write @pneumatic-drill processor1 ".nextBlock"
+   84 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   85 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   86 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   87 write 2 processor5 "@counter"
    88 label *label57
    89 wait 1e-15
-    * read *tmp152 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   90 read *tmp152 processor5 ":buildFirstTitaniumDrillAt*finished"
    91 jump *label57 equal *tmp152 false
-    * read *tmp135 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   92 read *tmp135 processor5 ":buildFirstTitaniumDrillAt*retval"
    93 jump *label51 always
-    * set *tmp135 null
    94 label *label51
    95 set .titaniumDrill *tmp135
-    * write .titaniumDrill .display ".titaniumDrill"
+   96 write *tmp135 processor1 ".titaniumDrill"
    97 set :buildBlockFromCfg.1:cfg "*,###A<###$*"
    98 setaddr :buildBlockFromCfg.1*retaddr *label58 (h:*label58)
    99 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label58) (h:*label58)
 
   114 call *label36 *invalid :buildBlockFromCfg*retval (m:*label61) (h:*label61)
   115 label *label61
   116 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  117 write processor6 :buildBlockFromCfg*retval ".timer"
+  118 write processor1 :buildBlockFromCfg*retval ".display"
+  119 write .core :buildBlockFromCfg*retval ".core"
+  120 write bank1 :buildBlockFromCfg*retval ".bank"
+  121 write .battery :buildBlockFromCfg*retval ".battery"
+  122 write .generator :buildBlockFromCfg*retval ".generator"
+  123 write .smelter :buildBlockFromCfg*retval ".smelter"
+  124 write .press :buildBlockFromCfg*retval ".press"
+  125 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   126 set :buildBlockFromCfg.1:cfg "g)'%)######$."
   127 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   128 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
 
   137 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   138 label *label64
   139 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  140 write :buildBlockFromCfg.1*retval .controller ".factory"
+  141 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   142 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  143 write 1 .controller ".flareTarget"
+  144 write 1 processor1 ".flareTarget"
   145 label *label65
   146 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  147 write 3 .controller ".monoTarget"
+  148 write 3 processor1 ".monoTarget"
   149 label *label66
   150 write 85 .controller ".pressTarget"
   151 write 150 .controller ".smelterTarget"
   152 write 30 .controller ".kilnTarget"
   153 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  154 set .siliconSurplus 20
   155 setaddr :buildUnits*retaddr *label67 (h:*label67)
   156 call *label39 *invalid :buildUnits*retval (m:*label67) (h:*label67)
   157 label *label67
 
   182 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   183 label *label76
   184 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  185 write :buildBlockFromCfg.1*retval .controller ".kiln"
   186 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   187 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   188 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
 
   225 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   226 label *label85
   227 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  228 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  229 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   230 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"
   231 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   232 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   237 set .siliconSurplus 1000
   238 set .metaglassSurplus 200
   239 set :setPolyTarget:target 6
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  240 write 6 .controller ".polyTarget"
+  241 write 6 processor1 ".polyTarget"
   242 label *label88
   243 set :buildBlockFromCfg.1:cfg "%.)A<######%C"
   244 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
 
   271 jump *label94 always
   272 label *label96
   273 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  274 write 3 .controller ".flareTarget"
+  275 write 3 processor1 ".flareTarget"
   276 label *label98
   277 label *label99
   278 read *tmp98 .controller ".flares"
 
   285 label *label101
   286 set .graphiteSurplus 100
   287 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  288 write 5 .controller ".monoTarget"
+  289 write 5 processor1 ".monoTarget"
   290 label *label103
-    * write @ore-titanium .display ".nextBlock"
+  291 write @ore-titanium processor1 ".nextBlock"
   292 wait 0.000000001
   293 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  294 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  295 write .coreX processor4 ":findDrillLocation:x"
+  296 write .coreY processor4 ":findDrillLocation:y"
+  297 write @unit processor4 ":findDrillLocation:unit"
+  298 write @titanium processor4 ":findDrillLocation:item"
+  299 write @ore-titanium processor4 ":findDrillLocation:ore"
+  300 write 4 processor4 ":findDrillLocation:size"
+  301 write 1000000000 processor4 ":findDrillLocation:limit"
+  302 write false processor4 ":findDrillLocation*finished"
+  303 write 1 processor4 "@counter"
   304 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  305 write .controller processor5 ":buildTitaniumDrills:aController"
+  306 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  307 write false processor5 ":buildTitaniumDrills*finished"
+  308 write 3 processor5 "@counter"
   309 label *label105
   310 wait 1e-15
-    * read *tmp196 .blockBuilder ":buildTitaniumDrills*finished"
+  311 read *tmp196 processor5 ":buildTitaniumDrills*finished"
   312 jump *label105 equal *tmp196 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  313 write false processor4 ":stopLocation*finished"
+  314 write 3 processor4 "@counter"
   315 label *label104
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  316 write null processor1 ".nextBlock"
+  317 write .coreX processor4 ":layoutThoriumDrill:x"
+  318 write .coreY processor4 ":layoutThoriumDrill:y"
+  319 write @unit processor4 ":layoutThoriumDrill:unit"
+  320 write 7 processor4 ":layoutThoriumDrill:limit"
+  321 write false processor4 ":layoutThoriumDrill*finished"
+  322 write 2 processor4 "@counter"
   323 label *label107
   324 wait 1e-15
-    * read *tmp201 .oreLocator ":layoutThoriumDrill*finished"
+  325 read *tmp201 processor4 ":layoutThoriumDrill*finished"
   326 jump *label107 equal *tmp201 false
   327 set :meetTarget.1:cfg "x**F#AA7###&@"
   328 setaddr :meetTarget.1*retaddr *label108 (h:*label108)
 
   330 label *label108
   331 label *label109
   332 wait 1e-15
-    * read *tmp203 .oreLocator ":layoutThoriumDrill*finished"
+  333 read *tmp203 processor4 ":layoutThoriumDrill*finished"
   334 jump *label109 equal *tmp203 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  335 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   336 jump *label110 notEqual :buildThoriumDrill:result false
   337 set :error:error "Cannot locate spot for thorium drill"
   338 setaddr :error*retaddr *label112 (h:*label112)
 
   340 label *label112
   341 label *label110
   342 label *label111
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp56 .oreLocator ".drillX"
-    * write *tmp56 .blockBuilder ":buildBlockAt:x"
-    * read *tmp57 .oreLocator ".drillY"
-    * write *tmp57 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  343 write @laser-drill processor5 ":buildBlockAt:block"
+  344 read *tmp56 processor4 ".drillX"
+  345 write *tmp56 processor5 ":buildBlockAt:x"
+  346 read *tmp57 processor4 ".drillY"
+  347 write *tmp57 processor5 ":buildBlockAt:y"
+  348 write null processor5 ":buildBlockAt:rotation"
+  349 write 0 processor5 ":buildBlockAt:config"
+  350 write -1 processor5 ":buildBlockAt:index"
+  351 write false processor5 ":buildBlockAt*finished"
+  352 write 1 processor5 "@counter"
   353 label *label113
   354 wait 1e-15
-    * read *tmp213 .blockBuilder ":buildBlockAt*finished"
+  355 read *tmp213 processor5 ":buildBlockAt*finished"
   356 jump *label113 equal *tmp213 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  357 read .thoriumDrill processor5 ":buildBlockAt*retval"
   358 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  359 read :buildRemoteBlock:x processor4 ".water1X"
+  360 read :buildRemoteBlock:y processor4 ".water1Y"
   361 setaddr :buildRemoteBlock*retaddr *label114 (h:*label114)
   362 call *label35 *invalid :buildRemoteBlock*retval (m:*label114) (h:*label114)
   363 label *label114
-    * set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  364 read :buildRemoteBlock:x processor4 ".water2X"
+  365 read :buildRemoteBlock:y processor4 ".water2Y"
   366 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   367 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   368 label *label115
   369 set :buildRemoteBlock:cfg "o%+FK<A####%7"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  370 read :buildRemoteBlock:x processor4 ".generatorX"
+  371 read :buildRemoteBlock:y processor4 ".generatorY"
   372 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   373 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   374 label *label116
   375 set .thoriumGenerator :buildRemoteBlock*retval
   376 set :buildRemoteBlock:cfg "g)'%)######$."
-    * read :buildRemoteBlock:x .oreLocator ".nodeX"
-    * read :buildRemoteBlock:y .oreLocator ".nodeY"
+  377 read :buildRemoteBlock:x processor4 ".nodeX"
+  378 read :buildRemoteBlock:y processor4 ".nodeY"
   379 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   380 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   381 label *label117
   382 set :buildRemoteBlock:cfg "r**#-#+####$A"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  383 read :buildRemoteBlock:x processor4 ".panelX"
+  384 read :buildRemoteBlock:y processor4 ".panelY"
   385 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   386 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   387 label *label118
   388 set :buildRemoteBlock:cfg "k*/(7######$$"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  389 read :buildRemoteBlock:x processor4 ".batteryX"
+  390 read :buildRemoteBlock:y processor4 ".batteryY"
   391 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   392 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   393 label *label119
   394 set :buildRemoteBlock:cfg "**#######%B"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  395 read :buildRemoteBlock:x processor4 ".containerX"
+  396 read :buildRemoteBlock:y processor4 ".containerY"
   397 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   398 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   399 label *label120
   400 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label121 notEqual .thoriumContainer null
+  401 jump *label121 notEqual :buildRemoteBlock*retval null
   402 set .thoriumContainer .thoriumDrill
   403 label *label121
   404 label *label122
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  405 write .thoriumDrill processor1 ".thoriumDrill"
+  406 write .thoriumContainer processor1 ".thoriumContainer"
+  407 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  408 write false processor3 ":setThoriumContainer*finished"
+  409 write 3 processor3 "@counter"
   410 label *label123
   411 wait 1e-15
-    * read *tmp225 .polyController ":setThoriumContainer*finished"
+  412 read *tmp225 processor3 ":setThoriumContainer*finished"
   413 jump *label123 equal *tmp225 false
   414 label *label106
-    * write null .display ".nextBlock"
+  415 write null processor1 ".nextBlock"
   416 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  417 write 1 .controller ".megaTarget"
+  418 write 1 processor1 ".megaTarget"
   419 label *label124
   420 label *label125
   421 read *tmp100 .controller ".polys"
 
   441 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   442 label *label132
   443 set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
-    * write :buildMultiplicativeReconstructor:multiReconstructor .controller ".multiReconstructor"
-    * write :buildMultiplicativeReconstructor:multiReconstructor .display ".multiReconstructor"
+  444 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  445 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   446 label *label131
   447 set .metaglassSurplus 50
   448 setaddr :buildUnits*retaddr *label133 (h:*label133)
 
   655 label *label193
   656 set :mineOre:x :locateOre:x
   657 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  658 set :moveToEmpty:x :locateOre:x
+  659 set :moveToEmpty:y :locateOre:y
   660 setaddr :moveToEmpty*retaddr *label194 (h:*label194)
   661 call *label16 *invalid :moveToEmpty*retval (m:*label194) (h:*label194)
   662 label *label194
 
   833 end
   834 label *label31
   835 set :unpackCfg:index 0
-    * set *tmp311 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  836 set *tmp311 0
+  837 op add :unpackCfg:index 0 1
   838 read *tmp312 :unpackCfg:cfg *tmp311
   839 op sub *tmp313 *tmp312 35
   840 lookup block :unpackCfg:type *tmp313
-    * set *tmp315 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  841 set *tmp315 1
+  842 op add :unpackCfg:index 1 1
   843 read *tmp316 :unpackCfg:cfg *tmp315
   844 op sub *tmp317 *tmp316 35
-    * op sub :unpackCfg:x *tmp317 7
-    * set *tmp319 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  845 op sub :unpackCfg:x *tmp316 42
+  846 set *tmp319 2
+  847 op add :unpackCfg:index 2 1
   848 read *tmp320 :unpackCfg:cfg *tmp319
   849 op sub *tmp321 *tmp320 35
-    * op sub :unpackCfg:y *tmp321 7
-    * set *tmp323 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  850 op sub :unpackCfg:y *tmp320 42
+  851 set *tmp323 3
+  852 op add :unpackCfg:index 3 1
   853 read *tmp324 :unpackCfg:cfg *tmp323
   854 op sub :unpackCfg:cu *tmp324 35
-    * set *tmp326 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  855 set *tmp326 4
+  856 op add :unpackCfg:index 4 1
   857 read *tmp327 :unpackCfg:cfg *tmp326
   858 op sub :unpackCfg:pb *tmp327 35
-    * set *tmp329 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  859 set *tmp329 5
+  860 op add :unpackCfg:index 5 1
   861 read *tmp330 :unpackCfg:cfg *tmp329
   862 op sub :unpackCfg:gr *tmp330 35
-    * set *tmp332 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  863 set *tmp332 6
+  864 op add :unpackCfg:index 6 1
   865 read *tmp333 :unpackCfg:cfg *tmp332
   866 op sub :unpackCfg:si *tmp333 35
-    * set *tmp335 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  867 set *tmp335 7
+  868 op add :unpackCfg:index 7 1
   869 read *tmp336 :unpackCfg:cfg *tmp335
   870 op sub :unpackCfg:ti *tmp336 35
-    * set *tmp338 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  871 set *tmp338 8
+  872 op add :unpackCfg:index 8 1
   873 read *tmp339 :unpackCfg:cfg *tmp338
   874 op sub :unpackCfg:mg *tmp339 35
-    * set *tmp341 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  875 set *tmp341 9
+  876 op add :unpackCfg:index 9 1
   877 read *tmp342 :unpackCfg:cfg *tmp341
   878 op sub :unpackCfg:th *tmp342 35
-    * set *tmp344 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  879 set *tmp344 10
+  880 op add :unpackCfg:index 10 1
   881 read *tmp345 :unpackCfg:cfg *tmp344
   882 op sub :unpackCfg:rotation *tmp345 35
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp350 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  883 op add :unpackCfg:index 11 1
+  884 set *tmp350 12
+  885 op add :unpackCfg:index 12 1
   886 read *tmp351 :unpackCfg:cfg *tmp350
   887 op sub :unpackCfg:ind *tmp351 35
   888 label *label237
 
  1018 label *label279
  1019 set :supplyBase0:titaniumTrigger *tmp387
  1020 sensor *tmp391 .titaniumDrill @titanium
-    * jump *label280 greaterThanEq *tmp391 :supplyBase0:titaniumTrigger
+ 1021 jump *label280 greaterThanEq *tmp391 *tmp387
  1022 jump *label282 notEqual :supplyBase0:supplied false
  1023 sensor *tmp396 .battery @totalPower
  1024 op mul *tmp397 .unloader1 .powerTarget
 
  1048 set *tmp406 @sand
  1049 label *label292
  1050 set :supplyBase0:ore *tmp406
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1051 set :mineOre.1:ore *tmp406
  1052 setaddr :mineOre.1*retaddr *label293 (h:*label293)
  1053 call *label22 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
  1054 label *label293
 
  1103 set *tmp419 @sand
  1104 label *label308
  1105 set :supplyBase0:ore.1 *tmp419
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1106 set :mineOre.1:ore *tmp419
  1107 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1108 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
  1109 label *label309
 
  1191 op add *tmp426 :meetTarget:metaglass .metaglassSurplus
  1192 write *tmp426 .controller ".kilnTarget"
  1193 op add *tmp427 :meetTarget:lead .leadSurplus
-    * write *tmp427 .controller ".leadReserve"
+ 1194 write *tmp422 .controller ".leadReserve"
  1195 op sign *tmp428 :meetTarget:silicon
  1196 op mul *tmp429 *tmp428 20
  1197 op add *tmp430 :meetTarget:silicon *tmp429
 
  1201 op add *tmp433 :meetTarget:graphite *tmp432
  1202 write *tmp433 .controller ".graphiteReserve"
  1203 write .targetLead processor8 ".monoLeadTarget"
-    * write .targetCopper processor8 ".monoCopperTarget"
+ 1204 write :meetTarget:copper processor8 ".monoCopperTarget"
  1205 label *label323
  1206 sensor *tmp435 .core @copper
  1207 jump *label327 greaterThanEq *tmp435 .targetCopper
 
  1247 label *label340
  1248 set *tmp434 true
  1249 jump *label326 always
-    * set *tmp434 null
  1250 label *label326
  1251 jump *label325 notEqual *tmp434 false
  1252 setaddr :supplyBase*retaddr *label341 (h:*label341)
 
  1284 jump *label344 equal *tmp463 false
  1285 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1286 jump *label342 always
-    * set :buildBlock*retval null
  1287 label *label342
  1288 return :buildBlock*retaddr
  1289 end
 
  1304 set :buildRemoteBlock:th :unpackCfg:th
  1305 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1306 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1307 set :buildBlock:block :unpackCfg:type
  1308 set :buildBlock:x :buildRemoteBlock:x
  1309 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1310 set :buildBlock:copper :unpackCfg:cu
+ 1311 set :buildBlock:lead :unpackCfg:pb
+ 1312 set :buildBlock:graphite :unpackCfg:gr
+ 1313 set :buildBlock:silicon :unpackCfg:si
+ 1314 set :buildBlock:titanium :unpackCfg:ti
+ 1315 set :buildBlock:metaglass :unpackCfg:mg
+ 1316 set :buildBlock:thorium :unpackCfg:th
+ 1317 set :buildBlock:rotation :unpackCfg:rotation
  1318 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1319 set :buildBlock:index :unpackCfg:ind
  1320 setaddr :buildBlock*retaddr *label349 (h:*label349)
  1321 call *label34 *invalid :buildBlock*retval (m:*label349) (h:*label349)
  1322 label *label349
 
  1326 label *label347
  1327 set :buildRemoteBlock*retval false
  1328 jump *label345 always
-    * set :buildRemoteBlock*retval null
  1329 label *label345
  1330 return :buildRemoteBlock*retaddr
  1331 end
 
  1346 set :buildBlockFromCfg:th :unpackCfg:th
  1347 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1348 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp468 .coreX :buildBlockFromCfg:x
-    * op add *tmp469 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1349 op add *tmp468 .coreX :unpackCfg:x
+ 1350 op add *tmp469 .coreY :unpackCfg:y
+ 1351 set :buildBlock:block :unpackCfg:type
  1352 set :buildBlock:x *tmp468
  1353 set :buildBlock:y *tmp469
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1354 set :buildBlock:copper :unpackCfg:cu
+ 1355 set :buildBlock:lead :unpackCfg:pb
+ 1356 set :buildBlock:graphite :unpackCfg:gr
+ 1357 set :buildBlock:silicon :unpackCfg:si
+ 1358 set :buildBlock:titanium :unpackCfg:ti
+ 1359 set :buildBlock:metaglass :unpackCfg:mg
+ 1360 set :buildBlock:thorium :unpackCfg:th
+ 1361 set :buildBlock:rotation :unpackCfg:rotation
  1362 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1363 set :buildBlock:index :unpackCfg:ind
  1364 setaddr :buildBlock*retaddr *label352 (h:*label352)
  1365 call *label34 *invalid :buildBlock*retval (m:*label352) (h:*label352)
  1366 label *label352
  1367 set :buildBlockFromCfg*retval :buildBlock*retval
  1368 jump *label350 always
-    * set :buildBlockFromCfg*retval null
  1369 label *label350
  1370 return :buildBlockFromCfg*retaddr
  1371 end
 
  1392 set :meetTarget.1:ti :unpackCfg:ti
  1393 set :meetTarget.1:mg :unpackCfg:mg
  1394 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+ 1395 set :meetTarget:block :unpackCfg:type
+ 1396 set :meetTarget:copper :unpackCfg:cu
+ 1397 set :meetTarget:lead :unpackCfg:pb
+ 1398 set :meetTarget:graphite :unpackCfg:gr
+ 1399 set :meetTarget:silicon :unpackCfg:si
+ 1400 set :meetTarget:titanium :unpackCfg:ti
+ 1401 set :meetTarget:metaglass :unpackCfg:mg
+ 1402 set :meetTarget:thorium :unpackCfg:th
  1403 setaddr :meetTarget*retaddr *label357 (h:*label357)
  1404 call *label33 *invalid :meetTarget*retval (m:*label357) (h:*label357)
  1405 label *label357

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-63 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 set .press null
     4 set .generator null
     5 set .battery null
 
    49 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    50 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    51 label *label50
-    * set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
    52 set :meetTarget.1:cfg "w**5#-#####%)"
    53 setaddr :meetTarget.1*retaddr *label52 (h:*label52)
    54 call *label38 *invalid :meetTarget.1*retval (m:*label52) (h:*label52)
 
   133 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   134 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   135 label *label64
-    * set :factory :buildBlockFromCfg.1*retval
   136 write :buildBlockFromCfg.1*retval .controller ".factory"
   137 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   138 write 1 .controller ".flareTarget"
   139 write 1 processor1 ".flareTarget"
   140 label *label65
-    * set :setMonoTarget:target 3
   141 write 3 .controller ".monoTarget"
   142 write 3 processor1 ".monoTarget"
   143 label *label66
 
   175 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   176 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   177 label *label76
-    * set .kiln :buildBlockFromCfg.1*retval
   178 write :buildBlockFromCfg.1*retval .controller ".kiln"
   179 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   180 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
 
   217 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   218 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   219 label *label85
-    * set :reconstructor :buildBlockFromCfg.1*retval
   220 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   221 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   222 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"
 
   228 label *label87
   229 set .siliconSurplus 1000
   230 set .metaglassSurplus 200
-    * set :setPolyTarget:target 6
   231 write 6 .controller ".polyTarget"
   232 write 6 processor1 ".polyTarget"
   233 label *label88
 
   261 label *label95
   262 jump *label94 always
   263 label *label96
-    * set :setFlareTarget.1:target 3
   264 write 3 .controller ".flareTarget"
   265 write 3 processor1 ".flareTarget"
   266 label *label98
 
   274 jump *label99 always
   275 label *label101
   276 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   277 write 5 .controller ".monoTarget"
   278 write 5 processor1 ".monoTarget"
   279 label *label103
 
   402 jump *label123 equal *tmp225 false
   403 label *label106
   404 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   405 write 1 .controller ".megaTarget"
   406 write 1 processor1 ".megaTarget"
   407 label *label124
 
   428 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   429 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   430 label *label132
-    * set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
   431 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   432 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   433 label *label131
 
   819 return :supplyBlockFromCore*retaddr
   820 end
   821 label *label31
-    * set :unpackCfg:index 0
   822 set *tmp311 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp312 :unpackCfg:cfg *tmp311
+  823 read *tmp312 :unpackCfg:cfg 0
   824 op sub *tmp313 *tmp312 35
   825 lookup block :unpackCfg:type *tmp313
   826 set *tmp315 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp316 :unpackCfg:cfg *tmp315
-    * op sub *tmp317 *tmp316 35
+  827 read *tmp316 :unpackCfg:cfg 1
   828 op sub :unpackCfg:x *tmp316 42
   829 set *tmp319 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp320 :unpackCfg:cfg *tmp319
-    * op sub *tmp321 *tmp320 35
+  830 read *tmp320 :unpackCfg:cfg 2
   831 op sub :unpackCfg:y *tmp320 42
   832 set *tmp323 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp324 :unpackCfg:cfg *tmp323
+  833 read *tmp324 :unpackCfg:cfg 3
   834 op sub :unpackCfg:cu *tmp324 35
   835 set *tmp326 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp327 :unpackCfg:cfg *tmp326
+  836 read *tmp327 :unpackCfg:cfg 4
   837 op sub :unpackCfg:pb *tmp327 35
   838 set *tmp329 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp330 :unpackCfg:cfg *tmp329
+  839 read *tmp330 :unpackCfg:cfg 5
   840 op sub :unpackCfg:gr *tmp330 35
   841 set *tmp332 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp333 :unpackCfg:cfg *tmp332
+  842 read *tmp333 :unpackCfg:cfg 6
   843 op sub :unpackCfg:si *tmp333 35
   844 set *tmp335 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp336 :unpackCfg:cfg *tmp335
+  845 read *tmp336 :unpackCfg:cfg 7
   846 op sub :unpackCfg:ti *tmp336 35
   847 set *tmp338 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp339 :unpackCfg:cfg *tmp338
+  848 read *tmp339 :unpackCfg:cfg 8
   849 op sub :unpackCfg:mg *tmp339 35
   850 set *tmp341 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp342 :unpackCfg:cfg *tmp341
+  851 read *tmp342 :unpackCfg:cfg 9
   852 op sub :unpackCfg:th *tmp342 35
   853 set *tmp344 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp345 :unpackCfg:cfg *tmp344
+  854 read *tmp345 :unpackCfg:cfg 10
   855 op sub :unpackCfg:rotation *tmp345 35
-    * op add :unpackCfg:index 11 1
   856 set *tmp350 12
-    * op add :unpackCfg:index 12 1
-    * read *tmp351 :unpackCfg:cfg *tmp350
+  857 read *tmp351 :unpackCfg:cfg 12
   858 op sub :unpackCfg:ind *tmp351 35
   859 label *label237
   860 return :unpackCfg*retaddr
 
   987 label *label278
   988 set *tmp387 100
   989 label *label279
-    * set :supplyBase0:titaniumTrigger *tmp387
   990 sensor *tmp391 .titaniumDrill @titanium
   991 jump *label280 greaterThanEq *tmp391 *tmp387
   992 jump *label282 notEqual :supplyBase0:supplied false
 
  1017 label *label291
  1018 set *tmp406 @sand
  1019 label *label292
-    * set :supplyBase0:ore *tmp406
  1020 set :mineOre.1:ore *tmp406
  1021 setaddr :mineOre.1*retaddr *label293 (h:*label293)
  1022 call *label22 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
 
  1071 label *label307
  1072 set *tmp419 @sand
  1073 label *label308
-    * set :supplyBase0:ore.1 *tmp419
  1074 set :mineOre.1:ore *tmp419
  1075 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1076 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
 
  1158 write *tmp425 .controller ".smelterTarget"
  1159 op add *tmp426 :meetTarget:metaglass .metaglassSurplus
  1160 write *tmp426 .controller ".kilnTarget"
-    * op add *tmp427 :meetTarget:lead .leadSurplus
  1161 write *tmp422 .controller ".leadReserve"
  1162 op sign *tmp428 :meetTarget:silicon
  1163 op mul *tmp429 *tmp428 20
 
  1261 setaddr :unpackCfg*retaddr *label348 (h:*label348)
  1262 call *label31 *invalid :unpackCfg*retval (m:*label348) (h:*label348)
  1263 label *label348
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
  1264 set :buildBlock:block :unpackCfg:type
  1265 set :buildBlock:x :buildRemoteBlock:x
  1266 set :buildBlock:y :buildRemoteBlock:y
 
  1291 setaddr :unpackCfg*retaddr *label351 (h:*label351)
  1292 call *label31 *invalid :unpackCfg*retval (m:*label351) (h:*label351)
  1293 label *label351
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1294 op add *tmp468 .coreX :unpackCfg:x
  1295 op add *tmp469 .coreY :unpackCfg:y
  1296 set :buildBlock:block :unpackCfg:type
 
  1329 setaddr :unpackCfg*retaddr *label356 (h:*label356)
  1330 call *label31 *invalid :unpackCfg*retval (m:*label356) (h:*label356)
  1331 label *label356
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
  1332 set :meetTarget:block :unpackCfg:type
  1333 set :meetTarget:copper :unpackCfg:cu
  1334 set :meetTarget:lead :unpackCfg:pb

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-12 instructions):
 
   819 return :supplyBlockFromCore*retaddr
   820 end
   821 label *label31
-    * set *tmp311 0
   822 read *tmp312 :unpackCfg:cfg 0
   823 op sub *tmp313 *tmp312 35
   824 lookup block :unpackCfg:type *tmp313
-    * set *tmp315 1
   825 read *tmp316 :unpackCfg:cfg 1
   826 op sub :unpackCfg:x *tmp316 42
-    * set *tmp319 2
   827 read *tmp320 :unpackCfg:cfg 2
   828 op sub :unpackCfg:y *tmp320 42
-    * set *tmp323 3
   829 read *tmp324 :unpackCfg:cfg 3
   830 op sub :unpackCfg:cu *tmp324 35
-    * set *tmp326 4
   831 read *tmp327 :unpackCfg:cfg 4
   832 op sub :unpackCfg:pb *tmp327 35
-    * set *tmp329 5
   833 read *tmp330 :unpackCfg:cfg 5
   834 op sub :unpackCfg:gr *tmp330 35
-    * set *tmp332 6
   835 read *tmp333 :unpackCfg:cfg 6
   836 op sub :unpackCfg:si *tmp333 35
-    * set *tmp335 7
   837 read *tmp336 :unpackCfg:cfg 7
   838 op sub :unpackCfg:ti *tmp336 35
-    * set *tmp338 8
   839 read *tmp339 :unpackCfg:cfg 8
   840 op sub :unpackCfg:mg *tmp339 35
-    * set *tmp341 9
   841 read *tmp342 :unpackCfg:cfg 9
   842 op sub :unpackCfg:th *tmp342 35
-    * set *tmp344 10
   843 read *tmp345 :unpackCfg:cfg 10
   844 op sub :unpackCfg:rotation *tmp345 35
-    * set *tmp350 12
   845 read *tmp351 :unpackCfg:cfg 12
   846 op sub :unpackCfg:ind *tmp351 35
   847 label *label237

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   525 setaddr :status3*retaddr *label156 (h:*label156)
   526 call *label11 *invalid :status3*retval (m:*label156) (h:*label156)
   527 label *label156
+  528 op sub *tmp241 :moveTo:radius 0.5
   529 label *label157
   530 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
   531 jump *label159 notEqual *tmp239 false
-    * op sub *tmp241 :moveTo:radius 0.5
   532 ucontrol approach :moveTo:x :moveTo:y *tmp241
   533 label *label158
   534 jump *label157 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   966 label *label273
   967 label *label254
   968 label *label255
+  969 set *tmp387 100
   970 sensor *tmp385 .core @titanium
-    * jump *label278 greaterThanEq *tmp385 .targetTitanium
+  971 jump *label279 greaterThanEq *tmp385 .targetTitanium
   972 sensor *tmp388 .core @titanium
   973 op sub *tmp389 .targetTitanium *tmp388
   974 op min *tmp387 7 *tmp389
   975 jump *label279 always
-    * label *label278
-    * set *tmp387 100
   976 label *label279
   977 sensor *tmp391 .titaniumDrill @titanium
   978 jump *label280 greaterThanEq *tmp391 *tmp387
 
   998 label *label290
   999 sensor :supplyBase0:coal .core @coal
  1000 sensor :supplyBase0:sand .core @sand
-    * jump *label291 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp406 @coal
+ 1001 set :mineOre.1:ore @sand
+ 1002 jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1003 set :mineOre.1:ore @coal
  1004 jump *label292 always
-    * label *label291
-    * set *tmp406 @sand
  1005 label *label292
-    * set :mineOre.1:ore *tmp406
  1006 setaddr :mineOre.1*retaddr *label293 (h:*label293)
  1007 call *label22 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
  1008 label *label293
 
  1050 label *label306
  1051 sensor :supplyBase0:coal.1 .core @coal
  1052 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label307 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp419 @coal
+ 1053 set :mineOre.1:ore @sand
+ 1054 jump *label308 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1055 set :mineOre.1:ore @coal
  1056 jump *label308 always
-    * label *label307
-    * set *tmp419 @sand
  1057 label *label308
-    * set :mineOre.1:ore *tmp419
  1058 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1059 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
  1060 label *label309

Modifications by Unroll iteration loop at CoreBuilder.mnd:241:5 (-2 instructions):
 
  1085 end
  1086 label *label33
  1087 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp420 *label316
-    * jump *label313 always
-    * multilabel *label316 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp420 *label317
-    * jump *label313 always
-    * multilabel *label317 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp420 *label318
-    * jump *label313 always
-    * multilabel *label318 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp420 *label319
-    * jump *label313 always
-    * multilabel *label319 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp420 *label320
-    * jump *label313 always
-    * multilabel *label320 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp420 *label321
-    * jump *label313 always
-    * multilabel *label321 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp420 *label322
-    * label *label313
-    * op sign *tmp421 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label314
-    * multijump *tmp420 0 0 (m:marker0)
-    * multilabel *label322 (m:marker0)
-    * label *label315
+ 1088 set :meetTarget:t :meetTarget:copper
+ 1089 label *label373
+ 1090 op sign *tmp421 :meetTarget:t
+ 1091 op add :meetTarget:count :meetTarget:count *tmp421
+ 1092 label *label374
+ 1093 set :meetTarget:t :meetTarget:lead
+ 1094 label *label377
+ 1095 op sign *tmp421 :meetTarget:t
+ 1096 op add :meetTarget:count :meetTarget:count *tmp421
+ 1097 label *label378
+ 1098 set :meetTarget:t :meetTarget:graphite
+ 1099 label *label381
+ 1100 op sign *tmp421 :meetTarget:t
+ 1101 op add :meetTarget:count :meetTarget:count *tmp421
+ 1102 label *label382
+ 1103 set :meetTarget:t :meetTarget:silicon
+ 1104 label *label385
+ 1105 op sign *tmp421 :meetTarget:t
+ 1106 op add :meetTarget:count :meetTarget:count *tmp421
+ 1107 label *label386
+ 1108 set :meetTarget:t :meetTarget:titanium
+ 1109 label *label389
+ 1110 op sign *tmp421 :meetTarget:t
+ 1111 op add :meetTarget:count :meetTarget:count *tmp421
+ 1112 label *label390
+ 1113 set :meetTarget:t :meetTarget:metaglass
+ 1114 label *label393
+ 1115 op sign *tmp421 :meetTarget:t
+ 1116 op add :meetTarget:count :meetTarget:count *tmp421
+ 1117 label *label394
+ 1118 set :meetTarget:t :meetTarget:thorium
+ 1119 label *label397
+ 1120 op sign *tmp421 :meetTarget:t
+ 1121 op add :meetTarget:count :meetTarget:count *tmp421
+ 1122 label *label398
+ 1123 label *label315
  1124 write :meetTarget:count .display ".totalTargets"
  1125 write :meetTarget:block .display ".nextBlock"
  1126 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1087 set :meetTarget:count 0
  1088 set :meetTarget:t :meetTarget:copper
  1089 label *label373
-    * op sign *tmp421 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp421
+ 1090 op sign *tmp421 :meetTarget:copper
+ 1091 op add :meetTarget:count 0 *tmp421
  1092 label *label374
  1093 set :meetTarget:t :meetTarget:lead
  1094 label *label377
-    * op sign *tmp421 :meetTarget:t
+ 1095 op sign *tmp421 :meetTarget:lead
  1096 op add :meetTarget:count :meetTarget:count *tmp421
  1097 label *label378
  1098 set :meetTarget:t :meetTarget:graphite
  1099 label *label381
-    * op sign *tmp421 :meetTarget:t
+ 1100 op sign *tmp421 :meetTarget:graphite
  1101 op add :meetTarget:count :meetTarget:count *tmp421
  1102 label *label382
  1103 set :meetTarget:t :meetTarget:silicon
  1104 label *label385
-    * op sign *tmp421 :meetTarget:t
+ 1105 op sign *tmp421 :meetTarget:silicon
  1106 op add :meetTarget:count :meetTarget:count *tmp421
  1107 label *label386
  1108 set :meetTarget:t :meetTarget:titanium
  1109 label *label389
-    * op sign *tmp421 :meetTarget:t
+ 1110 op sign *tmp421 :meetTarget:titanium
  1111 op add :meetTarget:count :meetTarget:count *tmp421
  1112 label *label390
  1113 set :meetTarget:t :meetTarget:metaglass
  1114 label *label393
-    * op sign *tmp421 :meetTarget:t
+ 1115 op sign *tmp421 :meetTarget:metaglass
  1116 op add :meetTarget:count :meetTarget:count *tmp421
  1117 label *label394
  1118 set :meetTarget:t :meetTarget:thorium
  1119 label *label397
-    * op sign *tmp421 :meetTarget:t
+ 1120 op sign *tmp421 :meetTarget:thorium
  1121 op add :meetTarget:count :meetTarget:count *tmp421
  1122 label *label398
  1123 label *label315

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1084 return :supplyBase*retaddr
  1085 end
  1086 label *label33
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1087 label *label373
  1088 op sign *tmp421 :meetTarget:copper
  1089 op add :meetTarget:count 0 *tmp421
  1090 label *label374
-    * set :meetTarget:t :meetTarget:lead
  1091 label *label377
  1092 op sign *tmp421 :meetTarget:lead
  1093 op add :meetTarget:count :meetTarget:count *tmp421
  1094 label *label378
-    * set :meetTarget:t :meetTarget:graphite
  1095 label *label381
  1096 op sign *tmp421 :meetTarget:graphite
  1097 op add :meetTarget:count :meetTarget:count *tmp421
  1098 label *label382
-    * set :meetTarget:t :meetTarget:silicon
  1099 label *label385
  1100 op sign *tmp421 :meetTarget:silicon
  1101 op add :meetTarget:count :meetTarget:count *tmp421
  1102 label *label386
-    * set :meetTarget:t :meetTarget:titanium
  1103 label *label389
  1104 op sign *tmp421 :meetTarget:titanium
  1105 op add :meetTarget:count :meetTarget:count *tmp421
  1106 label *label390
-    * set :meetTarget:t :meetTarget:metaglass
  1107 label *label393
  1108 op sign *tmp421 :meetTarget:metaglass
  1109 op add :meetTarget:count :meetTarget:count *tmp421
  1110 label *label394
-    * set :meetTarget:t :meetTarget:thorium
  1111 label *label397
  1112 op sign *tmp421 :meetTarget:thorium
  1113 op add :meetTarget:count :meetTarget:count *tmp421

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   491 label *label145
   492 label *label138
   493 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label150
-    * return :status1*retaddr
-    * end
   494 label *label10
   495 write :status2:text .display ".status2"
   496 write :status2:item .display ".item2"
 
   849 write *tmp355 processor8 ".monoSandTarget"
   850 jump *label239 equal .thoriumContainer false
   851 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label242 (h:*label242)
-    * call *label9 *invalid :status1*retval (m:*label242) (h:*label242)
-    * label *label242
+  852 label *label402
+  853 write :status1:text .display ".status1"
+  854 label *label403
   855 sensor *tmp357 .core @coal
   856 jump *label243 greaterThanEq *tmp357 50
   857 set :supplyBlock:block .thoriumGenerator
 
   878 read *tmp99 .controller ".monos"
   879 jump *label248 lessThanEq *tmp99 3
   880 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label251 (h:*label251)
-    * call *label9 *invalid :status1*retval (m:*label251) (h:*label251)
-    * label *label251
+  881 label *label404
+  882 write :status1:text .display ".status1"
+  883 label *label405
   884 set :mineOre.1:ore @coal
   885 setaddr :mineOre.1*retaddr *label252 (h:*label252)
   886 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
 
   895 sensor *tmp367 .press @coal
   896 jump *label258 greaterThanEq *tmp367 5
   897 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label260 (h:*label260)
-    * call *label9 *invalid :status1*retval (m:*label260) (h:*label260)
-    * label *label260
+  898 label *label406
+  899 write :status1:text .display ".status1"
+  900 label *label407
   901 set :supplyBlock:block .press
   902 set :supplyBlock:ore @coal
   903 setaddr :supplyBlock*retaddr *label261 (h:*label261)
 
   913 sensor *tmp373 .smelter @coal
   914 jump *label264 greaterThanEq *tmp373 5
   915 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label266 (h:*label266)
-    * call *label9 *invalid :status1*retval (m:*label266) (h:*label266)
-    * label *label266
+  916 label *label408
+  917 write :status1:text .display ".status1"
+  918 label *label409
   919 set :supplyBlock:block .smelter
   920 set :supplyBlock:ore @coal
   921 setaddr :supplyBlock*retaddr *label267 (h:*label267)
 
   927 sensor *tmp376 .smelter @sand
   928 jump *label268 greaterThanEq *tmp376 5
   929 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label270 (h:*label270)
-    * call *label9 *invalid :status1*retval (m:*label270) (h:*label270)
-    * label *label270
+  930 label *label410
+  931 write :status1:text .display ".status1"
+  932 label *label411
   933 set :supplyBlock:block .smelter
   934 set :supplyBlock:ore @sand
   935 setaddr :supplyBlock*retaddr *label271 (h:*label271)
 
   946 sensor *tmp382 .generator @coal
   947 jump *label274 greaterThanEq *tmp382 2
   948 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label276 (h:*label276)
-    * call *label9 *invalid :status1*retval (m:*label276) (h:*label276)
-    * label *label276
+  949 label *label412
+  950 write :status1:text .display ".status1"
+  951 label *label413
   952 set :supplyBlock:block .generator
   953 set :supplyBlock:ore @coal
   954 setaddr :supplyBlock*retaddr *label277 (h:*label277)
 
   976 op mul *tmp397 .unloader1 .powerTarget
   977 jump *label284 greaterThanEq *tmp396 *tmp397
   978 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label286 (h:*label286)
-    * call *label9 *invalid :status1*retval (m:*label286) (h:*label286)
-    * label *label286
+  979 label *label414
+  980 write :status1:text .display ".status1"
+  981 label *label415
   982 set :mineOre.1:ore @coal
   983 setaddr :mineOre.1*retaddr *label287 (h:*label287)
   984 call *label22 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
 
   988 sensor *tmp400 .core @silicon
   989 jump *label288 greaterThanEq *tmp400 .targetSilicon
   990 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label290 (h:*label290)
-    * call *label9 *invalid :status1*retval (m:*label290) (h:*label290)
-    * label *label290
+  991 label *label416
+  992 write :status1:text .display ".status1"
+  993 label *label417
   994 sensor :supplyBase0:coal .core @coal
   995 sensor :supplyBase0:sand .core @sand
   996 set :mineOre.1:ore @sand
 
  1006 sensor *tmp407 .core @copper
  1007 jump *label294 greaterThanEq *tmp407 .targetCopper
  1008 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label296 (h:*label296)
-    * call *label9 *invalid :status1*retval (m:*label296) (h:*label296)
-    * label *label296
+ 1009 label *label418
+ 1010 write :status1:text .display ".status1"
+ 1011 label *label419
  1012 set :mineOre.1:ore @copper
  1013 setaddr :mineOre.1*retaddr *label297 (h:*label297)
  1014 call *label22 *invalid :mineOre.1*retval (m:*label297) (h:*label297)
 
  1018 sensor *tmp410 .core @lead
  1019 jump *label298 greaterThanEq *tmp410 .targetLead
  1020 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label300 (h:*label300)
-    * call *label9 *invalid :status1*retval (m:*label300) (h:*label300)
-    * label *label300
+ 1021 label *label420
+ 1022 write :status1:text .display ".status1"
+ 1023 label *label421
  1024 set :mineOre.1:ore @lead
  1025 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1026 call *label22 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
 
  1030 sensor *tmp413 .core @metaglass
  1031 jump *label302 greaterThanEq *tmp413 .targetMetaglass
  1032 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label304 (h:*label304)
-    * call *label9 *invalid :status1*retval (m:*label304) (h:*label304)
-    * label *label304
+ 1033 label *label422
+ 1034 write :status1:text .display ".status1"
+ 1035 label *label423
  1036 set :mineOre.1:ore @sand
  1037 setaddr :mineOre.1*retaddr *label305 (h:*label305)
  1038 call *label22 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
 
  1040 jump *label303 always
  1041 label *label302
  1042 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label306 (h:*label306)
-    * call *label9 *invalid :status1*retval (m:*label306) (h:*label306)
-    * label *label306
+ 1043 label *label424
+ 1044 write :status1:text .display ".status1"
+ 1045 label *label425
  1046 sensor :supplyBase0:coal.1 .core @coal
  1047 sensor :supplyBase0:sand.1 .core @sand
  1048 set :mineOre.1:ore @sand
 
  1063 jump *label281 always
  1064 label *label280
  1065 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label310 (h:*label310)
-    * call *label9 *invalid :status1*retval (m:*label310) (h:*label310)
-    * label *label310
+ 1066 label *label426
+ 1067 write :status1:text .display ".status1"
+ 1068 label *label427
  1069 set :fetchBlock:block .titaniumDrill
  1070 set :fetchBlock:item @titanium
  1071 setaddr :fetchBlock*retaddr *label311 (h:*label311)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   850 jump *label239 equal .thoriumContainer false
   851 set :status1:text "Phase 2: servicing thorium drill"
   852 label *label402
-    * write :status1:text .display ".status1"
+  853 write "Phase 2: servicing thorium drill" .display ".status1"
   854 label *label403
   855 sensor *tmp357 .core @coal
   856 jump *label243 greaterThanEq *tmp357 50
 
   879 jump *label248 lessThanEq *tmp99 3
   880 set :status1:text "Phase 1: supplying base"
   881 label *label404
-    * write :status1:text .display ".status1"
+  882 write "Phase 1: supplying base" .display ".status1"
   883 label *label405
   884 set :mineOre.1:ore @coal
   885 setaddr :mineOre.1*retaddr *label252 (h:*label252)
 
   896 jump *label258 greaterThanEq *tmp367 5
   897 set :status1:text "Goal 1: graphite requirement"
   898 label *label406
-    * write :status1:text .display ".status1"
+  899 write "Goal 1: graphite requirement" .display ".status1"
   900 label *label407
   901 set :supplyBlock:block .press
   902 set :supplyBlock:ore @coal
 
   914 jump *label264 greaterThanEq *tmp373 5
   915 set :status1:text "Goal 2: coal for silicon requirement"
   916 label *label408
-    * write :status1:text .display ".status1"
+  917 write "Goal 2: coal for silicon requirement" .display ".status1"
   918 label *label409
   919 set :supplyBlock:block .smelter
   920 set :supplyBlock:ore @coal
 
   928 jump *label268 greaterThanEq *tmp376 5
   929 set :status1:text "Goal 3: sand for silicon requirement"
   930 label *label410
-    * write :status1:text .display ".status1"
+  931 write "Goal 3: sand for silicon requirement" .display ".status1"
   932 label *label411
   933 set :supplyBlock:block .smelter
   934 set :supplyBlock:ore @sand
 
   947 jump *label274 greaterThanEq *tmp382 2
   948 set :status1:text "Goal 4: supplying generator"
   949 label *label412
-    * write :status1:text .display ".status1"
+  950 write "Goal 4: supplying generator" .display ".status1"
   951 label *label413
   952 set :supplyBlock:block .generator
   953 set :supplyBlock:ore @coal
 
   977 jump *label284 greaterThanEq *tmp396 *tmp397
   978 set :status1:text "Goal 5: supplying generator"
   979 label *label414
-    * write :status1:text .display ".status1"
+  980 write "Goal 5: supplying generator" .display ".status1"
   981 label *label415
   982 set :mineOre.1:ore @coal
   983 setaddr :mineOre.1*retaddr *label287 (h:*label287)
 
   989 jump *label288 greaterThanEq *tmp400 .targetSilicon
   990 set :status1:text "Goal 6: silicon requirement"
   991 label *label416
-    * write :status1:text .display ".status1"
+  992 write "Goal 6: silicon requirement" .display ".status1"
   993 label *label417
   994 sensor :supplyBase0:coal .core @coal
   995 sensor :supplyBase0:sand .core @sand
 
  1007 jump *label294 greaterThanEq *tmp407 .targetCopper
  1008 set :status1:text "Goal 7: copper requirement"
  1009 label *label418
-    * write :status1:text .display ".status1"
+ 1010 write "Goal 7: copper requirement" .display ".status1"
  1011 label *label419
  1012 set :mineOre.1:ore @copper
  1013 setaddr :mineOre.1*retaddr *label297 (h:*label297)
 
  1019 jump *label298 greaterThanEq *tmp410 .targetLead
  1020 set :status1:text "Goal 8: lead requirement"
  1021 label *label420
-    * write :status1:text .display ".status1"
+ 1022 write "Goal 8: lead requirement" .display ".status1"
  1023 label *label421
  1024 set :mineOre.1:ore @lead
  1025 setaddr :mineOre.1*retaddr *label301 (h:*label301)
 
  1031 jump *label302 greaterThanEq *tmp413 .targetMetaglass
  1032 set :status1:text "Goal 9: metaglass requirement"
  1033 label *label422
-    * write :status1:text .display ".status1"
+ 1034 write "Goal 9: metaglass requirement" .display ".status1"
  1035 label *label423
  1036 set :mineOre.1:ore @sand
  1037 setaddr :mineOre.1*retaddr *label305 (h:*label305)
 
  1041 label *label302
  1042 set :status1:text "Goal 10: supplying base"
  1043 label *label424
-    * write :status1:text .display ".status1"
+ 1044 write "Goal 10: supplying base" .display ".status1"
  1045 label *label425
  1046 sensor :supplyBase0:coal.1 .core @coal
  1047 sensor :supplyBase0:sand.1 .core @sand
 
  1064 label *label280
  1065 set :status1:text "Goal 11: Fetching titanium"
  1066 label *label426
-    * write :status1:text .display ".status1"
+ 1067 write "Goal 11: Fetching titanium" .display ".status1"
  1068 label *label427
  1069 set :fetchBlock:block .titaniumDrill
  1070 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   848 op max *tmp355 0 *tmp354
   849 write *tmp355 processor8 ".monoSandTarget"
   850 jump *label239 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   851 label *label402
   852 write "Phase 2: servicing thorium drill" .display ".status1"
   853 label *label403
 
   876 label *label239
   877 read *tmp99 .controller ".monos"
   878 jump *label248 lessThanEq *tmp99 3
-    * set :status1:text "Phase 1: supplying base"
   879 label *label404
   880 write "Phase 1: supplying base" .display ".status1"
   881 label *label405
 
   892 jump *label256 greaterThanEq *tmp364 .targetGraphite
   893 sensor *tmp367 .press @coal
   894 jump *label258 greaterThanEq *tmp367 5
-    * set :status1:text "Goal 1: graphite requirement"
   895 label *label406
   896 write "Goal 1: graphite requirement" .display ".status1"
   897 label *label407
 
   909 jump *label262 greaterThanEq *tmp370 .targetSilicon
   910 sensor *tmp373 .smelter @coal
   911 jump *label264 greaterThanEq *tmp373 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   912 label *label408
   913 write "Goal 2: coal for silicon requirement" .display ".status1"
   914 label *label409
 
   922 label *label264
   923 sensor *tmp376 .smelter @sand
   924 jump *label268 greaterThanEq *tmp376 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   925 label *label410
   926 write "Goal 3: sand for silicon requirement" .display ".status1"
   927 label *label411
 
   940 jump *label272 greaterThanEq *tmp379 .powerTarget
   941 sensor *tmp382 .generator @coal
   942 jump *label274 greaterThanEq *tmp382 2
-    * set :status1:text "Goal 4: supplying generator"
   943 label *label412
   944 write "Goal 4: supplying generator" .display ".status1"
   945 label *label413
 
   969 sensor *tmp396 .battery @totalPower
   970 op mul *tmp397 .unloader1 .powerTarget
   971 jump *label284 greaterThanEq *tmp396 *tmp397
-    * set :status1:text "Goal 5: supplying generator"
   972 label *label414
   973 write "Goal 5: supplying generator" .display ".status1"
   974 label *label415
 
   980 label *label284
   981 sensor *tmp400 .core @silicon
   982 jump *label288 greaterThanEq *tmp400 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   983 label *label416
   984 write "Goal 6: silicon requirement" .display ".status1"
   985 label *label417
 
   997 label *label288
   998 sensor *tmp407 .core @copper
   999 jump *label294 greaterThanEq *tmp407 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
  1000 label *label418
  1001 write "Goal 7: copper requirement" .display ".status1"
  1002 label *label419
 
  1008 label *label294
  1009 sensor *tmp410 .core @lead
  1010 jump *label298 greaterThanEq *tmp410 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
  1011 label *label420
  1012 write "Goal 8: lead requirement" .display ".status1"
  1013 label *label421
 
  1019 label *label298
  1020 sensor *tmp413 .core @metaglass
  1021 jump *label302 greaterThanEq *tmp413 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
  1022 label *label422
  1023 write "Goal 9: metaglass requirement" .display ".status1"
  1024 label *label423
 
  1028 label *label305
  1029 jump *label303 always
  1030 label *label302
-    * set :status1:text "Goal 10: supplying base"
  1031 label *label424
  1032 write "Goal 10: supplying base" .display ".status1"
  1033 label *label425
 
  1050 label *label283
  1051 jump *label281 always
  1052 label *label280
-    * set :status1:text "Goal 11: Fetching titanium"
  1053 label *label426
  1054 write "Goal 11: Fetching titanium" .display ".status1"
  1055 label *label427

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
   498 label *label151
   499 return :status2*retaddr
   500 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label152
-    * return :status3*retaddr
-    * end
   501 label *label12
   502 write :transportStatus:target .display ".transportTarget"
   503 write :transportStatus:item .display ".transportItem"
 
   512 end
   513 label *label14
   514 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label156 (h:*label156)
-    * call *label11 *invalid :status3*retval (m:*label156) (h:*label156)
-    * label *label156
+  515 label *label428
+  516 write :status3:text .display ".status3"
+  517 label *label429
   518 op sub *tmp241 :moveTo:radius 0.5
   519 label *label157
   520 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
 
   528 end
   529 label *label16
   530 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label163 (h:*label163)
-    * call *label11 *invalid :status3*retval (m:*label163) (h:*label163)
-    * label *label163
+  531 label *label430
+  532 write :status3:text .display ".status3"
+  533 label *label431
   534 label *label164
   535 sensor *tmp244 @unit @firstItem
   536 jump *label167 equal *tmp244 null
 
   570 end
   571 label *label19
   572 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label176 (h:*label176)
-    * call *label11 *invalid :status3*retval (m:*label176) (h:*label176)
-    * label *label176
+  573 label *label432
+  574 write :status3:text .display ".status3"
+  575 label *label433
   576 sensor *tmp253 @unit @firstItem
   577 jump *label177 notEqual *tmp253 :depositItems:item
   578 set :moveToBlock:block :depositItems:block
 
   645 label *label195
   646 label *label196
   647 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label198 (h:*label198)
-    * call *label11 *invalid :status3*retval (m:*label198) (h:*label198)
-    * label *label198
+  648 label *label434
+  649 write :status3:text .display ".status3"
+  650 label *label435
   651 op add :mineOre:stop @second 10
   652 label *label199
   653 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   513 label *label14
   514 set :status3:text "Moving..."
   515 label *label428
-    * write :status3:text .display ".status3"
+  516 write "Moving..." .display ".status3"
   517 label *label429
   518 op sub *tmp241 :moveTo:radius 0.5
   519 label *label157
 
   529 label *label16
   530 set :status3:text "Moving..."
   531 label *label430
-    * write :status3:text .display ".status3"
+  532 write "Moving..." .display ".status3"
   533 label *label431
   534 label *label164
   535 sensor *tmp244 @unit @firstItem
 
   571 label *label19
   572 set :status3:text "Depositing..."
   573 label *label432
-    * write :status3:text .display ".status3"
+  574 write "Depositing..." .display ".status3"
   575 label *label433
   576 sensor *tmp253 @unit @firstItem
   577 jump *label177 notEqual *tmp253 :depositItems:item
 
   646 label *label196
   647 set :status3:text "Mining..."
   648 label *label434
-    * write :status3:text .display ".status3"
+  649 write "Mining..." .display ".status3"
   650 label *label435
   651 op add :mineOre:stop @second 10
   652 label *label199

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   511 return :error*retaddr
   512 end
   513 label *label14
-    * set :status3:text "Moving..."
   514 label *label428
   515 write "Moving..." .display ".status3"
   516 label *label429
 
   526 return :moveTo*retaddr
   527 end
   528 label *label16
-    * set :status3:text "Moving..."
   529 label *label430
   530 write "Moving..." .display ".status3"
   531 label *label431
 
   567 return :moveToBlock*retaddr
   568 end
   569 label *label19
-    * set :status3:text "Depositing..."
   570 label *label432
   571 write "Depositing..." .display ".status3"
   572 label *label433
 
   641 label *label197
   642 label *label195
   643 label *label196
-    * set :status3:text "Mining..."
   644 label *label434
   645 write "Mining..." .display ".status3"
   646 label *label435

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
   510 label *label154
   511 return :error*retaddr
   512 end
-    * label *label14
-    * label *label428
-    * write "Moving..." .display ".status3"
-    * label *label429
-    * op sub *tmp241 :moveTo:radius 0.5
-    * label *label157
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
-    * jump *label159 notEqual *tmp239 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp241
-    * label *label158
-    * jump *label157 always
-    * label *label159
-    * label *label155
-    * return :moveTo*retaddr
-    * end
   513 label *label16
   514 label *label430
   515 write "Moving..." .display ".status3"
 
   545 set :moveTo:x *tmp251
   546 set :moveTo:y *tmp252
   547 set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label174 (h:*label174)
-    * call *label14 *invalid :moveTo*retval (m:*label174) (h:*label174)
-    * label *label174
+  548 label *label436
+  549 label *label437
+  550 write "Moving..." .display ".status3"
+  551 label *label438
+  552 op sub *tmp241 :moveTo:radius 0.5
+  553 label *label439
+  554 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
+  555 jump *label441 notEqual *tmp239 false
+  556 ucontrol approach :moveTo:x :moveTo:y *tmp241
+  557 label *label440
+  558 jump *label439 always
+  559 label *label441
+  560 label *label442
   561 label *label173
   562 return :moveToBlock*retaddr
   563 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   549 label *label437
   550 write "Moving..." .display ".status3"
   551 label *label438
-    * op sub *tmp241 :moveTo:radius 0.5
+  552 op sub *tmp241 :moveToBlock:radius 0.5
   553 label *label439
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
+  554 ucontrol within *tmp251 *tmp252 :moveToBlock:radius *tmp239
   555 jump *label441 notEqual *tmp239 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp241
+  556 ucontrol approach *tmp251 *tmp252 *tmp241
   557 label *label440
   558 jump *label439 always
   559 label *label441

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   542 label *label18
   543 sensor *tmp251 :moveToBlock:block @x
   544 sensor *tmp252 :moveToBlock:block @y
-    * set :moveTo:x *tmp251
-    * set :moveTo:y *tmp252
-    * set :moveTo:radius :moveToBlock:radius
   545 label *label436
   546 label *label437
   547 write "Moving..." .display ".status3"

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
   539 label *label169
   540 return :dropAll*retaddr
   541 end
-    * label *label18
-    * sensor *tmp251 :moveToBlock:block @x
-    * sensor *tmp252 :moveToBlock:block @y
-    * label *label436
-    * label *label437
-    * write "Moving..." .display ".status3"
-    * label *label438
-    * op sub *tmp241 :moveToBlock:radius 0.5
-    * label *label439
-    * ucontrol within *tmp251 *tmp252 :moveToBlock:radius *tmp239
-    * jump *label441 notEqual *tmp239 false
-    * ucontrol approach *tmp251 *tmp252 *tmp241
-    * label *label440
-    * jump *label439 always
-    * label *label441
-    * label *label442
-    * label *label173
-    * return :moveToBlock*retaddr
-    * end
   542 label *label19
   543 label *label432
   544 write "Depositing..." .display ".status3"
 
   547 jump *label177 notEqual *tmp253 :depositItems:item
   548 set :moveToBlock:block :depositItems:block
   549 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label179 (h:*label179)
-    * call *label18 *invalid :moveToBlock*retval (m:*label179) (h:*label179)
-    * label *label179
+  550 label *label443
+  551 sensor *tmp251 :moveToBlock:block @x
+  552 sensor *tmp252 :moveToBlock:block @y
+  553 label *label444
+  554 label *label445
+  555 write "Moving..." .display ".status3"
+  556 label *label446
+  557 op sub *tmp241 :moveToBlock:radius 0.5
+  558 label *label447
+  559 ucontrol within *tmp251 *tmp252 :moveToBlock:radius *tmp239
+  560 jump *label449 notEqual *tmp239 false
+  561 ucontrol approach *tmp251 *tmp252 *tmp241
+  562 label *label448
+  563 jump *label447 always
+  564 label *label449
+  565 label *label450
+  566 label *label451
   567 sensor :depositItems:cap :depositItems:block @itemCapacity
   568 label *label180
   569 ucontrol itemDrop :depositItems:block 30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   548 set :moveToBlock:block :depositItems:block
   549 set :moveToBlock:radius 6
   550 label *label443
-    * sensor *tmp251 :moveToBlock:block @x
-    * sensor *tmp252 :moveToBlock:block @y
+  551 sensor *tmp251 :depositItems:block @x
+  552 sensor *tmp252 :depositItems:block @y
   553 label *label444
   554 label *label445
   555 write "Moving..." .display ".status3"
   556 label *label446
-    * op sub *tmp241 :moveToBlock:radius 0.5
+  557 op sub *tmp241 6 0.5
   558 label *label447
-    * ucontrol within *tmp251 *tmp252 :moveToBlock:radius *tmp239
+  559 ucontrol within *tmp251 *tmp252 6 *tmp239
   560 jump *label449 notEqual *tmp239 false
-    * ucontrol approach *tmp251 *tmp252 *tmp241
+  561 ucontrol approach *tmp251 *tmp252 5.5
   562 label *label448
   563 jump *label447 always
   564 label *label449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   545 label *label433
   546 sensor *tmp253 @unit @firstItem
   547 jump *label177 notEqual *tmp253 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   548 label *label443
   549 sensor *tmp251 :depositItems:block @x
   550 sensor *tmp252 :depositItems:block @y
 
   552 label *label445
   553 write "Moving..." .display ".status3"
   554 label *label446
-    * op sub *tmp241 6 0.5
   555 label *label447
   556 ucontrol within *tmp251 *tmp252 6 *tmp239
   557 jump *label449 notEqual *tmp239 false

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   588 label *label175
   589 return :depositItems*retaddr
   590 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 0
-    * jump *label188 notEqual *tmp263 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label190 (h:*label190)
-    * call *label13 *invalid :error*retval (m:*label190) (h:*label190)
-    * label *label190
-    * label *label188
-    * label *label189
-    * label *label187
-    * return :locateOre*retaddr
-    * end
   591 label *label21
   592 op min :mineOre:amount :mineOre:amount 30
   593 set :transportStatus:target :mineOre:amount
 
   596 call *label12 *invalid :transportStatus*retval (m:*label192) (h:*label192)
   597 label *label192
   598 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label193 (h:*label193)
-    * call *label20 *invalid :locateOre*retval (m:*label193) (h:*label193)
-    * label *label193
+  599 label *label452
+  600 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 0
+  601 jump *label454 notEqual *tmp263 false
+  602 set :error:error "Cannot locate ore"
+  603 setaddr :error*retaddr *label453 (h:*label453)
+  604 call *label13 *invalid :error*retval (m:*label453) (h:*label453)
+  605 label *label453
+  606 label *label454
+  607 label *label455
+  608 label *label456
   609 set :mineOre:x :locateOre:x
   610 set :mineOre:y :locateOre:y
   611 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   597 label *label192
   598 set :locateOre:ore :mineOre:ore
   599 label *label452
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp263 0
+  600 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   601 jump *label454 notEqual *tmp263 false
   602 set :error:error "Cannot locate ore"
   603 setaddr :error*retaddr *label453 (h:*label453)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   595 setaddr :transportStatus*retaddr *label192 (h:*label192)
   596 call *label12 *invalid :transportStatus*retval (m:*label192) (h:*label192)
   597 label *label192
-    * set :locateOre:ore :mineOre:ore
   598 label *label452
   599 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   600 jump *label454 notEqual *tmp263 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   736 label *label221
   737 return :supplyBlock*retaddr
   738 end
-    * label *label25
-    * sensor *tmp300 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp300 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label227 (h:*label227)
-    * call *label12 *invalid :transportStatus*retval (m:*label227) (h:*label227)
-    * label *label227
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label228 (h:*label228)
-    * call *label10 *invalid :status2*retval (m:*label228) (h:*label228)
-    * label *label228
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label229 (h:*label229)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label229) (h:*label229)
-    * label *label229
-    * setaddr :dropAll*retaddr *label230 (h:*label230)
-    * call *label17 *invalid :dropAll*retval (m:*label230) (h:*label230)
-    * label *label230
-    * label *label231
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp303 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp304 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp305 *tmp303 *tmp304
-    * jump *label234 equal *tmp305 false
-    * ucontrol itemDrop @air 1000
-    * label *label234
-    * label *label235
-    * label *label232
-    * sensor *tmp307 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp308 *tmp307 30
-    * sensor *tmp309 .core :supplyBlockFromCore:item
-    * op land *tmp310 *tmp308 *tmp309
-    * jump *label231 notEqual *tmp310 false
-    * label *label233
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label236 (h:*label236)
-    * call *label19 *invalid :depositItems*retval (m:*label236) (h:*label236)
-    * label *label236
-    * label *label226
-    * return :supplyBlockFromCore*retaddr
-    * end
   739 label *label31
   740 read *tmp312 :unpackCfg:cfg 0
   741 op sub *tmp313 *tmp312 35
 
   785 label *label243
   786 set :supplyBlockFromCore:target .thoriumGenerator
   787 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label246 (h:*label246)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label246) (h:*label246)
-    * label *label246
+  788 label *label457
+  789 sensor *tmp300 :supplyBlockFromCore:target @itemCapacity
+  790 op min :transportStatus:target *tmp300 30
+  791 set :transportStatus:item :supplyBlockFromCore:item
+  792 setaddr :transportStatus*retaddr *label458 (h:*label458)
+  793 call *label12 *invalid :transportStatus*retval (m:*label458) (h:*label458)
+  794 label *label458
+  795 set :status2:text "Transferring "
+  796 set :status2:item :supplyBlockFromCore:item
+  797 set :status2:block :supplyBlockFromCore:target
+  798 setaddr :status2*retaddr *label459 (h:*label459)
+  799 call *label10 *invalid :status2*retval (m:*label459) (h:*label459)
+  800 label *label459
+  801 set :moveToEmpty:x .coreX
+  802 set :moveToEmpty:y .coreY
+  803 setaddr :moveToEmpty*retaddr *label460 (h:*label460)
+  804 call *label16 *invalid :moveToEmpty*retval (m:*label460) (h:*label460)
+  805 label *label460
+  806 setaddr :dropAll*retaddr *label461 (h:*label461)
+  807 call *label17 *invalid :dropAll*retval (m:*label461) (h:*label461)
+  808 label *label461
+  809 label *label462
+  810 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  811 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  812 op notEqual *tmp303 :supplyBlockFromCore:unitItem null
+  813 op notEqual *tmp304 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  814 op land *tmp305 *tmp303 *tmp304
+  815 jump *label463 equal *tmp305 false
+  816 ucontrol itemDrop @air 1000
+  817 label *label463
+  818 label *label464
+  819 label *label465
+  820 sensor *tmp307 @unit :supplyBlockFromCore:item
+  821 op lessThan *tmp308 *tmp307 30
+  822 sensor *tmp309 .core :supplyBlockFromCore:item
+  823 op land *tmp310 *tmp308 *tmp309
+  824 jump *label462 notEqual *tmp310 false
+  825 label *label466
+  826 set :depositItems:block :supplyBlockFromCore:target
+  827 set :depositItems:item :supplyBlockFromCore:item
+  828 setaddr :depositItems*retaddr *label467 (h:*label467)
+  829 call *label19 *invalid :depositItems*retval (m:*label467) (h:*label467)
+  830 label *label467
+  831 label *label468
   832 label *label244
   833 set :fetchBlock:block .thoriumContainer
   834 set :fetchBlock:item @thorium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   786 set :supplyBlockFromCore:target .thoriumGenerator
   787 set :supplyBlockFromCore:item @coal
   788 label *label457
-    * sensor *tmp300 :supplyBlockFromCore:target @itemCapacity
+  789 sensor *tmp300 .thoriumGenerator @itemCapacity
   790 op min :transportStatus:target *tmp300 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  791 set :transportStatus:item @coal
   792 setaddr :transportStatus*retaddr *label458 (h:*label458)
   793 call *label12 *invalid :transportStatus*retval (m:*label458) (h:*label458)
   794 label *label458

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
   532 label *label170
   533 sensor *tmp249 @unit @firstItem
   534 jump *label172 equal *tmp249 null
+  535 label *label469
   536 ucontrol itemDrop @air 1000
   537 label *label171
-    * jump *label170 always
+  538 sensor *tmp249 @unit @firstItem
+  539 jump *label469 notEqual *tmp249 null
   540 label *label172
   541 label *label169
   542 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
   557 label *label447
   558 ucontrol within *tmp251 *tmp252 6 *tmp239
   559 jump *label449 notEqual *tmp239 false
+  560 label *label470
   561 ucontrol approach *tmp251 *tmp252 5.5
   562 label *label448
-    * jump *label447 always
+  563 ucontrol within *tmp251 *tmp252 6 *tmp239
+  564 jump *label470 equal *tmp239 false
   565 label *label449
   566 label *label450
   567 label *label451

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   579 label *label183
   580 sensor *tmp261 @unit @firstItem
   581 jump *label185 equal *tmp261 null
+  582 label *label471
   583 ucontrol itemDrop @air 1000
   584 label *label184
-    * jump *label183 always
+  585 sensor *tmp261 @unit @firstItem
+  586 jump *label471 notEqual *tmp261 null
   587 label *label185
   588 label *label178
   589 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
   588 label *label178
   589 set :transportStatus:target 0
   590 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label186 (h:*label186)
-    * call *label12 *invalid :transportStatus*retval (m:*label186) (h:*label186)
-    * label *label186
+  591 label *label472
+  592 write :transportStatus:target .display ".transportTarget"
+  593 write :transportStatus:item .display ".transportItem"
+  594 label *label473
   595 label *label175
   596 return :depositItems*retaddr
   597 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   589 set :transportStatus:target 0
   590 set :transportStatus:item null
   591 label *label472
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  592 write 0 .display ".transportTarget"
+  593 write null .display ".transportItem"
   594 label *label473
   595 label *label175
   596 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   586 jump *label471 notEqual *tmp261 null
   587 label *label185
   588 label *label178
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   589 label *label472
   590 write 0 .display ".transportTarget"
   591 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   498 label *label151
   499 return :status2*retaddr
   500 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label153
-    * return :transportStatus*retaddr
-    * end
   501 label *label13
   502 set .ERROR :error:error
   503 stop
 
   591 op min :mineOre:amount :mineOre:amount 30
   592 set :transportStatus:target :mineOre:amount
   593 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label192 (h:*label192)
-    * call *label12 *invalid :transportStatus*retval (m:*label192) (h:*label192)
-    * label *label192
+  594 label *label474
+  595 write :transportStatus:target .display ".transportTarget"
+  596 write :transportStatus:item .display ".transportItem"
+  597 label *label475
   598 label *label452
   599 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   600 jump *label454 notEqual *tmp263 false
 
   670 sensor *tmp282 :fetchBlock:block @itemCapacity
   671 op min :transportStatus:target *tmp282 30
   672 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label211 (h:*label211)
-    * call *label12 *invalid :transportStatus*retval (m:*label211) (h:*label211)
-    * label *label211
+  673 label *label476
+  674 write :transportStatus:target .display ".transportTarget"
+  675 write :transportStatus:item .display ".transportItem"
+  676 label *label477
   677 set :status2:text "Fetching "
   678 set :status2:item :fetchBlock:item
   679 set :status2:block :fetchBlock:block
 
   790 sensor *tmp300 .thoriumGenerator @itemCapacity
   791 op min :transportStatus:target *tmp300 30
   792 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label458 (h:*label458)
-    * call *label12 *invalid :transportStatus*retval (m:*label458) (h:*label458)
-    * label *label458
+  793 label *label478
+  794 write :transportStatus:target .display ".transportTarget"
+  795 write :transportStatus:item .display ".transportItem"
+  796 label *label479
   797 set :status2:text "Transferring "
   798 set :status2:item :supplyBlockFromCore:item
   799 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   592 set :transportStatus:target :mineOre:amount
   593 set :transportStatus:item :mineOre:ore
   594 label *label474
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  595 write :mineOre:amount .display ".transportTarget"
+  596 write :mineOre:ore .display ".transportItem"
   597 label *label475
   598 label *label452
   599 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
 
   672 set :transportStatus:item :fetchBlock:item
   673 label *label476
   674 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  675 write :fetchBlock:item .display ".transportItem"
   676 label *label477
   677 set :status2:text "Fetching "
   678 set :status2:item :fetchBlock:item
 
   792 set :transportStatus:item @coal
   793 label *label478
   794 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  795 write @coal .display ".transportItem"
   796 label *label479
   797 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  798 set :status2:item @coal
+  799 set :status2:block .thoriumGenerator
   800 setaddr :status2*retaddr *label459 (h:*label459)
   801 call *label10 *invalid :status2*retval (m:*label459) (h:*label459)
   802 label *label459

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   590 label *label21
   591 op min :mineOre:amount :mineOre:amount 30
   592 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   593 label *label474
   594 write :mineOre:amount .display ".transportTarget"
   595 write :mineOre:ore .display ".transportItem"
 
   668 label *label23
   669 sensor *tmp282 :fetchBlock:block @itemCapacity
   670 op min :transportStatus:target *tmp282 30
-    * set :transportStatus:item :fetchBlock:item
   671 label *label476
   672 write :transportStatus:target .display ".transportTarget"
   673 write :fetchBlock:item .display ".transportItem"
 
   787 label *label457
   788 sensor *tmp300 .thoriumGenerator @itemCapacity
   789 op min :transportStatus:target *tmp300 30
-    * set :transportStatus:item @coal
   790 label *label478
   791 write :transportStatus:target .display ".transportTarget"
   792 write @coal .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   675 set :status2:text "Fetching "
   676 set :status2:item :fetchBlock:item
   677 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label212 (h:*label212)
-    * call *label10 *invalid :status2*retval (m:*label212) (h:*label212)
-    * label *label212
+  678 label *label480
+  679 write :status2:text .display ".status2"
+  680 write :status2:item .display ".item2"
+  681 write :status2:block .display ".block2"
+  682 label *label481
   683 sensor *tmp284 :fetchBlock:block @x
   684 sensor *tmp285 :fetchBlock:block @y
   685 set :moveToEmpty:x *tmp284

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   676 set :status2:item :fetchBlock:item
   677 set :status2:block :fetchBlock:block
   678 label *label480
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  679 write "Fetching " .display ".status2"
+  680 write :fetchBlock:item .display ".item2"
+  681 write :fetchBlock:block .display ".block2"
   682 label *label481
   683 sensor *tmp284 :fetchBlock:block @x
   684 sensor *tmp285 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   672 write :transportStatus:target .display ".transportTarget"
   673 write :fetchBlock:item .display ".transportItem"
   674 label *label477
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   675 label *label480
   676 write "Fetching " .display ".status2"
   677 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   491 label *label145
   492 label *label138
   493 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label151
-    * return :status2*retaddr
-    * end
   494 label *label13
   495 set .ERROR :error:error
   496 stop
 
   646 set :status2:text "Mining "
   647 set :status2:item :mineOre.1:ore
   648 set :status2:block "core"
-    * setaddr :status2*retaddr *label208 (h:*label208)
-    * call *label10 *invalid :status2*retval (m:*label208) (h:*label208)
-    * label *label208
+  649 label *label482
+  650 write :status2:text .display ".status2"
+  651 write :status2:item .display ".item2"
+  652 write :status2:block .display ".block2"
+  653 label *label483
   654 set :mineOre:ore :mineOre.1:ore
   655 set :mineOre:amount 30
   656 set :mineOre:block .core
 
   711 set :status2:text "Supplying "
   712 set :status2:item :supplyBlock:ore
   713 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label222 (h:*label222)
-    * call *label10 *invalid :status2*retval (m:*label222) (h:*label222)
-    * label *label222
+  714 label *label484
+  715 write :status2:text .display ".status2"
+  716 write :status2:item .display ".item2"
+  717 write :status2:block .display ".block2"
+  718 label *label485
   719 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   720 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
   721 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
 
   790 set :status2:text "Transferring "
   791 set :status2:item @coal
   792 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label459 (h:*label459)
-    * call *label10 *invalid :status2*retval (m:*label459) (h:*label459)
-    * label *label459
+  793 label *label486
+  794 write :status2:text .display ".status2"
+  795 write :status2:item .display ".item2"
+  796 write :status2:block .display ".block2"
+  797 label *label487
   798 set :moveToEmpty:x .coreX
   799 set :moveToEmpty:y .coreY
   800 setaddr :moveToEmpty*retaddr *label460 (h:*label460)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   647 set :status2:item :mineOre.1:ore
   648 set :status2:block "core"
   649 label *label482
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  650 write "Mining " .display ".status2"
+  651 write :mineOre.1:ore .display ".item2"
+  652 write "core" .display ".block2"
   653 label *label483
   654 set :mineOre:ore :mineOre.1:ore
   655 set :mineOre:amount 30
 
   712 set :status2:item :supplyBlock:ore
   713 set :status2:block :supplyBlock:block
   714 label *label484
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  715 write "Supplying " .display ".status2"
+  716 write :supplyBlock:ore .display ".item2"
+  717 write :supplyBlock:block .display ".block2"
   718 label *label485
   719 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   720 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
 
   791 set :status2:item @coal
   792 set :status2:block .thoriumGenerator
   793 label *label486
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  794 write "Transferring " .display ".status2"
+  795 write @coal .display ".item2"
+  796 write .thoriumGenerator .display ".block2"
   797 label *label487
   798 set :moveToEmpty:x .coreX
   799 set :moveToEmpty:y .coreY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   643 return :mineOre*retaddr
   644 end
   645 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   646 label *label482
   647 write "Mining " .display ".status2"
   648 write :mineOre.1:ore .display ".item2"
 
   705 return :fetchBlock*retaddr
   706 end
   707 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   708 label *label484
   709 write "Supplying " .display ".status2"
   710 write :supplyBlock:ore .display ".item2"
 
   781 write :transportStatus:target .display ".transportTarget"
   782 write @coal .display ".transportItem"
   783 label *label479
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   784 label *label486
   785 write "Transferring " .display ".status2"
   786 write @coal .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    72 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    73 jump *label54 notEqual :buildFirstTitaniumDrill:result false
    74 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label56 (h:*label56)
-    * call *label13 *invalid :error*retval (m:*label56) (h:*label56)
-    * label *label56
+   75 label *label488
+   76 set .ERROR :error:error
+   77 stop
+   78 label *label489
    79 label *label54
    80 label *label55
    81 write @pneumatic-drill processor1 ".nextBlock"
 
   325 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   326 jump *label110 notEqual :buildThoriumDrill:result false
   327 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label112 (h:*label112)
-    * call *label13 *invalid :error*retval (m:*label112) (h:*label112)
-    * label *label112
+  328 label *label490
+  329 set .ERROR :error:error
+  330 stop
+  331 label *label491
   332 label *label110
   333 label *label111
   334 write @laser-drill processor5 ":buildBlockAt:block"
 
   493 label *label145
   494 label *label138
   495 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label154
-    * return :error*retaddr
-    * end
   496 label *label16
   497 label *label430
   498 write "Moving..." .display ".status3"
 
   587 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   588 jump *label454 notEqual *tmp263 false
   589 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label453 (h:*label453)
-    * call *label13 *invalid :error*retval (m:*label453) (h:*label453)
-    * label *label453
+  590 label *label492
+  591 set .ERROR :error:error
+  592 stop
+  593 label *label493
   594 label *label454
   595 label *label455
   596 label *label456

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    73 jump *label54 notEqual :buildFirstTitaniumDrill:result false
    74 set :error:error "Cannot locate spot for titanium drill"
    75 label *label488
-    * set .ERROR :error:error
+   76 set .ERROR "Cannot locate spot for titanium drill"
    77 stop
    78 label *label489
    79 label *label54
 
   326 jump *label110 notEqual :buildThoriumDrill:result false
   327 set :error:error "Cannot locate spot for thorium drill"
   328 label *label490
-    * set .ERROR :error:error
+  329 set .ERROR "Cannot locate spot for thorium drill"
   330 stop
   331 label *label491
   332 label *label110
 
   588 jump *label454 notEqual *tmp263 false
   589 set :error:error "Cannot locate ore"
   590 label *label492
-    * set .ERROR :error:error
+  591 set .ERROR "Cannot locate ore"
   592 stop
   593 label *label493
   594 label *label454

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    71 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    72 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    73 jump *label54 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    74 label *label488
    75 set .ERROR "Cannot locate spot for titanium drill"
    76 stop
 
   323 jump *label109 equal *tmp203 false
   324 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   325 jump *label110 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   326 label *label490
   327 set .ERROR "Cannot locate spot for thorium drill"
   328 stop
 
   584 label *label452
   585 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   586 jump *label454 notEqual *tmp263 false
-    * set :error:error "Cannot locate ore"
   587 label *label492
   588 set .ERROR "Cannot locate ore"
   589 stop

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   491 label *label145
   492 label *label138
   493 end
-    * label *label16
-    * label *label430
-    * write "Moving..." .display ".status3"
-    * label *label431
-    * label *label164
-    * sensor *tmp244 @unit @firstItem
-    * jump *label167 equal *tmp244 null
-    * ucontrol itemDrop @air 1000
-    * label *label167
-    * label *label168
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label165
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
-    * jump *label164 equal *tmp247 false
-    * label *label166
-    * label *label162
-    * return :moveToEmpty*retaddr
-    * end
   494 label *label17
   495 label *label170
   496 sensor *tmp249 @unit @firstItem
 
   577 set :mineOre:y :locateOre:y
   578 set :moveToEmpty:x :locateOre:x
   579 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label194 (h:*label194)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label194) (h:*label194)
-    * label *label194
+  580 label *label494
+  581 label *label495
+  582 write "Moving..." .display ".status3"
+  583 label *label496
+  584 label *label497
+  585 sensor *tmp244 @unit @firstItem
+  586 jump *label498 equal *tmp244 null
+  587 ucontrol itemDrop @air 1000
+  588 label *label498
+  589 label *label499
+  590 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  591 label *label500
+  592 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  593 jump *label497 equal *tmp247 false
+  594 label *label501
+  595 label *label502
   596 sensor *tmp268 @unit @firstItem
   597 jump *label195 equal *tmp268 :mineOre:ore
   598 setaddr :dropAll*retaddr *label197 (h:*label197)
 
   662 sensor *tmp285 :fetchBlock:block @y
   663 set :moveToEmpty:x *tmp284
   664 set :moveToEmpty:y *tmp285
-    * setaddr :moveToEmpty*retaddr *label213 (h:*label213)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
-    * label *label213
+  665 label *label503
+  666 label *label504
+  667 write "Moving..." .display ".status3"
+  668 label *label505
+  669 label *label506
+  670 sensor *tmp244 @unit @firstItem
+  671 jump *label507 equal *tmp244 null
+  672 ucontrol itemDrop @air 1000
+  673 label *label507
+  674 label *label508
+  675 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  676 label *label509
+  677 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  678 jump *label506 equal *tmp247 false
+  679 label *label510
+  680 label *label511
   681 setaddr :dropAll*retaddr *label214 (h:*label214)
   682 call *label17 *invalid :dropAll*retval (m:*label214) (h:*label214)
   683 label *label214
 
   790 label *label487
   791 set :moveToEmpty:x .coreX
   792 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label460 (h:*label460)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label460) (h:*label460)
-    * label *label460
+  793 label *label512
+  794 label *label513
+  795 write "Moving..." .display ".status3"
+  796 label *label514
+  797 label *label515
+  798 sensor *tmp244 @unit @firstItem
+  799 jump *label516 equal *tmp244 null
+  800 ucontrol itemDrop @air 1000
+  801 label *label516
+  802 label *label517
+  803 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  804 label *label518
+  805 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  806 jump *label515 equal *tmp247 false
+  807 label *label519
+  808 label *label520
   809 setaddr :dropAll*retaddr *label461 (h:*label461)
   810 call *label17 *invalid :dropAll*retval (m:*label461) (h:*label461)
   811 label *label461

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   587 ucontrol itemDrop @air 1000
   588 label *label498
   589 label *label499
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  590 ucontrol approach :locateOre:x :locateOre:y 5.5
   591 label *label500
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  592 ucontrol within :locateOre:x :locateOre:y 6 *tmp247
   593 jump *label497 equal *tmp247 false
   594 label *label501
   595 label *label502
 
   672 ucontrol itemDrop @air 1000
   673 label *label507
   674 label *label508
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  675 ucontrol approach *tmp284 *tmp285 5.5
   676 label *label509
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  677 ucontrol within *tmp284 *tmp285 6 *tmp247
   678 jump *label506 equal *tmp247 false
   679 label *label510
   680 label *label511
 
   800 ucontrol itemDrop @air 1000
   801 label *label516
   802 label *label517
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  803 ucontrol approach .coreX .coreY 5.5
   804 label *label518
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
+  805 ucontrol within .coreX .coreY 6 *tmp247
   806 jump *label515 equal *tmp247 false
   807 label *label519
   808 label *label520

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   575 label *label456
   576 set :mineOre:x :locateOre:x
   577 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   578 label *label494
   579 label *label495
   580 write "Moving..." .display ".status3"
 
   658 label *label481
   659 sensor *tmp284 :fetchBlock:block @x
   660 sensor *tmp285 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp284
-    * set :moveToEmpty:y *tmp285
   661 label *label503
   662 label *label504
   663 write "Moving..." .display ".status3"
 
   784 write @coal .display ".item2"
   785 write .thoriumGenerator .display ".block2"
   786 label *label487
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   787 label *label512
   788 label *label513
   789 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (+2 instructions):
 
   491 label *label145
   492 label *label138
   493 end
-    * label *label17
-    * label *label170
-    * sensor *tmp249 @unit @firstItem
-    * jump *label172 equal *tmp249 null
-    * label *label469
-    * ucontrol itemDrop @air 1000
-    * label *label171
-    * sensor *tmp249 @unit @firstItem
-    * jump *label469 notEqual *tmp249 null
-    * label *label172
-    * label *label169
-    * return :dropAll*retaddr
-    * end
   494 label *label19
   495 label *label432
   496 write "Depositing..." .display ".status3"
 
   580 label *label502
   581 sensor *tmp268 @unit @firstItem
   582 jump *label195 equal *tmp268 :mineOre:ore
-    * setaddr :dropAll*retaddr *label197 (h:*label197)
-    * call *label17 *invalid :dropAll*retval (m:*label197) (h:*label197)
-    * label *label197
+  583 label *label521
+  584 label *label522
+  585 sensor *tmp249 @unit @firstItem
+  586 jump *label525 equal *tmp249 null
+  587 label *label523
+  588 ucontrol itemDrop @air 1000
+  589 label *label524
+  590 sensor *tmp249 @unit @firstItem
+  591 jump *label523 notEqual *tmp249 null
+  592 label *label525
+  593 label *label526
   594 label *label195
   595 label *label196
   596 label *label434
 
   669 jump *label506 equal *tmp247 false
   670 label *label510
   671 label *label511
-    * setaddr :dropAll*retaddr *label214 (h:*label214)
-    * call *label17 *invalid :dropAll*retval (m:*label214) (h:*label214)
-    * label *label214
+  672 label *label527
+  673 label *label528
+  674 sensor *tmp249 @unit @firstItem
+  675 jump *label531 equal *tmp249 null
+  676 label *label529
+  677 ucontrol itemDrop @air 1000
+  678 label *label530
+  679 sensor *tmp249 @unit @firstItem
+  680 jump *label529 notEqual *tmp249 null
+  681 label *label531
+  682 label *label532
   683 label *label215
   684 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   685 sensor :fetchBlock:unitItem @unit @firstItem
 
   803 jump *label515 equal *tmp247 false
   804 label *label519
   805 label *label520
-    * setaddr :dropAll*retaddr *label461 (h:*label461)
-    * call *label17 *invalid :dropAll*retval (m:*label461) (h:*label461)
-    * label *label461
+  806 label *label533
+  807 label *label534
+  808 sensor *tmp249 @unit @firstItem
+  809 jump *label537 equal *tmp249 null
+  810 label *label535
+  811 ucontrol itemDrop @air 1000
+  812 label *label536
+  813 sensor *tmp249 @unit @firstItem
+  814 jump *label535 notEqual *tmp249 null
+  815 label *label537
+  816 label *label538
   817 label *label462
   818 ucontrol itemTake .core :supplyBlockFromCore:item 30
   819 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   606 jump *label201 always
   607 label *label202
   608 label *label203
-    * ucontrol mine :mineOre:x :mineOre:y
+  609 ucontrol mine :locateOre:x :locateOre:y
   610 jump *label204 lessThanEq @second :mineOre:stop
   611 jump *label201 always
   612 label *label204
 
   815 label *label537
   816 label *label538
   817 label *label462
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  818 ucontrol itemTake .core @coal 30
   819 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   820 op notEqual *tmp303 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp304 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  821 op notEqual *tmp304 :supplyBlockFromCore:unitItem @coal
   822 op land *tmp305 *tmp303 *tmp304
   823 jump *label463 equal *tmp305 false
   824 ucontrol itemDrop @air 1000
   825 label *label463
   826 label *label464
   827 label *label465
-    * sensor *tmp307 @unit :supplyBlockFromCore:item
+  828 sensor *tmp307 @unit @coal
   829 op lessThan *tmp308 *tmp307 30
-    * sensor *tmp309 .core :supplyBlockFromCore:item
+  830 sensor *tmp309 .core @coal
   831 op land *tmp310 *tmp308 *tmp309
   832 jump *label462 notEqual *tmp310 false
   833 label *label466
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  834 set :depositItems:block .thoriumGenerator
+  835 set :depositItems:item @coal
   836 setaddr :depositItems*retaddr *label467 (h:*label467)
   837 call *label19 *invalid :depositItems*retval (m:*label467) (h:*label467)
   838 label *label467

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   560 label *label454
   561 label *label455
   562 label *label456
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   563 label *label494
   564 label *label495
   565 write "Moving..." .display ".status3"
 
   771 label *label245
   772 jump *label244 always
   773 label *label243
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   774 label *label457
   775 sensor *tmp300 .thoriumGenerator @itemCapacity
   776 op min :transportStatus:target *tmp300 30

Modifications by Inline function call at CoreBuilder.mnd:200:5 (+6 instructions):
 
   848 write "Phase 1: supplying base" .display ".status1"
   849 label *label405
   850 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label252 (h:*label252)
-    * call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
-    * label *label252
+  851 label *label539
+  852 label *label540
+  853 write "Mining " .display ".status2"
+  854 write :mineOre.1:ore .display ".item2"
+  855 write "core" .display ".block2"
+  856 label *label541
+  857 set :mineOre:ore :mineOre.1:ore
+  858 set :mineOre:amount 30
+  859 set :mineOre:block .core
+  860 setaddr :mineOre*retaddr *label542 (h:*label542)
+  861 call *label21 *invalid :mineOre*retval (m:*label542) (h:*label542)
+  862 label *label542
+  863 label *label543
   864 label *label250
   865 jump *label249 always
   866 label *label248

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   851 label *label539
   852 label *label540
   853 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  854 write @coal .display ".item2"
   855 write "core" .display ".block2"
   856 label *label541
-    * set :mineOre:ore :mineOre.1:ore
+  857 set :mineOre:ore @coal
   858 set :mineOre:amount 30
   859 set :mineOre:block .core
   860 setaddr :mineOre*retaddr *label542 (h:*label542)

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+42 instructions):
 
   491 label *label145
   492 label *label138
   493 end
-    * label *label19
-    * label *label432
-    * write "Depositing..." .display ".status3"
-    * label *label433
-    * sensor *tmp253 @unit @firstItem
-    * jump *label177 notEqual *tmp253 :depositItems:item
-    * label *label443
-    * sensor *tmp251 :depositItems:block @x
-    * sensor *tmp252 :depositItems:block @y
-    * label *label444
-    * label *label445
-    * write "Moving..." .display ".status3"
-    * label *label446
-    * label *label447
-    * ucontrol within *tmp251 *tmp252 6 *tmp239
-    * jump *label449 notEqual *tmp239 false
-    * label *label470
-    * ucontrol approach *tmp251 *tmp252 5.5
-    * label *label448
-    * ucontrol within *tmp251 *tmp252 6 *tmp239
-    * jump *label470 equal *tmp239 false
-    * label *label449
-    * label *label450
-    * label *label451
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label180
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label181
-    * sensor *tmp257 @unit @firstItem
-    * op mul *tmp258 *tmp257 :depositItems:cap
-    * sensor *tmp259 :depositItems:block :depositItems:item
-    * jump *label180 greaterThan *tmp258 *tmp259
-    * label *label182
-    * jump *label178 always
-    * label *label177
-    * label *label183
-    * sensor *tmp261 @unit @firstItem
-    * jump *label185 equal *tmp261 null
-    * label *label471
-    * ucontrol itemDrop @air 1000
-    * label *label184
-    * sensor *tmp261 @unit @firstItem
-    * jump *label471 notEqual *tmp261 null
-    * label *label185
-    * label *label178
-    * label *label472
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label473
-    * label *label175
-    * return :depositItems*retaddr
-    * end
   494 label *label21
   495 op min :mineOre:amount :mineOre:amount 30
   496 set :transportStatus:target :mineOre:amount
 
   564 ucontrol unbind
   565 set :depositItems:block :mineOre:block
   566 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label206 (h:*label206)
-    * call *label19 *invalid :depositItems*retval (m:*label206) (h:*label206)
-    * label *label206
+  567 label *label544
+  568 label *label545
+  569 write "Depositing..." .display ".status3"
+  570 label *label546
+  571 sensor *tmp253 @unit @firstItem
+  572 jump *label560 notEqual *tmp253 :depositItems:item
+  573 label *label547
+  574 sensor *tmp251 :depositItems:block @x
+  575 sensor *tmp252 :depositItems:block @y
+  576 label *label548
+  577 label *label549
+  578 write "Moving..." .display ".status3"
+  579 label *label550
+  580 label *label551
+  581 ucontrol within *tmp251 *tmp252 6 *tmp239
+  582 jump *label554 notEqual *tmp239 false
+  583 label *label552
+  584 ucontrol approach *tmp251 *tmp252 5.5
+  585 label *label553
+  586 ucontrol within *tmp251 *tmp252 6 *tmp239
+  587 jump *label552 equal *tmp239 false
+  588 label *label554
+  589 label *label555
+  590 label *label556
+  591 sensor :depositItems:cap :depositItems:block @itemCapacity
+  592 label *label557
+  593 ucontrol itemDrop :depositItems:block 30
+  594 label *label558
+  595 sensor *tmp257 @unit @firstItem
+  596 op mul *tmp258 *tmp257 :depositItems:cap
+  597 sensor *tmp259 :depositItems:block :depositItems:item
+  598 jump *label557 greaterThan *tmp258 *tmp259
+  599 label *label559
+  600 jump *label565 always
+  601 label *label560
+  602 label *label561
+  603 sensor *tmp261 @unit @firstItem
+  604 jump *label564 equal *tmp261 null
+  605 label *label562
+  606 ucontrol itemDrop @air 1000
+  607 label *label563
+  608 sensor *tmp261 @unit @firstItem
+  609 jump *label562 notEqual *tmp261 null
+  610 label *label564
+  611 label *label565
+  612 label *label566
+  613 write 0 .display ".transportTarget"
+  614 write null .display ".transportItem"
+  615 label *label567
+  616 label *label568
   617 label *label191
   618 return :mineOre*retaddr
   619 end
 
   692 label *label217
   693 set :depositItems:block .core
   694 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label220 (h:*label220)
-    * call *label19 *invalid :depositItems*retval (m:*label220) (h:*label220)
-    * label *label220
+  695 label *label569
+  696 label *label570
+  697 write "Depositing..." .display ".status3"
+  698 label *label571
+  699 sensor *tmp253 @unit @firstItem
+  700 jump *label585 notEqual *tmp253 :depositItems:item
+  701 label *label572
+  702 sensor *tmp251 :depositItems:block @x
+  703 sensor *tmp252 :depositItems:block @y
+  704 label *label573
+  705 label *label574
+  706 write "Moving..." .display ".status3"
+  707 label *label575
+  708 label *label576
+  709 ucontrol within *tmp251 *tmp252 6 *tmp239
+  710 jump *label579 notEqual *tmp239 false
+  711 label *label577
+  712 ucontrol approach *tmp251 *tmp252 5.5
+  713 label *label578
+  714 ucontrol within *tmp251 *tmp252 6 *tmp239
+  715 jump *label577 equal *tmp239 false
+  716 label *label579
+  717 label *label580
+  718 label *label581
+  719 sensor :depositItems:cap :depositItems:block @itemCapacity
+  720 label *label582
+  721 ucontrol itemDrop :depositItems:block 30
+  722 label *label583
+  723 sensor *tmp257 @unit @firstItem
+  724 op mul *tmp258 *tmp257 :depositItems:cap
+  725 sensor *tmp259 :depositItems:block :depositItems:item
+  726 jump *label582 greaterThan *tmp258 *tmp259
+  727 label *label584
+  728 jump *label590 always
+  729 label *label585
+  730 label *label586
+  731 sensor *tmp261 @unit @firstItem
+  732 jump *label589 equal *tmp261 null
+  733 label *label587
+  734 ucontrol itemDrop @air 1000
+  735 label *label588
+  736 sensor *tmp261 @unit @firstItem
+  737 jump *label587 notEqual *tmp261 null
+  738 label *label589
+  739 label *label590
+  740 label *label591
+  741 write 0 .display ".transportTarget"
+  742 write null .display ".transportItem"
+  743 label *label592
+  744 label *label593
   745 label *label210
   746 return :fetchBlock*retaddr
   747 end
 
   871 label *label466
   872 set :depositItems:block .thoriumGenerator
   873 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label467 (h:*label467)
-    * call *label19 *invalid :depositItems*retval (m:*label467) (h:*label467)
-    * label *label467
+  874 label *label594
+  875 label *label595
+  876 write "Depositing..." .display ".status3"
+  877 label *label596
+  878 sensor *tmp253 @unit @firstItem
+  879 jump *label610 notEqual *tmp253 :depositItems:item
+  880 label *label597
+  881 sensor *tmp251 :depositItems:block @x
+  882 sensor *tmp252 :depositItems:block @y
+  883 label *label598
+  884 label *label599
+  885 write "Moving..." .display ".status3"
+  886 label *label600
+  887 label *label601
+  888 ucontrol within *tmp251 *tmp252 6 *tmp239
+  889 jump *label604 notEqual *tmp239 false
+  890 label *label602
+  891 ucontrol approach *tmp251 *tmp252 5.5
+  892 label *label603
+  893 ucontrol within *tmp251 *tmp252 6 *tmp239
+  894 jump *label602 equal *tmp239 false
+  895 label *label604
+  896 label *label605
+  897 label *label606
+  898 sensor :depositItems:cap :depositItems:block @itemCapacity
+  899 label *label607
+  900 ucontrol itemDrop :depositItems:block 30
+  901 label *label608
+  902 sensor *tmp257 @unit @firstItem
+  903 op mul *tmp258 *tmp257 :depositItems:cap
+  904 sensor *tmp259 :depositItems:block :depositItems:item
+  905 jump *label607 greaterThan *tmp258 *tmp259
+  906 label *label609
+  907 jump *label615 always
+  908 label *label610
+  909 label *label611
+  910 sensor *tmp261 @unit @firstItem
+  911 jump *label614 equal *tmp261 null
+  912 label *label612
+  913 ucontrol itemDrop @air 1000
+  914 label *label613
+  915 sensor *tmp261 @unit @firstItem
+  916 jump *label612 notEqual *tmp261 null
+  917 label *label614
+  918 label *label615
+  919 label *label616
+  920 write 0 .display ".transportTarget"
+  921 write null .display ".transportItem"
+  922 label *label617
+  923 label *label618
   924 label *label468
   925 label *label244
   926 set :fetchBlock:block .thoriumContainer

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   493 end
   494 label *label21
   495 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
   496 label *label474
   497 write :mineOre:amount .display ".transportTarget"
   498 write :mineOre:ore .display ".transportItem"
 
   568 write "Depositing..." .display ".status3"
   569 label *label546
   570 sensor *tmp253 @unit @firstItem
-    * jump *label560 notEqual *tmp253 :depositItems:item
+  571 jump *label560 notEqual *tmp253 :mineOre:ore
   572 label *label547
-    * sensor *tmp251 :depositItems:block @x
-    * sensor *tmp252 :depositItems:block @y
+  573 sensor *tmp251 :mineOre:block @x
+  574 sensor *tmp252 :mineOre:block @y
   575 label *label548
   576 label *label549
   577 write "Moving..." .display ".status3"
 
   587 label *label554
   588 label *label555
   589 label *label556
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  590 sensor :depositItems:cap :mineOre:block @itemCapacity
   591 label *label557
-    * ucontrol itemDrop :depositItems:block 30
+  592 ucontrol itemDrop :mineOre:block 30
   593 label *label558
   594 sensor *tmp257 @unit @firstItem
   595 op mul *tmp258 *tmp257 :depositItems:cap
-    * sensor *tmp259 :depositItems:block :depositItems:item
+  596 sensor *tmp259 :mineOre:block :mineOre:ore
   597 jump *label557 greaterThan *tmp258 *tmp259
   598 label *label559
   599 jump *label565 always
 
   696 write "Depositing..." .display ".status3"
   697 label *label571
   698 sensor *tmp253 @unit @firstItem
-    * jump *label585 notEqual *tmp253 :depositItems:item
+  699 jump *label585 notEqual *tmp253 :fetchBlock:item
   700 label *label572
-    * sensor *tmp251 :depositItems:block @x
-    * sensor *tmp252 :depositItems:block @y
+  701 sensor *tmp251 .core @x
+  702 sensor *tmp252 .core @y
   703 label *label573
   704 label *label574
   705 write "Moving..." .display ".status3"
 
   715 label *label579
   716 label *label580
   717 label *label581
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  718 sensor :depositItems:cap .core @itemCapacity
   719 label *label582
-    * ucontrol itemDrop :depositItems:block 30
+  720 ucontrol itemDrop .core 30
   721 label *label583
   722 sensor *tmp257 @unit @firstItem
   723 op mul *tmp258 *tmp257 :depositItems:cap
-    * sensor *tmp259 :depositItems:block :depositItems:item
+  724 sensor *tmp259 .core :fetchBlock:item
   725 jump *label582 greaterThan *tmp258 *tmp259
   726 label *label584
   727 jump *label590 always
 
   875 write "Depositing..." .display ".status3"
   876 label *label596
   877 sensor *tmp253 @unit @firstItem
-    * jump *label610 notEqual *tmp253 :depositItems:item
+  878 jump *label610 notEqual *tmp253 @coal
   879 label *label597
-    * sensor *tmp251 :depositItems:block @x
-    * sensor *tmp252 :depositItems:block @y
+  880 sensor *tmp251 .thoriumGenerator @x
+  881 sensor *tmp252 .thoriumGenerator @y
   882 label *label598
   883 label *label599
   884 write "Moving..." .display ".status3"
 
   894 label *label604
   895 label *label605
   896 label *label606
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  897 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   898 label *label607
-    * ucontrol itemDrop :depositItems:block 30
+  899 ucontrol itemDrop .thoriumGenerator 30
   900 label *label608
   901 sensor *tmp257 @unit @firstItem
   902 op mul *tmp258 *tmp257 :depositItems:cap
-    * sensor *tmp259 :depositItems:block :depositItems:item
+  903 sensor *tmp259 .thoriumGenerator @coal
   904 jump *label607 greaterThan *tmp258 *tmp259
   905 label *label609
   906 jump *label615 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   561 jump *label199 lessThan *tmp279 :mineOre:amount
   562 label *label201
   563 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   564 label *label544
   565 label *label545
   566 write "Depositing..." .display ".status3"
 
   687 op land *tmp294 *tmp292 *tmp293
   688 jump *label215 notEqual *tmp294 false
   689 label *label217
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   690 label *label569
   691 label *label570
   692 write "Depositing..." .display ".status3"
 
   864 op land *tmp310 *tmp308 *tmp309
   865 jump *label462 notEqual *tmp310 false
   866 label *label466
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   867 label *label594
   868 label *label595
   869 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:207:9 (+10 instructions):
 
   803 jump *label243 greaterThanEq *tmp357 50
   804 set :supplyBlock:block .thoriumGenerator
   805 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label245 (h:*label245)
-    * call *label24 *invalid :supplyBlock*retval (m:*label245) (h:*label245)
-    * label *label245
+  806 label *label619
+  807 label *label620
+  808 write "Supplying " .display ".status2"
+  809 write :supplyBlock:ore .display ".item2"
+  810 write :supplyBlock:block .display ".block2"
+  811 label *label621
+  812 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  813 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
+  814 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
+  815 jump *label623 lessThanEq :supplyBlock:missing 0
+  816 set :mineOre:ore :supplyBlock:ore
+  817 set :mineOre:amount :supplyBlock:blockCapacity
+  818 set :mineOre:block :supplyBlock:block
+  819 setaddr :mineOre*retaddr *label622 (h:*label622)
+  820 call *label21 *invalid :mineOre*retval (m:*label622) (h:*label622)
+  821 label *label622
+  822 label *label623
+  823 label *label624
+  824 label *label625
   825 jump *label244 always
   826 label *label243
   827 label *label457

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   806 label *label619
   807 label *label620
   808 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  809 write @coal .display ".item2"
+  810 write .thoriumGenerator .display ".block2"
   811 label *label621
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp296 :supplyBlock:block :supplyBlock:ore
+  812 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  813 sensor *tmp296 .thoriumGenerator @coal
   814 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
   815 jump *label623 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  816 set :mineOre:ore @coal
   817 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  818 set :mineOre:block .thoriumGenerator
   819 setaddr :mineOre*retaddr *label622 (h:*label622)
   820 call *label21 *invalid :mineOre*retval (m:*label622) (h:*label622)
   821 label *label622

Modifications by Replicate loop condition at CoreBuilder.mnd:496:5 (+1 instructions):
 
   255 label *label94
   256 read *tmp100 .controller ".polys"
   257 jump *label96 greaterThanEq *tmp100 3
+  258 label *label626
   259 setaddr :supplyBase*retaddr *label97 (h:*label97)
   260 call *label32 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   261 label *label97
   262 label *label95
-    * jump *label94 always
+  263 read *tmp100 .controller ".polys"
+  264 jump *label626 lessThan *tmp100 3
   265 label *label96
   266 write 3 .controller ".flareTarget"
   267 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:501:5 (+1 instructions):
 
   269 label *label99
   270 read *tmp98 .controller ".flares"
   271 jump *label101 greaterThanEq *tmp98 2
+  272 label *label627
   273 setaddr :supplyBase*retaddr *label102 (h:*label102)
   274 call *label32 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   275 label *label102
   276 label *label100
-    * jump *label99 always
+  277 read *tmp98 .controller ".flares"
+  278 jump *label627 lessThan *tmp98 2
   279 label *label101
   280 set .graphiteSurplus 100
   281 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:520:5 (+1 instructions):
 
   412 label *label125
   413 read *tmp100 .controller ".polys"
   414 jump *label127 greaterThanEq *tmp100 5
+  415 label *label628
   416 setaddr :supplyBase*retaddr *label128 (h:*label128)
   417 call *label32 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   418 label *label128
   419 label *label126
-    * jump *label125 always
+  420 read *tmp100 .controller ".polys"
+  421 jump *label628 lessThan *tmp100 5
   422 label *label127
   423 set :buildBlockFromCfg:cfg "+(###A<###$G"
   424 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:531:5 (+1 instructions):
 
   444 label *label134
   445 read *tmp101 .controller ".megas"
   446 jump *label136 greaterThanEq *tmp101 1
+  447 label *label629
   448 setaddr :supplyBase*retaddr *label137 (h:*label137)
   449 call *label32 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   450 label *label137
   451 label *label135
-    * jump *label134 always
+  452 read *tmp101 .controller ".megas"
+  453 jump *label629 lessThan *tmp101 1
   454 label *label136
   455 control enabled processor7 false
   456 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:168:17 (+6 instructions):
 
  1057 write "Goal 5: supplying generator" .display ".status1"
  1058 label *label415
  1059 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label287 (h:*label287)
-    * call *label22 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
-    * label *label287
+ 1060 label *label630
+ 1061 label *label631
+ 1062 write "Mining " .display ".status2"
+ 1063 write :mineOre.1:ore .display ".item2"
+ 1064 write "core" .display ".block2"
+ 1065 label *label632
+ 1066 set :mineOre:ore :mineOre.1:ore
+ 1067 set :mineOre:amount 30
+ 1068 set :mineOre:block .core
+ 1069 setaddr :mineOre*retaddr *label633 (h:*label633)
+ 1070 call *label21 *invalid :mineOre*retval (m:*label633) (h:*label633)
+ 1071 label *label633
+ 1072 label *label634
  1073 jump *label285 always
  1074 label *label284
  1075 sensor *tmp400 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1060 label *label630
  1061 label *label631
  1062 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1063 write @coal .display ".item2"
  1064 write "core" .display ".block2"
  1065 label *label632
-    * set :mineOre:ore :mineOre.1:ore
+ 1066 set :mineOre:ore @coal
  1067 set :mineOre:amount 30
  1068 set :mineOre:block .core
  1069 setaddr :mineOre*retaddr *label633 (h:*label633)

Modifications by Inline function call at CoreBuilder.mnd:174:17 (+6 instructions):
 
  1084 set :mineOre.1:ore @coal
  1085 jump *label292 always
  1086 label *label292
-    * setaddr :mineOre.1*retaddr *label293 (h:*label293)
-    * call *label22 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
-    * label *label293
+ 1087 label *label635
+ 1088 label *label636
+ 1089 write "Mining " .display ".status2"
+ 1090 write :mineOre.1:ore .display ".item2"
+ 1091 write "core" .display ".block2"
+ 1092 label *label637
+ 1093 set :mineOre:ore :mineOre.1:ore
+ 1094 set :mineOre:amount 30
+ 1095 set :mineOre:block .core
+ 1096 setaddr :mineOre*retaddr *label638 (h:*label638)
+ 1097 call *label21 *invalid :mineOre*retval (m:*label638) (h:*label638)
+ 1098 label *label638
+ 1099 label *label639
  1100 jump *label289 always
  1101 label *label288
  1102 sensor *tmp407 .core @copper

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
    87 read *tmp152 processor5 ":buildFirstTitaniumDrillAt*finished"
    88 jump *label57 equal *tmp152 false
    89 read *tmp135 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label51 always
    90 label *label51
    91 set .titaniumDrill *tmp135
    92 write *tmp135 processor1 ".titaniumDrill"
 
  1044 sensor *tmp388 .core @titanium
  1045 op sub *tmp389 .targetTitanium *tmp388
  1046 op min *tmp387 7 *tmp389
-    * jump *label279 always
  1047 label *label279
  1048 sensor *tmp391 .titaniumDrill @titanium
  1049 jump *label280 greaterThanEq *tmp391 *tmp387
 
  1080 set :mineOre.1:ore @sand
  1081 jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1082 set :mineOre.1:ore @coal
-    * jump *label292 always
  1083 label *label292
  1084 label *label635
  1085 label *label636
 
  1137 set :mineOre.1:ore @sand
  1138 jump *label308 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1139 set :mineOre.1:ore @coal
-    * jump *label308 always
  1140 label *label308
  1141 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1142 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
 
  1310 read *tmp463 .blockBuilder ":buildBlockAt*finished"
  1311 jump *label344 equal *tmp463 false
  1312 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label342 always
  1313 label *label342
  1314 return :buildBlock*retaddr
  1315 end
 
  1369 call *label34 *invalid :buildBlock*retval (m:*label352) (h:*label352)
  1370 label *label352
  1371 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label350 always
  1372 label *label350
  1373 return :buildBlockFromCfg*retaddr
  1374 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1168 label *label33
  1169 label *label373
  1170 op sign *tmp421 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp421
+ 1171 set :meetTarget:count *tmp421
  1172 label *label374
  1173 label *label377
  1174 op sign *tmp421 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1167 end
  1168 label *label33
  1169 label *label373
-    * op sign *tmp421 :meetTarget:copper
-    * set :meetTarget:count *tmp421
+ 1170 op sign :meetTarget:count :meetTarget:copper
  1171 label *label374
  1172 label *label377
  1173 op sign *tmp421 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:177:17 (+6 instructions):
 
  1102 write "Goal 7: copper requirement" .display ".status1"
  1103 label *label419
  1104 set :mineOre.1:ore @copper
-    * setaddr :mineOre.1*retaddr *label297 (h:*label297)
-    * call *label22 *invalid :mineOre.1*retval (m:*label297) (h:*label297)
-    * label *label297
+ 1105 label *label640
+ 1106 label *label641
+ 1107 write "Mining " .display ".status2"
+ 1108 write :mineOre.1:ore .display ".item2"
+ 1109 write "core" .display ".block2"
+ 1110 label *label642
+ 1111 set :mineOre:ore :mineOre.1:ore
+ 1112 set :mineOre:amount 30
+ 1113 set :mineOre:block .core
+ 1114 setaddr :mineOre*retaddr *label643 (h:*label643)
+ 1115 call *label21 *invalid :mineOre*retval (m:*label643) (h:*label643)
+ 1116 label *label643
+ 1117 label *label644
  1118 jump *label295 always
  1119 label *label294
  1120 sensor *tmp410 .core @lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
  1105 label *label640
  1106 label *label641
  1107 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1108 write @copper .display ".item2"
  1109 write "core" .display ".block2"
  1110 label *label642
-    * set :mineOre:ore :mineOre.1:ore
+ 1111 set :mineOre:ore @copper
  1112 set :mineOre:amount 30
  1113 set :mineOre:block .core
  1114 setaddr :mineOre*retaddr *label643 (h:*label643)

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label43
    20 jump *label42 equal .core null
-    * label *label44
    21 set :buildBlockFromCfg.1:cfg "#'+nA######%#"
    22 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    23 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
 
    69 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    70 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    71 jump *label54 notEqual :buildFirstTitaniumDrill:result false
-    * label *label488
    72 set .ERROR "Cannot locate spot for titanium drill"
    73 stop
-    * label *label489
    74 label *label54
-    * label *label55
    75 write @pneumatic-drill processor1 ".nextBlock"
    76 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    77 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    82 read *tmp152 processor5 ":buildFirstTitaniumDrillAt*finished"
    83 jump *label57 equal *tmp152 false
    84 read *tmp135 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label51
    85 set .titaniumDrill *tmp135
    86 write *tmp135 processor1 ".titaniumDrill"
    87 set :buildBlockFromCfg.1:cfg "*,###A<###$*"
 
   130 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   131 write 1 .controller ".flareTarget"
   132 write 1 processor1 ".flareTarget"
-    * label *label65
   133 write 3 .controller ".monoTarget"
   134 write 3 processor1 ".monoTarget"
-    * label *label66
   135 write 85 .controller ".pressTarget"
   136 write 150 .controller ".smelterTarget"
   137 write 30 .controller ".kilnTarget"
 
   148 jump *label72 greaterThanEq *tmp161 300
   149 jump *label70 always
   150 label *label72
-    * label *label73
-    * label *label69
   151 read *tmp99 .controller ".monos"
   152 jump *label68 lessThan *tmp99 3
   153 label *label70
 
   219 set .metaglassSurplus 200
   220 write 6 .controller ".polyTarget"
   221 write 6 processor1 ".polyTarget"
-    * label *label88
   222 set :buildBlockFromCfg.1:cfg "%.)A<######%C"
   223 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
   224 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label89) (h:*label89)
 
   240 setaddr :buildUnits*retaddr *label93 (h:*label93)
   241 call *label39 *invalid :buildUnits*retval (m:*label93) (h:*label93)
   242 label *label93
-    * label *label94
   243 read *tmp100 .controller ".polys"
   244 jump *label96 greaterThanEq *tmp100 3
   245 label *label626
   246 setaddr :supplyBase*retaddr *label97 (h:*label97)
   247 call *label32 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   248 label *label97
-    * label *label95
   249 read *tmp100 .controller ".polys"
   250 jump *label626 lessThan *tmp100 3
   251 label *label96
   252 write 3 .controller ".flareTarget"
   253 write 3 processor1 ".flareTarget"
-    * label *label98
-    * label *label99
   254 read *tmp98 .controller ".flares"
   255 jump *label101 greaterThanEq *tmp98 2
   256 label *label627
   257 setaddr :supplyBase*retaddr *label102 (h:*label102)
   258 call *label32 *invalid :supplyBase*retval (m:*label102) (h:*label102)
   259 label *label102
-    * label *label100
   260 read *tmp98 .controller ".flares"
   261 jump *label627 lessThan *tmp98 2
   262 label *label101
   263 set .graphiteSurplus 100
   264 write 5 .controller ".monoTarget"
   265 write 5 processor1 ".monoTarget"
-    * label *label103
   266 write @ore-titanium processor1 ".nextBlock"
   267 wait 0.000000001
   268 ubind @flare
 
   287 jump *label105 equal *tmp196 false
   288 write false processor4 ":stopLocation*finished"
   289 write 3 processor4 "@counter"
-    * label *label104
   290 write null processor1 ".nextBlock"
   291 write .coreX processor4 ":layoutThoriumDrill:x"
   292 write .coreY processor4 ":layoutThoriumDrill:y"
 
   308 jump *label109 equal *tmp203 false
   309 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   310 jump *label110 notEqual :buildThoriumDrill:result false
-    * label *label490
   311 set .ERROR "Cannot locate spot for thorium drill"
   312 stop
-    * label *label491
   313 label *label110
-    * label *label111
   314 write @laser-drill processor5 ":buildBlockAt:block"
   315 read *tmp56 processor4 ".drillX"
   316 write *tmp56 processor5 ":buildBlockAt:x"
 
   372 jump *label121 notEqual :buildRemoteBlock*retval null
   373 set .thoriumContainer .thoriumDrill
   374 label *label121
-    * label *label122
   375 write .thoriumDrill processor1 ".thoriumDrill"
   376 write .thoriumContainer processor1 ".thoriumContainer"
   377 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   381 wait 1e-15
   382 read *tmp225 processor3 ":setThoriumContainer*finished"
   383 jump *label123 equal *tmp225 false
-    * label *label106
   384 write null processor1 ".nextBlock"
   385 write 1 .controller ".megaTarget"
   386 write 1 processor1 ".megaTarget"
-    * label *label124
-    * label *label125
   387 read *tmp100 .controller ".polys"
   388 jump *label127 greaterThanEq *tmp100 5
   389 label *label628
   390 setaddr :supplyBase*retaddr *label128 (h:*label128)
   391 call *label32 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   392 label *label128
-    * label *label126
   393 read *tmp100 .controller ".polys"
   394 jump *label628 lessThan *tmp100 5
   395 label *label127
 
   409 label *label132
   410 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   411 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
-    * label *label131
   412 set .metaglassSurplus 50
   413 setaddr :buildUnits*retaddr *label133 (h:*label133)
   414 call *label39 *invalid :buildUnits*retval (m:*label133) (h:*label133)
   415 label *label133
-    * label *label134
   416 read *tmp101 .controller ".megas"
   417 jump *label136 greaterThanEq *tmp101 1
   418 label *label629
   419 setaddr :supplyBase*retaddr *label137 (h:*label137)
   420 call *label32 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   421 label *label137
-    * label *label135
   422 read *tmp101 .controller ".megas"
   423 jump *label629 lessThan *tmp101 1
   424 label *label136
 
   464 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   465 call *label41 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   466 label *label149
-    * label *label144
   467 jump *label143 always
-    * label *label145
-    * label *label138
   468 end
   469 label *label21
   470 op min :mineOre:amount :mineOre:amount 30
-    * label *label474
   471 write :mineOre:amount .display ".transportTarget"
   472 write :mineOre:ore .display ".transportItem"
-    * label *label475
-    * label *label452
   473 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
   474 jump *label454 notEqual *tmp263 false
-    * label *label492
   475 set .ERROR "Cannot locate ore"
   476 stop
-    * label *label493
   477 label *label454
-    * label *label455
-    * label *label456
-    * label *label494
-    * label *label495
   478 write "Moving..." .display ".status3"
-    * label *label496
   479 label *label497
   480 sensor *tmp244 @unit @firstItem
   481 jump *label498 equal *tmp244 null
   482 ucontrol itemDrop @air 1000
   483 label *label498
-    * label *label499
   484 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label500
   485 ucontrol within :locateOre:x :locateOre:y 6 *tmp247
   486 jump *label497 equal *tmp247 false
-    * label *label501
-    * label *label502
   487 sensor *tmp268 @unit @firstItem
   488 jump *label195 equal *tmp268 :mineOre:ore
-    * label *label521
-    * label *label522
   489 sensor *tmp249 @unit @firstItem
   490 jump *label525 equal *tmp249 null
   491 label *label523
   492 ucontrol itemDrop @air 1000
-    * label *label524
   493 sensor *tmp249 @unit @firstItem
   494 jump *label523 notEqual *tmp249 null
   495 label *label525
-    * label *label526
   496 label *label195
-    * label *label196
-    * label *label434
   497 write "Mining..." .display ".status3"
-    * label *label435
   498 op add :mineOre:stop @second 10
   499 label *label199
   500 sensor :mineOre:item @unit @firstItem
 
   504 jump *label202 equal *tmp275 false
   505 jump *label201 always
   506 label *label202
-    * label *label203
   507 ucontrol mine :locateOre:x :locateOre:y
   508 jump *label204 lessThanEq @second :mineOre:stop
   509 jump *label201 always
   510 label *label204
-    * label *label205
-    * label *label200
   511 sensor *tmp279 @unit @totalItems
   512 jump *label199 lessThan *tmp279 :mineOre:amount
   513 label *label201
   514 ucontrol unbind
-    * label *label544
-    * label *label545
   515 write "Depositing..." .display ".status3"
-    * label *label546
   516 sensor *tmp253 @unit @firstItem
   517 jump *label560 notEqual *tmp253 :mineOre:ore
-    * label *label547
   518 sensor *tmp251 :mineOre:block @x
   519 sensor *tmp252 :mineOre:block @y
-    * label *label548
-    * label *label549
   520 write "Moving..." .display ".status3"
-    * label *label550
-    * label *label551
   521 ucontrol within *tmp251 *tmp252 6 *tmp239
   522 jump *label554 notEqual *tmp239 false
   523 label *label552
   524 ucontrol approach *tmp251 *tmp252 5.5
-    * label *label553
   525 ucontrol within *tmp251 *tmp252 6 *tmp239
   526 jump *label552 equal *tmp239 false
   527 label *label554
-    * label *label555
-    * label *label556
   528 sensor :depositItems:cap :mineOre:block @itemCapacity
   529 label *label557
   530 ucontrol itemDrop :mineOre:block 30
-    * label *label558
   531 sensor *tmp257 @unit @firstItem
   532 op mul *tmp258 *tmp257 :depositItems:cap
   533 sensor *tmp259 :mineOre:block :mineOre:ore
   534 jump *label557 greaterThan *tmp258 *tmp259
-    * label *label559
   535 jump *label565 always
   536 label *label560
-    * label *label561
   537 sensor *tmp261 @unit @firstItem
   538 jump *label564 equal *tmp261 null
   539 label *label562
   540 ucontrol itemDrop @air 1000
-    * label *label563
   541 sensor *tmp261 @unit @firstItem
   542 jump *label562 notEqual *tmp261 null
   543 label *label564
   544 label *label565
-    * label *label566
   545 write 0 .display ".transportTarget"
   546 write null .display ".transportItem"
-    * label *label567
-    * label *label568
-    * label *label191
   547 return :mineOre*retaddr
   548 end
   549 label *label22
-    * label *label482
   550 write "Mining " .display ".status2"
   551 write :mineOre.1:ore .display ".item2"
   552 write "core" .display ".block2"
-    * label *label483
   553 set :mineOre:ore :mineOre.1:ore
   554 set :mineOre:amount 30
   555 set :mineOre:block .core
   556 setaddr :mineOre*retaddr *label209 (h:*label209)
   557 call *label21 *invalid :mineOre*retval (m:*label209) (h:*label209)
   558 label *label209
-    * label *label207
   559 return :mineOre.1*retaddr
   560 end
   561 label *label23
   562 sensor *tmp282 :fetchBlock:block @itemCapacity
   563 op min :transportStatus:target *tmp282 30
-    * label *label476
   564 write :transportStatus:target .display ".transportTarget"
   565 write :fetchBlock:item .display ".transportItem"
-    * label *label477
-    * label *label480
   566 write "Fetching " .display ".status2"
   567 write :fetchBlock:item .display ".item2"
   568 write :fetchBlock:block .display ".block2"
-    * label *label481
   569 sensor *tmp284 :fetchBlock:block @x
   570 sensor *tmp285 :fetchBlock:block @y
-    * label *label503
-    * label *label504
   571 write "Moving..." .display ".status3"
-    * label *label505
   572 label *label506
   573 sensor *tmp244 @unit @firstItem
   574 jump *label507 equal *tmp244 null
   575 ucontrol itemDrop @air 1000
   576 label *label507
-    * label *label508
   577 ucontrol approach *tmp284 *tmp285 5.5
-    * label *label509
   578 ucontrol within *tmp284 *tmp285 6 *tmp247
   579 jump *label506 equal *tmp247 false
-    * label *label510
-    * label *label511
-    * label *label527
-    * label *label528
   580 sensor *tmp249 @unit @firstItem
   581 jump *label531 equal *tmp249 null
   582 label *label529
   583 ucontrol itemDrop @air 1000
-    * label *label530
   584 sensor *tmp249 @unit @firstItem
   585 jump *label529 notEqual *tmp249 null
   586 label *label531
-    * label *label532
   587 label *label215
   588 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   589 sensor :fetchBlock:unitItem @unit @firstItem
 
   593 jump *label218 equal *tmp289 false
   594 ucontrol itemDrop @air 1000
   595 label *label218
-    * label *label219
-    * label *label216
   596 sensor *tmp291 @unit :fetchBlock:item
   597 op lessThan *tmp292 *tmp291 30
   598 sensor *tmp293 :fetchBlock:block :fetchBlock:item
   599 op land *tmp294 *tmp292 *tmp293
   600 jump *label215 notEqual *tmp294 false
-    * label *label217
-    * label *label569
-    * label *label570
   601 write "Depositing..." .display ".status3"
-    * label *label571
   602 sensor *tmp253 @unit @firstItem
   603 jump *label585 notEqual *tmp253 :fetchBlock:item
-    * label *label572
   604 sensor *tmp251 .core @x
   605 sensor *tmp252 .core @y
-    * label *label573
-    * label *label574
   606 write "Moving..." .display ".status3"
-    * label *label575
-    * label *label576
   607 ucontrol within *tmp251 *tmp252 6 *tmp239
   608 jump *label579 notEqual *tmp239 false
   609 label *label577
   610 ucontrol approach *tmp251 *tmp252 5.5
-    * label *label578
   611 ucontrol within *tmp251 *tmp252 6 *tmp239
   612 jump *label577 equal *tmp239 false
   613 label *label579
-    * label *label580
-    * label *label581
   614 sensor :depositItems:cap .core @itemCapacity
   615 label *label582
   616 ucontrol itemDrop .core 30
-    * label *label583
   617 sensor *tmp257 @unit @firstItem
   618 op mul *tmp258 *tmp257 :depositItems:cap
   619 sensor *tmp259 .core :fetchBlock:item
   620 jump *label582 greaterThan *tmp258 *tmp259
-    * label *label584
   621 jump *label590 always
   622 label *label585
-    * label *label586
   623 sensor *tmp261 @unit @firstItem
   624 jump *label589 equal *tmp261 null
   625 label *label587
   626 ucontrol itemDrop @air 1000
-    * label *label588
   627 sensor *tmp261 @unit @firstItem
   628 jump *label587 notEqual *tmp261 null
   629 label *label589
   630 label *label590
-    * label *label591
   631 write 0 .display ".transportTarget"
   632 write null .display ".transportItem"
-    * label *label592
-    * label *label593
-    * label *label210
   633 return :fetchBlock*retaddr
   634 end
   635 label *label24
-    * label *label484
   636 write "Supplying " .display ".status2"
   637 write :supplyBlock:ore .display ".item2"
   638 write :supplyBlock:block .display ".block2"
-    * label *label485
   639 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   640 sensor *tmp296 :supplyBlock:block :supplyBlock:ore
   641 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
 
   647 call *label21 *invalid :mineOre*retval (m:*label225) (h:*label225)
   648 label *label225
   649 label *label223
-    * label *label224
-    * label *label221
   650 return :supplyBlock*retaddr
   651 end
   652 label *label31
 
   675 op sub :unpackCfg:rotation *tmp345 35
   676 read *tmp351 :unpackCfg:cfg 12
   677 op sub :unpackCfg:ind *tmp351 35
-    * label *label237
   678 return :unpackCfg*retaddr
   679 end
   680 label *label32
 
   683 op max *tmp355 0 *tmp354
   684 write *tmp355 processor8 ".monoSandTarget"
   685 jump *label239 equal .thoriumContainer false
-    * label *label402
   686 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label403
   687 sensor *tmp357 .core @coal
   688 jump *label243 greaterThanEq *tmp357 50
   689 set :supplyBlock:block .thoriumGenerator
   690 set :supplyBlock:ore @coal
-    * label *label619
-    * label *label620
   691 write "Supplying " .display ".status2"
   692 write @coal .display ".item2"
   693 write .thoriumGenerator .display ".block2"
-    * label *label621
   694 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   695 sensor *tmp296 .thoriumGenerator @coal
   696 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
 
   702 call *label21 *invalid :mineOre*retval (m:*label622) (h:*label622)
   703 label *label622
   704 label *label623
-    * label *label624
-    * label *label625
   705 jump *label244 always
   706 label *label243
-    * label *label457
   707 sensor *tmp300 .thoriumGenerator @itemCapacity
   708 op min :transportStatus:target *tmp300 30
-    * label *label478
   709 write :transportStatus:target .display ".transportTarget"
   710 write @coal .display ".transportItem"
-    * label *label479
-    * label *label486
   711 write "Transferring " .display ".status2"
   712 write @coal .display ".item2"
   713 write .thoriumGenerator .display ".block2"
-    * label *label487
-    * label *label512
-    * label *label513
   714 write "Moving..." .display ".status3"
-    * label *label514
   715 label *label515
   716 sensor *tmp244 @unit @firstItem
   717 jump *label516 equal *tmp244 null
   718 ucontrol itemDrop @air 1000
   719 label *label516
-    * label *label517
   720 ucontrol approach .coreX .coreY 5.5
-    * label *label518
   721 ucontrol within .coreX .coreY 6 *tmp247
   722 jump *label515 equal *tmp247 false
-    * label *label519
-    * label *label520
-    * label *label533
-    * label *label534
   723 sensor *tmp249 @unit @firstItem
   724 jump *label537 equal *tmp249 null
   725 label *label535
   726 ucontrol itemDrop @air 1000
-    * label *label536
   727 sensor *tmp249 @unit @firstItem
   728 jump *label535 notEqual *tmp249 null
   729 label *label537
-    * label *label538
   730 label *label462
   731 ucontrol itemTake .core @coal 30
   732 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   736 jump *label463 equal *tmp305 false
   737 ucontrol itemDrop @air 1000
   738 label *label463
-    * label *label464
-    * label *label465
   739 sensor *tmp307 @unit @coal
   740 op lessThan *tmp308 *tmp307 30
   741 sensor *tmp309 .core @coal
   742 op land *tmp310 *tmp308 *tmp309
   743 jump *label462 notEqual *tmp310 false
-    * label *label466
-    * label *label594
-    * label *label595
   744 write "Depositing..." .display ".status3"
-    * label *label596
   745 sensor *tmp253 @unit @firstItem
   746 jump *label610 notEqual *tmp253 @coal
-    * label *label597
   747 sensor *tmp251 .thoriumGenerator @x
   748 sensor *tmp252 .thoriumGenerator @y
-    * label *label598
-    * label *label599
   749 write "Moving..." .display ".status3"
-    * label *label600
-    * label *label601
   750 ucontrol within *tmp251 *tmp252 6 *tmp239
   751 jump *label604 notEqual *tmp239 false
   752 label *label602
   753 ucontrol approach *tmp251 *tmp252 5.5
-    * label *label603
   754 ucontrol within *tmp251 *tmp252 6 *tmp239
   755 jump *label602 equal *tmp239 false
   756 label *label604
-    * label *label605
-    * label *label606
   757 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   758 label *label607
   759 ucontrol itemDrop .thoriumGenerator 30
-    * label *label608
   760 sensor *tmp257 @unit @firstItem
   761 op mul *tmp258 *tmp257 :depositItems:cap
   762 sensor *tmp259 .thoriumGenerator @coal
   763 jump *label607 greaterThan *tmp258 *tmp259
-    * label *label609
   764 jump *label615 always
   765 label *label610
-    * label *label611
   766 sensor *tmp261 @unit @firstItem
   767 jump *label614 equal *tmp261 null
   768 label *label612
   769 ucontrol itemDrop @air 1000
-    * label *label613
   770 sensor *tmp261 @unit @firstItem
   771 jump *label612 notEqual *tmp261 null
   772 label *label614
   773 label *label615
-    * label *label616
   774 write 0 .display ".transportTarget"
   775 write null .display ".transportItem"
-    * label *label617
-    * label *label618
-    * label *label468
   776 label *label244
   777 set :fetchBlock:block .thoriumContainer
   778 set :fetchBlock:item @thorium
   779 setaddr :fetchBlock*retaddr *label247 (h:*label247)
   780 call *label23 *invalid :fetchBlock*retval (m:*label247) (h:*label247)
   781 label *label247
-    * label *label241
   782 jump *label240 always
   783 label *label239
   784 read *tmp99 .controller ".monos"
   785 jump *label248 lessThanEq *tmp99 3
-    * label *label404
   786 write "Phase 1: supplying base" .display ".status1"
-    * label *label405
   787 set :mineOre.1:ore @coal
-    * label *label539
-    * label *label540
   788 write "Mining " .display ".status2"
   789 write @coal .display ".item2"
   790 write "core" .display ".block2"
-    * label *label541
   791 set :mineOre:ore @coal
   792 set :mineOre:amount 30
   793 set :mineOre:block .core
   794 setaddr :mineOre*retaddr *label542 (h:*label542)
   795 call *label21 *invalid :mineOre*retval (m:*label542) (h:*label542)
   796 label *label542
-    * label *label543
-    * label *label250
   797 jump *label249 always
   798 label *label248
   799 set :supplyBase0:supplied false
 
   802 jump *label256 greaterThanEq *tmp364 .targetGraphite
   803 sensor *tmp367 .press @coal
   804 jump *label258 greaterThanEq *tmp367 5
-    * label *label406
   805 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label407
   806 set :supplyBlock:block .press
   807 set :supplyBlock:ore @coal
   808 setaddr :supplyBlock*retaddr *label261 (h:*label261)
 
   810 label *label261
   811 set :supplyBase0:supplied true
   812 label *label258
-    * label *label259
   813 label *label256
-    * label *label257
   814 sensor *tmp370 .core @silicon
   815 jump *label262 greaterThanEq *tmp370 .targetSilicon
   816 sensor *tmp373 .smelter @coal
   817 jump *label264 greaterThanEq *tmp373 5
-    * label *label408
   818 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label409
   819 set :supplyBlock:block .smelter
   820 set :supplyBlock:ore @coal
   821 setaddr :supplyBlock*retaddr *label267 (h:*label267)
 
   826 label *label264
   827 sensor *tmp376 .smelter @sand
   828 jump *label268 greaterThanEq *tmp376 5
-    * label *label410
   829 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label411
   830 set :supplyBlock:block .smelter
   831 set :supplyBlock:ore @sand
   832 setaddr :supplyBlock*retaddr *label271 (h:*label271)
 
   834 label *label271
   835 set :supplyBase0:supplied true
   836 label *label268
-    * label *label269
   837 label *label265
   838 label *label262
-    * label *label263
   839 sensor *tmp379 .battery @totalPower
   840 jump *label272 greaterThanEq *tmp379 .powerTarget
   841 sensor *tmp382 .generator @coal
   842 jump *label274 greaterThanEq *tmp382 2
-    * label *label412
   843 write "Goal 4: supplying generator" .display ".status1"
-    * label *label413
   844 set :supplyBlock:block .generator
   845 set :supplyBlock:ore @coal
   846 setaddr :supplyBlock*retaddr *label277 (h:*label277)
 
   848 label *label277
   849 set :supplyBase0:supplied true
   850 label *label274
-    * label *label275
   851 label *label272
-    * label *label273
   852 label *label254
-    * label *label255
   853 set *tmp387 100
   854 sensor *tmp385 .core @titanium
   855 jump *label279 greaterThanEq *tmp385 .targetTitanium
 
   863 sensor *tmp396 .battery @totalPower
   864 op mul *tmp397 .unloader1 .powerTarget
   865 jump *label284 greaterThanEq *tmp396 *tmp397
-    * label *label414
   866 write "Goal 5: supplying generator" .display ".status1"
-    * label *label415
   867 set :mineOre.1:ore @coal
-    * label *label630
-    * label *label631
   868 write "Mining " .display ".status2"
   869 write @coal .display ".item2"
   870 write "core" .display ".block2"
-    * label *label632
   871 set :mineOre:ore @coal
   872 set :mineOre:amount 30
   873 set :mineOre:block .core
   874 setaddr :mineOre*retaddr *label633 (h:*label633)
   875 call *label21 *invalid :mineOre*retval (m:*label633) (h:*label633)
   876 label *label633
-    * label *label634
   877 jump *label285 always
   878 label *label284
   879 sensor *tmp400 .core @silicon
   880 jump *label288 greaterThanEq *tmp400 .targetSilicon
-    * label *label416
   881 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label417
   882 sensor :supplyBase0:coal .core @coal
   883 sensor :supplyBase0:sand .core @sand
   884 set :mineOre.1:ore @sand
   885 jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   886 set :mineOre.1:ore @coal
   887 label *label292
-    * label *label635
-    * label *label636
   888 write "Mining " .display ".status2"
   889 write :mineOre.1:ore .display ".item2"
   890 write "core" .display ".block2"
-    * label *label637
   891 set :mineOre:ore :mineOre.1:ore
   892 set :mineOre:amount 30
   893 set :mineOre:block .core
   894 setaddr :mineOre*retaddr *label638 (h:*label638)
   895 call *label21 *invalid :mineOre*retval (m:*label638) (h:*label638)
   896 label *label638
-    * label *label639
   897 jump *label289 always
   898 label *label288
   899 sensor *tmp407 .core @copper
   900 jump *label294 greaterThanEq *tmp407 .targetCopper
-    * label *label418
   901 write "Goal 7: copper requirement" .display ".status1"
-    * label *label419
   902 set :mineOre.1:ore @copper
-    * label *label640
-    * label *label641
   903 write "Mining " .display ".status2"
   904 write @copper .display ".item2"
   905 write "core" .display ".block2"
-    * label *label642
   906 set :mineOre:ore @copper
   907 set :mineOre:amount 30
   908 set :mineOre:block .core
   909 setaddr :mineOre*retaddr *label643 (h:*label643)
   910 call *label21 *invalid :mineOre*retval (m:*label643) (h:*label643)
   911 label *label643
-    * label *label644
   912 jump *label295 always
   913 label *label294
   914 sensor *tmp410 .core @lead
   915 jump *label298 greaterThanEq *tmp410 .targetLead
-    * label *label420
   916 write "Goal 8: lead requirement" .display ".status1"
-    * label *label421
   917 set :mineOre.1:ore @lead
   918 setaddr :mineOre.1*retaddr *label301 (h:*label301)
   919 call *label22 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
 
   922 label *label298
   923 sensor *tmp413 .core @metaglass
   924 jump *label302 greaterThanEq *tmp413 .targetMetaglass
-    * label *label422
   925 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label423
   926 set :mineOre.1:ore @sand
   927 setaddr :mineOre.1*retaddr *label305 (h:*label305)
   928 call *label22 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
   929 label *label305
   930 jump *label303 always
   931 label *label302
-    * label *label424
   932 write "Goal 10: supplying base" .display ".status1"
-    * label *label425
   933 sensor :supplyBase0:coal.1 .core @coal
   934 sensor :supplyBase0:sand.1 .core @sand
   935 set :mineOre.1:ore @sand
 
   945 label *label289
   946 label *label285
   947 label *label282
-    * label *label283
   948 jump *label281 always
   949 label *label280
-    * label *label426
   950 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label427
   951 set :fetchBlock:block .titaniumDrill
   952 set :fetchBlock:item @titanium
   953 setaddr :fetchBlock*retaddr *label311 (h:*label311)
   954 call *label23 *invalid :fetchBlock*retval (m:*label311) (h:*label311)
   955 label *label311
   956 label *label281
-    * label *label253
   957 label *label249
   958 label *label240
-    * label *label238
   959 return :supplyBase*retaddr
   960 end
   961 label *label33
-    * label *label373
   962 op sign :meetTarget:count :meetTarget:copper
-    * label *label374
-    * label *label377
   963 op sign *tmp421 :meetTarget:lead
   964 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label378
-    * label *label381
   965 op sign *tmp421 :meetTarget:graphite
   966 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label382
-    * label *label385
   967 op sign *tmp421 :meetTarget:silicon
   968 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label386
-    * label *label389
   969 op sign *tmp421 :meetTarget:titanium
   970 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label390
-    * label *label393
   971 op sign *tmp421 :meetTarget:metaglass
   972 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label394
-    * label *label397
   973 op sign *tmp421 :meetTarget:thorium
   974 op add :meetTarget:count :meetTarget:count *tmp421
-    * label *label398
-    * label *label315
   975 write :meetTarget:count .display ".totalTargets"
   976 write :meetTarget:block .display ".nextBlock"
   977 write :meetTarget:copper .display ".targetCopper"
 
  1012 set *tmp434 false
  1013 jump *label326 always
  1014 label *label327
-    * label *label328
  1015 sensor *tmp438 .core @lead
  1016 jump *label329 greaterThanEq *tmp438 .targetLead
  1017 set *tmp434 false
  1018 jump *label326 always
  1019 label *label329
-    * label *label330
  1020 sensor *tmp441 .core @graphite
  1021 jump *label331 greaterThanEq *tmp441 .targetGraphite
  1022 set *tmp434 false
  1023 jump *label326 always
  1024 label *label331
-    * label *label332
  1025 sensor *tmp444 .core @silicon
  1026 jump *label333 greaterThanEq *tmp444 .targetSilicon
  1027 set *tmp434 false
  1028 jump *label326 always
  1029 label *label333
-    * label *label334
  1030 sensor *tmp447 .core @titanium
  1031 jump *label335 greaterThanEq *tmp447 .targetTitanium
  1032 set *tmp434 false
  1033 jump *label326 always
  1034 label *label335
-    * label *label336
  1035 sensor *tmp450 .core @metaglass
  1036 jump *label337 greaterThanEq *tmp450 .targetMetaglass
  1037 set *tmp434 false
  1038 jump *label326 always
  1039 label *label337
-    * label *label338
  1040 sensor *tmp453 .core @thorium
  1041 jump *label339 greaterThanEq *tmp453 .targetThorium
  1042 set *tmp434 false
  1043 jump *label326 always
  1044 label *label339
-    * label *label340
  1045 set *tmp434 true
  1046 jump *label326 always
  1047 label *label326
 
  1049 setaddr :supplyBase*retaddr *label341 (h:*label341)
  1050 call *label32 *invalid :supplyBase*retval (m:*label341) (h:*label341)
  1051 label *label341
-    * label *label324
  1052 jump *label323 always
  1053 label *label325
-    * label *label312
  1054 return :meetTarget*retaddr
  1055 end
  1056 label *label34
 
  1078 read *tmp463 .blockBuilder ":buildBlockAt*finished"
  1079 jump *label344 equal *tmp463 false
  1080 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label342
  1081 return :buildBlock*retaddr
  1082 end
  1083 label *label35
 
  1106 set :buildRemoteBlock*retval :buildBlock*retval
  1107 jump *label345 always
  1108 label *label346
-    * label *label347
  1109 set :buildRemoteBlock*retval false
  1110 jump *label345 always
  1111 label *label345
 
  1135 call *label34 *invalid :buildBlock*retval (m:*label352) (h:*label352)
  1136 label *label352
  1137 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label350
  1138 return :buildBlockFromCfg*retaddr
  1139 end
  1140 label *label37
 
  1144 call *label36 *invalid :buildBlockFromCfg*retval (m:*label354) (h:*label354)
  1145 label *label354
  1146 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label353
  1147 return :buildBlockFromCfg.1*retaddr
  1148 end
  1149 label *label38
 
  1162 setaddr :meetTarget*retaddr *label357 (h:*label357)
  1163 call *label33 *invalid :meetTarget*retval (m:*label357) (h:*label357)
  1164 label *label357
-    * label *label355
  1165 return :meetTarget.1*retaddr
  1166 end
  1167 label *label39
 
  1181 write 0 .controller ".leadReserve"
  1182 write 0 .controller ".siliconReserve"
  1183 write 0 .controller ".graphiteReserve"
-    * label *label358
  1184 return :buildUnits*retaddr
  1185 end
  1186 label *label40
  1187 label *label361
  1188 ubind :flagUnits:unit
  1189 set :flagUnits:firstUnit @unit
-    * label *label362
  1190 jump *label361 equal :flagUnits:firstUnit null
-    * label *label363
  1191 set :flagUnits:x @thisx
  1192 label *label364
  1193 ucontrol flag :flagUnits:x
  1194 op add :flagUnits:x :flagUnits:x 4
  1195 ubind :flagUnits:unit
-    * label *label365
  1196 jump *label364 notEqual @unit :flagUnits:firstUnit
-    * label *label366
-    * label *label360
  1197 return :flagUnits*retaddr
  1198 end
  1199 label *label41
 
  1207 jump *label371 equal *tmp475 false
  1208 ucontrol stop
  1209 label *label371
-    * label *label372
  1210 ubind :lineUpUnits:unit
-    * label *label369
  1211 jump *label368 notEqual @unit :lineUpUnits:firstUnit
-    * label *label370
-    * label *label367
  1212 return :lineUpUnits*retaddr
  1213 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   145 call *label32 *invalid :supplyBase*retval (m:*label71) (h:*label71)
   146 label *label71
   147 sensor *tmp161 .battery @totalPower
-    * jump *label72 greaterThanEq *tmp161 300
-    * jump *label70 always
+  148 jump *label70 lessThan *tmp161 300
   149 label *label72
   150 read *tmp99 .controller ".monos"
   151 jump *label68 lessThan *tmp99 3
 
   500 op notEqual *tmp273 :mineOre:item null
   501 op notEqual *tmp274 :mineOre:item :mineOre:ore
   502 op land *tmp275 *tmp273 *tmp274
-    * jump *label202 equal *tmp275 false
-    * jump *label201 always
+  503 jump *label201 notEqual *tmp275 false
   504 label *label202
   505 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label204 lessThanEq @second :mineOre:stop
-    * jump *label201 always
+  506 jump *label201 greaterThan @second :mineOre:stop
   507 label *label204
   508 sensor *tmp279 @unit @totalItems
   509 jump *label199 lessThan *tmp279 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   146 label *label71
   147 sensor *tmp161 .battery @totalPower
   148 jump *label70 lessThan *tmp161 300
-    * label *label72
   149 read *tmp99 .controller ".monos"
   150 jump *label68 lessThan *tmp99 3
   151 label *label70
 
   500 op notEqual *tmp274 :mineOre:item :mineOre:ore
   501 op land *tmp275 *tmp273 *tmp274
   502 jump *label201 notEqual *tmp275 false
-    * label *label202
   503 ucontrol mine :locateOre:x :locateOre:y
   504 jump *label201 greaterThan @second :mineOre:stop
-    * label *label204
   505 sensor *tmp279 @unit @totalItems
   506 jump *label199 lessThan *tmp279 :mineOre:amount
   507 label *label201

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   688 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   689 sensor *tmp296 .thoriumGenerator @coal
   690 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
-    * jump *label623 lessThanEq :supplyBlock:missing 0
+  691 jump *label244 lessThanEq :supplyBlock:missing 0
   692 set :mineOre:ore @coal
   693 set :mineOre:amount :supplyBlock:blockCapacity
   694 set :mineOre:block .thoriumGenerator
 
   773 setaddr :fetchBlock*retaddr *label247 (h:*label247)
   774 call *label23 *invalid :fetchBlock*retval (m:*label247) (h:*label247)
   775 label *label247
-    * jump *label240 always
+  776 return :supplyBase*retaddr
   777 label *label239
   778 read *tmp99 .controller ".monos"
   779 jump *label248 lessThanEq *tmp99 3
 
   788 setaddr :mineOre*retaddr *label542 (h:*label542)
   789 call *label21 *invalid :mineOre*retval (m:*label542) (h:*label542)
   790 label *label542
-    * jump *label249 always
+  791 return :supplyBase*retaddr
   792 label *label248
   793 set :supplyBase0:supplied false
   794 jump *label254 notEqual .unloader1 null
 
   853 label *label279
   854 sensor *tmp391 .titaniumDrill @titanium
   855 jump *label280 greaterThanEq *tmp391 *tmp387
-    * jump *label282 notEqual :supplyBase0:supplied false
+  856 jump *label281 notEqual :supplyBase0:supplied false
   857 sensor *tmp396 .battery @totalPower
   858 op mul *tmp397 .unloader1 .powerTarget
   859 jump *label284 greaterThanEq *tmp396 *tmp397
 
   868 setaddr :mineOre*retaddr *label633 (h:*label633)
   869 call *label21 *invalid :mineOre*retval (m:*label633) (h:*label633)
   870 label *label633
-    * jump *label285 always
+  871 return :supplyBase*retaddr
   872 label *label284
   873 sensor *tmp400 .core @silicon
   874 jump *label288 greaterThanEq *tmp400 .targetSilicon
 
   888 setaddr :mineOre*retaddr *label638 (h:*label638)
   889 call *label21 *invalid :mineOre*retval (m:*label638) (h:*label638)
   890 label *label638
-    * jump *label289 always
+  891 return :supplyBase*retaddr
   892 label *label288
   893 sensor *tmp407 .core @copper
   894 jump *label294 greaterThanEq *tmp407 .targetCopper
 
   903 setaddr :mineOre*retaddr *label643 (h:*label643)
   904 call *label21 *invalid :mineOre*retval (m:*label643) (h:*label643)
   905 label *label643
-    * jump *label295 always
+  906 return :supplyBase*retaddr
   907 label *label294
   908 sensor *tmp410 .core @lead
   909 jump *label298 greaterThanEq *tmp410 .targetLead
 
   912 setaddr :mineOre.1*retaddr *label301 (h:*label301)
   913 call *label22 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
   914 label *label301
-    * jump *label299 always
+  915 return :supplyBase*retaddr
   916 label *label298
   917 sensor *tmp413 .core @metaglass
   918 jump *label302 greaterThanEq *tmp413 .targetMetaglass
 
   921 setaddr :mineOre.1*retaddr *label305 (h:*label305)
   922 call *label22 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
   923 label *label305
-    * jump *label303 always
+  924 return :supplyBase*retaddr
   925 label *label302
   926 write "Goal 10: supplying base" .display ".status1"
   927 sensor :supplyBase0:coal.1 .core @coal
 
   939 label *label289
   940 label *label285
   941 label *label282
-    * jump *label281 always
+  942 return :supplyBase*retaddr
   943 label *label280
   944 write "Goal 11: Fetching titanium" .display ".status1"
   945 set :fetchBlock:block .titaniumDrill
 
  1098 call *label34 *invalid :buildBlock*retval (m:*label349) (h:*label349)
  1099 label *label349
  1100 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label345 always
+ 1101 return :buildRemoteBlock*retaddr
  1102 label *label346
  1103 set :buildRemoteBlock*retval false
-    * jump *label345 always
+ 1104 return :buildRemoteBlock*retaddr
  1105 label *label345
  1106 return :buildRemoteBlock*retaddr
  1107 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-17 instructions):
 
   463 call *label41 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   464 label *label149
   465 jump *label143 always
-    * end
   466 label *label21
   467 op min :mineOre:amount :mineOre:amount 30
   468 write :mineOre:amount .display ".transportTarget"
 
   538 write 0 .display ".transportTarget"
   539 write null .display ".transportItem"
   540 return :mineOre*retaddr
-    * end
   541 label *label22
   542 write "Mining " .display ".status2"
   543 write :mineOre.1:ore .display ".item2"
 
   549 call *label21 *invalid :mineOre*retval (m:*label209) (h:*label209)
   550 label *label209
   551 return :mineOre.1*retaddr
-    * end
   552 label *label23
   553 sensor *tmp282 :fetchBlock:block @itemCapacity
   554 op min :transportStatus:target *tmp282 30
 
   622 write 0 .display ".transportTarget"
   623 write null .display ".transportItem"
   624 return :fetchBlock*retaddr
-    * end
   625 label *label24
   626 write "Supplying " .display ".status2"
   627 write :supplyBlock:ore .display ".item2"
 
   638 label *label225
   639 label *label223
   640 return :supplyBlock*retaddr
-    * end
   641 label *label31
   642 read *tmp312 :unpackCfg:cfg 0
   643 op sub *tmp313 *tmp312 35
 
   665 read *tmp351 :unpackCfg:cfg 12
   666 op sub :unpackCfg:ind *tmp351 35
   667 return :unpackCfg*retaddr
-    * end
   668 label *label32
   669 sensor *tmp353 .core @silicon
   670 op sub *tmp354 .targetSilicon *tmp353
 
   689 setaddr :mineOre*retaddr *label622 (h:*label622)
   690 call *label21 *invalid :mineOre*retval (m:*label622) (h:*label622)
   691 label *label622
-    * label *label623
   692 jump *label244 always
   693 label *label243
   694 sensor *tmp300 .thoriumGenerator @itemCapacity
 
   926 setaddr :mineOre.1*retaddr *label309 (h:*label309)
   927 call *label22 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
   928 label *label309
-    * label *label303
-    * label *label299
-    * label *label295
-    * label *label289
-    * label *label285
-    * label *label282
   929 return :supplyBase*retaddr
   930 label *label280
   931 write "Goal 11: Fetching titanium" .display ".status1"
 
   935 call *label23 *invalid :fetchBlock*retval (m:*label311) (h:*label311)
   936 label *label311
   937 label *label281
-    * label *label249
-    * label *label240
   938 return :supplyBase*retaddr
-    * end
   939 label *label33
   940 op sign :meetTarget:count :meetTarget:copper
   941 op sign *tmp421 :meetTarget:lead
 
  1030 jump *label323 always
  1031 label *label325
  1032 return :meetTarget*retaddr
-    * end
  1033 label *label34
  1034 set :meetTarget:block :buildBlock:block
  1035 set :meetTarget:copper :buildBlock:copper
 
  1056 jump *label344 equal *tmp463 false
  1057 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1058 return :buildBlock*retaddr
-    * end
  1059 label *label35
  1060 op add *tmp465 :buildRemoteBlock:x :buildRemoteBlock:y
  1061 jump *label346 lessThanEq *tmp465 0
 
  1084 label *label346
  1085 set :buildRemoteBlock*retval false
  1086 return :buildRemoteBlock*retaddr
-    * label *label345
-    * return :buildRemoteBlock*retaddr
-    * end
  1087 label *label36
  1088 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1089 setaddr :unpackCfg*retaddr *label351 (h:*label351)
 
  1109 label *label352
  1110 set :buildBlockFromCfg*retval :buildBlock*retval
  1111 return :buildBlockFromCfg*retaddr
-    * end
  1112 label *label37
  1113 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1114 set :buildBlockFromCfg:config null
 
  1117 label *label354
  1118 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1119 return :buildBlockFromCfg.1*retaddr
-    * end
  1120 label *label38
  1121 set :unpackCfg:cfg :meetTarget.1:cfg
  1122 setaddr :unpackCfg*retaddr *label356 (h:*label356)
 
  1134 call *label33 *invalid :meetTarget*retval (m:*label357) (h:*label357)
  1135 label *label357
  1136 return :meetTarget.1*retaddr
-    * end
  1137 label *label39
  1138 set :meetTarget:block 0
  1139 set :meetTarget:copper 0
 
  1152 write 0 .controller ".siliconReserve"
  1153 write 0 .controller ".graphiteReserve"
  1154 return :buildUnits*retaddr
-    * end
  1155 label *label40
  1156 label *label361
  1157 ubind :flagUnits:unit
 
  1164 ubind :flagUnits:unit
  1165 jump *label364 notEqual @unit :flagUnits:firstUnit
  1166 return :flagUnits*retaddr
-    * end
  1167 label *label41
  1168 ubind :lineUpUnits:unit
  1169 set :lineUpUnits:firstUnit @unit
 
  1178 ubind :lineUpUnits:unit
  1179 jump *label368 notEqual @unit :lineUpUnits:firstUnit
  1180 return :lineUpUnits*retaddr
-    * end

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
    3:  set .press null                                              CoreBuilder.mnd: var
    4:  set .generator null                                          ...
    5:  set .battery null                                            ...
    6:  set .smelter null                                            ...
    7:  set .titaniumDrill null                                      ...
    8:  set .unloader1 null                                          ...
    9:  set .thoriumContainer null                                   ...
   10:  set .thoriumGenerator null                                   ...
   11:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   12:  set .graphiteSurplus 20                                      ...
   13:  set .siliconSurplus 20                                       ...
   14:  set .metaglassSurplus 20                                     ...
   15:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label42                                               CoreBuilder.mnd: do
   16:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   17:  set .builder @unit                                           ...
   18:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   19:  jump *label42 equal .core null                               CoreBuilder.mnd: do
   20:  set :buildBlockFromCfg.1:cfg "#'+nA######%#"                 CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   21:  setaddr :buildBlockFromCfg.1*retaddr *label45                ...
   22:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label45                                               ...
   23:  set .press :buildBlockFromCfg.1*retval                       ...
   24:  set :buildBlockFromCfg.1:cfg "k*/(7######$$"                 CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   25:  setaddr :buildBlockFromCfg.1*retaddr *label46                ...
   26:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label46                                               ...
   27:  set .battery :buildBlockFromCfg.1*retval                     ...
   28:  set :buildBlockFromCfg.1:cfg "k+/(7######$%"                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   29:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   30:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   31:  set :buildBlockFromCfg.1:cfg "m*.<2######$&"                 CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   32:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   33:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   34:  set .generator :buildBlockFromCfg.1*retval                   ...
   35:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   36:  set :buildBlockFromCfg.1:cfg "%+-A<######%'"                 CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   37:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   38:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   39:  set .smelter :buildBlockFromCfg.1*retval                     ...
   40:  set :buildBlockFromCfg.1:cfg "T+,%%######$("                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   41:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   42:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   43:  set :meetTarget.1:cfg "w**5#-#####%)"                        CoreBuilder.mnd: meetTarget(cfg);
   44:  setaddr :meetTarget.1*retaddr *label52                       ...
   45:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label52                                               ...
   46:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   47:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   48:  write .coreY processor4 ":findDrillLocation:y"               ...
   49:  write @unit processor4 ":findDrillLocation:unit"             ...
   50:  write @titanium processor4 ":findDrillLocation:item"         ...
   51:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   52:  write 2 processor4 ":findDrillLocation:size"                 ...
   53:  write 4 processor4 ":findDrillLocation:limit"                ...
   54:  write false processor4 ":findDrillLocation*finished"         ...
   55:  write 1 processor4 "@counter"                                ...
        label *label53                                               ...
   56:  wait 1e-15                                                   ...
   57:  read *tmp146 processor4 ":findDrillLocation*finished"        ...
   58:  jump *label53 equal *tmp146 false                            ...
   59:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   60:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   61:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   62:  jump *label54 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   63:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   64:  stop                                                         Actions.mnd: stopProcessor();
        label *label54                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   65:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   66:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   67:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   68:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   69:  write 2 processor5 "@counter"                                ...
        label *label57                                               ...
   70:  wait 1e-15                                                   ...
   71:  read *tmp152 processor5 ":buildFirstTitaniumDrillAt*finished ...
   72:  jump *label57 equal *tmp152 false                            ...
   73:  read *tmp135 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   74:  set .titaniumDrill *tmp135                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   75:  write *tmp135 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   76:  set :buildBlockFromCfg.1:cfg "*,###A<###$*"                 CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
   77:  setaddr :buildBlockFromCfg.1*retaddr *label58                ...
   78:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label58                                               ...
   79:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
   80:  set :buildBlockFromCfg.1:cfg "T),%%######$+"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   81:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
   82:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
   83:  set :buildBlockFromCfg.1:cfg "W*-'%######$,"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   84:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   85:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   86:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   87:  set :buildBlockFromCfg:cfg "®-.}U#U####$-"                   CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   88:  set :buildBlockFromCfg:config processor2                     ...
   89:  setaddr :buildBlockFromCfg*retaddr *label61                  ...
   90:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label61                                               ...
   91:  set .controller :buildBlockFromCfg*retval                    ...
   92:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   93:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   94:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   95:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   96:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
   97:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
   98:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
   99:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  100:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  101:  set :buildBlockFromCfg.1:cfg "g)'%)######$."                 CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  102:  setaddr :buildBlockFromCfg.1*retaddr *label62                ...
  103:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label62                                               ...
  104:  set :buildBlockFromCfg.1:cfg "(*###A<###$/"                 CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  105:  setaddr :buildBlockFromCfg.1*retaddr *label63                ...
  106:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label63                                               ...
  107:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  108:  set :buildBlockFromCfg.1:cfg "'(_i#####&&0"                 CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  109:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
  110:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
  111:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  112:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  113:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  114:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  115:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  116:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  117:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  118:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  119:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  120:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  121:  set .siliconSurplus 20                                       ...
  122:  setaddr :buildUnits*retaddr *label67                         CoreBuilder.mnd: buildUnits();
  123:  call *label39 *invalid :buildUnits*retval                    ...
        label *label67                                               ...
        label *label68                                               CoreBuilder.mnd: do
  124:  setaddr :supplyBase*retaddr *label71                         CoreBuilder.mnd: supplyBase();
  125:  call *label32 *invalid :supplyBase*retval                    ...
        label *label71                                               ...
  126:  sensor *tmp161 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  127:  jump *label70 lessThan *tmp161 300                           ...
  128:  read *tmp99 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  129:  jump *label68 lessThan *tmp99 3                              CoreBuilder.mnd: do
        label *label70                                               ...
  130:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  131:  set :buildBlockFromCfg.1:cfg ",)###A<###$1"                 CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  132:  setaddr :buildBlockFromCfg.1*retaddr *label74                ...
  133:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label74                                               ...
  134:  set :buildBlockFromCfg.1:cfg "T,*%%######$2"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  135:  setaddr :buildBlockFromCfg.1*retaddr *label75                ...
  136:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label75                                               ...
  137:  set :buildBlockFromCfg.1:cfg "',+_AA#####%3"                 CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  138:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  139:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  140:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  141:  set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"                 CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  142:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  143:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  144:  set :buildBlockFromCfg.1:cfg "W'*'%######$5"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  145:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  146:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  147:  set :buildBlockFromCfg.1:cfg "W&*'%######$6"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  148:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  149:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  150:  set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"                 CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  151:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  152:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  153:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  154:  set :buildBlockFromCfg.1:cfg "$(.#U<###&8"                 CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  155:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  156:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  157:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  158:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  159:  set :buildBlockFromCfg.1:cfg " '%-#2#####&:"                 CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  160:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  161:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  162:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  163:  set :buildBlockFromCfg.1:cfg "*(###A<###$;"                 CoreBuilder.mnd: controller.unloader4 = buildBlockFromCfg(UNLOADER4);
  164:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  165:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  166:  write :buildBlockFromCfg.1*retval .controller ".unloader4"   ...
  167:  set :buildBlockFromCfg.1:cfg "X*''%######$<"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  168:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  169:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  170:  set :buildBlockFromCfg.1:cfg "*%ë#}####&="                 CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  171:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  172:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  173:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  174:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  175:  set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  176:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  177:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  178:  setaddr :buildUnits*retaddr *label87                         CoreBuilder.mnd: buildUnits();
  179:  call *label39 *invalid :buildUnits*retval                    ...
        label *label87                                               ...
  180:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  181:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  182:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  183:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  184:  set :buildBlockFromCfg.1:cfg "%.)A<######%C"                 CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  185:  setaddr :buildBlockFromCfg.1*retaddr *label89                ...
  186:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label89                                               ...
  187:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  188:  set :buildBlockFromCfg.1:cfg "T-*%%######$D"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  189:  setaddr :buildBlockFromCfg.1*retaddr *label90                ...
  190:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label90                                               ...
  191:  set :buildBlockFromCfg.1:cfg "T-)%%######$E"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  192:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  193:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  194:  set :buildBlockFromCfg:cfg "--###A<###$F"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  195:  set :buildBlockFromCfg:config @sand                          ...
  196:  setaddr :buildBlockFromCfg*retaddr *label92                  ...
  197:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label92                                               ...
  198:  setaddr :buildUnits*retaddr *label93                         CoreBuilder.mnd: buildUnits();
  199:  call *label39 *invalid :buildUnits*retval                    ...
        label *label93                                               ...
  200:  read *tmp100 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  201:  jump *label96 greaterThanEq *tmp100 3                        ...
        label *label626                                              ...
  202:  setaddr :supplyBase*retaddr *label97                         CoreBuilder.mnd: supplyBase();
  203:  call *label32 *invalid :supplyBase*retval                    ...
        label *label97                                               ...
  204:  read *tmp100 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  205:  jump *label626 lessThan *tmp100 3                            ...
        label *label96                                               ...
  206:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  207:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  208:  read *tmp98 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  209:  jump *label101 greaterThanEq *tmp98 2                        ...
        label *label627                                              ...
  210:  setaddr :supplyBase*retaddr *label102                        CoreBuilder.mnd: supplyBase();
  211:  call *label32 *invalid :supplyBase*retval                    ...
        label *label102                                              ...
  212:  read *tmp98 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  213:  jump *label627 lessThan *tmp98 2                             ...
        label *label101                                              ...
  214:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  215:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  216:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  217:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  218:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  219:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  220:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  221:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  222:  write .coreY processor4 ":findDrillLocation:y"               ...
  223:  write @unit processor4 ":findDrillLocation:unit"             ...
  224:  write @titanium processor4 ":findDrillLocation:item"         ...
  225:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  226:  write 4 processor4 ":findDrillLocation:size"                 ...
  227:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  228:  write false processor4 ":findDrillLocation*finished"         ...
  229:  write 1 processor4 "@counter"                                ...
  230:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  231:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  232:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  233:  write false processor5 ":buildTitaniumDrills*finished"       ...
  234:  write 3 processor5 "@counter"                                ...
        label *label105                                              ...
  235:  wait 1e-15                                                   ...
  236:  read *tmp196 processor5 ":buildTitaniumDrills*finished"      ...
  237:  jump *label105 equal *tmp196 false                           ...
  238:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  239:  write 3 processor4 "@counter"                                ...
  240:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  241:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  242:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  243:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  244:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  245:  write false processor4 ":layoutThoriumDrill*finished"        ...
  246:  write 2 processor4 "@counter"                                ...
        label *label107                                              ...
  247:  wait 1e-15                                                   ...
  248:  read *tmp201 processor4 ":layoutThoriumDrill*finished"       ...
  249:  jump *label107 equal *tmp201 false                           ...
  250:  set :meetTarget.1:cfg "x**F#AA7###&@"                        CoreBuilder.mnd: meetTarget(LASER_DRILL);
  251:  setaddr :meetTarget.1*retaddr *label108                      ...
  252:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label108                                              ...
        label *label109                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  253:  wait 1e-15                                                   ...
  254:  read *tmp203 processor4 ":layoutThoriumDrill*finished"       ...
  255:  jump *label109 equal *tmp203 false                           ...
  256:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  257:  jump *label110 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  258:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  259:  stop                                                         Actions.mnd: stopProcessor();
        label *label110                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  260:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  261:  read *tmp56 processor4 ".drillX"                             ...
  262:  write *tmp56 processor5 ":buildBlockAt:x"                    ...
  263:  read *tmp57 processor4 ".drillY"                             ...
  264:  write *tmp57 processor5 ":buildBlockAt:y"                    ...
  265:  write null processor5 ":buildBlockAt:rotation"               ...
  266:  write 0 processor5 ":buildBlockAt:config"                    ...
  267:  write -1 processor5 ":buildBlockAt:index"                    ...
  268:  write false processor5 ":buildBlockAt*finished"              ...
  269:  write 1 processor5 "@counter"                                ...
        label *label113                                              ...
  270:  wait 1e-15                                                   ...
  271:  read *tmp213 processor5 ":buildBlockAt*finished"             ...
  272:  jump *label113 equal *tmp213 false                           ...
  273:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  274:  set :buildRemoteBlock:cfg "z%-AAA##A##%4"                    CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  275:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  276:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  277:  setaddr :buildRemoteBlock*retaddr *label114                  ...
  278:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label114                                              ...
  279:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  280:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  281:  setaddr :buildRemoteBlock*retaddr *label115                  ...
  282:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label115                                              ...
  283:  set :buildRemoteBlock:cfg "o%+FK<A####%7"                    CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  284:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  285:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  286:  setaddr :buildRemoteBlock*retaddr *label116                  ...
  287:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label116                                              ...
  288:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  289:  set :buildRemoteBlock:cfg "g)'%)######$."                    CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.nodeX, oreLocator.nodeY);
  290:  read :buildRemoteBlock:x processor4 ".nodeX"                 ...
  291:  read :buildRemoteBlock:y processor4 ".nodeY"                 ...
  292:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  293:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  294:  set :buildRemoteBlock:cfg "r**#-#+####$A"                    CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  295:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  296:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  297:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  298:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  299:  set :buildRemoteBlock:cfg "k*/(7######$$"                    CoreBuilder.mnd: buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  300:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  301:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  302:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  303:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  304:  set :buildRemoteBlock:cfg "**#######%B"                    CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  305:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  306:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  307:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  308:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  309:  set .thoriumContainer :buildRemoteBlock*retval               ...
  310:  jump *label121 notEqual :buildRemoteBlock*retval null        CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  311:  set .thoriumContainer .thoriumDrill                          ...
        label *label121                                              ...
  312:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  313:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  314:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  315:  write false processor3 ":setThoriumContainer*finished"       ...
  316:  write 3 processor3 "@counter"                                ...
        label *label123                                              ...
  317:  wait 1e-15                                                   ...
  318:  read *tmp225 processor3 ":setThoriumContainer*finished"      ...
  319:  jump *label123 equal *tmp225 false                           ...
  320:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  321:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  322:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  323:  read *tmp100 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  324:  jump *label127 greaterThanEq *tmp100 5                       ...
        label *label628                                              ...
  325:  setaddr :supplyBase*retaddr *label128                        CoreBuilder.mnd: supplyBase();
  326:  call *label32 *invalid :supplyBase*retval                    ...
        label *label128                                              ...
  327:  read *tmp100 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  328:  jump *label628 lessThan *tmp100 5                            ...
        label *label127                                              ...
  329:  set :buildBlockFromCfg:cfg "+(###A<###$G"                   CoreBuilder.mnd: controller.unloader6 = buildBlockFromCfg(UNLOADER6, @silicon);
  330:  set :buildBlockFromCfg:config @silicon                       ...
  331:  setaddr :buildBlockFromCfg*retaddr *label129                 ...
  332:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label129                                              ...
  333:  write :buildBlockFromCfg*retval .controller ".unloader6"     ...
  334:  set :buildBlockFromCfg.1:cfg "X+''%######$H"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  335:  setaddr :buildBlockFromCfg.1*retaddr *label130               ...
  336:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label130                                              ...
  337:  set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(I"                 CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  338:  setaddr :buildBlockFromCfg.1*retaddr *label132               ...
  339:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label132                                              ...
  340:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  341:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  342:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  343:  setaddr :buildUnits*retaddr *label133                        CoreBuilder.mnd: buildUnits();
  344:  call *label39 *invalid :buildUnits*retval                    ...
        label *label133                                              ...
  345:  read *tmp101 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  346:  jump *label136 greaterThanEq *tmp101 1                       ...
        label *label629                                              ...
  347:  setaddr :supplyBase*retaddr *label137                        CoreBuilder.mnd: supplyBase();
  348:  call *label32 *invalid :supplyBase*retval                    ...
        label *label137                                              ...
  349:  read *tmp101 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  350:  jump *label629 lessThan *tmp101 1                            ...
        label *label136                                              ...
  351:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  352:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  353:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  354:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  355:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  356:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  357:  setaddr :flagUnits*retaddr *label139                         ...
  358:  call *label40 *invalid :flagUnits*retval                     ...
        label *label139                                              ...
  359:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  360:  setaddr :flagUnits*retaddr *label140                         ...
  361:  call *label40 *invalid :flagUnits*retval                     ...
        label *label140                                              ...
  362:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  363:  setaddr :flagUnits*retaddr *label141                         ...
  364:  call *label40 *invalid :flagUnits*retval                     ...
        label *label141                                              ...
  365:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  366:  setaddr :flagUnits*retaddr *label142                         ...
  367:  call *label40 *invalid :flagUnits*retval                     ...
        label *label142                                              ...
        label *label143                                              CoreBuilder.mnd: while true do
  368:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  369:  set :lineUpUnits:unit @mega                                  ...
  370:  setaddr :lineUpUnits*retaddr *label146                       ...
  371:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label146                                              ...
  372:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  373:  set :lineUpUnits:unit @poly                                  ...
  374:  setaddr :lineUpUnits*retaddr *label147                       ...
  375:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label147                                              ...
  376:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  377:  set :lineUpUnits:unit @mono                                  ...
  378:  setaddr :lineUpUnits*retaddr *label148                       ...
  379:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label148                                              ...
  380:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  381:  set :lineUpUnits:unit @flare                                 ...
  382:  setaddr :lineUpUnits*retaddr *label149                       ...
  383:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label149                                              ...
  384:  jump *label143 always 0 0                                    CoreBuilder.mnd: while true do
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  385:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  386:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  387:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  388:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  389:  jump *label454 notEqual *tmp263 false                        ...
  390:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  391:  stop                                                         Actions.mnd: stopProcessor();
        label *label454                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  392:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label497                                              Actions.mnd: do
  393:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  394:  jump *label498 equal *tmp244 null                            ...
  395:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label498                                              ...
  396:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  397:  ucontrol within :locateOre:x :locateOre:y 6 *tmp247 0        Actions.mnd: while !within(x, y, RADIUS);
  398:  jump *label497 equal *tmp247 false                           Actions.mnd: do
  399:  sensor *tmp268 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  400:  jump *label195 equal *tmp268 :mineOre:ore                    ...
  401:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  402:  jump *label525 equal *tmp249 null                            ...
        label *label523                                              ...
  403:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  404:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  405:  jump *label523 notEqual *tmp249 null                         ...
        label *label525                                              ...
        label *label195                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  406:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  407:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label199                                              Actions.mnd: do
  408:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  409:  op notEqual *tmp273 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  410:  op notEqual *tmp274 :mineOre:item :mineOre:ore               ...
  411:  op land *tmp275 *tmp273 *tmp274                              ...
  412:  jump *label201 notEqual *tmp275 false                        ...
  413:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  414:  jump *label201 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  415:  sensor *tmp279 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  416:  jump *label199 lessThan *tmp279 :mineOre:amount              Actions.mnd: do
        label *label201                                              ...
  417:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  418:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  419:  sensor *tmp253 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  420:  jump *label560 notEqual *tmp253 :mineOre:ore                 ...
  421:  sensor *tmp251 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  422:  sensor *tmp252 :mineOre:block @y                             ...
  423:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  424:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  425:  jump *label554 notEqual *tmp239 false                        ...
        label *label552                                              ...
  426:  ucontrol approach *tmp251 *tmp252 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  427:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  428:  jump *label552 equal *tmp239 false                           ...
        label *label554                                              ...
  429:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label557                                              Actions.mnd: do
  430:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  431:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  432:  op mul *tmp258 *tmp257 :depositItems:cap                     ...
  433:  sensor *tmp259 :mineOre:block :mineOre:ore                   ...
  434:  jump *label557 greaterThan *tmp258 *tmp259                   Actions.mnd: do
  435:  jump *label565 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label560                                              ...
  436:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  437:  jump *label564 equal *tmp261 null                            ...
        label *label562                                              ...
  438:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  439:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  440:  jump *label562 notEqual *tmp261 null                         ...
        label *label564                                              ...
        label *label565                                              Actions.mnd: if @unit.@firstItem == item then
  441:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  442:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  443:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label22                                               Actions.mnd: void mineOre(ore)
  444:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  445:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  446:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  447:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  448:  set :mineOre:amount 30                                       ...
  449:  set :mineOre:block .core                                     ...
  450:  setaddr :mineOre*retaddr *label209                           ...
  451:  call *label21 *invalid :mineOre*retval                       ...
        label *label209                                              ...
  452:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  453:  sensor *tmp282 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  454:  op min :transportStatus:target *tmp282 30                    ...
  455:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  456:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  457:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  458:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  459:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  460:  sensor *tmp284 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  461:  sensor *tmp285 :fetchBlock:block @y                          ...
  462:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label506                                              Actions.mnd: do
  463:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  464:  jump *label507 equal *tmp244 null                            ...
  465:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label507                                              ...
  466:  ucontrol approach *tmp284 *tmp285 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  467:  ucontrol within *tmp284 *tmp285 6 *tmp247 0                  Actions.mnd: while !within(x, y, RADIUS);
  468:  jump *label506 equal *tmp247 false                           Actions.mnd: do
  469:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  470:  jump *label531 equal *tmp249 null                            ...
        label *label529                                              ...
  471:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  472:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  473:  jump *label529 notEqual *tmp249 null                         ...
        label *label531                                              ...
        label *label215                                              Actions.mnd: do
  474:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  475:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  476:  op notEqual *tmp287 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  477:  op notEqual *tmp288 :fetchBlock:unitItem :fetchBlock:item    ...
  478:  op land *tmp289 *tmp287 *tmp288                              ...
  479:  jump *label218 equal *tmp289 false                           ...
  480:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label218                                              Actions.mnd: if unitItem != null and unitItem != item then
  481:  sensor *tmp291 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  482:  op lessThan *tmp292 *tmp291 30                               ...
  483:  sensor *tmp293 :fetchBlock:block :fetchBlock:item            ...
  484:  op land *tmp294 *tmp292 *tmp293                              ...
  485:  jump *label215 notEqual *tmp294 false                        Actions.mnd: do
  486:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  487:  sensor *tmp253 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  488:  jump *label585 notEqual *tmp253 :fetchBlock:item             ...
  489:  sensor *tmp251 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  490:  sensor *tmp252 .core @y                                      ...
  491:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  492:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  493:  jump *label579 notEqual *tmp239 false                        ...
        label *label577                                              ...
  494:  ucontrol approach *tmp251 *tmp252 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  495:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  496:  jump *label577 equal *tmp239 false                           ...
        label *label579                                              ...
  497:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label582                                              Actions.mnd: do
  498:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  499:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  500:  op mul *tmp258 *tmp257 :depositItems:cap                     ...
  501:  sensor *tmp259 .core :fetchBlock:item                        ...
  502:  jump *label582 greaterThan *tmp258 *tmp259                   Actions.mnd: do
  503:  jump *label590 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label585                                              ...
  504:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  505:  jump *label589 equal *tmp261 null                            ...
        label *label587                                              ...
  506:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  507:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  508:  jump *label587 notEqual *tmp261 null                         ...
        label *label589                                              ...
        label *label590                                              Actions.mnd: if @unit.@firstItem == item then
  509:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  510:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  511:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  512:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  513:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  514:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  515:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  516:  sensor *tmp296 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  517:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  518:  jump *label223 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  519:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  520:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  521:  set :mineOre:block :supplyBlock:block                        ...
  522:  setaddr :mineOre*retaddr *label225                           ...
  523:  call *label21 *invalid :mineOre*retval                       ...
        label *label225                                              ...
        label *label223                                              Actions.mnd: if missing > 0 then
  524:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label31                                               CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out ind)
  525:  read *tmp312 :unpackCfg:cfg 0                                CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  526:  op sub *tmp313 *tmp312 35                                    ...
  527:  lookup block :unpackCfg:type *tmp313                         ...
  528:  read *tmp316 :unpackCfg:cfg 1                                CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  529:  op sub :unpackCfg:x *tmp316 42                               ...
  530:  read *tmp320 :unpackCfg:cfg 2                                CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  531:  op sub :unpackCfg:y *tmp320 42                               ...
  532:  read *tmp324 :unpackCfg:cfg 3                                CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  533:  op sub :unpackCfg:cu *tmp324 35                              ...
  534:  read *tmp327 :unpackCfg:cfg 4                                CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  535:  op sub :unpackCfg:pb *tmp327 35                              ...
  536:  read *tmp330 :unpackCfg:cfg 5                                CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  537:  op sub :unpackCfg:gr *tmp330 35                              ...
  538:  read *tmp333 :unpackCfg:cfg 6                                CoreBuilder.mnd: si = char(cfg, index++) - 35;
  539:  op sub :unpackCfg:si *tmp333 35                              ...
  540:  read *tmp336 :unpackCfg:cfg 7                                CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  541:  op sub :unpackCfg:ti *tmp336 35                              ...
  542:  read *tmp339 :unpackCfg:cfg 8                                CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  543:  op sub :unpackCfg:mg *tmp339 35                              ...
  544:  read *tmp342 :unpackCfg:cfg 9                                CoreBuilder.mnd: th = char(cfg, index++) - 35;
  545:  op sub :unpackCfg:th *tmp342 35                              ...
  546:  read *tmp345 :unpackCfg:cfg 10                               CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  547:  op sub :unpackCfg:rotation *tmp345 35                        ...
  548:  read *tmp351 :unpackCfg:cfg 12                               CoreBuilder.mnd: ind = char(cfg, index++) - 35;
  549:  op sub :unpackCfg:ind *tmp351 35                             ...
  550:  return :unpackCfg*retaddr                                    CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out ind)
        label *label32                                               CoreBuilder.mnd: void supplyBase()
  551:  sensor *tmp353 .core @silicon                                CoreBuilder.mnd: monoSandTarget = max(0, targetSilicon - core.@silicon);
  552:  op sub *tmp354 .targetSilicon *tmp353                        ...
  553:  op max *tmp355 0 *tmp354                                     ...
  554:  write *tmp355 processor8 ".monoSandTarget"                   ...
  555:  jump *label239 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  556:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  557:  sensor *tmp357 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  558:  jump *label243 greaterThanEq *tmp357 50                      ...
  559:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  560:  set :supplyBlock:ore @coal                                   ...
  561:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  562:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  563:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  564:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  565:  sensor *tmp296 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  566:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  567:  jump *label244 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  568:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  569:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  570:  set :mineOre:block .thoriumGenerator                         ...
  571:  setaddr :mineOre*retaddr *label622                           ...
  572:  call *label21 *invalid :mineOre*retval                       ...
        label *label622                                              ...
  573:  jump *label244 always 0 0                                    CoreBuilder.mnd: if core.@coal < 50 then
        label *label243                                              ...
  574:  sensor *tmp300 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  575:  op min :transportStatus:target *tmp300 30                    ...
  576:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  577:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  578:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  579:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  580:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  581:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label515                                              Actions.mnd: do
  582:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  583:  jump *label516 equal *tmp244 null                            ...
  584:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label516                                              ...
  585:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  586:  ucontrol within .coreX .coreY 6 *tmp247 0                    Actions.mnd: while !within(x, y, RADIUS);
  587:  jump *label515 equal *tmp247 false                           Actions.mnd: do
  588:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  589:  jump *label537 equal *tmp249 null                            ...
        label *label535                                              ...
  590:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  591:  sensor *tmp249 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  592:  jump *label535 notEqual *tmp249 null                         ...
        label *label537                                              ...
        label *label462                                              Actions.mnd: do
  593:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  594:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  595:  op notEqual *tmp303 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  596:  op notEqual *tmp304 :supplyBlockFromCore:unitItem @coal      ...
  597:  op land *tmp305 *tmp303 *tmp304                              ...
  598:  jump *label463 equal *tmp305 false                           ...
  599:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label463                                              Actions.mnd: if unitItem != null and unitItem != item then
  600:  sensor *tmp307 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  601:  op lessThan *tmp308 *tmp307 30                               ...
  602:  sensor *tmp309 .core @coal                                   ...
  603:  op land *tmp310 *tmp308 *tmp309                              ...
  604:  jump *label462 notEqual *tmp310 false                        Actions.mnd: do
  605:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  606:  sensor *tmp253 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  607:  jump *label610 notEqual *tmp253 @coal                        ...
  608:  sensor *tmp251 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  609:  sensor *tmp252 .thoriumGenerator @y                          ...
  610:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  611:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  612:  jump *label604 notEqual *tmp239 false                        ...
        label *label602                                              ...
  613:  ucontrol approach *tmp251 *tmp252 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  614:  ucontrol within *tmp251 *tmp252 6 *tmp239 0                  Actions.mnd: while !within(x, y, radius) do
  615:  jump *label602 equal *tmp239 false                           ...
        label *label604                                              ...
  616:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label607                                              Actions.mnd: do
  617:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  618:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  619:  op mul *tmp258 *tmp257 :depositItems:cap                     ...
  620:  sensor *tmp259 .thoriumGenerator @coal                       ...
  621:  jump *label607 greaterThan *tmp258 *tmp259                   Actions.mnd: do
  622:  jump *label615 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label610                                              ...
  623:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  624:  jump *label614 equal *tmp261 null                            ...
        label *label612                                              ...
  625:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  626:  sensor *tmp261 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  627:  jump *label612 notEqual *tmp261 null                         ...
        label *label614                                              ...
        label *label615                                              Actions.mnd: if @unit.@firstItem == item then
  628:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  629:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label244                                              CoreBuilder.mnd: if core.@coal < 50 then
  630:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  631:  set :fetchBlock:item @thorium                                ...
  632:  setaddr :fetchBlock*retaddr *label247                        ...
  633:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label247                                              ...
  634:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label239                                              ...
  635:  read *tmp99 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  636:  jump *label248 lessThanEq *tmp99 3                           ...
  637:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  638:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  639:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  640:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  641:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  642:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  643:  set :mineOre:amount 30                                       ...
  644:  set :mineOre:block .core                                     ...
  645:  setaddr :mineOre*retaddr *label542                           ...
  646:  call *label21 *invalid :mineOre*retval                       ...
        label *label542                                              ...
  647:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label248                                              ...
  648:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  649:  jump *label254 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  650:  sensor *tmp364 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  651:  jump *label256 greaterThanEq *tmp364 .targetGraphite         ...
  652:  sensor *tmp367 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  653:  jump *label258 greaterThanEq *tmp367 5                       ...
  654:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  655:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  656:  set :supplyBlock:ore @coal                                   ...
  657:  setaddr :supplyBlock*retaddr *label261                       ...
  658:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label261                                              ...
  659:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label258                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label256                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  660:  sensor *tmp370 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  661:  jump *label262 greaterThanEq *tmp370 .targetSilicon          ...
  662:  sensor *tmp373 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  663:  jump *label264 greaterThanEq *tmp373 5                       ...
  664:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  665:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  666:  set :supplyBlock:ore @coal                                   ...
  667:  setaddr :supplyBlock*retaddr *label267                       ...
  668:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label267                                              ...
  669:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  670:  jump *label265 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label264                                              ...
  671:  sensor *tmp376 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  672:  jump *label268 greaterThanEq *tmp376 5                       ...
  673:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  674:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  675:  set :supplyBlock:ore @sand                                   ...
  676:  setaddr :supplyBlock*retaddr *label271                       ...
  677:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label271                                              ...
  678:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label268                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label265                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label262                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  679:  sensor *tmp379 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  680:  jump *label272 greaterThanEq *tmp379 .powerTarget            ...
  681:  sensor *tmp382 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  682:  jump *label274 greaterThanEq *tmp382 2                       ...
  683:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  684:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  685:  set :supplyBlock:ore @coal                                   ...
  686:  setaddr :supplyBlock*retaddr *label277                       ...
  687:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label277                                              ...
  688:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label274                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label272                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label254                                              CoreBuilder.mnd: if unloader1 == null then
  689:  set *tmp387 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  690:  sensor *tmp385 .core @titanium                               ...
  691:  jump *label279 greaterThanEq *tmp385 .targetTitanium         ...
  692:  sensor *tmp388 .core @titanium                               ...
  693:  op sub *tmp389 .targetTitanium *tmp388                       ...
  694:  op min *tmp387 7 *tmp389                                     ...
        label *label279                                              ...
  695:  sensor *tmp391 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  696:  jump *label280 greaterThanEq *tmp391 *tmp387                 ...
  697:  jump *label281 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  698:  sensor *tmp396 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  699:  op mul *tmp397 .unloader1 .powerTarget                       ...
  700:  jump *label284 greaterThanEq *tmp396 *tmp397                 ...
  701:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  702:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  703:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  704:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  705:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  706:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  707:  set :mineOre:amount 30                                       ...
  708:  set :mineOre:block .core                                     ...
  709:  setaddr :mineOre*retaddr *label633                           ...
  710:  call *label21 *invalid :mineOre*retval                       ...
        label *label633                                              ...
  711:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label284                                              ...
  712:  sensor *tmp400 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  713:  jump *label288 greaterThanEq *tmp400 .targetSilicon          ...
  714:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  715:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  716:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  717:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  718:  jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  719:  set :mineOre.1:ore @coal                                     ...
        label *label292                                              ...
  720:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  721:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  722:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  723:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  724:  set :mineOre:amount 30                                       ...
  725:  set :mineOre:block .core                                     ...
  726:  setaddr :mineOre*retaddr *label638                           ...
  727:  call *label21 *invalid :mineOre*retval                       ...
        label *label638                                              ...
  728:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label288                                              ...
  729:  sensor *tmp407 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  730:  jump *label294 greaterThanEq *tmp407 .targetCopper           ...
  731:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  732:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  733:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  734:  write @copper .display ".item2"                              Actions.mnd: display.item2 = item;
  735:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  736:  set :mineOre:ore @copper                                     Actions.mnd: mineOre(ore, capacity, core);
  737:  set :mineOre:amount 30                                       ...
  738:  set :mineOre:block .core                                     ...
  739:  setaddr :mineOre*retaddr *label643                           ...
  740:  call *label21 *invalid :mineOre*retval                       ...
        label *label643                                              ...
  741:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label294                                              ...
  742:  sensor *tmp410 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  743:  jump *label298 greaterThanEq *tmp410 .targetLead             ...
  744:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  745:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  746:  setaddr :mineOre.1*retaddr *label301                         ...
  747:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label301                                              ...
  748:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label298                                              ...
  749:  sensor *tmp413 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  750:  jump *label302 greaterThanEq *tmp413 .targetMetaglass        ...
  751:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  752:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  753:  setaddr :mineOre.1*retaddr *label305                         ...
  754:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label305                                              ...
  755:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label302                                              ...
  756:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  757:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  758:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  759:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  760:  jump *label308 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  761:  set :mineOre.1:ore @coal                                     ...
        label *label308                                              ...
  762:  setaddr :mineOre.1*retaddr *label309                         CoreBuilder.mnd: mineOre(ore);
  763:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label309                                              ...
  764:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label280                                              ...
  765:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  766:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  767:  set :fetchBlock:item @titanium                               ...
  768:  setaddr :fetchBlock*retaddr *label311                        ...
  769:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label311                                              ...
        label *label281                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  770:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label33                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  771:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  772:  op sign *tmp421 :meetTarget:lead 0                           ...
  773:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  774:  op sign *tmp421 :meetTarget:graphite 0                       ...
  775:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  776:  op sign *tmp421 :meetTarget:silicon 0                        ...
  777:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  778:  op sign *tmp421 :meetTarget:titanium 0                       ...
  779:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  780:  op sign *tmp421 :meetTarget:metaglass 0                      ...
  781:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  782:  op sign *tmp421 :meetTarget:thorium 0                        ...
  783:  op add :meetTarget:count :meetTarget:count *tmp421           ...
  784:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  785:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  786:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  787:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  788:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  789:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  790:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  791:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  792:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  793:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  794:  op add *tmp422 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  795:  op add .targetLead *tmp422 1                                 ...
  796:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  797:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  798:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  799:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  800:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  801:  op add *tmp424 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  802:  write *tmp424 .controller ".pressTarget"                     ...
  803:  op add *tmp425 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  804:  write *tmp425 .controller ".smelterTarget"                   ...
  805:  op add *tmp426 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  806:  write *tmp426 .controller ".kilnTarget"                      ...
  807:  write *tmp422 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  808:  op sign *tmp428 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  809:  op mul *tmp429 *tmp428 20                                    ...
  810:  op add *tmp430 :meetTarget:silicon *tmp429                   ...
  811:  write *tmp430 .controller ".siliconReserve"                  ...
  812:  op sign *tmp431 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  813:  op mul *tmp432 *tmp431 20                                    ...
  814:  op add *tmp433 :meetTarget:graphite *tmp432                  ...
  815:  write *tmp433 .controller ".graphiteReserve"                 ...
  816:  write .targetLead processor8 ".monoLeadTarget"               CoreBuilder.mnd: monoLeadTarget = targetLead;
  817:  write :meetTarget:copper processor8 ".monoCopperTarget"      CoreBuilder.mnd: monoCopperTarget = targetCopper;
        label *label323                                              CoreBuilder.mnd: while !targetMet() do
  818:  sensor *tmp435 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  819:  jump *label327 greaterThanEq *tmp435 .targetCopper           ...
  820:  set *tmp434 false                                            ...
  821:  jump *label326 always 0 0                                    ...
        label *label327                                              ...
  822:  sensor *tmp438 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  823:  jump *label329 greaterThanEq *tmp438 .targetLead             ...
  824:  set *tmp434 false                                            ...
  825:  jump *label326 always 0 0                                    ...
        label *label329                                              ...
  826:  sensor *tmp441 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  827:  jump *label331 greaterThanEq *tmp441 .targetGraphite         ...
  828:  set *tmp434 false                                            ...
  829:  jump *label326 always 0 0                                    ...
        label *label331                                              ...
  830:  sensor *tmp444 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  831:  jump *label333 greaterThanEq *tmp444 .targetSilicon          ...
  832:  set *tmp434 false                                            ...
  833:  jump *label326 always 0 0                                    ...
        label *label333                                              ...
  834:  sensor *tmp447 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  835:  jump *label335 greaterThanEq *tmp447 .targetTitanium         ...
  836:  set *tmp434 false                                            ...
  837:  jump *label326 always 0 0                                    ...
        label *label335                                              ...
  838:  sensor *tmp450 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  839:  jump *label337 greaterThanEq *tmp450 .targetMetaglass        ...
  840:  set *tmp434 false                                            ...
  841:  jump *label326 always 0 0                                    ...
        label *label337                                              ...
  842:  sensor *tmp453 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  843:  jump *label339 greaterThanEq *tmp453 .targetThorium          ...
  844:  set *tmp434 false                                            ...
  845:  jump *label326 always 0 0                                    ...
        label *label339                                              ...
  846:  set *tmp434 true                                             CoreBuilder.mnd: return true;
  847:  jump *label326 always 0 0                                    ...
        label *label326                                              CoreBuilder.mnd: while !targetMet() do
  848:  jump *label325 notEqual *tmp434 false                        ...
  849:  setaddr :supplyBase*retaddr *label341                        CoreBuilder.mnd: supplyBase();
  850:  call *label32 *invalid :supplyBase*retval                    ...
        label *label341                                              ...
  851:  jump *label323 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label325                                              ...
  852:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label34                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  853:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  854:  set :meetTarget:copper :buildBlock:copper                    ...
  855:  set :meetTarget:lead :buildBlock:lead                        ...
  856:  set :meetTarget:graphite :buildBlock:graphite                ...
  857:  set :meetTarget:silicon :buildBlock:silicon                  ...
  858:  set :meetTarget:titanium :buildBlock:titanium                ...
  859:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  860:  set :meetTarget:thorium :buildBlock:thorium                  ...
  861:  setaddr :meetTarget*retaddr *label343                        ...
  862:  call *label33 *invalid :meetTarget*retval                    ...
        label *label343                                              ...
  863:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  864:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  865:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  866:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  867:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  868:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  869:  write false .blockBuilder ":buildBlockAt*finished"           ...
  870:  write 1 .blockBuilder "@counter"                             ...
        label *label344                                              ...
  871:  wait 1e-15                                                   ...
  872:  read *tmp463 .blockBuilder ":buildBlockAt*finished"          ...
  873:  jump *label344 equal *tmp463 false                           ...
  874:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  875:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label35                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  876:  op add *tmp465 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  877:  jump *label346 lessThanEq *tmp465 0                          ...
  878:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out index);
  879:  setaddr :unpackCfg*retaddr *label348                         ...
  880:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label348                                              ...
  881:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  882:  set :buildBlock:x :buildRemoteBlock:x                        ...
  883:  set :buildBlock:y :buildRemoteBlock:y                        ...
  884:  set :buildBlock:copper :unpackCfg:cu                         ...
  885:  set :buildBlock:lead :unpackCfg:pb                           ...
  886:  set :buildBlock:graphite :unpackCfg:gr                       ...
  887:  set :buildBlock:silicon :unpackCfg:si                        ...
  888:  set :buildBlock:titanium :unpackCfg:ti                       ...
  889:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  890:  set :buildBlock:thorium :unpackCfg:th                        ...
  891:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  892:  set :buildBlock:config null                                  ...
  893:  set :buildBlock:index :unpackCfg:ind                         ...
  894:  setaddr :buildBlock*retaddr *label349                        ...
  895:  call *label34 *invalid :buildBlock*retval                    ...
        label *label349                                              ...
  896:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  897:  return :buildRemoteBlock*retaddr                             ...
        label *label346                                              CoreBuilder.mnd: if x + y > 0 then
  898:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  899:  return :buildRemoteBlock*retaddr                             ...
        label *label36                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  900:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out index);
  901:  setaddr :unpackCfg*retaddr *label351                         ...
  902:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label351                                              ...
  903:  op add *tmp468 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  904:  op add *tmp469 .coreY :unpackCfg:y                           ...
  905:  set :buildBlock:block :unpackCfg:type                        ...
  906:  set :buildBlock:x *tmp468                                    ...
  907:  set :buildBlock:y *tmp469                                    ...
  908:  set :buildBlock:copper :unpackCfg:cu                         ...
  909:  set :buildBlock:lead :unpackCfg:pb                           ...
  910:  set :buildBlock:graphite :unpackCfg:gr                       ...
  911:  set :buildBlock:silicon :unpackCfg:si                        ...
  912:  set :buildBlock:titanium :unpackCfg:ti                       ...
  913:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  914:  set :buildBlock:thorium :unpackCfg:th                        ...
  915:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  916:  set :buildBlock:config :buildBlockFromCfg:config             ...
  917:  set :buildBlock:index :unpackCfg:ind                         ...
  918:  setaddr :buildBlock*retaddr *label352                        ...
  919:  call *label34 *invalid :buildBlock*retval                    ...
        label *label352                                              ...
  920:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  921:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  922:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  923:  set :buildBlockFromCfg:config null                           ...
  924:  setaddr :buildBlockFromCfg*retaddr *label354                 ...
  925:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label354                                              ...
  926:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  927:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label38                                               CoreBuilder.mnd: void meetTarget(cfg)
  928:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  929:  setaddr :unpackCfg*retaddr *label356                         ...
  930:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label356                                              ...
  931:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  932:  set :meetTarget:copper :unpackCfg:cu                         ...
  933:  set :meetTarget:lead :unpackCfg:pb                           ...
  934:  set :meetTarget:graphite :unpackCfg:gr                       ...
  935:  set :meetTarget:silicon :unpackCfg:si                        ...
  936:  set :meetTarget:titanium :unpackCfg:ti                       ...
  937:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  938:  set :meetTarget:thorium :unpackCfg:th                        ...
  939:  setaddr :meetTarget*retaddr *label357                        ...
  940:  call *label33 *invalid :meetTarget*retval                    ...
        label *label357                                              ...
  941:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label39                                               CoreBuilder.mnd: void buildUnits()
  942:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  943:  set :meetTarget:copper 0                                     ...
  944:  set :meetTarget:lead 0                                       ...
  945:  set :meetTarget:graphite 0                                   ...
  946:  set :meetTarget:silicon 0                                    ...
  947:  set :meetTarget:titanium 0                                   ...
  948:  set :meetTarget:metaglass 0                                  ...
  949:  set :meetTarget:thorium 0                                    ...
  950:  setaddr :meetTarget*retaddr *label359                        ...
  951:  call *label33 *invalid :meetTarget*retval                    ...
        label *label359                                              ...
  952:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  953:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  954:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  955:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  956:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  957:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label40                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label361                                              CoreBuilder.mnd: do
  958:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  959:  set :flagUnits:firstUnit @unit                               ...
  960:  jump *label361 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  961:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label364                                              CoreBuilder.mnd: do
  962:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  963:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  964:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  965:  jump *label364 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  966:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label41                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  967:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  968:  set :lineUpUnits:firstUnit @unit                             ...
        label *label368                                              CoreBuilder.mnd: do
  969:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  970:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  971:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  972:  sensor *tmp475 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  973:  jump *label371 equal *tmp475 false                           ...
  974:  ucontrol stop 0 0 0 0 0                                      ...
        label *label371                                              ...
  975:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  976:  jump *label368 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  977:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)


Performance: parsed in 839 ms, compiled in 447 ms, optimized in 4,060 ms, run in 11 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (17 steps):
The program didn't generate any output.
Execution exception at instruction 16: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
