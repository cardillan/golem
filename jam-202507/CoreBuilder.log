  1705 instructions before optimizations.
    82 instructions eliminated by Temp Variables Elimination (2 iterations).
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:10:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    62 instructions eliminated by Jump Optimization (5 iterations).
    62 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   388 instructions eliminated by Data Flow Optimization (3 passes, 24 iterations).
    18 loops improved by Loop Hoisting.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    14 instructions updated by JumpThreading.
    43 instructions eliminated by Unreachable Code Elimination (2 iterations).
   935 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:506:9            size    +1, benefit       12.5, efficiency     12.500
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   145561.3, efficiency 145561.328
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134736.3, efficiency 134736.328
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100517.6, efficiency 100517.578
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68437.5, efficiency  68437.500
  ! Replicate loop condition at CoreBuilder.mnd:276:5            size    +2, benefit    10850.0, efficiency   5425.000
  * Unroll iteration loop at CoreBuilder.mnd:253:5               size   -11, benefit     9982.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:506:9            size    +1, benefit       12.5, efficiency     12.500
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   145561.3, efficiency 145561.328
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134736.3, efficiency 134736.328
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100517.6, efficiency 100517.578
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68437.5, efficiency  68437.500
  ! Replicate loop condition at CoreBuilder.mnd:276:5            size    +2, benefit    10850.0, efficiency   5425.000

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:506:9            size    +1, benefit       12.5, efficiency     12.500
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   145561.3, efficiency 145561.328
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134736.3, efficiency 134736.328
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100517.6, efficiency 100517.578
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68437.5, efficiency  68437.500
  ! Replicate loop condition at CoreBuilder.mnd:276:5            size    +2, benefit    10850.0, efficiency   5425.000

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:506:9            size    +1, benefit       12.5, efficiency     12.500
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   145561.3, efficiency 145561.328
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   134736.3, efficiency 134736.328
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   100517.6, efficiency 100517.578
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    68437.5, efficiency  68437.500
  ! Replicate loop condition at CoreBuilder.mnd:276:5            size    +2, benefit    10850.0, efficiency   5425.000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-84 instructions):
 
   161 setaddr :buildBlock*retaddr *label52 (h:*label52)
   162 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   163 label *label52
-    * set *tmp98 :buildBlock*retval
   164 jump *label47 always
   165 label *label49
   166 multijump *tmp99 0 0 (m:marker2)
   167 multilabel *label51 (m:marker2)
   168 label *label50
-    * set *tmp98 null
   169 label *label47
   170 set :buildBlockFromCfg.3:block @combustion-generator
   171 set :buildBlockFromCfg.3:offsetX 0
 
   285 set .ERROR :error:error
   286 stop
   287 label *label71
-    * set *tmp124 null
   288 jump *label70 always
   289 label *label69
-    * set *tmp124 null
   290 label *label70
   291 write @pneumatic-drill .display ".nextBlock"
   292 set :buildBlockAt:block @pneumatic-drill
 
   425 setaddr :buildBlock*retaddr *label90 (h:*label90)
   426 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   427 label *label90
-    * set *tmp133 :buildBlock*retval
   428 jump *label85 always
   429 label *label87
   430 multijump *tmp134 0 0 (m:marker7)
   431 multilabel *label89 (m:marker7)
   432 label *label88
-    * set *tmp133 null
   433 label *label85
   434 set :buildBlockFromCfg.8:block @unloader
   435 set :buildBlockFromCfg.8:offsetX -2
 
   503 setaddr :buildBlock*retaddr *label102 (h:*label102)
   504 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   505 label *label102
-    * set *tmp141 :buildBlock*retval
   506 jump *label97 always
   507 label *label99
   508 multijump *tmp142 0 0 (m:marker9)
   509 multilabel *label101 (m:marker9)
   510 label *label100
-    * set *tmp141 null
   511 label *label97
   512 set :buildBlockFromCfg.10:block @air-factory
   513 set :buildBlockFromCfg.10:offsetX -4
 
   587 setaddr :findFreeUnit*retaddr *label117 (h:*label117)
   588 call *label15 *invalid :findFreeUnit*retval (m:*label117) (h:*label117)
   589 label *label117
-    * set *tmp152 :findFreeUnit*retval
   590 write .coreX .oreLocator ":layoutThoriumDrill:x"
   591 write .coreY .oreLocator ":layoutThoriumDrill:y"
   592 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   602 wait 1e-15
   603 read *tmp159 .flareController ":start*finished"
   604 jump *label118 equal *tmp159 false
-    * set *tmp151 null
   605 jump *label116 always
   606 label *label115
-    * set *tmp151 null
   607 label *label116
   608 setaddr :supplyBase*retaddr *label119 (h:*label119)
   609 call *label21 *invalid :supplyBase*retval (m:*label119) (h:*label119)
 
   612 op lessThan *tmp161 *tmp160 300
   613 jump *label120 equal *tmp161 false
   614 jump *label114 always
-    * set *tmp162 null
   615 jump *label121 always
   616 label *label120
-    * set *tmp162 null
   617 label *label121
   618 label *label113
   619 read *tmp35 .controller ".monos"
 
   659 setaddr :buildBlock*retaddr *label128 (h:*label128)
   660 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   661 label *label128
-    * set *tmp167 :buildBlock*retval
   662 jump *label123 always
   663 label *label125
   664 multijump *tmp168 0 0 (m:marker11)
   665 multilabel *label127 (m:marker11)
   666 label *label126
-    * set *tmp167 null
   667 label *label123
   668 set :buildBlockFromCfg.12:block @kiln
   669 set :buildBlockFromCfg.12:offsetX 3.5
 
   737 setaddr :buildBlock*retaddr *label140 (h:*label140)
   738 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   739 label *label140
-    * set *tmp175 :buildBlock*retval
   740 jump *label135 always
   741 label *label137
   742 multijump *tmp176 0 0 (m:marker13)
   743 multilabel *label139 (m:marker13)
   744 label *label138
-    * set *tmp175 null
   745 label *label135
   746 set :buildBlockFromCfg.14:block @water-extractor
   747 set :buildBlockFromCfg.14:offsetX -3.5
 
   774 setaddr :buildBlock*retaddr *label146 (h:*label146)
   775 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   776 label *label146
-    * set *tmp179 :buildBlock*retval
   777 jump *label141 always
   778 label *label143
   779 multijump *tmp180 0 0 (m:marker14)
   780 multilabel *label145 (m:marker14)
   781 label *label144
-    * set *tmp179 null
   782 label *label141
   783 set :buildBlockFromCfg.15:block @steam-generator
   784 set :buildBlockFromCfg.15:offsetX -3.5
 
   841 setaddr :findFreeUnit*retaddr *label159 (h:*label159)
   842 call *label15 *invalid :findFreeUnit*retval (m:*label159) (h:*label159)
   843 label *label159
-    * set *tmp189 :findFreeUnit*retval
   844 write .coreX .oreLocator ":layoutThoriumDrill:x"
   845 write .coreY .oreLocator ":layoutThoriumDrill:y"
   846 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   857 op equal *tmp195 *tmp194 false
   858 jump *label160 notEqual *tmp195 false
   859 label *label162
-    * set *tmp187 null
   860 jump *label154 always
   861 label *label153
-    * set *tmp187 null
   862 label *label154
   863 set :meetTarget:block @laser-drill
   864 set :meetTarget:copper 35
 
   883 set .ERROR :error.1:error
   884 stop
   885 label *label170
-    * set *tmp199 null
   886 jump *label169 always
   887 label *label168
-    * set *tmp199 null
   888 label *label169
   889 set :buildBlockAt:block @laser-drill
   890 read *tmp65 .oreLocator ".drillX"
 
   903 op lessThan *tmp201 *tmp67 0
   904 jump *label172 equal *tmp201 false
   905 jump *label164 always
-    * set *tmp202 null
   906 jump *label173 always
   907 label *label172
-    * set *tmp202 null
   908 label *label173
   909 set :meetTarget:block @water-extractor
   910 set :meetTarget:copper 30
 
   928 setaddr :buildBlockAt*retaddr *label176 (h:*label176)
   929 call *label26 *invalid :buildBlockAt*retval (m:*label176) (h:*label176)
   930 label *label176
-    * set *tmp203 :buildBlockAt*retval
   931 read *tmp69 .oreLocator ".water2X"
   932 op lessThan *tmp204 *tmp69 0
   933 jump *label177 equal *tmp204 false
   934 jump *label164 always
-    * set *tmp205 null
   935 jump *label178 always
   936 label *label177
-    * set *tmp205 null
   937 label *label178
   938 set :meetTarget:block @water-extractor
   939 set :meetTarget:copper 30
 
   957 setaddr :buildBlockAt*retaddr *label181 (h:*label181)
   958 call *label26 *invalid :buildBlockAt*retval (m:*label181) (h:*label181)
   959 label *label181
-    * set *tmp206 :buildBlockAt*retval
   960 set :meetTarget:block @water-extractor
   961 set :meetTarget:copper 30
   962 set :meetTarget:lead 30
 
  1003 setaddr :buildBlockAt*retaddr *label187 (h:*label187)
  1004 call *label26 *invalid :buildBlockAt*retval (m:*label187) (h:*label187)
  1005 label *label187
-    * set *tmp208 :buildBlockAt*retval
  1006 set :meetTarget:block @solar-panel
  1007 set :meetTarget:copper 0
  1008 set :meetTarget:lead 10
 
  1025 setaddr :buildBlockAt*retaddr *label190 (h:*label190)
  1026 call *label26 *invalid :buildBlockAt*retval (m:*label190) (h:*label190)
  1027 label *label190
-    * set *tmp209 :buildBlockAt*retval
  1028 set :meetTarget:block @battery
  1029 set :meetTarget:copper 5
  1030 set :meetTarget:lead 20
 
  1047 setaddr :buildBlockAt*retaddr *label193 (h:*label193)
  1048 call *label26 *invalid :buildBlockAt*retval (m:*label193) (h:*label193)
  1049 label *label193
-    * set *tmp210 :buildBlockAt*retval
  1050 write .thoriumDrill .display ".thoriumDrill"
  1051 write .thoriumDrill .flareController ":addThoriumDrill:drill"
  1052 write .thoriumGenerator .flareController ":addThoriumDrill:generator"
 
  1088 setaddr :buildBlock*retaddr *label200 (h:*label200)
  1089 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
  1090 label *label200
-    * set *tmp214 :buildBlock*retval
  1091 jump *label195 always
  1092 label *label197
  1093 multijump *tmp215 0 0 (m:marker16)
  1094 multilabel *label199 (m:marker16)
  1095 label *label198
-    * set *tmp214 null
  1096 label *label195
  1097 write 0 .display ".totalTargets"
  1098 write null .display ".nextBlock"
 
  1158 op notEqual *tmp226 *tmp225 null
  1159 jump *label223 equal *tmp226 false
  1160 ucontrol itemDrop @air 1000
-    * set *tmp227 null
  1161 jump *label224 always
  1162 label *label223
-    * set *tmp227 null
  1163 label *label224
  1164 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1165 label *label221
 
  1205 op greaterThan *tmp239 *tmp237 *tmp238
  1206 jump *label232 notEqual *tmp239 false
  1207 label *label234
-    * set *tmp234 null
  1208 jump *label230 always
  1209 label *label229
  1210 label *label235
 
  1215 label *label236
  1216 jump *label235 always
  1217 label *label237
-    * set *tmp234 null
  1218 label *label230
  1219 set :transportStatus:target 0
  1220 set :transportStatus:item null
 
  1232 set .ERROR :error.3:error
  1233 stop
  1234 label *label242
-    * set *tmp245 null
  1235 jump *label241 always
  1236 label *label240
-    * set *tmp245 null
  1237 label *label241
  1238 label *label239
  1239 return :locateOre*retaddr
 
  1269 jump *label250 always
  1270 label *label252
  1271 label *label249
-    * set *tmp249 null
  1272 jump *label248 always
  1273 label *label247
-    * set *tmp249 null
  1274 label *label248
  1275 set :status3.3:text "Mining..."
  1276 write :status3.3:text .display ".status3"
 
  1288 op land *tmp257 *tmp255 *tmp256
  1289 jump *label258 equal *tmp257 false
  1290 jump *label257 always
-    * set *tmp258 null
  1291 jump *label259 always
  1292 label *label258
-    * set *tmp258 null
  1293 label *label259
  1294 ucontrol mine :mineOre:x :mineOre:y
  1295 op mul :second.1:result @second TIME_COMPRESS
 
  1298 op greaterThan *tmp260 *tmp259 :mineOre:stop
  1299 jump *label261 equal *tmp260 false
  1300 jump *label257 always
-    * set *tmp261 null
  1301 jump *label262 always
  1302 label *label261
-    * set *tmp261 null
  1303 label *label262
  1304 label *label256
  1305 sensor *tmp262 @unit @totalItems
 
  1372 op land *tmp273 *tmp271 *tmp272
  1373 jump *label278 equal *tmp273 false
  1374 ucontrol itemDrop @air 1000
-    * set *tmp274 null
  1375 jump *label279 always
  1376 label *label278
-    * set *tmp274 null
  1377 label *label279
  1378 label *label276
  1379 sensor *tmp275 @unit :fetchBlock:item
 
  1396 jump *label282 equal *tmp279 false
  1397 set :findFreeUnit*retval null
  1398 jump *label281 always
-    * set *tmp280 null
  1399 jump *label283 always
  1400 label *label282
-    * set *tmp280 null
  1401 label *label283
  1402 set :findFreeUnit:first_unit @unit
  1403 label *label284
 
  1407 ucontrol flag :findFreeUnit:initial_flag
  1408 set :findFreeUnit*retval @unit
  1409 jump *label281 always
-    * set *tmp283 null
  1410 jump *label288 always
  1411 label *label287
  1412 sensor *tmp284 :findFreeUnit:first_unit @dead
 
  1419 label *label289
  1420 set *tmp286 null
  1421 label *label290
-    * set *tmp283 *tmp286
  1422 label *label288
  1423 ubind :findFreeUnit:unit_type
  1424 label *label285
 
  1466 setaddr :mineOre*retaddr *label303 (h:*label303)
  1467 call *label11 *invalid :mineOre*retval (m:*label303) (h:*label303)
  1468 label *label303
-    * set *tmp301 null
  1469 jump *label302 always
  1470 label *label301
-    * set *tmp301 null
  1471 label *label302
  1472 label *label299
  1473 set :supplyBase0:supplied true
 
  1476 label *label296
  1477 set *tmp296 null
  1478 label *label297
-    * set *tmp293 *tmp296
  1479 jump *label295 always
  1480 label *label294
-    * set *tmp293 null
  1481 label *label295
  1482 sensor *tmp302 .core @silicon
  1483 op lessThan *tmp303 *tmp302 .targetSilicon
 
  1510 setaddr :mineOre*retaddr *label313 (h:*label313)
  1511 call *label11 *invalid :mineOre*retval (m:*label313) (h:*label313)
  1512 label *label313
-    * set *tmp312 null
  1513 jump *label312 always
  1514 label *label311
-    * set *tmp312 null
  1515 label *label312
  1516 label *label309
  1517 set :supplyBase0:supplied true
 
  1546 setaddr :mineOre*retaddr *label321 (h:*label321)
  1547 call *label11 *invalid :mineOre*retval (m:*label321) (h:*label321)
  1548 label *label321
-    * set *tmp320 null
  1549 jump *label320 always
  1550 label *label319
-    * set *tmp320 null
  1551 label *label320
  1552 label *label317
  1553 set :supplyBase0:supplied true
 
  1558 label *label315
  1559 set *tmp307 *tmp315
  1560 label *label307
-    * set *tmp304 *tmp307
  1561 jump *label305 always
  1562 label *label304
-    * set *tmp304 null
  1563 label *label305
  1564 sensor *tmp321 .battery @totalPower
  1565 op lessThan *tmp322 *tmp321 .powerTarget
 
  1592 setaddr :mineOre*retaddr *label331 (h:*label331)
  1593 call *label11 *invalid :mineOre*retval (m:*label331) (h:*label331)
  1594 label *label331
-    * set *tmp331 null
  1595 jump *label330 always
  1596 label *label329
-    * set *tmp331 null
  1597 label *label330
  1598 label *label327
  1599 set :supplyBase0:supplied true
 
  1607 label *label322
  1608 set *tmp323 null
  1609 label *label323
-    * set *tmp290 *tmp323
  1610 jump *label293 always
  1611 label *label292
-    * set *tmp290 null
  1612 label *label293
  1613 sensor *tmp332 .core @titanium
  1614 op lessThan *tmp333 *tmp332 .targetTitanium
 
  1739 label *label336
  1740 set *tmp342 null
  1741 label *label337
-    * set *tmp340 *tmp342
  1742 jump *label335 always
  1743 label *label334
  1744 set :status1.10:text "Goal 11: Fetching titanium"
 
  1749 setaddr :fetchBlock*retaddr *label365 (h:*label365)
  1750 call *label13 *invalid :fetchBlock*retval (m:*label365) (h:*label365)
  1751 label *label365
-    * set *tmp340 null
  1752 label *label335
  1753 label *label291
  1754 return :supplyBase0*retaddr
 
  1771 setaddr :supplyBase1*retaddr *label372 (h:*label372)
  1772 call *label20 *invalid :supplyBase1*retval (m:*label372) (h:*label372)
  1773 label *label372
-    * set *tmp368 null
  1774 jump *label371 always
  1775 label *label370
  1776 setaddr :supplyBase0*retaddr *label373 (h:*label373)
  1777 call *label19 *invalid :supplyBase0*retval (m:*label373) (h:*label373)
  1778 label *label373
-    * set *tmp368 null
  1779 label *label371
  1780 label *label369
  1781 return :supplyBase*retaddr
 
  1826 label *label377
  1827 set *tmp374 null
  1828 label *label378
-    * set *tmp371 *tmp374
  1829 jump *label376 always
  1830 label *label375
-    * set *tmp371 null
  1831 label *label376
  1832 set :targetMet*retval false
  1833 jump *label374 always
 
  1951 jump *label411 equal *tmp412 false
  1952 set :buildBlockAt*retval :buildBlockAt:building
  1953 jump *label406 always
-    * set *tmp413 null
  1954 jump *label412 always
  1955 label *label411
-    * set *tmp413 null
  1956 label *label412
  1957 jump *label413 equal :buildBlockAt:skipError false
  1958 set :buildBlockAt*retval null
  1959 jump *label406 always
-    * set *tmp414 null
  1960 jump *label414 always
  1961 label *label413
-    * set *tmp414 null
  1962 label *label414
  1963 set :error.4:error "Cannot build at ("
  1964 set .ERROR :error.4:error
  1965 stop
  1966 label *label415
-    * set *tmp411 null
  1967 jump *label410 always
  1968 label *label409
-    * set *tmp411 null
  1969 label *label410
  1970 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1971 wait 0.25
 
  1976 jump *label419 equal *tmp417 false
  1977 set :buildBlockAt*retval null
  1978 jump *label406 always
-    * set *tmp418 null
  1979 jump *label420 always
  1980 label *label419
-    * set *tmp418 null
  1981 label *label420
  1982 label *label417
  1983 op notEqual *tmp419 :buildBlockAt:type :buildBlockAt:block
 
  2026 op notEqual *tmp420 :findUnits:firstUnit null
  2027 jump *label426 equal *tmp420 false
  2028 label *label428
-    * set *tmp422 :findUnits:count
  2029 op add :findUnits:count :findUnits:count 1
  2030 ubind :findUnits:type
  2031 label *label429
  2032 op notEqual *tmp423 @unit :findUnits:firstUnit
  2033 jump *label428 notEqual *tmp423 false
  2034 label *label430
-    * set *tmp421 null
  2035 jump *label427 always
  2036 label *label426
-    * set *tmp421 null
  2037 label *label427
  2038 set :findUnits*retval :findUnits:count
  2039 label *label425

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-16 instructions):
 
  1394 ubind :findFreeUnit:unit_type
  1395 op equal *tmp279 @unit null
  1396 jump *label282 equal *tmp279 false
-    * set :findFreeUnit*retval null
  1397 jump *label281 always
  1398 jump *label283 always
  1399 label *label282
 
  1404 op equal *tmp282 *tmp281 0
  1405 jump *label287 equal *tmp282 false
  1406 ucontrol flag :findFreeUnit:initial_flag
-    * set :findFreeUnit*retval @unit
  1407 jump *label281 always
  1408 jump *label288 always
  1409 label *label287
 
  1412 jump *label289 equal *tmp285 false
  1413 set *tmp287 @unit
  1414 set :findFreeUnit:first_unit *tmp287
-    * set *tmp286 :findFreeUnit:first_unit
  1415 jump *label290 always
  1416 label *label289
-    * set *tmp286 null
  1417 label *label290
  1418 label *label288
  1419 ubind :findFreeUnit:unit_type
 
  1421 op notEqual *tmp288 :findFreeUnit:first_unit @unit
  1422 jump *label284 notEqual *tmp288 false
  1423 label *label286
-    * set :findFreeUnit*retval null
  1424 jump *label281 always
-    * set :findFreeUnit*retval null
  1425 label *label281
  1426 return :findFreeUnit*retaddr
  1427 end
 
  1465 label *label302
  1466 label *label299
  1467 set :supplyBase0:supplied true
-    * set *tmp296 :supplyBase0:supplied
  1468 jump *label297 always
  1469 label *label296
-    * set *tmp296 null
  1470 label *label297
  1471 jump *label295 always
  1472 label *label294
 
  1507 label *label312
  1508 label *label309
  1509 set :supplyBase0:supplied true
-    * set *tmp307 :supplyBase0:supplied
  1510 jump *label307 always
  1511 label *label306
  1512 sensor *tmp313 .smelter @sand
 
  1547 label *label314
  1548 set *tmp315 null
  1549 label *label315
-    * set *tmp307 *tmp315
  1550 label *label307
  1551 jump *label305 always
  1552 label *label304
 
  1592 label *label324
  1593 set *tmp326 null
  1594 label *label325
-    * set *tmp323 *tmp326
  1595 jump *label323 always
  1596 label *label322
-    * set *tmp323 null
  1597 label *label323
  1598 jump *label293 always
  1599 label *label292
 
  1722 label *label343
  1723 set *tmp346 *tmp349
  1724 label *label339
-    * set *tmp342 *tmp346
  1725 jump *label337 always
  1726 label *label336
-    * set *tmp342 null
  1727 label *label337
  1728 jump *label335 always
  1729 label *label334
 
  1807 label *label379
  1808 set *tmp377 null
  1809 label *label380
-    * set *tmp374 *tmp377
  1810 jump *label378 always
  1811 label *label377
-    * set *tmp374 null
  1812 label *label378
  1813 jump *label376 always
  1814 label *label375

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1542 label *label320
  1543 label *label317
  1544 set :supplyBase0:supplied true
-    * set *tmp315 :supplyBase0:supplied
  1545 jump *label315 always
  1546 label *label314
-    * set *tmp315 null
  1547 label *label315
  1548 label *label307
  1549 jump *label305 always
 
  1585 label *label330
  1586 label *label327
  1587 set :supplyBase0:supplied true
-    * set *tmp326 :supplyBase0:supplied
  1588 jump *label325 always
  1589 label *label324
-    * set *tmp326 null
  1590 label *label325
  1591 jump *label323 always
  1592 label *label322
 
  1622 setaddr :mineOre.1*retaddr *label341 (h:*label341)
  1623 call *label12 *invalid :mineOre.1*retval (m:*label341) (h:*label341)
  1624 label *label341
-    * set *tmp346 null
  1625 jump *label339 always
  1626 label *label338
  1627 sensor *tmp347 .core @silicon
 
  1715 label *label349
  1716 set *tmp349 *tmp356
  1717 label *label343
-    * set *tmp346 *tmp349
  1718 label *label339
  1719 jump *label337 always
  1720 label *label336
 
  1796 label *label381
  1797 set *tmp380 null
  1798 label *label382
-    * set *tmp377 *tmp380
  1799 jump *label380 always
  1800 label *label379
-    * set *tmp377 null
  1801 label *label380
  1802 jump *label378 always
  1803 label *label377

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1646 setaddr :mineOre.1*retaddr *label347 (h:*label347)
  1647 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
  1648 label *label347
-    * set *tmp349 null
  1649 jump *label343 always
  1650 label *label342
  1651 sensor *tmp354 .core @copper
 
  1712 label *label353
  1713 set *tmp356 *tmp359
  1714 label *label349
-    * set *tmp349 *tmp356
  1715 label *label343
  1716 label *label339
  1717 jump *label337 always
 
  1789 label *label383
  1790 set *tmp383 null
  1791 label *label384
-    * set *tmp380 *tmp383
  1792 jump *label382 always
  1793 label *label381
-    * set *tmp380 null
  1794 label *label382
  1795 jump *label380 always
  1796 label *label379

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1658 setaddr :mineOre.1*retaddr *label351 (h:*label351)
  1659 call *label12 *invalid :mineOre.1*retval (m:*label351) (h:*label351)
  1660 label *label351
-    * set *tmp356 null
  1661 jump *label349 always
  1662 label *label348
  1663 sensor *tmp357 .core @lead
 
  1709 label *label357
  1710 set *tmp359 *tmp362
  1711 label *label353
-    * set *tmp356 *tmp359
  1712 label *label349
  1713 label *label343
  1714 label *label339
 
  1782 label *label385
  1783 set *tmp386 null
  1784 label *label386
-    * set *tmp383 *tmp386
  1785 jump *label384 always
  1786 label *label383
-    * set *tmp383 null
  1787 label *label384
  1788 jump *label382 always
  1789 label *label381

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1670 setaddr :mineOre.1*retaddr *label355 (h:*label355)
  1671 call *label12 *invalid :mineOre.1*retval (m:*label355) (h:*label355)
  1672 label *label355
-    * set *tmp359 null
  1673 jump *label353 always
  1674 label *label352
  1675 sensor *tmp360 .core @metaglass
 
  1706 label *label363
  1707 set *tmp362 null
  1708 label *label357
-    * set *tmp359 *tmp362
  1709 label *label353
  1710 label *label349
  1711 label *label343
 
  1775 jump *label385 equal *tmp385 false
  1776 set :targetMet*retval true
  1777 jump *label374 always
-    * set *tmp386 null
  1778 jump *label386 always
  1779 label *label385
-    * set *tmp386 null
  1780 label *label386
  1781 jump *label384 always
  1782 label *label383

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1682 setaddr :mineOre.1*retaddr *label359 (h:*label359)
  1683 call *label12 *invalid :mineOre.1*retval (m:*label359) (h:*label359)
  1684 label *label359
-    * set *tmp362 null
  1685 jump *label357 always
  1686 label *label356
  1687 set :status1.9:text "Goal 10: supplying base"
 
  1703 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1704 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1705 label *label363
-    * set *tmp362 null
  1706 label *label357
  1707 label *label353
  1708 label *label349

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-82 instructions):
 
    18 write 511 bank1 511
    19 label *label29
    20 ubind @poly
-    * set *tmp80 @unit
-    * set .builder *tmp80
-    * ulocate building core false @copper .coreX .coreY *tmp82 *tmp81
-    * set .core *tmp81
+   21 set .builder @unit
+   22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label30
    24 op equal *tmp83 .core null
    25 jump *label29 notEqual *tmp83 false
 
    32 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
    33 label *label32
    34 write :findUnits:count .display ".monos"
-    * set *tmp85 :findUnits*retval
-    * set :monos *tmp85
+   35 set :monos :findUnits*retval
    36 set :findUnits:type @flare
    37 setaddr :findUnits*retaddr *label33 (h:*label33)
    38 call *label28 *invalid :findUnits*retval (m:*label33) (h:*label33)
    39 label *label33
    40 write :findUnits:count .display ".flares"
-    * set *tmp87 :findUnits*retval
-    * set :flares *tmp87
+   41 set :flares :findUnits*retval
    42 set :findUnits:type @poly
    43 setaddr :findUnits*retaddr *label34 (h:*label34)
    44 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    45 label *label34
    46 write :findUnits:count .display ".polys"
-    * set *tmp89 :findUnits*retval
-    * set :polys *tmp89
+   47 set :polys :findUnits*retval
    48 set :buildBlockFromCfg:block @graphite-press
    49 set :buildBlockFromCfg:offsetX -1.5
    50 set :buildBlockFromCfg:offsetY 2.5
 
    58 set :buildBlockFromCfg:config null
    59 setaddr *tmp91 *label39
    60 label *label36
-    * op add *tmp92 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp92
-    * op add *tmp93 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp93
+   61 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   62 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    63 set :buildBlock:block :buildBlockFromCfg:block
    64 set :buildBlock:x :buildBlockFromCfg:x
    65 set :buildBlock:y :buildBlockFromCfg:y
 
    96 set :buildBlockFromCfg.1:config null
    97 setaddr *tmp95 *label45
    98 label *label42
-    * op add *tmp96 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp96
-    * op add *tmp97 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp97
+   99 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+  100 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
   101 set :buildBlock:block :buildBlockFromCfg.1:block
   102 set :buildBlock:x :buildBlockFromCfg.1:x
   103 set :buildBlock:y :buildBlockFromCfg.1:y
 
   134 set :buildBlockFromCfg.2:config null
   135 setaddr *tmp99 *label51
   136 label *label48
-    * op add *tmp100 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp100
-    * op add *tmp101 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp101
+  137 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  138 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   139 set :buildBlock:block :buildBlockFromCfg.2:block
   140 set :buildBlock:x :buildBlockFromCfg.2:x
   141 set :buildBlock:y :buildBlockFromCfg.2:y
 
   169 set :buildBlockFromCfg.3:config null
   170 setaddr *tmp103 *label57
   171 label *label54
-    * op add *tmp104 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp104
-    * op add *tmp105 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp105
+  172 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  173 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   174 set :buildBlock:block :buildBlockFromCfg.3:block
   175 set :buildBlock:x :buildBlockFromCfg.3:x
   176 set :buildBlock:y :buildBlockFromCfg.3:y
 
   208 set :buildBlockFromCfg.4:config null
   209 setaddr *tmp107 *label63
   210 label *label60
-    * op add *tmp108 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp108
-    * op add *tmp109 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp109
+  211 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  212 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   213 set :buildBlock:block :buildBlockFromCfg.4:block
   214 set :buildBlock:x :buildBlockFromCfg.4:x
   215 set :buildBlock:y :buildBlockFromCfg.4:y
 
   258 wait 1e-15
   259 read *tmp121 .oreLocator ":findDrillLocation*finished"
   260 jump *label68 equal *tmp121 false
-    * read *tmp118 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp118
-    * read *tmp119 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp119
-    * read *tmp122 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp122
+  261 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  262 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  263 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   264 op equal *tmp123 :buildTitaniumDrill:result false
   265 jump *label69 equal *tmp123 false
   266 set :error:error "Cannot locate spot for titanium drill"
 
   299 set :buildBlockFromCfg.5:config null
   300 setaddr *tmp126 *label77
   301 label *label74
-    * op add *tmp127 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp127
-    * op add *tmp128 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp128
+  302 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  303 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   304 set :buildBlock:block :buildBlockFromCfg.5:block
   305 set :buildBlock:x :buildBlockFromCfg.5:x
   306 set :buildBlock:y :buildBlockFromCfg.5:y
 
   337 set :buildBlockFromCfg.6:config processor2
   338 setaddr *tmp130 *label83
   339 label *label80
-    * op add *tmp131 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp131
-    * op add *tmp132 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp132
+  340 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  341 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   342 set :buildBlock:block :buildBlockFromCfg.6:block
   343 set :buildBlock:x :buildBlockFromCfg.6:x
   344 set :buildBlock:y :buildBlockFromCfg.6:y
 
   385 set :buildBlockFromCfg.7:config null
   386 setaddr *tmp134 *label89
   387 label *label86
-    * op add *tmp135 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp135
-    * op add *tmp136 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp136
+  388 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  389 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   390 set :buildBlock:block :buildBlockFromCfg.7:block
   391 set :buildBlock:x :buildBlockFromCfg.7:x
   392 set :buildBlock:y :buildBlockFromCfg.7:y
 
   420 set :buildBlockFromCfg.8:config null
   421 setaddr *tmp138 *label95
   422 label *label92
-    * op add *tmp139 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp139
-    * op add *tmp140 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp140
+  423 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  424 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   425 set :buildBlock:block :buildBlockFromCfg.8:block
   426 set :buildBlock:x :buildBlockFromCfg.8:x
   427 set :buildBlock:y :buildBlockFromCfg.8:y
 
   459 set :buildBlockFromCfg.9:config null
   460 setaddr *tmp142 *label101
   461 label *label98
-    * op add *tmp143 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp143
-    * op add *tmp144 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp144
+  462 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  463 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   464 set :buildBlock:block :buildBlockFromCfg.9:block
   465 set :buildBlock:x :buildBlockFromCfg.9:x
   466 set :buildBlock:y :buildBlockFromCfg.9:y
 
   494 set :buildBlockFromCfg.10:config @mono
   495 setaddr *tmp146 *label107
   496 label *label104
-    * op add *tmp147 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp147
-    * op add *tmp148 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp148
+  497 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  498 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   499 set :buildBlock:block :buildBlockFromCfg.10:block
   500 set :buildBlock:x :buildBlockFromCfg.10:x
   501 set :buildBlock:y :buildBlockFromCfg.10:y
 
   611 set :buildBlockFromCfg.11:config null
   612 setaddr *tmp168 *label127
   613 label *label124
-    * op add *tmp169 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp169
-    * op add *tmp170 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp170
+  614 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  615 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   616 set :buildBlock:block :buildBlockFromCfg.11:block
   617 set :buildBlock:x :buildBlockFromCfg.11:x
   618 set :buildBlock:y :buildBlockFromCfg.11:y
 
   646 set :buildBlockFromCfg.12:config null
   647 setaddr *tmp172 *label133
   648 label *label130
-    * op add *tmp173 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp173
-    * op add *tmp174 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp174
+  649 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  650 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   651 set :buildBlock:block :buildBlockFromCfg.12:block
   652 set :buildBlock:x :buildBlockFromCfg.12:x
   653 set :buildBlock:y :buildBlockFromCfg.12:y
 
   685 set :buildBlockFromCfg.13:config null
   686 setaddr *tmp176 *label139
   687 label *label136
-    * op add *tmp177 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp177
-    * op add *tmp178 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp178
+  688 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  689 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   690 set :buildBlock:block :buildBlockFromCfg.13:block
   691 set :buildBlock:x :buildBlockFromCfg.13:x
   692 set :buildBlock:y :buildBlockFromCfg.13:y
 
   720 set :buildBlockFromCfg.14:config null
   721 setaddr *tmp180 *label145
   722 label *label142
-    * op add *tmp181 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp181
-    * op add *tmp182 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp182
+  723 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  724 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   725 set :buildBlock:block :buildBlockFromCfg.14:block
   726 set :buildBlock:x :buildBlockFromCfg.14:x
   727 set :buildBlock:y :buildBlockFromCfg.14:y
 
   755 set :buildBlockFromCfg.15:config null
   756 setaddr *tmp184 *label151
   757 label *label148
-    * op add *tmp185 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp185
-    * op add *tmp186 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp186
+  758 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  759 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   760 set :buildBlock:block :buildBlockFromCfg.15:block
   761 set :buildBlock:x :buildBlockFromCfg.15:x
   762 set :buildBlock:y :buildBlockFromCfg.15:y
 
   835 wait 1e-15
   836 read *tmp196 .oreLocator ":layoutThoriumDrill*finished"
   837 jump *label167 equal *tmp196 false
-    * read *tmp197 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp197
+  838 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   839 op equal *tmp198 :buildThoriumDrill:result false
   840 jump *label168 equal *tmp198 false
   841 set :error.1:error "Cannot locate spot for thorium drill"
 
   846 label *label168
   847 label *label169
   848 set :buildBlockAt:block @laser-drill
-    * read *tmp65 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp65
-    * read *tmp66 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp66
+  849 read :buildBlockAt:x .oreLocator ".drillX"
+  850 read :buildBlockAt:y .oreLocator ".drillY"
   851 set :buildBlockAt:rotation null
   852 set :buildBlockAt:config 0
   853 set :buildBlockAt:skipError false
   854 setaddr :buildBlockAt*retaddr *label171 (h:*label171)
   855 call *label26 *invalid :buildBlockAt*retval (m:*label171) (h:*label171)
   856 label *label171
-    * set *tmp200 :buildBlockAt*retval
-    * set .thoriumDrill *tmp200
+  857 set .thoriumDrill :buildBlockAt*retval
   858 read *tmp67 .oreLocator ".water1X"
   859 op lessThan *tmp201 *tmp67 0
   860 jump *label172 equal *tmp201 false
 
   876 set :buildBlockAt:block @water-extractor
   877 read *tmp67 .oreLocator ".water1X"
   878 set :buildBlockAt:x *tmp67
-    * read *tmp68 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp68
+  879 read :buildBlockAt:y .oreLocator ".water1Y"
   880 set :buildBlockAt:rotation null
   881 set :buildBlockAt:config 0
   882 set :buildBlockAt:skipError false
 
   904 set :buildBlockAt:block @water-extractor
   905 read *tmp69 .oreLocator ".water2X"
   906 set :buildBlockAt:x *tmp69
-    * read *tmp70 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp70
+  907 read :buildBlockAt:y .oreLocator ".water2Y"
   908 set :buildBlockAt:rotation null
   909 set :buildBlockAt:config 0
   910 set :buildBlockAt:skipError false
 
   923 label *label183
   924 label *label182
   925 set :buildBlockAt:block @steam-generator
-    * read *tmp71 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp71
-    * read *tmp72 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp72
+  926 read :buildBlockAt:x .oreLocator ".generatorX"
+  927 read :buildBlockAt:y .oreLocator ".generatorY"
   928 set :buildBlockAt:rotation null
   929 set :buildBlockAt:config 0
   930 set :buildBlockAt:skipError false
   931 setaddr :buildBlockAt*retaddr *label184 (h:*label184)
   932 call *label26 *invalid :buildBlockAt*retval (m:*label184) (h:*label184)
   933 label *label184
-    * set *tmp207 :buildBlockAt*retval
-    * set .thoriumGenerator *tmp207
+  934 set .thoriumGenerator :buildBlockAt*retval
   935 set :meetTarget:block @power-node
   936 set :meetTarget:copper 2
   937 set :meetTarget:lead 6
 
   944 label *label186
   945 label *label185
   946 set :buildBlockAt:block @power-node
-    * read *tmp73 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp73
-    * read *tmp74 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp74
+  947 read :buildBlockAt:x .oreLocator ".nodeX"
+  948 read :buildBlockAt:y .oreLocator ".nodeY"
   949 set :buildBlockAt:rotation null
   950 set :buildBlockAt:config 0
   951 set :buildBlockAt:skipError false
 
   964 label *label189
   965 label *label188
   966 set :buildBlockAt:block @solar-panel
-    * read *tmp75 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp75
-    * read *tmp76 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp76
+  967 read :buildBlockAt:x .oreLocator ".panelX"
+  968 read :buildBlockAt:y .oreLocator ".panelY"
   969 set :buildBlockAt:rotation null
   970 set :buildBlockAt:config 0
   971 set :buildBlockAt:skipError false
 
   984 label *label192
   985 label *label191
   986 set :buildBlockAt:block @battery
-    * read *tmp77 .oreLocator ".batteryX"
-    * set :buildBlockAt:x *tmp77
-    * read *tmp78 .oreLocator ".batteryY"
-    * set :buildBlockAt:y *tmp78
+  987 read :buildBlockAt:x .oreLocator ".batteryX"
+  988 read :buildBlockAt:y .oreLocator ".batteryY"
   989 set :buildBlockAt:rotation null
   990 set :buildBlockAt:config 0
   991 set :buildBlockAt:skipError false
 
  1015 set :buildBlockFromCfg.16:config @coal
  1016 setaddr *tmp215 *label199
  1017 label *label196
-    * op add *tmp216 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp216
-    * op add *tmp217 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp217
+ 1018 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+ 1019 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
  1020 set :buildBlock:block :buildBlockFromCfg.16:block
  1021 set :buildBlock:x :buildBlockFromCfg.16:x
  1022 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1137 setaddr :moveToBlock*retaddr *label231 (h:*label231)
  1138 call *label8 *invalid :moveToBlock*retval (m:*label231) (h:*label231)
  1139 label *label231
-    * sensor *tmp235 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp235
+ 1140 sensor :depositItems:cap :depositItems:block @itemCapacity
  1141 label *label232
  1142 ucontrol itemDrop :depositItems:block 30
  1143 label *label233
 
  1167 return :depositItems*retaddr
  1168 end
  1169 label *label10
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 *tmp243
+ 1170 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 0
  1171 op equal *tmp244 *tmp242 false
  1172 jump *label240 equal *tmp244 false
  1173 set :error.3:error "Cannot locate ore"
 
  1181 return :locateOre*retaddr
  1182 end
  1183 label *label11
-    * op min *tmp246 :mineOre:amount 30
-    * set :mineOre:amount *tmp246
+ 1184 op min :mineOre:amount :mineOre:amount 30
  1185 set :transportStatus.1:target :mineOre:amount
  1186 set :transportStatus.1:item :mineOre:ore
  1187 write :transportStatus.1:target .display ".transportTarget"
 
  1219 op mul :second:result @second TIME_COMPRESS
  1220 set *tmp252 :second:result
  1221 label *label254
-    * op add *tmp253 *tmp252 10
-    * set :mineOre:stop *tmp253
+ 1222 op add :mineOre:stop *tmp252 10
  1223 label *label255
-    * sensor *tmp254 @unit @firstItem
-    * set :mineOre:item *tmp254
+ 1224 sensor :mineOre:item @unit @firstItem
  1225 op notEqual *tmp255 :mineOre:item null
  1226 op notEqual *tmp256 :mineOre:item :mineOre:ore
  1227 op land *tmp257 *tmp255 *tmp256
 
  1262 write :status2:item .display ".item2"
  1263 write :status2:block .display ".block2"
  1264 label *label265
-    * set *tmp264 :mineOre.1:ore
-    * set :mineOre:ore *tmp264
+ 1265 set :mineOre:ore :mineOre.1:ore
  1266 set :mineOre:amount 30
  1267 set :mineOre:block .core
  1268 setaddr :mineOre*retaddr *label266 (h:*label266)
 
  1272 return :mineOre.1*retaddr
  1273 end
  1274 label *label13
-    * sensor *tmp265 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp265
+ 1275 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1276 set :transportStatus.2:item :fetchBlock:item
  1277 write :transportStatus.2:target .display ".transportTarget"
  1278 write :transportStatus.2:item .display ".transportItem"
 
  1302 label *label271
  1303 label *label275
  1304 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp270 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp270
+ 1305 sensor :fetchBlock:unitItem @unit @firstItem
  1306 op notEqual *tmp271 :fetchBlock:unitItem null
  1307 op notEqual *tmp272 :fetchBlock:unitItem :fetchBlock:item
  1308 op land *tmp273 *tmp271 *tmp272
 
  1346 sensor *tmp284 :findFreeUnit:first_unit @dead
  1347 op equal *tmp285 *tmp284 1
  1348 jump *label289 equal *tmp285 false
-    * set *tmp287 @unit
-    * set :findFreeUnit:first_unit *tmp287
+ 1349 set :findFreeUnit:first_unit @unit
  1350 jump *label290 always
  1351 label *label289
  1352 label *label290
 
  1382 write :status2.2:item .display ".item2"
  1383 write :status2.2:block .display ".block2"
  1384 label *label300
-    * sensor *tmp297 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp297
+ 1385 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1386 sensor *tmp298 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp299 :supplyBlock:blockCapacity *tmp298
-    * set :supplyBlock:missing *tmp299
+ 1387 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp298
  1388 op greaterThan *tmp300 :supplyBlock:missing 0
  1389 jump *label301 equal *tmp300 false
  1390 set :mineOre:ore :supplyBlock:ore
 
  1422 write :status2.3:item .display ".item2"
  1423 write :status2.3:block .display ".block2"
  1424 label *label310
-    * sensor *tmp308 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp308
+ 1425 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1426 sensor *tmp309 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp310 :supplyBlock.1:blockCapacity *tmp309
-    * set :supplyBlock.1:missing *tmp310
+ 1427 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp309
  1428 op greaterThan *tmp311 :supplyBlock.1:missing 0
  1429 jump *label311 equal *tmp311 false
  1430 set :mineOre:ore :supplyBlock.1:ore
 
  1455 write :status2.4:item .display ".item2"
  1456 write :status2.4:block .display ".block2"
  1457 label *label318
-    * sensor *tmp316 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp316
+ 1458 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1459 sensor *tmp317 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp318 :supplyBlock.2:blockCapacity *tmp317
-    * set :supplyBlock.2:missing *tmp318
+ 1460 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp317
  1461 op greaterThan *tmp319 :supplyBlock.2:missing 0
  1462 jump *label319 equal *tmp319 false
  1463 set :mineOre:ore :supplyBlock.2:ore
 
  1496 write :status2.5:item .display ".item2"
  1497 write :status2.5:block .display ".block2"
  1498 label *label328
-    * sensor *tmp327 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp327
+ 1499 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1500 sensor *tmp328 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp329 :supplyBlock.3:blockCapacity *tmp328
-    * set :supplyBlock.3:missing *tmp329
+ 1501 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp328
  1502 op greaterThan *tmp330 :supplyBlock.3:missing 0
  1503 jump *label329 equal *tmp330 false
  1504 set :mineOre:ore :supplyBlock.3:ore
 
  1526 jump *label332 equal *tmp333 false
  1527 sensor *tmp335 .core @titanium
  1528 op sub *tmp336 .targetTitanium *tmp335
-    * op min *tmp337 7 *tmp336
-    * set *tmp334 *tmp337
+ 1529 op min *tmp334 7 *tmp336
  1530 jump *label333 always
  1531 label *label332
  1532 set *tmp334 100
 
  1556 set :status1.5:text "Goal 6: silicon requirement"
  1557 write :status1.5:text .display ".status1"
  1558 label *label344
-    * sensor *tmp350 .core @coal
-    * set :supplyBase0:coal *tmp350
-    * sensor *tmp351 .core @sand
-    * set :supplyBase0:sand *tmp351
+ 1559 sensor :supplyBase0:coal .core @coal
+ 1560 sensor :supplyBase0:sand .core @sand
  1561 op lessThan *tmp352 :supplyBase0:coal :supplyBase0:sand
  1562 jump *label345 equal *tmp352 false
  1563 set *tmp353 @coal
 
  1611 set :status1.9:text "Goal 10: supplying base"
  1612 write :status1.9:text .display ".status1"
  1613 label *label360
-    * sensor *tmp363 .core @coal
-    * set :supplyBase0:coal.1 *tmp363
-    * sensor *tmp364 .core @sand
-    * set :supplyBase0:sand.1 *tmp364
+ 1614 sensor :supplyBase0:coal.1 .core @coal
+ 1615 sensor :supplyBase0:sand.1 .core @sand
  1616 op lessThanEq *tmp365 :supplyBase0:coal.1 :supplyBase0:sand.1
  1617 jump *label361 equal *tmp365 false
  1618 set *tmp366 @coal
 
  1759 write :meetTarget:titanium .display ".targetTitanium"
  1760 write :meetTarget:metaglass .display ".targetMetaglass"
  1761 set .targetCopper :meetTarget:copper
-    * op add *tmp389 :meetTarget:lead .leadSurplus
-    * set .targetLead *tmp389
+ 1762 op add .targetLead :meetTarget:lead .leadSurplus
  1763 set .targetGraphite :meetTarget:graphite
  1764 set .targetSilicon :meetTarget:silicon
  1765 set .targetTitanium :meetTarget:titanium
 
  1809 return :log*retaddr
  1810 end
  1811 label *label25
-    * sensor *tmp407 :logBlock:block @id
-    * set :log:encodedId *tmp407
+ 1812 sensor :log:encodedId :logBlock:block @id
  1813 setaddr :log*retaddr *label405 (h:*label405)
  1814 call *label24 *invalid :log*retval (m:*label405) (h:*label405)
  1815 label *label405
 
  1825 set :status3.4:text "Building..."
  1826 write :status3.4:text .display ".status3"
  1827 label *label408
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp408 *tmp409
-    * set :buildBlockAt:building *tmp408
+ 1828 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1829 op notEqual *tmp410 :buildBlockAt:building null
  1830 jump *label409 equal *tmp410 false
  1831 op equal *tmp412 :buildBlockAt:type :buildBlockAt:block
 
  1851 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1852 wait 0.25
  1853 label *label416
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp415 *tmp416
-    * set :buildBlockAt:building *tmp415
+ 1854 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1855 op equal *tmp417 :buildBlockAt:building null
  1856 jump *label419 equal *tmp417 false
  1857 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1051 jump *label201 notEqual *tmp219 false
  1052 label *label203
  1053 label *label205
-    * jump *label207 equal true false
  1054 setaddr :supplyBase*retaddr *label208 (h:*label208)
  1055 call *label21 *invalid :supplyBase*retval (m:*label208) (h:*label208)
  1056 label *label208

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-62 instructions):
 
    21 set .builder @unit
    22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label30
-    * op equal *tmp83 .core null
-    * jump *label29 notEqual *tmp83 false
+   24 jump *label29 equal .core null
    25 label *label31
    26 set .display processor1
    27 set .flareController processor3
 
   260 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   261 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   262 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp123 :buildTitaniumDrill:result false
-    * jump *label69 equal *tmp123 false
+  263 jump *label69 notEqual :buildTitaniumDrill:result false
   264 set :error:error "Cannot locate spot for titanium drill"
   265 set .ERROR :error:error
   266 stop
 
   577 call *label21 *invalid :supplyBase*retval (m:*label119) (h:*label119)
   578 label *label119
   579 sensor *tmp160 .battery @totalPower
-    * op lessThan *tmp161 *tmp160 300
-    * jump *label120 equal *tmp161 false
+  580 jump *label120 greaterThanEq *tmp160 300
   581 jump *label114 always
   582 jump *label121 always
   583 label *label120
   584 label *label121
   585 label *label113
   586 read *tmp35 .controller ".monos"
-    * op lessThan *tmp163 *tmp35 3
-    * jump *label112 notEqual *tmp163 false
+  587 jump *label112 lessThan *tmp35 3
   588 label *label114
   589 write .core .flareController ":start:aCore"
   590 write .titaniumDrill .flareController ":start:drill"
 
   783 jump *label153 equal :searchThorium false
   784 label *label155
   785 read *tmp36 .controller ".flares"
-    * op lessThan *tmp188 *tmp36 1
-    * jump *label157 equal *tmp188 false
+  786 jump *label157 greaterThanEq *tmp36 1
   787 setaddr :supplyBase*retaddr *label158 (h:*label158)
   788 call *label21 *invalid :supplyBase*retval (m:*label158) (h:*label158)
   789 label *label158
 
   809 label *label163
   810 label *label161
   811 read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp195 *tmp194 false
-    * jump *label160 notEqual *tmp195 false
+  812 jump *label160 equal *tmp194 false
   813 label *label162
   814 jump *label154 always
   815 label *label153
 
   830 read *tmp196 .oreLocator ":layoutThoriumDrill*finished"
   831 jump *label167 equal *tmp196 false
   832 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp198 :buildThoriumDrill:result false
-    * jump *label168 equal *tmp198 false
+  833 jump *label168 notEqual :buildThoriumDrill:result false
   834 set :error.1:error "Cannot locate spot for thorium drill"
   835 set .ERROR :error.1:error
   836 stop
 
   849 label *label171
   850 set .thoriumDrill :buildBlockAt*retval
   851 read *tmp67 .oreLocator ".water1X"
-    * op lessThan *tmp201 *tmp67 0
-    * jump *label172 equal *tmp201 false
+  852 jump *label172 greaterThanEq *tmp67 0
   853 jump *label164 always
   854 jump *label173 always
   855 label *label172
 
   876 call *label26 *invalid :buildBlockAt*retval (m:*label176) (h:*label176)
   877 label *label176
   878 read *tmp69 .oreLocator ".water2X"
-    * op lessThan *tmp204 *tmp69 0
-    * jump *label177 equal *tmp204 false
+  879 jump *label177 greaterThanEq *tmp69 0
   880 jump *label164 always
   881 jump *label178 always
   882 label *label177
 
  1038 read *tmp36 .controller ".flares"
  1039 read *tmp35 .controller ".monos"
  1040 op add *tmp218 *tmp36 *tmp35
-    * op lessThan *tmp219 *tmp218 16
-    * jump *label201 notEqual *tmp219 false
+ 1041 jump *label201 lessThan *tmp218 16
  1042 label *label203
  1043 label *label205
  1044 setaddr :supplyBase*retaddr *label208 (h:*label208)
 
  1059 label *label212
  1060 label *label213
  1061 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp220
-    * op equal *tmp221 *tmp220 false
-    * jump *label215 equal *tmp221 false
+ 1062 jump *label215 notEqual *tmp220 false
  1063 op sub *tmp222 :moveTo:radius 0.5
  1064 ucontrol approach :moveTo:x :moveTo:y *tmp222
  1065 label *label214
 
  1086 label *label219
  1087 label *label220
  1088 sensor *tmp225 @unit @firstItem
-    * op notEqual *tmp226 *tmp225 null
-    * jump *label223 equal *tmp226 false
+ 1089 jump *label223 equal *tmp225 null
  1090 ucontrol itemDrop @air 1000
  1091 jump *label224 always
  1092 label *label223
 
  1094 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1095 label *label221
  1096 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp228
-    * op equal *tmp229 *tmp228 false
-    * jump *label220 notEqual *tmp229 false
+ 1097 jump *label220 equal *tmp228 false
  1098 label *label222
  1099 label *label218
  1100 return :moveToEmpty*retaddr
 
  1116 write :status3.2:text .display ".status3"
  1117 label *label228
  1118 sensor *tmp232 @unit @firstItem
-    * op equal *tmp233 *tmp232 :depositItems:item
-    * jump *label229 equal *tmp233 false
+ 1119 jump *label229 notEqual *tmp232 :depositItems:item
  1120 set :moveToBlock:block :depositItems:block
  1121 set :moveToBlock:radius 6
  1122 setaddr :moveToBlock*retaddr *label231 (h:*label231)
 
  1129 sensor *tmp236 @unit @firstItem
  1130 op mul *tmp237 *tmp236 :depositItems:cap
  1131 sensor *tmp238 :depositItems:block :depositItems:item
-    * op greaterThan *tmp239 *tmp237 *tmp238
-    * jump *label232 notEqual *tmp239 false
+ 1132 jump *label232 greaterThan *tmp237 *tmp238
  1133 label *label234
  1134 jump *label230 always
  1135 label *label229
  1136 label *label235
  1137 sensor *tmp240 @unit @firstItem
-    * op notEqual *tmp241 *tmp240 null
-    * jump *label237 equal *tmp241 false
+ 1138 jump *label237 equal *tmp240 null
  1139 ucontrol itemDrop @air 1000
  1140 label *label236
  1141 jump *label235 always
 
  1151 end
  1152 label *label10
  1153 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 0
-    * op equal *tmp244 *tmp242 false
-    * jump *label240 equal *tmp244 false
+ 1154 jump *label240 notEqual *tmp242 false
  1155 set :error.3:error "Cannot locate ore"
  1156 set .ERROR :error.3:error
  1157 stop
 
  1181 call *label7 *invalid :moveToEmpty*retval (m:*label246) (h:*label246)
  1182 label *label246
  1183 sensor *tmp247 @unit @firstItem
-    * op notEqual *tmp248 *tmp247 :mineOre:ore
-    * jump *label247 equal *tmp248 false
+ 1184 jump *label247 equal *tmp247 :mineOre:ore
  1185 label *label250
  1186 sensor *tmp250 @unit @firstItem
-    * op notEqual *tmp251 *tmp250 null
-    * jump *label252 equal *tmp251 false
+ 1187 jump *label252 equal *tmp250 null
  1188 ucontrol itemDrop @air 1000
  1189 label *label251
  1190 jump *label250 always
 
  1214 op mul :second.1:result @second TIME_COMPRESS
  1215 set *tmp259 :second.1:result
  1216 label *label260
-    * op greaterThan *tmp260 *tmp259 :mineOre:stop
-    * jump *label261 equal *tmp260 false
+ 1217 jump *label261 lessThanEq *tmp259 :mineOre:stop
  1218 jump *label257 always
  1219 jump *label262 always
  1220 label *label261
  1221 label *label262
  1222 label *label256
  1223 sensor *tmp262 @unit @totalItems
-    * op lessThan *tmp263 *tmp262 :mineOre:amount
-    * jump *label255 notEqual *tmp263 false
+ 1224 jump *label255 lessThan *tmp262 :mineOre:amount
  1225 label *label257
  1226 ucontrol unbind
  1227 set :depositItems:block :mineOre:block
 
  1271 label *label270
  1272 label *label272
  1273 sensor *tmp268 @unit @firstItem
-    * op notEqual *tmp269 *tmp268 null
-    * jump *label274 equal *tmp269 false
+ 1274 jump *label274 equal *tmp268 null
  1275 ucontrol itemDrop @air 1000
  1276 label *label273
  1277 jump *label272 always
 
  1305 end
  1306 label *label15
  1307 ubind :findFreeUnit:unit_type
-    * op equal *tmp279 @unit null
-    * jump *label282 equal *tmp279 false
+ 1308 jump *label282 notEqual @unit null
  1309 jump *label281 always
  1310 jump *label283 always
  1311 label *label282
 
  1313 set :findFreeUnit:first_unit @unit
  1314 label *label284
  1315 sensor *tmp281 @unit @controlled
-    * op equal *tmp282 *tmp281 0
-    * jump *label287 equal *tmp282 false
+ 1316 jump *label287 notEqual *tmp281 0
  1317 ucontrol flag :findFreeUnit:initial_flag
  1318 jump *label281 always
  1319 jump *label288 always
  1320 label *label287
  1321 sensor *tmp284 :findFreeUnit:first_unit @dead
-    * op equal *tmp285 *tmp284 1
-    * jump *label289 equal *tmp285 false
+ 1322 jump *label289 notEqual *tmp284 1
  1323 set :findFreeUnit:first_unit @unit
  1324 jump *label290 always
  1325 label *label289
 
  1327 label *label288
  1328 ubind :findFreeUnit:unit_type
  1329 label *label285
-    * op notEqual *tmp288 :findFreeUnit:first_unit @unit
-    * jump *label284 notEqual *tmp288 false
+ 1330 jump *label284 notEqual :findFreeUnit:first_unit @unit
  1331 label *label286
  1332 jump *label281 always
  1333 label *label281
 
  1335 end
  1336 label *label19
  1337 set :supplyBase0:supplied false
-    * op equal *tmp289 .unloader1 null
-    * jump *label292 equal *tmp289 false
+ 1338 jump *label292 notEqual .unloader1 null
  1339 sensor *tmp291 .core @graphite
-    * op lessThan *tmp292 *tmp291 .targetGraphite
-    * jump *label294 equal *tmp292 false
+ 1340 jump *label294 greaterThanEq *tmp291 .targetGraphite
  1341 sensor *tmp294 .press @coal
-    * op lessThan *tmp295 *tmp294 5
-    * jump *label296 equal *tmp295 false
+ 1342 jump *label296 greaterThanEq *tmp294 5
  1343 set :status1:text "Goal 1: graphite requirement"
  1344 write :status1:text .display ".status1"
  1345 label *label298
 
  1355 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1356 sensor *tmp298 :supplyBlock:block :supplyBlock:ore
  1357 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp298
-    * op greaterThan *tmp300 :supplyBlock:missing 0
-    * jump *label301 equal *tmp300 false
+ 1358 jump *label301 lessThanEq :supplyBlock:missing 0
  1359 set :mineOre:ore :supplyBlock:ore
  1360 set :mineOre:amount :supplyBlock:blockCapacity
  1361 set :mineOre:block :supplyBlock:block
 
  1374 label *label294
  1375 label *label295
  1376 sensor *tmp302 .core @silicon
-    * op lessThan *tmp303 *tmp302 .targetSilicon
-    * jump *label304 equal *tmp303 false
+ 1377 jump *label304 greaterThanEq *tmp302 .targetSilicon
  1378 sensor *tmp305 .smelter @coal
-    * op lessThan *tmp306 *tmp305 5
-    * jump *label306 equal *tmp306 false
+ 1379 jump *label306 greaterThanEq *tmp305 5
  1380 set :status1.1:text "Goal 2: coal for silicon requirement"
  1381 write :status1.1:text .display ".status1"
  1382 label *label308
 
  1392 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1393 sensor *tmp309 :supplyBlock.1:block :supplyBlock.1:ore
  1394 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp309
-    * op greaterThan *tmp311 :supplyBlock.1:missing 0
-    * jump *label311 equal *tmp311 false
+ 1395 jump *label311 lessThanEq :supplyBlock.1:missing 0
  1396 set :mineOre:ore :supplyBlock.1:ore
  1397 set :mineOre:amount :supplyBlock.1:blockCapacity
  1398 set :mineOre:block :supplyBlock.1:block
 
  1407 jump *label307 always
  1408 label *label306
  1409 sensor *tmp313 .smelter @sand
-    * op lessThan *tmp314 *tmp313 5
-    * jump *label314 equal *tmp314 false
+ 1410 jump *label314 greaterThanEq *tmp313 5
  1411 set :status1.2:text "Goal 3: sand for silicon requirement"
  1412 write :status1.2:text .display ".status1"
  1413 label *label316
 
  1423 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1424 sensor *tmp317 :supplyBlock.2:block :supplyBlock.2:ore
  1425 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp317
-    * op greaterThan *tmp319 :supplyBlock.2:missing 0
-    * jump *label319 equal *tmp319 false
+ 1426 jump *label319 lessThanEq :supplyBlock.2:missing 0
  1427 set :mineOre:ore :supplyBlock.2:ore
  1428 set :mineOre:amount :supplyBlock.2:blockCapacity
  1429 set :mineOre:block :supplyBlock.2:block
 
  1443 label *label304
  1444 label *label305
  1445 sensor *tmp321 .battery @totalPower
-    * op lessThan *tmp322 *tmp321 .powerTarget
-    * jump *label322 equal *tmp322 false
+ 1446 jump *label322 greaterThanEq *tmp321 .powerTarget
  1447 sensor *tmp324 .generator @coal
-    * op lessThan *tmp325 *tmp324 2
-    * jump *label324 equal *tmp325 false
+ 1448 jump *label324 greaterThanEq *tmp324 2
  1449 set :status1.3:text "Goal 4: supplying generator"
  1450 write :status1.3:text .display ".status1"
  1451 label *label326
 
  1461 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1462 sensor *tmp328 :supplyBlock.3:block :supplyBlock.3:ore
  1463 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp328
-    * op greaterThan *tmp330 :supplyBlock.3:missing 0
-    * jump *label329 equal *tmp330 false
+ 1464 jump *label329 lessThanEq :supplyBlock.3:missing 0
  1465 set :mineOre:ore :supplyBlock.3:ore
  1466 set :mineOre:amount :supplyBlock.3:blockCapacity
  1467 set :mineOre:block :supplyBlock.3:block
 
  1483 label *label292
  1484 label *label293
  1485 sensor *tmp332 .core @titanium
-    * op lessThan *tmp333 *tmp332 .targetTitanium
-    * jump *label332 equal *tmp333 false
+ 1486 jump *label332 greaterThanEq *tmp332 .targetTitanium
  1487 sensor *tmp335 .core @titanium
  1488 op sub *tmp336 .targetTitanium *tmp335
  1489 op min *tmp334 7 *tmp336
 
  1493 label *label333
  1494 set :supplyBase0:titaniumTrigger *tmp334
  1495 sensor *tmp338 .titaniumDrill @titanium
-    * op lessThan *tmp339 *tmp338 :supplyBase0:titaniumTrigger
-    * jump *label334 equal *tmp339 false
-    * op equal *tmp341 :supplyBase0:supplied false
-    * jump *label336 equal *tmp341 false
+ 1496 jump *label334 greaterThanEq *tmp338 :supplyBase0:titaniumTrigger
+ 1497 jump *label336 notEqual :supplyBase0:supplied false
  1498 sensor *tmp343 .battery @totalPower
  1499 op mul *tmp344 .unloader1 .powerTarget
-    * op lessThan *tmp345 *tmp343 *tmp344
-    * jump *label338 equal *tmp345 false
+ 1500 jump *label338 greaterThanEq *tmp343 *tmp344
  1501 set :status1.4:text "Goal 5: supplying generator"
  1502 write :status1.4:text .display ".status1"
  1503 label *label340
 
  1508 jump *label339 always
  1509 label *label338
  1510 sensor *tmp347 .core @silicon
-    * op lessThan *tmp348 *tmp347 .targetSilicon
-    * jump *label342 equal *tmp348 false
+ 1511 jump *label342 greaterThanEq *tmp347 .targetSilicon
  1512 set :status1.5:text "Goal 6: silicon requirement"
  1513 write :status1.5:text .display ".status1"
  1514 label *label344
  1515 sensor :supplyBase0:coal .core @coal
  1516 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp352 :supplyBase0:coal :supplyBase0:sand
-    * jump *label345 equal *tmp352 false
+ 1517 jump *label345 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1518 set *tmp353 @coal
  1519 jump *label346 always
  1520 label *label345
 
  1528 jump *label343 always
  1529 label *label342
  1530 sensor *tmp354 .core @copper
-    * op lessThan *tmp355 *tmp354 .targetCopper
-    * jump *label348 equal *tmp355 false
+ 1531 jump *label348 greaterThanEq *tmp354 .targetCopper
  1532 set :status1.6:text "Goal 7: copper requirement"
  1533 write :status1.6:text .display ".status1"
  1534 label *label350
 
  1539 jump *label349 always
  1540 label *label348
  1541 sensor *tmp357 .core @lead
-    * op lessThan *tmp358 *tmp357 .targetLead
-    * jump *label352 equal *tmp358 false
+ 1542 jump *label352 greaterThanEq *tmp357 .targetLead
  1543 set :status1.7:text "Goal 8: lead requirement"
  1544 write :status1.7:text .display ".status1"
  1545 label *label354
 
  1550 jump *label353 always
  1551 label *label352
  1552 sensor *tmp360 .core @metaglass
-    * op lessThan *tmp361 *tmp360 .targetMetaglass
-    * jump *label356 equal *tmp361 false
+ 1553 jump *label356 greaterThanEq *tmp360 .targetMetaglass
  1554 set :status1.8:text "Goal 9: metaglass requirement"
  1555 write :status1.8:text .display ".status1"
  1556 label *label358
 
  1565 label *label360
  1566 sensor :supplyBase0:coal.1 .core @coal
  1567 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp365 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label361 equal *tmp365 false
+ 1568 jump *label361 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1569 set *tmp366 @coal
  1570 jump *label362 always
  1571 label *label361
 
  1611 end
  1612 label *label21
  1613 read *tmp35 .controller ".monos"
-    * op greaterThan *tmp367 *tmp35 3
-    * jump *label370 equal *tmp367 false
+ 1614 jump *label370 lessThanEq *tmp35 3
  1615 setaddr :supplyBase1*retaddr *label372 (h:*label372)
  1616 call *label20 *invalid :supplyBase1*retval (m:*label372) (h:*label372)
  1617 label *label372
 
  1626 end
  1627 label *label22
  1628 sensor *tmp369 .core @copper
-    * op greaterThanEq *tmp370 *tmp369 .targetCopper
-    * jump *label375 equal *tmp370 false
+ 1629 jump *label375 lessThan *tmp369 .targetCopper
  1630 sensor *tmp372 .core @lead
-    * op greaterThanEq *tmp373 *tmp372 .targetLead
-    * jump *label377 equal *tmp373 false
+ 1631 jump *label377 lessThan *tmp372 .targetLead
  1632 sensor *tmp375 .core @graphite
-    * op greaterThanEq *tmp376 *tmp375 .targetGraphite
-    * jump *label379 equal *tmp376 false
+ 1633 jump *label379 lessThan *tmp375 .targetGraphite
  1634 sensor *tmp378 .core @silicon
-    * op greaterThanEq *tmp379 *tmp378 .targetSilicon
-    * jump *label381 equal *tmp379 false
+ 1635 jump *label381 lessThan *tmp378 .targetSilicon
  1636 sensor *tmp381 .core @titanium
-    * op greaterThanEq *tmp382 *tmp381 .targetTitanium
-    * jump *label383 equal *tmp382 false
+ 1637 jump *label383 lessThan *tmp381 .targetTitanium
  1638 sensor *tmp384 .core @metaglass
-    * op greaterThanEq *tmp385 *tmp384 .targetMetaglass
-    * jump *label385 equal *tmp385 false
+ 1639 jump *label385 lessThan *tmp384 .targetMetaglass
  1640 set :targetMet*retval true
  1641 jump *label374 always
  1642 jump *label386 always
 
  1726 setaddr :targetMet*retaddr *label400 (h:*label400)
  1727 call *label22 *invalid :targetMet*retval (m:*label400) (h:*label400)
  1728 label *label400
-    * op equal *tmp399 :targetMet*retval false
-    * jump *label399 equal *tmp399 false
+ 1729 jump *label399 notEqual :targetMet*retval false
  1730 setaddr :supplyBase*retaddr *label401 (h:*label401)
  1731 call *label21 *invalid :supplyBase*retval (m:*label401) (h:*label401)
  1732 label *label401
 
  1769 write :status3.4:text .display ".status3"
  1770 label *label408
  1771 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp410 :buildBlockAt:building null
-    * jump *label409 equal *tmp410 false
-    * op equal *tmp412 :buildBlockAt:type :buildBlockAt:block
-    * jump *label411 equal *tmp412 false
+ 1772 jump *label409 equal :buildBlockAt:building null
+ 1773 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1774 set :buildBlockAt*retval :buildBlockAt:building
  1775 jump *label406 always
  1776 jump *label412 always
 
  1793 wait 0.25
  1794 label *label416
  1795 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp417 :buildBlockAt:building null
-    * jump *label419 equal *tmp417 false
+ 1796 jump *label419 notEqual :buildBlockAt:building null
  1797 set :buildBlockAt*retval null
  1798 jump *label406 always
  1799 jump *label420 always
  1800 label *label419
  1801 label *label420
  1802 label *label417
-    * op notEqual *tmp419 :buildBlockAt:type :buildBlockAt:block
-    * jump *label416 notEqual *tmp419 false
+ 1803 jump *label416 notEqual :buildBlockAt:type :buildBlockAt:block
  1804 label *label418
  1805 set :logBlock:block :buildBlockAt:block
  1806 setaddr :logBlock*retaddr *label421 (h:*label421)
 
  1842 set :findUnits:count 0
  1843 ubind :findUnits:type
  1844 set :findUnits:firstUnit @unit
-    * op notEqual *tmp420 :findUnits:firstUnit null
-    * jump *label426 equal *tmp420 false
+ 1845 jump *label426 equal :findUnits:firstUnit null
  1846 label *label428
  1847 op add :findUnits:count :findUnits:count 1
  1848 ubind :findUnits:type
  1849 label *label429
-    * op notEqual *tmp423 @unit :findUnits:firstUnit
-    * jump *label428 notEqual *tmp423 false
+ 1850 jump *label428 notEqual @unit :findUnits:firstUnit
  1851 label *label430
  1852 jump *label427 always
  1853 label *label426

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   265 set .ERROR :error:error
   266 stop
   267 label *label71
-    * jump *label70 always
   268 label *label69
   269 label *label70
   270 write @pneumatic-drill .display ".nextBlock"
 
   569 wait 1e-15
   570 read *tmp159 .flareController ":start*finished"
   571 jump *label118 equal *tmp159 false
-    * jump *label116 always
   572 label *label115
   573 label *label116
   574 setaddr :supplyBase*retaddr *label119 (h:*label119)
 
   577 sensor *tmp160 .battery @totalPower
   578 jump *label120 greaterThanEq *tmp160 300
   579 jump *label114 always
-    * jump *label121 always
   580 label *label120
   581 label *label121
   582 label *label113
 
   808 read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
   809 jump *label160 equal *tmp194 false
   810 label *label162
-    * jump *label154 always
   811 label *label153
   812 label *label154
   813 set :meetTarget:block @laser-drill
 
   831 set .ERROR :error.1:error
   832 stop
   833 label *label170
-    * jump *label169 always
   834 label *label168
   835 label *label169
   836 set :buildBlockAt:block @laser-drill
 
   846 read *tmp67 .oreLocator ".water1X"
   847 jump *label172 greaterThanEq *tmp67 0
   848 jump *label164 always
-    * jump *label173 always
   849 label *label172
   850 label *label173
   851 set :meetTarget:block @water-extractor
 
   872 read *tmp69 .oreLocator ".water2X"
   873 jump *label177 greaterThanEq *tmp69 0
   874 jump *label164 always
-    * jump *label178 always
   875 label *label177
   876 label *label178
   877 set :meetTarget:block @water-extractor
 
  1081 sensor *tmp225 @unit @firstItem
  1082 jump *label223 equal *tmp225 null
  1083 ucontrol itemDrop @air 1000
-    * jump *label224 always
  1084 label *label223
  1085 label *label224
  1086 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1148 set .ERROR :error.3:error
  1149 stop
  1150 label *label242
-    * jump *label241 always
  1151 label *label240
  1152 label *label241
  1153 label *label239
 
  1181 jump *label250 always
  1182 label *label252
  1183 label *label249
-    * jump *label248 always
  1184 label *label247
  1185 label *label248
  1186 set :status3.3:text "Mining..."
 
  1197 op land *tmp257 *tmp255 *tmp256
  1198 jump *label258 equal *tmp257 false
  1199 jump *label257 always
-    * jump *label259 always
  1200 label *label258
  1201 label *label259
  1202 ucontrol mine :mineOre:x :mineOre:y
 
  1205 label *label260
  1206 jump *label261 lessThanEq *tmp259 :mineOre:stop
  1207 jump *label257 always
-    * jump *label262 always
  1208 label *label261
  1209 label *label262
  1210 label *label256
 
  1273 op land *tmp273 *tmp271 *tmp272
  1274 jump *label278 equal *tmp273 false
  1275 ucontrol itemDrop @air 1000
-    * jump *label279 always
  1276 label *label278
  1277 label *label279
  1278 label *label276
 
  1294 ubind :findFreeUnit:unit_type
  1295 jump *label282 notEqual @unit null
  1296 jump *label281 always
-    * jump *label283 always
  1297 label *label282
  1298 label *label283
  1299 set :findFreeUnit:first_unit @unit
 
  1307 sensor *tmp284 :findFreeUnit:first_unit @dead
  1308 jump *label289 notEqual *tmp284 1
  1309 set :findFreeUnit:first_unit @unit
-    * jump *label290 always
  1310 label *label289
  1311 label *label290
  1312 label *label288
 
  1314 label *label285
  1315 jump *label284 notEqual :findFreeUnit:first_unit @unit
  1316 label *label286
-    * jump *label281 always
  1317 label *label281
  1318 return :findFreeUnit*retaddr
  1319 end
 
  1346 setaddr :mineOre*retaddr *label303 (h:*label303)
  1347 call *label11 *invalid :mineOre*retval (m:*label303) (h:*label303)
  1348 label *label303
-    * jump *label302 always
  1349 label *label301
  1350 label *label302
  1351 label *label299
  1352 set :supplyBase0:supplied true
-    * jump *label297 always
  1353 label *label296
  1354 label *label297
-    * jump *label295 always
  1355 label *label294
  1356 label *label295
  1357 sensor *tmp302 .core @silicon
 
  1380 setaddr :mineOre*retaddr *label313 (h:*label313)
  1381 call *label11 *invalid :mineOre*retval (m:*label313) (h:*label313)
  1382 label *label313
-    * jump *label312 always
  1383 label *label311
  1384 label *label312
  1385 label *label309
 
  1410 setaddr :mineOre*retaddr *label321 (h:*label321)
  1411 call *label11 *invalid :mineOre*retval (m:*label321) (h:*label321)
  1412 label *label321
-    * jump *label320 always
  1413 label *label319
  1414 label *label320
  1415 label *label317
  1416 set :supplyBase0:supplied true
-    * jump *label315 always
  1417 label *label314
  1418 label *label315
  1419 label *label307
-    * jump *label305 always
  1420 label *label304
  1421 label *label305
  1422 sensor *tmp321 .battery @totalPower
 
  1445 setaddr :mineOre*retaddr *label331 (h:*label331)
  1446 call *label11 *invalid :mineOre*retval (m:*label331) (h:*label331)
  1447 label *label331
-    * jump *label330 always
  1448 label *label329
  1449 label *label330
  1450 label *label327
  1451 set :supplyBase0:supplied true
-    * jump *label325 always
  1452 label *label324
  1453 label *label325
-    * jump *label323 always
  1454 label *label322
  1455 label *label323
-    * jump *label293 always
  1456 label *label292
  1457 label *label293
  1458 sensor *tmp332 .core @titanium
 
  1554 label *label349
  1555 label *label343
  1556 label *label339
-    * jump *label337 always
  1557 label *label336
  1558 label *label337
  1559 jump *label335 always
 
  1611 jump *label385 lessThan *tmp384 .targetMetaglass
  1612 set :targetMet*retval true
  1613 jump *label374 always
-    * jump *label386 always
  1614 label *label385
  1615 label *label386
-    * jump *label384 always
  1616 label *label383
  1617 label *label384
-    * jump *label382 always
  1618 label *label381
  1619 label *label382
-    * jump *label380 always
  1620 label *label379
  1621 label *label380
-    * jump *label378 always
  1622 label *label377
  1623 label *label378
-    * jump *label376 always
  1624 label *label375
  1625 label *label376
  1626 set :targetMet*retval false
 
  1739 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1740 set :buildBlockAt*retval :buildBlockAt:building
  1741 jump *label406 always
-    * jump *label412 always
  1742 label *label411
  1743 label *label412
  1744 jump *label413 equal :buildBlockAt:skipError false
  1745 set :buildBlockAt*retval null
  1746 jump *label406 always
-    * jump *label414 always
  1747 label *label413
  1748 label *label414
  1749 set :error.4:error "Cannot build at ("
  1750 set .ERROR :error.4:error
  1751 stop
  1752 label *label415
-    * jump *label410 always
  1753 label *label409
  1754 label *label410
  1755 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1759 jump *label419 notEqual :buildBlockAt:building null
  1760 set :buildBlockAt*retval null
  1761 jump *label406 always
-    * jump *label420 always
  1762 label *label419
  1763 label *label420
  1764 label *label417
 
  1811 label *label429
  1812 jump *label428 notEqual @unit :findUnits:firstUnit
  1813 label *label430
-    * jump *label427 always
  1814 label *label426
  1815 label *label427
  1816 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-39 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
-    * set .kiln null
-    * set .thoriumDrill null
-    * set .thoriumGenerator null
     8 set .leadSurplus 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    24 setaddr :findUnits*retaddr *label32 (h:*label32)
    25 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
    26 label *label32
-    * write :findUnits:count .display ".monos"
+   27 write :findUnits:count processor1 ".monos"
    28 set :monos :findUnits*retval
    29 set :findUnits:type @flare
    30 setaddr :findUnits*retaddr *label33 (h:*label33)
    31 call *label28 *invalid :findUnits*retval (m:*label33) (h:*label33)
    32 label *label33
-    * write :findUnits:count .display ".flares"
+   33 write :findUnits:count processor1 ".flares"
    34 set :flares :findUnits*retval
    35 set :findUnits:type @poly
    36 setaddr :findUnits*retaddr *label34 (h:*label34)
    37 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    38 label *label34
-    * write :findUnits:count .display ".polys"
+   39 write :findUnits:count processor1 ".polys"
    40 set :polys :findUnits*retval
    41 set :buildBlockFromCfg:block @graphite-press
    42 set :buildBlockFromCfg:offsetX -1.5
 
    49 set :buildBlockFromCfg:metaglass 0
    50 set :buildBlockFromCfg:rotation 0
    51 set :buildBlockFromCfg:config null
-    * setaddr *tmp91 *label39
    52 label *label36
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   53 op add :buildBlockFromCfg:x .coreX -1.5
+   54 op add :buildBlockFromCfg:y .coreY 2.5
+   55 set :buildBlock:block @graphite-press
    56 set :buildBlock:x :buildBlockFromCfg:x
    57 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   58 set :buildBlock:copper 75
+   59 set :buildBlock:lead 30
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label40 (h:*label40)
    67 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    68 label *label40
 
    72 multijump *tmp91 0 0 (m:marker0)
    73 multilabel *label39 (m:marker0)
    74 label *label38
-    * set *tmp90 null
    75 label *label35
    76 set .press *tmp90
    77 set :buildBlockFromCfg.1:block @battery
 
    85 set :buildBlockFromCfg.1:metaglass 0
    86 set :buildBlockFromCfg.1:rotation 0
    87 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp95 *label45
    88 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   89 op add :buildBlockFromCfg.1:x .coreX 0
+   90 op add :buildBlockFromCfg.1:y .coreY 4
+   91 set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.1:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   94 set :buildBlock:copper 5
+   95 set :buildBlock:lead 20
+   96 set :buildBlock:graphite 0
+   97 set :buildBlock:silicon 0
+   98 set :buildBlock:titanium 0
+   99 set :buildBlock:metaglass 0
+  100 set :buildBlock:rotation 0
+  101 set :buildBlock:config null
   102 setaddr :buildBlock*retaddr *label46 (h:*label46)
   103 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
   104 label *label46
 
   108 multijump *tmp95 0 0 (m:marker1)
   109 multilabel *label45 (m:marker1)
   110 label *label44
-    * set *tmp94 null
   111 label *label41
   112 set .battery *tmp94
   113 set :buildBlockFromCfg.2:block @battery
 
   121 set :buildBlockFromCfg.2:metaglass 0
   122 set :buildBlockFromCfg.2:rotation 0
   123 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp99 *label51
   124 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  125 op add :buildBlockFromCfg.2:x .coreX -1
+  126 op add :buildBlockFromCfg.2:y .coreY 4
+  127 set :buildBlock:block @battery
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  130 set :buildBlock:copper 5
+  131 set :buildBlock:lead 20
+  132 set :buildBlock:graphite 0
+  133 set :buildBlock:silicon 0
+  134 set :buildBlock:titanium 0
+  135 set :buildBlock:metaglass 0
+  136 set :buildBlock:rotation 0
+  137 set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label52 (h:*label52)
   139 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   140 label *label52
 
   155 set :buildBlockFromCfg.3:metaglass 0
   156 set :buildBlockFromCfg.3:rotation 0
   157 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp103 *label57
   158 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  159 op add :buildBlockFromCfg.3:x .coreX 0
+  160 op add :buildBlockFromCfg.3:y .coreY 3
+  161 set :buildBlock:block @combustion-generator
   162 set :buildBlock:x :buildBlockFromCfg.3:x
   163 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  164 set :buildBlock:copper 25
+  165 set :buildBlock:lead 15
+  166 set :buildBlock:graphite 0
+  167 set :buildBlock:silicon 0
+  168 set :buildBlock:titanium 0
+  169 set :buildBlock:metaglass 0
+  170 set :buildBlock:rotation 0
+  171 set :buildBlock:config null
   172 setaddr :buildBlock*retaddr *label58 (h:*label58)
   173 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   174 label *label58
 
   178 multijump *tmp103 0 0 (m:marker3)
   179 multilabel *label57 (m:marker3)
   180 label *label56
-    * set *tmp102 null
   181 label *label53
   182 set .generator *tmp102
   183 set .powerTarget 800
 
   192 set :buildBlockFromCfg.4:metaglass 0
   193 set :buildBlockFromCfg.4:rotation 0
   194 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp107 *label63
   195 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  196 op add :buildBlockFromCfg.4:x .coreX 1.5
+  197 op add :buildBlockFromCfg.4:y .coreY 2.5
+  198 set :buildBlock:block @silicon-smelter
   199 set :buildBlock:x :buildBlockFromCfg.4:x
   200 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  201 set :buildBlock:copper 30
+  202 set :buildBlock:lead 25
+  203 set :buildBlock:graphite 0
+  204 set :buildBlock:silicon 0
+  205 set :buildBlock:titanium 0
+  206 set :buildBlock:metaglass 0
+  207 set :buildBlock:rotation 0
+  208 set :buildBlock:config null
   209 setaddr :buildBlock*retaddr *label64 (h:*label64)
   210 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   211 label *label64
 
   215 multijump *tmp107 0 0 (m:marker4)
   216 multilabel *label63 (m:marker4)
   217 label *label62
-    * set *tmp106 null
   218 label *label59
   219 set .smelter *tmp106
   220 set :meetTarget:block @pneumatic-drill
 
   228 call *label23 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   229 label *label67
   230 label *label66
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  231 write @titanium processor1 ".nextBlock"
+  232 write .coreX processor4 ":findDrillLocation:x"
+  233 write .coreY processor4 ":findDrillLocation:y"
+  234 write @unit processor4 ":findDrillLocation:unit"
+  235 write @titanium processor4 ":findDrillLocation:item"
+  236 write @ore-titanium processor4 ":findDrillLocation:ore"
+  237 write false processor4 ":findDrillLocation:large"
+  238 write 4 processor4 ":findDrillLocation:limit"
+  239 write false processor4 ":findDrillLocation*finished"
+  240 write 1 processor4 "@counter"
   241 label *label68
   242 wait 1e-15
-    * read *tmp121 .oreLocator ":findDrillLocation*finished"
+  243 read *tmp121 processor4 ":findDrillLocation*finished"
   244 jump *label68 equal *tmp121 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  245 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  246 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  247 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   248 jump *label69 notEqual :buildTitaniumDrill:result false
   249 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  250 set .ERROR "Cannot locate spot for titanium drill"
   251 stop
   252 label *label71
   253 label *label69
   254 label *label70
-    * write @pneumatic-drill .display ".nextBlock"
+  255 write @pneumatic-drill processor1 ".nextBlock"
   256 set :buildBlockAt:block @pneumatic-drill
   257 set :buildBlockAt:x :buildTitaniumDrill:dx
   258 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   264 label *label72
   265 set *tmp110 :buildBlockAt*retval
   266 jump *label65 always
-    * set *tmp110 null
   267 label *label65
-    * set .titaniumDrill *tmp110
-    * write .titaniumDrill .display ".titaniumDrill"
+  268 set .titaniumDrill :buildBlockAt*retval
+  269 write *tmp110 processor1 ".titaniumDrill"
   270 set :buildBlockFromCfg.5:block @unloader
   271 set :buildBlockFromCfg.5:offsetX 0
   272 set :buildBlockFromCfg.5:offsetY 2
 
   278 set :buildBlockFromCfg.5:metaglass 0
   279 set :buildBlockFromCfg.5:rotation 0
   280 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp126 *label77
   281 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  282 op add :buildBlockFromCfg.5:x .coreX 0
+  283 op add :buildBlockFromCfg.5:y .coreY 2
+  284 set :buildBlock:block @unloader
   285 set :buildBlock:x :buildBlockFromCfg.5:x
   286 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  287 set :buildBlock:copper 0
+  288 set :buildBlock:lead 0
+  289 set :buildBlock:graphite 0
+  290 set :buildBlock:silicon 30
+  291 set :buildBlock:titanium 25
+  292 set :buildBlock:metaglass 0
+  293 set :buildBlock:rotation 0
+  294 set :buildBlock:config null
   295 setaddr :buildBlock*retaddr *label78 (h:*label78)
   296 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   297 label *label78
 
   301 multijump *tmp126 0 0 (m:marker5)
   302 multilabel *label77 (m:marker5)
   303 label *label76
-    * set *tmp125 null
   304 label *label73
   305 set .unloader1 *tmp125
   306 set :buildBlockFromCfg.6:block @micro-processor
 
   314 set :buildBlockFromCfg.6:metaglass 0
   315 set :buildBlockFromCfg.6:rotation 0
   316 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp130 *label83
   317 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  318 op add :buildBlockFromCfg.6:x .coreX 1
+  319 op add :buildBlockFromCfg.6:y .coreY 4
+  320 set :buildBlock:block @micro-processor
   321 set :buildBlock:x :buildBlockFromCfg.6:x
   322 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  323 set :buildBlock:copper 90
+  324 set :buildBlock:lead 50
+  325 set :buildBlock:graphite 0
+  326 set :buildBlock:silicon 50
+  327 set :buildBlock:titanium 0
+  328 set :buildBlock:metaglass 0
+  329 set :buildBlock:rotation 0
+  330 set :buildBlock:config processor2
   331 setaddr :buildBlock*retaddr *label84 (h:*label84)
   332 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   333 label *label84
 
   337 multijump *tmp130 0 0 (m:marker6)
   338 multilabel *label83 (m:marker6)
   339 label *label82
-    * set *tmp129 null
   340 label *label79
   341 set .controller *tmp129
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  342 write processor1 *tmp129 ".display"
+  343 write .core *tmp129 ".core"
+  344 write bank1 *tmp129 ".bank"
+  345 write *tmp94 *tmp129 ".battery"
+  346 write *tmp102 *tmp129 ".generator"
+  347 write *tmp106 *tmp129 ".smelter"
+  348 write *tmp90 *tmp129 ".press"
+  349 write :monos *tmp129 ".monos"
+  350 write :flares *tmp129 ".flares"
+  351 write :polys *tmp129 ".polys"
   352 set :buildBlockFromCfg.7:block @power-node
   353 set :buildBlockFromCfg.7:offsetX -2
   354 set :buildBlockFromCfg.7:offsetY -1
 
   360 set :buildBlockFromCfg.7:metaglass 0
   361 set :buildBlockFromCfg.7:rotation 0
   362 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp134 *label89
   363 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  364 op add :buildBlockFromCfg.7:x .coreX -2
+  365 op add :buildBlockFromCfg.7:y .coreY -1
+  366 set :buildBlock:block @power-node
   367 set :buildBlock:x :buildBlockFromCfg.7:x
   368 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  369 set :buildBlock:copper 2
+  370 set :buildBlock:lead 6
+  371 set :buildBlock:graphite 0
+  372 set :buildBlock:silicon 0
+  373 set :buildBlock:titanium 0
+  374 set :buildBlock:metaglass 0
+  375 set :buildBlock:rotation 0
+  376 set :buildBlock:config null
   377 setaddr :buildBlock*retaddr *label90 (h:*label90)
   378 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   379 label *label90
 
   394 set :buildBlockFromCfg.8:metaglass 0
   395 set :buildBlockFromCfg.8:rotation 0
   396 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp138 *label95
   397 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  398 op add :buildBlockFromCfg.8:x .coreX -2
+  399 op add :buildBlockFromCfg.8:y .coreY 1
+  400 set :buildBlock:block @unloader
   401 set :buildBlock:x :buildBlockFromCfg.8:x
   402 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  403 set :buildBlock:copper 0
+  404 set :buildBlock:lead 0
+  405 set :buildBlock:graphite 0
+  406 set :buildBlock:silicon 30
+  407 set :buildBlock:titanium 25
+  408 set :buildBlock:metaglass 0
+  409 set :buildBlock:rotation 0
+  410 set :buildBlock:config null
   411 setaddr :buildBlock*retaddr *label96 (h:*label96)
   412 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   413 label *label96
 
   417 multijump *tmp138 0 0 (m:marker8)
   418 multilabel *label95 (m:marker8)
   419 label *label94
-    * set *tmp137 null
   420 label *label91
   421 set .unloader2 *tmp137
-    * write .unloader2 .controller ".unloader2"
+  422 write *tmp137 *tmp129 ".unloader2"
   423 set :buildBlockFromCfg.9:block @overflow-gate
   424 set :buildBlockFromCfg.9:offsetX -3
   425 set :buildBlockFromCfg.9:offsetY 1
 
   431 set :buildBlockFromCfg.9:metaglass 0
   432 set :buildBlockFromCfg.9:rotation 0
   433 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp142 *label101
   434 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  435 op add :buildBlockFromCfg.9:x .coreX -3
+  436 op add :buildBlockFromCfg.9:y .coreY 1
+  437 set :buildBlock:block @overflow-gate
   438 set :buildBlock:x :buildBlockFromCfg.9:x
   439 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  440 set :buildBlock:copper 4
+  441 set :buildBlock:lead 2
+  442 set :buildBlock:graphite 0
+  443 set :buildBlock:silicon 0
+  444 set :buildBlock:titanium 0
+  445 set :buildBlock:metaglass 0
+  446 set :buildBlock:rotation 0
+  447 set :buildBlock:config null
   448 setaddr :buildBlock*retaddr *label102 (h:*label102)
   449 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   450 label *label102
 
   465 set :buildBlockFromCfg.10:metaglass 0
   466 set :buildBlockFromCfg.10:rotation 3
   467 set :buildBlockFromCfg.10:config @mono
-    * setaddr *tmp146 *label107
   468 label *label104
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  469 op add :buildBlockFromCfg.10:x .coreX -4
+  470 op add :buildBlockFromCfg.10:y .coreY -1
+  471 set :buildBlock:block @air-factory
   472 set :buildBlock:x :buildBlockFromCfg.10:x
   473 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  474 set :buildBlock:copper 60
+  475 set :buildBlock:lead 70
+  476 set :buildBlock:graphite 0
+  477 set :buildBlock:silicon 0
+  478 set :buildBlock:titanium 0
+  479 set :buildBlock:metaglass 0
+  480 set :buildBlock:rotation 3
+  481 set :buildBlock:config @mono
   482 setaddr :buildBlock*retaddr *label108 (h:*label108)
   483 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   484 label *label108
 
   488 multijump *tmp146 0 0 (m:marker10)
   489 multilabel *label107 (m:marker10)
   490 label *label106
-    * set *tmp145 null
   491 label *label103
   492 set .factory *tmp145
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
-    * write 2 .controller ".flareTarget"
+  493 write *tmp145 *tmp129 ".factory"
+  494 write *tmp145 processor1 ".factory"
+  495 write 2 *tmp129 ".flareTarget"
   496 set :buildUnits:unit @flare
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
-    * write :buildUnits:unit .controller ".unitToProduce"
+  497 write 0 processor1 ".totalTargets"
+  498 write null processor1 ".nextBlock"
+  499 write 0 *tmp129 ".leadReserve"
+  500 write 0 *tmp129 ".siliconReserve"
+  501 write @flare *tmp129 ".unitToProduce"
   502 label *label109
   503 set :meetTarget:block 0
   504 set :meetTarget:copper 0
 
   512 label *label111
   513 label *label110
   514 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  515 set .siliconSurplus 20
+  516 write 85 *tmp129 ".pressTarget"
+  517 write 150 *tmp129 ".smelterTarget"
+  518 write 30 *tmp129 ".kilnTarget"
   519 set :searchThorium true
   520 label *label112
-    * read *tmp36 .controller ".flares"
+  521 read *tmp36 *tmp129 ".flares"
   522 op greaterThan *tmp149 *tmp36 0
   523 op land *tmp150 :searchThorium *tmp149
   524 jump *label115 equal *tmp150 false
 
   528 setaddr :findFreeUnit*retaddr *label117 (h:*label117)
   529 call *label15 *invalid :findFreeUnit*retval (m:*label117) (h:*label117)
   530 label *label117
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  531 write .coreX processor4 ":layoutThoriumDrill:x"
+  532 write .coreY processor4 ":layoutThoriumDrill:y"
+  533 write @unit processor4 ":layoutThoriumDrill:unit"
+  534 write 7 processor4 ":layoutThoriumDrill:limit"
+  535 write false processor4 ":layoutThoriumDrill*finished"
+  536 write 2 processor4 "@counter"
   537 ubind .builder
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:drill"
-    * write false .flareController ":start*finished"
-    * write 3 .flareController "@counter"
+  538 write .core processor3 ":start:aCore"
+  539 write *tmp110 processor3 ":start:drill"
+  540 write false processor3 ":start*finished"
+  541 write 3 processor3 "@counter"
   542 label *label118
   543 wait 1e-15
-    * read *tmp159 .flareController ":start*finished"
+  544 read *tmp159 processor3 ":start*finished"
   545 jump *label118 equal *tmp159 false
   546 label *label115
   547 label *label116
   548 setaddr :supplyBase*retaddr *label119 (h:*label119)
   549 call *label21 *invalid :supplyBase*retval (m:*label119) (h:*label119)
   550 label *label119
-    * sensor *tmp160 .battery @totalPower
+  551 sensor *tmp160 *tmp94 @totalPower
   552 jump *label120 greaterThanEq *tmp160 300
   553 jump *label114 always
   554 label *label120
   555 label *label121
   556 label *label113
-    * read *tmp35 .controller ".monos"
+  557 read *tmp35 *tmp129 ".monos"
   558 jump *label112 lessThan *tmp35 3
   559 label *label114
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:drill"
-    * write false .flareController ":start*finished"
-    * write 3 .flareController "@counter"
+  560 write .core processor3 ":start:aCore"
+  561 write *tmp110 processor3 ":start:drill"
+  562 write false processor3 ":start*finished"
+  563 write 3 processor3 "@counter"
   564 label *label122
   565 wait 1e-15
-    * read *tmp166 .flareController ":start*finished"
+  566 read *tmp166 processor3 ":start*finished"
   567 jump *label122 equal *tmp166 false
   568 set :buildBlockFromCfg.11:block @unloader
   569 set :buildBlockFromCfg.11:offsetX 2
 
   576 set :buildBlockFromCfg.11:metaglass 0
   577 set :buildBlockFromCfg.11:rotation 0
   578 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp168 *label127
   579 label *label124
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  580 op add :buildBlockFromCfg.11:x .coreX 2
+  581 op add :buildBlockFromCfg.11:y .coreY 0
+  582 set :buildBlock:block @unloader
   583 set :buildBlock:x :buildBlockFromCfg.11:x
   584 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  585 set :buildBlock:copper 0
+  586 set :buildBlock:lead 0
+  587 set :buildBlock:graphite 0
+  588 set :buildBlock:silicon 30
+  589 set :buildBlock:titanium 25
+  590 set :buildBlock:metaglass 0
+  591 set :buildBlock:rotation 0
+  592 set :buildBlock:config null
   593 setaddr :buildBlock*retaddr *label128 (h:*label128)
   594 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   595 label *label128
 
   610 set :buildBlockFromCfg.12:metaglass 0
   611 set :buildBlockFromCfg.12:rotation 0
   612 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp172 *label133
   613 label *label130
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  614 op add :buildBlockFromCfg.12:x .coreX 3.5
+  615 op add :buildBlockFromCfg.12:y .coreY 0.5
+  616 set :buildBlock:block @kiln
   617 set :buildBlock:x :buildBlockFromCfg.12:x
   618 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  619 set :buildBlock:copper 60
+  620 set :buildBlock:lead 30
+  621 set :buildBlock:graphite 30
+  622 set :buildBlock:silicon 0
+  623 set :buildBlock:titanium 0
+  624 set :buildBlock:metaglass 0
+  625 set :buildBlock:rotation 0
+  626 set :buildBlock:config null
   627 setaddr :buildBlock*retaddr *label134 (h:*label134)
   628 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   629 label *label134
 
   633 multijump *tmp172 0 0 (m:marker12)
   634 multilabel *label133 (m:marker12)
   635 label *label132
-    * set *tmp171 null
   636 label *label129
   637 set .kiln *tmp171
-    * write .kiln .controller ".kiln"
+  638 write *tmp171 *tmp129 ".kiln"
   639 set :buildBlockFromCfg.13:block @junction
   640 set :buildBlockFromCfg.13:offsetX 2
   641 set :buildBlockFromCfg.13:offsetY 1
 
   647 set :buildBlockFromCfg.13:metaglass 0
   648 set :buildBlockFromCfg.13:rotation 0
   649 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp176 *label139
   650 label *label136
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  651 op add :buildBlockFromCfg.13:x .coreX 2
+  652 op add :buildBlockFromCfg.13:y .coreY 1
+  653 set :buildBlock:block @junction
   654 set :buildBlock:x :buildBlockFromCfg.13:x
   655 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  656 set :buildBlock:copper 3
+  657 set :buildBlock:lead 0
+  658 set :buildBlock:graphite 0
+  659 set :buildBlock:silicon 0
+  660 set :buildBlock:titanium 0
+  661 set :buildBlock:metaglass 0
+  662 set :buildBlock:rotation 0
+  663 set :buildBlock:config null
   664 setaddr :buildBlock*retaddr *label140 (h:*label140)
   665 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   666 label *label140
 
   681 set :buildBlockFromCfg.14:metaglass 30
   682 set :buildBlockFromCfg.14:rotation 0
   683 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp180 *label145
   684 label *label142
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  685 op add :buildBlockFromCfg.14:x .coreX -3.5
+  686 op add :buildBlockFromCfg.14:y .coreY 4.5
+  687 set :buildBlock:block @water-extractor
   688 set :buildBlock:x :buildBlockFromCfg.14:x
   689 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  690 set :buildBlock:copper 30
+  691 set :buildBlock:lead 30
+  692 set :buildBlock:graphite 30
+  693 set :buildBlock:silicon 0
+  694 set :buildBlock:titanium 0
+  695 set :buildBlock:metaglass 30
+  696 set :buildBlock:rotation 0
+  697 set :buildBlock:config null
   698 setaddr :buildBlock*retaddr *label146 (h:*label146)
   699 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   700 label *label146
 
   715 set :buildBlockFromCfg.15:metaglass 0
   716 set :buildBlockFromCfg.15:rotation 0
   717 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp184 *label151
   718 label *label148
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  719 op add :buildBlockFromCfg.15:x .coreX -3.5
+  720 op add :buildBlockFromCfg.15:y .coreY 2.5
+  721 set :buildBlock:block @steam-generator
   722 set :buildBlock:x :buildBlockFromCfg.15:x
   723 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  724 set :buildBlock:copper 35
+  725 set :buildBlock:lead 40
+  726 set :buildBlock:graphite 25
+  727 set :buildBlock:silicon 30
+  728 set :buildBlock:titanium 0
+  729 set :buildBlock:metaglass 0
+  730 set :buildBlock:rotation 0
+  731 set :buildBlock:config null
   732 setaddr :buildBlock*retaddr *label152 (h:*label152)
   733 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   734 label *label152
 
   738 multijump *tmp184 0 0 (m:marker15)
   739 multilabel *label151 (m:marker15)
   740 label *label150
-    * set *tmp183 null
   741 label *label147
   742 set .generator2 *tmp183
-    * write .generator2 .controller ".generator2"
+  743 write *tmp183 *tmp129 ".generator2"
   744 set .graphiteSurplus 200
   745 set .siliconSurplus 1000
   746 set .metaglassSurplus 200
   747 jump *label153 equal :searchThorium false
   748 label *label155
-    * read *tmp36 .controller ".flares"
+  749 read *tmp36 *tmp129 ".flares"
   750 jump *label157 greaterThanEq *tmp36 1
   751 setaddr :supplyBase*retaddr *label158 (h:*label158)
   752 call *label21 *invalid :supplyBase*retval (m:*label158) (h:*label158)
 
   754 label *label156
   755 jump *label155 always
   756 label *label157
-    * set :searchThorium false
   757 set :findFreeUnit:unit_type @flare
   758 set :findFreeUnit:initial_flag 0
   759 setaddr :findFreeUnit*retaddr *label159 (h:*label159)
   760 call *label15 *invalid :findFreeUnit*retval (m:*label159) (h:*label159)
   761 label *label159
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  762 write .coreX processor4 ":layoutThoriumDrill:x"
+  763 write .coreY processor4 ":layoutThoriumDrill:y"
+  764 write @unit processor4 ":layoutThoriumDrill:unit"
+  765 write 7 processor4 ":layoutThoriumDrill:limit"
+  766 write false processor4 ":layoutThoriumDrill*finished"
+  767 write 2 processor4 "@counter"
   768 ubind .builder
   769 label *label160
   770 setaddr :supplyBase*retaddr *label163 (h:*label163)
   771 call *label21 *invalid :supplyBase*retval (m:*label163) (h:*label163)
   772 label *label163
   773 label *label161
-    * read *tmp194 .oreLocator ":layoutThoriumDrill*finished"
+  774 read *tmp194 processor4 ":layoutThoriumDrill*finished"
   775 jump *label160 equal *tmp194 false
   776 label *label162
   777 label *label153
 
   789 label *label165
   790 label *label167
   791 wait 1e-15
-    * read *tmp196 .oreLocator ":layoutThoriumDrill*finished"
+  792 read *tmp196 processor4 ":layoutThoriumDrill*finished"
   793 jump *label167 equal *tmp196 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  794 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   795 jump *label168 notEqual :buildThoriumDrill:result false
   796 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  797 set .ERROR "Cannot locate spot for thorium drill"
   798 stop
   799 label *label170
   800 label *label168
   801 label *label169
   802 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  803 read :buildBlockAt:x processor4 ".drillX"
+  804 read :buildBlockAt:y processor4 ".drillY"
   805 set :buildBlockAt:rotation null
   806 set :buildBlockAt:config 0
   807 set :buildBlockAt:skipError false
 
   809 call *label26 *invalid :buildBlockAt*retval (m:*label171) (h:*label171)
   810 label *label171
   811 set .thoriumDrill :buildBlockAt*retval
-    * read *tmp67 .oreLocator ".water1X"
+  812 read *tmp67 processor4 ".water1X"
   813 jump *label172 greaterThanEq *tmp67 0
   814 jump *label164 always
   815 label *label172
 
   826 label *label175
   827 label *label174
   828 set :buildBlockAt:block @water-extractor
-    * read *tmp67 .oreLocator ".water1X"
+  829 read *tmp67 processor4 ".water1X"
   830 set :buildBlockAt:x *tmp67
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  831 read :buildBlockAt:y processor4 ".water1Y"
   832 set :buildBlockAt:rotation null
   833 set :buildBlockAt:config 0
   834 set :buildBlockAt:skipError false
   835 setaddr :buildBlockAt*retaddr *label176 (h:*label176)
   836 call *label26 *invalid :buildBlockAt*retval (m:*label176) (h:*label176)
   837 label *label176
-    * read *tmp69 .oreLocator ".water2X"
+  838 read *tmp69 processor4 ".water2X"
   839 jump *label177 greaterThanEq *tmp69 0
   840 jump *label164 always
   841 label *label177
 
   852 label *label180
   853 label *label179
   854 set :buildBlockAt:block @water-extractor
-    * read *tmp69 .oreLocator ".water2X"
+  855 read *tmp69 processor4 ".water2X"
   856 set :buildBlockAt:x *tmp69
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+  857 read :buildBlockAt:y processor4 ".water2Y"
   858 set :buildBlockAt:rotation null
   859 set :buildBlockAt:config 0
   860 set :buildBlockAt:skipError false
 
   873 label *label183
   874 label *label182
   875 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+  876 read :buildBlockAt:x processor4 ".generatorX"
+  877 read :buildBlockAt:y processor4 ".generatorY"
   878 set :buildBlockAt:rotation null
   879 set :buildBlockAt:config 0
   880 set :buildBlockAt:skipError false
 
   894 label *label186
   895 label *label185
   896 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+  897 read :buildBlockAt:x processor4 ".nodeX"
+  898 read :buildBlockAt:y processor4 ".nodeY"
   899 set :buildBlockAt:rotation null
   900 set :buildBlockAt:config 0
   901 set :buildBlockAt:skipError false
 
   914 label *label189
   915 label *label188
   916 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+  917 read :buildBlockAt:x processor4 ".panelX"
+  918 read :buildBlockAt:y processor4 ".panelY"
   919 set :buildBlockAt:rotation null
   920 set :buildBlockAt:config 0
   921 set :buildBlockAt:skipError false
 
   934 label *label192
   935 label *label191
   936 set :buildBlockAt:block @battery
-    * read :buildBlockAt:x .oreLocator ".batteryX"
-    * read :buildBlockAt:y .oreLocator ".batteryY"
+  937 read :buildBlockAt:x processor4 ".batteryX"
+  938 read :buildBlockAt:y processor4 ".batteryY"
   939 set :buildBlockAt:rotation null
   940 set :buildBlockAt:config 0
   941 set :buildBlockAt:skipError false
   942 setaddr :buildBlockAt*retaddr *label193 (h:*label193)
   943 call *label26 *invalid :buildBlockAt*retval (m:*label193) (h:*label193)
   944 label *label193
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write .thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+  945 write .thoriumDrill processor1 ".thoriumDrill"
+  946 write .thoriumDrill processor3 ":addThoriumDrill:drill"
+  947 write .thoriumGenerator processor3 ":addThoriumDrill:generator"
+  948 write false processor3 ":addThoriumDrill*finished"
+  949 write 1 processor3 "@counter"
   950 label *label194
   951 wait 1e-15
-    * read *tmp213 .flareController ":addThoriumDrill*finished"
+  952 read *tmp213 processor3 ":addThoriumDrill*finished"
   953 jump *label194 equal *tmp213 false
   954 label *label164
   955 set :buildBlockFromCfg.16:block @sorter
 
   963 set :buildBlockFromCfg.16:metaglass 0
   964 set :buildBlockFromCfg.16:rotation 0
   965 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp215 *label199
   966 label *label196
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  967 op add :buildBlockFromCfg.16:x .coreX -4
+  968 op add :buildBlockFromCfg.16:y .coreY 1
+  969 set :buildBlock:block @sorter
   970 set :buildBlock:x :buildBlockFromCfg.16:x
   971 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  972 set :buildBlock:copper 2
+  973 set :buildBlock:lead 2
+  974 set :buildBlock:graphite 0
+  975 set :buildBlock:silicon 0
+  976 set :buildBlock:titanium 0
+  977 set :buildBlock:metaglass 0
+  978 set :buildBlock:rotation 0
+  979 set :buildBlock:config @coal
   980 setaddr :buildBlock*retaddr *label200 (h:*label200)
   981 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   982 label *label200
 
   986 multilabel *label199 (m:marker16)
   987 label *label198
   988 label *label195
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  989 write 0 processor1 ".totalTargets"
+  990 write null processor1 ".nextBlock"
   991 label *label201
   992 setaddr :supplyBase*retaddr *label204 (h:*label204)
   993 call *label21 *invalid :supplyBase*retval (m:*label204) (h:*label204)
   994 label *label204
   995 label *label202
-    * read *tmp36 .controller ".flares"
-    * read *tmp35 .controller ".monos"
+  996 read *tmp36 *tmp129 ".flares"
+  997 read *tmp35 *tmp129 ".monos"
   998 op add *tmp218 *tmp36 *tmp35
   999 jump *label201 lessThan *tmp218 16
  1000 label *label203
 
  1006 jump *label205 always
  1007 label *label207
  1008 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+ 1009 set .ERROR "Done"
  1010 stop
  1011 label *label209
  1012 end
  1013 label *label5
  1014 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+ 1015 write "Moving..." .display ".status3"
  1016 label *label212
  1017 label *label213
  1018 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp220
 
  1028 label *label6
  1029 set *tmp223 :moveTo.1:x
  1030 set *tmp224 :moveTo.1:y
-    * set :moveTo:x *tmp223
-    * set :moveTo:y *tmp224
+ 1031 set :moveTo:x :moveTo.1:x
+ 1032 set :moveTo:y :moveTo.1:y
  1033 set :moveTo:radius 6
  1034 setaddr :moveTo*retaddr *label217 (h:*label217)
  1035 call *label5 *invalid :moveTo*retval (m:*label217) (h:*label217)
 
  1039 end
  1040 label *label7
  1041 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1042 write "Moving..." .display ".status3"
  1043 label *label219
  1044 label *label220
  1045 sensor *tmp225 @unit @firstItem
 
  1069 end
  1070 label *label9
  1071 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1072 write "Depositing..." .display ".status3"
  1073 label *label228
  1074 sensor *tmp232 @unit @firstItem
  1075 jump *label229 notEqual *tmp232 :depositItems:item
 
  1099 label *label230
  1100 set :transportStatus:target 0
  1101 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1102 write 0 .display ".transportTarget"
+ 1103 write null .display ".transportItem"
  1104 label *label238
  1105 label *label227
  1106 return :depositItems*retaddr
 
  1109 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 0
  1110 jump *label240 notEqual *tmp242 false
  1111 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1112 set .ERROR "Cannot locate ore"
  1113 stop
  1114 label *label242
  1115 label *label240
 
  1121 op min :mineOre:amount :mineOre:amount 30
  1122 set :transportStatus.1:target :mineOre:amount
  1123 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1124 write :mineOre:amount .display ".transportTarget"
+ 1125 write :mineOre:ore .display ".transportItem"
  1126 label *label244
  1127 set :locateOre:ore :mineOre:ore
  1128 setaddr :locateOre*retaddr *label245 (h:*label245)
 
  1130 label *label245
  1131 set :mineOre:x :locateOre:x
  1132 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1133 set :moveToEmpty:x :locateOre:x
+ 1134 set :moveToEmpty:y :locateOre:y
  1135 setaddr :moveToEmpty*retaddr *label246 (h:*label246)
  1136 call *label7 *invalid :moveToEmpty*retval (m:*label246) (h:*label246)
  1137 label *label246
 
  1148 label *label247
  1149 label *label248
  1150 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1151 write "Mining..." .display ".status3"
  1152 label *label253
  1153 op mul :second:result @second TIME_COMPRESS
  1154 set *tmp252 :second:result
  1155 label *label254
-    * op add :mineOre:stop *tmp252 10
+ 1156 op add :mineOre:stop :second:result 10
  1157 label *label255
  1158 sensor :mineOre:item @unit @firstItem
  1159 op notEqual *tmp255 :mineOre:item null
 
  1167 op mul :second.1:result @second TIME_COMPRESS
  1168 set *tmp259 :second.1:result
  1169 label *label260
-    * jump *label261 lessThanEq *tmp259 :mineOre:stop
+ 1170 jump *label261 lessThanEq :second.1:result :mineOre:stop
  1171 jump *label257 always
  1172 label *label261
  1173 label *label262
 
  1188 set :status2:text "Mining "
  1189 set :status2:item :mineOre.1:ore
  1190 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1191 write "Mining " .display ".status2"
+ 1192 write :mineOre.1:ore .display ".item2"
+ 1193 write "core" .display ".block2"
  1194 label *label265
  1195 set :mineOre:ore :mineOre.1:ore
  1196 set :mineOre:amount 30
 
  1205 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1206 set :transportStatus.2:item :fetchBlock:item
  1207 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1208 write :fetchBlock:item .display ".transportItem"
  1209 label *label268
  1210 set :status2.1:text "Fetching "
  1211 set :status2.1:item :fetchBlock:item
  1212 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1213 write "Fetching " .display ".status2"
+ 1214 write :fetchBlock:item .display ".item2"
+ 1215 write :fetchBlock:block .display ".block2"
  1216 label *label269
  1217 sensor *tmp266 :fetchBlock:block @x
  1218 sensor *tmp267 :fetchBlock:block @y
 
  1289 sensor *tmp294 .press @coal
  1290 jump *label296 greaterThanEq *tmp294 5
  1291 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1292 write "Goal 1: graphite requirement" .display ".status1"
  1293 label *label298
  1294 set :supplyBlock:block .press
  1295 set :supplyBlock:ore @coal
  1296 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1297 set :status2.2:item @coal
+ 1298 set :status2.2:block .press
+ 1299 write "Supplying " .display ".status2"
+ 1300 write :supplyBlock:ore .display ".item2"
+ 1301 write :supplyBlock:block .display ".block2"
  1302 label *label300
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp298 :supplyBlock:block :supplyBlock:ore
+ 1303 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1304 sensor *tmp298 .press @coal
  1305 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp298
  1306 jump *label301 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1307 set :mineOre:ore @coal
  1308 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1309 set :mineOre:block .press
  1310 setaddr :mineOre*retaddr *label303 (h:*label303)
  1311 call *label11 *invalid :mineOre*retval (m:*label303) (h:*label303)
  1312 label *label303
 
  1323 sensor *tmp305 .smelter @coal
  1324 jump *label306 greaterThanEq *tmp305 5
  1325 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1326 write "Goal 2: coal for silicon requirement" .display ".status1"
  1327 label *label308
  1328 set :supplyBlock.1:block .smelter
  1329 set :supplyBlock.1:ore @coal
  1330 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1331 set :status2.3:item @coal
+ 1332 set :status2.3:block .smelter
+ 1333 write "Supplying " .display ".status2"
+ 1334 write :supplyBlock.1:ore .display ".item2"
+ 1335 write :supplyBlock.1:block .display ".block2"
  1336 label *label310
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp309 :supplyBlock.1:block :supplyBlock.1:ore
+ 1337 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1338 sensor *tmp309 .smelter @coal
  1339 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp309
  1340 jump *label311 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1341 set :mineOre:ore @coal
  1342 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1343 set :mineOre:block .smelter
  1344 setaddr :mineOre*retaddr *label313 (h:*label313)
  1345 call *label11 *invalid :mineOre*retval (m:*label313) (h:*label313)
  1346 label *label313
 
  1353 sensor *tmp313 .smelter @sand
  1354 jump *label314 greaterThanEq *tmp313 5
  1355 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1356 write "Goal 3: sand for silicon requirement" .display ".status1"
  1357 label *label316
  1358 set :supplyBlock.2:block .smelter
  1359 set :supplyBlock.2:ore @sand
  1360 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1361 set :status2.4:item @sand
+ 1362 set :status2.4:block .smelter
+ 1363 write "Supplying " .display ".status2"
+ 1364 write :supplyBlock.2:ore .display ".item2"
+ 1365 write :supplyBlock.2:block .display ".block2"
  1366 label *label318
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp317 :supplyBlock.2:block :supplyBlock.2:ore
+ 1367 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1368 sensor *tmp317 .smelter @sand
  1369 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp317
  1370 jump *label319 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1371 set :mineOre:ore @sand
  1372 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1373 set :mineOre:block .smelter
  1374 setaddr :mineOre*retaddr *label321 (h:*label321)
  1375 call *label11 *invalid :mineOre*retval (m:*label321) (h:*label321)
  1376 label *label321
 
  1388 sensor *tmp324 .generator @coal
  1389 jump *label324 greaterThanEq *tmp324 2
  1390 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1391 write "Goal 4: supplying generator" .display ".status1"
  1392 label *label326
  1393 set :supplyBlock.3:block .generator
  1394 set :supplyBlock.3:ore @coal
  1395 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1396 set :status2.5:item @coal
+ 1397 set :status2.5:block .generator
+ 1398 write "Supplying " .display ".status2"
+ 1399 write :supplyBlock.3:ore .display ".item2"
+ 1400 write :supplyBlock.3:block .display ".block2"
  1401 label *label328
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp328 :supplyBlock.3:block :supplyBlock.3:ore
+ 1402 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1403 sensor *tmp328 .generator @coal
  1404 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp328
  1405 jump *label329 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1406 set :mineOre:ore @coal
  1407 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1408 set :mineOre:block .generator
  1409 setaddr :mineOre*retaddr *label331 (h:*label331)
  1410 call *label11 *invalid :mineOre*retval (m:*label331) (h:*label331)
  1411 label *label331
 
  1430 label *label333
  1431 set :supplyBase0:titaniumTrigger *tmp334
  1432 sensor *tmp338 .titaniumDrill @titanium
-    * jump *label334 greaterThanEq *tmp338 :supplyBase0:titaniumTrigger
+ 1433 jump *label334 greaterThanEq *tmp338 *tmp334
  1434 jump *label336 notEqual :supplyBase0:supplied false
  1435 sensor *tmp343 .battery @totalPower
  1436 op mul *tmp344 .unloader1 .powerTarget
  1437 jump *label338 greaterThanEq *tmp343 *tmp344
  1438 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1439 write "Goal 5: supplying generator" .display ".status1"
  1440 label *label340
  1441 set :mineOre.1:ore @coal
  1442 setaddr :mineOre.1*retaddr *label341 (h:*label341)
 
  1447 sensor *tmp347 .core @silicon
  1448 jump *label342 greaterThanEq *tmp347 .targetSilicon
  1449 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1450 write "Goal 6: silicon requirement" .display ".status1"
  1451 label *label344
  1452 sensor :supplyBase0:coal .core @coal
  1453 sensor :supplyBase0:sand .core @sand
 
  1458 set *tmp353 @sand
  1459 label *label346
  1460 set :supplyBase0:ore *tmp353
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1461 set :mineOre.1:ore *tmp353
  1462 setaddr :mineOre.1*retaddr *label347 (h:*label347)
  1463 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
  1464 label *label347
 
  1467 sensor *tmp354 .core @copper
  1468 jump *label348 greaterThanEq *tmp354 .targetCopper
  1469 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1470 write "Goal 7: copper requirement" .display ".status1"
  1471 label *label350
  1472 set :mineOre.1:ore @copper
  1473 setaddr :mineOre.1*retaddr *label351 (h:*label351)
 
  1478 sensor *tmp357 .core @lead
  1479 jump *label352 greaterThanEq *tmp357 .targetLead
  1480 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1481 write "Goal 8: lead requirement" .display ".status1"
  1482 label *label354
  1483 set :mineOre.1:ore @lead
  1484 setaddr :mineOre.1*retaddr *label355 (h:*label355)
 
  1489 sensor *tmp360 .core @metaglass
  1490 jump *label356 greaterThanEq *tmp360 .targetMetaglass
  1491 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1492 write "Goal 9: metaglass requirement" .display ".status1"
  1493 label *label358
  1494 set :mineOre.1:ore @sand
  1495 setaddr :mineOre.1*retaddr *label359 (h:*label359)
 
  1498 jump *label357 always
  1499 label *label356
  1500 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1501 write "Goal 10: supplying base" .display ".status1"
  1502 label *label360
  1503 sensor :supplyBase0:coal.1 .core @coal
  1504 sensor :supplyBase0:sand.1 .core @sand
 
  1509 set *tmp366 @sand
  1510 label *label362
  1511 set :supplyBase0:ore.1 *tmp366
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1512 set :mineOre.1:ore *tmp366
  1513 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1514 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1515 label *label363
 
  1523 jump *label335 always
  1524 label *label334
  1525 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1526 write "Goal 11: Fetching titanium" .display ".status1"
  1527 label *label364
  1528 set :fetchBlock:block .titaniumDrill
  1529 set :fetchBlock:item @titanium
 
  1536 end
  1537 label *label20
  1538 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1539 write "Phase 1: supplying base" .display ".status1"
  1540 label *label367
  1541 set :mineOre.1:ore @coal
  1542 setaddr :mineOre.1*retaddr *label368 (h:*label368)
 
  1589 label *label376
  1590 set :targetMet*retval false
  1591 jump *label374 always
-    * set :targetMet*retval null
  1592 label *label374
  1593 return :targetMet*retaddr
  1594 end
 
  1673 op mul :second.2:result @second TIME_COMPRESS
  1674 set *tmp403 :second.2:result
  1675 label *label403
-    * op floor *tmp404 *tmp403
+ 1676 op floor *tmp404 :second.2:result
  1677 op mul *tmp405 *tmp404 1000
  1678 op add *tmp406 :log:encodedId *tmp405
-    * write *tmp406 bank1 *tmp401
+ 1679 write *tmp406 bank1 *tmp400
  1680 label *label402
  1681 return :log*retaddr
  1682 end
 
  1695 call *label6 *invalid :moveTo.1*retval (m:*label407) (h:*label407)
  1696 label *label407
  1697 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1698 write "Building..." .display ".status3"
  1699 label *label408
  1700 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1701 jump *label409 equal :buildBlockAt:building null
 
  1710 label *label413
  1711 label *label414
  1712 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1713 set .ERROR "Cannot build at ("
  1714 stop
  1715 label *label415
  1716 label *label409
 
  1733 label *label421
  1734 set :buildBlockAt*retval :buildBlockAt:building
  1735 jump *label406 always
-    * set :buildBlockAt*retval null
  1736 label *label406
  1737 return :buildBlockAt*retaddr
  1738 end
 
  1758 label *label424
  1759 set :buildBlock*retval :buildBlockAt*retval
  1760 jump *label422 always
-    * set :buildBlock*retval null
  1761 label *label422
  1762 return :buildBlock*retaddr
  1763 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-256 instructions):
 
    18 jump *label29 equal .core null
    19 label *label31
    20 set .display processor1
-    * set .flareController processor3
-    * set .oreLocator processor4
    21 set :findUnits:type @mono
    22 setaddr :findUnits*retaddr *label32 (h:*label32)
    23 call *label28 *invalid :findUnits*retval (m:*label32) (h:*label32)
 
    36 label *label34
    37 write :findUnits:count processor1 ".polys"
    38 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    39 label *label36
    40 op add :buildBlockFromCfg:x .coreX -1.5
    41 op add :buildBlockFromCfg:y .coreY 2.5
 
    61 label *label38
    62 label *label35
    63 set .press *tmp90
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    64 label *label42
    65 op add :buildBlockFromCfg.1:x .coreX 0
    66 op add :buildBlockFromCfg.1:y .coreY 4
 
    86 label *label44
    87 label *label41
    88 set .battery *tmp94
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    89 label *label48
    90 op add :buildBlockFromCfg.2:x .coreX -1
    91 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   93 set :buildBlock:y :buildBlockFromCfg.1:y
    94 set :buildBlock:graphite 0
    95 set :buildBlock:silicon 0
    96 set :buildBlock:titanium 0
 
   106 multilabel *label51 (m:marker2)
   107 label *label50
   108 label *label47
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   109 label *label54
   110 op add :buildBlockFromCfg.3:x .coreX 0
   111 op add :buildBlockFromCfg.3:y .coreY 3
   112 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  113 set :buildBlock:x :buildBlockFromCfg.1:x
   114 set :buildBlock:y :buildBlockFromCfg.3:y
   115 set :buildBlock:copper 25
   116 set :buildBlock:lead 15
 
   132 label *label53
   133 set .generator *tmp102
   134 set .powerTarget 800
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   135 label *label60
   136 op add :buildBlockFromCfg.4:x .coreX 1.5
   137 op add :buildBlockFromCfg.4:y .coreY 2.5
   138 set :buildBlock:block @silicon-smelter
   139 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  140 set :buildBlock:y :buildBlockFromCfg:y
   141 set :buildBlock:copper 30
   142 set :buildBlock:lead 25
   143 set :buildBlock:graphite 0
 
   186 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   187 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   188 jump *label69 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   189 set .ERROR "Cannot locate spot for titanium drill"
   190 stop
   191 label *label71
 
   205 jump *label65 always
   206 label *label65
   207 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp110 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  208 write :buildBlockAt*retval processor1 ".titaniumDrill"
   209 label *label74
   210 op add :buildBlockFromCfg.5:x .coreX 0
   211 op add :buildBlockFromCfg.5:y .coreY 2
   212 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  213 set :buildBlock:x :buildBlockFromCfg.1:x
   214 set :buildBlock:y :buildBlockFromCfg.5:y
   215 set :buildBlock:copper 0
   216 set :buildBlock:lead 0
 
   231 label *label76
   232 label *label73
   233 set .unloader1 *tmp125
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   234 label *label80
   235 op add :buildBlockFromCfg.6:x .coreX 1
   236 op add :buildBlockFromCfg.6:y .coreY 4
   237 set :buildBlock:block @micro-processor
   238 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  239 set :buildBlock:y :buildBlockFromCfg.1:y
   240 set :buildBlock:copper 90
   241 set :buildBlock:lead 50
   242 set :buildBlock:graphite 0
 
   266 write :monos *tmp129 ".monos"
   267 write :flares *tmp129 ".flares"
   268 write :polys *tmp129 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   269 label *label86
   270 op add :buildBlockFromCfg.7:x .coreX -2
   271 op add :buildBlockFromCfg.7:y .coreY -1
 
   289 multilabel *label89 (m:marker7)
   290 label *label88
   291 label *label85
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 1
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   292 label *label92
   293 op add :buildBlockFromCfg.8:x .coreX -2
   294 op add :buildBlockFromCfg.8:y .coreY 1
   295 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  296 set :buildBlock:x :buildBlockFromCfg.7:x
   297 set :buildBlock:y :buildBlockFromCfg.8:y
   298 set :buildBlock:copper 0
   299 set :buildBlock:lead 0
 
   313 multilabel *label95 (m:marker8)
   314 label *label94
   315 label *label91
-    * set .unloader2 *tmp137
   316 write *tmp137 *tmp129 ".unloader2"
-    * set :buildBlockFromCfg.9:block @overflow-gate
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 4
-    * set :buildBlockFromCfg.9:lead 2
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   317 label *label98
   318 op add :buildBlockFromCfg.9:x .coreX -3
   319 op add :buildBlockFromCfg.9:y .coreY 1
   320 set :buildBlock:block @overflow-gate
   321 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  322 set :buildBlock:y :buildBlockFromCfg.8:y
   323 set :buildBlock:copper 4
   324 set :buildBlock:lead 2
   325 set :buildBlock:graphite 0
 
   337 multilabel *label101 (m:marker9)
   338 label *label100
   339 label *label97
-    * set :buildBlockFromCfg.10:block @air-factory
-    * set :buildBlockFromCfg.10:offsetX -4
-    * set :buildBlockFromCfg.10:offsetY -1
-    * set :buildBlockFromCfg.10:copper 60
-    * set :buildBlockFromCfg.10:lead 70
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 3
-    * set :buildBlockFromCfg.10:config @mono
   340 label *label104
   341 op add :buildBlockFromCfg.10:x .coreX -4
   342 op add :buildBlockFromCfg.10:y .coreY -1
   343 set :buildBlock:block @air-factory
   344 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  345 set :buildBlock:y :buildBlockFromCfg.7:y
   346 set :buildBlock:copper 60
   347 set :buildBlock:lead 70
   348 set :buildBlock:graphite 0
 
   361 multilabel *label107 (m:marker10)
   362 label *label106
   363 label *label103
-    * set .factory *tmp145
   364 write *tmp145 *tmp129 ".factory"
   365 write *tmp145 processor1 ".factory"
   366 write 2 *tmp129 ".flareTarget"
-    * set :buildUnits:unit @flare
   367 write 0 processor1 ".totalTargets"
   368 write null processor1 ".nextBlock"
   369 write 0 *tmp129 ".leadReserve"
 
   435 wait 1e-15
   436 read *tmp166 processor3 ":start*finished"
   437 jump *label122 equal *tmp166 false
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   438 label *label124
   439 op add :buildBlockFromCfg.11:x .coreX 2
   440 op add :buildBlockFromCfg.11:y .coreY 0
 
   443 set :buildBlock:y :buildBlockFromCfg.11:y
   444 set :buildBlock:copper 0
   445 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   446 set :buildBlock:silicon 30
   447 set :buildBlock:titanium 25
   448 set :buildBlock:metaglass 0
 
   457 multilabel *label127 (m:marker11)
   458 label *label126
   459 label *label123
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   460 label *label130
   461 op add :buildBlockFromCfg.12:x .coreX 3.5
   462 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   481 multilabel *label133 (m:marker12)
   482 label *label132
   483 label *label129
-    * set .kiln *tmp171
   484 write *tmp171 *tmp129 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   485 label *label136
   486 op add :buildBlockFromCfg.13:x .coreX 2
   487 op add :buildBlockFromCfg.13:y .coreY 1
   488 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  489 set :buildBlock:x :buildBlockFromCfg.11:x
+  490 set :buildBlock:y :buildBlockFromCfg.8:y
   491 set :buildBlock:copper 3
   492 set :buildBlock:lead 0
   493 set :buildBlock:graphite 0
 
   505 multilabel *label139 (m:marker13)
   506 label *label138
   507 label *label135
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   508 label *label142
   509 op add :buildBlockFromCfg.14:x .coreX -3.5
   510 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   514 set :buildBlock:copper 30
   515 set :buildBlock:lead 30
   516 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   517 set :buildBlock:titanium 0
   518 set :buildBlock:metaglass 30
   519 set :buildBlock:rotation 0
 
   527 multilabel *label145 (m:marker14)
   528 label *label144
   529 label *label141
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   530 label *label148
   531 op add :buildBlockFromCfg.15:x .coreX -3.5
   532 op add :buildBlockFromCfg.15:y .coreY 2.5
   533 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  534 set :buildBlock:x :buildBlockFromCfg.14:x
+  535 set :buildBlock:y :buildBlockFromCfg:y
   536 set :buildBlock:copper 35
   537 set :buildBlock:lead 40
   538 set :buildBlock:graphite 25
 
   540 set :buildBlock:titanium 0
   541 set :buildBlock:metaglass 0
   542 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   543 setaddr :buildBlock*retaddr *label152 (h:*label152)
   544 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   545 label *label152
 
   550 multilabel *label151 (m:marker15)
   551 label *label150
   552 label *label147
-    * set .generator2 *tmp183
   553 write *tmp183 *tmp129 ".generator2"
   554 set .graphiteSurplus 200
   555 set .siliconSurplus 1000
 
   603 jump *label167 equal *tmp196 false
   604 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   605 jump *label168 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   606 set .ERROR "Cannot locate spot for thorium drill"
   607 stop
   608 label *label170
 
   761 read *tmp213 processor3 ":addThoriumDrill*finished"
   762 jump *label194 equal *tmp213 false
   763 label *label164
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   764 label *label196
   765 op add :buildBlockFromCfg.16:x .coreX -4
   766 op add :buildBlockFromCfg.16:y .coreY 1
   767 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  768 set :buildBlock:x :buildBlockFromCfg.10:x
+  769 set :buildBlock:y :buildBlockFromCfg.8:y
   770 set :buildBlock:copper 2
   771 set :buildBlock:lead 2
   772 set :buildBlock:graphite 0
   773 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   774 set :buildBlock:config @coal
   775 setaddr :buildBlock*retaddr *label200 (h:*label200)
   776 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
 
   806 label *label209
   807 end
   808 label *label5
-    * set :status3:text "Moving..."
   809 write "Moving..." .display ".status3"
   810 label *label212
   811 label *label213
 
   820 return :moveTo*retaddr
   821 end
   822 label *label6
-    * set *tmp223 :moveTo.1:x
-    * set *tmp224 :moveTo.1:y
   823 set :moveTo:x :moveTo.1:x
   824 set :moveTo:y :moveTo.1:y
   825 set :moveTo:radius 6
 
   830 return :moveTo.1*retaddr
   831 end
   832 label *label7
-    * set :status3.1:text "Moving..."
   833 write "Moving..." .display ".status3"
   834 label *label219
   835 label *label220
 
   859 return :moveToBlock*retaddr
   860 end
   861 label *label9
-    * set :status3.2:text "Depositing..."
   862 write "Depositing..." .display ".status3"
   863 label *label228
   864 sensor *tmp232 @unit @firstItem
 
   887 jump *label235 always
   888 label *label237
   889 label *label230
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   890 write 0 .display ".transportTarget"
   891 write null .display ".transportItem"
   892 label *label238
 
   896 label *label10
   897 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 0
   898 jump *label240 notEqual *tmp242 false
-    * set :error.3:error "Cannot locate ore"
   899 set .ERROR "Cannot locate ore"
   900 stop
   901 label *label242
 
   906 end
   907 label *label11
   908 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   909 write :mineOre:amount .display ".transportTarget"
   910 write :mineOre:ore .display ".transportItem"
   911 label *label244
 
   932 label *label249
   933 label *label247
   934 label *label248
-    * set :status3.3:text "Mining..."
   935 write "Mining..." .display ".status3"
   936 label *label253
   937 op mul :second:result @second TIME_COMPRESS
-    * set *tmp252 :second:result
   938 label *label254
   939 op add :mineOre:stop :second:result 10
   940 label *label255
 
   948 label *label259
   949 ucontrol mine :mineOre:x :mineOre:y
   950 op mul :second.1:result @second TIME_COMPRESS
-    * set *tmp259 :second.1:result
   951 label *label260
   952 jump *label261 lessThanEq :second.1:result :mineOre:stop
   953 jump *label257 always
 
   967 return :mineOre*retaddr
   968 end
   969 label *label12
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   970 write "Mining " .display ".status2"
   971 write :mineOre.1:ore .display ".item2"
   972 write "core" .display ".block2"
 
   982 end
   983 label *label13
   984 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   985 write :transportStatus.2:target .display ".transportTarget"
   986 write :fetchBlock:item .display ".transportItem"
   987 label *label268
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   988 write "Fetching " .display ".status2"
   989 write :fetchBlock:item .display ".item2"
   990 write :fetchBlock:block .display ".block2"
 
  1063 jump *label294 greaterThanEq *tmp291 .targetGraphite
  1064 sensor *tmp294 .press @coal
  1065 jump *label296 greaterThanEq *tmp294 5
-    * set :status1:text "Goal 1: graphite requirement"
  1066 write "Goal 1: graphite requirement" .display ".status1"
  1067 label *label298
  1068 set :supplyBlock:block .press
  1069 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1070 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1071 write @coal .display ".item2"
+ 1072 write .press .display ".block2"
  1073 label *label300
  1074 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1075 sensor *tmp298 .press @coal
 
  1093 jump *label304 greaterThanEq *tmp302 .targetSilicon
  1094 sensor *tmp305 .smelter @coal
  1095 jump *label306 greaterThanEq *tmp305 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1096 write "Goal 2: coal for silicon requirement" .display ".status1"
  1097 label *label308
  1098 set :supplyBlock.1:block .smelter
  1099 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1100 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1101 write @coal .display ".item2"
+ 1102 write .smelter .display ".block2"
  1103 label *label310
  1104 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1105 sensor *tmp309 .smelter @coal
 
  1119 label *label306
  1120 sensor *tmp313 .smelter @sand
  1121 jump *label314 greaterThanEq *tmp313 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1122 write "Goal 3: sand for silicon requirement" .display ".status1"
  1123 label *label316
  1124 set :supplyBlock.2:block .smelter
  1125 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1126 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1127 write @sand .display ".item2"
+ 1128 write .smelter .display ".block2"
  1129 label *label318
  1130 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1131 sensor *tmp317 .smelter @sand
 
  1150 jump *label322 greaterThanEq *tmp321 .powerTarget
  1151 sensor *tmp324 .generator @coal
  1152 jump *label324 greaterThanEq *tmp324 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1153 write "Goal 4: supplying generator" .display ".status1"
  1154 label *label326
  1155 set :supplyBlock.3:block .generator
  1156 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1157 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1158 write @coal .display ".item2"
+ 1159 write .generator .display ".block2"
  1160 label *label328
  1161 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1162 sensor *tmp328 .generator @coal
 
  1187 label *label332
  1188 set *tmp334 100
  1189 label *label333
-    * set :supplyBase0:titaniumTrigger *tmp334
  1190 sensor *tmp338 .titaniumDrill @titanium
  1191 jump *label334 greaterThanEq *tmp338 *tmp334
  1192 jump *label336 notEqual :supplyBase0:supplied false
  1193 sensor *tmp343 .battery @totalPower
  1194 op mul *tmp344 .unloader1 .powerTarget
  1195 jump *label338 greaterThanEq *tmp343 *tmp344
-    * set :status1.4:text "Goal 5: supplying generator"
  1196 write "Goal 5: supplying generator" .display ".status1"
  1197 label *label340
  1198 set :mineOre.1:ore @coal
 
  1203 label *label338
  1204 sensor *tmp347 .core @silicon
  1205 jump *label342 greaterThanEq *tmp347 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1206 write "Goal 6: silicon requirement" .display ".status1"
  1207 label *label344
  1208 sensor :supplyBase0:coal .core @coal
 
  1213 label *label345
  1214 set *tmp353 @sand
  1215 label *label346
-    * set :supplyBase0:ore *tmp353
  1216 set :mineOre.1:ore *tmp353
  1217 setaddr :mineOre.1*retaddr *label347 (h:*label347)
  1218 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
 
  1221 label *label342
  1222 sensor *tmp354 .core @copper
  1223 jump *label348 greaterThanEq *tmp354 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1224 write "Goal 7: copper requirement" .display ".status1"
  1225 label *label350
  1226 set :mineOre.1:ore @copper
 
  1231 label *label348
  1232 sensor *tmp357 .core @lead
  1233 jump *label352 greaterThanEq *tmp357 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1234 write "Goal 8: lead requirement" .display ".status1"
  1235 label *label354
  1236 set :mineOre.1:ore @lead
 
  1241 label *label352
  1242 sensor *tmp360 .core @metaglass
  1243 jump *label356 greaterThanEq *tmp360 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1244 write "Goal 9: metaglass requirement" .display ".status1"
  1245 label *label358
  1246 set :mineOre.1:ore @sand
 
  1249 label *label359
  1250 jump *label357 always
  1251 label *label356
-    * set :status1.9:text "Goal 10: supplying base"
  1252 write "Goal 10: supplying base" .display ".status1"
  1253 label *label360
  1254 sensor :supplyBase0:coal.1 .core @coal
 
  1259 label *label361
  1260 set *tmp366 @sand
  1261 label *label362
-    * set :supplyBase0:ore.1 *tmp366
  1262 set :mineOre.1:ore *tmp366
  1263 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1264 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
 
  1272 label *label337
  1273 jump *label335 always
  1274 label *label334
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1275 write "Goal 11: Fetching titanium" .display ".status1"
  1276 label *label364
  1277 set :fetchBlock:block .titaniumDrill
 
  1284 return :supplyBase0*retaddr
  1285 end
  1286 label *label20
-    * set :status1.11:text "Phase 1: supplying base"
  1287 write "Phase 1: supplying base" .display ".status1"
  1288 label *label367
  1289 set :mineOre.1:ore @coal
 
  1417 read *tmp79 bank1 511
  1418 op sub *tmp400 *tmp79 1
  1419 write *tmp400 bank1 511
-    * set *tmp401 *tmp400
  1420 op mul :second.2:result @second TIME_COMPRESS
-    * set *tmp403 :second.2:result
  1421 label *label403
  1422 op floor *tmp404 :second.2:result
  1423 op mul *tmp405 *tmp404 1000
 
  1440 setaddr :moveTo.1*retaddr *label407 (h:*label407)
  1441 call *label6 *invalid :moveTo.1*retval (m:*label407) (h:*label407)
  1442 label *label407
-    * set :status3.4:text "Building..."
  1443 write "Building..." .display ".status3"
  1444 label *label408
  1445 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1454 jump *label406 always
  1455 label *label413
  1456 label *label414
-    * set :error.4:error "Cannot build at ("
  1457 set .ERROR "Cannot build at ("
  1458 stop
  1459 label *label415

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-28 instructions):
 
    88 set .battery *tmp94
    89 label *label48
    90 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:graphite 0
 
   106 label *label50
   107 label *label47
   108 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX 0
   109 op add :buildBlockFromCfg.3:y .coreY 3
   110 set :buildBlock:block @combustion-generator
   111 set :buildBlock:x :buildBlockFromCfg.1:x
 
   132 set .powerTarget 800
   133 label *label60
   134 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   135 set :buildBlock:block @silicon-smelter
   136 set :buildBlock:x :buildBlockFromCfg.4:x
   137 set :buildBlock:y :buildBlockFromCfg:y
 
   204 set .titaniumDrill :buildBlockAt*retval
   205 write :buildBlockAt*retval processor1 ".titaniumDrill"
   206 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX 0
   207 op add :buildBlockFromCfg.5:y .coreY 2
   208 set :buildBlock:block @unloader
   209 set :buildBlock:x :buildBlockFromCfg.1:x
 
   229 set .unloader1 *tmp125
   230 label *label80
   231 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   232 set :buildBlock:block @micro-processor
   233 set :buildBlock:x :buildBlockFromCfg.6:x
   234 set :buildBlock:y :buildBlockFromCfg.1:y
 
   285 label *label88
   286 label *label85
   287 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX -2
   288 op add :buildBlockFromCfg.8:y .coreY 1
   289 set :buildBlock:block @unloader
   290 set :buildBlock:x :buildBlockFromCfg.7:x
 
   310 write *tmp137 *tmp129 ".unloader2"
   311 label *label98
   312 op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY 1
   313 set :buildBlock:block @overflow-gate
   314 set :buildBlock:x :buildBlockFromCfg.9:x
   315 set :buildBlock:y :buildBlockFromCfg.8:y
 
   332 label *label97
   333 label *label104
   334 op add :buildBlockFromCfg.10:x .coreX -4
-    * op add :buildBlockFromCfg.10:y .coreY -1
   335 set :buildBlock:block @air-factory
   336 set :buildBlock:x :buildBlockFromCfg.10:x
   337 set :buildBlock:y :buildBlockFromCfg.7:y
   338 set :buildBlock:copper 60
   339 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   340 set :buildBlock:silicon 0
   341 set :buildBlock:titanium 0
   342 set :buildBlock:metaglass 0
 
   474 label *label129
   475 write *tmp171 *tmp129 ".kiln"
   476 label *label136
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   477 set :buildBlock:block @junction
   478 set :buildBlock:x :buildBlockFromCfg.11:x
   479 set :buildBlock:y :buildBlockFromCfg.8:y
   480 set :buildBlock:copper 3
   481 set :buildBlock:lead 0
   482 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   483 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   484 set :buildBlock:rotation 0
   485 set :buildBlock:config null
   486 setaddr :buildBlock*retaddr *label140 (h:*label140)
 
   504 set :buildBlock:titanium 0
   505 set :buildBlock:metaglass 30
   506 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   507 setaddr :buildBlock*retaddr *label146 (h:*label146)
   508 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   509 label *label146
 
   514 label *label144
   515 label *label141
   516 label *label148
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   517 set :buildBlock:block @steam-generator
   518 set :buildBlock:x :buildBlockFromCfg.14:x
   519 set :buildBlock:y :buildBlockFromCfg:y
 
   521 set :buildBlock:lead 40
   522 set :buildBlock:graphite 25
   523 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   524 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   525 setaddr :buildBlock*retaddr *label152 (h:*label152)
   526 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   527 label *label152
 
   744 jump *label194 equal *tmp213 false
   745 label *label164
   746 label *label196
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   747 set :buildBlock:block @sorter
   748 set :buildBlock:x :buildBlockFromCfg.10:x
   749 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1045 jump *label296 greaterThanEq *tmp294 5
  1046 write "Goal 1: graphite requirement" .display ".status1"
  1047 label *label298
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1048 write "Supplying " .display ".status2"
  1049 write @coal .display ".item2"
  1050 write .press .display ".block2"
 
  1073 jump *label306 greaterThanEq *tmp305 5
  1074 write "Goal 2: coal for silicon requirement" .display ".status1"
  1075 label *label308
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1076 write "Supplying " .display ".status2"
  1077 write @coal .display ".item2"
  1078 write .smelter .display ".block2"
 
  1097 jump *label314 greaterThanEq *tmp313 5
  1098 write "Goal 3: sand for silicon requirement" .display ".status1"
  1099 label *label316
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1100 write "Supplying " .display ".status2"
  1101 write @sand .display ".item2"
  1102 write .smelter .display ".block2"
 
  1126 jump *label324 greaterThanEq *tmp324 2
  1127 write "Goal 4: supplying generator" .display ".status1"
  1128 label *label326
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1129 write "Supplying " .display ".status2"
  1130 write @coal .display ".item2"
  1131 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   315 set :buildBlock:y :buildBlockFromCfg.8:y
   316 set :buildBlock:copper 4
   317 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   318 set :buildBlock:silicon 0
   319 set :buildBlock:titanium 0
   320 set :buildBlock:metaglass 0
 
   336 set :buildBlock:y :buildBlockFromCfg.7:y
   337 set :buildBlock:copper 60
   338 set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
   339 set :buildBlock:titanium 0
   340 set :buildBlock:metaglass 0
   341 set :buildBlock:rotation 3
 
   457 set :buildBlock:graphite 30
   458 set :buildBlock:silicon 0
   459 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   460 set :buildBlock:rotation 0
   461 set :buildBlock:config null
   462 setaddr :buildBlock*retaddr *label134 (h:*label134)
 
   479 set :buildBlock:graphite 0
   480 set :buildBlock:titanium 0
   481 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   482 setaddr :buildBlock*retaddr *label140 (h:*label140)
   483 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   484 label *label140
 
   497 set :buildBlock:copper 30
   498 set :buildBlock:lead 30
   499 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   500 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   501 setaddr :buildBlock*retaddr *label146 (h:*label146)
   502 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   503 label *label146

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   138 set :buildBlock:copper 30
   139 set :buildBlock:lead 25
   140 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   141 set :buildBlock:titanium 0
   142 set :buildBlock:metaglass 0
   143 set :buildBlock:rotation 0
 
   290 set :buildBlock:y :buildBlockFromCfg.8:y
   291 set :buildBlock:copper 0
   292 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   293 set :buildBlock:silicon 30
   294 set :buildBlock:titanium 25
   295 set :buildBlock:metaglass 0
 
   432 set :buildBlock:lead 0
   433 set :buildBlock:silicon 30
   434 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   435 set :buildBlock:rotation 0
   436 set :buildBlock:config null
   437 setaddr :buildBlock*retaddr *label128 (h:*label128)
 
   455 set :buildBlock:silicon 0
   456 set :buildBlock:titanium 0
   457 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   458 setaddr :buildBlock*retaddr *label134 (h:*label134)
   459 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   460 label *label134
 
   473 set :buildBlock:copper 3
   474 set :buildBlock:lead 0
   475 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   476 setaddr :buildBlock*retaddr *label140 (h:*label140)
   477 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   478 label *label140

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
   115 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   116 set :buildBlock:titanium 0
   117 set :buildBlock:metaglass 0
   118 set :buildBlock:rotation 0
 
   267 set :buildBlock:y :buildBlockFromCfg.7:y
   268 set :buildBlock:copper 2
   269 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   270 set :buildBlock:silicon 0
   271 set :buildBlock:titanium 0
   272 set :buildBlock:metaglass 0
 
   315 set :buildBlock:titanium 0
   316 set :buildBlock:metaglass 0
   317 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   318 setaddr :buildBlock*retaddr *label102 (h:*label102)
   319 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   320 label *label102
 
   331 set :buildBlock:y :buildBlockFromCfg.7:y
   332 set :buildBlock:copper 60
   333 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   334 set :buildBlock:rotation 3
   335 set :buildBlock:config @mono
   336 setaddr :buildBlock*retaddr *label108 (h:*label108)
 
   449 set :buildBlock:graphite 30
   450 set :buildBlock:silicon 0
   451 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   452 setaddr :buildBlock*retaddr *label134 (h:*label134)
   453 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   454 label *label134

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    94 set :buildBlock:titanium 0
    95 set :buildBlock:metaglass 0
    96 set :buildBlock:rotation 0
 
   231 set :buildBlock:y :buildBlockFromCfg.1:y
   232 set :buildBlock:copper 90
   233 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   234 set :buildBlock:silicon 50
   235 set :buildBlock:titanium 0
   236 set :buildBlock:metaglass 0
 
   266 set :buildBlock:copper 2
   267 set :buildBlock:lead 6
   268 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   269 set :buildBlock:metaglass 0
   270 set :buildBlock:rotation 0
   271 set :buildBlock:config null
 
   289 set :buildBlock:titanium 25
   290 set :buildBlock:metaglass 0
   291 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   292 setaddr :buildBlock*retaddr *label96 (h:*label96)
   293 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   294 label *label96
 
   309 set :buildBlock:lead 2
   310 set :buildBlock:silicon 0
   311 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   312 setaddr :buildBlock*retaddr *label102 (h:*label102)
   313 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   314 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
    72 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    73 set :buildBlock:titanium 0
    74 set :buildBlock:metaglass 0
    75 set :buildBlock:rotation 0
 
   135 set :buildBlock:copper 30
   136 set :buildBlock:lead 25
   137 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   138 set :buildBlock:metaglass 0
   139 set :buildBlock:rotation 0
   140 set :buildBlock:config null
 
   205 set :buildBlock:y :buildBlockFromCfg.5:y
   206 set :buildBlock:copper 0
   207 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   208 set :buildBlock:silicon 30
   209 set :buildBlock:titanium 25
   210 set :buildBlock:metaglass 0
   211 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   212 setaddr :buildBlock*retaddr *label78 (h:*label78)
   213 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   214 label *label78
 
   283 set :buildBlock:lead 0
   284 set :buildBlock:silicon 30
   285 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   286 setaddr :buildBlock*retaddr *label96 (h:*label96)
   287 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   288 label *label96

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   111 set :buildBlock:copper 25
   112 set :buildBlock:lead 15
   113 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   114 set :buildBlock:metaglass 0
   115 set :buildBlock:rotation 0
   116 set :buildBlock:config null
 
   133 set :buildBlock:y :buildBlockFromCfg:y
   134 set :buildBlock:copper 30
   135 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   136 set :buildBlock:metaglass 0
   137 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label64 (h:*label64)
   139 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   140 label *label64
 
   259 set :buildBlock:copper 2
   260 set :buildBlock:lead 6
   261 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   262 set :buildBlock:config null
   263 setaddr :buildBlock*retaddr *label90 (h:*label90)
   264 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
    92 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    93 set :buildBlock:metaglass 0
    94 set :buildBlock:rotation 0
    95 set :buildBlock:config null
 
   109 set :buildBlock:y :buildBlockFromCfg.3:y
   110 set :buildBlock:copper 25
   111 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   112 set :buildBlock:metaglass 0
   113 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   114 setaddr :buildBlock*retaddr *label58 (h:*label58)
   115 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   116 label *label58
 
   223 set :buildBlock:lead 50
   224 set :buildBlock:silicon 50
   225 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   226 set :buildBlock:config processor2
   227 setaddr :buildBlock*retaddr *label84 (h:*label84)
   228 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
    72 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    73 set :buildBlock:metaglass 0
    74 set :buildBlock:rotation 0
    75 set :buildBlock:config null
 
    88 op add :buildBlockFromCfg.2:x .coreX -1
    89 set :buildBlock:x :buildBlockFromCfg.2:x
    90 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    91 set :buildBlock:metaglass 0
    92 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    93 setaddr :buildBlock*retaddr *label52 (h:*label52)
    94 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    95 label *label52
 
   198 set :buildBlock:lead 0
   199 set :buildBlock:silicon 30
   200 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   201 setaddr :buildBlock*retaddr *label78 (h:*label78)
   202 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   203 label *label78

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    69 set :buildBlock:y :buildBlockFromCfg.1:y
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    72 set :buildBlock:metaglass 0
    73 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    74 setaddr :buildBlock*retaddr *label46 (h:*label46)
    75 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    76 label *label46
 
   125 set :buildBlock:y :buildBlockFromCfg:y
   126 set :buildBlock:copper 30
   127 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   128 setaddr :buildBlock*retaddr *label64 (h:*label64)
   129 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   130 label *label64

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
   104 set :buildBlock:y :buildBlockFromCfg.3:y
   105 set :buildBlock:copper 25
   106 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   107 setaddr :buildBlock*retaddr *label58 (h:*label58)
   108 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   109 label *label58

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    86 op add :buildBlockFromCfg.2:x .coreX -1
    87 set :buildBlock:x :buildBlockFromCfg.2:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    89 setaddr :buildBlock*retaddr *label52 (h:*label52)
    90 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    91 label *label52

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    69 set :buildBlock:y :buildBlockFromCfg.1:y
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    72 setaddr :buildBlock*retaddr *label46 (h:*label46)
    73 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    74 label *label46

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    36 label *label34
    37 write :findUnits:count processor1 ".polys"
    38 set :polys :findUnits*retval
+   39 op add :buildBlockFromCfg:x .coreX -1.5
+   40 op add :buildBlockFromCfg:y .coreY 2.5
+   41 set :buildBlock:block @graphite-press
+   42 set :buildBlock:x :buildBlockFromCfg:x
+   43 set :buildBlock:y :buildBlockFromCfg:y
+   44 set :buildBlock:copper 75
+   45 set :buildBlock:lead 30
+   46 set :buildBlock:graphite 0
+   47 set :buildBlock:silicon 0
+   48 set :buildBlock:titanium 0
+   49 set :buildBlock:metaglass 0
+   50 set :buildBlock:rotation 0
+   51 set :buildBlock:config null
+   52 setaddr :buildBlock*retaddr *label40 (h:*label40)
    53 label *label36
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label40 (h:*label40)
    54 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    55 label *label40
    56 set *tmp90 :buildBlock*retval
 
    61 label *label38
    62 label *label35
    63 set .press *tmp90
+   64 op add :buildBlockFromCfg.1:x .coreX 0
+   65 op add :buildBlockFromCfg.1:y .coreY 4
+   66 set :buildBlock:block @battery
+   67 set :buildBlock:x :buildBlockFromCfg.1:x
+   68 set :buildBlock:y :buildBlockFromCfg.1:y
+   69 set :buildBlock:copper 5
+   70 set :buildBlock:lead 20
+   71 setaddr :buildBlock*retaddr *label46 (h:*label46)
    72 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label46 (h:*label46)
    73 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    74 label *label46
    75 set *tmp94 :buildBlock*retval
 
    80 label *label44
    81 label *label41
    82 set .battery *tmp94
+   83 op add :buildBlockFromCfg.2:x .coreX -1
+   84 set :buildBlock:x :buildBlockFromCfg.2:x
+   85 set :buildBlock:y :buildBlockFromCfg.1:y
+   86 setaddr :buildBlock*retaddr *label52 (h:*label52)
    87 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label52 (h:*label52)
    88 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    89 label *label52
    90 jump *label47 always
 
    93 multilabel *label51 (m:marker2)
    94 label *label50
    95 label *label47
+   96 op add :buildBlockFromCfg.3:y .coreY 3
+   97 set :buildBlock:block @combustion-generator
+   98 set :buildBlock:x :buildBlockFromCfg.1:x
+   99 set :buildBlock:y :buildBlockFromCfg.3:y
+  100 set :buildBlock:copper 25
+  101 set :buildBlock:lead 15
+  102 setaddr :buildBlock*retaddr *label58 (h:*label58)
   103 label *label54
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label58 (h:*label58)
   104 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   105 label *label58
   106 set *tmp102 :buildBlock*retval
 
   112 label *label53
   113 set .generator *tmp102
   114 set .powerTarget 800
+  115 op add :buildBlockFromCfg.4:x .coreX 1.5
+  116 set :buildBlock:block @silicon-smelter
+  117 set :buildBlock:x :buildBlockFromCfg.4:x
+  118 set :buildBlock:y :buildBlockFromCfg:y
+  119 set :buildBlock:copper 30
+  120 set :buildBlock:lead 25
+  121 setaddr :buildBlock*retaddr *label64 (h:*label64)
   122 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label64 (h:*label64)
   123 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   124 label *label64
   125 set *tmp106 :buildBlock*retval
 
   179 label *label65
   180 set .titaniumDrill :buildBlockAt*retval
   181 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  182 op add :buildBlockFromCfg.5:y .coreY 2
+  183 set :buildBlock:block @unloader
+  184 set :buildBlock:x :buildBlockFromCfg.1:x
+  185 set :buildBlock:y :buildBlockFromCfg.5:y
+  186 set :buildBlock:copper 0
+  187 set :buildBlock:lead 0
+  188 set :buildBlock:silicon 30
+  189 set :buildBlock:titanium 25
+  190 setaddr :buildBlock*retaddr *label78 (h:*label78)
   191 label *label74
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label78 (h:*label78)
   192 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   193 label *label78
   194 set *tmp125 :buildBlock*retval
 
   199 label *label76
   200 label *label73
   201 set .unloader1 *tmp125
+  202 op add :buildBlockFromCfg.6:x .coreX 1
+  203 set :buildBlock:block @micro-processor
+  204 set :buildBlock:x :buildBlockFromCfg.6:x
+  205 set :buildBlock:y :buildBlockFromCfg.1:y
+  206 set :buildBlock:copper 90
+  207 set :buildBlock:lead 50
+  208 set :buildBlock:silicon 50
+  209 set :buildBlock:titanium 0
+  210 setaddr :buildBlock*retaddr *label84 (h:*label84)
   211 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   212 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label84 (h:*label84)
   213 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   214 label *label84
   215 set *tmp129 :buildBlock*retval
 
   230 write :monos *tmp129 ".monos"
   231 write :flares *tmp129 ".flares"
   232 write :polys *tmp129 ".polys"
+  233 op add :buildBlockFromCfg.7:x .coreX -2
+  234 op add :buildBlockFromCfg.7:y .coreY -1
+  235 set :buildBlock:block @power-node
+  236 set :buildBlock:x :buildBlockFromCfg.7:x
+  237 set :buildBlock:y :buildBlockFromCfg.7:y
+  238 set :buildBlock:copper 2
+  239 set :buildBlock:lead 6
+  240 set :buildBlock:silicon 0
+  241 set :buildBlock:config null
+  242 setaddr :buildBlock*retaddr *label90 (h:*label90)
   243 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label90 (h:*label90)
   244 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   245 label *label90
   246 jump *label85 always
 
   249 multilabel *label89 (m:marker7)
   250 label *label88
   251 label *label85
+  252 op add :buildBlockFromCfg.8:y .coreY 1
+  253 set :buildBlock:block @unloader
+  254 set :buildBlock:x :buildBlockFromCfg.7:x
+  255 set :buildBlock:y :buildBlockFromCfg.8:y
+  256 set :buildBlock:copper 0
+  257 set :buildBlock:lead 0
+  258 set :buildBlock:silicon 30
+  259 set :buildBlock:titanium 25
+  260 setaddr :buildBlock*retaddr *label96 (h:*label96)
   261 label *label92
-    * op add :buildBlockFromCfg.8:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label96 (h:*label96)
   262 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   263 label *label96
   264 set *tmp137 :buildBlock*retval
 
   269 label *label94
   270 label *label91
   271 write *tmp137 *tmp129 ".unloader2"
+  272 op add :buildBlockFromCfg.9:x .coreX -3
+  273 set :buildBlock:block @overflow-gate
+  274 set :buildBlock:x :buildBlockFromCfg.9:x
+  275 set :buildBlock:y :buildBlockFromCfg.8:y
+  276 set :buildBlock:copper 4
+  277 set :buildBlock:lead 2
+  278 set :buildBlock:silicon 0
+  279 set :buildBlock:titanium 0
+  280 setaddr :buildBlock*retaddr *label102 (h:*label102)
   281 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label102 (h:*label102)
   282 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   283 label *label102
   284 jump *label97 always
 
   287 multilabel *label101 (m:marker9)
   288 label *label100
   289 label *label97
+  290 op add :buildBlockFromCfg.10:x .coreX -4
+  291 set :buildBlock:block @air-factory
+  292 set :buildBlock:x :buildBlockFromCfg.10:x
+  293 set :buildBlock:y :buildBlockFromCfg.7:y
+  294 set :buildBlock:copper 60
+  295 set :buildBlock:lead 70
+  296 set :buildBlock:rotation 3
+  297 set :buildBlock:config @mono
+  298 setaddr :buildBlock*retaddr *label108 (h:*label108)
   299 label *label104
-    * op add :buildBlockFromCfg.10:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label108 (h:*label108)
   300 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   301 label *label108
   302 set *tmp145 :buildBlock*retval
 
   380 wait 1e-15
   381 read *tmp166 processor3 ":start*finished"
   382 jump *label122 equal *tmp166 false
+  383 op add :buildBlockFromCfg.11:x .coreX 2
+  384 op add :buildBlockFromCfg.11:y .coreY 0
+  385 set :buildBlock:block @unloader
+  386 set :buildBlock:x :buildBlockFromCfg.11:x
+  387 set :buildBlock:y :buildBlockFromCfg.11:y
+  388 set :buildBlock:copper 0
+  389 set :buildBlock:lead 0
+  390 set :buildBlock:silicon 30
+  391 set :buildBlock:titanium 25
+  392 set :buildBlock:rotation 0
+  393 set :buildBlock:config null
+  394 setaddr :buildBlock*retaddr *label128 (h:*label128)
   395 label *label124
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label128 (h:*label128)
   396 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   397 label *label128
   398 jump *label123 always
 
   401 multilabel *label127 (m:marker11)
   402 label *label126
   403 label *label123
+  404 op add :buildBlockFromCfg.12:x .coreX 3.5
+  405 op add :buildBlockFromCfg.12:y .coreY 0.5
+  406 set :buildBlock:block @kiln
+  407 set :buildBlock:x :buildBlockFromCfg.12:x
+  408 set :buildBlock:y :buildBlockFromCfg.12:y
+  409 set :buildBlock:copper 60
+  410 set :buildBlock:lead 30
+  411 set :buildBlock:graphite 30
+  412 set :buildBlock:silicon 0
+  413 set :buildBlock:titanium 0
+  414 setaddr :buildBlock*retaddr *label134 (h:*label134)
   415 label *label130
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label134 (h:*label134)
   416 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   417 label *label134
   418 set *tmp171 :buildBlock*retval
 
   423 label *label132
   424 label *label129
   425 write *tmp171 *tmp129 ".kiln"
+  426 set :buildBlock:block @junction
+  427 set :buildBlock:x :buildBlockFromCfg.11:x
+  428 set :buildBlock:y :buildBlockFromCfg.8:y
+  429 set :buildBlock:copper 3
+  430 set :buildBlock:lead 0
+  431 set :buildBlock:graphite 0
+  432 setaddr :buildBlock*retaddr *label140 (h:*label140)
   433 label *label136
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label140 (h:*label140)
   434 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   435 label *label140
   436 jump *label135 always
 
   439 multilabel *label139 (m:marker13)
   440 label *label138
   441 label *label135
+  442 op add :buildBlockFromCfg.14:x .coreX -3.5
+  443 op add :buildBlockFromCfg.14:y .coreY 4.5
+  444 set :buildBlock:block @water-extractor
+  445 set :buildBlock:x :buildBlockFromCfg.14:x
+  446 set :buildBlock:y :buildBlockFromCfg.14:y
+  447 set :buildBlock:copper 30
+  448 set :buildBlock:lead 30
+  449 set :buildBlock:graphite 30
+  450 set :buildBlock:metaglass 30
+  451 setaddr :buildBlock*retaddr *label146 (h:*label146)
   452 label *label142
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label146 (h:*label146)
   453 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   454 label *label146
   455 jump *label141 always
 
   458 multilabel *label145 (m:marker14)
   459 label *label144
   460 label *label141
+  461 set :buildBlock:block @steam-generator
+  462 set :buildBlock:x :buildBlockFromCfg.14:x
+  463 set :buildBlock:y :buildBlockFromCfg:y
+  464 set :buildBlock:copper 35
+  465 set :buildBlock:lead 40
+  466 set :buildBlock:graphite 25
+  467 set :buildBlock:silicon 30
+  468 set :buildBlock:metaglass 0
+  469 setaddr :buildBlock*retaddr *label152 (h:*label152)
   470 label *label148
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label152 (h:*label152)
   471 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   472 label *label152
   473 set *tmp183 :buildBlock*retval
 
   688 read *tmp213 processor3 ":addThoriumDrill*finished"
   689 jump *label194 equal *tmp213 false
   690 label *label164
+  691 set :buildBlock:block @sorter
+  692 set :buildBlock:x :buildBlockFromCfg.10:x
+  693 set :buildBlock:y :buildBlockFromCfg.8:y
+  694 set :buildBlock:copper 2
+  695 set :buildBlock:lead 2
+  696 set :buildBlock:graphite 0
+  697 set :buildBlock:silicon 0
+  698 set :buildBlock:config @coal
+  699 setaddr :buildBlock*retaddr *label200 (h:*label200)
   700 label *label196
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label200 (h:*label200)
   701 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   702 label *label200
   703 jump *label195 always
 
   733 label *label5
   734 write "Moving..." .display ".status3"
   735 label *label212
+  736 op sub *tmp222 :moveTo:radius 0.5
   737 label *label213
   738 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp220
   739 jump *label215 notEqual *tmp220 false
-    * op sub *tmp222 :moveTo:radius 0.5
   740 ucontrol approach :moveTo:x :moveTo:y *tmp222
   741 label *label214
   742 jump *label213 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1095 label *label323
  1096 label *label292
  1097 label *label293
+ 1098 set *tmp334 100
  1099 sensor *tmp332 .core @titanium
-    * jump *label332 greaterThanEq *tmp332 .targetTitanium
+ 1100 jump *label333 greaterThanEq *tmp332 .targetTitanium
  1101 sensor *tmp335 .core @titanium
  1102 op sub *tmp336 .targetTitanium *tmp335
  1103 op min *tmp334 7 *tmp336
  1104 jump *label333 always
-    * label *label332
-    * set *tmp334 100
  1105 label *label333
  1106 sensor *tmp338 .titaniumDrill @titanium
  1107 jump *label334 greaterThanEq *tmp338 *tmp334
 
  1123 label *label344
  1124 sensor :supplyBase0:coal .core @coal
  1125 sensor :supplyBase0:sand .core @sand
-    * jump *label345 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp353 @coal
+ 1126 set :mineOre.1:ore @sand
+ 1127 jump *label346 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1128 set :mineOre.1:ore @coal
  1129 jump *label346 always
-    * label *label345
-    * set *tmp353 @sand
  1130 label *label346
-    * set :mineOre.1:ore *tmp353
  1131 setaddr :mineOre.1*retaddr *label347 (h:*label347)
  1132 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
  1133 label *label347
 
  1167 label *label360
  1168 sensor :supplyBase0:coal.1 .core @coal
  1169 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label361 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp366 @coal
+ 1170 set :mineOre.1:ore @sand
+ 1171 jump *label362 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1172 set :mineOre.1:ore @coal
  1173 jump *label362 always
-    * label *label361
-    * set *tmp366 @sand
  1174 label *label362
-    * set :mineOre.1:ore *tmp366
  1175 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1176 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1177 label *label363

Modifications by Unroll iteration loop at CoreBuilder.mnd:253:5 (-2 instructions):
 
  1254 end
  1255 label *label23
  1256 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp387 *label391
-    * jump *label388 always
-    * multilabel *label391 (m:marker17)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp387 *label392
-    * jump *label388 always
-    * multilabel *label392 (m:marker17)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp387 *label393
-    * jump *label388 always
-    * multilabel *label393 (m:marker17)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp387 *label394
-    * jump *label388 always
-    * multilabel *label394 (m:marker17)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp387 *label395
-    * jump *label388 always
-    * multilabel *label395 (m:marker17)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp387 *label396
-    * label *label388
-    * op sign *tmp388 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label389
-    * multijump *tmp387 0 0 (m:marker17)
-    * multilabel *label396 (m:marker17)
-    * label *label390
+ 1257 set :meetTarget:t :meetTarget:copper
+ 1258 label *label431
+ 1259 op sign *tmp388 :meetTarget:t
+ 1260 op add :meetTarget:count :meetTarget:count *tmp388
+ 1261 label *label432
+ 1262 set :meetTarget:t :meetTarget:lead
+ 1263 label *label435
+ 1264 op sign *tmp388 :meetTarget:t
+ 1265 op add :meetTarget:count :meetTarget:count *tmp388
+ 1266 label *label436
+ 1267 set :meetTarget:t :meetTarget:graphite
+ 1268 label *label439
+ 1269 op sign *tmp388 :meetTarget:t
+ 1270 op add :meetTarget:count :meetTarget:count *tmp388
+ 1271 label *label440
+ 1272 set :meetTarget:t :meetTarget:silicon
+ 1273 label *label443
+ 1274 op sign *tmp388 :meetTarget:t
+ 1275 op add :meetTarget:count :meetTarget:count *tmp388
+ 1276 label *label444
+ 1277 set :meetTarget:t :meetTarget:titanium
+ 1278 label *label447
+ 1279 op sign *tmp388 :meetTarget:t
+ 1280 op add :meetTarget:count :meetTarget:count *tmp388
+ 1281 label *label448
+ 1282 set :meetTarget:t :meetTarget:metaglass
+ 1283 label *label451
+ 1284 op sign *tmp388 :meetTarget:t
+ 1285 op add :meetTarget:count :meetTarget:count *tmp388
+ 1286 label *label452
+ 1287 label *label390
  1288 write :meetTarget:count .display ".totalTargets"
  1289 write :meetTarget:block .display ".nextBlock"
  1290 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1256 set :meetTarget:count 0
  1257 set :meetTarget:t :meetTarget:copper
  1258 label *label431
-    * op sign *tmp388 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp388
+ 1259 op sign *tmp388 :meetTarget:copper
+ 1260 op add :meetTarget:count 0 *tmp388
  1261 label *label432
  1262 set :meetTarget:t :meetTarget:lead
  1263 label *label435
-    * op sign *tmp388 :meetTarget:t
+ 1264 op sign *tmp388 :meetTarget:lead
  1265 op add :meetTarget:count :meetTarget:count *tmp388
  1266 label *label436
  1267 set :meetTarget:t :meetTarget:graphite
  1268 label *label439
-    * op sign *tmp388 :meetTarget:t
+ 1269 op sign *tmp388 :meetTarget:graphite
  1270 op add :meetTarget:count :meetTarget:count *tmp388
  1271 label *label440
  1272 set :meetTarget:t :meetTarget:silicon
  1273 label *label443
-    * op sign *tmp388 :meetTarget:t
+ 1274 op sign *tmp388 :meetTarget:silicon
  1275 op add :meetTarget:count :meetTarget:count *tmp388
  1276 label *label444
  1277 set :meetTarget:t :meetTarget:titanium
  1278 label *label447
-    * op sign *tmp388 :meetTarget:t
+ 1279 op sign *tmp388 :meetTarget:titanium
  1280 op add :meetTarget:count :meetTarget:count *tmp388
  1281 label *label448
  1282 set :meetTarget:t :meetTarget:metaglass
  1283 label *label451
-    * op sign *tmp388 :meetTarget:t
+ 1284 op sign *tmp388 :meetTarget:metaglass
  1285 op add :meetTarget:count :meetTarget:count *tmp388
  1286 label *label452
  1287 label *label390

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1253 return :targetMet*retaddr
  1254 end
  1255 label *label23
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1256 label *label431
  1257 op sign *tmp388 :meetTarget:copper
  1258 op add :meetTarget:count 0 *tmp388
  1259 label *label432
-    * set :meetTarget:t :meetTarget:lead
  1260 label *label435
  1261 op sign *tmp388 :meetTarget:lead
  1262 op add :meetTarget:count :meetTarget:count *tmp388
  1263 label *label436
-    * set :meetTarget:t :meetTarget:graphite
  1264 label *label439
  1265 op sign *tmp388 :meetTarget:graphite
  1266 op add :meetTarget:count :meetTarget:count *tmp388
  1267 label *label440
-    * set :meetTarget:t :meetTarget:silicon
  1268 label *label443
  1269 op sign *tmp388 :meetTarget:silicon
  1270 op add :meetTarget:count :meetTarget:count *tmp388
  1271 label *label444
-    * set :meetTarget:t :meetTarget:titanium
  1272 label *label447
  1273 op sign *tmp388 :meetTarget:titanium
  1274 op add :meetTarget:count :meetTarget:count *tmp388
  1275 label *label448
-    * set :meetTarget:t :meetTarget:metaglass
  1276 label *label451
  1277 op sign *tmp388 :meetTarget:metaglass
  1278 op add :meetTarget:count :meetTarget:count *tmp388

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   175 call *label26 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   176 label *label72
   177 set *tmp110 :buildBlockAt*retval
-    * jump *label65 always
   178 label *label65
   179 set .titaniumDrill :buildBlockAt*retval
   180 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1100 sensor *tmp335 .core @titanium
  1101 op sub *tmp336 .targetTitanium *tmp335
  1102 op min *tmp334 7 *tmp336
-    * jump *label333 always
  1103 label *label333
  1104 sensor *tmp338 .titaniumDrill @titanium
  1105 jump *label334 greaterThanEq *tmp338 *tmp334
 
  1124 set :mineOre.1:ore @sand
  1125 jump *label346 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1126 set :mineOre.1:ore @coal
-    * jump *label346 always
  1127 label *label346
  1128 setaddr :mineOre.1*retaddr *label347 (h:*label347)
  1129 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
 
  1167 set :mineOre.1:ore @sand
  1168 jump *label362 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1169 set :mineOre.1:ore @coal
-    * jump *label362 always
  1170 label *label362
  1171 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1172 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
 
  1379 call *label25 *invalid :logBlock*retval (m:*label421) (h:*label421)
  1380 label *label421
  1381 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label406 always
  1382 label *label406
  1383 return :buildBlockAt*retaddr
  1384 end
 
  1403 call *label26 *invalid :buildBlockAt*retval (m:*label424) (h:*label424)
  1404 label *label424
  1405 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label422 always
  1406 label *label422
  1407 return :buildBlock*retaddr
  1408 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    61 label *label38
    62 label *label35
    63 set .press *tmp90
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   64 set :buildBlockFromCfg.1:x .coreX
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
    67 set :buildBlock:x :buildBlockFromCfg.1:x
 
   380 read *tmp166 processor3 ":start*finished"
   381 jump *label122 equal *tmp166 false
   382 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  383 set :buildBlockFromCfg.11:y .coreY
   384 set :buildBlock:block @unloader
   385 set :buildBlock:x :buildBlockFromCfg.11:x
   386 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1251 label *label23
  1252 label *label431
  1253 op sign *tmp388 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp388
+ 1254 set :meetTarget:count *tmp388
  1255 label *label432
  1256 label *label435
  1257 op sign *tmp388 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1250 end
  1251 label *label23
  1252 label *label431
-    * op sign *tmp388 :meetTarget:copper
-    * set :meetTarget:count *tmp388
+ 1253 op sign :meetTarget:count :meetTarget:copper
  1254 label *label432
  1255 label *label435
  1256 op sign *tmp388 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    64 set :buildBlockFromCfg.1:x .coreX
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   67 set :buildBlock:x .coreX
    68 set :buildBlock:y :buildBlockFromCfg.1:y
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
 
    95 label *label47
    96 op add :buildBlockFromCfg.3:y .coreY 3
    97 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   98 set :buildBlock:x .coreX
    99 set :buildBlock:y :buildBlockFromCfg.3:y
   100 set :buildBlock:copper 25
   101 set :buildBlock:lead 15
 
   180 write :buildBlockAt*retval processor1 ".titaniumDrill"
   181 op add :buildBlockFromCfg.5:y .coreY 2
   182 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  183 set :buildBlock:x .coreX
   184 set :buildBlock:y :buildBlockFromCfg.5:y
   185 set :buildBlock:copper 0
   186 set :buildBlock:lead 0
 
   383 set :buildBlockFromCfg.11:y .coreY
   384 set :buildBlock:block @unloader
   385 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  386 set :buildBlock:y .coreY
   387 set :buildBlock:copper 0
   388 set :buildBlock:lead 0
   389 set :buildBlock:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    61 label *label38
    62 label *label35
    63 set .press *tmp90
-    * set :buildBlockFromCfg.1:x .coreX
    64 op add :buildBlockFromCfg.1:y .coreY 4
    65 set :buildBlock:block @battery
    66 set :buildBlock:x .coreX
 
   379 read *tmp166 processor3 ":start*finished"
   380 jump *label122 equal *tmp166 false
   381 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
   382 set :buildBlock:block @unloader
   383 set :buildBlock:x :buildBlockFromCfg.11:x
   384 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    14 ubind @poly
    15 set .builder @unit
    16 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label30
    17 jump *label29 equal .core null
-    * label *label31
    18 set .display processor1
    19 set :findUnits:type @mono
    20 setaddr :findUnits*retaddr *label32 (h:*label32)
 
    48 set :buildBlock:rotation 0
    49 set :buildBlock:config null
    50 setaddr :buildBlock*retaddr *label40 (h:*label40)
-    * label *label36
    51 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    52 label *label40
    53 set *tmp90 :buildBlock*retval
    54 jump *label35 always
-    * label *label37
    55 multijump *tmp91 0 0 (m:marker0)
    56 multilabel *label39 (m:marker0)
-    * label *label38
    57 label *label35
    58 set .press *tmp90
    59 op add :buildBlockFromCfg.1:y .coreY 4
 
    63 set :buildBlock:copper 5
    64 set :buildBlock:lead 20
    65 setaddr :buildBlock*retaddr *label46 (h:*label46)
-    * label *label42
    66 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    67 label *label46
    68 set *tmp94 :buildBlock*retval
    69 jump *label41 always
-    * label *label43
    70 multijump *tmp95 0 0 (m:marker1)
    71 multilabel *label45 (m:marker1)
-    * label *label44
    72 label *label41
    73 set .battery *tmp94
    74 op add :buildBlockFromCfg.2:x .coreX -1
    75 set :buildBlock:x :buildBlockFromCfg.2:x
    76 set :buildBlock:y :buildBlockFromCfg.1:y
    77 setaddr :buildBlock*retaddr *label52 (h:*label52)
-    * label *label48
    78 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    79 label *label52
    80 jump *label47 always
-    * label *label49
    81 multijump *tmp99 0 0 (m:marker2)
    82 multilabel *label51 (m:marker2)
-    * label *label50
    83 label *label47
    84 op add :buildBlockFromCfg.3:y .coreY 3
    85 set :buildBlock:block @combustion-generator
 
    88 set :buildBlock:copper 25
    89 set :buildBlock:lead 15
    90 setaddr :buildBlock*retaddr *label58 (h:*label58)
-    * label *label54
    91 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    92 label *label58
    93 set *tmp102 :buildBlock*retval
    94 jump *label53 always
-    * label *label55
    95 multijump *tmp103 0 0 (m:marker3)
    96 multilabel *label57 (m:marker3)
-    * label *label56
    97 label *label53
    98 set .generator *tmp102
    99 set .powerTarget 800
 
   104 set :buildBlock:copper 30
   105 set :buildBlock:lead 25
   106 setaddr :buildBlock*retaddr *label64 (h:*label64)
-    * label *label60
   107 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   108 label *label64
   109 set *tmp106 :buildBlock*retval
   110 jump *label59 always
-    * label *label61
   111 multijump *tmp107 0 0 (m:marker4)
   112 multilabel *label63 (m:marker4)
-    * label *label62
   113 label *label59
   114 set .smelter *tmp106
   115 set :meetTarget:block @pneumatic-drill
 
   122 setaddr :meetTarget*retaddr *label67 (h:*label67)
   123 call *label23 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   124 label *label67
-    * label *label66
   125 write @titanium processor1 ".nextBlock"
   126 write .coreX processor4 ":findDrillLocation:x"
   127 write .coreY processor4 ":findDrillLocation:y"
 
   142 jump *label69 notEqual :buildTitaniumDrill:result false
   143 set .ERROR "Cannot locate spot for titanium drill"
   144 stop
-    * label *label71
   145 label *label69
-    * label *label70
   146 write @pneumatic-drill processor1 ".nextBlock"
   147 set :buildBlockAt:block @pneumatic-drill
   148 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   154 call *label26 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   155 label *label72
   156 set *tmp110 :buildBlockAt*retval
-    * label *label65
   157 set .titaniumDrill :buildBlockAt*retval
   158 write :buildBlockAt*retval processor1 ".titaniumDrill"
   159 op add :buildBlockFromCfg.5:y .coreY 2
 
   165 set :buildBlock:silicon 30
   166 set :buildBlock:titanium 25
   167 setaddr :buildBlock*retaddr *label78 (h:*label78)
-    * label *label74
   168 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   169 label *label78
   170 set *tmp125 :buildBlock*retval
   171 jump *label73 always
-    * label *label75
   172 multijump *tmp126 0 0 (m:marker5)
   173 multilabel *label77 (m:marker5)
-    * label *label76
   174 label *label73
   175 set .unloader1 *tmp125
   176 op add :buildBlockFromCfg.6:x .coreX 1
 
   182 set :buildBlock:silicon 50
   183 set :buildBlock:titanium 0
   184 setaddr :buildBlock*retaddr *label84 (h:*label84)
-    * label *label80
   185 set :buildBlock:config processor2
   186 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   187 label *label84
   188 set *tmp129 :buildBlock*retval
   189 jump *label79 always
-    * label *label81
   190 multijump *tmp130 0 0 (m:marker6)
   191 multilabel *label83 (m:marker6)
-    * label *label82
   192 label *label79
   193 set .controller *tmp129
   194 write processor1 *tmp129 ".display"
 
   211 set :buildBlock:silicon 0
   212 set :buildBlock:config null
   213 setaddr :buildBlock*retaddr *label90 (h:*label90)
-    * label *label86
   214 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   215 label *label90
   216 jump *label85 always
-    * label *label87
   217 multijump *tmp134 0 0 (m:marker7)
   218 multilabel *label89 (m:marker7)
-    * label *label88
   219 label *label85
   220 op add :buildBlockFromCfg.8:y .coreY 1
   221 set :buildBlock:block @unloader
 
   226 set :buildBlock:silicon 30
   227 set :buildBlock:titanium 25
   228 setaddr :buildBlock*retaddr *label96 (h:*label96)
-    * label *label92
   229 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   230 label *label96
   231 set *tmp137 :buildBlock*retval
   232 jump *label91 always
-    * label *label93
   233 multijump *tmp138 0 0 (m:marker8)
   234 multilabel *label95 (m:marker8)
-    * label *label94
   235 label *label91
   236 write *tmp137 *tmp129 ".unloader2"
   237 op add :buildBlockFromCfg.9:x .coreX -3
 
   243 set :buildBlock:silicon 0
   244 set :buildBlock:titanium 0
   245 setaddr :buildBlock*retaddr *label102 (h:*label102)
-    * label *label98
   246 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   247 label *label102
   248 jump *label97 always
-    * label *label99
   249 multijump *tmp142 0 0 (m:marker9)
   250 multilabel *label101 (m:marker9)
-    * label *label100
   251 label *label97
   252 op add :buildBlockFromCfg.10:x .coreX -4
   253 set :buildBlock:block @air-factory
 
   258 set :buildBlock:rotation 3
   259 set :buildBlock:config @mono
   260 setaddr :buildBlock*retaddr *label108 (h:*label108)
-    * label *label104
   261 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   262 label *label108
   263 set *tmp145 :buildBlock*retval
   264 jump *label103 always
-    * label *label105
   265 multijump *tmp146 0 0 (m:marker10)
   266 multilabel *label107 (m:marker10)
-    * label *label106
   267 label *label103
   268 write *tmp145 *tmp129 ".factory"
   269 write *tmp145 processor1 ".factory"
 
   273 write 0 *tmp129 ".leadReserve"
   274 write 0 *tmp129 ".siliconReserve"
   275 write @flare *tmp129 ".unitToProduce"
-    * label *label109
   276 set :meetTarget:block 0
   277 set :meetTarget:copper 0
   278 set :meetTarget:lead 0
 
   283 setaddr :meetTarget*retaddr *label111 (h:*label111)
   284 call *label23 *invalid :meetTarget*retval (m:*label111) (h:*label111)
   285 label *label111
-    * label *label110
   286 set .leadSurplus 20
   287 set .siliconSurplus 20
   288 write 85 *tmp129 ".pressTarget"
 
   316 read *tmp159 processor3 ":start*finished"
   317 jump *label118 equal *tmp159 false
   318 label *label115
-    * label *label116
   319 setaddr :supplyBase*retaddr *label119 (h:*label119)
   320 call *label21 *invalid :supplyBase*retval (m:*label119) (h:*label119)
   321 label *label119
 
   323 jump *label120 greaterThanEq *tmp160 300
   324 jump *label114 always
   325 label *label120
-    * label *label121
-    * label *label113
   326 read *tmp35 *tmp129 ".monos"
   327 jump *label112 lessThan *tmp35 3
   328 label *label114
 
   345 set :buildBlock:rotation 0
   346 set :buildBlock:config null
   347 setaddr :buildBlock*retaddr *label128 (h:*label128)
-    * label *label124
   348 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   349 label *label128
   350 jump *label123 always
-    * label *label125
   351 multijump *tmp168 0 0 (m:marker11)
   352 multilabel *label127 (m:marker11)
-    * label *label126
   353 label *label123
   354 op add :buildBlockFromCfg.12:x .coreX 3.5
   355 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   362 set :buildBlock:silicon 0
   363 set :buildBlock:titanium 0
   364 setaddr :buildBlock*retaddr *label134 (h:*label134)
-    * label *label130
   365 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   366 label *label134
   367 set *tmp171 :buildBlock*retval
   368 jump *label129 always
-    * label *label131
   369 multijump *tmp172 0 0 (m:marker12)
   370 multilabel *label133 (m:marker12)
-    * label *label132
   371 label *label129
   372 write *tmp171 *tmp129 ".kiln"
   373 set :buildBlock:block @junction
 
   377 set :buildBlock:lead 0
   378 set :buildBlock:graphite 0
   379 setaddr :buildBlock*retaddr *label140 (h:*label140)
-    * label *label136
   380 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   381 label *label140
   382 jump *label135 always
-    * label *label137
   383 multijump *tmp176 0 0 (m:marker13)
   384 multilabel *label139 (m:marker13)
-    * label *label138
   385 label *label135
   386 op add :buildBlockFromCfg.14:x .coreX -3.5
   387 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   393 set :buildBlock:graphite 30
   394 set :buildBlock:metaglass 30
   395 setaddr :buildBlock*retaddr *label146 (h:*label146)
-    * label *label142
   396 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   397 label *label146
   398 jump *label141 always
-    * label *label143
   399 multijump *tmp180 0 0 (m:marker14)
   400 multilabel *label145 (m:marker14)
-    * label *label144
   401 label *label141
   402 set :buildBlock:block @steam-generator
   403 set :buildBlock:x :buildBlockFromCfg.14:x
 
   408 set :buildBlock:silicon 30
   409 set :buildBlock:metaglass 0
   410 setaddr :buildBlock*retaddr *label152 (h:*label152)
-    * label *label148
   411 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   412 label *label152
   413 set *tmp183 :buildBlock*retval
   414 jump *label147 always
-    * label *label149
   415 multijump *tmp184 0 0 (m:marker15)
   416 multilabel *label151 (m:marker15)
-    * label *label150
   417 label *label147
   418 write *tmp183 *tmp129 ".generator2"
   419 set .graphiteSurplus 200
 
   426 setaddr :supplyBase*retaddr *label158 (h:*label158)
   427 call *label21 *invalid :supplyBase*retval (m:*label158) (h:*label158)
   428 label *label158
-    * label *label156
   429 jump *label155 always
   430 label *label157
   431 set :findFreeUnit:unit_type @flare
 
   444 setaddr :supplyBase*retaddr *label163 (h:*label163)
   445 call *label21 *invalid :supplyBase*retval (m:*label163) (h:*label163)
   446 label *label163
-    * label *label161
   447 read *tmp194 processor4 ":layoutThoriumDrill*finished"
   448 jump *label160 equal *tmp194 false
-    * label *label162
   449 label *label153
-    * label *label154
   450 set :meetTarget:block @laser-drill
   451 set :meetTarget:copper 35
   452 set :meetTarget:lead 0
 
   457 setaddr :meetTarget*retaddr *label166 (h:*label166)
   458 call *label23 *invalid :meetTarget*retval (m:*label166) (h:*label166)
   459 label *label166
-    * label *label165
   460 label *label167
   461 wait 1e-15
   462 read *tmp196 processor4 ":layoutThoriumDrill*finished"
 
   465 jump *label168 notEqual :buildThoriumDrill:result false
   466 set .ERROR "Cannot locate spot for thorium drill"
   467 stop
-    * label *label170
   468 label *label168
-    * label *label169
   469 set :buildBlockAt:block @laser-drill
   470 read :buildBlockAt:x processor4 ".drillX"
   471 read :buildBlockAt:y processor4 ".drillY"
 
   480 jump *label172 greaterThanEq *tmp67 0
   481 jump *label164 always
   482 label *label172
-    * label *label173
   483 set :meetTarget:block @water-extractor
   484 set :meetTarget:copper 30
   485 set :meetTarget:lead 30
 
   490 setaddr :meetTarget*retaddr *label175 (h:*label175)
   491 call *label23 *invalid :meetTarget*retval (m:*label175) (h:*label175)
   492 label *label175
-    * label *label174
   493 set :buildBlockAt:block @water-extractor
   494 read *tmp67 processor4 ".water1X"
   495 set :buildBlockAt:x *tmp67
 
   504 jump *label177 greaterThanEq *tmp69 0
   505 jump *label164 always
   506 label *label177
-    * label *label178
   507 set :meetTarget:block @water-extractor
   508 set :meetTarget:copper 30
   509 set :meetTarget:lead 30
 
   514 setaddr :meetTarget*retaddr *label180 (h:*label180)
   515 call *label23 *invalid :meetTarget*retval (m:*label180) (h:*label180)
   516 label *label180
-    * label *label179
   517 set :buildBlockAt:block @water-extractor
   518 read *tmp69 processor4 ".water2X"
   519 set :buildBlockAt:x *tmp69
 
   534 setaddr :meetTarget*retaddr *label183 (h:*label183)
   535 call *label23 *invalid :meetTarget*retval (m:*label183) (h:*label183)
   536 label *label183
-    * label *label182
   537 set :buildBlockAt:block @steam-generator
   538 read :buildBlockAt:x processor4 ".generatorX"
   539 read :buildBlockAt:y processor4 ".generatorY"
 
   554 setaddr :meetTarget*retaddr *label186 (h:*label186)
   555 call *label23 *invalid :meetTarget*retval (m:*label186) (h:*label186)
   556 label *label186
-    * label *label185
   557 set :buildBlockAt:block @power-node
   558 read :buildBlockAt:x processor4 ".nodeX"
   559 read :buildBlockAt:y processor4 ".nodeY"
 
   573 setaddr :meetTarget*retaddr *label189 (h:*label189)
   574 call *label23 *invalid :meetTarget*retval (m:*label189) (h:*label189)
   575 label *label189
-    * label *label188
   576 set :buildBlockAt:block @solar-panel
   577 read :buildBlockAt:x processor4 ".panelX"
   578 read :buildBlockAt:y processor4 ".panelY"
 
   592 setaddr :meetTarget*retaddr *label192 (h:*label192)
   593 call *label23 *invalid :meetTarget*retval (m:*label192) (h:*label192)
   594 label *label192
-    * label *label191
   595 set :buildBlockAt:block @battery
   596 read :buildBlockAt:x processor4 ".batteryX"
   597 read :buildBlockAt:y processor4 ".batteryY"
 
   620 set :buildBlock:silicon 0
   621 set :buildBlock:config @coal
   622 setaddr :buildBlock*retaddr *label200 (h:*label200)
-    * label *label196
   623 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   624 label *label200
   625 jump *label195 always
-    * label *label197
   626 multijump *tmp215 0 0 (m:marker16)
   627 multilabel *label199 (m:marker16)
-    * label *label198
   628 label *label195
   629 write 0 processor1 ".totalTargets"
   630 write null processor1 ".nextBlock"
 
   632 setaddr :supplyBase*retaddr *label204 (h:*label204)
   633 call *label21 *invalid :supplyBase*retval (m:*label204) (h:*label204)
   634 label *label204
-    * label *label202
   635 read *tmp36 *tmp129 ".flares"
   636 read *tmp35 *tmp129 ".monos"
   637 op add *tmp218 *tmp36 *tmp35
   638 jump *label201 lessThan *tmp218 16
-    * label *label203
   639 label *label205
   640 setaddr :supplyBase*retaddr *label208 (h:*label208)
   641 call *label21 *invalid :supplyBase*retval (m:*label208) (h:*label208)
   642 label *label208
-    * label *label206
   643 jump *label205 always
-    * label *label207
   644 ucontrol stop
   645 set .ERROR "Done"
   646 stop
-    * label *label209
   647 end
   648 label *label5
   649 write "Moving..." .display ".status3"
-    * label *label212
   650 op sub *tmp222 :moveTo:radius 0.5
   651 label *label213
   652 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp220
   653 jump *label215 notEqual *tmp220 false
   654 ucontrol approach :moveTo:x :moveTo:y *tmp222
-    * label *label214
   655 jump *label213 always
   656 label *label215
-    * label *label211
   657 return :moveTo*retaddr
   658 end
   659 label *label6
 
   663 setaddr :moveTo*retaddr *label217 (h:*label217)
   664 call *label5 *invalid :moveTo*retval (m:*label217) (h:*label217)
   665 label *label217
-    * label *label216
   666 return :moveTo.1*retaddr
   667 end
   668 label *label7
   669 write "Moving..." .display ".status3"
-    * label *label219
   670 label *label220
   671 sensor *tmp225 @unit @firstItem
   672 jump *label223 equal *tmp225 null
   673 ucontrol itemDrop @air 1000
   674 label *label223
-    * label *label224
   675 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label221
   676 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp228
   677 jump *label220 equal *tmp228 false
-    * label *label222
-    * label *label218
   678 return :moveToEmpty*retaddr
   679 end
   680 label *label8
 
   686 setaddr :moveTo*retaddr *label226 (h:*label226)
   687 call *label5 *invalid :moveTo*retval (m:*label226) (h:*label226)
   688 label *label226
-    * label *label225
   689 return :moveToBlock*retaddr
   690 end
   691 label *label9
   692 write "Depositing..." .display ".status3"
-    * label *label228
   693 sensor *tmp232 @unit @firstItem
   694 jump *label229 notEqual *tmp232 :depositItems:item
   695 set :moveToBlock:block :depositItems:block
 
   700 sensor :depositItems:cap :depositItems:block @itemCapacity
   701 label *label232
   702 ucontrol itemDrop :depositItems:block 30
-    * label *label233
   703 sensor *tmp236 @unit @firstItem
   704 op mul *tmp237 *tmp236 :depositItems:cap
   705 sensor *tmp238 :depositItems:block :depositItems:item
   706 jump *label232 greaterThan *tmp237 *tmp238
-    * label *label234
   707 jump *label230 always
   708 label *label229
   709 label *label235
   710 sensor *tmp240 @unit @firstItem
   711 jump *label237 equal *tmp240 null
   712 ucontrol itemDrop @air 1000
-    * label *label236
   713 jump *label235 always
   714 label *label237
   715 label *label230
   716 write 0 .display ".transportTarget"
   717 write null .display ".transportItem"
-    * label *label238
-    * label *label227
   718 return :depositItems*retaddr
   719 end
   720 label *label10
 
   722 jump *label240 notEqual *tmp242 false
   723 set .ERROR "Cannot locate ore"
   724 stop
-    * label *label242
   725 label *label240
-    * label *label241
-    * label *label239
   726 return :locateOre*retaddr
   727 end
   728 label *label11
   729 op min :mineOre:amount :mineOre:amount 30
   730 write :mineOre:amount .display ".transportTarget"
   731 write :mineOre:ore .display ".transportItem"
-    * label *label244
   732 set :locateOre:ore :mineOre:ore
   733 setaddr :locateOre*retaddr *label245 (h:*label245)
   734 call *label10 *invalid :locateOre*retval (m:*label245) (h:*label245)
 
   746 sensor *tmp250 @unit @firstItem
   747 jump *label252 equal *tmp250 null
   748 ucontrol itemDrop @air 1000
-    * label *label251
   749 jump *label250 always
   750 label *label252
-    * label *label249
   751 label *label247
-    * label *label248
   752 write "Mining..." .display ".status3"
-    * label *label253
   753 op mul :second:result @second TIME_COMPRESS
-    * label *label254
   754 op add :mineOre:stop :second:result 10
   755 label *label255
   756 sensor :mineOre:item @unit @firstItem
 
   760 jump *label258 equal *tmp257 false
   761 jump *label257 always
   762 label *label258
-    * label *label259
   763 ucontrol mine :mineOre:x :mineOre:y
   764 op mul :second.1:result @second TIME_COMPRESS
-    * label *label260
   765 jump *label261 lessThanEq :second.1:result :mineOre:stop
   766 jump *label257 always
   767 label *label261
-    * label *label262
-    * label *label256
   768 sensor *tmp262 @unit @totalItems
   769 jump *label255 lessThan *tmp262 :mineOre:amount
   770 label *label257
 
   774 setaddr :depositItems*retaddr *label263 (h:*label263)
   775 call *label9 *invalid :depositItems*retval (m:*label263) (h:*label263)
   776 label *label263
-    * label *label243
   777 return :mineOre*retaddr
   778 end
   779 label *label12
   780 write "Mining " .display ".status2"
   781 write :mineOre.1:ore .display ".item2"
   782 write "core" .display ".block2"
-    * label *label265
   783 set :mineOre:ore :mineOre.1:ore
   784 set :mineOre:amount 30
   785 set :mineOre:block .core
   786 setaddr :mineOre*retaddr *label266 (h:*label266)
   787 call *label11 *invalid :mineOre*retval (m:*label266) (h:*label266)
   788 label *label266
-    * label *label264
   789 return :mineOre.1*retaddr
   790 end
   791 label *label13
   792 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   793 write :transportStatus.2:target .display ".transportTarget"
   794 write :fetchBlock:item .display ".transportItem"
-    * label *label268
   795 write "Fetching " .display ".status2"
   796 write :fetchBlock:item .display ".item2"
   797 write :fetchBlock:block .display ".block2"
-    * label *label269
   798 sensor *tmp266 :fetchBlock:block @x
   799 sensor *tmp267 :fetchBlock:block @y
   800 set :moveToEmpty:x *tmp266
 
   806 sensor *tmp268 @unit @firstItem
   807 jump *label274 equal *tmp268 null
   808 ucontrol itemDrop @air 1000
-    * label *label273
   809 jump *label272 always
   810 label *label274
-    * label *label271
   811 label *label275
   812 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   813 sensor :fetchBlock:unitItem @unit @firstItem
 
   817 jump *label278 equal *tmp273 false
   818 ucontrol itemDrop @air 1000
   819 label *label278
-    * label *label279
-    * label *label276
   820 sensor *tmp275 @unit :fetchBlock:item
   821 op lessThan *tmp276 *tmp275 30
   822 sensor *tmp277 :fetchBlock:block :fetchBlock:item
   823 op land *tmp278 *tmp276 *tmp277
   824 jump *label275 notEqual *tmp278 false
-    * label *label277
   825 set :depositItems:block .core
   826 set :depositItems:item :fetchBlock:item
   827 setaddr :depositItems*retaddr *label280 (h:*label280)
   828 call *label9 *invalid :depositItems*retval (m:*label280) (h:*label280)
   829 label *label280
-    * label *label267
   830 return :fetchBlock*retaddr
   831 end
   832 label *label15
 
   834 jump *label282 notEqual @unit null
   835 jump *label281 always
   836 label *label282
-    * label *label283
   837 set :findFreeUnit:first_unit @unit
   838 label *label284
   839 sensor *tmp281 @unit @controlled
 
   846 jump *label289 notEqual *tmp284 1
   847 set :findFreeUnit:first_unit @unit
   848 label *label289
-    * label *label290
   849 label *label288
   850 ubind :findFreeUnit:unit_type
-    * label *label285
   851 jump *label284 notEqual :findFreeUnit:first_unit @unit
-    * label *label286
   852 label *label281
   853 return :findFreeUnit*retaddr
   854 end
 
   860 sensor *tmp294 .press @coal
   861 jump *label296 greaterThanEq *tmp294 5
   862 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label298
   863 write "Supplying " .display ".status2"
   864 write @coal .display ".item2"
   865 write .press .display ".block2"
-    * label *label300
   866 sensor :supplyBlock:blockCapacity .press @itemCapacity
   867 sensor *tmp298 .press @coal
   868 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp298
 
   874 call *label11 *invalid :mineOre*retval (m:*label303) (h:*label303)
   875 label *label303
   876 label *label301
-    * label *label302
-    * label *label299
   877 set :supplyBase0:supplied true
   878 label *label296
-    * label *label297
   879 label *label294
-    * label *label295
   880 sensor *tmp302 .core @silicon
   881 jump *label304 greaterThanEq *tmp302 .targetSilicon
   882 sensor *tmp305 .smelter @coal
   883 jump *label306 greaterThanEq *tmp305 5
   884 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label308
   885 write "Supplying " .display ".status2"
   886 write @coal .display ".item2"
   887 write .smelter .display ".block2"
-    * label *label310
   888 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   889 sensor *tmp309 .smelter @coal
   890 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp309
 
   896 call *label11 *invalid :mineOre*retval (m:*label313) (h:*label313)
   897 label *label313
   898 label *label311
-    * label *label312
-    * label *label309
   899 set :supplyBase0:supplied true
   900 jump *label307 always
   901 label *label306
   902 sensor *tmp313 .smelter @sand
   903 jump *label314 greaterThanEq *tmp313 5
   904 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label316
   905 write "Supplying " .display ".status2"
   906 write @sand .display ".item2"
   907 write .smelter .display ".block2"
-    * label *label318
   908 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   909 sensor *tmp317 .smelter @sand
   910 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp317
 
   916 call *label11 *invalid :mineOre*retval (m:*label321) (h:*label321)
   917 label *label321
   918 label *label319
-    * label *label320
-    * label *label317
   919 set :supplyBase0:supplied true
   920 label *label314
-    * label *label315
   921 label *label307
   922 label *label304
-    * label *label305
   923 sensor *tmp321 .battery @totalPower
   924 jump *label322 greaterThanEq *tmp321 .powerTarget
   925 sensor *tmp324 .generator @coal
   926 jump *label324 greaterThanEq *tmp324 2
   927 write "Goal 4: supplying generator" .display ".status1"
-    * label *label326
   928 write "Supplying " .display ".status2"
   929 write @coal .display ".item2"
   930 write .generator .display ".block2"
-    * label *label328
   931 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   932 sensor *tmp328 .generator @coal
   933 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp328
 
   939 call *label11 *invalid :mineOre*retval (m:*label331) (h:*label331)
   940 label *label331
   941 label *label329
-    * label *label330
-    * label *label327
   942 set :supplyBase0:supplied true
   943 label *label324
-    * label *label325
   944 label *label322
-    * label *label323
   945 label *label292
-    * label *label293
   946 set *tmp334 100
   947 sensor *tmp332 .core @titanium
   948 jump *label333 greaterThanEq *tmp332 .targetTitanium
 
   957 op mul *tmp344 .unloader1 .powerTarget
   958 jump *label338 greaterThanEq *tmp343 *tmp344
   959 write "Goal 5: supplying generator" .display ".status1"
-    * label *label340
   960 set :mineOre.1:ore @coal
   961 setaddr :mineOre.1*retaddr *label341 (h:*label341)
   962 call *label12 *invalid :mineOre.1*retval (m:*label341) (h:*label341)
 
   966 sensor *tmp347 .core @silicon
   967 jump *label342 greaterThanEq *tmp347 .targetSilicon
   968 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label344
   969 sensor :supplyBase0:coal .core @coal
   970 sensor :supplyBase0:sand .core @sand
   971 set :mineOre.1:ore @sand
 
   980 sensor *tmp354 .core @copper
   981 jump *label348 greaterThanEq *tmp354 .targetCopper
   982 write "Goal 7: copper requirement" .display ".status1"
-    * label *label350
   983 set :mineOre.1:ore @copper
   984 setaddr :mineOre.1*retaddr *label351 (h:*label351)
   985 call *label12 *invalid :mineOre.1*retval (m:*label351) (h:*label351)
 
   989 sensor *tmp357 .core @lead
   990 jump *label352 greaterThanEq *tmp357 .targetLead
   991 write "Goal 8: lead requirement" .display ".status1"
-    * label *label354
   992 set :mineOre.1:ore @lead
   993 setaddr :mineOre.1*retaddr *label355 (h:*label355)
   994 call *label12 *invalid :mineOre.1*retval (m:*label355) (h:*label355)
 
   998 sensor *tmp360 .core @metaglass
   999 jump *label356 greaterThanEq *tmp360 .targetMetaglass
  1000 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label358
  1001 set :mineOre.1:ore @sand
  1002 setaddr :mineOre.1*retaddr *label359 (h:*label359)
  1003 call *label12 *invalid :mineOre.1*retval (m:*label359) (h:*label359)
 
  1005 jump *label357 always
  1006 label *label356
  1007 write "Goal 10: supplying base" .display ".status1"
-    * label *label360
  1008 sensor :supplyBase0:coal.1 .core @coal
  1009 sensor :supplyBase0:sand.1 .core @sand
  1010 set :mineOre.1:ore @sand
 
  1020 label *label343
  1021 label *label339
  1022 label *label336
-    * label *label337
  1023 jump *label335 always
  1024 label *label334
  1025 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label364
  1026 set :fetchBlock:block .titaniumDrill
  1027 set :fetchBlock:item @titanium
  1028 setaddr :fetchBlock*retaddr *label365 (h:*label365)
  1029 call *label13 *invalid :fetchBlock*retval (m:*label365) (h:*label365)
  1030 label *label365
  1031 label *label335
-    * label *label291
  1032 return :supplyBase0*retaddr
  1033 end
  1034 label *label20
  1035 write "Phase 1: supplying base" .display ".status1"
-    * label *label367
  1036 set :mineOre.1:ore @coal
  1037 setaddr :mineOre.1*retaddr *label368 (h:*label368)
  1038 call *label12 *invalid :mineOre.1*retval (m:*label368) (h:*label368)
  1039 label *label368
-    * label *label366
  1040 return :supplyBase1*retaddr
  1041 end
  1042 label *label21
 
  1051 call *label19 *invalid :supplyBase0*retval (m:*label373) (h:*label373)
  1052 label *label373
  1053 label *label371
-    * label *label369
  1054 return :supplyBase*retaddr
  1055 end
  1056 label *label22
 
  1069 set :targetMet*retval true
  1070 jump *label374 always
  1071 label *label385
-    * label *label386
  1072 label *label383
-    * label *label384
  1073 label *label381
-    * label *label382
  1074 label *label379
-    * label *label380
  1075 label *label377
-    * label *label378
  1076 label *label375
-    * label *label376
  1077 set :targetMet*retval false
  1078 jump *label374 always
  1079 label *label374
  1080 return :targetMet*retaddr
  1081 end
  1082 label *label23
-    * label *label431
  1083 op sign :meetTarget:count :meetTarget:copper
-    * label *label432
-    * label *label435
  1084 op sign *tmp388 :meetTarget:lead
  1085 op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label436
-    * label *label439
  1086 op sign *tmp388 :meetTarget:graphite
  1087 op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label440
-    * label *label443
  1088 op sign *tmp388 :meetTarget:silicon
  1089 op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label444
-    * label *label447
  1090 op sign *tmp388 :meetTarget:titanium
  1091 op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label448
-    * label *label451
  1092 op sign *tmp388 :meetTarget:metaglass
  1093 op add :meetTarget:count :meetTarget:count *tmp388
-    * label *label452
-    * label *label390
  1094 write :meetTarget:count .display ".totalTargets"
  1095 write :meetTarget:block .display ".nextBlock"
  1096 write :meetTarget:copper .display ".targetCopper"
 
  1127 setaddr :supplyBase*retaddr *label401 (h:*label401)
  1128 call *label21 *invalid :supplyBase*retval (m:*label401) (h:*label401)
  1129 label *label401
-    * label *label398
  1130 jump *label397 always
  1131 label *label399
-    * label *label387
  1132 return :meetTarget*retaddr
  1133 end
  1134 label *label24
 
  1136 op sub *tmp400 *tmp79 1
  1137 write *tmp400 bank1 511
  1138 op mul :second.2:result @second TIME_COMPRESS
-    * label *label403
  1139 op floor *tmp404 :second.2:result
  1140 op mul *tmp405 *tmp404 1000
  1141 op add *tmp406 :log:encodedId *tmp405
  1142 write *tmp406 bank1 *tmp400
-    * label *label402
  1143 return :log*retaddr
  1144 end
  1145 label *label25
 
  1147 setaddr :log*retaddr *label405 (h:*label405)
  1148 call *label24 *invalid :log*retval (m:*label405) (h:*label405)
  1149 label *label405
-    * label *label404
  1150 return :logBlock*retaddr
  1151 end
  1152 label *label26
 
  1156 call *label6 *invalid :moveTo.1*retval (m:*label407) (h:*label407)
  1157 label *label407
  1158 write "Building..." .display ".status3"
-    * label *label408
  1159 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1160 jump *label409 equal :buildBlockAt:building null
  1161 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1162 set :buildBlockAt*retval :buildBlockAt:building
  1163 jump *label406 always
  1164 label *label411
-    * label *label412
  1165 jump *label413 equal :buildBlockAt:skipError false
  1166 set :buildBlockAt*retval null
  1167 jump *label406 always
  1168 label *label413
-    * label *label414
  1169 set .ERROR "Cannot build at ("
  1170 stop
-    * label *label415
  1171 label *label409
-    * label *label410
  1172 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1173 wait 0.25
  1174 label *label416
 
  1177 set :buildBlockAt*retval null
  1178 jump *label406 always
  1179 label *label419
-    * label *label420
-    * label *label417
  1180 jump *label416 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label418
  1181 set :logBlock:block :buildBlockAt:block
  1182 setaddr :logBlock*retaddr *label421 (h:*label421)
  1183 call *label25 *invalid :logBlock*retval (m:*label421) (h:*label421)
 
  1207 call *label26 *invalid :buildBlockAt*retval (m:*label424) (h:*label424)
  1208 label *label424
  1209 set :buildBlock*retval :buildBlockAt*retval
-    * label *label422
  1210 return :buildBlock*retaddr
  1211 end
  1212 label *label28
 
  1217 label *label428
  1218 op add :findUnits:count :findUnits:count 1
  1219 ubind :findUnits:type
-    * label *label429
  1220 jump *label428 notEqual @unit :findUnits:firstUnit
-    * label *label430
  1221 label *label426
-    * label *label427
  1222 set :findUnits*retval :findUnits:count
-    * label *label425
  1223 return :findUnits*retaddr
  1224 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   320 call *label21 *invalid :supplyBase*retval (m:*label119) (h:*label119)
   321 label *label119
   322 sensor *tmp160 *tmp94 @totalPower
-    * jump *label120 greaterThanEq *tmp160 300
-    * jump *label114 always
+  323 jump *label114 lessThan *tmp160 300
   324 label *label120
   325 read *tmp35 *tmp129 ".monos"
   326 jump *label112 lessThan *tmp35 3
 
   476 label *label171
   477 set .thoriumDrill :buildBlockAt*retval
   478 read *tmp67 processor4 ".water1X"
-    * jump *label172 greaterThanEq *tmp67 0
-    * jump *label164 always
+  479 jump *label164 lessThan *tmp67 0
   480 label *label172
   481 set :meetTarget:block @water-extractor
   482 set :meetTarget:copper 30
 
   499 call *label26 *invalid :buildBlockAt*retval (m:*label176) (h:*label176)
   500 label *label176
   501 read *tmp69 processor4 ".water2X"
-    * jump *label177 greaterThanEq *tmp69 0
-    * jump *label164 always
+  502 jump *label164 lessThan *tmp69 0
   503 label *label177
   504 set :meetTarget:block @water-extractor
   505 set :meetTarget:copper 30
 
   754 op notEqual *tmp255 :mineOre:item null
   755 op notEqual *tmp256 :mineOre:item :mineOre:ore
   756 op land *tmp257 *tmp255 *tmp256
-    * jump *label258 equal *tmp257 false
-    * jump *label257 always
+  757 jump *label257 notEqual *tmp257 false
   758 label *label258
   759 ucontrol mine :mineOre:x :mineOre:y
   760 op mul :second.1:result @second TIME_COMPRESS
-    * jump *label261 lessThanEq :second.1:result :mineOre:stop
-    * jump *label257 always
+  761 jump *label257 greaterThan :second.1:result :mineOre:stop
   762 label *label261
   763 sensor *tmp262 @unit @totalItems
   764 jump *label255 lessThan *tmp262 :mineOre:amount
 
   826 end
   827 label *label15
   828 ubind :findFreeUnit:unit_type
-    * jump *label282 notEqual @unit null
-    * jump *label281 always
+  829 jump *label281 equal @unit null
   830 label *label282
   831 set :findFreeUnit:first_unit @unit
   832 label *label284

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   321 label *label119
   322 sensor *tmp160 *tmp94 @totalPower
   323 jump *label114 lessThan *tmp160 300
-    * label *label120
   324 read *tmp35 *tmp129 ".monos"
   325 jump *label112 lessThan *tmp35 3
   326 label *label114
 
   476 set .thoriumDrill :buildBlockAt*retval
   477 read *tmp67 processor4 ".water1X"
   478 jump *label164 lessThan *tmp67 0
-    * label *label172
   479 set :meetTarget:block @water-extractor
   480 set :meetTarget:copper 30
   481 set :meetTarget:lead 30
 
   498 label *label176
   499 read *tmp69 processor4 ".water2X"
   500 jump *label164 lessThan *tmp69 0
-    * label *label177
   501 set :meetTarget:block @water-extractor
   502 set :meetTarget:copper 30
   503 set :meetTarget:lead 30
 
   752 op notEqual *tmp256 :mineOre:item :mineOre:ore
   753 op land *tmp257 *tmp255 *tmp256
   754 jump *label257 notEqual *tmp257 false
-    * label *label258
   755 ucontrol mine :mineOre:x :mineOre:y
   756 op mul :second.1:result @second TIME_COMPRESS
   757 jump *label257 greaterThan :second.1:result :mineOre:stop
-    * label *label261
   758 sensor *tmp262 @unit @totalItems
   759 jump *label255 lessThan *tmp262 :mineOre:amount
   760 label *label257
 
   822 label *label15
   823 ubind :findFreeUnit:unit_type
   824 jump *label281 equal @unit null
-    * label *label282
   825 set :findFreeUnit:first_unit @unit
   826 label *label284
   827 sensor *tmp281 @unit @controlled

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   827 sensor *tmp281 @unit @controlled
   828 jump *label287 notEqual *tmp281 0
   829 ucontrol flag :findFreeUnit:initial_flag
-    * jump *label281 always
+  830 return :findFreeUnit*retaddr
   831 jump *label288 always
   832 label *label287
   833 sensor *tmp284 :findFreeUnit:first_unit @dead
 
   940 label *label333
   941 sensor *tmp338 .titaniumDrill @titanium
   942 jump *label334 greaterThanEq *tmp338 *tmp334
-    * jump *label336 notEqual :supplyBase0:supplied false
+  943 jump *label335 notEqual :supplyBase0:supplied false
   944 sensor *tmp343 .battery @totalPower
   945 op mul *tmp344 .unloader1 .powerTarget
   946 jump *label338 greaterThanEq *tmp343 *tmp344
 
   949 setaddr :mineOre.1*retaddr *label341 (h:*label341)
   950 call *label12 *invalid :mineOre.1*retval (m:*label341) (h:*label341)
   951 label *label341
-    * jump *label339 always
+  952 return :supplyBase0*retaddr
   953 label *label338
   954 sensor *tmp347 .core @silicon
   955 jump *label342 greaterThanEq *tmp347 .targetSilicon
 
   963 setaddr :mineOre.1*retaddr *label347 (h:*label347)
   964 call *label12 *invalid :mineOre.1*retval (m:*label347) (h:*label347)
   965 label *label347
-    * jump *label343 always
+  966 return :supplyBase0*retaddr
   967 label *label342
   968 sensor *tmp354 .core @copper
   969 jump *label348 greaterThanEq *tmp354 .targetCopper
 
   972 setaddr :mineOre.1*retaddr *label351 (h:*label351)
   973 call *label12 *invalid :mineOre.1*retval (m:*label351) (h:*label351)
   974 label *label351
-    * jump *label349 always
+  975 return :supplyBase0*retaddr
   976 label *label348
   977 sensor *tmp357 .core @lead
   978 jump *label352 greaterThanEq *tmp357 .targetLead
 
   981 setaddr :mineOre.1*retaddr *label355 (h:*label355)
   982 call *label12 *invalid :mineOre.1*retval (m:*label355) (h:*label355)
   983 label *label355
-    * jump *label353 always
+  984 return :supplyBase0*retaddr
   985 label *label352
   986 sensor *tmp360 .core @metaglass
   987 jump *label356 greaterThanEq *tmp360 .targetMetaglass
 
   990 setaddr :mineOre.1*retaddr *label359 (h:*label359)
   991 call *label12 *invalid :mineOre.1*retval (m:*label359) (h:*label359)
   992 label *label359
-    * jump *label357 always
+  993 return :supplyBase0*retaddr
   994 label *label356
   995 write "Goal 10: supplying base" .display ".status1"
   996 sensor :supplyBase0:coal.1 .core @coal
 
  1008 label *label343
  1009 label *label339
  1010 label *label336
-    * jump *label335 always
+ 1011 return :supplyBase0*retaddr
  1012 label *label334
  1013 write "Goal 11: Fetching titanium" .display ".status1"
  1014 set :fetchBlock:block .titaniumDrill
 
  1033 setaddr :supplyBase1*retaddr *label372 (h:*label372)
  1034 call *label20 *invalid :supplyBase1*retval (m:*label372) (h:*label372)
  1035 label *label372
-    * jump *label371 always
+ 1036 return :supplyBase*retaddr
  1037 label *label370
  1038 setaddr :supplyBase0*retaddr *label373 (h:*label373)
  1039 call *label19 *invalid :supplyBase0*retval (m:*label373) (h:*label373)
 
  1055 sensor *tmp384 .core @metaglass
  1056 jump *label385 lessThan *tmp384 .targetMetaglass
  1057 set :targetMet*retval true
-    * jump *label374 always
+ 1058 return :targetMet*retaddr
  1059 label *label385
  1060 label *label383
  1061 label *label381
 
  1063 label *label377
  1064 label *label375
  1065 set :targetMet*retval false
-    * jump *label374 always
+ 1066 return :targetMet*retaddr
  1067 label *label374
  1068 return :targetMet*retaddr
  1069 end
 
  1148 jump *label409 equal :buildBlockAt:building null
  1149 jump *label411 notEqual :buildBlockAt:type :buildBlockAt:block
  1150 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label406 always
+ 1151 return :buildBlockAt*retaddr
  1152 label *label411
  1153 jump *label413 equal :buildBlockAt:skipError false
  1154 set :buildBlockAt*retval null
-    * jump *label406 always
+ 1155 return :buildBlockAt*retaddr
  1156 label *label413
  1157 set .ERROR "Cannot build at ("
  1158 stop
 
  1163 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1164 jump *label419 notEqual :buildBlockAt:building null
  1165 set :buildBlockAt*retval null
-    * jump *label406 always
+ 1166 return :buildBlockAt*retaddr
  1167 label *label419
  1168 jump *label416 notEqual :buildBlockAt:type :buildBlockAt:block
  1169 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-43 instructions):
 
    52 label *label40
    53 set *tmp90 :buildBlock*retval
    54 jump *label35 always
-    * multijump *tmp91 0 0 (m:marker0)
-    * multilabel *label39 (m:marker0)
    55 label *label35
    56 set .press *tmp90
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    65 label *label46
    66 set *tmp94 :buildBlock*retval
    67 jump *label41 always
-    * multijump *tmp95 0 0 (m:marker1)
-    * multilabel *label45 (m:marker1)
    68 label *label41
    69 set .battery *tmp94
    70 op add :buildBlockFromCfg.2:x .coreX -1
 
    74 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    75 label *label52
    76 jump *label47 always
-    * multijump *tmp99 0 0 (m:marker2)
-    * multilabel *label51 (m:marker2)
    77 label *label47
    78 op add :buildBlockFromCfg.3:y .coreY 3
    79 set :buildBlock:block @combustion-generator
 
    86 label *label58
    87 set *tmp102 :buildBlock*retval
    88 jump *label53 always
-    * multijump *tmp103 0 0 (m:marker3)
-    * multilabel *label57 (m:marker3)
    89 label *label53
    90 set .generator *tmp102
    91 set .powerTarget 800
 
   100 label *label64
   101 set *tmp106 :buildBlock*retval
   102 jump *label59 always
-    * multijump *tmp107 0 0 (m:marker4)
-    * multilabel *label63 (m:marker4)
   103 label *label59
   104 set .smelter *tmp106
   105 set :meetTarget:block @pneumatic-drill
 
   159 label *label78
   160 set *tmp125 :buildBlock*retval
   161 jump *label73 always
-    * multijump *tmp126 0 0 (m:marker5)
-    * multilabel *label77 (m:marker5)
   162 label *label73
   163 set .unloader1 *tmp125
   164 op add :buildBlockFromCfg.6:x .coreX 1
 
   175 label *label84
   176 set *tmp129 :buildBlock*retval
   177 jump *label79 always
-    * multijump *tmp130 0 0 (m:marker6)
-    * multilabel *label83 (m:marker6)
   178 label *label79
   179 set .controller *tmp129
   180 write processor1 *tmp129 ".display"
 
   200 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   201 label *label90
   202 jump *label85 always
-    * multijump *tmp134 0 0 (m:marker7)
-    * multilabel *label89 (m:marker7)
   203 label *label85
   204 op add :buildBlockFromCfg.8:y .coreY 1
   205 set :buildBlock:block @unloader
 
   214 label *label96
   215 set *tmp137 :buildBlock*retval
   216 jump *label91 always
-    * multijump *tmp138 0 0 (m:marker8)
-    * multilabel *label95 (m:marker8)
   217 label *label91
   218 write *tmp137 *tmp129 ".unloader2"
   219 op add :buildBlockFromCfg.9:x .coreX -3
 
   228 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   229 label *label102
   230 jump *label97 always
-    * multijump *tmp142 0 0 (m:marker9)
-    * multilabel *label101 (m:marker9)
   231 label *label97
   232 op add :buildBlockFromCfg.10:x .coreX -4
   233 set :buildBlock:block @air-factory
 
   242 label *label108
   243 set *tmp145 :buildBlock*retval
   244 jump *label103 always
-    * multijump *tmp146 0 0 (m:marker10)
-    * multilabel *label107 (m:marker10)
   245 label *label103
   246 write *tmp145 *tmp129 ".factory"
   247 write *tmp145 processor1 ".factory"
 
   324 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   325 label *label128
   326 jump *label123 always
-    * multijump *tmp168 0 0 (m:marker11)
-    * multilabel *label127 (m:marker11)
   327 label *label123
   328 op add :buildBlockFromCfg.12:x .coreX 3.5
   329 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   340 label *label134
   341 set *tmp171 :buildBlock*retval
   342 jump *label129 always
-    * multijump *tmp172 0 0 (m:marker12)
-    * multilabel *label133 (m:marker12)
   343 label *label129
   344 write *tmp171 *tmp129 ".kiln"
   345 set :buildBlock:block @junction
 
   352 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   353 label *label140
   354 jump *label135 always
-    * multijump *tmp176 0 0 (m:marker13)
-    * multilabel *label139 (m:marker13)
   355 label *label135
   356 op add :buildBlockFromCfg.14:x .coreX -3.5
   357 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   366 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   367 label *label146
   368 jump *label141 always
-    * multijump *tmp180 0 0 (m:marker14)
-    * multilabel *label145 (m:marker14)
   369 label *label141
   370 set :buildBlock:block @steam-generator
   371 set :buildBlock:x :buildBlockFromCfg.14:x
 
   380 label *label152
   381 set *tmp183 :buildBlock*retval
   382 jump *label147 always
-    * multijump *tmp184 0 0 (m:marker15)
-    * multilabel *label151 (m:marker15)
   383 label *label147
   384 write *tmp183 *tmp129 ".generator2"
   385 set .graphiteSurplus 200
 
   585 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   586 label *label200
   587 jump *label195 always
-    * multijump *tmp215 0 0 (m:marker16)
-    * multilabel *label199 (m:marker16)
   588 label *label195
   589 write 0 processor1 ".totalTargets"
   590 write null processor1 ".nextBlock"
 
   601 call *label21 *invalid :supplyBase*retval (m:*label208) (h:*label208)
   602 label *label208
   603 jump *label205 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   604 label *label5
   605 write "Moving..." .display ".status3"
   606 op sub *tmp222 :moveTo:radius 0.5
 
   611 jump *label213 always
   612 label *label215
   613 return :moveTo*retaddr
-    * end
   614 label *label6
   615 set :moveTo:x :moveTo.1:x
   616 set :moveTo:y :moveTo.1:y
 
   619 call *label5 *invalid :moveTo*retval (m:*label217) (h:*label217)
   620 label *label217
   621 return :moveTo.1*retaddr
-    * end
   622 label *label7
   623 write "Moving..." .display ".status3"
   624 label *label220
 
   630 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp228
   631 jump *label220 equal *tmp228 false
   632 return :moveToEmpty*retaddr
-    * end
   633 label *label8
   634 sensor *tmp230 :moveToBlock:block @x
   635 sensor *tmp231 :moveToBlock:block @y
 
   640 call *label5 *invalid :moveTo*retval (m:*label226) (h:*label226)
   641 label *label226
   642 return :moveToBlock*retaddr
-    * end
   643 label *label9
   644 write "Depositing..." .display ".status3"
   645 sensor *tmp232 @unit @firstItem
 
   668 write 0 .display ".transportTarget"
   669 write null .display ".transportItem"
   670 return :depositItems*retaddr
-    * end
   671 label *label10
   672 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp242 0
   673 jump *label240 notEqual *tmp242 false
 
   675 stop
   676 label *label240
   677 return :locateOre*retaddr
-    * end
   678 label *label11
   679 op min :mineOre:amount :mineOre:amount 30
   680 write :mineOre:amount .display ".transportTarget"
 
   721 call *label9 *invalid :depositItems*retval (m:*label263) (h:*label263)
   722 label *label263
   723 return :mineOre*retaddr
-    * end
   724 label *label12
   725 write "Mining " .display ".status2"
   726 write :mineOre.1:ore .display ".item2"
 
   732 call *label11 *invalid :mineOre*retval (m:*label266) (h:*label266)
   733 label *label266
   734 return :mineOre.1*retaddr
-    * end
   735 label *label13
   736 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   737 write :transportStatus.2:target .display ".transportTarget"
 
   772 call *label9 *invalid :depositItems*retval (m:*label280) (h:*label280)
   773 label *label280
   774 return :fetchBlock*retaddr
-    * end
   775 label *label15
   776 ubind :findFreeUnit:unit_type
   777 jump *label281 equal @unit null
 
   781 jump *label287 notEqual *tmp281 0
   782 ucontrol flag :findFreeUnit:initial_flag
   783 return :findFreeUnit*retaddr
-    * jump *label288 always
   784 label *label287
   785 sensor *tmp284 :findFreeUnit:first_unit @dead
   786 jump *label289 notEqual *tmp284 1
 
   791 jump *label284 notEqual :findFreeUnit:first_unit @unit
   792 label *label281
   793 return :findFreeUnit*retaddr
-    * end
   794 label *label19
   795 set :supplyBase0:supplied false
   796 jump *label292 notEqual .unloader1 null
 
   953 setaddr :mineOre.1*retaddr *label363 (h:*label363)
   954 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
   955 label *label363
-    * label *label357
-    * label *label353
-    * label *label349
-    * label *label343
-    * label *label339
-    * label *label336
   956 return :supplyBase0*retaddr
   957 label *label334
   958 write "Goal 11: Fetching titanium" .display ".status1"
 
   963 label *label365
   964 label *label335
   965 return :supplyBase0*retaddr
-    * end
   966 label *label20
   967 write "Phase 1: supplying base" .display ".status1"
   968 set :mineOre.1:ore @coal
 
   970 call *label12 *invalid :mineOre.1*retval (m:*label368) (h:*label368)
   971 label *label368
   972 return :supplyBase1*retaddr
-    * end
   973 label *label21
   974 read *tmp35 .controller ".monos"
   975 jump *label370 lessThanEq *tmp35 3
 
   981 setaddr :supplyBase0*retaddr *label373 (h:*label373)
   982 call *label19 *invalid :supplyBase0*retval (m:*label373) (h:*label373)
   983 label *label373
-    * label *label371
   984 return :supplyBase*retaddr
-    * end
   985 label *label22
   986 sensor *tmp369 .core @copper
   987 jump *label375 lessThan *tmp369 .targetCopper
 
  1005 label *label375
  1006 set :targetMet*retval false
  1007 return :targetMet*retaddr
-    * label *label374
-    * return :targetMet*retaddr
-    * end
  1008 label *label23
  1009 op sign :meetTarget:count :meetTarget:copper
  1010 op sign *tmp388 :meetTarget:lead
 
  1056 jump *label397 always
  1057 label *label399
  1058 return :meetTarget*retaddr
-    * end
  1059 label *label24
  1060 read *tmp79 bank1 511
  1061 op sub *tmp400 *tmp79 1
 
  1066 op add *tmp406 :log:encodedId *tmp405
  1067 write *tmp406 bank1 *tmp400
  1068 return :log*retaddr
-    * end
  1069 label *label25
  1070 sensor :log:encodedId :logBlock:block @id
  1071 setaddr :log*retaddr *label405 (h:*label405)
  1072 call *label24 *invalid :log*retval (m:*label405) (h:*label405)
  1073 label *label405
  1074 return :logBlock*retaddr
-    * end
  1075 label *label26
  1076 set :moveTo.1:x :buildBlockAt:x
  1077 set :moveTo.1:y :buildBlockAt:y
 
  1106 call *label25 *invalid :logBlock*retval (m:*label421) (h:*label421)
  1107 label *label421
  1108 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label406
  1109 return :buildBlockAt*retaddr
-    * end
  1110 label *label27
  1111 set :meetTarget:block :buildBlock:block
  1112 set :meetTarget:copper :buildBlock:copper
 
  1129 label *label424
  1130 set :buildBlock*retval :buildBlockAt*retval
  1131 return :buildBlock*retaddr
-    * end
  1132 label *label28
  1133 set :findUnits:count 0
  1134 ubind :findUnits:type
 
  1141 label *label426
  1142 set :findUnits*retval :findUnits:count
  1143 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   786 jump *label289 notEqual *tmp284 1
   787 set :findFreeUnit:first_unit @unit
   788 label *label289
-    * label *label288
   789 ubind :findFreeUnit:unit_type
   790 jump *label284 notEqual :findFreeUnit:first_unit @unit
   791 label *label281

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    51 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    52 label *label40
    53 set *tmp90 :buildBlock*retval
-    * jump *label35 always
    54 label *label35
    55 set .press *tmp90
    56 op add :buildBlockFromCfg.1:y .coreY 4
 
    63 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    64 label *label46
    65 set *tmp94 :buildBlock*retval
-    * jump *label41 always
    66 label *label41
    67 set .battery *tmp94
    68 op add :buildBlockFromCfg.2:x .coreX -1
 
    71 setaddr :buildBlock*retaddr *label52 (h:*label52)
    72 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    73 label *label52
-    * jump *label47 always
    74 label *label47
    75 op add :buildBlockFromCfg.3:y .coreY 3
    76 set :buildBlock:block @combustion-generator
 
    82 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    83 label *label58
    84 set *tmp102 :buildBlock*retval
-    * jump *label53 always
    85 label *label53
    86 set .generator *tmp102
    87 set .powerTarget 800
 
    95 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    96 label *label64
    97 set *tmp106 :buildBlock*retval
-    * jump *label59 always
    98 label *label59
    99 set .smelter *tmp106
   100 set :meetTarget:block @pneumatic-drill
 
   153 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   154 label *label78
   155 set *tmp125 :buildBlock*retval
-    * jump *label73 always
   156 label *label73
   157 set .unloader1 *tmp125
   158 op add :buildBlockFromCfg.6:x .coreX 1
 
   168 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   169 label *label84
   170 set *tmp129 :buildBlock*retval
-    * jump *label79 always
   171 label *label79
   172 set .controller *tmp129
   173 write processor1 *tmp129 ".display"
 
   192 setaddr :buildBlock*retaddr *label90 (h:*label90)
   193 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   194 label *label90
-    * jump *label85 always
   195 label *label85
   196 op add :buildBlockFromCfg.8:y .coreY 1
   197 set :buildBlock:block @unloader
 
   205 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   206 label *label96
   207 set *tmp137 :buildBlock*retval
-    * jump *label91 always
   208 label *label91
   209 write *tmp137 *tmp129 ".unloader2"
   210 op add :buildBlockFromCfg.9:x .coreX -3
 
   218 setaddr :buildBlock*retaddr *label102 (h:*label102)
   219 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   220 label *label102
-    * jump *label97 always
   221 label *label97
   222 op add :buildBlockFromCfg.10:x .coreX -4
   223 set :buildBlock:block @air-factory
 
   231 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   232 label *label108
   233 set *tmp145 :buildBlock*retval
-    * jump *label103 always
   234 label *label103
   235 write *tmp145 *tmp129 ".factory"
   236 write *tmp145 processor1 ".factory"
 
   312 setaddr :buildBlock*retaddr *label128 (h:*label128)
   313 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   314 label *label128
-    * jump *label123 always
   315 label *label123
   316 op add :buildBlockFromCfg.12:x .coreX 3.5
   317 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   327 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   328 label *label134
   329 set *tmp171 :buildBlock*retval
-    * jump *label129 always
   330 label *label129
   331 write *tmp171 *tmp129 ".kiln"
   332 set :buildBlock:block @junction
 
   338 setaddr :buildBlock*retaddr *label140 (h:*label140)
   339 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   340 label *label140
-    * jump *label135 always
   341 label *label135
   342 op add :buildBlockFromCfg.14:x .coreX -3.5
   343 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   351 setaddr :buildBlock*retaddr *label146 (h:*label146)
   352 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   353 label *label146
-    * jump *label141 always
   354 label *label141
   355 set :buildBlock:block @steam-generator
   356 set :buildBlock:x :buildBlockFromCfg.14:x
 
   364 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   365 label *label152
   366 set *tmp183 :buildBlock*retval
-    * jump *label147 always
   367 label *label147
   368 write *tmp183 *tmp129 ".generator2"
   369 set .graphiteSurplus 200
 
   568 setaddr :buildBlock*retaddr *label200 (h:*label200)
   569 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   570 label *label200
-    * jump *label195 always
   571 label *label195
   572 write 0 processor1 ".totalTargets"
   573 write null processor1 ".nextBlock"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    51 call *label27 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    52 label *label40
    53 set *tmp90 :buildBlock*retval
-    * label *label35
    54 set .press *tmp90
    55 op add :buildBlockFromCfg.1:y .coreY 4
    56 set :buildBlock:block @battery
 
    62 call *label27 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    63 label *label46
    64 set *tmp94 :buildBlock*retval
-    * label *label41
    65 set .battery *tmp94
    66 op add :buildBlockFromCfg.2:x .coreX -1
    67 set :buildBlock:x :buildBlockFromCfg.2:x
 
    69 setaddr :buildBlock*retaddr *label52 (h:*label52)
    70 call *label27 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    71 label *label52
-    * label *label47
    72 op add :buildBlockFromCfg.3:y .coreY 3
    73 set :buildBlock:block @combustion-generator
    74 set :buildBlock:x .coreX
 
    79 call *label27 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    80 label *label58
    81 set *tmp102 :buildBlock*retval
-    * label *label53
    82 set .generator *tmp102
    83 set .powerTarget 800
    84 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    91 call *label27 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    92 label *label64
    93 set *tmp106 :buildBlock*retval
-    * label *label59
    94 set .smelter *tmp106
    95 set :meetTarget:block @pneumatic-drill
    96 set :meetTarget:copper 18
 
   148 call *label27 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   149 label *label78
   150 set *tmp125 :buildBlock*retval
-    * label *label73
   151 set .unloader1 *tmp125
   152 op add :buildBlockFromCfg.6:x .coreX 1
   153 set :buildBlock:block @micro-processor
 
   162 call *label27 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   163 label *label84
   164 set *tmp129 :buildBlock*retval
-    * label *label79
   165 set .controller *tmp129
   166 write processor1 *tmp129 ".display"
   167 write .core *tmp129 ".core"
 
   185 setaddr :buildBlock*retaddr *label90 (h:*label90)
   186 call *label27 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   187 label *label90
-    * label *label85
   188 op add :buildBlockFromCfg.8:y .coreY 1
   189 set :buildBlock:block @unloader
   190 set :buildBlock:x :buildBlockFromCfg.7:x
 
   197 call *label27 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   198 label *label96
   199 set *tmp137 :buildBlock*retval
-    * label *label91
   200 write *tmp137 *tmp129 ".unloader2"
   201 op add :buildBlockFromCfg.9:x .coreX -3
   202 set :buildBlock:block @overflow-gate
 
   209 setaddr :buildBlock*retaddr *label102 (h:*label102)
   210 call *label27 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   211 label *label102
-    * label *label97
   212 op add :buildBlockFromCfg.10:x .coreX -4
   213 set :buildBlock:block @air-factory
   214 set :buildBlock:x :buildBlockFromCfg.10:x
 
   221 call *label27 *invalid :buildBlock*retval (m:*label108) (h:*label108)
   222 label *label108
   223 set *tmp145 :buildBlock*retval
-    * label *label103
   224 write *tmp145 *tmp129 ".factory"
   225 write *tmp145 processor1 ".factory"
   226 write 2 *tmp129 ".flareTarget"
 
   301 setaddr :buildBlock*retaddr *label128 (h:*label128)
   302 call *label27 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   303 label *label128
-    * label *label123
   304 op add :buildBlockFromCfg.12:x .coreX 3.5
   305 op add :buildBlockFromCfg.12:y .coreY 0.5
   306 set :buildBlock:block @kiln
 
   315 call *label27 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   316 label *label134
   317 set *tmp171 :buildBlock*retval
-    * label *label129
   318 write *tmp171 *tmp129 ".kiln"
   319 set :buildBlock:block @junction
   320 set :buildBlock:x :buildBlockFromCfg.11:x
 
   325 setaddr :buildBlock*retaddr *label140 (h:*label140)
   326 call *label27 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   327 label *label140
-    * label *label135
   328 op add :buildBlockFromCfg.14:x .coreX -3.5
   329 op add :buildBlockFromCfg.14:y .coreY 4.5
   330 set :buildBlock:block @water-extractor
 
   337 setaddr :buildBlock*retaddr *label146 (h:*label146)
   338 call *label27 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   339 label *label146
-    * label *label141
   340 set :buildBlock:block @steam-generator
   341 set :buildBlock:x :buildBlockFromCfg.14:x
   342 set :buildBlock:y :buildBlockFromCfg:y
 
   349 call *label27 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   350 label *label152
   351 set *tmp183 :buildBlock*retval
-    * label *label147
   352 write *tmp183 *tmp129 ".generator2"
   353 set .graphiteSurplus 200
   354 set .siliconSurplus 1000
 
   552 setaddr :buildBlock*retaddr *label200 (h:*label200)
   553 call *label27 *invalid :buildBlock*retval (m:*label200) (h:*label200)
   554 label *label200
-    * label *label195
   555 write 0 processor1 ".totalTargets"
   556 write null processor1 ".nextBlock"
   557 label *label201

Final code before resolving virtual instructions:

    0:  jump *label456 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 TIME_COMPRESS
    2:  draw triangle .ERROR .battery .builder .controller .core .coreX
    3:  draw triangle .coreY .display .generator .graphiteSurplus .leadSurplus .metaglassSurplus
    4:  draw triangle .powerTarget .press .siliconSurplus .smelter .targetCopper .targetGraphite
    5:  draw triangle .targetLead .targetMetaglass .targetSilicon .targetTitanium .thoriumDrill .thoriumGenerator
    6:  draw triangle .titaniumDrill .unloader1 :flares :monos :polys :searchThorium
    7:  draw triangle :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass
    8:  draw triangle :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockAt:block
    9:  draw triangle :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x
   10:  draw triangle :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x :buildBlockFromCfg.9:x :buildBlockFromCfg.4:x
   11:  draw triangle :buildBlockFromCfg.12:x :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y
   12:  draw triangle :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg:y :buildBlockFromCfg.8:y :buildBlockFromCfg.12:y :buildBlockFromCfg.3:y
   13:  draw triangle :buildBlockFromCfg.7:y :buildThoriumDrill:result :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block
   14:  draw triangle :depositItems:cap :depositItems:item :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem :findFreeUnit:first_unit
   15:  draw triangle :findFreeUnit:initial_flag :findFreeUnit:unit_type :findUnits:count :findUnits:firstUnit :findUnits:type :locateOre:ore
   16:  draw triangle :locateOre:x :locateOre:y :log:encodedId :logBlock:block :meetTarget:block :meetTarget:copper
   17:  draw triangle :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon :meetTarget:titanium
   18:  draw triangle :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore :mineOre:stop
   19:  draw triangle :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x :moveTo.1:y
   20:  draw triangle :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y :second:result
   21:  draw triangle :second.2:result :second.1:result :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand
   22:  draw triangle :supplyBase0:supplied :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing
   23:  draw triangle :supplyBlock:missing :supplyBlock.2:missing :supplyBlock.3:missing :transportStatus.2:target 0 0
        label *label456
   24:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   25:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   33:  set .graphiteSurplus 20                                      ...
   34:  set .siliconSurplus 20                                       ...
   35:  set .metaglassSurplus 20                                     ...
   36:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label29                                               CoreBuilder.mnd: do
   37:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   38:  set .builder @unit                                           ...
   39:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   40:  jump *label29 equal .core null                               CoreBuilder.mnd: do
   41:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   42:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.monos);
   43:  setaddr :findUnits*retaddr *label32                          ...
   44:  call *label28 *invalid :findUnits*retval                     ...
        label *label32                                               ...
   45:  write :findUnits:count processor1 ".monos"                   ...
   46:  set :monos :findUnits*retval                                 ...
   47:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.flares);
   48:  setaddr :findUnits*retaddr *label33                          ...
   49:  call *label28 *invalid :findUnits*retval                     ...
        label *label33                                               ...
   50:  write :findUnits:count processor1 ".flares"                  ...
   51:  set :flares :findUnits*retval                                ...
   52:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.polys);
   53:  setaddr :findUnits*retaddr *label34                          ...
   54:  call *label28 *invalid :findUnits*retval                     ...
        label *label34                                               ...
   55:  write :findUnits:count processor1 ".polys"                   ...
   56:  set :polys :findUnits*retval                                 ...
   57:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   58:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   59:  set :buildBlock:block @graphite-press                        ...
   60:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   61:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   62:  set :buildBlock:copper 75                                    ...
   63:  set :buildBlock:lead 30                                      ...
   64:  set :buildBlock:graphite 0                                   ...
   65:  set :buildBlock:silicon 0                                    ...
   66:  set :buildBlock:titanium 0                                   ...
   67:  set :buildBlock:metaglass 0                                  ...
   68:  set :buildBlock:rotation 0                                   ...
   69:  set :buildBlock:config null                                  ...
   70:  setaddr :buildBlock*retaddr *label40                         ...
   71:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label40                                               ...
   72:  set *tmp90 :buildBlock*retval                                ...
   73:  set .press *tmp90                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   74:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   75:  set :buildBlock:block @battery                               ...
   76:  set :buildBlock:x .coreX                                     ...
   77:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   78:  set :buildBlock:copper 5                                     ...
   79:  set :buildBlock:lead 20                                      ...
   80:  setaddr :buildBlock*retaddr *label46                         ...
   81:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label46                                               ...
   82:  set *tmp94 :buildBlock*retval                                ...
   83:  set .battery *tmp94                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   84:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   85:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   86:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   87:  setaddr :buildBlock*retaddr *label52                         ...
   88:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label52                                               ...
   89:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   90:  set :buildBlock:block @combustion-generator                  ...
   91:  set :buildBlock:x .coreX                                     ...
   92:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   93:  set :buildBlock:copper 25                                    ...
   94:  set :buildBlock:lead 15                                      ...
   95:  setaddr :buildBlock*retaddr *label58                         ...
   96:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label58                                               ...
   97:  set *tmp102 :buildBlock*retval                               ...
   98:  set .generator *tmp102                                       CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   99:  set .powerTarget 800                                         CoreBuilder.mnd: powerTarget = 800;
  100:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  101:  set :buildBlock:block @silicon-smelter                       ...
  102:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  103:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  104:  set :buildBlock:copper 30                                    ...
  105:  set :buildBlock:lead 25                                      ...
  106:  setaddr :buildBlock*retaddr *label64                         ...
  107:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label64                                               ...
  108:  set *tmp106 :buildBlock*retval                               ...
  109:  set .smelter *tmp106                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  110:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  111:  set :meetTarget:copper 18                                    ...
  112:  set :meetTarget:lead 0                                       ...
  113:  set :meetTarget:graphite 10                                  ...
  114:  set :meetTarget:silicon 0                                    ...
  115:  set :meetTarget:titanium 0                                   ...
  116:  set :meetTarget:metaglass 0                                  ...
  117:  setaddr :meetTarget*retaddr *label67                         ...
  118:  call *label23 *invalid :meetTarget*retval                    ...
        label *label67                                               ...
  119:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  120:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  121:  write .coreY processor4 ":findDrillLocation:y"               ...
  122:  write @unit processor4 ":findDrillLocation:unit"             ...
  123:  write @titanium processor4 ":findDrillLocation:item"         ...
  124:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  125:  write false processor4 ":findDrillLocation:large"            ...
  126:  write 4 processor4 ":findDrillLocation:limit"                ...
  127:  write false processor4 ":findDrillLocation*finished"         ...
  128:  write 1 processor4 "@counter"                                ...
        label *label68                                               ...
  129:  wait 1e-15                                                   ...
  130:  read *tmp121 processor4 ":findDrillLocation*finished"        ...
  131:  jump *label68 equal *tmp121 false                            ...
  132:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  133:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  134:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  135:  jump *label69 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  136:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  137:  stop                                                         Actions.mnd: stopProcessor();
        label *label69                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  138:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  139:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  140:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  141:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  142:  set :buildBlockAt:rotation null                              ...
  143:  set :buildBlockAt:config 0                                   ...
  144:  set :buildBlockAt:skipError false                            ...
  145:  setaddr :buildBlockAt*retaddr *label72                       ...
  146:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label72                                               ...
  147:  set *tmp110 :buildBlockAt*retval                             ...
  148:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  149:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  150:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  151:  set :buildBlock:block @unloader                              ...
  152:  set :buildBlock:x .coreX                                     ...
  153:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  154:  set :buildBlock:copper 0                                     ...
  155:  set :buildBlock:lead 0                                       ...
  156:  set :buildBlock:silicon 30                                   ...
  157:  set :buildBlock:titanium 25                                  ...
  158:  setaddr :buildBlock*retaddr *label78                         ...
  159:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label78                                               ...
  160:  set *tmp125 :buildBlock*retval                               ...
  161:  set .unloader1 *tmp125                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  162:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  163:  set :buildBlock:block @micro-processor                       ...
  164:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  165:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  166:  set :buildBlock:copper 90                                    ...
  167:  set :buildBlock:lead 50                                      ...
  168:  set :buildBlock:silicon 50                                   ...
  169:  set :buildBlock:titanium 0                                   ...
  170:  setaddr :buildBlock*retaddr *label84                         ...
  171:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  172:  call *label27 *invalid :buildBlock*retval                    ...
        label *label84                                               ...
  173:  set *tmp129 :buildBlock*retval                               ...
  174:  set .controller *tmp129                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  175:  write processor1 *tmp129 ".display"                          CoreBuilder.mnd: controller.display = display;
  176:  write .core *tmp129 ".core"                                  CoreBuilder.mnd: controller.core = core;
  177:  write bank1 *tmp129 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  178:  write *tmp94 *tmp129 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  179:  write *tmp102 *tmp129 ".generator"                           CoreBuilder.mnd: controller.generator = generator;
  180:  write *tmp106 *tmp129 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  181:  write *tmp90 *tmp129 ".press"                                CoreBuilder.mnd: controller.press = press;
  182:  write :monos *tmp129 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  183:  write :flares *tmp129 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  184:  write :polys *tmp129 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  185:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  186:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  187:  set :buildBlock:block @power-node                            ...
  188:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  189:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  190:  set :buildBlock:copper 2                                     ...
  191:  set :buildBlock:lead 6                                       ...
  192:  set :buildBlock:silicon 0                                    ...
  193:  set :buildBlock:config null                                  ...
  194:  setaddr :buildBlock*retaddr *label90                         ...
  195:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label90                                               ...
  196:  op add :buildBlockFromCfg.8:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  197:  set :buildBlock:block @unloader                              ...
  198:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  199:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  200:  set :buildBlock:copper 0                                     ...
  201:  set :buildBlock:lead 0                                       ...
  202:  set :buildBlock:silicon 30                                   ...
  203:  set :buildBlock:titanium 25                                  ...
  204:  setaddr :buildBlock*retaddr *label96                         ...
  205:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label96                                               ...
  206:  set *tmp137 :buildBlock*retval                               ...
  207:  write *tmp137 *tmp129 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  208:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  209:  set :buildBlock:block @overflow-gate                         ...
  210:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  211:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  212:  set :buildBlock:copper 4                                     ...
  213:  set :buildBlock:lead 2                                       ...
  214:  set :buildBlock:silicon 0                                    ...
  215:  set :buildBlock:titanium 0                                   ...
  216:  setaddr :buildBlock*retaddr *label102                        ...
  217:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label102                                              ...
  218:  op add :buildBlockFromCfg.10:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  219:  set :buildBlock:block @air-factory                           ...
  220:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  221:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  222:  set :buildBlock:copper 60                                    ...
  223:  set :buildBlock:lead 70                                      ...
  224:  set :buildBlock:rotation 3                                   ...
  225:  set :buildBlock:config @mono                                 ...
  226:  setaddr :buildBlock*retaddr *label108                        ...
  227:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label108                                              ...
  228:  set *tmp145 :buildBlock*retval                               ...
  229:  write *tmp145 *tmp129 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  230:  write *tmp145 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  231:  write 2 *tmp129 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 2;
  232:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  233:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  234:  write 0 *tmp129 ".leadReserve"                               CoreBuilder.mnd: controller.leadReserve = 0;
  235:  write 0 *tmp129 ".siliconReserve"                            CoreBuilder.mnd: controller.siliconReserve = 0;
  236:  write @flare *tmp129 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = unit;
  237:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  238:  set :meetTarget:copper 0                                     ...
  239:  set :meetTarget:lead 0                                       ...
  240:  set :meetTarget:graphite 0                                   ...
  241:  set :meetTarget:silicon 0                                    ...
  242:  set :meetTarget:titanium 0                                   ...
  243:  set :meetTarget:metaglass 0                                  ...
  244:  setaddr :meetTarget*retaddr *label111                        ...
  245:  call *label23 *invalid :meetTarget*retval                    ...
        label *label111                                              ...
  246:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  247:  set .siliconSurplus 20                                       ...
  248:  write 85 *tmp129 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  249:  write 150 *tmp129 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  250:  write 30 *tmp129 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  251:  set :searchThorium true                                      CoreBuilder.mnd: var searchThorium = true;
        label *label112                                              CoreBuilder.mnd: do
  252:  read *tmp36 *tmp129 ".flares"                                CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  253:  op greaterThan *tmp149 *tmp36 0                              ...
  254:  op land *tmp150 :searchThorium *tmp149                       ...
  255:  jump *label115 equal *tmp150 false                           ...
  256:  set :searchThorium false                                     CoreBuilder.mnd: searchThorium = false;
  257:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  258:  set :findFreeUnit:initial_flag 0                             ...
  259:  setaddr :findFreeUnit*retaddr *label117                      ...
  260:  call *label15 *invalid :findFreeUnit*retval                  ...
        label *label117                                              ...
  261:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  262:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  263:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  264:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  265:  write false processor4 ":layoutThoriumDrill*finished"        ...
  266:  write 2 processor4 "@counter"                                ...
  267:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  268:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  269:  write *tmp110 processor3 ":start:drill"                      ...
  270:  write false processor3 ":start*finished"                     ...
  271:  write 3 processor3 "@counter"                                ...
        label *label118                                              ...
  272:  wait 1e-15                                                   ...
  273:  read *tmp159 processor3 ":start*finished"                    ...
  274:  jump *label118 equal *tmp159 false                           ...
        label *label115                                              CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  275:  setaddr :supplyBase*retaddr *label119                        CoreBuilder.mnd: supplyBase();
  276:  call *label21 *invalid :supplyBase*retval                    ...
        label *label119                                              ...
  277:  sensor *tmp160 *tmp94 @totalPower                            CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  278:  jump *label114 lessThan *tmp160 300                          ...
  279:  read *tmp35 *tmp129 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  280:  jump *label112 lessThan *tmp35 3                             CoreBuilder.mnd: do
        label *label114                                              ...
  281:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  282:  write *tmp110 processor3 ":start:drill"                      ...
  283:  write false processor3 ":start*finished"                     ...
  284:  write 3 processor3 "@counter"                                ...
        label *label122                                              ...
  285:  wait 1e-15                                                   ...
  286:  read *tmp166 processor3 ":start*finished"                    ...
  287:  jump *label122 equal *tmp166 false                           ...
  288:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  289:  set :buildBlock:block @unloader                              ...
  290:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  291:  set :buildBlock:y .coreY                                     ...
  292:  set :buildBlock:copper 0                                     ...
  293:  set :buildBlock:lead 0                                       ...
  294:  set :buildBlock:silicon 30                                   ...
  295:  set :buildBlock:titanium 25                                  ...
  296:  set :buildBlock:rotation 0                                   ...
  297:  set :buildBlock:config null                                  ...
  298:  setaddr :buildBlock*retaddr *label128                        ...
  299:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label128                                              ...
  300:  op add :buildBlockFromCfg.12:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  301:  op add :buildBlockFromCfg.12:y .coreY 0.5                    ...
  302:  set :buildBlock:block @kiln                                  ...
  303:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  304:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  305:  set :buildBlock:copper 60                                    ...
  306:  set :buildBlock:lead 30                                      ...
  307:  set :buildBlock:graphite 30                                  ...
  308:  set :buildBlock:silicon 0                                    ...
  309:  set :buildBlock:titanium 0                                   ...
  310:  setaddr :buildBlock*retaddr *label134                        ...
  311:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label134                                              ...
  312:  set *tmp171 :buildBlock*retval                               ...
  313:  write *tmp171 *tmp129 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  314:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  315:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  316:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  317:  set :buildBlock:copper 3                                     ...
  318:  set :buildBlock:lead 0                                       ...
  319:  set :buildBlock:graphite 0                                   ...
  320:  setaddr :buildBlock*retaddr *label140                        ...
  321:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label140                                              ...
  322:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  323:  op add :buildBlockFromCfg.14:y .coreY 4.5                    ...
  324:  set :buildBlock:block @water-extractor                       ...
  325:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  326:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  327:  set :buildBlock:copper 30                                    ...
  328:  set :buildBlock:lead 30                                      ...
  329:  set :buildBlock:graphite 30                                  ...
  330:  set :buildBlock:metaglass 30                                 ...
  331:  setaddr :buildBlock*retaddr *label146                        ...
  332:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label146                                              ...
  333:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  334:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  335:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  336:  set :buildBlock:copper 35                                    ...
  337:  set :buildBlock:lead 40                                      ...
  338:  set :buildBlock:graphite 25                                  ...
  339:  set :buildBlock:silicon 30                                   ...
  340:  set :buildBlock:metaglass 0                                  ...
  341:  setaddr :buildBlock*retaddr *label152                        ...
  342:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label152                                              ...
  343:  set *tmp183 :buildBlock*retval                               ...
  344:  write *tmp183 *tmp129 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  345:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  346:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  347:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  348:  jump *label153 equal :searchThorium false                    CoreBuilder.mnd: if searchThorium then
        label *label155                                              CoreBuilder.mnd: while controller.flares < 1 do
  349:  read *tmp36 *tmp129 ".flares"                                ...
  350:  jump *label157 greaterThanEq *tmp36 1                        ...
  351:  setaddr :supplyBase*retaddr *label158                        CoreBuilder.mnd: supplyBase();
  352:  call *label21 *invalid :supplyBase*retval                    ...
        label *label158                                              ...
  353:  jump *label155 always 0 0                                    CoreBuilder.mnd: while controller.flares < 1 do
        label *label157                                              ...
  354:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  355:  set :findFreeUnit:initial_flag 0                             ...
  356:  setaddr :findFreeUnit*retaddr *label159                      ...
  357:  call *label15 *invalid :findFreeUnit*retval                  ...
        label *label159                                              ...
  358:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  359:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  360:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  361:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  362:  write false processor4 ":layoutThoriumDrill*finished"        ...
  363:  write 2 processor4 "@counter"                                ...
  364:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label160                                              CoreBuilder.mnd: do
  365:  setaddr :supplyBase*retaddr *label163                        CoreBuilder.mnd: supplyBase();
  366:  call *label21 *invalid :supplyBase*retval                    ...
        label *label163                                              ...
  367:  read *tmp194 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  368:  jump *label160 equal *tmp194 false                           CoreBuilder.mnd: do
        label *label153                                              CoreBuilder.mnd: if searchThorium then
  369:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  370:  set :meetTarget:copper 35                                    ...
  371:  set :meetTarget:lead 0                                       ...
  372:  set :meetTarget:graphite 30                                  ...
  373:  set :meetTarget:silicon 30                                   ...
  374:  set :meetTarget:titanium 20                                  ...
  375:  set :meetTarget:metaglass 0                                  ...
  376:  setaddr :meetTarget*retaddr *label166                        ...
  377:  call *label23 *invalid :meetTarget*retval                    ...
        label *label166                                              ...
        label *label167                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  378:  wait 1e-15                                                   ...
  379:  read *tmp196 processor4 ":layoutThoriumDrill*finished"       ...
  380:  jump *label167 equal *tmp196 false                           ...
  381:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  382:  jump *label168 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  383:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  384:  stop                                                         Actions.mnd: stopProcessor();
        label *label168                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  385:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  386:  read :buildBlockAt:x processor4 ".drillX"                    ...
  387:  read :buildBlockAt:y processor4 ".drillY"                    ...
  388:  set :buildBlockAt:rotation null                              ...
  389:  set :buildBlockAt:config 0                                   ...
  390:  set :buildBlockAt:skipError false                            ...
  391:  setaddr :buildBlockAt*retaddr *label171                      ...
  392:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label171                                              ...
  393:  set .thoriumDrill :buildBlockAt*retval                       ...
  394:  read *tmp67 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  395:  jump *label164 lessThan *tmp67 0                             ...
  396:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  397:  set :meetTarget:copper 30                                    ...
  398:  set :meetTarget:lead 30                                      ...
  399:  set :meetTarget:graphite 30                                  ...
  400:  set :meetTarget:silicon 0                                    ...
  401:  set :meetTarget:titanium 0                                   ...
  402:  set :meetTarget:metaglass 30                                 ...
  403:  setaddr :meetTarget*retaddr *label175                        ...
  404:  call *label23 *invalid :meetTarget*retval                    ...
        label *label175                                              ...
  405:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  406:  read *tmp67 processor4 ".water1X"                            ...
  407:  set :buildBlockAt:x *tmp67                                   ...
  408:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  409:  set :buildBlockAt:rotation null                              ...
  410:  set :buildBlockAt:config 0                                   ...
  411:  set :buildBlockAt:skipError false                            ...
  412:  setaddr :buildBlockAt*retaddr *label176                      ...
  413:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label176                                              ...
  414:  read *tmp69 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  415:  jump *label164 lessThan *tmp69 0                             ...
  416:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  417:  set :meetTarget:copper 30                                    ...
  418:  set :meetTarget:lead 30                                      ...
  419:  set :meetTarget:graphite 30                                  ...
  420:  set :meetTarget:silicon 0                                    ...
  421:  set :meetTarget:titanium 0                                   ...
  422:  set :meetTarget:metaglass 30                                 ...
  423:  setaddr :meetTarget*retaddr *label180                        ...
  424:  call *label23 *invalid :meetTarget*retval                    ...
        label *label180                                              ...
  425:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  426:  read *tmp69 processor4 ".water2X"                            ...
  427:  set :buildBlockAt:x *tmp69                                   ...
  428:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  429:  set :buildBlockAt:rotation null                              ...
  430:  set :buildBlockAt:config 0                                   ...
  431:  set :buildBlockAt:skipError false                            ...
  432:  setaddr :buildBlockAt*retaddr *label181                      ...
  433:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label181                                              ...
  434:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  435:  set :meetTarget:copper 30                                    ...
  436:  set :meetTarget:lead 30                                      ...
  437:  set :meetTarget:graphite 30                                  ...
  438:  set :meetTarget:silicon 0                                    ...
  439:  set :meetTarget:titanium 0                                   ...
  440:  set :meetTarget:metaglass 30                                 ...
  441:  setaddr :meetTarget*retaddr *label183                        ...
  442:  call *label23 *invalid :meetTarget*retval                    ...
        label *label183                                              ...
  443:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  444:  read :buildBlockAt:x processor4 ".generatorX"                ...
  445:  read :buildBlockAt:y processor4 ".generatorY"                ...
  446:  set :buildBlockAt:rotation null                              ...
  447:  set :buildBlockAt:config 0                                   ...
  448:  set :buildBlockAt:skipError false                            ...
  449:  setaddr :buildBlockAt*retaddr *label184                      ...
  450:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label184                                              ...
  451:  set .thoriumGenerator :buildBlockAt*retval                   ...
  452:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  453:  set :meetTarget:copper 2                                     ...
  454:  set :meetTarget:lead 6                                       ...
  455:  set :meetTarget:graphite 0                                   ...
  456:  set :meetTarget:silicon 0                                    ...
  457:  set :meetTarget:titanium 0                                   ...
  458:  set :meetTarget:metaglass 0                                  ...
  459:  setaddr :meetTarget*retaddr *label186                        ...
  460:  call *label23 *invalid :meetTarget*retval                    ...
        label *label186                                              ...
  461:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  462:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  463:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  464:  set :buildBlockAt:rotation null                              ...
  465:  set :buildBlockAt:config 0                                   ...
  466:  set :buildBlockAt:skipError false                            ...
  467:  setaddr :buildBlockAt*retaddr *label187                      ...
  468:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label187                                              ...
  469:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  470:  set :meetTarget:copper 0                                     ...
  471:  set :meetTarget:lead 10                                      ...
  472:  set :meetTarget:graphite 0                                   ...
  473:  set :meetTarget:silicon 8                                    ...
  474:  set :meetTarget:titanium 0                                   ...
  475:  set :meetTarget:metaglass 0                                  ...
  476:  setaddr :meetTarget*retaddr *label189                        ...
  477:  call *label23 *invalid :meetTarget*retval                    ...
        label *label189                                              ...
  478:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  479:  read :buildBlockAt:x processor4 ".panelX"                    ...
  480:  read :buildBlockAt:y processor4 ".panelY"                    ...
  481:  set :buildBlockAt:rotation null                              ...
  482:  set :buildBlockAt:config 0                                   ...
  483:  set :buildBlockAt:skipError false                            ...
  484:  setaddr :buildBlockAt*retaddr *label190                      ...
  485:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label190                                              ...
  486:  set :meetTarget:block @battery                               CoreBuilder.mnd: meetTarget(
  487:  set :meetTarget:copper 5                                     ...
  488:  set :meetTarget:lead 20                                      ...
  489:  set :meetTarget:graphite 0                                   ...
  490:  set :meetTarget:silicon 0                                    ...
  491:  set :meetTarget:titanium 0                                   ...
  492:  set :meetTarget:metaglass 0                                  ...
  493:  setaddr :meetTarget*retaddr *label192                        ...
  494:  call *label23 *invalid :meetTarget*retval                    ...
        label *label192                                              ...
  495:  set :buildBlockAt:block @battery                             CoreBuilder.mnd: buildBlockAt(@battery, oreLocator.batteryX, oreLocator.batteryY, null, 0, false);
  496:  read :buildBlockAt:x processor4 ".batteryX"                  ...
  497:  read :buildBlockAt:y processor4 ".batteryY"                  ...
  498:  set :buildBlockAt:rotation null                              ...
  499:  set :buildBlockAt:config 0                                   ...
  500:  set :buildBlockAt:skipError false                            ...
  501:  setaddr :buildBlockAt*retaddr *label193                      ...
  502:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label193                                              ...
  503:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  504:  write .thoriumDrill processor3 ":addThoriumDrill:drill"      CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  505:  write .thoriumGenerator processor3 ":addThoriumDrill:generat ...
  506:  write false processor3 ":addThoriumDrill*finished"           ...
  507:  write 1 processor3 "@counter"                                ...
        label *label194                                              ...
  508:  wait 1e-15                                                   ...
  509:  read *tmp213 processor3 ":addThoriumDrill*finished"          ...
  510:  jump *label194 equal *tmp213 false                           ...
        label *label164                                              CoreBuilder.mnd: buildThoriumDrill();
  511:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  512:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  513:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  514:  set :buildBlock:copper 2                                     ...
  515:  set :buildBlock:lead 2                                       ...
  516:  set :buildBlock:graphite 0                                   ...
  517:  set :buildBlock:silicon 0                                    ...
  518:  set :buildBlock:config @coal                                 ...
  519:  setaddr :buildBlock*retaddr *label200                        ...
  520:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label200                                              ...
  521:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  522:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label201                                              CoreBuilder.mnd: do
  523:  setaddr :supplyBase*retaddr *label204                        CoreBuilder.mnd: supplyBase();
  524:  call *label21 *invalid :supplyBase*retval                    ...
        label *label204                                              ...
  525:  read *tmp36 *tmp129 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  526:  read *tmp35 *tmp129 ".monos"                                 ...
  527:  op add *tmp218 *tmp36 *tmp35                                 ...
  528:  jump *label201 lessThan *tmp218 16                           CoreBuilder.mnd: do
        label *label205                                              CoreBuilder.mnd: while true do
  529:  setaddr :supplyBase*retaddr *label208                        CoreBuilder.mnd: supplyBase();
  530:  call *label21 *invalid :supplyBase*retval                    ...
        label *label208                                              ...
  531:  jump *label205 always 0 0                                    CoreBuilder.mnd: while true do
        label *label5                                                Actions.mnd: void moveTo(x, y, radius)
  532:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  533:  op sub *tmp222 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label213                                              ...
  534:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp220 0 ...
  535:  jump *label215 notEqual *tmp220 false                        ...
  536:  ucontrol approach :moveTo:x :moveTo:y *tmp222 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  537:  jump *label213 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label215                                              ...
  538:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label6                                                Actions.mnd: void moveTo(x, y)
  539:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  540:  set :moveTo:y :moveTo.1:y                                    ...
  541:  set :moveTo:radius 6                                         ...
  542:  setaddr :moveTo*retaddr *label217                            ...
  543:  call *label5 *invalid :moveTo*retval                         ...
        label *label217                                              ...
  544:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label7                                                Actions.mnd: void moveToEmpty(x, y)
  545:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label220                                              Actions.mnd: do
  546:  sensor *tmp225 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  547:  jump *label223 equal *tmp225 null                            ...
  548:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label223                                              ...
  549:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  550:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp228 0    Actions.mnd: while !within(x, y, RADIUS);
  551:  jump *label220 equal *tmp228 false                           Actions.mnd: do
  552:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label8                                                Actions.mnd: void moveToBlock(block, radius)
  553:  sensor *tmp230 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  554:  sensor *tmp231 :moveToBlock:block @y                         ...
  555:  set :moveTo:x *tmp230                                        ...
  556:  set :moveTo:y *tmp231                                        ...
  557:  set :moveTo:radius :moveToBlock:radius                       ...
  558:  setaddr :moveTo*retaddr *label226                            ...
  559:  call *label5 *invalid :moveTo*retval                         ...
        label *label226                                              ...
  560:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label9                                                Actions.mnd: void depositItems(block, item)
  561:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  562:  sensor *tmp232 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  563:  jump *label229 notEqual *tmp232 :depositItems:item           ...
  564:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  565:  set :moveToBlock:radius 6                                    ...
  566:  setaddr :moveToBlock*retaddr *label231                       ...
  567:  call *label8 *invalid :moveToBlock*retval                    ...
        label *label231                                              ...
  568:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label232                                              Actions.mnd: do
  569:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  570:  sensor *tmp236 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  571:  op mul *tmp237 *tmp236 :depositItems:cap                     ...
  572:  sensor *tmp238 :depositItems:block :depositItems:item        ...
  573:  jump *label232 greaterThan *tmp237 *tmp238                   Actions.mnd: do
  574:  jump *label230 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label229                                              ...
        label *label235                                              Actions.mnd: while @unit.@firstItem != null do
  575:  sensor *tmp240 @unit @firstItem                              ...
  576:  jump *label237 equal *tmp240 null                            ...
  577:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  578:  jump *label235 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label237                                              ...
        label *label230                                              Actions.mnd: if @unit.@firstItem == item then
  579:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  580:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  581:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label10                                               Actions.mnd: void locateOre(ore, out x, out y)
  582:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  583:  jump *label240 notEqual *tmp242 false                        ...
  584:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  585:  stop                                                         Actions.mnd: stopProcessor();
        label *label240                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  586:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label11                                               Actions.mnd: void mineOre(ore, amount, block)
  587:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  588:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  589:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  590:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  591:  setaddr :locateOre*retaddr *label245                         ...
  592:  call *label10 *invalid :locateOre*retval                     ...
        label *label245                                              ...
  593:  set :mineOre:x :locateOre:x                                  ...
  594:  set :mineOre:y :locateOre:y                                  ...
  595:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  596:  set :moveToEmpty:y :locateOre:y                              ...
  597:  setaddr :moveToEmpty*retaddr *label246                       ...
  598:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label246                                              ...
  599:  sensor *tmp247 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  600:  jump *label247 equal *tmp247 :mineOre:ore                    ...
        label *label250                                              Actions.mnd: while @unit.@firstItem != null do
  601:  sensor *tmp250 @unit @firstItem                              ...
  602:  jump *label252 equal *tmp250 null                            ...
  603:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  604:  jump *label250 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label252                                              ...
        label *label247                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  605:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  606:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  607:  op add :mineOre:stop :second:result 10                       Actions.mnd: var stop = second() + 10;
        label *label255                                              Actions.mnd: do
  608:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  609:  op notEqual *tmp255 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  610:  op notEqual *tmp256 :mineOre:item :mineOre:ore               ...
  611:  op land *tmp257 *tmp255 *tmp256                              ...
  612:  jump *label257 notEqual *tmp257 false                        ...
  613:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  614:  op mul :second.1:result @second TIME_COMPRESS                common.mnd: mlog (out result) {
  615:  jump *label257 greaterThan :second.1:result :mineOre:stop    Actions.mnd: if second() > stop then break; end;
  616:  sensor *tmp262 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  617:  jump *label255 lessThan *tmp262 :mineOre:amount              Actions.mnd: do
        label *label257                                              ...
  618:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  619:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  620:  set :depositItems:item :mineOre:ore                          ...
  621:  setaddr :depositItems*retaddr *label263                      ...
  622:  call *label9 *invalid :depositItems*retval                   ...
        label *label263                                              ...
  623:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label12                                               Actions.mnd: void mineOre(ore)
  624:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  625:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  626:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  627:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  628:  set :mineOre:amount 30                                       ...
  629:  set :mineOre:block .core                                     ...
  630:  setaddr :mineOre*retaddr *label266                           ...
  631:  call *label11 *invalid :mineOre*retval                       ...
        label *label266                                              ...
  632:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label13                                               Actions.mnd: void fetchBlock(block, item)
  633:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  634:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  635:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  636:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  637:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  638:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  639:  sensor *tmp266 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  640:  sensor *tmp267 :fetchBlock:block @y                          ...
  641:  set :moveToEmpty:x *tmp266                                   ...
  642:  set :moveToEmpty:y *tmp267                                   ...
  643:  setaddr :moveToEmpty*retaddr *label270                       ...
  644:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label270                                              ...
        label *label272                                              Actions.mnd: while @unit.@firstItem != null do
  645:  sensor *tmp268 @unit @firstItem                              ...
  646:  jump *label274 equal *tmp268 null                            ...
  647:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  648:  jump *label272 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label274                                              ...
        label *label275                                              Actions.mnd: do
  649:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  650:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  651:  op notEqual *tmp271 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  652:  op notEqual *tmp272 :fetchBlock:unitItem :fetchBlock:item    ...
  653:  op land *tmp273 *tmp271 *tmp272                              ...
  654:  jump *label278 equal *tmp273 false                           ...
  655:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label278                                              Actions.mnd: if unitItem != null and unitItem != item then
  656:  sensor *tmp275 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  657:  op lessThan *tmp276 *tmp275 30                               ...
  658:  sensor *tmp277 :fetchBlock:block :fetchBlock:item            ...
  659:  op land *tmp278 *tmp276 *tmp277                              ...
  660:  jump *label275 notEqual *tmp278 false                        Actions.mnd: do
  661:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  662:  set :depositItems:item :fetchBlock:item                      ...
  663:  setaddr :depositItems*retaddr *label280                      ...
  664:  call *label9 *invalid :depositItems*retval                   ...
        label *label280                                              ...
  665:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label15                                               *units: def findFreeUnit(unit_type, initial_flag)
  666:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  667:  jump *label281 equal @unit null                              *units: if @unit == null then return null; end;
  668:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label284                                              *units: do
  669:  sensor *tmp281 @unit @controlled                             *units: if @unit.@controlled == 0 then
  670:  jump *label287 notEqual *tmp281 0                            ...
  671:  ucontrol flag :findFreeUnit:initial_flag 0 0 0 0             *units: flag(initial_flag);        // Mark unit as active
  672:  return :findFreeUnit*retaddr                                 *units: return @unit;
        label *label287                                              *units: if @unit.@controlled == 0 then
  673:  sensor *tmp284 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  674:  jump *label289 notEqual *tmp284 1                            ...
  675:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label289                                              *units: elsif first_unit.@dead == 1 then
  676:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  677:  jump *label284 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label281                                              *units: def findFreeUnit(unit_type, initial_flag)
  678:  return :findFreeUnit*retaddr                                 ...
        label *label19                                               CoreBuilder.mnd: void supplyBase0()
  679:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  680:  jump *label292 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  681:  sensor *tmp291 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  682:  jump *label294 greaterThanEq *tmp291 .targetGraphite         ...
  683:  sensor *tmp294 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  684:  jump *label296 greaterThanEq *tmp294 5                       ...
  685:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  686:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  687:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  688:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  689:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  690:  sensor *tmp298 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  691:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  692:  jump *label301 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  693:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  694:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  695:  set :mineOre:block .press                                    ...
  696:  setaddr :mineOre*retaddr *label303                           ...
  697:  call *label11 *invalid :mineOre*retval                       ...
        label *label303                                              ...
        label *label301                                              CoreBuilder.mnd: if missing > 0 then
  698:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label296                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label294                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  699:  sensor *tmp302 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  700:  jump *label304 greaterThanEq *tmp302 .targetSilicon          ...
  701:  sensor *tmp305 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  702:  jump *label306 greaterThanEq *tmp305 5                       ...
  703:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  704:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  705:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  706:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  707:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  708:  sensor *tmp309 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  709:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  710:  jump *label311 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  711:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  712:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  713:  set :mineOre:block .smelter                                  ...
  714:  setaddr :mineOre*retaddr *label313                           ...
  715:  call *label11 *invalid :mineOre*retval                       ...
        label *label313                                              ...
        label *label311                                              CoreBuilder.mnd: if missing > 0 then
  716:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  717:  jump *label307 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label306                                              ...
  718:  sensor *tmp313 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  719:  jump *label314 greaterThanEq *tmp313 5                       ...
  720:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  721:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  722:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  723:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  724:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  725:  sensor *tmp317 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  726:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  727:  jump *label319 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  728:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  729:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  730:  set :mineOre:block .smelter                                  ...
  731:  setaddr :mineOre*retaddr *label321                           ...
  732:  call *label11 *invalid :mineOre*retval                       ...
        label *label321                                              ...
        label *label319                                              CoreBuilder.mnd: if missing > 0 then
  733:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label314                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label307                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label304                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  734:  sensor *tmp321 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  735:  jump *label322 greaterThanEq *tmp321 .powerTarget            ...
  736:  sensor *tmp324 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  737:  jump *label324 greaterThanEq *tmp324 2                       ...
  738:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  739:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  740:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  741:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  742:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  743:  sensor *tmp328 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  744:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  745:  jump *label329 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  746:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  747:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  748:  set :mineOre:block .generator                                ...
  749:  setaddr :mineOre*retaddr *label331                           ...
  750:  call *label11 *invalid :mineOre*retval                       ...
        label *label331                                              ...
        label *label329                                              CoreBuilder.mnd: if missing > 0 then
  751:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label324                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label322                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label292                                              CoreBuilder.mnd: if unloader1 == null then
  752:  set *tmp334 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  753:  sensor *tmp332 .core @titanium                               ...
  754:  jump *label333 greaterThanEq *tmp332 .targetTitanium         ...
  755:  sensor *tmp335 .core @titanium                               ...
  756:  op sub *tmp336 .targetTitanium *tmp335                       ...
  757:  op min *tmp334 7 *tmp336                                     ...
        label *label333                                              ...
  758:  sensor *tmp338 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  759:  jump *label334 greaterThanEq *tmp338 *tmp334                 ...
  760:  jump *label335 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  761:  sensor *tmp343 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  762:  op mul *tmp344 .unloader1 .powerTarget                       ...
  763:  jump *label338 greaterThanEq *tmp343 *tmp344                 ...
  764:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  765:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  766:  setaddr :mineOre.1*retaddr *label341                         ...
  767:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label341                                              ...
  768:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label338                                              ...
  769:  sensor *tmp347 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  770:  jump *label342 greaterThanEq *tmp347 .targetSilicon          ...
  771:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  772:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  773:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  774:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  775:  jump *label346 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  776:  set :mineOre.1:ore @coal                                     ...
        label *label346                                              ...
  777:  setaddr :mineOre.1*retaddr *label347                         CoreBuilder.mnd: mineOre(ore);
  778:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label347                                              ...
  779:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label342                                              ...
  780:  sensor *tmp354 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  781:  jump *label348 greaterThanEq *tmp354 .targetCopper           ...
  782:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  783:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  784:  setaddr :mineOre.1*retaddr *label351                         ...
  785:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label351                                              ...
  786:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label348                                              ...
  787:  sensor *tmp357 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  788:  jump *label352 greaterThanEq *tmp357 .targetLead             ...
  789:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  790:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  791:  setaddr :mineOre.1*retaddr *label355                         ...
  792:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label355                                              ...
  793:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label352                                              ...
  794:  sensor *tmp360 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  795:  jump *label356 greaterThanEq *tmp360 .targetMetaglass        ...
  796:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  797:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  798:  setaddr :mineOre.1*retaddr *label359                         ...
  799:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label359                                              ...
  800:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label356                                              ...
  801:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  802:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  803:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  804:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  805:  jump *label362 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  806:  set :mineOre.1:ore @coal                                     ...
        label *label362                                              ...
  807:  setaddr :mineOre.1*retaddr *label363                         CoreBuilder.mnd: mineOre(ore);
  808:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label363                                              ...
  809:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label334                                              ...
  810:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  811:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  812:  set :fetchBlock:item @titanium                               ...
  813:  setaddr :fetchBlock*retaddr *label365                        ...
  814:  call *label13 *invalid :fetchBlock*retval                    ...
        label *label365                                              ...
        label *label335                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  815:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label20                                               CoreBuilder.mnd: void supplyBase1()
  816:  write "Phase 1: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  817:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  818:  setaddr :mineOre.1*retaddr *label368                         ...
  819:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label368                                              ...
  820:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label21                                               CoreBuilder.mnd: void supplyBase()
  821:  read *tmp35 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  822:  jump *label370 lessThanEq *tmp35 3                           ...
  823:  setaddr :supplyBase1*retaddr *label372                       CoreBuilder.mnd: supplyBase1();
  824:  call *label20 *invalid :supplyBase1*retval                   ...
        label *label372                                              ...
  825:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label370                                              ...
  826:  setaddr :supplyBase0*retaddr *label373                       CoreBuilder.mnd: supplyBase0();
  827:  call *label19 *invalid :supplyBase0*retval                   ...
        label *label373                                              ...
  828:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label22                                               CoreBuilder.mnd: def targetMet()
  829:  sensor *tmp369 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  830:  jump *label375 lessThan *tmp369 .targetCopper                ...
  831:  sensor *tmp372 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  832:  jump *label377 lessThan *tmp372 .targetLead                  ...
  833:  sensor *tmp375 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  834:  jump *label379 lessThan *tmp375 .targetGraphite              ...
  835:  sensor *tmp378 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  836:  jump *label381 lessThan *tmp378 .targetSilicon               ...
  837:  sensor *tmp381 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  838:  jump *label383 lessThan *tmp381 .targetTitanium              ...
  839:  sensor *tmp384 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  840:  jump *label385 lessThan *tmp384 .targetMetaglass             ...
  841:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  842:  return :targetMet*retaddr                                    ...
        label *label385                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label383                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label381                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label379                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label377                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label375                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  843:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  844:  return :targetMet*retaddr                                    ...
        label *label23                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  845:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  846:  op sign *tmp388 :meetTarget:lead 0                           ...
  847:  op add :meetTarget:count :meetTarget:count *tmp388           ...
  848:  op sign *tmp388 :meetTarget:graphite 0                       ...
  849:  op add :meetTarget:count :meetTarget:count *tmp388           ...
  850:  op sign *tmp388 :meetTarget:silicon 0                        ...
  851:  op add :meetTarget:count :meetTarget:count *tmp388           ...
  852:  op sign *tmp388 :meetTarget:titanium 0                       ...
  853:  op add :meetTarget:count :meetTarget:count *tmp388           ...
  854:  op sign *tmp388 :meetTarget:metaglass 0                      ...
  855:  op add :meetTarget:count :meetTarget:count *tmp388           ...
  856:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  857:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  858:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  859:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  860:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  861:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  862:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  863:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  864:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  865:  op add .targetLead :meetTarget:lead .leadSurplus             CoreBuilder.mnd: targetLead = lead + leadSurplus;
  866:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  867:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  868:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  869:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  870:  op add *tmp390 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  871:  write *tmp390 .controller ".pressTarget"                     ...
  872:  op add *tmp391 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  873:  write *tmp391 .controller ".smelterTarget"                   ...
  874:  op add *tmp392 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  875:  write *tmp392 .controller ".kilnTarget"                      ...
  876:  op sign *tmp393 :meetTarget:lead 0                           CoreBuilder.mnd: controller.leadReserve = lead + sign(lead) * 20;
  877:  op mul *tmp394 *tmp393 20                                    ...
  878:  op add *tmp395 :meetTarget:lead *tmp394                      ...
  879:  write *tmp395 .controller ".leadReserve"                     ...
  880:  op sign *tmp396 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  881:  op mul *tmp397 *tmp396 20                                    ...
  882:  op add *tmp398 :meetTarget:silicon *tmp397                   ...
  883:  write *tmp398 .controller ".siliconReserve"                  ...
        label *label397                                              CoreBuilder.mnd: while !targetMet() do
  884:  setaddr :targetMet*retaddr *label400                         ...
  885:  call *label22 *invalid :targetMet*retval                     ...
        label *label400                                              ...
  886:  jump *label399 notEqual :targetMet*retval false              ...
  887:  setaddr :supplyBase*retaddr *label401                        CoreBuilder.mnd: supplyBase();
  888:  call *label21 *invalid :supplyBase*retval                    ...
        label *label401                                              ...
  889:  jump *label397 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label399                                              ...
  890:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label24                                               CoreBuilder.mnd: void log(encodedId)
  891:  read *tmp79 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  892:  op sub *tmp400 *tmp79 1                                      ...
  893:  write *tmp400 bank1 511                                      ...
  894:  op mul :second.2:result @second TIME_COMPRESS                common.mnd: mlog (out result) {
  895:  op floor *tmp404 :second.2:result 0                          CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  896:  op mul *tmp405 *tmp404 1000                                  ...
  897:  op add *tmp406 :log:encodedId *tmp405                        ...
  898:  write *tmp406 bank1 *tmp400                                  ...
  899:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label25                                               CoreBuilder.mnd: void logBlock(block)
  900:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  901:  setaddr :log*retaddr *label405                               ...
  902:  call *label24 *invalid :log*retval                           ...
        label *label405                                              ...
  903:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label26                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  904:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  905:  set :moveTo.1:y :buildBlockAt:y                              ...
  906:  setaddr :moveTo.1*retaddr *label407                          ...
  907:  call *label6 *invalid :moveTo.1*retval                       ...
        label *label407                                              ...
  908:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  909:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  910:  jump *label409 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  911:  jump *label411 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  912:  set :buildBlockAt*retval :buildBlockAt:building              ...
  913:  return :buildBlockAt*retaddr                                 ...
        label *label411                                              ...
  914:  jump *label413 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  915:  set :buildBlockAt*retval null                                ...
  916:  return :buildBlockAt*retaddr                                 ...
        label *label413                                              ...
  917:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  918:  stop                                                         Actions.mnd: stopProcessor();
        label *label409                                              CoreBuilder.mnd: if building != null then
  919:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  920:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label416                                              CoreBuilder.mnd: do
  921:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  922:  jump *label419 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  923:  set :buildBlockAt*retval null                                ...
  924:  return :buildBlockAt*retaddr                                 ...
        label *label419                                              ...
  925:  jump *label416 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  926:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  927:  setaddr :logBlock*retaddr *label421                          ...
  928:  call *label25 *invalid :logBlock*retval                      ...
        label *label421                                              ...
  929:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  930:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label27                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  931:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  932:  set :meetTarget:copper :buildBlock:copper                    ...
  933:  set :meetTarget:lead :buildBlock:lead                        ...
  934:  set :meetTarget:graphite :buildBlock:graphite                ...
  935:  set :meetTarget:silicon :buildBlock:silicon                  ...
  936:  set :meetTarget:titanium :buildBlock:titanium                ...
  937:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  938:  setaddr :meetTarget*retaddr *label423                        ...
  939:  call *label23 *invalid :meetTarget*retval                    ...
        label *label423                                              ...
  940:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  941:  set :buildBlockAt:x :buildBlock:x                            ...
  942:  set :buildBlockAt:y :buildBlock:y                            ...
  943:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  944:  set :buildBlockAt:config :buildBlock:config                  ...
  945:  set :buildBlockAt:skipError false                            ...
  946:  setaddr :buildBlockAt*retaddr *label424                      ...
  947:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label424                                              ...
  948:  set :buildBlock*retval :buildBlockAt*retval                  ...
  949:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label28                                               CoreBuilder.mnd: def findUnits(type, out count)
  950:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  951:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  952:  set :findUnits:firstUnit @unit                               ...
  953:  jump *label426 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label428                                              CoreBuilder.mnd: do
  954:  op add :findUnits:count :findUnits:count 1                   ...
  955:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  956:  jump *label428 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label426                                              CoreBuilder.mnd: if firstUnit != null then
  957:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  958:  return :findUnits*retaddr                                    ...


Performance: parsed in 836 ms, compiled in 511 ms, optimized in 2,722 ms, run in 3 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (15 steps):
The program didn't generate any output.
Execution exception at instruction 37: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
