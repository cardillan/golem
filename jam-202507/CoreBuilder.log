  1395 instructions before optimizations.
    81 instructions eliminated by Temp Variables Elimination (3 passes, 7 iterations).
   106 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\CoreBuilder.mnd:79:9 Variable 'unpackCfg.size' is not used.
C:\Home\golem\jam-202507\Actions.mnd:29:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    54 instructions eliminated by Jump Optimization (5 iterations).
    33 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   155 instructions eliminated by Data Flow Optimization (22 passes, 68 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (30 iterations).
     1 loops unrolled by Loop Unrolling.
    36 instructions added by Function Inlining (30 iterations).
    46 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     3 calls threaded by Jump Threading.
    20 instructions eliminated by Unreachable Code Elimination (2 iterations).
   976 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Unroll iteration loop at CoreBuilder.mnd:197:5               size   -13, benefit     1161.0, efficiency   Infinity (-11 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4396.9, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16422.7, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3691.4, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6562.5, efficiency    437.500
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3281.3, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6562.5, efficiency    145.833
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +181, benefit      301.0, efficiency      1.663
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:459:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2871.1, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5742.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3691.4, efficiency    527.344
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5742.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3281.3, efficiency    546.875
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2362.5, efficiency    295.313
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2067.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2362.5, efficiency    102.717
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1200.0, efficiency    150.000
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1200.0, efficiency     52.174
    Inline function call at CoreBuilder.mnd:160:5                size    +0, benefit     2100.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
  ! Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:155:5                size    +0, benefit     1050.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:92:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:104:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:123:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:126:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:132:17               size    +0, benefit       32.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:135:17               size    +0, benefit       16.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:138:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:141:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:149:9                size    +0, benefit      525.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +157, benefit     3225.0, efficiency     20.541
  ! Inline function call at CoreBuilder.mnd:234:5                size   +91, benefit      259.0, efficiency      2.846
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:338:5                size   +91, benefit       28.0, efficiency      0.308

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4396.9, efficiency   Infinity (-29 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16422.7, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3691.4, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6562.5, efficiency    437.500
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3281.3, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6562.5, efficiency    145.833
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:459:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +157, benefit       75.0, efficiency      0.478
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2871.1, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5742.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3691.4, efficiency    527.344
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5742.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3281.3, efficiency    546.875
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2362.5, efficiency    295.313
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2067.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2362.5, efficiency    102.717
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1200.0, efficiency    150.000
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1200.0, efficiency     52.174
    Inline function call at CoreBuilder.mnd:160:5                size    +0, benefit     2100.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
  ! Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:155:5                size    +0, benefit     1050.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:92:17                size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:104:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:123:17               size    +0, benefit      131.3, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:126:17               size    +0, benefit       65.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:132:17               size    +0, benefit       32.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:135:17               size    +0, benefit       16.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:138:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:141:17               size    +0, benefit        8.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:149:9                size    +0, benefit      525.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +157, benefit     3225.0, efficiency     20.541
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 6):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16422.7, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3691.4, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6562.5, efficiency    437.500
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3281.3, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6562.5, efficiency    145.833
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:459:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2871.1, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5742.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3691.4, efficiency    527.344
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5742.2, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3281.3, efficiency    546.875
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2362.5, efficiency    295.313
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2067.2, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2362.5, efficiency    102.717
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     3000.0, efficiency    375.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     3000.0, efficiency    130.435
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1200.0, efficiency    150.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1200.0, efficiency     52.174
  ! Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
  ! Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
  ! Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
  ! Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
  ! Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
  ! Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
  ! Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
  ! Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
  ! Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
  ! Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +131, benefit     3225.0, efficiency     24.618
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3691.4, efficiency   Infinity (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3281.3, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6562.5, efficiency    160.061
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2657.8, efficiency     78.171
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:459:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3691.4, efficiency    738.281
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3281.3, efficiency    546.875
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
  ! Inline function call at Actions.mnd:124:5                    size   +21, benefit     2362.5, efficiency    112.500
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
  ! Inline function call at Actions.mnd:147:5                    size   +21, benefit     3000.0, efficiency    142.857
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      970.3, efficiency     27.723
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
  ! Inline function call at Actions.mnd:174:5                    size   +21, benefit     1200.0, efficiency     57.143
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
  ! Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +131, benefit     3225.0, efficiency     24.618
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 24):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3281.3, efficiency   Infinity (-7 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6562.5, efficiency    160.061
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2657.8, efficiency     78.171
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:459:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:77:9                     size    +7, benefit     3281.3, efficiency    468.750
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     2362.5, efficiency    112.500
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     3000.0, efficiency    142.857
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      970.3, efficiency     27.723
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
    Inline function call at Actions.mnd:174:5                    size   +21, benefit     1200.0, efficiency     57.143
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
  ! Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +131, benefit     3225.0, efficiency     24.618
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 31):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2657.8, efficiency   Infinity (-5 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2657.8, efficiency     78.171
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:459:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2657.8, efficiency    664.453
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      970.3, efficiency     27.723
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
  ! Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
  ! Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +131, benefit     3225.0, efficiency     24.618
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 36):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1200.0, efficiency   Infinity (-4 instructions)
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +131, benefit       75.0, efficiency      0.573
  ! Inline function call at CoreBuilder.mnd:459:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +131, benefit       75.0, efficiency      0.573
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at CoreBuilder.mnd:165:9                size   +31, benefit     1200.0, efficiency     38.710
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +131, benefit     3225.0, efficiency     24.618
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33632.8, efficiency  33632.813 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4035.9, efficiency    807.188
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      885.9, efficiency    295.313
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2250.0, efficiency    750.000
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      900.0, efficiency    300.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20507.8, efficiency  20507.813 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20507.8, efficiency  20507.813 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     6562.5, efficiency    133.929
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     2362.5, efficiency     94.500
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     3000.0, efficiency    120.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +25, benefit     1200.0, efficiency     48.000
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 37):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13125.0, efficiency   6562.500
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     6562.5, efficiency    128.676
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     6562.5, efficiency   6562.500 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     2362.5, efficiency     90.865
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     3000.0, efficiency    115.385
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +26, benefit     1200.0, efficiency     46.154
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 39):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     6562.5, efficiency   6562.500 (-7 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2657.8, efficiency     73.828
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2362.5, efficiency   2362.500
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1687.5, efficiency     45.608
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     3000.0, efficiency   3000.000
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      970.3, efficiency     26.225
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1200.0, efficiency   1200.000
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8353.1, efficiency   1670.625
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2657.8, efficiency     75.938
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     3000.0, efficiency     96.774
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:459:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3375.0, efficiency   1687.500 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      970.3, efficiency     26.953
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +32, benefit     2400.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +32, benefit      600.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:227:9                size  +160, benefit     3225.0, efficiency     20.156
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 48):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     4978.1, efficiency   1659.375 (-11 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2657.8, efficiency     75.938
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1312.5, efficiency     24.764
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1725.0, efficiency     33.824
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:459:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1687.5, efficiency    843.750
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1940.6, efficiency    970.313
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      970.3, efficiency     26.953
    Inline function call at CoreBuilder.mnd:163:9                size   +13, benefit     1200.0, efficiency     92.308
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1350.0, efficiency    675.000
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:156:5                size    +9, benefit     1050.0, efficiency    116.667
    Inline function call at CoreBuilder.mnd:93:17                size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:101:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:105:17               size   +13, benefit       75.0, efficiency      5.769
    Inline function call at CoreBuilder.mnd:113:17               size   +13, benefit      150.0, efficiency     11.538
    Inline function call at CoreBuilder.mnd:124:17               size    +9, benefit      131.3, efficiency     14.583
    Inline function call at CoreBuilder.mnd:130:17               size    +9, benefit       65.6, efficiency      7.292
    Inline function call at CoreBuilder.mnd:133:17               size    +9, benefit       32.8, efficiency      3.646
    Inline function call at CoreBuilder.mnd:136:17               size    +9, benefit       16.4, efficiency      1.823
    Inline function call at CoreBuilder.mnd:139:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:145:17               size    +9, benefit        8.2, efficiency      0.911
    Inline function call at CoreBuilder.mnd:150:9                size   +30, benefit      600.0, efficiency     20.000
  ! Inline function call at CoreBuilder.mnd:227:9                size  +160, benefit     3225.0, efficiency     20.156
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 59):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1037.1, efficiency   1037.094 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2657.8, efficiency     75.938
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:270:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:459:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:299:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1033.6, efficiency   1033.594
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1687.5, efficiency     46.875
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      970.3, efficiency     26.953
    Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:156:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:150:9                size   +30, benefit      600.0, efficiency     20.000
  ! Inline function call at CoreBuilder.mnd:227:9                size  +158, benefit     3225.0, efficiency     20.411
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6562.5, efficiency    596.591 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2657.8, efficiency     78.171
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     3000.0, efficiency    103.448
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:459:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2362.5, efficiency    393.750
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1687.5, efficiency     48.214
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     3000.0, efficiency    500.000
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      970.3, efficiency     27.723
    Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1200.0, efficiency    200.000
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +30, benefit     2400.0, efficiency     80.000
    Inline function call at CoreBuilder.mnd:156:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:150:9                size   +30, benefit      600.0, efficiency     20.000
  ! Inline function call at CoreBuilder.mnd:227:9                size  +158, benefit     3225.0, efficiency     20.411
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4035.9, efficiency    576.563 (-2 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2657.8, efficiency     71.833
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     3000.0, efficiency     93.750
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:459:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      885.9, efficiency    221.484
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1687.5, efficiency     44.408
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2250.0, efficiency    562.500
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      970.3, efficiency     25.535
    Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      900.0, efficiency    225.000
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +33, benefit     2400.0, efficiency     72.727
    Inline function call at CoreBuilder.mnd:156:5                size    +7, benefit     1050.0, efficiency    150.000
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:150:9                size   +33, benefit      600.0, efficiency     18.182
  ! Inline function call at CoreBuilder.mnd:227:9                size  +161, benefit     3225.0, efficiency     20.031
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 68):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +38, benefit     2657.8, efficiency     69.942
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1312.5, efficiency     32.012
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     3000.0, efficiency     85.714
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +162, benefit       75.0, efficiency      0.463
  ! Inline function call at CoreBuilder.mnd:459:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1687.5, efficiency     43.269
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      970.3, efficiency     24.880
    Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +36, benefit     2400.0, efficiency     66.667
  * Inline function call at CoreBuilder.mnd:156:5                size    +7, benefit     1050.0, efficiency    150.000 (+6 instructions)
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:150:9                size   +36, benefit      600.0, efficiency     16.667
  ! Inline function call at CoreBuilder.mnd:227:9                size  +162, benefit     3225.0, efficiency     19.907
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 62):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6562.5, efficiency    139.628 (+35 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +77, benefit     4007.8, efficiency     52.050
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     3000.0, efficiency     85.714
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +168, benefit       75.0, efficiency      0.446
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +168, benefit       75.0, efficiency      0.446
  ! Inline function call at CoreBuilder.mnd:459:9                size  +168, benefit       75.0, efficiency      0.446
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +168, benefit       75.0, efficiency      0.446
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +168, benefit       75.0, efficiency      0.446
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2362.5, efficiency     98.438
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1687.5, efficiency     43.269
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     3000.0, efficiency    125.000
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      970.3, efficiency     24.880
    Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1200.0, efficiency     50.000
    Inline function call at CoreBuilder.mnd:167:5                size   +36, benefit     2400.0, efficiency     66.667
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1350.0, efficiency     34.615
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:150:9                size   +36, benefit      600.0, efficiency     16.667
  ! Inline function call at CoreBuilder.mnd:227:9                size  +168, benefit     3225.0, efficiency     19.196
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     4007.8, efficiency     34.255
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1725.0, efficiency     40.116
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
    Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +189, benefit       75.0, efficiency      0.397
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +189, benefit       75.0, efficiency      0.397
  ! Inline function call at CoreBuilder.mnd:459:9                size  +189, benefit       75.0, efficiency      0.397
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +189, benefit       75.0, efficiency      0.397
    Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +189, benefit       75.0, efficiency      0.397
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  * Inline function call at CoreBuilder.mnd:163:9                size   +11, benefit     1200.0, efficiency    109.091 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +189, benefit     3225.0, efficiency     17.063
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
    Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
    Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
    Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
    Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
    Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 17):
  * Replicate loop condition at CoreBuilder.mnd:453:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4682.8, efficiency     26.607
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:459:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +199, benefit     3225.0, efficiency     16.206
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 16):
  * Replicate loop condition at CoreBuilder.mnd:458:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4682.8, efficiency     26.607
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:459:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +199, benefit     3225.0, efficiency     16.206
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 15):
  * Replicate loop condition at CoreBuilder.mnd:477:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4682.8, efficiency     26.607
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:459:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +199, benefit     3225.0, efficiency     16.206
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 14):
  * Replicate loop condition at CoreBuilder.mnd:488:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4682.8, efficiency     26.607
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:459:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +199, benefit     3225.0, efficiency     16.206
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 13):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4682.8, efficiency     26.607
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      262.5, efficiency      7.721
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:459:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +199, benefit       75.0, efficiency      0.377
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +199, benefit       75.0, efficiency      0.377
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
    Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
    Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
    Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  * Inline function call at CoreBuilder.mnd:124:17               size    +7, benefit      131.3, efficiency     18.750 (+6 instructions)
    Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +199, benefit     3225.0, efficiency     16.206
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 7):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4851.6, efficiency     20.645
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      131.3, efficiency      4.861
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +205, benefit       75.0, efficiency      0.366
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:459:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +205, benefit       75.0, efficiency      0.366
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +205, benefit       75.0, efficiency      0.366
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  * Inline function call at CoreBuilder.mnd:130:17               size    +7, benefit       65.6, efficiency      9.375 (+6 instructions)
    Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +205, benefit     3225.0, efficiency     15.732
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4935.9, efficiency     16.789
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       65.6, efficiency      3.281
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +161, benefit      301.0, efficiency      1.870
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +21, benefit      351.5, efficiency     16.738
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +62, benefit      132.0, efficiency      2.129
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +211, benefit       75.0, efficiency      0.355
  ! Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +211, benefit       75.0, efficiency      0.355
  ! Inline function call at CoreBuilder.mnd:459:9                size  +211, benefit       75.0, efficiency      0.355
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +211, benefit       75.0, efficiency      0.355
  ! Inline function call at CoreBuilder.mnd:481:28               size   +21, benefit        4.0, efficiency      0.190
  ! Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +211, benefit       75.0, efficiency      0.355
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       84.4, efficiency      1.430
  ! Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +211, benefit     3225.0, efficiency     15.284
  ! Inline function call at CoreBuilder.mnd:234:5                size   +81, benefit      259.0, efficiency      3.198
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +22, benefit      313.5, efficiency     14.250
  ! Inline function call at CoreBuilder.mnd:255:5                size   +21, benefit      120.0, efficiency      5.714
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:338:5                size   +81, benefit       28.0, efficiency      0.346

Pass 2: speed optimization selection (cost limit 7):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4935.9, efficiency     16.789
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +20, benefit       65.6, efficiency      3.281
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:459:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:481:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       84.4, efficiency      1.430
  * Inline function call at CoreBuilder.mnd:133:17               size    +7, benefit       32.8, efficiency      4.688 (+6 instructions)
    Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
    Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
    Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +209, benefit     3225.0, efficiency     15.431
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit      259.0, efficiency      3.238
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:255:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:338:5                size   +80, benefit       28.0, efficiency      0.350

Pass 2: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +353, benefit     4978.1, efficiency     14.102
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +13, benefit       32.8, efficiency      2.524
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:459:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:481:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       84.4, efficiency      1.430
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       42.2, efficiency      0.715
  ! Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +215, benefit     3225.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit      259.0, efficiency      3.238
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:255:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:338:5                size   +80, benefit       28.0, efficiency      0.350

Pass 3: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:226:5            size   +30, benefit     1075.0, efficiency     35.833
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +353, benefit     4978.1, efficiency     14.102
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +13, benefit       32.8, efficiency      2.524
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     3000.0, efficiency     53.571
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      525.0, efficiency     16.406
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:66:1  size   +47, benefit      362.5, efficiency      7.713
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +159, benefit      301.0, efficiency      1.893
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:233:1 size   +20, benefit      351.5, efficiency     17.575
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:238:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:248:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:254:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:258:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:337:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:535:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:549:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:356:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:357:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:358:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:359:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:363:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:364:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:265:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:367:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:368:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:369:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:374:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:385:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:386:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:388:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:401:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:414:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:415:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:416:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:420:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:421:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:422:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:425:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:432:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:433:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:434:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:435:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:438:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:447:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:448:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:449:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:450:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:451:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:454:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:459:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:296:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:302:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:303:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:304:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:305:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:306:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:307:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:308:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:309:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:478:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:481:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:482:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:486:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:489:9                size  +215, benefit       75.0, efficiency      0.349
  ! Inline function call at CoreBuilder.mnd:522:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:523:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:524:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:525:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:528:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:529:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:530:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:531:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1687.5, efficiency     28.602
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      970.3, efficiency     16.446
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      675.0, efficiency     11.441
  ! Inline function call at CoreBuilder.mnd:167:5                size   +57, benefit     2400.0, efficiency     42.105
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1350.0, efficiency     22.881
  ! Inline function call at CoreBuilder.mnd:93:17                size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:101:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at CoreBuilder.mnd:105:17               size   +11, benefit       75.0, efficiency      6.818
  ! Inline function call at CoreBuilder.mnd:113:17               size   +11, benefit      150.0, efficiency     13.636
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      168.8, efficiency      2.860
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       84.4, efficiency      1.430
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit       42.2, efficiency      0.715
  ! Inline function call at CoreBuilder.mnd:136:17               size    +7, benefit       16.4, efficiency      2.344
  ! Inline function call at CoreBuilder.mnd:139:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:145:17               size    +7, benefit        8.2, efficiency      1.172
  ! Inline function call at CoreBuilder.mnd:150:9                size   +57, benefit      600.0, efficiency     10.526
  ! Inline function call at CoreBuilder.mnd:227:9                size  +215, benefit     3225.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:234:5                size   +80, benefit      259.0, efficiency      3.238
  ! Inline function call at CoreBuilder.mnd:241:9                size   +24, benefit       34.0, efficiency      1.417
  ! Inline function call at CoreBuilder.mnd:242:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:250:5                size   +24, benefit      313.5, efficiency     13.063
  ! Inline function call at CoreBuilder.mnd:251:12               size   +21, benefit      313.5, efficiency     14.929
  ! Inline function call at CoreBuilder.mnd:255:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:260:5                size   +24, benefit       15.0, efficiency      0.625
  ! Inline function call at CoreBuilder.mnd:261:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:338:5                size   +80, benefit       28.0, efficiency      0.350

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-79 instructions):
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    47 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    48 label *label48
-    * set *tmp133 :buildBlockFromCfg.1*retval
    49 set :buildBlockFromCfg.1:cfg "m*.<2######$&"
    50 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    51 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
 
    63 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    64 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    65 label *label51
-    * set *tmp136 :buildBlockFromCfg.1*retval
    66 set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
    67 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    68 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
 
    94 setaddr :error*retaddr *label57 (h:*label57)
    95 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
    96 label *label57
-    * set *tmp151 null
    97 jump *label56 always
    98 label *label55
-    * set *tmp151 null
    99 label *label56
   100 write @pneumatic-drill .display ".nextBlock"
   101 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   123 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   124 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   125 label *label60
-    * set *tmp157 :buildBlockFromCfg.1*retval
   126 set :buildBlockFromCfg.1:cfg "W*-'%######$,"
   127 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   128 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   129 label *label61
-    * set *tmp158 :buildBlockFromCfg.1*retval
   130 set .graphiteSurplus 100
   131 set :buildBlockFromCfg:cfg "®-.}U#U####$-"
   132 set :buildBlockFromCfg:config processor2
 
   148 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   149 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
   150 label *label63
-    * set *tmp160 :buildBlockFromCfg.1*retval
   151 set :buildBlockFromCfg.1:cfg "(*###A<###$/"
   152 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   153 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   186 op lessThan *tmp164 *tmp163 300
   187 jump *label73 equal *tmp164 false
   188 jump *label71 always
-    * set *tmp165 null
   189 jump *label74 always
   190 label *label73
-    * set *tmp165 null
   191 label *label74
   192 label *label70
   193 read *tmp101 .controller ".monos"
 
   199 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   200 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
   201 label *label75
-    * set *tmp167 :buildBlockFromCfg.1*retval
   202 set :buildBlockFromCfg.1:cfg "T,*%%######$2"
   203 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   204 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   205 label *label76
-    * set *tmp168 :buildBlockFromCfg.1*retval
   206 set :buildBlockFromCfg.1:cfg "',+_AA#####%3"
   207 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   208 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
 
   214 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   215 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   216 label *label78
-    * set *tmp170 :buildBlockFromCfg.1*retval
   217 set :buildBlockFromCfg.1:cfg "W'*'%######$5"
   218 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   219 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   220 label *label79
-    * set *tmp171 :buildBlockFromCfg.1*retval
   221 set :buildBlockFromCfg.1:cfg "W&*'%######$6"
   222 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   223 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   224 label *label80
-    * set *tmp172 :buildBlockFromCfg.1*retval
   225 set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"
   226 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   227 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
 
   251 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   252 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   253 label *label85
-    * set *tmp177 :buildBlockFromCfg.1*retval
   254 set :buildBlockFromCfg.1:cfg "*%ë#}####&<"
   255 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   256 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   263 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   264 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
   265 label *label87
-    * set *tmp179 :buildBlockFromCfg.1*retval
   266 setaddr :buildUnits*retaddr *label88 (h:*label88)
   267 call *label39 *invalid :buildUnits*retval (m:*label88) (h:*label88)
   268 label *label88
 
   282 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   283 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   284 label *label91
-    * set *tmp181 :buildBlockFromCfg.1*retval
   285 set :buildBlockFromCfg.1:cfg "T-)%%######$C"
   286 setaddr :buildBlockFromCfg.1*retaddr *label92 (h:*label92)
   287 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label92) (h:*label92)
   288 label *label92
-    * set *tmp182 :buildBlockFromCfg.1*retval
   289 set :buildBlockFromCfg:cfg "--###A<###$D"
   290 set :buildBlockFromCfg:config @sand
   291 setaddr :buildBlockFromCfg*retaddr *label93 (h:*label93)
   292 call *label36 *invalid :buildBlockFromCfg*retval (m:*label93) (h:*label93)
   293 label *label93
-    * set *tmp183 :buildBlockFromCfg*retval
   294 setaddr :buildUnits*retaddr *label94 (h:*label94)
   295 call *label39 *invalid :buildUnits*retval (m:*label94) (h:*label94)
   296 label *label94
 
   376 setaddr :error*retaddr *label113 (h:*label113)
   377 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
   378 label *label113
-    * set *tmp208 null
   379 jump *label112 always
   380 label *label111
-    * set *tmp208 null
   381 label *label112
   382 write @laser-drill .blockBuilder ":buildBlockAt:block"
   383 read *tmp56 .oreLocator ".drillX"
 
   403 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   404 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   405 label *label115
-    * set *tmp217 :buildRemoteBlock*retval
   406 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
   407 read *tmp62 .oreLocator ".water2X"
   408 set :buildRemoteBlock:x *tmp62
 
   411 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   412 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   413 label *label116
-    * set *tmp218 :buildRemoteBlock*retval
   414 set :buildRemoteBlock:cfg "o%+FK<A####%7"
   415 read *tmp64 .oreLocator ".generatorX"
   416 set :buildRemoteBlock:x *tmp64
 
   429 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   430 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   431 label *label118
-    * set *tmp220 :buildRemoteBlock*retval
   432 set :buildRemoteBlock:cfg "g)'%)######$."
   433 read *tmp68 .oreLocator ".node2X"
   434 set :buildRemoteBlock:x *tmp68
 
   437 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   438 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   439 label *label119
-    * set *tmp221 :buildRemoteBlock*retval
   440 set :buildRemoteBlock:cfg "r**#-#+####$?"
   441 read *tmp70 .oreLocator ".panelX"
   442 set :buildRemoteBlock:x *tmp70
 
   445 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   446 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   447 label *label120
-    * set *tmp222 :buildRemoteBlock*retval
   448 set :buildRemoteBlock:cfg "k*/(7######$$"
   449 read *tmp72 .oreLocator ".batteryX"
   450 set :buildRemoteBlock:x *tmp72
 
   453 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   454 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   455 label *label121
-    * set *tmp223 :buildRemoteBlock*retval
   456 set :buildRemoteBlock:cfg "**#######%@"
   457 read *tmp60 .oreLocator ".containerX"
   458 set :buildRemoteBlock:x *tmp60
 
   466 op equal *tmp225 .thoriumContainer null
   467 jump *label123 equal *tmp225 false
   468 set .thoriumContainer .thoriumDrill
-    * set *tmp226 .thoriumContainer
   469 jump *label124 always
   470 label *label123
-    * set *tmp226 null
   471 label *label124
   472 write .thoriumDrill .display ".thoriumDrill"
   473 write .thoriumContainer .display ".thoriumContainer"
 
   505 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   506 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
   507 label *label132
-    * set *tmp231 :buildBlockFromCfg.1*retval
   508 set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(G"
   509 setaddr :buildBlockFromCfg.1*retaddr *label134 (h:*label134)
   510 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label134) (h:*label134)
 
   635 op notEqual *tmp248 *tmp247 null
   636 jump *label169 equal *tmp248 false
   637 ucontrol itemDrop @air 1000
-    * set *tmp249 null
   638 jump *label170 always
   639 label *label169
-    * set *tmp249 null
   640 label *label170
   641 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   642 label *label167
 
   695 op greaterThan *tmp263 *tmp261 *tmp262
   696 jump *label182 notEqual *tmp263 false
   697 label *label184
-    * set *tmp258 null
   698 jump *label180 always
   699 label *label179
   700 label *label185
 
   705 label *label186
   706 jump *label185 always
   707 label *label187
-    * set *tmp258 null
   708 label *label180
   709 set :transportStatus:target 0
   710 set :transportStatus:item null
 
   722 setaddr :error*retaddr *label192 (h:*label192)
   723 call *label13 *invalid :error*retval (m:*label192) (h:*label192)
   724 label *label192
-    * set *tmp269 null
   725 jump *label191 always
   726 label *label190
-    * set *tmp269 null
   727 label *label191
   728 label *label189
   729 return :locateOre*retaddr
 
   753 setaddr :dropAll*retaddr *label199 (h:*label199)
   754 call *label17 *invalid :dropAll*retval (m:*label199) (h:*label199)
   755 label *label199
-    * set *tmp273 null
   756 jump *label198 always
   757 label *label197
-    * set *tmp273 null
   758 label *label198
   759 set :status3:text "Mining..."
   760 setaddr :status3*retaddr *label200 (h:*label200)
 
   770 op land *tmp278 *tmp276 *tmp277
   771 jump *label204 equal *tmp278 false
   772 jump *label203 always
-    * set *tmp279 null
   773 jump *label205 always
   774 label *label204
-    * set *tmp279 null
   775 label *label205
   776 ucontrol mine :mineOre:x :mineOre:y
   777 op greaterThan *tmp280 @second :mineOre:stop
   778 jump *label206 equal *tmp280 false
   779 jump *label203 always
-    * set *tmp281 null
   780 jump *label207 always
   781 label *label206
-    * set *tmp281 null
   782 label *label207
   783 label *label202
   784 sensor *tmp282 @unit @totalItems
 
   844 op land *tmp292 *tmp290 *tmp291
   845 jump *label220 equal *tmp292 false
   846 ucontrol itemDrop @air 1000
-    * set *tmp293 null
   847 jump *label221 always
   848 label *label220
-    * set *tmp293 null
   849 label *label221
   850 label *label218
   851 sensor *tmp294 @unit :fetchBlock:item
 
   882 setaddr :mineOre*retaddr *label227 (h:*label227)
   883 call *label21 *invalid :mineOre*retval (m:*label227) (h:*label227)
   884 label *label227
-    * set *tmp302 null
   885 jump *label226 always
   886 label *label225
-    * set *tmp302 null
   887 label *label226
   888 label *label223
   889 return :supplyBlock*retaddr
 
   919 op land *tmp308 *tmp306 *tmp307
   920 jump *label236 equal *tmp308 false
   921 ucontrol itemDrop @air 1000
-    * set *tmp309 null
   922 jump *label237 always
   923 label *label236
-    * set *tmp309 null
   924 label *label237
   925 label *label234
   926 sensor *tmp310 @unit :supplyBlockFromCore:item
 
  1001 op add :unpackCfg:index :unpackCfg:index 1
  1002 read *tmp351 :unpackCfg:cfg *tmp350
  1003 op sub *tmp352 *tmp351 35
-    * set :unpackCfg:size *tmp352
  1004 set *tmp353 :unpackCfg:index
  1005 op add :unpackCfg:index :unpackCfg:index 1
  1006 read *tmp354 :unpackCfg:cfg *tmp353
 
  1027 setaddr :supplyBlock*retaddr *label247 (h:*label247)
  1028 call *label24 *invalid :supplyBlock*retval (m:*label247) (h:*label247)
  1029 label *label247
-    * set *tmp362 null
  1030 jump *label246 always
  1031 label *label245
  1032 set :supplyBlockFromCore:target .thoriumGenerator
 
  1034 setaddr :supplyBlockFromCore*retaddr *label248 (h:*label248)
  1035 call *label25 *invalid :supplyBlockFromCore*retval (m:*label248) (h:*label248)
  1036 label *label248
-    * set *tmp362 null
  1037 label *label246
  1038 set :fetchBlock:block .thoriumContainer
  1039 set :fetchBlock:item @thorium
 
  1041 call *label23 *invalid :fetchBlock*retval (m:*label249) (h:*label249)
  1042 label *label249
  1043 label *label243
-    * set *tmp359 null
  1044 jump *label242 always
  1045 label *label241
  1046 read *tmp101 .controller ".monos"
 
  1082 label *label260
  1083 set *tmp372 null
  1084 label *label261
-    * set *tmp369 *tmp372
  1085 jump *label259 always
  1086 label *label258
-    * set *tmp369 null
  1087 label *label259
  1088 sensor *tmp373 .core @silicon
  1089 op lessThan *tmp374 *tmp373 .targetSilicon
 
  1124 label *label271
  1125 set *tmp378 *tmp381
  1126 label *label267
-    * set *tmp375 *tmp378
  1127 jump *label265 always
  1128 label *label264
-    * set *tmp375 null
  1129 label *label265
  1130 sensor *tmp382 .battery @totalPower
  1131 op lessThan *tmp383 *tmp382 .powerTarget
 
  1153 label *label274
  1154 set *tmp384 null
  1155 label *label275
-    * set *tmp366 *tmp384
  1156 jump *label257 always
  1157 label *label256
-    * set *tmp366 null
  1158 label *label257
  1159 sensor *tmp388 .core @titanium
  1160 op lessThan *tmp389 *tmp388 .targetTitanium
 
  1291 label *label284
  1292 set *tmp398 null
  1293 label *label285
-    * set *tmp396 *tmp398
  1294 jump *label283 always
  1295 label *label282
  1296 set :status1:text "Goal 11: Fetching titanium"
 
  1302 setaddr :fetchBlock*retaddr *label313 (h:*label313)
  1303 call *label23 *invalid :fetchBlock*retval (m:*label313) (h:*label313)
  1304 label *label313
-    * set *tmp396 null
  1305 label *label283
  1306 label *label255
  1307 set *tmp364 null
  1308 label *label251
-    * set *tmp359 *tmp364
  1309 label *label242
  1310 label *label240
  1311 return :supplyBase*retaddr
 
  1387 jump *label329 equal *tmp439 false
  1388 set *tmp437 false
  1389 jump *label328 always
-    * set *tmp440 null
  1390 jump *label330 always
  1391 label *label329
-    * set *tmp440 null
  1392 label *label330
  1393 sensor *tmp441 .core @lead
  1394 op lessThan *tmp442 *tmp441 .targetLead
  1395 jump *label331 equal *tmp442 false
  1396 set *tmp437 false
  1397 jump *label328 always
-    * set *tmp443 null
  1398 jump *label332 always
  1399 label *label331
-    * set *tmp443 null
  1400 label *label332
  1401 sensor *tmp444 .core @graphite
  1402 op lessThan *tmp445 *tmp444 .targetGraphite
  1403 jump *label333 equal *tmp445 false
  1404 set *tmp437 false
  1405 jump *label328 always
-    * set *tmp446 null
  1406 jump *label334 always
  1407 label *label333
-    * set *tmp446 null
  1408 label *label334
  1409 sensor *tmp447 .core @silicon
  1410 op lessThan *tmp448 *tmp447 .targetSilicon
  1411 jump *label335 equal *tmp448 false
  1412 set *tmp437 false
  1413 jump *label328 always
-    * set *tmp449 null
  1414 jump *label336 always
  1415 label *label335
-    * set *tmp449 null
  1416 label *label336
  1417 sensor *tmp450 .core @titanium
  1418 op lessThan *tmp451 *tmp450 .targetTitanium
  1419 jump *label337 equal *tmp451 false
  1420 set *tmp437 false
  1421 jump *label328 always
-    * set *tmp452 null
  1422 jump *label338 always
  1423 label *label337
-    * set *tmp452 null
  1424 label *label338
  1425 sensor *tmp453 .core @metaglass
  1426 op lessThan *tmp454 *tmp453 .targetMetaglass
  1427 jump *label339 equal *tmp454 false
  1428 set *tmp437 false
  1429 jump *label328 always
-    * set *tmp455 null
  1430 jump *label340 always
  1431 label *label339
-    * set *tmp455 null
  1432 label *label340
  1433 sensor *tmp456 .core @thorium
  1434 op lessThan *tmp457 *tmp456 .targetThorium
  1435 jump *label341 equal *tmp457 false
  1436 set *tmp437 false
  1437 jump *label328 always
-    * set *tmp458 null
  1438 jump *label342 always
  1439 label *label341
-    * set *tmp458 null
  1440 label *label342
  1441 set *tmp437 true
  1442 jump *label328 always
 
  1520 label *label351
  1521 set :buildRemoteBlock*retval :buildBlock*retval
  1522 jump *label347 always
-    * set *tmp470 null
  1523 jump *label349 always
  1524 label *label348
-    * set *tmp470 null
  1525 label *label349
  1526 set :buildRemoteBlock*retval false
  1527 jump *label347 always
 
  1660 sensor *tmp478 @unit @mining
  1661 jump *label373 equal *tmp478 false
  1662 ucontrol stop
-    * set *tmp479 null
  1663 jump *label374 always
  1664 label *label373
-    * set *tmp479 null
  1665 label *label374
  1666 ubind :lineUpUnits:unit
  1667 label *label371

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-11 instructions):
 
  1000 set *tmp350 :unpackCfg:index
  1001 op add :unpackCfg:index :unpackCfg:index 1
  1002 read *tmp351 :unpackCfg:cfg *tmp350
-    * op sub *tmp352 *tmp351 35
  1003 set *tmp353 :unpackCfg:index
  1004 op add :unpackCfg:index :unpackCfg:index 1
  1005 read *tmp354 :unpackCfg:cfg *tmp353
 
  1054 call *label22 *invalid :mineOre.1*retval (m:*label254) (h:*label254)
  1055 label *label254
  1056 label *label252
-    * set *tmp364 null
  1057 jump *label251 always
  1058 label *label250
  1059 set :supplyBase0:supplied false
 
  1075 call *label24 *invalid :supplyBlock*retval (m:*label263) (h:*label263)
  1076 label *label263
  1077 set :supplyBase0:supplied true
-    * set *tmp372 :supplyBase0:supplied
  1078 jump *label261 always
  1079 label *label260
-    * set *tmp372 null
  1080 label *label261
  1081 jump *label259 always
  1082 label *label258
 
  1097 call *label24 *invalid :supplyBlock*retval (m:*label269) (h:*label269)
  1098 label *label269
  1099 set :supplyBase0:supplied true
-    * set *tmp378 :supplyBase0:supplied
  1100 jump *label267 always
  1101 label *label266
  1102 sensor *tmp379 .smelter @sand
 
  1117 label *label270
  1118 set *tmp381 null
  1119 label *label271
-    * set *tmp378 *tmp381
  1120 label *label267
  1121 jump *label265 always
  1122 label *label264
 
  1142 label *label276
  1143 set *tmp387 null
  1144 label *label277
-    * set *tmp384 *tmp387
  1145 jump *label275 always
  1146 label *label274
-    * set *tmp384 null
  1147 label *label275
  1148 jump *label257 always
  1149 label *label256
 
  1278 label *label291
  1279 set *tmp402 *tmp405
  1280 label *label287
-    * set *tmp398 *tmp402
  1281 jump *label285 always
  1282 label *label284
-    * set *tmp398 null
  1283 label *label285
  1284 jump *label283 always
  1285 label *label282
 
  1294 label *label313
  1295 label *label283
  1296 label *label255
-    * set *tmp364 null
  1297 label *label251
  1298 label *label242
  1299 label *label240

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-7 instructions):
 
   999 set :unpackCfg:rotation *tmp349
  1000 set *tmp350 :unpackCfg:index
  1001 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp351 :unpackCfg:cfg *tmp350
  1002 set *tmp353 :unpackCfg:index
  1003 op add :unpackCfg:index :unpackCfg:index 1
  1004 read *tmp354 :unpackCfg:cfg *tmp353
 
  1111 call *label24 *invalid :supplyBlock*retval (m:*label273) (h:*label273)
  1112 label *label273
  1113 set :supplyBase0:supplied true
-    * set *tmp381 :supplyBase0:supplied
  1114 jump *label271 always
  1115 label *label270
-    * set *tmp381 null
  1116 label *label271
  1117 label *label267
  1118 jump *label265 always
 
  1134 call *label24 *invalid :supplyBlock*retval (m:*label279) (h:*label279)
  1135 label *label279
  1136 set :supplyBase0:supplied true
-    * set *tmp387 :supplyBase0:supplied
  1137 jump *label277 always
  1138 label *label276
-    * set *tmp387 null
  1139 label *label277
  1140 jump *label275 always
  1141 label *label274
 
  1172 setaddr :mineOre.1*retaddr *label289 (h:*label289)
  1173 call *label22 *invalid :mineOre.1*retval (m:*label289) (h:*label289)
  1174 label *label289
-    * set *tmp402 null
  1175 jump *label287 always
  1176 label *label286
  1177 sensor *tmp403 .core @silicon
 
  1270 label *label297
  1271 set *tmp405 *tmp412
  1272 label *label291
-    * set *tmp402 *tmp405
  1273 label *label287
  1274 jump *label285 always
  1275 label *label284

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-3 instructions):
 
   997 read *tmp348 :unpackCfg:cfg *tmp347
   998 op sub *tmp349 *tmp348 35
   999 set :unpackCfg:rotation *tmp349
-    * set *tmp350 :unpackCfg:index
  1000 op add :unpackCfg:index :unpackCfg:index 1
  1001 set *tmp353 :unpackCfg:index
  1002 op add :unpackCfg:index :unpackCfg:index 1
 
  1196 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1197 call *label22 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1198 label *label295
-    * set *tmp405 null
  1199 jump *label291 always
  1200 label *label290
  1201 sensor *tmp410 .core @copper
 
  1266 label *label301
  1267 set *tmp412 *tmp415
  1268 label *label297
-    * set *tmp405 *tmp412
  1269 label *label291
  1270 label *label287
  1271 jump *label285 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1209 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1210 call *label22 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
  1211 label *label299
-    * set *tmp412 null
  1212 jump *label297 always
  1213 label *label296
  1214 sensor *tmp413 .core @lead
 
  1263 label *label305
  1264 set *tmp415 *tmp418
  1265 label *label301
-    * set *tmp412 *tmp415
  1266 label *label297
  1267 label *label291
  1268 label *label287

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1222 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1223 call *label22 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
  1224 label *label303
-    * set *tmp415 null
  1225 jump *label301 always
  1226 label *label300
  1227 sensor *tmp416 .core @metaglass
 
  1260 label *label311
  1261 set *tmp418 null
  1262 label *label305
-    * set *tmp415 *tmp418
  1263 label *label301
  1264 label *label297
  1265 label *label291

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1235 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1236 call *label22 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1237 label *label307
-    * set *tmp418 null
  1238 jump *label305 always
  1239 label *label304
  1240 set :status1:text "Goal 10: supplying base"
 
  1257 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1258 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
  1259 label *label311
-    * set *tmp418 null
  1260 label *label305
  1261 label *label301
  1262 label *label297

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-80 instructions):
 
    22 write 511 bank1 511
    23 label *label43
    24 ubind @poly
-    * set *tmp127 @unit
-    * set .builder *tmp127
-    * ulocate building core false @copper .coreX .coreY *tmp129 *tmp128
-    * set .core *tmp128
+   25 set .builder @unit
+   26 ulocate building core false @copper .coreX .coreY *tmp129 .core
    27 label *label44
    28 op equal *tmp130 .core null
    29 jump *label43 notEqual *tmp130 false
 
    32 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    33 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
    34 label *label46
-    * set *tmp131 :buildBlockFromCfg.1*retval
-    * set .press *tmp131
+   35 set .press :buildBlockFromCfg.1*retval
    36 set :buildBlockFromCfg.1:cfg "k*/(7######$$"
    37 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    38 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    39 label *label47
-    * set *tmp132 :buildBlockFromCfg.1*retval
-    * set .battery *tmp132
+   40 set .battery :buildBlockFromCfg.1*retval
    41 set :buildBlockFromCfg.1:cfg "k+/(7######$%"
    42 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    43 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    47 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    48 label *label49
-    * set *tmp134 :buildBlockFromCfg.1*retval
-    * set .generator *tmp134
+   49 set .generator :buildBlockFromCfg.1*retval
    50 set .powerTarget 400
    51 set :buildBlockFromCfg.1:cfg "%+-A<######%'"
    52 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    53 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    54 label *label50
-    * set *tmp135 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp135
+   55 set .smelter :buildBlockFromCfg.1*retval
    56 set :buildBlockFromCfg.1:cfg "T+,%%######$("
    57 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    58 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
 
    76 wait 1e-15
    77 read *tmp148 .oreLocator ":findDrillLocation*finished"
    78 jump *label54 equal *tmp148 false
-    * read *tmp145 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp145
-    * read *tmp146 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp146
-    * read *tmp149 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp149
+   79 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   80 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   81 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    82 op equal *tmp150 :buildFirstTitaniumDrill:result false
    83 jump *label55 equal *tmp150 false
    84 set :error:error "Cannot locate spot for titanium drill"
 
    97 wait 1e-15
    98 read *tmp154 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
    99 jump *label58 equal *tmp154 false
-    * read *tmp155 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp137 *tmp155
+  100 read *tmp137 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
   101 jump *label52 always
   102 set *tmp137 null
   103 label *label52
 
   107 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   108 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
   109 label *label59
-    * set *tmp156 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp156
+  110 set .unloader1 :buildBlockFromCfg.1*retval
   111 set :buildBlockFromCfg.1:cfg "T),%%######$+"
   112 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   113 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   122 setaddr :buildBlockFromCfg*retaddr *label62 (h:*label62)
   123 call *label36 *invalid :buildBlockFromCfg*retval (m:*label62) (h:*label62)
   124 label *label62
-    * set *tmp159 :buildBlockFromCfg*retval
-    * set .controller *tmp159
+  125 set .controller :buildBlockFromCfg*retval
   126 write processor6 .controller ".timer"
   127 write .display .controller ".display"
   128 write .core .controller ".core"
 
   140 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   141 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   142 label *label64
-    * set *tmp161 :buildBlockFromCfg.1*retval
-    * write *tmp161 .controller ".unloader2"
+  143 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   144 set :buildBlockFromCfg.1:cfg "'(_i#####&&0"
   145 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   146 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   147 label *label65
-    * set *tmp162 :buildBlockFromCfg.1*retval
-    * set :factory *tmp162
+  148 set :factory :buildBlockFromCfg.1*retval
   149 write :factory .controller ".factory"
   150 write :factory .display ".airFactory"
   151 set :setFlareTarget:target 1
 
   193 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   194 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   195 label *label77
-    * set *tmp169 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp169
+  196 set .kiln :buildBlockFromCfg.1*retval
   197 write .kiln .controller ".kiln"
   198 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   199 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
 
   211 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   212 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   213 label *label81
-    * set *tmp173 :buildBlockFromCfg.1*retval
-    * write *tmp173 .controller ".generator2"
+  214 write :buildBlockFromCfg.1*retval .controller ".generator2"
   215 set :buildBlockFromCfg.1:cfg "$(.#U<###&8"
   216 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   217 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   218 label *label82
-    * set *tmp174 :buildBlockFromCfg.1*retval
-    * write *tmp174 .controller ".multipress"
+  219 write :buildBlockFromCfg.1*retval .controller ".multipress"
   220 set .graphiteSurplus 150
   221 set :buildBlockFromCfg.1:cfg " '%-#2#####&9"
   222 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   223 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   224 label *label83
-    * set *tmp175 :buildBlockFromCfg.1*retval
-    * write *tmp175 .controller ".payloadRouter"
+  225 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   226 set :buildBlockFromCfg.1:cfg "*(###A<###$:"
   227 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   228 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   229 label *label84
-    * set *tmp176 :buildBlockFromCfg.1*retval
-    * write *tmp176 .controller ".unloader4"
+  230 write :buildBlockFromCfg.1*retval .controller ".unloader4"
   231 set :buildBlockFromCfg.1:cfg "X*''%######$;"
   232 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   233 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
 
   236 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   237 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   238 label *label86
-    * set *tmp178 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp178
+  239 set :reconstructor :buildBlockFromCfg.1*retval
   240 write :reconstructor .controller ".reconstructor"
   241 write :reconstructor .display ".reconstructor"
   242 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&="
 
   256 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   257 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
   258 label *label90
-    * set *tmp180 :buildBlockFromCfg.1*retval
-    * write *tmp180 .controller ".smelter2"
+  259 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   260 set :buildBlockFromCfg.1:cfg "T-*%%######$B"
   261 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   262 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
 
   305 write @ore-titanium .display ".nextBlock"
   306 wait 0.000000001
   307 ubind @flare
-    * read *tmp54 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp54
+  308 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   309 write .coreX .oreLocator ":findDrillLocation:x"
   310 write .coreY .oreLocator ":findDrillLocation:y"
   311 write @unit .oreLocator ":findDrillLocation:unit"
 
   346 wait 1e-15
   347 read *tmp205 .oreLocator ":layoutThoriumDrill*finished"
   348 jump *label110 equal *tmp205 false
-    * read *tmp206 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp206
+  349 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   350 op equal *tmp207 :buildThoriumDrill:result false
   351 jump *label111 equal *tmp207 false
   352 set :error:error "Cannot locate spot for thorium drill"
 
   370 wait 1e-15
   371 read *tmp215 .blockBuilder ":buildBlockAt*finished"
   372 jump *label114 equal *tmp215 false
-    * read *tmp216 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp216
+  373 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   374 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read *tmp58 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp59
+  375 read :buildRemoteBlock:x .oreLocator ".water1X"
+  376 read :buildRemoteBlock:y .oreLocator ".water1Y"
   377 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   378 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   379 label *label115
   380 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read *tmp62 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp63
+  381 read :buildRemoteBlock:x .oreLocator ".water2X"
+  382 read :buildRemoteBlock:y .oreLocator ".water2Y"
   383 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   384 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   385 label *label116
   386 set :buildRemoteBlock:cfg "o%+FK<A####%7"
-    * read *tmp64 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp65
+  387 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  388 read :buildRemoteBlock:y .oreLocator ".generatorY"
   389 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   390 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   391 label *label117
-    * set *tmp219 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp219
+  392 set .thoriumGenerator :buildRemoteBlock*retval
   393 set :buildRemoteBlock:cfg "g)'%)######$."
-    * read *tmp66 .oreLocator ".node1X"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".node1Y"
-    * set :buildRemoteBlock:y *tmp67
+  394 read :buildRemoteBlock:x .oreLocator ".node1X"
+  395 read :buildRemoteBlock:y .oreLocator ".node1Y"
   396 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   397 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   398 label *label118
   399 set :buildRemoteBlock:cfg "g)'%)######$."
-    * read *tmp68 .oreLocator ".node2X"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 .oreLocator ".node2Y"
-    * set :buildRemoteBlock:y *tmp69
+  400 read :buildRemoteBlock:x .oreLocator ".node2X"
+  401 read :buildRemoteBlock:y .oreLocator ".node2Y"
   402 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   403 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   404 label *label119
   405 set :buildRemoteBlock:cfg "r**#-#+####$?"
-    * read *tmp70 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp70
-    * read *tmp71 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp71
+  406 read :buildRemoteBlock:x .oreLocator ".panelX"
+  407 read :buildRemoteBlock:y .oreLocator ".panelY"
   408 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   409 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   410 label *label120
   411 set :buildRemoteBlock:cfg "k*/(7######$$"
-    * read *tmp72 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp72
-    * read *tmp73 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp73
+  412 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  413 read :buildRemoteBlock:y .oreLocator ".batteryY"
   414 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   415 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   416 label *label121
   417 set :buildRemoteBlock:cfg "**#######%@"
-    * read *tmp60 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp61
+  418 read :buildRemoteBlock:x .oreLocator ".containerX"
+  419 read :buildRemoteBlock:y .oreLocator ".containerY"
   420 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   421 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   422 label *label122
-    * set *tmp224 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp224
+  423 set .thoriumContainer :buildRemoteBlock*retval
   424 op equal *tmp225 .thoriumContainer null
   425 jump *label123 equal *tmp225 false
   426 set .thoriumContainer .thoriumDrill
 
   457 setaddr :buildBlockFromCfg*retaddr *label131 (h:*label131)
   458 call *label36 *invalid :buildBlockFromCfg*retval (m:*label131) (h:*label131)
   459 label *label131
-    * set *tmp230 :buildBlockFromCfg*retval
-    * write *tmp230 .controller ".unloader6"
+  460 write :buildBlockFromCfg*retval .controller ".unloader6"
   461 set :buildBlockFromCfg.1:cfg "X+''%######$F"
   462 setaddr :buildBlockFromCfg.1*retaddr *label132 (h:*label132)
   463 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label132) (h:*label132)
 
   507 label *label144
   508 label *label145
   509 jump *label147 equal true false
-    * op sub *tmp238 @thisy 6
-    * set :lineUpUnits:y *tmp238
+  510 op sub :lineUpUnits:y @thisy 6
   511 set :lineUpUnits:unit @mega
   512 setaddr :lineUpUnits*retaddr *label148 (h:*label148)
   513 call *label41 *invalid :lineUpUnits*retval (m:*label148) (h:*label148)
   514 label *label148
-    * op sub *tmp239 @thisy 10
-    * set :lineUpUnits:y *tmp239
+  515 op sub :lineUpUnits:y @thisy 10
   516 set :lineUpUnits:unit @poly
   517 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   518 call *label41 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   519 label *label149
-    * op sub *tmp240 @thisy 14
-    * set :lineUpUnits:y *tmp240
+  520 op sub :lineUpUnits:y @thisy 14
   521 set :lineUpUnits:unit @mono
   522 setaddr :lineUpUnits*retaddr *label150 (h:*label150)
   523 call *label41 *invalid :lineUpUnits*retval (m:*label150) (h:*label150)
   524 label *label150
-    * op sub *tmp241 @thisy 18
-    * set :lineUpUnits:y *tmp241
+  525 op sub :lineUpUnits:y @thisy 18
   526 set :lineUpUnits:unit @flare
   527 setaddr :lineUpUnits*retaddr *label151 (h:*label151)
   528 call *label41 *invalid :lineUpUnits*retval (m:*label151) (h:*label151)
 
   637 setaddr :moveToBlock*retaddr *label181 (h:*label181)
   638 call *label18 *invalid :moveToBlock*retval (m:*label181) (h:*label181)
   639 label *label181
-    * sensor *tmp259 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp259
+  640 sensor :depositItems:cap :depositItems:block @itemCapacity
   641 label *label182
   642 ucontrol itemDrop :depositItems:block 30
   643 label *label183
 
   681 return :locateOre*retaddr
   682 end
   683 label *label21
-    * op min *tmp270 :mineOre:amount 30
-    * set :mineOre:amount *tmp270
+  684 op min :mineOre:amount :mineOre:amount 30
   685 set :transportStatus:target :mineOre:amount
   686 set :transportStatus:item :mineOre:ore
   687 setaddr :transportStatus*retaddr *label194 (h:*label194)
 
   711 setaddr :status3*retaddr *label200 (h:*label200)
   712 call *label11 *invalid :status3*retval (m:*label200) (h:*label200)
   713 label *label200
-    * op add *tmp274 @second 10
-    * set :mineOre:stop *tmp274
+  714 op add :mineOre:stop @second 10
   715 label *label201
-    * sensor *tmp275 @unit @firstItem
-    * set :mineOre:item *tmp275
+  716 sensor :mineOre:item @unit @firstItem
   717 op notEqual *tmp276 :mineOre:item null
   718 op notEqual *tmp277 :mineOre:item :mineOre:ore
   719 op land *tmp278 *tmp276 *tmp277
 
   750 setaddr :status2*retaddr *label210 (h:*label210)
   751 call *label10 *invalid :status2*retval (m:*label210) (h:*label210)
   752 label *label210
-    * set *tmp284 :mineOre.1:ore
-    * set :mineOre:ore *tmp284
+  753 set :mineOre:ore :mineOre.1:ore
   754 set :mineOre:amount 30
   755 set :mineOre:block .core
   756 setaddr :mineOre*retaddr *label211 (h:*label211)
 
   761 end
   762 label *label23
   763 sensor *tmp285 :fetchBlock:block @itemCapacity
-    * op min *tmp286 *tmp285 30
-    * set :transportStatus:target *tmp286
+  764 op min :transportStatus:target *tmp285 30
   765 set :transportStatus:item :fetchBlock:item
   766 setaddr :transportStatus*retaddr *label213 (h:*label213)
   767 call *label12 *invalid :transportStatus*retval (m:*label213) (h:*label213)
 
   784 label *label216
   785 label *label217
   786 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp289 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp289
+  787 sensor :fetchBlock:unitItem @unit @firstItem
   788 op notEqual *tmp290 :fetchBlock:unitItem null
   789 op notEqual *tmp291 :fetchBlock:unitItem :fetchBlock:item
   790 op land *tmp292 *tmp290 *tmp291
 
   815 setaddr :status2*retaddr *label224 (h:*label224)
   816 call *label10 *invalid :status2*retval (m:*label224) (h:*label224)
   817 label *label224
-    * sensor *tmp298 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp298
+  818 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   819 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp300 :supplyBlock:blockCapacity *tmp299
-    * set :supplyBlock:missing *tmp300
+  820 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
   821 op greaterThan *tmp301 :supplyBlock:missing 0
   822 jump *label225 equal *tmp301 false
   823 set :mineOre:ore :supplyBlock:ore
 
   834 end
   835 label *label25
   836 sensor *tmp303 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp304 *tmp303 30
-    * set :transportStatus:target *tmp304
+  837 op min :transportStatus:target *tmp303 30
   838 set :transportStatus:item :supplyBlockFromCore:item
   839 setaddr :transportStatus*retaddr *label229 (h:*label229)
   840 call *label12 *invalid :transportStatus*retval (m:*label229) (h:*label229)
 
   855 label *label232
   856 label *label233
   857 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp305 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp305
+  858 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   859 op notEqual *tmp306 :supplyBlockFromCore:unitItem null
   860 op notEqual *tmp307 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   861 op land *tmp308 *tmp306 *tmp307
 
   885 op add :unpackCfg:index :unpackCfg:index 1
   886 read *tmp315 :unpackCfg:cfg *tmp314
   887 op sub *tmp316 *tmp315 35
-    * lookup block *tmp317 *tmp316
-    * set :unpackCfg:type *tmp317
+  888 lookup block :unpackCfg:type *tmp316
   889 set *tmp318 :unpackCfg:index
   890 op add :unpackCfg:index :unpackCfg:index 1
   891 read *tmp319 :unpackCfg:cfg *tmp318
   892 op sub *tmp320 *tmp319 35
-    * op sub *tmp321 *tmp320 7
-    * set :unpackCfg:x *tmp321
+  893 op sub :unpackCfg:x *tmp320 7
   894 set *tmp322 :unpackCfg:index
   895 op add :unpackCfg:index :unpackCfg:index 1
   896 read *tmp323 :unpackCfg:cfg *tmp322
   897 op sub *tmp324 *tmp323 35
-    * op sub *tmp325 *tmp324 7
-    * set :unpackCfg:y *tmp325
+  898 op sub :unpackCfg:y *tmp324 7
   899 set *tmp326 :unpackCfg:index
   900 op add :unpackCfg:index :unpackCfg:index 1
   901 read *tmp327 :unpackCfg:cfg *tmp326
-    * op sub *tmp328 *tmp327 35
-    * set :unpackCfg:cu *tmp328
+  902 op sub :unpackCfg:cu *tmp327 35
   903 set *tmp329 :unpackCfg:index
   904 op add :unpackCfg:index :unpackCfg:index 1
   905 read *tmp330 :unpackCfg:cfg *tmp329
-    * op sub *tmp331 *tmp330 35
-    * set :unpackCfg:pb *tmp331
+  906 op sub :unpackCfg:pb *tmp330 35
   907 set *tmp332 :unpackCfg:index
   908 op add :unpackCfg:index :unpackCfg:index 1
   909 read *tmp333 :unpackCfg:cfg *tmp332
-    * op sub *tmp334 *tmp333 35
-    * set :unpackCfg:gr *tmp334
+  910 op sub :unpackCfg:gr *tmp333 35
   911 set *tmp335 :unpackCfg:index
   912 op add :unpackCfg:index :unpackCfg:index 1
   913 read *tmp336 :unpackCfg:cfg *tmp335
-    * op sub *tmp337 *tmp336 35
-    * set :unpackCfg:si *tmp337
+  914 op sub :unpackCfg:si *tmp336 35
   915 set *tmp338 :unpackCfg:index
   916 op add :unpackCfg:index :unpackCfg:index 1
   917 read *tmp339 :unpackCfg:cfg *tmp338
-    * op sub *tmp340 *tmp339 35
-    * set :unpackCfg:ti *tmp340
+  918 op sub :unpackCfg:ti *tmp339 35
   919 set *tmp341 :unpackCfg:index
   920 op add :unpackCfg:index :unpackCfg:index 1
   921 read *tmp342 :unpackCfg:cfg *tmp341
-    * op sub *tmp343 *tmp342 35
-    * set :unpackCfg:mg *tmp343
+  922 op sub :unpackCfg:mg *tmp342 35
   923 set *tmp344 :unpackCfg:index
   924 op add :unpackCfg:index :unpackCfg:index 1
   925 read *tmp345 :unpackCfg:cfg *tmp344
-    * op sub *tmp346 *tmp345 35
-    * set :unpackCfg:th *tmp346
+  926 op sub :unpackCfg:th *tmp345 35
   927 set *tmp347 :unpackCfg:index
   928 op add :unpackCfg:index :unpackCfg:index 1
   929 read *tmp348 :unpackCfg:cfg *tmp347
-    * op sub *tmp349 *tmp348 35
-    * set :unpackCfg:rotation *tmp349
+  930 op sub :unpackCfg:rotation *tmp348 35
   931 op add :unpackCfg:index :unpackCfg:index 1
   932 set *tmp353 :unpackCfg:index
   933 op add :unpackCfg:index :unpackCfg:index 1
   934 read *tmp354 :unpackCfg:cfg *tmp353
-    * op sub *tmp355 *tmp354 35
-    * set :unpackCfg:ind *tmp355
+  935 op sub :unpackCfg:ind *tmp354 35
   936 label *label239
   937 return :unpackCfg*retaddr
   938 end
 
  1077 jump *label280 equal *tmp389 false
  1078 sensor *tmp391 .core @titanium
  1079 op sub *tmp392 .targetTitanium *tmp391
-    * op min *tmp393 7 *tmp392
-    * set *tmp390 *tmp393
+ 1080 op min *tmp390 7 *tmp392
  1081 jump *label281 always
  1082 label *label280
  1083 set *tmp390 100
 
  1109 setaddr :status1*retaddr *label292 (h:*label292)
  1110 call *label9 *invalid :status1*retval (m:*label292) (h:*label292)
  1111 label *label292
-    * sensor *tmp406 .core @coal
-    * set :supplyBase0:coal *tmp406
-    * sensor *tmp407 .core @sand
-    * set :supplyBase0:sand *tmp407
+ 1112 sensor :supplyBase0:coal .core @coal
+ 1113 sensor :supplyBase0:sand .core @sand
  1114 op lessThan *tmp408 :supplyBase0:coal :supplyBase0:sand
  1115 jump *label293 equal *tmp408 false
  1116 set *tmp409 @coal
 
  1168 setaddr :status1*retaddr *label308 (h:*label308)
  1169 call *label9 *invalid :status1*retval (m:*label308) (h:*label308)
  1170 label *label308
-    * sensor *tmp419 .core @coal
-    * set :supplyBase0:coal.1 *tmp419
-    * sensor *tmp420 .core @sand
-    * set :supplyBase0:sand.1 *tmp420
+ 1171 sensor :supplyBase0:coal.1 .core @coal
+ 1172 sensor :supplyBase0:sand.1 .core @sand
  1173 op lessThanEq *tmp421 :supplyBase0:coal.1 :supplyBase0:sand.1
  1174 jump *label309 equal *tmp421 false
  1175 set *tmp422 @coal
 
  1254 write :meetTarget:thorium .display ".targetThorium"
  1255 set .targetCopper :meetTarget:copper
  1256 op add *tmp425 :meetTarget:lead .leadSurplus
-    * op add *tmp426 *tmp425 1
-    * set .targetLead *tmp426
+ 1257 op add .targetLead *tmp425 1
  1258 set .targetGraphite :meetTarget:graphite
  1259 set .targetSilicon :meetTarget:silicon
  1260 set .targetTitanium :meetTarget:titanium
 
  1374 wait 1e-15
  1375 read *tmp466 .blockBuilder ":buildBlockAt*finished"
  1376 jump *label346 equal *tmp466 false
-    * read *tmp467 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp467
+ 1377 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1378 jump *label344 always
  1379 set :buildBlock*retval null
  1380 label *label344
 
  1467 return :buildBlockFromCfg*retaddr
  1468 end
  1469 label *label37
-    * set *tmp473 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp473
+ 1470 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1471 set :buildBlockFromCfg:config null
  1472 setaddr :buildBlockFromCfg*retaddr *label356 (h:*label356)
  1473 call *label36 *invalid :buildBlockFromCfg*retval (m:*label356) (h:*label356)
 
  1526 label *label40
  1527 label *label363
  1528 ubind :flagUnits:unit
-    * set *tmp474 @unit
-    * set :flagUnits:firstUnit *tmp474
+ 1529 set :flagUnits:firstUnit @unit
  1530 label *label364
  1531 op equal *tmp475 :flagUnits:firstUnit null
  1532 jump *label363 notEqual *tmp475 false
 
  1547 ubind :lineUpUnits:unit
  1548 set :lineUpUnits:firstUnit @unit
  1549 label *label370
-    * sensor *tmp477 @unit @flag
-    * set :lineUpUnits:x *tmp477
+ 1550 sensor :lineUpUnits:x @unit @flag
  1551 ucontrol itemDrop @air 1000
  1552 ucontrol move :lineUpUnits:x :lineUpUnits:y
  1553 sensor *tmp478 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   506 call *label40 *invalid :flagUnits*retval (m:*label144) (h:*label144)
   507 label *label144
   508 label *label145
-    * jump *label147 equal true false
   509 op sub :lineUpUnits:y @thisy 6
   510 set :lineUpUnits:unit @mega
   511 setaddr :lineUpUnits*retaddr *label148 (h:*label148)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-54 instructions):
 
    25 set .builder @unit
    26 ulocate building core false @copper .coreX .coreY *tmp129 .core
    27 label *label44
-    * op equal *tmp130 .core null
-    * jump *label43 notEqual *tmp130 false
+   28 jump *label43 equal .core null
    29 label *label45
    30 set :buildBlockFromCfg.1:cfg "#'+nA######%#"
    31 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
 
    78 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    79 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    80 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp150 :buildFirstTitaniumDrill:result false
-    * jump *label55 equal *tmp150 false
+   81 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    82 set :error:error "Cannot locate spot for titanium drill"
    83 setaddr :error*retaddr *label57 (h:*label57)
    84 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
 
   167 call *label32 *invalid :supplyBase*retval (m:*label72) (h:*label72)
   168 label *label72
   169 sensor *tmp163 .battery @totalPower
-    * op lessThan *tmp164 *tmp163 300
-    * jump *label73 equal *tmp164 false
+  170 jump *label73 greaterThanEq *tmp163 300
   171 jump *label71 always
   172 jump *label74 always
   173 label *label73
   174 label *label74
   175 label *label70
   176 read *tmp101 .controller ".monos"
-    * op lessThan *tmp166 *tmp101 3
-    * jump *label69 notEqual *tmp166 false
+  177 jump *label69 lessThan *tmp101 3
   178 label *label71
   179 set .siliconSurplus 65
   180 set :buildBlockFromCfg.1:cfg ",)###A<###$1"
 
   271 label *label94
   272 label *label95
   273 read *tmp102 .controller ".polys"
-    * op lessThan *tmp184 *tmp102 3
-    * jump *label97 equal *tmp184 false
+  274 jump *label97 greaterThanEq *tmp102 3
   275 setaddr :supplyBase*retaddr *label98 (h:*label98)
   276 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   277 label *label98
 
   284 label *label99
   285 label *label100
   286 read *tmp100 .controller ".flares"
-    * op lessThan *tmp185 *tmp100 2
-    * jump *label102 equal *tmp185 false
+  287 jump *label102 greaterThanEq *tmp100 2
   288 setaddr :supplyBase*retaddr *label103 (h:*label103)
   289 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   290 label *label103
 
   341 read *tmp205 .oreLocator ":layoutThoriumDrill*finished"
   342 jump *label110 equal *tmp205 false
   343 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp207 :buildThoriumDrill:result false
-    * jump *label111 equal *tmp207 false
+  344 jump *label111 notEqual :buildThoriumDrill:result false
   345 set :error:error "Cannot locate spot for thorium drill"
   346 setaddr :error*retaddr *label113 (h:*label113)
   347 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
 
   414 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   415 label *label122
   416 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp225 .thoriumContainer null
-    * jump *label123 equal *tmp225 false
+  417 jump *label123 notEqual .thoriumContainer null
   418 set .thoriumContainer .thoriumDrill
   419 jump *label124 always
   420 label *label123
 
   436 label *label126
   437 label *label127
   438 read *tmp102 .controller ".polys"
-    * op lessThan *tmp229 *tmp102 5
-    * jump *label129 equal *tmp229 false
+  439 jump *label129 greaterThanEq *tmp102 5
   440 setaddr :supplyBase*retaddr *label130 (h:*label130)
   441 call *label32 *invalid :supplyBase*retval (m:*label130) (h:*label130)
   442 label *label130
 
   467 label *label135
   468 label *label136
   469 read *tmp103 .controller ".megas"
-    * op lessThan *tmp232 *tmp103 1
-    * jump *label138 equal *tmp232 false
+  470 jump *label138 greaterThanEq *tmp103 1
   471 setaddr :supplyBase*retaddr *label139 (h:*label139)
   472 call *label32 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   473 label *label139
 
   557 label *label158
   558 label *label159
   559 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
-    * op equal *tmp243 *tmp242 false
-    * jump *label161 equal *tmp243 false
+  560 jump *label161 notEqual *tmp242 false
   561 op sub *tmp244 :moveTo:radius 0.5
   562 ucontrol approach :moveTo:x :moveTo:y *tmp244
   563 label *label160
 
   573 label *label165
   574 label *label166
   575 sensor *tmp247 @unit @firstItem
-    * op notEqual *tmp248 *tmp247 null
-    * jump *label169 equal *tmp248 false
+  576 jump *label169 equal *tmp247 null
   577 ucontrol itemDrop @air 1000
   578 jump *label170 always
   579 label *label169
 
   581 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   582 label *label167
   583 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
-    * op equal *tmp251 *tmp250 false
-    * jump *label166 notEqual *tmp251 false
+  584 jump *label166 equal *tmp250 false
   585 label *label168
   586 label *label164
   587 return :moveToEmpty*retaddr
 
   589 label *label17
   590 label *label172
   591 sensor *tmp252 @unit @firstItem
-    * op notEqual *tmp253 *tmp252 null
-    * jump *label174 equal *tmp253 false
+  592 jump *label174 equal *tmp252 null
   593 ucontrol itemDrop @air 1000
   594 label *label173
   595 jump *label172 always
 
   615 call *label11 *invalid :status3*retval (m:*label178) (h:*label178)
   616 label *label178
   617 sensor *tmp256 @unit @firstItem
-    * op equal *tmp257 *tmp256 :depositItems:item
-    * jump *label179 equal *tmp257 false
+  618 jump *label179 notEqual *tmp256 :depositItems:item
   619 set :moveToBlock:block :depositItems:block
   620 set :moveToBlock:radius 6
   621 setaddr :moveToBlock*retaddr *label181 (h:*label181)
 
   628 sensor *tmp260 @unit @firstItem
   629 op mul *tmp261 *tmp260 :depositItems:cap
   630 sensor *tmp262 :depositItems:block :depositItems:item
-    * op greaterThan *tmp263 *tmp261 *tmp262
-    * jump *label182 notEqual *tmp263 false
+  631 jump *label182 greaterThan *tmp261 *tmp262
   632 label *label184
   633 jump *label180 always
   634 label *label179
   635 label *label185
   636 sensor *tmp264 @unit @firstItem
-    * op notEqual *tmp265 *tmp264 null
-    * jump *label187 equal *tmp265 false
+  637 jump *label187 equal *tmp264 null
   638 ucontrol itemDrop @air 1000
   639 label *label186
   640 jump *label185 always
 
   650 end
   651 label *label20
   652 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
-    * op equal *tmp268 *tmp266 false
-    * jump *label190 equal *tmp268 false
+  653 jump *label190 notEqual *tmp266 false
   654 set :error:error "Cannot locate ore"
   655 setaddr :error*retaddr *label192 (h:*label192)
   656 call *label13 *invalid :error*retval (m:*label192) (h:*label192)
 
   680 call *label16 *invalid :moveToEmpty*retval (m:*label196) (h:*label196)
   681 label *label196
   682 sensor *tmp271 @unit @firstItem
-    * op notEqual *tmp272 *tmp271 :mineOre:ore
-    * jump *label197 equal *tmp272 false
+  683 jump *label197 equal *tmp271 :mineOre:ore
   684 setaddr :dropAll*retaddr *label199 (h:*label199)
   685 call *label17 *invalid :dropAll*retval (m:*label199) (h:*label199)
   686 label *label199
 
   703 label *label204
   704 label *label205
   705 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp280 @second :mineOre:stop
-    * jump *label206 equal *tmp280 false
+  706 jump *label206 lessThanEq @second :mineOre:stop
   707 jump *label203 always
   708 jump *label207 always
   709 label *label206
   710 label *label207
   711 label *label202
   712 sensor *tmp282 @unit @totalItems
-    * op lessThan *tmp283 *tmp282 :mineOre:amount
-    * jump *label201 notEqual *tmp283 false
+  713 jump *label201 lessThan *tmp282 :mineOre:amount
   714 label *label203
   715 ucontrol unbind
   716 set :depositItems:block :mineOre:block
 
   796 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   797 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
   798 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
-    * op greaterThan *tmp301 :supplyBlock:missing 0
-    * jump *label225 equal *tmp301 false
+  799 jump *label225 lessThanEq :supplyBlock:missing 0
   800 set :mineOre:ore :supplyBlock:ore
   801 set :mineOre:amount :supplyBlock:blockCapacity
   802 set :mineOre:block :supplyBlock:block
 
   924 call *label9 *invalid :status1*retval (m:*label244) (h:*label244)
   925 label *label244
   926 sensor *tmp360 .core @coal
-    * op lessThan *tmp361 *tmp360 50
-    * jump *label245 equal *tmp361 false
+  927 jump *label245 greaterThanEq *tmp360 50
   928 set :supplyBlock:block .thoriumGenerator
   929 set :supplyBlock:ore @coal
   930 setaddr :supplyBlock*retaddr *label247 (h:*label247)
 
   947 jump *label242 always
   948 label *label241
   949 read *tmp101 .controller ".monos"
-    * op greaterThan *tmp363 *tmp101 3
-    * jump *label250 equal *tmp363 false
+  950 jump *label250 lessThanEq *tmp101 3
   951 set :status1:text "Phase 1: supplying base"
   952 setaddr :status1*retaddr *label253 (h:*label253)
   953 call *label9 *invalid :status1*retval (m:*label253) (h:*label253)
 
   960 jump *label251 always
   961 label *label250
   962 set :supplyBase0:supplied false
-    * op equal *tmp365 .unloader1 null
-    * jump *label256 equal *tmp365 false
+  963 jump *label256 notEqual .unloader1 null
   964 sensor *tmp367 .core @graphite
-    * op lessThan *tmp368 *tmp367 .targetGraphite
-    * jump *label258 equal *tmp368 false
+  965 jump *label258 greaterThanEq *tmp367 .targetGraphite
   966 sensor *tmp370 .press @coal
-    * op lessThan *tmp371 *tmp370 5
-    * jump *label260 equal *tmp371 false
+  967 jump *label260 greaterThanEq *tmp370 5
   968 set :status1:text "Goal 1: graphite requirement"
   969 setaddr :status1*retaddr *label262 (h:*label262)
   970 call *label9 *invalid :status1*retval (m:*label262) (h:*label262)
 
   982 label *label258
   983 label *label259
   984 sensor *tmp373 .core @silicon
-    * op lessThan *tmp374 *tmp373 .targetSilicon
-    * jump *label264 equal *tmp374 false
+  985 jump *label264 greaterThanEq *tmp373 .targetSilicon
   986 sensor *tmp376 .smelter @coal
-    * op lessThan *tmp377 *tmp376 5
-    * jump *label266 equal *tmp377 false
+  987 jump *label266 greaterThanEq *tmp376 5
   988 set :status1:text "Goal 2: coal for silicon requirement"
   989 setaddr :status1*retaddr *label268 (h:*label268)
   990 call *label9 *invalid :status1*retval (m:*label268) (h:*label268)
 
   998 jump *label267 always
   999 label *label266
  1000 sensor *tmp379 .smelter @sand
-    * op lessThan *tmp380 *tmp379 5
-    * jump *label270 equal *tmp380 false
+ 1001 jump *label270 greaterThanEq *tmp379 5
  1002 set :status1:text "Goal 3: sand for silicon requirement"
  1003 setaddr :status1*retaddr *label272 (h:*label272)
  1004 call *label9 *invalid :status1*retval (m:*label272) (h:*label272)
 
  1017 label *label264
  1018 label *label265
  1019 sensor *tmp382 .battery @totalPower
-    * op lessThan *tmp383 *tmp382 .powerTarget
-    * jump *label274 equal *tmp383 false
+ 1020 jump *label274 greaterThanEq *tmp382 .powerTarget
  1021 sensor *tmp385 .generator @coal
-    * op lessThan *tmp386 *tmp385 2
-    * jump *label276 equal *tmp386 false
+ 1022 jump *label276 greaterThanEq *tmp385 2
  1023 set :status1:text "Goal 4: supplying generator"
  1024 setaddr :status1*retaddr *label278 (h:*label278)
  1025 call *label9 *invalid :status1*retval (m:*label278) (h:*label278)
 
  1040 label *label256
  1041 label *label257
  1042 sensor *tmp388 .core @titanium
-    * op lessThan *tmp389 *tmp388 .targetTitanium
-    * jump *label280 equal *tmp389 false
+ 1043 jump *label280 greaterThanEq *tmp388 .targetTitanium
  1044 sensor *tmp391 .core @titanium
  1045 op sub *tmp392 .targetTitanium *tmp391
  1046 op min *tmp390 7 *tmp392
 
  1050 label *label281
  1051 set :supplyBase0:titaniumTrigger *tmp390
  1052 sensor *tmp394 .titaniumDrill @titanium
-    * op lessThan *tmp395 *tmp394 :supplyBase0:titaniumTrigger
-    * jump *label282 equal *tmp395 false
-    * op equal *tmp397 :supplyBase0:supplied false
-    * jump *label284 equal *tmp397 false
+ 1053 jump *label282 greaterThanEq *tmp394 :supplyBase0:titaniumTrigger
+ 1054 jump *label284 notEqual :supplyBase0:supplied false
  1055 sensor *tmp399 .battery @totalPower
  1056 op mul *tmp400 .unloader1 .powerTarget
-    * op lessThan *tmp401 *tmp399 *tmp400
-    * jump *label286 equal *tmp401 false
+ 1057 jump *label286 greaterThanEq *tmp399 *tmp400
  1058 set :status1:text "Goal 5: supplying generator"
  1059 setaddr :status1*retaddr *label288 (h:*label288)
  1060 call *label9 *invalid :status1*retval (m:*label288) (h:*label288)
 
  1066 jump *label287 always
  1067 label *label286
  1068 sensor *tmp403 .core @silicon
-    * op lessThan *tmp404 *tmp403 .targetSilicon
-    * jump *label290 equal *tmp404 false
+ 1069 jump *label290 greaterThanEq *tmp403 .targetSilicon
  1070 set :status1:text "Goal 6: silicon requirement"
  1071 setaddr :status1*retaddr *label292 (h:*label292)
  1072 call *label9 *invalid :status1*retval (m:*label292) (h:*label292)
  1073 label *label292
  1074 sensor :supplyBase0:coal .core @coal
  1075 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp408 :supplyBase0:coal :supplyBase0:sand
-    * jump *label293 equal *tmp408 false
+ 1076 jump *label293 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1077 set *tmp409 @coal
  1078 jump *label294 always
  1079 label *label293
 
  1087 jump *label291 always
  1088 label *label290
  1089 sensor *tmp410 .core @copper
-    * op lessThan *tmp411 *tmp410 .targetCopper
-    * jump *label296 equal *tmp411 false
+ 1090 jump *label296 greaterThanEq *tmp410 .targetCopper
  1091 set :status1:text "Goal 7: copper requirement"
  1092 setaddr :status1*retaddr *label298 (h:*label298)
  1093 call *label9 *invalid :status1*retval (m:*label298) (h:*label298)
 
  1099 jump *label297 always
  1100 label *label296
  1101 sensor *tmp413 .core @lead
-    * op lessThan *tmp414 *tmp413 .targetLead
-    * jump *label300 equal *tmp414 false
+ 1102 jump *label300 greaterThanEq *tmp413 .targetLead
  1103 set :status1:text "Goal 8: lead requirement"
  1104 setaddr :status1*retaddr *label302 (h:*label302)
  1105 call *label9 *invalid :status1*retval (m:*label302) (h:*label302)
 
  1111 jump *label301 always
  1112 label *label300
  1113 sensor *tmp416 .core @metaglass
-    * op lessThan *tmp417 *tmp416 .targetMetaglass
-    * jump *label304 equal *tmp417 false
+ 1114 jump *label304 greaterThanEq *tmp416 .targetMetaglass
  1115 set :status1:text "Goal 9: metaglass requirement"
  1116 setaddr :status1*retaddr *label306 (h:*label306)
  1117 call *label9 *invalid :status1*retval (m:*label306) (h:*label306)
 
  1128 label *label308
  1129 sensor :supplyBase0:coal.1 .core @coal
  1130 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp421 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label309 equal *tmp421 false
+ 1131 jump *label309 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1132 set *tmp422 @coal
  1133 jump *label310 always
  1134 label *label309
 
  1237 write .targetCopper processor8 ".copperTarget"
  1238 label *label325
  1239 sensor *tmp438 .core @copper
-    * op lessThan *tmp439 *tmp438 .targetCopper
-    * jump *label329 equal *tmp439 false
+ 1240 jump *label329 greaterThanEq *tmp438 .targetCopper
  1241 set *tmp437 false
  1242 jump *label328 always
  1243 jump *label330 always
  1244 label *label329
  1245 label *label330
  1246 sensor *tmp441 .core @lead
-    * op lessThan *tmp442 *tmp441 .targetLead
-    * jump *label331 equal *tmp442 false
+ 1247 jump *label331 greaterThanEq *tmp441 .targetLead
  1248 set *tmp437 false
  1249 jump *label328 always
  1250 jump *label332 always
  1251 label *label331
  1252 label *label332
  1253 sensor *tmp444 .core @graphite
-    * op lessThan *tmp445 *tmp444 .targetGraphite
-    * jump *label333 equal *tmp445 false
+ 1254 jump *label333 greaterThanEq *tmp444 .targetGraphite
  1255 set *tmp437 false
  1256 jump *label328 always
  1257 jump *label334 always
  1258 label *label333
  1259 label *label334
  1260 sensor *tmp447 .core @silicon
-    * op lessThan *tmp448 *tmp447 .targetSilicon
-    * jump *label335 equal *tmp448 false
+ 1261 jump *label335 greaterThanEq *tmp447 .targetSilicon
  1262 set *tmp437 false
  1263 jump *label328 always
  1264 jump *label336 always
  1265 label *label335
  1266 label *label336
  1267 sensor *tmp450 .core @titanium
-    * op lessThan *tmp451 *tmp450 .targetTitanium
-    * jump *label337 equal *tmp451 false
+ 1268 jump *label337 greaterThanEq *tmp450 .targetTitanium
  1269 set *tmp437 false
  1270 jump *label328 always
  1271 jump *label338 always
  1272 label *label337
  1273 label *label338
  1274 sensor *tmp453 .core @metaglass
-    * op lessThan *tmp454 *tmp453 .targetMetaglass
-    * jump *label339 equal *tmp454 false
+ 1275 jump *label339 greaterThanEq *tmp453 .targetMetaglass
  1276 set *tmp437 false
  1277 jump *label328 always
  1278 jump *label340 always
  1279 label *label339
  1280 label *label340
  1281 sensor *tmp456 .core @thorium
-    * op lessThan *tmp457 *tmp456 .targetThorium
-    * jump *label341 equal *tmp457 false
+ 1282 jump *label341 greaterThanEq *tmp456 .targetThorium
  1283 set *tmp437 false
  1284 jump *label328 always
  1285 jump *label342 always
 
  1289 jump *label328 always
  1290 set *tmp437 null
  1291 label *label328
-    * op equal *tmp459 *tmp437 false
-    * jump *label327 equal *tmp459 false
+ 1292 jump *label327 notEqual *tmp437 false
  1293 setaddr :supplyBase*retaddr *label343 (h:*label343)
  1294 call *label32 *invalid :supplyBase*retval (m:*label343) (h:*label343)
  1295 label *label343
 
  1331 end
  1332 label *label35
  1333 op add *tmp468 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp469 *tmp468 0
-    * jump *label348 equal *tmp469 false
+ 1334 jump *label348 lessThanEq *tmp468 0
  1335 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1336 setaddr :unpackCfg*retaddr *label350 (h:*label350)
  1337 call *label31 *invalid :unpackCfg*retval (m:*label350) (h:*label350)
 
  1476 ubind :flagUnits:unit
  1477 set :flagUnits:firstUnit @unit
  1478 label *label364
-    * op equal *tmp475 :flagUnits:firstUnit null
-    * jump *label363 notEqual *tmp475 false
+ 1479 jump *label363 equal :flagUnits:firstUnit null
  1480 label *label365
  1481 set :flagUnits:x @thisx
  1482 label *label366
 
  1484 op add :flagUnits:x :flagUnits:x 4
  1485 ubind :flagUnits:unit
  1486 label *label367
-    * op notEqual *tmp476 @unit :flagUnits:firstUnit
-    * jump *label366 notEqual *tmp476 false
+ 1487 jump *label366 notEqual @unit :flagUnits:firstUnit
  1488 label *label368
  1489 label *label362
  1490 return :flagUnits*retaddr
 
  1504 label *label374
  1505 ubind :lineUpUnits:unit
  1506 label *label371
-    * op notEqual *tmp480 @unit :lineUpUnits:firstUnit
-    * jump *label370 notEqual *tmp480 false
+ 1507 jump *label370 notEqual @unit :lineUpUnits:firstUnit
  1508 label *label372
  1509 label *label369
  1510 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-29 instructions):
 
    83 setaddr :error*retaddr *label57 (h:*label57)
    84 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
    85 label *label57
-    * jump *label56 always
    86 label *label55
    87 label *label56
    88 write @pneumatic-drill .display ".nextBlock"
 
   168 sensor *tmp163 .battery @totalPower
   169 jump *label73 greaterThanEq *tmp163 300
   170 jump *label71 always
-    * jump *label74 always
   171 label *label73
   172 label *label74
   173 label *label70
 
   344 setaddr :error*retaddr *label113 (h:*label113)
   345 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
   346 label *label113
-    * jump *label112 always
   347 label *label111
   348 label *label112
   349 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   413 set .thoriumContainer :buildRemoteBlock*retval
   414 jump *label123 notEqual .thoriumContainer null
   415 set .thoriumContainer .thoriumDrill
-    * jump *label124 always
   416 label *label123
   417 label *label124
   418 write .thoriumDrill .display ".thoriumDrill"
 
   571 sensor *tmp247 @unit @firstItem
   572 jump *label169 equal *tmp247 null
   573 ucontrol itemDrop @air 1000
-    * jump *label170 always
   574 label *label169
   575 label *label170
   576 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   650 setaddr :error*retaddr *label192 (h:*label192)
   651 call *label13 *invalid :error*retval (m:*label192) (h:*label192)
   652 label *label192
-    * jump *label191 always
   653 label *label190
   654 label *label191
   655 label *label189
 
   678 setaddr :dropAll*retaddr *label199 (h:*label199)
   679 call *label17 *invalid :dropAll*retval (m:*label199) (h:*label199)
   680 label *label199
-    * jump *label198 always
   681 label *label197
   682 label *label198
   683 set :status3:text "Mining..."
 
   692 op land *tmp278 *tmp276 *tmp277
   693 jump *label204 equal *tmp278 false
   694 jump *label203 always
-    * jump *label205 always
   695 label *label204
   696 label *label205
   697 ucontrol mine :mineOre:x :mineOre:y
   698 jump *label206 lessThanEq @second :mineOre:stop
   699 jump *label203 always
-    * jump *label207 always
   700 label *label206
   701 label *label207
   702 label *label202
 
   759 op land *tmp292 *tmp290 *tmp291
   760 jump *label220 equal *tmp292 false
   761 ucontrol itemDrop @air 1000
-    * jump *label221 always
   762 label *label220
   763 label *label221
   764 label *label218
 
   793 setaddr :mineOre*retaddr *label227 (h:*label227)
   794 call *label21 *invalid :mineOre*retval (m:*label227) (h:*label227)
   795 label *label227
-    * jump *label226 always
   796 label *label225
   797 label *label226
   798 label *label223
 
   827 op land *tmp308 *tmp306 *tmp307
   828 jump *label236 equal *tmp308 false
   829 ucontrol itemDrop @air 1000
-    * jump *label237 always
   830 label *label236
   831 label *label237
   832 label *label234
 
   963 call *label24 *invalid :supplyBlock*retval (m:*label263) (h:*label263)
   964 label *label263
   965 set :supplyBase0:supplied true
-    * jump *label261 always
   966 label *label260
   967 label *label261
-    * jump *label259 always
   968 label *label258
   969 label *label259
   970 sensor *tmp373 .core @silicon
 
   995 call *label24 *invalid :supplyBlock*retval (m:*label273) (h:*label273)
   996 label *label273
   997 set :supplyBase0:supplied true
-    * jump *label271 always
   998 label *label270
   999 label *label271
  1000 label *label267
-    * jump *label265 always
  1001 label *label264
  1002 label *label265
  1003 sensor *tmp382 .battery @totalPower
 
  1014 call *label24 *invalid :supplyBlock*retval (m:*label279) (h:*label279)
  1015 label *label279
  1016 set :supplyBase0:supplied true
-    * jump *label277 always
  1017 label *label276
  1018 label *label277
-    * jump *label275 always
  1019 label *label274
  1020 label *label275
-    * jump *label257 always
  1021 label *label256
  1022 label *label257
  1023 sensor *tmp388 .core @titanium
 
  1125 label *label297
  1126 label *label291
  1127 label *label287
-    * jump *label285 always
  1128 label *label284
  1129 label *label285
  1130 jump *label283 always
 
  1220 jump *label329 greaterThanEq *tmp438 .targetCopper
  1221 set *tmp437 false
  1222 jump *label328 always
-    * jump *label330 always
  1223 label *label329
  1224 label *label330
  1225 sensor *tmp441 .core @lead
  1226 jump *label331 greaterThanEq *tmp441 .targetLead
  1227 set *tmp437 false
  1228 jump *label328 always
-    * jump *label332 always
  1229 label *label331
  1230 label *label332
  1231 sensor *tmp444 .core @graphite
  1232 jump *label333 greaterThanEq *tmp444 .targetGraphite
  1233 set *tmp437 false
  1234 jump *label328 always
-    * jump *label334 always
  1235 label *label333
  1236 label *label334
  1237 sensor *tmp447 .core @silicon
  1238 jump *label335 greaterThanEq *tmp447 .targetSilicon
  1239 set *tmp437 false
  1240 jump *label328 always
-    * jump *label336 always
  1241 label *label335
  1242 label *label336
  1243 sensor *tmp450 .core @titanium
  1244 jump *label337 greaterThanEq *tmp450 .targetTitanium
  1245 set *tmp437 false
  1246 jump *label328 always
-    * jump *label338 always
  1247 label *label337
  1248 label *label338
  1249 sensor *tmp453 .core @metaglass
  1250 jump *label339 greaterThanEq *tmp453 .targetMetaglass
  1251 set *tmp437 false
  1252 jump *label328 always
-    * jump *label340 always
  1253 label *label339
  1254 label *label340
  1255 sensor *tmp456 .core @thorium
  1256 jump *label341 greaterThanEq *tmp456 .targetThorium
  1257 set *tmp437 false
  1258 jump *label328 always
-    * jump *label342 always
  1259 label *label341
  1260 label *label342
  1261 set *tmp437 true
 
  1337 label *label351
  1338 set :buildRemoteBlock*retval :buildBlock*retval
  1339 jump *label347 always
-    * jump *label349 always
  1340 label *label348
  1341 label *label349
  1342 set :buildRemoteBlock*retval false
 
  1471 sensor *tmp478 @unit @mining
  1472 jump *label373 equal *tmp478 false
  1473 ucontrol stop
-    * jump *label374 always
  1474 label *label373
  1475 label *label374
  1476 ubind :lineUpUnits:unit

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    11 set .smelter null
    12 set .titaniumDrill null
    13 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
    14 set .thoriumContainer null
    15 set .thoriumGenerator null
    16 set .leadSurplus 0
 
    55 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    56 label *label51
    57 set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   58 set :meetTarget.1:cfg "w**5#-#####%)"
    59 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
    60 call *label38 *invalid :meetTarget.1*retval (m:*label53) (h:*label53)
    61 label *label53
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   62 write @titanium processor1 ".nextBlock"
+   63 write .coreX processor4 ":findDrillLocation:x"
+   64 write .coreY processor4 ":findDrillLocation:y"
+   65 write @unit processor4 ":findDrillLocation:unit"
+   66 write @titanium processor4 ":findDrillLocation:item"
+   67 write @ore-titanium processor4 ":findDrillLocation:ore"
+   68 write 2 processor4 ":findDrillLocation:size"
+   69 write 4 processor4 ":findDrillLocation:limit"
+   70 write false processor4 ":findDrillLocation*finished"
+   71 write 1 processor4 "@counter"
    72 label *label54
    73 wait 1e-15
-    * read *tmp148 .oreLocator ":findDrillLocation*finished"
+   74 read *tmp148 processor4 ":findDrillLocation*finished"
    75 jump *label54 equal *tmp148 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   76 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   77 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   78 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    79 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    80 set :error:error "Cannot locate spot for titanium drill"
    81 setaddr :error*retaddr *label57 (h:*label57)
 
    83 label *label57
    84 label *label55
    85 label *label56
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   86 write @pneumatic-drill processor1 ".nextBlock"
+   87 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   88 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   89 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   90 write 2 processor5 "@counter"
    91 label *label58
    92 wait 1e-15
-    * read *tmp154 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   93 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
    94 jump *label58 equal *tmp154 false
-    * read *tmp137 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   95 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
    96 jump *label52 always
-    * set *tmp137 null
    97 label *label52
    98 set .titaniumDrill *tmp137
-    * write .titaniumDrill .display ".titaniumDrill"
+   99 write *tmp137 processor1 ".titaniumDrill"
   100 set :buildBlockFromCfg.1:cfg "*,###A<###$*"
   101 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   102 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
 
   117 call *label36 *invalid :buildBlockFromCfg*retval (m:*label62) (h:*label62)
   118 label *label62
   119 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  120 write processor6 :buildBlockFromCfg*retval ".timer"
+  121 write processor1 :buildBlockFromCfg*retval ".display"
+  122 write .core :buildBlockFromCfg*retval ".core"
+  123 write bank1 :buildBlockFromCfg*retval ".bank"
+  124 write .battery :buildBlockFromCfg*retval ".battery"
+  125 write .generator :buildBlockFromCfg*retval ".generator"
+  126 write .smelter :buildBlockFromCfg*retval ".smelter"
+  127 write .press :buildBlockFromCfg*retval ".press"
+  128 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   129 set :buildBlockFromCfg.1:cfg "g)'%)######$."
   130 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   131 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
 
   140 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   141 label *label65
   142 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  143 write :buildBlockFromCfg.1*retval .controller ".factory"
+  144 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   145 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  146 write 1 .controller ".flareTarget"
+  147 write 1 processor1 ".flareTarget"
   148 label *label66
   149 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  150 write 3 .controller ".monoTarget"
+  151 write 3 processor1 ".monoTarget"
   152 label *label67
   153 write 85 .controller ".pressTarget"
   154 write 150 .controller ".smelterTarget"
   155 write 30 .controller ".kilnTarget"
   156 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  157 set .siliconSurplus 20
   158 setaddr :buildUnits*retaddr *label68 (h:*label68)
   159 call *label39 *invalid :buildUnits*retval (m:*label68) (h:*label68)
   160 label *label68
 
   185 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   186 label *label77
   187 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  188 write :buildBlockFromCfg.1*retval .controller ".kiln"
   189 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   190 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   191 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   228 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   229 label *label86
   230 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  231 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  232 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   233 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&="
   234 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   235 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
 
   240 set .siliconSurplus 1000
   241 set .metaglassSurplus 200
   242 set :setPolyTarget:target 6
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  243 write 6 .controller ".polyTarget"
+  244 write 6 processor1 ".polyTarget"
   245 label *label89
   246 set :buildBlockFromCfg.1:cfg "%.)A<######%A"
   247 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
 
   274 jump *label95 always
   275 label *label97
   276 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  277 write 3 .controller ".flareTarget"
+  278 write 3 processor1 ".flareTarget"
   279 label *label99
   280 label *label100
   281 read *tmp100 .controller ".flares"
 
   288 label *label102
   289 set .graphiteSurplus 100
   290 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  291 write 5 .controller ".monoTarget"
+  292 write 5 processor1 ".monoTarget"
   293 label *label104
-    * write @ore-titanium .display ".nextBlock"
+  294 write @ore-titanium processor1 ".nextBlock"
   295 wait 0.000000001
   296 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  297 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  298 write .coreX processor4 ":findDrillLocation:x"
+  299 write .coreY processor4 ":findDrillLocation:y"
+  300 write @unit processor4 ":findDrillLocation:unit"
+  301 write @titanium processor4 ":findDrillLocation:item"
+  302 write @ore-titanium processor4 ":findDrillLocation:ore"
+  303 write 4 processor4 ":findDrillLocation:size"
+  304 write 1000000000 processor4 ":findDrillLocation:limit"
+  305 write false processor4 ":findDrillLocation*finished"
+  306 write 1 processor4 "@counter"
   307 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  308 write .controller processor5 ":buildTitaniumDrills:aController"
+  309 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  310 write false processor5 ":buildTitaniumDrills*finished"
+  311 write 3 processor5 "@counter"
   312 label *label106
   313 wait 1e-15
-    * read *tmp198 .blockBuilder ":buildTitaniumDrills*finished"
+  314 read *tmp198 processor5 ":buildTitaniumDrills*finished"
   315 jump *label106 equal *tmp198 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  316 write false processor4 ":stopLocation*finished"
+  317 write 3 processor4 "@counter"
   318 label *label105
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  319 write null processor1 ".nextBlock"
+  320 write .coreX processor4 ":layoutThoriumDrill:x"
+  321 write .coreY processor4 ":layoutThoriumDrill:y"
+  322 write @unit processor4 ":layoutThoriumDrill:unit"
+  323 write 7 processor4 ":layoutThoriumDrill:limit"
+  324 write false processor4 ":layoutThoriumDrill*finished"
+  325 write 2 processor4 "@counter"
   326 label *label108
   327 wait 1e-15
-    * read *tmp203 .oreLocator ":layoutThoriumDrill*finished"
+  328 read *tmp203 processor4 ":layoutThoriumDrill*finished"
   329 jump *label108 equal *tmp203 false
   330 set :meetTarget.1:cfg "x**F#AA7###&>"
   331 setaddr :meetTarget.1*retaddr *label109 (h:*label109)
 
   333 label *label109
   334 label *label110
   335 wait 1e-15
-    * read *tmp205 .oreLocator ":layoutThoriumDrill*finished"
+  336 read *tmp205 processor4 ":layoutThoriumDrill*finished"
   337 jump *label110 equal *tmp205 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  338 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   339 jump *label111 notEqual :buildThoriumDrill:result false
   340 set :error:error "Cannot locate spot for thorium drill"
   341 setaddr :error*retaddr *label113 (h:*label113)
 
   343 label *label113
   344 label *label111
   345 label *label112
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp56 .oreLocator ".drillX"
-    * write *tmp56 .blockBuilder ":buildBlockAt:x"
-    * read *tmp57 .oreLocator ".drillY"
-    * write *tmp57 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  346 write @laser-drill processor5 ":buildBlockAt:block"
+  347 read *tmp56 processor4 ".drillX"
+  348 write *tmp56 processor5 ":buildBlockAt:x"
+  349 read *tmp57 processor4 ".drillY"
+  350 write *tmp57 processor5 ":buildBlockAt:y"
+  351 write null processor5 ":buildBlockAt:rotation"
+  352 write 0 processor5 ":buildBlockAt:config"
+  353 write -1 processor5 ":buildBlockAt:index"
+  354 write false processor5 ":buildBlockAt*finished"
+  355 write 1 processor5 "@counter"
   356 label *label114
   357 wait 1e-15
-    * read *tmp215 .blockBuilder ":buildBlockAt*finished"
+  358 read *tmp215 processor5 ":buildBlockAt*finished"
   359 jump *label114 equal *tmp215 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  360 read .thoriumDrill processor5 ":buildBlockAt*retval"
   361 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  362 read :buildRemoteBlock:x processor4 ".water1X"
+  363 read :buildRemoteBlock:y processor4 ".water1Y"
   364 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   365 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   366 label *label115
   367 set :buildRemoteBlock:cfg "z%-AAA##A##%4"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  368 read :buildRemoteBlock:x processor4 ".water2X"
+  369 read :buildRemoteBlock:y processor4 ".water2Y"
   370 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   371 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   372 label *label116
   373 set :buildRemoteBlock:cfg "o%+FK<A####%7"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  374 read :buildRemoteBlock:x processor4 ".generatorX"
+  375 read :buildRemoteBlock:y processor4 ".generatorY"
   376 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   377 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   378 label *label117
   379 set .thoriumGenerator :buildRemoteBlock*retval
   380 set :buildRemoteBlock:cfg "g)'%)######$."
-    * read :buildRemoteBlock:x .oreLocator ".node1X"
-    * read :buildRemoteBlock:y .oreLocator ".node1Y"
+  381 read :buildRemoteBlock:x processor4 ".node1X"
+  382 read :buildRemoteBlock:y processor4 ".node1Y"
   383 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   384 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   385 label *label118
-    * set :buildRemoteBlock:cfg "g)'%)######$."
-    * read :buildRemoteBlock:x .oreLocator ".node2X"
-    * read :buildRemoteBlock:y .oreLocator ".node2Y"
+  386 read :buildRemoteBlock:x processor4 ".node2X"
+  387 read :buildRemoteBlock:y processor4 ".node2Y"
   388 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   389 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   390 label *label119
   391 set :buildRemoteBlock:cfg "r**#-#+####$?"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  392 read :buildRemoteBlock:x processor4 ".panelX"
+  393 read :buildRemoteBlock:y processor4 ".panelY"
   394 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   395 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   396 label *label120
   397 set :buildRemoteBlock:cfg "k*/(7######$$"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  398 read :buildRemoteBlock:x processor4 ".batteryX"
+  399 read :buildRemoteBlock:y processor4 ".batteryY"
   400 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   401 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   402 label *label121
   403 set :buildRemoteBlock:cfg "**#######%@"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  404 read :buildRemoteBlock:x processor4 ".containerX"
+  405 read :buildRemoteBlock:y processor4 ".containerY"
   406 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   407 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   408 label *label122
   409 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label123 notEqual .thoriumContainer null
+  410 jump *label123 notEqual :buildRemoteBlock*retval null
   411 set .thoriumContainer .thoriumDrill
   412 label *label123
   413 label *label124
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  414 write .thoriumDrill processor1 ".thoriumDrill"
+  415 write .thoriumContainer processor1 ".thoriumContainer"
+  416 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  417 write false processor3 ":setThoriumContainer*finished"
+  418 write 3 processor3 "@counter"
   419 label *label125
   420 wait 1e-15
-    * read *tmp228 .polyController ":setThoriumContainer*finished"
+  421 read *tmp228 processor3 ":setThoriumContainer*finished"
   422 jump *label125 equal *tmp228 false
   423 label *label107
-    * write null .display ".nextBlock"
+  424 write null processor1 ".nextBlock"
   425 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  426 write 1 .controller ".megaTarget"
+  427 write 1 processor1 ".megaTarget"
   428 label *label126
   429 label *label127
   430 read *tmp102 .controller ".polys"
 
   450 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label134) (h:*label134)
   451 label *label134
   452 set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
-    * write :buildMultiplicativeReconstructor:multiReconstructor .controller ".multiReconstructor"
-    * write :buildMultiplicativeReconstructor:multiReconstructor .display ".multiReconstructor"
+  453 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  454 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   455 label *label133
   456 set .metaglassSurplus 50
   457 setaddr :buildUnits*retaddr *label135 (h:*label135)
 
   664 label *label195
   665 set :mineOre:x :locateOre:x
   666 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  667 set :moveToEmpty:x :locateOre:x
+  668 set :moveToEmpty:y :locateOre:y
   669 setaddr :moveToEmpty*retaddr *label196 (h:*label196)
   670 call *label16 *invalid :moveToEmpty*retval (m:*label196) (h:*label196)
   671 label *label196
 
   842 end
   843 label *label31
   844 set :unpackCfg:index 0
-    * set *tmp314 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  845 set *tmp314 0
+  846 op add :unpackCfg:index 0 1
   847 read *tmp315 :unpackCfg:cfg *tmp314
   848 op sub *tmp316 *tmp315 35
   849 lookup block :unpackCfg:type *tmp316
-    * set *tmp318 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  850 set *tmp318 1
+  851 op add :unpackCfg:index 1 1
   852 read *tmp319 :unpackCfg:cfg *tmp318
   853 op sub *tmp320 *tmp319 35
-    * op sub :unpackCfg:x *tmp320 7
-    * set *tmp322 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  854 op sub :unpackCfg:x *tmp319 42
+  855 set *tmp322 2
+  856 op add :unpackCfg:index 2 1
   857 read *tmp323 :unpackCfg:cfg *tmp322
   858 op sub *tmp324 *tmp323 35
-    * op sub :unpackCfg:y *tmp324 7
-    * set *tmp326 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  859 op sub :unpackCfg:y *tmp323 42
+  860 set *tmp326 3
+  861 op add :unpackCfg:index 3 1
   862 read *tmp327 :unpackCfg:cfg *tmp326
   863 op sub :unpackCfg:cu *tmp327 35
-    * set *tmp329 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  864 set *tmp329 4
+  865 op add :unpackCfg:index 4 1
   866 read *tmp330 :unpackCfg:cfg *tmp329
   867 op sub :unpackCfg:pb *tmp330 35
-    * set *tmp332 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  868 set *tmp332 5
+  869 op add :unpackCfg:index 5 1
   870 read *tmp333 :unpackCfg:cfg *tmp332
   871 op sub :unpackCfg:gr *tmp333 35
-    * set *tmp335 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  872 set *tmp335 6
+  873 op add :unpackCfg:index 6 1
   874 read *tmp336 :unpackCfg:cfg *tmp335
   875 op sub :unpackCfg:si *tmp336 35
-    * set *tmp338 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  876 set *tmp338 7
+  877 op add :unpackCfg:index 7 1
   878 read *tmp339 :unpackCfg:cfg *tmp338
   879 op sub :unpackCfg:ti *tmp339 35
-    * set *tmp341 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  880 set *tmp341 8
+  881 op add :unpackCfg:index 8 1
   882 read *tmp342 :unpackCfg:cfg *tmp341
   883 op sub :unpackCfg:mg *tmp342 35
-    * set *tmp344 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  884 set *tmp344 9
+  885 op add :unpackCfg:index 9 1
   886 read *tmp345 :unpackCfg:cfg *tmp344
   887 op sub :unpackCfg:th *tmp345 35
-    * set *tmp347 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  888 set *tmp347 10
+  889 op add :unpackCfg:index 10 1
   890 read *tmp348 :unpackCfg:cfg *tmp347
   891 op sub :unpackCfg:rotation *tmp348 35
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp353 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  892 op add :unpackCfg:index 11 1
+  893 set *tmp353 12
+  894 op add :unpackCfg:index 12 1
   895 read *tmp354 :unpackCfg:cfg *tmp353
   896 op sub :unpackCfg:ind *tmp354 35
   897 label *label239
 
  1027 label *label281
  1028 set :supplyBase0:titaniumTrigger *tmp390
  1029 sensor *tmp394 .titaniumDrill @titanium
-    * jump *label282 greaterThanEq *tmp394 :supplyBase0:titaniumTrigger
+ 1030 jump *label282 greaterThanEq *tmp394 *tmp390
  1031 jump *label284 notEqual :supplyBase0:supplied false
  1032 sensor *tmp399 .battery @totalPower
  1033 op mul *tmp400 .unloader1 .powerTarget
 
  1057 set *tmp409 @sand
  1058 label *label294
  1059 set :supplyBase0:ore *tmp409
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1060 set :mineOre.1:ore *tmp409
  1061 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1062 call *label22 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1063 label *label295
 
  1112 set *tmp422 @sand
  1113 label *label310
  1114 set :supplyBase0:ore.1 *tmp422
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1115 set :mineOre.1:ore *tmp422
  1116 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1117 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
  1118 label *label311
 
  1200 op add *tmp429 :meetTarget:metaglass .metaglassSurplus
  1201 write *tmp429 .controller ".kilnTarget"
  1202 op add *tmp430 :meetTarget:lead .leadSurplus
-    * write *tmp430 .controller ".leadReserve"
+ 1203 write *tmp425 .controller ".leadReserve"
  1204 op sign *tmp431 :meetTarget:silicon
  1205 op mul *tmp432 *tmp431 20
  1206 op add *tmp433 :meetTarget:silicon *tmp432
 
  1210 op add *tmp436 :meetTarget:graphite *tmp435
  1211 write *tmp436 .controller ".graphiteReserve"
  1212 write .targetLead processor8 ".leadTarget"
-    * write .targetCopper processor8 ".copperTarget"
+ 1213 write :meetTarget:copper processor8 ".copperTarget"
  1214 label *label325
  1215 sensor *tmp438 .core @copper
  1216 jump *label329 greaterThanEq *tmp438 .targetCopper
 
  1256 label *label342
  1257 set *tmp437 true
  1258 jump *label328 always
-    * set *tmp437 null
  1259 label *label328
  1260 jump *label327 notEqual *tmp437 false
  1261 setaddr :supplyBase*retaddr *label343 (h:*label343)
 
  1293 jump *label346 equal *tmp466 false
  1294 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1295 jump *label344 always
-    * set :buildBlock*retval null
  1296 label *label344
  1297 return :buildBlock*retaddr
  1298 end
 
  1313 set :buildRemoteBlock:th :unpackCfg:th
  1314 set :buildRemoteBlock:rotation :unpackCfg:rotation
  1315 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1316 set :buildBlock:block :unpackCfg:type
  1317 set :buildBlock:x :buildRemoteBlock:x
  1318 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1319 set :buildBlock:copper :unpackCfg:cu
+ 1320 set :buildBlock:lead :unpackCfg:pb
+ 1321 set :buildBlock:graphite :unpackCfg:gr
+ 1322 set :buildBlock:silicon :unpackCfg:si
+ 1323 set :buildBlock:titanium :unpackCfg:ti
+ 1324 set :buildBlock:metaglass :unpackCfg:mg
+ 1325 set :buildBlock:thorium :unpackCfg:th
+ 1326 set :buildBlock:rotation :unpackCfg:rotation
  1327 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+ 1328 set :buildBlock:index :unpackCfg:ind
  1329 setaddr :buildBlock*retaddr *label351 (h:*label351)
  1330 call *label34 *invalid :buildBlock*retval (m:*label351) (h:*label351)
  1331 label *label351
 
  1335 label *label349
  1336 set :buildRemoteBlock*retval false
  1337 jump *label347 always
-    * set :buildRemoteBlock*retval null
  1338 label *label347
  1339 return :buildRemoteBlock*retaddr
  1340 end
 
  1355 set :buildBlockFromCfg:th :unpackCfg:th
  1356 set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1357 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp471 .coreX :buildBlockFromCfg:x
-    * op add *tmp472 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1358 op add *tmp471 .coreX :unpackCfg:x
+ 1359 op add *tmp472 .coreY :unpackCfg:y
+ 1360 set :buildBlock:block :unpackCfg:type
  1361 set :buildBlock:x *tmp471
  1362 set :buildBlock:y *tmp472
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1363 set :buildBlock:copper :unpackCfg:cu
+ 1364 set :buildBlock:lead :unpackCfg:pb
+ 1365 set :buildBlock:graphite :unpackCfg:gr
+ 1366 set :buildBlock:silicon :unpackCfg:si
+ 1367 set :buildBlock:titanium :unpackCfg:ti
+ 1368 set :buildBlock:metaglass :unpackCfg:mg
+ 1369 set :buildBlock:thorium :unpackCfg:th
+ 1370 set :buildBlock:rotation :unpackCfg:rotation
  1371 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+ 1372 set :buildBlock:index :unpackCfg:ind
  1373 setaddr :buildBlock*retaddr *label354 (h:*label354)
  1374 call *label34 *invalid :buildBlock*retval (m:*label354) (h:*label354)
  1375 label *label354
  1376 set :buildBlockFromCfg*retval :buildBlock*retval
  1377 jump *label352 always
-    * set :buildBlockFromCfg*retval null
  1378 label *label352
  1379 return :buildBlockFromCfg*retaddr
  1380 end
 
  1401 set :meetTarget.1:ti :unpackCfg:ti
  1402 set :meetTarget.1:mg :unpackCfg:mg
  1403 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+ 1404 set :meetTarget:block :unpackCfg:type
+ 1405 set :meetTarget:copper :unpackCfg:cu
+ 1406 set :meetTarget:lead :unpackCfg:pb
+ 1407 set :meetTarget:graphite :unpackCfg:gr
+ 1408 set :meetTarget:silicon :unpackCfg:si
+ 1409 set :meetTarget:titanium :unpackCfg:ti
+ 1410 set :meetTarget:metaglass :unpackCfg:mg
+ 1411 set :meetTarget:thorium :unpackCfg:th
  1412 setaddr :meetTarget*retaddr *label359 (h:*label359)
  1413 call *label33 *invalid :meetTarget*retval (m:*label359) (h:*label359)
  1414 label *label359

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-64 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 label *label42
     4 read *tmp114 processor8 "*signature"
     5 jump *label42 notEqual *tmp114 "0:v1"
 
    52 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    53 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    54 label *label51
-    * set :buildFirstTitaniumDrill:cfg "w**5#-#####%)"
    55 set :meetTarget.1:cfg "w**5#-#####%)"
    56 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
    57 call *label38 *invalid :meetTarget.1*retval (m:*label53) (h:*label53)
 
   136 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   137 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   138 label *label65
-    * set :factory :buildBlockFromCfg.1*retval
   139 write :buildBlockFromCfg.1*retval .controller ".factory"
   140 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   141 write 1 .controller ".flareTarget"
   142 write 1 processor1 ".flareTarget"
   143 label *label66
-    * set :setMonoTarget:target 3
   144 write 3 .controller ".monoTarget"
   145 write 3 processor1 ".monoTarget"
   146 label *label67
 
   178 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   179 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   180 label *label77
-    * set .kiln :buildBlockFromCfg.1*retval
   181 write :buildBlockFromCfg.1*retval .controller ".kiln"
   182 set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
   183 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
 
   220 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   221 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   222 label *label86
-    * set :reconstructor :buildBlockFromCfg.1*retval
   223 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   224 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   225 set :buildBlockFromCfg.1:cfg "l/,#U#A7###&="
 
   231 label *label88
   232 set .siliconSurplus 1000
   233 set .metaglassSurplus 200
-    * set :setPolyTarget:target 6
   234 write 6 .controller ".polyTarget"
   235 write 6 processor1 ".polyTarget"
   236 label *label89
 
   264 label *label96
   265 jump *label95 always
   266 label *label97
-    * set :setFlareTarget.1:target 3
   267 write 3 .controller ".flareTarget"
   268 write 3 processor1 ".flareTarget"
   269 label *label99
 
   277 jump *label100 always
   278 label *label102
   279 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   280 write 5 .controller ".monoTarget"
   281 write 5 processor1 ".monoTarget"
   282 label *label104
 
   353 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   354 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   355 label *label115
-    * set :buildRemoteBlock:cfg "z%-AAA##A##%4"
   356 read :buildRemoteBlock:x processor4 ".water2X"
   357 read :buildRemoteBlock:y processor4 ".water2Y"
   358 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
 
   410 jump *label125 equal *tmp228 false
   411 label *label107
   412 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   413 write 1 .controller ".megaTarget"
   414 write 1 processor1 ".megaTarget"
   415 label *label126
 
   436 setaddr :buildBlockFromCfg.1*retaddr *label134 (h:*label134)
   437 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label134) (h:*label134)
   438 label *label134
-    * set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
   439 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   440 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   441 label *label133
 
   827 return :supplyBlockFromCore*retaddr
   828 end
   829 label *label31
-    * set :unpackCfg:index 0
   830 set *tmp314 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp315 :unpackCfg:cfg *tmp314
+  831 read *tmp315 :unpackCfg:cfg 0
   832 op sub *tmp316 *tmp315 35
   833 lookup block :unpackCfg:type *tmp316
   834 set *tmp318 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp319 :unpackCfg:cfg *tmp318
-    * op sub *tmp320 *tmp319 35
+  835 read *tmp319 :unpackCfg:cfg 1
   836 op sub :unpackCfg:x *tmp319 42
   837 set *tmp322 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp323 :unpackCfg:cfg *tmp322
-    * op sub *tmp324 *tmp323 35
+  838 read *tmp323 :unpackCfg:cfg 2
   839 op sub :unpackCfg:y *tmp323 42
   840 set *tmp326 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp327 :unpackCfg:cfg *tmp326
+  841 read *tmp327 :unpackCfg:cfg 3
   842 op sub :unpackCfg:cu *tmp327 35
   843 set *tmp329 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp330 :unpackCfg:cfg *tmp329
+  844 read *tmp330 :unpackCfg:cfg 4
   845 op sub :unpackCfg:pb *tmp330 35
   846 set *tmp332 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp333 :unpackCfg:cfg *tmp332
+  847 read *tmp333 :unpackCfg:cfg 5
   848 op sub :unpackCfg:gr *tmp333 35
   849 set *tmp335 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp336 :unpackCfg:cfg *tmp335
+  850 read *tmp336 :unpackCfg:cfg 6
   851 op sub :unpackCfg:si *tmp336 35
   852 set *tmp338 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp339 :unpackCfg:cfg *tmp338
+  853 read *tmp339 :unpackCfg:cfg 7
   854 op sub :unpackCfg:ti *tmp339 35
   855 set *tmp341 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp342 :unpackCfg:cfg *tmp341
+  856 read *tmp342 :unpackCfg:cfg 8
   857 op sub :unpackCfg:mg *tmp342 35
   858 set *tmp344 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp345 :unpackCfg:cfg *tmp344
+  859 read *tmp345 :unpackCfg:cfg 9
   860 op sub :unpackCfg:th *tmp345 35
   861 set *tmp347 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp348 :unpackCfg:cfg *tmp347
+  862 read *tmp348 :unpackCfg:cfg 10
   863 op sub :unpackCfg:rotation *tmp348 35
-    * op add :unpackCfg:index 11 1
   864 set *tmp353 12
-    * op add :unpackCfg:index 12 1
-    * read *tmp354 :unpackCfg:cfg *tmp353
+  865 read *tmp354 :unpackCfg:cfg 12
   866 op sub :unpackCfg:ind *tmp354 35
   867 label *label239
   868 return :unpackCfg*retaddr
 
   995 label *label280
   996 set *tmp390 100
   997 label *label281
-    * set :supplyBase0:titaniumTrigger *tmp390
   998 sensor *tmp394 .titaniumDrill @titanium
   999 jump *label282 greaterThanEq *tmp394 *tmp390
  1000 jump *label284 notEqual :supplyBase0:supplied false
 
  1025 label *label293
  1026 set *tmp409 @sand
  1027 label *label294
-    * set :supplyBase0:ore *tmp409
  1028 set :mineOre.1:ore *tmp409
  1029 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1030 call *label22 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
  1079 label *label309
  1080 set *tmp422 @sand
  1081 label *label310
-    * set :supplyBase0:ore.1 *tmp422
  1082 set :mineOre.1:ore *tmp422
  1083 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1084 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
 
  1166 write *tmp428 .controller ".smelterTarget"
  1167 op add *tmp429 :meetTarget:metaglass .metaglassSurplus
  1168 write *tmp429 .controller ".kilnTarget"
-    * op add *tmp430 :meetTarget:lead .leadSurplus
  1169 write *tmp425 .controller ".leadReserve"
  1170 op sign *tmp431 :meetTarget:silicon
  1171 op mul *tmp432 *tmp431 20
 
  1269 setaddr :unpackCfg*retaddr *label350 (h:*label350)
  1270 call *label31 *invalid :unpackCfg*retval (m:*label350) (h:*label350)
  1271 label *label350
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
  1272 set :buildBlock:block :unpackCfg:type
  1273 set :buildBlock:x :buildRemoteBlock:x
  1274 set :buildBlock:y :buildRemoteBlock:y
 
  1299 setaddr :unpackCfg*retaddr *label353 (h:*label353)
  1300 call *label31 *invalid :unpackCfg*retval (m:*label353) (h:*label353)
  1301 label *label353
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
  1302 op add *tmp471 .coreX :unpackCfg:x
  1303 op add *tmp472 .coreY :unpackCfg:y
  1304 set :buildBlock:block :unpackCfg:type
 
  1337 setaddr :unpackCfg*retaddr *label358 (h:*label358)
  1338 call *label31 *invalid :unpackCfg*retval (m:*label358) (h:*label358)
  1339 label *label358
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
  1340 set :meetTarget:block :unpackCfg:type
  1341 set :meetTarget:copper :unpackCfg:cu
  1342 set :meetTarget:lead :unpackCfg:pb

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-12 instructions):
 
   827 return :supplyBlockFromCore*retaddr
   828 end
   829 label *label31
-    * set *tmp314 0
   830 read *tmp315 :unpackCfg:cfg 0
   831 op sub *tmp316 *tmp315 35
   832 lookup block :unpackCfg:type *tmp316
-    * set *tmp318 1
   833 read *tmp319 :unpackCfg:cfg 1
   834 op sub :unpackCfg:x *tmp319 42
-    * set *tmp322 2
   835 read *tmp323 :unpackCfg:cfg 2
   836 op sub :unpackCfg:y *tmp323 42
-    * set *tmp326 3
   837 read *tmp327 :unpackCfg:cfg 3
   838 op sub :unpackCfg:cu *tmp327 35
-    * set *tmp329 4
   839 read *tmp330 :unpackCfg:cfg 4
   840 op sub :unpackCfg:pb *tmp330 35
-    * set *tmp332 5
   841 read *tmp333 :unpackCfg:cfg 5
   842 op sub :unpackCfg:gr *tmp333 35
-    * set *tmp335 6
   843 read *tmp336 :unpackCfg:cfg 6
   844 op sub :unpackCfg:si *tmp336 35
-    * set *tmp338 7
   845 read *tmp339 :unpackCfg:cfg 7
   846 op sub :unpackCfg:ti *tmp339 35
-    * set *tmp341 8
   847 read *tmp342 :unpackCfg:cfg 8
   848 op sub :unpackCfg:mg *tmp342 35
-    * set *tmp344 9
   849 read *tmp345 :unpackCfg:cfg 9
   850 op sub :unpackCfg:th *tmp345 35
-    * set *tmp347 10
   851 read *tmp348 :unpackCfg:cfg 10
   852 op sub :unpackCfg:rotation *tmp348 35
-    * set *tmp353 12
   853 read *tmp354 :unpackCfg:cfg 12
   854 op sub :unpackCfg:ind *tmp354 35
   855 label *label239

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   533 setaddr :status3*retaddr *label158 (h:*label158)
   534 call *label11 *invalid :status3*retval (m:*label158) (h:*label158)
   535 label *label158
+  536 op sub *tmp244 :moveTo:radius 0.5
   537 label *label159
   538 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
   539 jump *label161 notEqual *tmp242 false
-    * op sub *tmp244 :moveTo:radius 0.5
   540 ucontrol approach :moveTo:x :moveTo:y *tmp244
   541 label *label160
   542 jump *label159 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   395 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   396 label *label122
   397 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label123 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label123
-    * label *label124
+  398 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   399 write .thoriumDrill processor1 ".thoriumDrill"
   400 write .thoriumContainer processor1 ".thoriumContainer"
   401 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
  1004 label *label292
  1005 sensor :supplyBase0:coal .core @coal
  1006 sensor :supplyBase0:sand .core @sand
-    * jump *label293 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp409 @coal
-    * jump *label294 always
-    * label *label293
-    * set *tmp409 @sand
-    * label *label294
+ 1007 select *tmp409 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
  1008 set :mineOre.1:ore *tmp409
  1009 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1010 call *label22 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
  1053 label *label308
  1054 sensor :supplyBase0:coal.1 .core @coal
  1055 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label309 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp422 @coal
-    * jump *label310 always
-    * label *label309
-    * set *tmp422 @sand
-    * label *label310
+ 1056 select *tmp422 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
  1057 set :mineOre.1:ore *tmp422
  1058 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1059 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   971 label *label275
   972 label *label256
   973 label *label257
+  974 set *tmp390 100
   975 sensor *tmp388 .core @titanium
-    * jump *label280 greaterThanEq *tmp388 .targetTitanium
+  976 jump *label281 greaterThanEq *tmp388 .targetTitanium
   977 sensor *tmp391 .core @titanium
   978 op sub *tmp392 .targetTitanium *tmp391
   979 op min *tmp390 7 *tmp392
   980 jump *label281 always
-    * label *label280
-    * set *tmp390 100
   981 label *label281
   982 sensor *tmp394 .titaniumDrill @titanium
   983 jump *label282 greaterThanEq *tmp394 *tmp390

Modifications by Unroll iteration loop at CoreBuilder.mnd:197:5 (-2 instructions):
 
  1084 end
  1085 label *label33
  1086 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp423 *label318
-    * jump *label315 always
-    * multilabel *label318 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp423 *label319
-    * jump *label315 always
-    * multilabel *label319 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp423 *label320
-    * jump *label315 always
-    * multilabel *label320 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp423 *label321
-    * jump *label315 always
-    * multilabel *label321 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp423 *label322
-    * jump *label315 always
-    * multilabel *label322 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp423 *label323
-    * jump *label315 always
-    * multilabel *label323 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp423 *label324
-    * label *label315
-    * op sign *tmp424 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label316
-    * multijump *tmp423 0 0 (m:marker0)
-    * multilabel *label324 (m:marker0)
-    * label *label317
+ 1087 set :meetTarget:t :meetTarget:copper
+ 1088 label *label375
+ 1089 op sign *tmp424 :meetTarget:t
+ 1090 op add :meetTarget:count :meetTarget:count *tmp424
+ 1091 label *label376
+ 1092 set :meetTarget:t :meetTarget:lead
+ 1093 label *label379
+ 1094 op sign *tmp424 :meetTarget:t
+ 1095 op add :meetTarget:count :meetTarget:count *tmp424
+ 1096 label *label380
+ 1097 set :meetTarget:t :meetTarget:graphite
+ 1098 label *label383
+ 1099 op sign *tmp424 :meetTarget:t
+ 1100 op add :meetTarget:count :meetTarget:count *tmp424
+ 1101 label *label384
+ 1102 set :meetTarget:t :meetTarget:silicon
+ 1103 label *label387
+ 1104 op sign *tmp424 :meetTarget:t
+ 1105 op add :meetTarget:count :meetTarget:count *tmp424
+ 1106 label *label388
+ 1107 set :meetTarget:t :meetTarget:titanium
+ 1108 label *label391
+ 1109 op sign *tmp424 :meetTarget:t
+ 1110 op add :meetTarget:count :meetTarget:count *tmp424
+ 1111 label *label392
+ 1112 set :meetTarget:t :meetTarget:metaglass
+ 1113 label *label395
+ 1114 op sign *tmp424 :meetTarget:t
+ 1115 op add :meetTarget:count :meetTarget:count *tmp424
+ 1116 label *label396
+ 1117 set :meetTarget:t :meetTarget:thorium
+ 1118 label *label399
+ 1119 op sign *tmp424 :meetTarget:t
+ 1120 op add :meetTarget:count :meetTarget:count *tmp424
+ 1121 label *label400
+ 1122 label *label317
  1123 write :meetTarget:count .display ".totalTargets"
  1124 write :meetTarget:block .display ".nextBlock"
  1125 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   395 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   396 label *label122
   397 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  398 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   399 write .thoriumDrill processor1 ".thoriumDrill"
   400 write .thoriumContainer processor1 ".thoriumContainer"
   401 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
  1086 set :meetTarget:count 0
  1087 set :meetTarget:t :meetTarget:copper
  1088 label *label375
-    * op sign *tmp424 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp424
+ 1089 op sign *tmp424 :meetTarget:copper
+ 1090 op add :meetTarget:count 0 *tmp424
  1091 label *label376
  1092 set :meetTarget:t :meetTarget:lead
  1093 label *label379
-    * op sign *tmp424 :meetTarget:t
+ 1094 op sign *tmp424 :meetTarget:lead
  1095 op add :meetTarget:count :meetTarget:count *tmp424
  1096 label *label380
  1097 set :meetTarget:t :meetTarget:graphite
  1098 label *label383
-    * op sign *tmp424 :meetTarget:t
+ 1099 op sign *tmp424 :meetTarget:graphite
  1100 op add :meetTarget:count :meetTarget:count *tmp424
  1101 label *label384
  1102 set :meetTarget:t :meetTarget:silicon
  1103 label *label387
-    * op sign *tmp424 :meetTarget:t
+ 1104 op sign *tmp424 :meetTarget:silicon
  1105 op add :meetTarget:count :meetTarget:count *tmp424
  1106 label *label388
  1107 set :meetTarget:t :meetTarget:titanium
  1108 label *label391
-    * op sign *tmp424 :meetTarget:t
+ 1109 op sign *tmp424 :meetTarget:titanium
  1110 op add :meetTarget:count :meetTarget:count *tmp424
  1111 label *label392
  1112 set :meetTarget:t :meetTarget:metaglass
  1113 label *label395
-    * op sign *tmp424 :meetTarget:t
+ 1114 op sign *tmp424 :meetTarget:metaglass
  1115 op add :meetTarget:count :meetTarget:count *tmp424
  1116 label *label396
  1117 set :meetTarget:t :meetTarget:thorium
  1118 label *label399
-    * op sign *tmp424 :meetTarget:t
+ 1119 op sign *tmp424 :meetTarget:thorium
  1120 op add :meetTarget:count :meetTarget:count *tmp424
  1121 label *label400
  1122 label *label317

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   394 setaddr :buildRemoteBlock*retaddr *label122 (h:*label122)
   395 call *label35 *invalid :buildRemoteBlock*retval (m:*label122) (h:*label122)
   396 label *label122
-    * set .thoriumContainer :buildRemoteBlock*retval
   397 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   398 write .thoriumDrill processor1 ".thoriumDrill"
   399 write .thoriumContainer processor1 ".thoriumContainer"
 
  1082 return :supplyBase*retaddr
  1083 end
  1084 label *label33
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1085 label *label375
  1086 op sign *tmp424 :meetTarget:copper
  1087 op add :meetTarget:count 0 *tmp424
  1088 label *label376
-    * set :meetTarget:t :meetTarget:lead
  1089 label *label379
  1090 op sign *tmp424 :meetTarget:lead
  1091 op add :meetTarget:count :meetTarget:count *tmp424
  1092 label *label380
-    * set :meetTarget:t :meetTarget:graphite
  1093 label *label383
  1094 op sign *tmp424 :meetTarget:graphite
  1095 op add :meetTarget:count :meetTarget:count *tmp424
  1096 label *label384
-    * set :meetTarget:t :meetTarget:silicon
  1097 label *label387
  1098 op sign *tmp424 :meetTarget:silicon
  1099 op add :meetTarget:count :meetTarget:count *tmp424
  1100 label *label388
-    * set :meetTarget:t :meetTarget:titanium
  1101 label *label391
  1102 op sign *tmp424 :meetTarget:titanium
  1103 op add :meetTarget:count :meetTarget:count *tmp424
  1104 label *label392
-    * set :meetTarget:t :meetTarget:metaglass
  1105 label *label395
  1106 op sign *tmp424 :meetTarget:metaglass
  1107 op add :meetTarget:count :meetTarget:count *tmp424
  1108 label *label396
-    * set :meetTarget:t :meetTarget:thorium
  1109 label *label399
  1110 op sign *tmp424 :meetTarget:thorium
  1111 op add :meetTarget:count :meetTarget:count *tmp424

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   495 label *label147
   496 label *label140
   497 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label152
-    * return :status1*retaddr
-    * end
   498 label *label10
   499 write :status2:text .display ".status2"
   500 write :status2:item .display ".item2"
 
   853 write *tmp358 processor8 ".sandTarget"
   854 jump *label241 equal .thoriumContainer false
   855 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label244 (h:*label244)
-    * call *label9 *invalid :status1*retval (m:*label244) (h:*label244)
-    * label *label244
+  856 label *label404
+  857 write :status1:text .display ".status1"
+  858 label *label405
   859 sensor *tmp360 .core @coal
   860 jump *label245 greaterThanEq *tmp360 50
   861 set :supplyBlock:block .thoriumGenerator
 
   882 read *tmp101 .controller ".monos"
   883 jump *label250 lessThanEq *tmp101 3
   884 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label253 (h:*label253)
-    * call *label9 *invalid :status1*retval (m:*label253) (h:*label253)
-    * label *label253
+  885 label *label406
+  886 write :status1:text .display ".status1"
+  887 label *label407
   888 set :mineOre.1:ore @coal
   889 setaddr :mineOre.1*retaddr *label254 (h:*label254)
   890 call *label22 *invalid :mineOre.1*retval (m:*label254) (h:*label254)
 
   899 sensor *tmp370 .press @coal
   900 jump *label260 greaterThanEq *tmp370 5
   901 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label262 (h:*label262)
-    * call *label9 *invalid :status1*retval (m:*label262) (h:*label262)
-    * label *label262
+  902 label *label408
+  903 write :status1:text .display ".status1"
+  904 label *label409
   905 set :supplyBlock:block .press
   906 set :supplyBlock:ore @coal
   907 setaddr :supplyBlock*retaddr *label263 (h:*label263)
 
   917 sensor *tmp376 .smelter @coal
   918 jump *label266 greaterThanEq *tmp376 5
   919 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label268 (h:*label268)
-    * call *label9 *invalid :status1*retval (m:*label268) (h:*label268)
-    * label *label268
+  920 label *label410
+  921 write :status1:text .display ".status1"
+  922 label *label411
   923 set :supplyBlock:block .smelter
   924 set :supplyBlock:ore @coal
   925 setaddr :supplyBlock*retaddr *label269 (h:*label269)
 
   931 sensor *tmp379 .smelter @sand
   932 jump *label270 greaterThanEq *tmp379 5
   933 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label272 (h:*label272)
-    * call *label9 *invalid :status1*retval (m:*label272) (h:*label272)
-    * label *label272
+  934 label *label412
+  935 write :status1:text .display ".status1"
+  936 label *label413
   937 set :supplyBlock:block .smelter
   938 set :supplyBlock:ore @sand
   939 setaddr :supplyBlock*retaddr *label273 (h:*label273)
 
   950 sensor *tmp385 .generator @coal
   951 jump *label276 greaterThanEq *tmp385 2
   952 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label278 (h:*label278)
-    * call *label9 *invalid :status1*retval (m:*label278) (h:*label278)
-    * label *label278
+  953 label *label414
+  954 write :status1:text .display ".status1"
+  955 label *label415
   956 set :supplyBlock:block .generator
   957 set :supplyBlock:ore @coal
   958 setaddr :supplyBlock*retaddr *label279 (h:*label279)
 
   980 op mul *tmp400 .unloader1 .powerTarget
   981 jump *label286 greaterThanEq *tmp399 *tmp400
   982 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label288 (h:*label288)
-    * call *label9 *invalid :status1*retval (m:*label288) (h:*label288)
-    * label *label288
+  983 label *label416
+  984 write :status1:text .display ".status1"
+  985 label *label417
   986 set :mineOre.1:ore @coal
   987 setaddr :mineOre.1*retaddr *label289 (h:*label289)
   988 call *label22 *invalid :mineOre.1*retval (m:*label289) (h:*label289)
 
   992 sensor *tmp403 .core @silicon
   993 jump *label290 greaterThanEq *tmp403 .targetSilicon
   994 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label292 (h:*label292)
-    * call *label9 *invalid :status1*retval (m:*label292) (h:*label292)
-    * label *label292
+  995 label *label418
+  996 write :status1:text .display ".status1"
+  997 label *label419
   998 sensor :supplyBase0:coal .core @coal
   999 sensor :supplyBase0:sand .core @sand
  1000 select *tmp409 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
  1007 sensor *tmp410 .core @copper
  1008 jump *label296 greaterThanEq *tmp410 .targetCopper
  1009 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label298 (h:*label298)
-    * call *label9 *invalid :status1*retval (m:*label298) (h:*label298)
-    * label *label298
+ 1010 label *label420
+ 1011 write :status1:text .display ".status1"
+ 1012 label *label421
  1013 set :mineOre.1:ore @copper
  1014 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1015 call *label22 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
 
  1019 sensor *tmp413 .core @lead
  1020 jump *label300 greaterThanEq *tmp413 .targetLead
  1021 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label302 (h:*label302)
-    * call *label9 *invalid :status1*retval (m:*label302) (h:*label302)
-    * label *label302
+ 1022 label *label422
+ 1023 write :status1:text .display ".status1"
+ 1024 label *label423
  1025 set :mineOre.1:ore @lead
  1026 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1027 call *label22 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
 
  1031 sensor *tmp416 .core @metaglass
  1032 jump *label304 greaterThanEq *tmp416 .targetMetaglass
  1033 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label306 (h:*label306)
-    * call *label9 *invalid :status1*retval (m:*label306) (h:*label306)
-    * label *label306
+ 1034 label *label424
+ 1035 write :status1:text .display ".status1"
+ 1036 label *label425
  1037 set :mineOre.1:ore @sand
  1038 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1039 call *label22 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
 
  1041 jump *label305 always
  1042 label *label304
  1043 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label308 (h:*label308)
-    * call *label9 *invalid :status1*retval (m:*label308) (h:*label308)
-    * label *label308
+ 1044 label *label426
+ 1045 write :status1:text .display ".status1"
+ 1046 label *label427
  1047 sensor :supplyBase0:coal.1 .core @coal
  1048 sensor :supplyBase0:sand.1 .core @sand
  1049 select *tmp422 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
  1061 jump *label283 always
  1062 label *label282
  1063 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label312 (h:*label312)
-    * call *label9 *invalid :status1*retval (m:*label312) (h:*label312)
-    * label *label312
+ 1064 label *label428
+ 1065 write :status1:text .display ".status1"
+ 1066 label *label429
  1067 set :fetchBlock:block .titaniumDrill
  1068 set :fetchBlock:item @titanium
  1069 setaddr :fetchBlock*retaddr *label313 (h:*label313)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   854 jump *label241 equal .thoriumContainer false
   855 set :status1:text "Phase 2: servicing thorium drill"
   856 label *label404
-    * write :status1:text .display ".status1"
+  857 write "Phase 2: servicing thorium drill" .display ".status1"
   858 label *label405
   859 sensor *tmp360 .core @coal
   860 jump *label245 greaterThanEq *tmp360 50
 
   883 jump *label250 lessThanEq *tmp101 3
   884 set :status1:text "Phase 1: supplying base"
   885 label *label406
-    * write :status1:text .display ".status1"
+  886 write "Phase 1: supplying base" .display ".status1"
   887 label *label407
   888 set :mineOre.1:ore @coal
   889 setaddr :mineOre.1*retaddr *label254 (h:*label254)
 
   900 jump *label260 greaterThanEq *tmp370 5
   901 set :status1:text "Goal 1: graphite requirement"
   902 label *label408
-    * write :status1:text .display ".status1"
+  903 write "Goal 1: graphite requirement" .display ".status1"
   904 label *label409
   905 set :supplyBlock:block .press
   906 set :supplyBlock:ore @coal
 
   918 jump *label266 greaterThanEq *tmp376 5
   919 set :status1:text "Goal 2: coal for silicon requirement"
   920 label *label410
-    * write :status1:text .display ".status1"
+  921 write "Goal 2: coal for silicon requirement" .display ".status1"
   922 label *label411
   923 set :supplyBlock:block .smelter
   924 set :supplyBlock:ore @coal
 
   932 jump *label270 greaterThanEq *tmp379 5
   933 set :status1:text "Goal 3: sand for silicon requirement"
   934 label *label412
-    * write :status1:text .display ".status1"
+  935 write "Goal 3: sand for silicon requirement" .display ".status1"
   936 label *label413
   937 set :supplyBlock:block .smelter
   938 set :supplyBlock:ore @sand
 
   951 jump *label276 greaterThanEq *tmp385 2
   952 set :status1:text "Goal 4: supplying generator"
   953 label *label414
-    * write :status1:text .display ".status1"
+  954 write "Goal 4: supplying generator" .display ".status1"
   955 label *label415
   956 set :supplyBlock:block .generator
   957 set :supplyBlock:ore @coal
 
   981 jump *label286 greaterThanEq *tmp399 *tmp400
   982 set :status1:text "Goal 5: supplying generator"
   983 label *label416
-    * write :status1:text .display ".status1"
+  984 write "Goal 5: supplying generator" .display ".status1"
   985 label *label417
   986 set :mineOre.1:ore @coal
   987 setaddr :mineOre.1*retaddr *label289 (h:*label289)
 
   993 jump *label290 greaterThanEq *tmp403 .targetSilicon
   994 set :status1:text "Goal 6: silicon requirement"
   995 label *label418
-    * write :status1:text .display ".status1"
+  996 write "Goal 6: silicon requirement" .display ".status1"
   997 label *label419
   998 sensor :supplyBase0:coal .core @coal
   999 sensor :supplyBase0:sand .core @sand
 
  1008 jump *label296 greaterThanEq *tmp410 .targetCopper
  1009 set :status1:text "Goal 7: copper requirement"
  1010 label *label420
-    * write :status1:text .display ".status1"
+ 1011 write "Goal 7: copper requirement" .display ".status1"
  1012 label *label421
  1013 set :mineOre.1:ore @copper
  1014 setaddr :mineOre.1*retaddr *label299 (h:*label299)
 
  1020 jump *label300 greaterThanEq *tmp413 .targetLead
  1021 set :status1:text "Goal 8: lead requirement"
  1022 label *label422
-    * write :status1:text .display ".status1"
+ 1023 write "Goal 8: lead requirement" .display ".status1"
  1024 label *label423
  1025 set :mineOre.1:ore @lead
  1026 setaddr :mineOre.1*retaddr *label303 (h:*label303)
 
  1032 jump *label304 greaterThanEq *tmp416 .targetMetaglass
  1033 set :status1:text "Goal 9: metaglass requirement"
  1034 label *label424
-    * write :status1:text .display ".status1"
+ 1035 write "Goal 9: metaglass requirement" .display ".status1"
  1036 label *label425
  1037 set :mineOre.1:ore @sand
  1038 setaddr :mineOre.1*retaddr *label307 (h:*label307)
 
  1042 label *label304
  1043 set :status1:text "Goal 10: supplying base"
  1044 label *label426
-    * write :status1:text .display ".status1"
+ 1045 write "Goal 10: supplying base" .display ".status1"
  1046 label *label427
  1047 sensor :supplyBase0:coal.1 .core @coal
  1048 sensor :supplyBase0:sand.1 .core @sand
 
  1062 label *label282
  1063 set :status1:text "Goal 11: Fetching titanium"
  1064 label *label428
-    * write :status1:text .display ".status1"
+ 1065 write "Goal 11: Fetching titanium" .display ".status1"
  1066 label *label429
  1067 set :fetchBlock:block .titaniumDrill
  1068 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   852 op max *tmp358 0 *tmp357
   853 write *tmp358 processor8 ".sandTarget"
   854 jump *label241 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   855 label *label404
   856 write "Phase 2: servicing thorium drill" .display ".status1"
   857 label *label405
 
   880 label *label241
   881 read *tmp101 .controller ".monos"
   882 jump *label250 lessThanEq *tmp101 3
-    * set :status1:text "Phase 1: supplying base"
   883 label *label406
   884 write "Phase 1: supplying base" .display ".status1"
   885 label *label407
 
   896 jump *label258 greaterThanEq *tmp367 .targetGraphite
   897 sensor *tmp370 .press @coal
   898 jump *label260 greaterThanEq *tmp370 5
-    * set :status1:text "Goal 1: graphite requirement"
   899 label *label408
   900 write "Goal 1: graphite requirement" .display ".status1"
   901 label *label409
 
   913 jump *label264 greaterThanEq *tmp373 .targetSilicon
   914 sensor *tmp376 .smelter @coal
   915 jump *label266 greaterThanEq *tmp376 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   916 label *label410
   917 write "Goal 2: coal for silicon requirement" .display ".status1"
   918 label *label411
 
   926 label *label266
   927 sensor *tmp379 .smelter @sand
   928 jump *label270 greaterThanEq *tmp379 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   929 label *label412
   930 write "Goal 3: sand for silicon requirement" .display ".status1"
   931 label *label413
 
   944 jump *label274 greaterThanEq *tmp382 .powerTarget
   945 sensor *tmp385 .generator @coal
   946 jump *label276 greaterThanEq *tmp385 2
-    * set :status1:text "Goal 4: supplying generator"
   947 label *label414
   948 write "Goal 4: supplying generator" .display ".status1"
   949 label *label415
 
   973 sensor *tmp399 .battery @totalPower
   974 op mul *tmp400 .unloader1 .powerTarget
   975 jump *label286 greaterThanEq *tmp399 *tmp400
-    * set :status1:text "Goal 5: supplying generator"
   976 label *label416
   977 write "Goal 5: supplying generator" .display ".status1"
   978 label *label417
 
   984 label *label286
   985 sensor *tmp403 .core @silicon
   986 jump *label290 greaterThanEq *tmp403 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   987 label *label418
   988 write "Goal 6: silicon requirement" .display ".status1"
   989 label *label419
 
   998 label *label290
   999 sensor *tmp410 .core @copper
  1000 jump *label296 greaterThanEq *tmp410 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
  1001 label *label420
  1002 write "Goal 7: copper requirement" .display ".status1"
  1003 label *label421
 
  1009 label *label296
  1010 sensor *tmp413 .core @lead
  1011 jump *label300 greaterThanEq *tmp413 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
  1012 label *label422
  1013 write "Goal 8: lead requirement" .display ".status1"
  1014 label *label423
 
  1020 label *label300
  1021 sensor *tmp416 .core @metaglass
  1022 jump *label304 greaterThanEq *tmp416 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
  1023 label *label424
  1024 write "Goal 9: metaglass requirement" .display ".status1"
  1025 label *label425
 
  1029 label *label307
  1030 jump *label305 always
  1031 label *label304
-    * set :status1:text "Goal 10: supplying base"
  1032 label *label426
  1033 write "Goal 10: supplying base" .display ".status1"
  1034 label *label427
 
  1048 label *label285
  1049 jump *label283 always
  1050 label *label282
-    * set :status1:text "Goal 11: Fetching titanium"
  1051 label *label428
  1052 write "Goal 11: Fetching titanium" .display ".status1"
  1053 label *label429

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
   502 label *label153
   503 return :status2*retaddr
   504 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label154
-    * return :status3*retaddr
-    * end
   505 label *label12
   506 write :transportStatus:target .display ".transportTarget"
   507 write :transportStatus:item .display ".transportItem"
 
   516 end
   517 label *label14
   518 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label158 (h:*label158)
-    * call *label11 *invalid :status3*retval (m:*label158) (h:*label158)
-    * label *label158
+  519 label *label430
+  520 write :status3:text .display ".status3"
+  521 label *label431
   522 op sub *tmp244 :moveTo:radius 0.5
   523 label *label159
   524 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
 
   532 end
   533 label *label16
   534 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label165 (h:*label165)
-    * call *label11 *invalid :status3*retval (m:*label165) (h:*label165)
-    * label *label165
+  535 label *label432
+  536 write :status3:text .display ".status3"
+  537 label *label433
   538 label *label166
   539 sensor *tmp247 @unit @firstItem
   540 jump *label169 equal *tmp247 null
 
   574 end
   575 label *label19
   576 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label178 (h:*label178)
-    * call *label11 *invalid :status3*retval (m:*label178) (h:*label178)
-    * label *label178
+  577 label *label434
+  578 write :status3:text .display ".status3"
+  579 label *label435
   580 sensor *tmp256 @unit @firstItem
   581 jump *label179 notEqual *tmp256 :depositItems:item
   582 set :moveToBlock:block :depositItems:block
 
   649 label *label197
   650 label *label198
   651 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label200 (h:*label200)
-    * call *label11 *invalid :status3*retval (m:*label200) (h:*label200)
-    * label *label200
+  652 label *label436
+  653 write :status3:text .display ".status3"
+  654 label *label437
   655 op add :mineOre:stop @second 10
   656 label *label201
   657 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   517 label *label14
   518 set :status3:text "Moving..."
   519 label *label430
-    * write :status3:text .display ".status3"
+  520 write "Moving..." .display ".status3"
   521 label *label431
   522 op sub *tmp244 :moveTo:radius 0.5
   523 label *label159
 
   533 label *label16
   534 set :status3:text "Moving..."
   535 label *label432
-    * write :status3:text .display ".status3"
+  536 write "Moving..." .display ".status3"
   537 label *label433
   538 label *label166
   539 sensor *tmp247 @unit @firstItem
 
   575 label *label19
   576 set :status3:text "Depositing..."
   577 label *label434
-    * write :status3:text .display ".status3"
+  578 write "Depositing..." .display ".status3"
   579 label *label435
   580 sensor *tmp256 @unit @firstItem
   581 jump *label179 notEqual *tmp256 :depositItems:item
 
   650 label *label198
   651 set :status3:text "Mining..."
   652 label *label436
-    * write :status3:text .display ".status3"
+  653 write "Mining..." .display ".status3"
   654 label *label437
   655 op add :mineOre:stop @second 10
   656 label *label201

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   515 return :error*retaddr
   516 end
   517 label *label14
-    * set :status3:text "Moving..."
   518 label *label430
   519 write "Moving..." .display ".status3"
   520 label *label431
 
   530 return :moveTo*retaddr
   531 end
   532 label *label16
-    * set :status3:text "Moving..."
   533 label *label432
   534 write "Moving..." .display ".status3"
   535 label *label433
 
   571 return :moveToBlock*retaddr
   572 end
   573 label *label19
-    * set :status3:text "Depositing..."
   574 label *label434
   575 write "Depositing..." .display ".status3"
   576 label *label435
 
   645 label *label199
   646 label *label197
   647 label *label198
-    * set :status3:text "Mining..."
   648 label *label436
   649 write "Mining..." .display ".status3"
   650 label *label437

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
   514 label *label156
   515 return :error*retaddr
   516 end
-    * label *label14
-    * label *label430
-    * write "Moving..." .display ".status3"
-    * label *label431
-    * op sub *tmp244 :moveTo:radius 0.5
-    * label *label159
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
-    * jump *label161 notEqual *tmp242 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp244
-    * label *label160
-    * jump *label159 always
-    * label *label161
-    * label *label157
-    * return :moveTo*retaddr
-    * end
   517 label *label16
   518 label *label432
   519 write "Moving..." .display ".status3"
 
   549 set :moveTo:x *tmp254
   550 set :moveTo:y *tmp255
   551 set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label176 (h:*label176)
-    * call *label14 *invalid :moveTo*retval (m:*label176) (h:*label176)
-    * label *label176
+  552 label *label438
+  553 label *label439
+  554 write "Moving..." .display ".status3"
+  555 label *label440
+  556 op sub *tmp244 :moveTo:radius 0.5
+  557 label *label441
+  558 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
+  559 jump *label443 notEqual *tmp242 false
+  560 ucontrol approach :moveTo:x :moveTo:y *tmp244
+  561 label *label442
+  562 jump *label441 always
+  563 label *label443
+  564 label *label444
   565 label *label175
   566 return :moveToBlock*retaddr
   567 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   553 label *label439
   554 write "Moving..." .display ".status3"
   555 label *label440
-    * op sub *tmp244 :moveTo:radius 0.5
+  556 op sub *tmp244 :moveToBlock:radius 0.5
   557 label *label441
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp242
+  558 ucontrol within *tmp254 *tmp255 :moveToBlock:radius *tmp242
   559 jump *label443 notEqual *tmp242 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp244
+  560 ucontrol approach *tmp254 *tmp255 *tmp244
   561 label *label442
   562 jump *label441 always
   563 label *label443

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   546 label *label18
   547 sensor *tmp254 :moveToBlock:block @x
   548 sensor *tmp255 :moveToBlock:block @y
-    * set :moveTo:x *tmp254
-    * set :moveTo:y *tmp255
-    * set :moveTo:radius :moveToBlock:radius
   549 label *label438
   550 label *label439
   551 write "Moving..." .display ".status3"

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
   543 label *label171
   544 return :dropAll*retaddr
   545 end
-    * label *label18
-    * sensor *tmp254 :moveToBlock:block @x
-    * sensor *tmp255 :moveToBlock:block @y
-    * label *label438
-    * label *label439
-    * write "Moving..." .display ".status3"
-    * label *label440
-    * op sub *tmp244 :moveToBlock:radius 0.5
-    * label *label441
-    * ucontrol within *tmp254 *tmp255 :moveToBlock:radius *tmp242
-    * jump *label443 notEqual *tmp242 false
-    * ucontrol approach *tmp254 *tmp255 *tmp244
-    * label *label442
-    * jump *label441 always
-    * label *label443
-    * label *label444
-    * label *label175
-    * return :moveToBlock*retaddr
-    * end
   546 label *label19
   547 label *label434
   548 write "Depositing..." .display ".status3"
 
   551 jump *label179 notEqual *tmp256 :depositItems:item
   552 set :moveToBlock:block :depositItems:block
   553 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label181 (h:*label181)
-    * call *label18 *invalid :moveToBlock*retval (m:*label181) (h:*label181)
-    * label *label181
+  554 label *label445
+  555 sensor *tmp254 :moveToBlock:block @x
+  556 sensor *tmp255 :moveToBlock:block @y
+  557 label *label446
+  558 label *label447
+  559 write "Moving..." .display ".status3"
+  560 label *label448
+  561 op sub *tmp244 :moveToBlock:radius 0.5
+  562 label *label449
+  563 ucontrol within *tmp254 *tmp255 :moveToBlock:radius *tmp242
+  564 jump *label451 notEqual *tmp242 false
+  565 ucontrol approach *tmp254 *tmp255 *tmp244
+  566 label *label450
+  567 jump *label449 always
+  568 label *label451
+  569 label *label452
+  570 label *label453
   571 sensor :depositItems:cap :depositItems:block @itemCapacity
   572 label *label182
   573 ucontrol itemDrop :depositItems:block 30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   552 set :moveToBlock:block :depositItems:block
   553 set :moveToBlock:radius 6
   554 label *label445
-    * sensor *tmp254 :moveToBlock:block @x
-    * sensor *tmp255 :moveToBlock:block @y
+  555 sensor *tmp254 :depositItems:block @x
+  556 sensor *tmp255 :depositItems:block @y
   557 label *label446
   558 label *label447
   559 write "Moving..." .display ".status3"
   560 label *label448
-    * op sub *tmp244 :moveToBlock:radius 0.5
+  561 op sub *tmp244 6 0.5
   562 label *label449
-    * ucontrol within *tmp254 *tmp255 :moveToBlock:radius *tmp242
+  563 ucontrol within *tmp254 *tmp255 6 *tmp242
   564 jump *label451 notEqual *tmp242 false
-    * ucontrol approach *tmp254 *tmp255 *tmp244
+  565 ucontrol approach *tmp254 *tmp255 5.5
   566 label *label450
   567 jump *label449 always
   568 label *label451

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   549 label *label435
   550 sensor *tmp256 @unit @firstItem
   551 jump *label179 notEqual *tmp256 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   552 label *label445
   553 sensor *tmp254 :depositItems:block @x
   554 sensor *tmp255 :depositItems:block @y
 
   556 label *label447
   557 write "Moving..." .display ".status3"
   558 label *label448
-    * op sub *tmp244 6 0.5
   559 label *label449
   560 ucontrol within *tmp254 *tmp255 6 *tmp242
   561 jump *label451 notEqual *tmp242 false

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   592 label *label177
   593 return :depositItems*retaddr
   594 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
-    * jump *label190 notEqual *tmp266 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label192 (h:*label192)
-    * call *label13 *invalid :error*retval (m:*label192) (h:*label192)
-    * label *label192
-    * label *label190
-    * label *label191
-    * label *label189
-    * return :locateOre*retaddr
-    * end
   595 label *label21
   596 op min :mineOre:amount :mineOre:amount 30
   597 set :transportStatus:target :mineOre:amount
 
   600 call *label12 *invalid :transportStatus*retval (m:*label194) (h:*label194)
   601 label *label194
   602 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label195 (h:*label195)
-    * call *label20 *invalid :locateOre*retval (m:*label195) (h:*label195)
-    * label *label195
+  603 label *label454
+  604 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
+  605 jump *label456 notEqual *tmp266 false
+  606 set :error:error "Cannot locate ore"
+  607 setaddr :error*retaddr *label455 (h:*label455)
+  608 call *label13 *invalid :error*retval (m:*label455) (h:*label455)
+  609 label *label455
+  610 label *label456
+  611 label *label457
+  612 label *label458
   613 set :mineOre:x :locateOre:x
   614 set :mineOre:y :locateOre:y
   615 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   601 label *label194
   602 set :locateOre:ore :mineOre:ore
   603 label *label454
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
+  604 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   605 jump *label456 notEqual *tmp266 false
   606 set :error:error "Cannot locate ore"
   607 setaddr :error*retaddr *label455 (h:*label455)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   599 setaddr :transportStatus*retaddr *label194 (h:*label194)
   600 call *label12 *invalid :transportStatus*retval (m:*label194) (h:*label194)
   601 label *label194
-    * set :locateOre:ore :mineOre:ore
   602 label *label454
   603 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   604 jump *label456 notEqual *tmp266 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   740 label *label223
   741 return :supplyBlock*retaddr
   742 end
-    * label *label25
-    * sensor *tmp303 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp303 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label229 (h:*label229)
-    * call *label12 *invalid :transportStatus*retval (m:*label229) (h:*label229)
-    * label *label229
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label230 (h:*label230)
-    * call *label10 *invalid :status2*retval (m:*label230) (h:*label230)
-    * label *label230
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label231 (h:*label231)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label231) (h:*label231)
-    * label *label231
-    * setaddr :dropAll*retaddr *label232 (h:*label232)
-    * call *label17 *invalid :dropAll*retval (m:*label232) (h:*label232)
-    * label *label232
-    * label *label233
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp306 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp307 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp308 *tmp306 *tmp307
-    * jump *label236 equal *tmp308 false
-    * ucontrol itemDrop @air 1000
-    * label *label236
-    * label *label237
-    * label *label234
-    * sensor *tmp310 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp311 *tmp310 30
-    * sensor *tmp312 .core :supplyBlockFromCore:item
-    * op land *tmp313 *tmp311 *tmp312
-    * jump *label233 notEqual *tmp313 false
-    * label *label235
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label238 (h:*label238)
-    * call *label19 *invalid :depositItems*retval (m:*label238) (h:*label238)
-    * label *label238
-    * label *label228
-    * return :supplyBlockFromCore*retaddr
-    * end
   743 label *label31
   744 read *tmp315 :unpackCfg:cfg 0
   745 op sub *tmp316 *tmp315 35
 
   789 label *label245
   790 set :supplyBlockFromCore:target .thoriumGenerator
   791 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label248 (h:*label248)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label248) (h:*label248)
-    * label *label248
+  792 label *label459
+  793 sensor *tmp303 :supplyBlockFromCore:target @itemCapacity
+  794 op min :transportStatus:target *tmp303 30
+  795 set :transportStatus:item :supplyBlockFromCore:item
+  796 setaddr :transportStatus*retaddr *label460 (h:*label460)
+  797 call *label12 *invalid :transportStatus*retval (m:*label460) (h:*label460)
+  798 label *label460
+  799 set :status2:text "Transferring "
+  800 set :status2:item :supplyBlockFromCore:item
+  801 set :status2:block :supplyBlockFromCore:target
+  802 setaddr :status2*retaddr *label461 (h:*label461)
+  803 call *label10 *invalid :status2*retval (m:*label461) (h:*label461)
+  804 label *label461
+  805 set :moveToEmpty:x .coreX
+  806 set :moveToEmpty:y .coreY
+  807 setaddr :moveToEmpty*retaddr *label462 (h:*label462)
+  808 call *label16 *invalid :moveToEmpty*retval (m:*label462) (h:*label462)
+  809 label *label462
+  810 setaddr :dropAll*retaddr *label463 (h:*label463)
+  811 call *label17 *invalid :dropAll*retval (m:*label463) (h:*label463)
+  812 label *label463
+  813 label *label464
+  814 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  815 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  816 op notEqual *tmp306 :supplyBlockFromCore:unitItem null
+  817 op notEqual *tmp307 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  818 op land *tmp308 *tmp306 *tmp307
+  819 jump *label465 equal *tmp308 false
+  820 ucontrol itemDrop @air 1000
+  821 label *label465
+  822 label *label466
+  823 label *label467
+  824 sensor *tmp310 @unit :supplyBlockFromCore:item
+  825 op lessThan *tmp311 *tmp310 30
+  826 sensor *tmp312 .core :supplyBlockFromCore:item
+  827 op land *tmp313 *tmp311 *tmp312
+  828 jump *label464 notEqual *tmp313 false
+  829 label *label468
+  830 set :depositItems:block :supplyBlockFromCore:target
+  831 set :depositItems:item :supplyBlockFromCore:item
+  832 setaddr :depositItems*retaddr *label469 (h:*label469)
+  833 call *label19 *invalid :depositItems*retval (m:*label469) (h:*label469)
+  834 label *label469
+  835 label *label470
   836 label *label246
   837 set :fetchBlock:block .thoriumContainer
   838 set :fetchBlock:item @thorium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   790 set :supplyBlockFromCore:target .thoriumGenerator
   791 set :supplyBlockFromCore:item @coal
   792 label *label459
-    * sensor *tmp303 :supplyBlockFromCore:target @itemCapacity
+  793 sensor *tmp303 .thoriumGenerator @itemCapacity
   794 op min :transportStatus:target *tmp303 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  795 set :transportStatus:item @coal
   796 setaddr :transportStatus*retaddr *label460 (h:*label460)
   797 call *label12 *invalid :transportStatus*retval (m:*label460) (h:*label460)
   798 label *label460

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
   536 label *label172
   537 sensor *tmp252 @unit @firstItem
   538 jump *label174 equal *tmp252 null
+  539 label *label471
   540 ucontrol itemDrop @air 1000
   541 label *label173
-    * jump *label172 always
+  542 sensor *tmp252 @unit @firstItem
+  543 jump *label471 notEqual *tmp252 null
   544 label *label174
   545 label *label171
   546 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
   561 label *label449
   562 ucontrol within *tmp254 *tmp255 6 *tmp242
   563 jump *label451 notEqual *tmp242 false
+  564 label *label472
   565 ucontrol approach *tmp254 *tmp255 5.5
   566 label *label450
-    * jump *label449 always
+  567 ucontrol within *tmp254 *tmp255 6 *tmp242
+  568 jump *label472 equal *tmp242 false
   569 label *label451
   570 label *label452
   571 label *label453

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   583 label *label185
   584 sensor *tmp264 @unit @firstItem
   585 jump *label187 equal *tmp264 null
+  586 label *label473
   587 ucontrol itemDrop @air 1000
   588 label *label186
-    * jump *label185 always
+  589 sensor *tmp264 @unit @firstItem
+  590 jump *label473 notEqual *tmp264 null
   591 label *label187
   592 label *label180
   593 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
   592 label *label180
   593 set :transportStatus:target 0
   594 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label188 (h:*label188)
-    * call *label12 *invalid :transportStatus*retval (m:*label188) (h:*label188)
-    * label *label188
+  595 label *label474
+  596 write :transportStatus:target .display ".transportTarget"
+  597 write :transportStatus:item .display ".transportItem"
+  598 label *label475
   599 label *label177
   600 return :depositItems*retaddr
   601 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   593 set :transportStatus:target 0
   594 set :transportStatus:item null
   595 label *label474
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  596 write 0 .display ".transportTarget"
+  597 write null .display ".transportItem"
   598 label *label475
   599 label *label177
   600 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   590 jump *label473 notEqual *tmp264 null
   591 label *label187
   592 label *label180
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   593 label *label474
   594 write 0 .display ".transportTarget"
   595 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   502 label *label153
   503 return :status2*retaddr
   504 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label155
-    * return :transportStatus*retaddr
-    * end
   505 label *label13
   506 set .ERROR :error:error
   507 stop
 
   595 op min :mineOre:amount :mineOre:amount 30
   596 set :transportStatus:target :mineOre:amount
   597 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label194 (h:*label194)
-    * call *label12 *invalid :transportStatus*retval (m:*label194) (h:*label194)
-    * label *label194
+  598 label *label476
+  599 write :transportStatus:target .display ".transportTarget"
+  600 write :transportStatus:item .display ".transportItem"
+  601 label *label477
   602 label *label454
   603 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   604 jump *label456 notEqual *tmp266 false
 
   674 sensor *tmp285 :fetchBlock:block @itemCapacity
   675 op min :transportStatus:target *tmp285 30
   676 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label213 (h:*label213)
-    * call *label12 *invalid :transportStatus*retval (m:*label213) (h:*label213)
-    * label *label213
+  677 label *label478
+  678 write :transportStatus:target .display ".transportTarget"
+  679 write :transportStatus:item .display ".transportItem"
+  680 label *label479
   681 set :status2:text "Fetching "
   682 set :status2:item :fetchBlock:item
   683 set :status2:block :fetchBlock:block
 
   794 sensor *tmp303 .thoriumGenerator @itemCapacity
   795 op min :transportStatus:target *tmp303 30
   796 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label460 (h:*label460)
-    * call *label12 *invalid :transportStatus*retval (m:*label460) (h:*label460)
-    * label *label460
+  797 label *label480
+  798 write :transportStatus:target .display ".transportTarget"
+  799 write :transportStatus:item .display ".transportItem"
+  800 label *label481
   801 set :status2:text "Transferring "
   802 set :status2:item :supplyBlockFromCore:item
   803 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   596 set :transportStatus:target :mineOre:amount
   597 set :transportStatus:item :mineOre:ore
   598 label *label476
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  599 write :mineOre:amount .display ".transportTarget"
+  600 write :mineOre:ore .display ".transportItem"
   601 label *label477
   602 label *label454
   603 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
 
   676 set :transportStatus:item :fetchBlock:item
   677 label *label478
   678 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  679 write :fetchBlock:item .display ".transportItem"
   680 label *label479
   681 set :status2:text "Fetching "
   682 set :status2:item :fetchBlock:item
 
   796 set :transportStatus:item @coal
   797 label *label480
   798 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  799 write @coal .display ".transportItem"
   800 label *label481
   801 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  802 set :status2:item @coal
+  803 set :status2:block .thoriumGenerator
   804 setaddr :status2*retaddr *label461 (h:*label461)
   805 call *label10 *invalid :status2*retval (m:*label461) (h:*label461)
   806 label *label461

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   594 label *label21
   595 op min :mineOre:amount :mineOre:amount 30
   596 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   597 label *label476
   598 write :mineOre:amount .display ".transportTarget"
   599 write :mineOre:ore .display ".transportItem"
 
   672 label *label23
   673 sensor *tmp285 :fetchBlock:block @itemCapacity
   674 op min :transportStatus:target *tmp285 30
-    * set :transportStatus:item :fetchBlock:item
   675 label *label478
   676 write :transportStatus:target .display ".transportTarget"
   677 write :fetchBlock:item .display ".transportItem"
 
   791 label *label459
   792 sensor *tmp303 .thoriumGenerator @itemCapacity
   793 op min :transportStatus:target *tmp303 30
-    * set :transportStatus:item @coal
   794 label *label480
   795 write :transportStatus:target .display ".transportTarget"
   796 write @coal .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   679 set :status2:text "Fetching "
   680 set :status2:item :fetchBlock:item
   681 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label214 (h:*label214)
-    * call *label10 *invalid :status2*retval (m:*label214) (h:*label214)
-    * label *label214
+  682 label *label482
+  683 write :status2:text .display ".status2"
+  684 write :status2:item .display ".item2"
+  685 write :status2:block .display ".block2"
+  686 label *label483
   687 sensor *tmp287 :fetchBlock:block @x
   688 sensor *tmp288 :fetchBlock:block @y
   689 set :moveToEmpty:x *tmp287

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   680 set :status2:item :fetchBlock:item
   681 set :status2:block :fetchBlock:block
   682 label *label482
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  683 write "Fetching " .display ".status2"
+  684 write :fetchBlock:item .display ".item2"
+  685 write :fetchBlock:block .display ".block2"
   686 label *label483
   687 sensor *tmp287 :fetchBlock:block @x
   688 sensor *tmp288 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   676 write :transportStatus:target .display ".transportTarget"
   677 write :fetchBlock:item .display ".transportItem"
   678 label *label479
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   679 label *label482
   680 write "Fetching " .display ".status2"
   681 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   495 label *label147
   496 label *label140
   497 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label153
-    * return :status2*retaddr
-    * end
   498 label *label13
   499 set .ERROR :error:error
   500 stop
 
   650 set :status2:text "Mining "
   651 set :status2:item :mineOre.1:ore
   652 set :status2:block "core"
-    * setaddr :status2*retaddr *label210 (h:*label210)
-    * call *label10 *invalid :status2*retval (m:*label210) (h:*label210)
-    * label *label210
+  653 label *label484
+  654 write :status2:text .display ".status2"
+  655 write :status2:item .display ".item2"
+  656 write :status2:block .display ".block2"
+  657 label *label485
   658 set :mineOre:ore :mineOre.1:ore
   659 set :mineOre:amount 30
   660 set :mineOre:block .core
 
   715 set :status2:text "Supplying "
   716 set :status2:item :supplyBlock:ore
   717 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label224 (h:*label224)
-    * call *label10 *invalid :status2*retval (m:*label224) (h:*label224)
-    * label *label224
+  718 label *label486
+  719 write :status2:text .display ".status2"
+  720 write :status2:item .display ".item2"
+  721 write :status2:block .display ".block2"
+  722 label *label487
   723 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   724 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
   725 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
 
   794 set :status2:text "Transferring "
   795 set :status2:item @coal
   796 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label461 (h:*label461)
-    * call *label10 *invalid :status2*retval (m:*label461) (h:*label461)
-    * label *label461
+  797 label *label488
+  798 write :status2:text .display ".status2"
+  799 write :status2:item .display ".item2"
+  800 write :status2:block .display ".block2"
+  801 label *label489
   802 set :moveToEmpty:x .coreX
   803 set :moveToEmpty:y .coreY
   804 setaddr :moveToEmpty*retaddr *label462 (h:*label462)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   651 set :status2:item :mineOre.1:ore
   652 set :status2:block "core"
   653 label *label484
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  654 write "Mining " .display ".status2"
+  655 write :mineOre.1:ore .display ".item2"
+  656 write "core" .display ".block2"
   657 label *label485
   658 set :mineOre:ore :mineOre.1:ore
   659 set :mineOre:amount 30
 
   716 set :status2:item :supplyBlock:ore
   717 set :status2:block :supplyBlock:block
   718 label *label486
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  719 write "Supplying " .display ".status2"
+  720 write :supplyBlock:ore .display ".item2"
+  721 write :supplyBlock:block .display ".block2"
   722 label *label487
   723 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   724 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
 
   795 set :status2:item @coal
   796 set :status2:block .thoriumGenerator
   797 label *label488
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  798 write "Transferring " .display ".status2"
+  799 write @coal .display ".item2"
+  800 write .thoriumGenerator .display ".block2"
   801 label *label489
   802 set :moveToEmpty:x .coreX
   803 set :moveToEmpty:y .coreY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   647 return :mineOre*retaddr
   648 end
   649 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   650 label *label484
   651 write "Mining " .display ".status2"
   652 write :mineOre.1:ore .display ".item2"
 
   709 return :fetchBlock*retaddr
   710 end
   711 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   712 label *label486
   713 write "Supplying " .display ".status2"
   714 write :supplyBlock:ore .display ".item2"
 
   785 write :transportStatus:target .display ".transportTarget"
   786 write @coal .display ".transportItem"
   787 label *label481
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   788 label *label488
   789 write "Transferring " .display ".status2"
   790 write @coal .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    75 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    76 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    77 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label57 (h:*label57)
-    * call *label13 *invalid :error*retval (m:*label57) (h:*label57)
-    * label *label57
+   78 label *label490
+   79 set .ERROR :error:error
+   80 stop
+   81 label *label491
    82 label *label55
    83 label *label56
    84 write @pneumatic-drill processor1 ".nextBlock"
 
   328 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   329 jump *label111 notEqual :buildThoriumDrill:result false
   330 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label113 (h:*label113)
-    * call *label13 *invalid :error*retval (m:*label113) (h:*label113)
-    * label *label113
+  331 label *label492
+  332 set .ERROR :error:error
+  333 stop
+  334 label *label493
   335 label *label111
   336 label *label112
   337 write @laser-drill processor5 ":buildBlockAt:block"
 
   497 label *label147
   498 label *label140
   499 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label156
-    * return :error*retaddr
-    * end
   500 label *label16
   501 label *label432
   502 write "Moving..." .display ".status3"
 
   591 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   592 jump *label456 notEqual *tmp266 false
   593 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label455 (h:*label455)
-    * call *label13 *invalid :error*retval (m:*label455) (h:*label455)
-    * label *label455
+  594 label *label494
+  595 set .ERROR :error:error
+  596 stop
+  597 label *label495
   598 label *label456
   599 label *label457
   600 label *label458

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    76 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    77 set :error:error "Cannot locate spot for titanium drill"
    78 label *label490
-    * set .ERROR :error:error
+   79 set .ERROR "Cannot locate spot for titanium drill"
    80 stop
    81 label *label491
    82 label *label55
 
   329 jump *label111 notEqual :buildThoriumDrill:result false
   330 set :error:error "Cannot locate spot for thorium drill"
   331 label *label492
-    * set .ERROR :error:error
+  332 set .ERROR "Cannot locate spot for thorium drill"
   333 stop
   334 label *label493
   335 label *label111
 
   592 jump *label456 notEqual *tmp266 false
   593 set :error:error "Cannot locate ore"
   594 label *label494
-    * set .ERROR :error:error
+  595 set .ERROR "Cannot locate ore"
   596 stop
   597 label *label495
   598 label *label456

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    74 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    75 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    76 jump *label55 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    77 label *label490
    78 set .ERROR "Cannot locate spot for titanium drill"
    79 stop
 
   326 jump *label110 equal *tmp205 false
   327 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   328 jump *label111 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   329 label *label492
   330 set .ERROR "Cannot locate spot for thorium drill"
   331 stop
 
   588 label *label454
   589 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   590 jump *label456 notEqual *tmp266 false
-    * set :error:error "Cannot locate ore"
   591 label *label494
   592 set .ERROR "Cannot locate ore"
   593 stop

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   495 label *label147
   496 label *label140
   497 end
-    * label *label16
-    * label *label432
-    * write "Moving..." .display ".status3"
-    * label *label433
-    * label *label166
-    * sensor *tmp247 @unit @firstItem
-    * jump *label169 equal *tmp247 null
-    * ucontrol itemDrop @air 1000
-    * label *label169
-    * label *label170
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label167
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
-    * jump *label166 equal *tmp250 false
-    * label *label168
-    * label *label164
-    * return :moveToEmpty*retaddr
-    * end
   498 label *label17
   499 label *label172
   500 sensor *tmp252 @unit @firstItem
 
   581 set :mineOre:y :locateOre:y
   582 set :moveToEmpty:x :locateOre:x
   583 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label196 (h:*label196)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label196) (h:*label196)
-    * label *label196
+  584 label *label496
+  585 label *label497
+  586 write "Moving..." .display ".status3"
+  587 label *label498
+  588 label *label499
+  589 sensor *tmp247 @unit @firstItem
+  590 jump *label500 equal *tmp247 null
+  591 ucontrol itemDrop @air 1000
+  592 label *label500
+  593 label *label501
+  594 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  595 label *label502
+  596 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  597 jump *label499 equal *tmp250 false
+  598 label *label503
+  599 label *label504
   600 sensor *tmp271 @unit @firstItem
   601 jump *label197 equal *tmp271 :mineOre:ore
   602 setaddr :dropAll*retaddr *label199 (h:*label199)
 
   666 sensor *tmp288 :fetchBlock:block @y
   667 set :moveToEmpty:x *tmp287
   668 set :moveToEmpty:y *tmp288
-    * setaddr :moveToEmpty*retaddr *label215 (h:*label215)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label215) (h:*label215)
-    * label *label215
+  669 label *label505
+  670 label *label506
+  671 write "Moving..." .display ".status3"
+  672 label *label507
+  673 label *label508
+  674 sensor *tmp247 @unit @firstItem
+  675 jump *label509 equal *tmp247 null
+  676 ucontrol itemDrop @air 1000
+  677 label *label509
+  678 label *label510
+  679 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  680 label *label511
+  681 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  682 jump *label508 equal *tmp250 false
+  683 label *label512
+  684 label *label513
   685 setaddr :dropAll*retaddr *label216 (h:*label216)
   686 call *label17 *invalid :dropAll*retval (m:*label216) (h:*label216)
   687 label *label216
 
   794 label *label489
   795 set :moveToEmpty:x .coreX
   796 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label462 (h:*label462)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label462) (h:*label462)
-    * label *label462
+  797 label *label514
+  798 label *label515
+  799 write "Moving..." .display ".status3"
+  800 label *label516
+  801 label *label517
+  802 sensor *tmp247 @unit @firstItem
+  803 jump *label518 equal *tmp247 null
+  804 ucontrol itemDrop @air 1000
+  805 label *label518
+  806 label *label519
+  807 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  808 label *label520
+  809 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  810 jump *label517 equal *tmp250 false
+  811 label *label521
+  812 label *label522
   813 setaddr :dropAll*retaddr *label463 (h:*label463)
   814 call *label17 *invalid :dropAll*retval (m:*label463) (h:*label463)
   815 label *label463

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   591 ucontrol itemDrop @air 1000
   592 label *label500
   593 label *label501
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  594 ucontrol approach :locateOre:x :locateOre:y 5.5
   595 label *label502
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  596 ucontrol within :locateOre:x :locateOre:y 6 *tmp250
   597 jump *label499 equal *tmp250 false
   598 label *label503
   599 label *label504
 
   676 ucontrol itemDrop @air 1000
   677 label *label509
   678 label *label510
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  679 ucontrol approach *tmp287 *tmp288 5.5
   680 label *label511
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  681 ucontrol within *tmp287 *tmp288 6 *tmp250
   682 jump *label508 equal *tmp250 false
   683 label *label512
   684 label *label513
 
   804 ucontrol itemDrop @air 1000
   805 label *label518
   806 label *label519
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  807 ucontrol approach .coreX .coreY 5.5
   808 label *label520
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp250
+  809 ucontrol within .coreX .coreY 6 *tmp250
   810 jump *label517 equal *tmp250 false
   811 label *label521
   812 label *label522

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   579 label *label458
   580 set :mineOre:x :locateOre:x
   581 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   582 label *label496
   583 label *label497
   584 write "Moving..." .display ".status3"
 
   662 label *label483
   663 sensor *tmp287 :fetchBlock:block @x
   664 sensor *tmp288 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp287
-    * set :moveToEmpty:y *tmp288
   665 label *label505
   666 label *label506
   667 write "Moving..." .display ".status3"
 
   788 write @coal .display ".item2"
   789 write .thoriumGenerator .display ".block2"
   790 label *label489
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   791 label *label514
   792 label *label515
   793 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (+2 instructions):
 
   495 label *label147
   496 label *label140
   497 end
-    * label *label17
-    * label *label172
-    * sensor *tmp252 @unit @firstItem
-    * jump *label174 equal *tmp252 null
-    * label *label471
-    * ucontrol itemDrop @air 1000
-    * label *label173
-    * sensor *tmp252 @unit @firstItem
-    * jump *label471 notEqual *tmp252 null
-    * label *label174
-    * label *label171
-    * return :dropAll*retaddr
-    * end
   498 label *label19
   499 label *label434
   500 write "Depositing..." .display ".status3"
 
   584 label *label504
   585 sensor *tmp271 @unit @firstItem
   586 jump *label197 equal *tmp271 :mineOre:ore
-    * setaddr :dropAll*retaddr *label199 (h:*label199)
-    * call *label17 *invalid :dropAll*retval (m:*label199) (h:*label199)
-    * label *label199
+  587 label *label523
+  588 label *label524
+  589 sensor *tmp252 @unit @firstItem
+  590 jump *label527 equal *tmp252 null
+  591 label *label525
+  592 ucontrol itemDrop @air 1000
+  593 label *label526
+  594 sensor *tmp252 @unit @firstItem
+  595 jump *label525 notEqual *tmp252 null
+  596 label *label527
+  597 label *label528
   598 label *label197
   599 label *label198
   600 label *label436
 
   673 jump *label508 equal *tmp250 false
   674 label *label512
   675 label *label513
-    * setaddr :dropAll*retaddr *label216 (h:*label216)
-    * call *label17 *invalid :dropAll*retval (m:*label216) (h:*label216)
-    * label *label216
+  676 label *label529
+  677 label *label530
+  678 sensor *tmp252 @unit @firstItem
+  679 jump *label533 equal *tmp252 null
+  680 label *label531
+  681 ucontrol itemDrop @air 1000
+  682 label *label532
+  683 sensor *tmp252 @unit @firstItem
+  684 jump *label531 notEqual *tmp252 null
+  685 label *label533
+  686 label *label534
   687 label *label217
   688 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   689 sensor :fetchBlock:unitItem @unit @firstItem
 
   807 jump *label517 equal *tmp250 false
   808 label *label521
   809 label *label522
-    * setaddr :dropAll*retaddr *label463 (h:*label463)
-    * call *label17 *invalid :dropAll*retval (m:*label463) (h:*label463)
-    * label *label463
+  810 label *label535
+  811 label *label536
+  812 sensor *tmp252 @unit @firstItem
+  813 jump *label539 equal *tmp252 null
+  814 label *label537
+  815 ucontrol itemDrop @air 1000
+  816 label *label538
+  817 sensor *tmp252 @unit @firstItem
+  818 jump *label537 notEqual *tmp252 null
+  819 label *label539
+  820 label *label540
   821 label *label464
   822 ucontrol itemTake .core :supplyBlockFromCore:item 30
   823 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   610 jump *label203 always
   611 label *label204
   612 label *label205
-    * ucontrol mine :mineOre:x :mineOre:y
+  613 ucontrol mine :locateOre:x :locateOre:y
   614 jump *label206 lessThanEq @second :mineOre:stop
   615 jump *label203 always
   616 label *label206
 
   819 label *label539
   820 label *label540
   821 label *label464
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  822 ucontrol itemTake .core @coal 30
   823 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   824 op notEqual *tmp306 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp307 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  825 op notEqual *tmp307 :supplyBlockFromCore:unitItem @coal
   826 op land *tmp308 *tmp306 *tmp307
   827 jump *label465 equal *tmp308 false
   828 ucontrol itemDrop @air 1000
   829 label *label465
   830 label *label466
   831 label *label467
-    * sensor *tmp310 @unit :supplyBlockFromCore:item
+  832 sensor *tmp310 @unit @coal
   833 op lessThan *tmp311 *tmp310 30
-    * sensor *tmp312 .core :supplyBlockFromCore:item
+  834 sensor *tmp312 .core @coal
   835 op land *tmp313 *tmp311 *tmp312
   836 jump *label464 notEqual *tmp313 false
   837 label *label468
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  838 set :depositItems:block .thoriumGenerator
+  839 set :depositItems:item @coal
   840 setaddr :depositItems*retaddr *label469 (h:*label469)
   841 call *label19 *invalid :depositItems*retval (m:*label469) (h:*label469)
   842 label *label469

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   564 label *label456
   565 label *label457
   566 label *label458
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   567 label *label496
   568 label *label497
   569 write "Moving..." .display ".status3"
 
   775 label *label247
   776 jump *label246 always
   777 label *label245
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   778 label *label459
   779 sensor *tmp303 .thoriumGenerator @itemCapacity
   780 op min :transportStatus:target *tmp303 30

Modifications by Inline function call at CoreBuilder.mnd:156:5 (+6 instructions):
 
   852 write "Phase 1: supplying base" .display ".status1"
   853 label *label407
   854 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label254 (h:*label254)
-    * call *label22 *invalid :mineOre.1*retval (m:*label254) (h:*label254)
-    * label *label254
+  855 label *label541
+  856 label *label542
+  857 write "Mining " .display ".status2"
+  858 write :mineOre.1:ore .display ".item2"
+  859 write "core" .display ".block2"
+  860 label *label543
+  861 set :mineOre:ore :mineOre.1:ore
+  862 set :mineOre:amount 30
+  863 set :mineOre:block .core
+  864 setaddr :mineOre*retaddr *label544 (h:*label544)
+  865 call *label21 *invalid :mineOre*retval (m:*label544) (h:*label544)
+  866 label *label544
+  867 label *label545
   868 label *label252
   869 jump *label251 always
   870 label *label250

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   855 label *label541
   856 label *label542
   857 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  858 write @coal .display ".item2"
   859 write "core" .display ".block2"
   860 label *label543
-    * set :mineOre:ore :mineOre.1:ore
+  861 set :mineOre:ore @coal
   862 set :mineOre:amount 30
   863 set :mineOre:block .core
   864 setaddr :mineOre*retaddr *label544 (h:*label544)

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+42 instructions):
 
   495 label *label147
   496 label *label140
   497 end
-    * label *label19
-    * label *label434
-    * write "Depositing..." .display ".status3"
-    * label *label435
-    * sensor *tmp256 @unit @firstItem
-    * jump *label179 notEqual *tmp256 :depositItems:item
-    * label *label445
-    * sensor *tmp254 :depositItems:block @x
-    * sensor *tmp255 :depositItems:block @y
-    * label *label446
-    * label *label447
-    * write "Moving..." .display ".status3"
-    * label *label448
-    * label *label449
-    * ucontrol within *tmp254 *tmp255 6 *tmp242
-    * jump *label451 notEqual *tmp242 false
-    * label *label472
-    * ucontrol approach *tmp254 *tmp255 5.5
-    * label *label450
-    * ucontrol within *tmp254 *tmp255 6 *tmp242
-    * jump *label472 equal *tmp242 false
-    * label *label451
-    * label *label452
-    * label *label453
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label182
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label183
-    * sensor *tmp260 @unit @firstItem
-    * op mul *tmp261 *tmp260 :depositItems:cap
-    * sensor *tmp262 :depositItems:block :depositItems:item
-    * jump *label182 greaterThan *tmp261 *tmp262
-    * label *label184
-    * jump *label180 always
-    * label *label179
-    * label *label185
-    * sensor *tmp264 @unit @firstItem
-    * jump *label187 equal *tmp264 null
-    * label *label473
-    * ucontrol itemDrop @air 1000
-    * label *label186
-    * sensor *tmp264 @unit @firstItem
-    * jump *label473 notEqual *tmp264 null
-    * label *label187
-    * label *label180
-    * label *label474
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label475
-    * label *label177
-    * return :depositItems*retaddr
-    * end
   498 label *label21
   499 op min :mineOre:amount :mineOre:amount 30
   500 set :transportStatus:target :mineOre:amount
 
   568 ucontrol unbind
   569 set :depositItems:block :mineOre:block
   570 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label208 (h:*label208)
-    * call *label19 *invalid :depositItems*retval (m:*label208) (h:*label208)
-    * label *label208
+  571 label *label546
+  572 label *label547
+  573 write "Depositing..." .display ".status3"
+  574 label *label548
+  575 sensor *tmp256 @unit @firstItem
+  576 jump *label562 notEqual *tmp256 :depositItems:item
+  577 label *label549
+  578 sensor *tmp254 :depositItems:block @x
+  579 sensor *tmp255 :depositItems:block @y
+  580 label *label550
+  581 label *label551
+  582 write "Moving..." .display ".status3"
+  583 label *label552
+  584 label *label553
+  585 ucontrol within *tmp254 *tmp255 6 *tmp242
+  586 jump *label556 notEqual *tmp242 false
+  587 label *label554
+  588 ucontrol approach *tmp254 *tmp255 5.5
+  589 label *label555
+  590 ucontrol within *tmp254 *tmp255 6 *tmp242
+  591 jump *label554 equal *tmp242 false
+  592 label *label556
+  593 label *label557
+  594 label *label558
+  595 sensor :depositItems:cap :depositItems:block @itemCapacity
+  596 label *label559
+  597 ucontrol itemDrop :depositItems:block 30
+  598 label *label560
+  599 sensor *tmp260 @unit @firstItem
+  600 op mul *tmp261 *tmp260 :depositItems:cap
+  601 sensor *tmp262 :depositItems:block :depositItems:item
+  602 jump *label559 greaterThan *tmp261 *tmp262
+  603 label *label561
+  604 jump *label567 always
+  605 label *label562
+  606 label *label563
+  607 sensor *tmp264 @unit @firstItem
+  608 jump *label566 equal *tmp264 null
+  609 label *label564
+  610 ucontrol itemDrop @air 1000
+  611 label *label565
+  612 sensor *tmp264 @unit @firstItem
+  613 jump *label564 notEqual *tmp264 null
+  614 label *label566
+  615 label *label567
+  616 label *label568
+  617 write 0 .display ".transportTarget"
+  618 write null .display ".transportItem"
+  619 label *label569
+  620 label *label570
   621 label *label193
   622 return :mineOre*retaddr
   623 end
 
   696 label *label219
   697 set :depositItems:block .core
   698 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label222 (h:*label222)
-    * call *label19 *invalid :depositItems*retval (m:*label222) (h:*label222)
-    * label *label222
+  699 label *label571
+  700 label *label572
+  701 write "Depositing..." .display ".status3"
+  702 label *label573
+  703 sensor *tmp256 @unit @firstItem
+  704 jump *label587 notEqual *tmp256 :depositItems:item
+  705 label *label574
+  706 sensor *tmp254 :depositItems:block @x
+  707 sensor *tmp255 :depositItems:block @y
+  708 label *label575
+  709 label *label576
+  710 write "Moving..." .display ".status3"
+  711 label *label577
+  712 label *label578
+  713 ucontrol within *tmp254 *tmp255 6 *tmp242
+  714 jump *label581 notEqual *tmp242 false
+  715 label *label579
+  716 ucontrol approach *tmp254 *tmp255 5.5
+  717 label *label580
+  718 ucontrol within *tmp254 *tmp255 6 *tmp242
+  719 jump *label579 equal *tmp242 false
+  720 label *label581
+  721 label *label582
+  722 label *label583
+  723 sensor :depositItems:cap :depositItems:block @itemCapacity
+  724 label *label584
+  725 ucontrol itemDrop :depositItems:block 30
+  726 label *label585
+  727 sensor *tmp260 @unit @firstItem
+  728 op mul *tmp261 *tmp260 :depositItems:cap
+  729 sensor *tmp262 :depositItems:block :depositItems:item
+  730 jump *label584 greaterThan *tmp261 *tmp262
+  731 label *label586
+  732 jump *label592 always
+  733 label *label587
+  734 label *label588
+  735 sensor *tmp264 @unit @firstItem
+  736 jump *label591 equal *tmp264 null
+  737 label *label589
+  738 ucontrol itemDrop @air 1000
+  739 label *label590
+  740 sensor *tmp264 @unit @firstItem
+  741 jump *label589 notEqual *tmp264 null
+  742 label *label591
+  743 label *label592
+  744 label *label593
+  745 write 0 .display ".transportTarget"
+  746 write null .display ".transportItem"
+  747 label *label594
+  748 label *label595
   749 label *label212
   750 return :fetchBlock*retaddr
   751 end
 
   875 label *label468
   876 set :depositItems:block .thoriumGenerator
   877 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label469 (h:*label469)
-    * call *label19 *invalid :depositItems*retval (m:*label469) (h:*label469)
-    * label *label469
+  878 label *label596
+  879 label *label597
+  880 write "Depositing..." .display ".status3"
+  881 label *label598
+  882 sensor *tmp256 @unit @firstItem
+  883 jump *label612 notEqual *tmp256 :depositItems:item
+  884 label *label599
+  885 sensor *tmp254 :depositItems:block @x
+  886 sensor *tmp255 :depositItems:block @y
+  887 label *label600
+  888 label *label601
+  889 write "Moving..." .display ".status3"
+  890 label *label602
+  891 label *label603
+  892 ucontrol within *tmp254 *tmp255 6 *tmp242
+  893 jump *label606 notEqual *tmp242 false
+  894 label *label604
+  895 ucontrol approach *tmp254 *tmp255 5.5
+  896 label *label605
+  897 ucontrol within *tmp254 *tmp255 6 *tmp242
+  898 jump *label604 equal *tmp242 false
+  899 label *label606
+  900 label *label607
+  901 label *label608
+  902 sensor :depositItems:cap :depositItems:block @itemCapacity
+  903 label *label609
+  904 ucontrol itemDrop :depositItems:block 30
+  905 label *label610
+  906 sensor *tmp260 @unit @firstItem
+  907 op mul *tmp261 *tmp260 :depositItems:cap
+  908 sensor *tmp262 :depositItems:block :depositItems:item
+  909 jump *label609 greaterThan *tmp261 *tmp262
+  910 label *label611
+  911 jump *label617 always
+  912 label *label612
+  913 label *label613
+  914 sensor *tmp264 @unit @firstItem
+  915 jump *label616 equal *tmp264 null
+  916 label *label614
+  917 ucontrol itemDrop @air 1000
+  918 label *label615
+  919 sensor *tmp264 @unit @firstItem
+  920 jump *label614 notEqual *tmp264 null
+  921 label *label616
+  922 label *label617
+  923 label *label618
+  924 write 0 .display ".transportTarget"
+  925 write null .display ".transportItem"
+  926 label *label619
+  927 label *label620
   928 label *label470
   929 label *label246
   930 set :fetchBlock:block .thoriumContainer

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   497 end
   498 label *label21
   499 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
   500 label *label476
   501 write :mineOre:amount .display ".transportTarget"
   502 write :mineOre:ore .display ".transportItem"
 
   572 write "Depositing..." .display ".status3"
   573 label *label548
   574 sensor *tmp256 @unit @firstItem
-    * jump *label562 notEqual *tmp256 :depositItems:item
+  575 jump *label562 notEqual *tmp256 :mineOre:ore
   576 label *label549
-    * sensor *tmp254 :depositItems:block @x
-    * sensor *tmp255 :depositItems:block @y
+  577 sensor *tmp254 :mineOre:block @x
+  578 sensor *tmp255 :mineOre:block @y
   579 label *label550
   580 label *label551
   581 write "Moving..." .display ".status3"
 
   591 label *label556
   592 label *label557
   593 label *label558
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  594 sensor :depositItems:cap :mineOre:block @itemCapacity
   595 label *label559
-    * ucontrol itemDrop :depositItems:block 30
+  596 ucontrol itemDrop :mineOre:block 30
   597 label *label560
   598 sensor *tmp260 @unit @firstItem
   599 op mul *tmp261 *tmp260 :depositItems:cap
-    * sensor *tmp262 :depositItems:block :depositItems:item
+  600 sensor *tmp262 :mineOre:block :mineOre:ore
   601 jump *label559 greaterThan *tmp261 *tmp262
   602 label *label561
   603 jump *label567 always
 
   700 write "Depositing..." .display ".status3"
   701 label *label573
   702 sensor *tmp256 @unit @firstItem
-    * jump *label587 notEqual *tmp256 :depositItems:item
+  703 jump *label587 notEqual *tmp256 :fetchBlock:item
   704 label *label574
-    * sensor *tmp254 :depositItems:block @x
-    * sensor *tmp255 :depositItems:block @y
+  705 sensor *tmp254 .core @x
+  706 sensor *tmp255 .core @y
   707 label *label575
   708 label *label576
   709 write "Moving..." .display ".status3"
 
   719 label *label581
   720 label *label582
   721 label *label583
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  722 sensor :depositItems:cap .core @itemCapacity
   723 label *label584
-    * ucontrol itemDrop :depositItems:block 30
+  724 ucontrol itemDrop .core 30
   725 label *label585
   726 sensor *tmp260 @unit @firstItem
   727 op mul *tmp261 *tmp260 :depositItems:cap
-    * sensor *tmp262 :depositItems:block :depositItems:item
+  728 sensor *tmp262 .core :fetchBlock:item
   729 jump *label584 greaterThan *tmp261 *tmp262
   730 label *label586
   731 jump *label592 always
 
   879 write "Depositing..." .display ".status3"
   880 label *label598
   881 sensor *tmp256 @unit @firstItem
-    * jump *label612 notEqual *tmp256 :depositItems:item
+  882 jump *label612 notEqual *tmp256 @coal
   883 label *label599
-    * sensor *tmp254 :depositItems:block @x
-    * sensor *tmp255 :depositItems:block @y
+  884 sensor *tmp254 .thoriumGenerator @x
+  885 sensor *tmp255 .thoriumGenerator @y
   886 label *label600
   887 label *label601
   888 write "Moving..." .display ".status3"
 
   898 label *label606
   899 label *label607
   900 label *label608
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  901 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   902 label *label609
-    * ucontrol itemDrop :depositItems:block 30
+  903 ucontrol itemDrop .thoriumGenerator 30
   904 label *label610
   905 sensor *tmp260 @unit @firstItem
   906 op mul *tmp261 *tmp260 :depositItems:cap
-    * sensor *tmp262 :depositItems:block :depositItems:item
+  907 sensor *tmp262 .thoriumGenerator @coal
   908 jump *label609 greaterThan *tmp261 *tmp262
   909 label *label611
   910 jump *label617 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   565 jump *label201 lessThan *tmp282 :mineOre:amount
   566 label *label203
   567 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   568 label *label546
   569 label *label547
   570 write "Depositing..." .display ".status3"
 
   691 op land *tmp297 *tmp295 *tmp296
   692 jump *label217 notEqual *tmp297 false
   693 label *label219
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   694 label *label571
   695 label *label572
   696 write "Depositing..." .display ".status3"
 
   868 op land *tmp313 *tmp311 *tmp312
   869 jump *label464 notEqual *tmp313 false
   870 label *label468
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   871 label *label596
   872 label *label597
   873 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:163:9 (+10 instructions):
 
   807 jump *label245 greaterThanEq *tmp360 50
   808 set :supplyBlock:block .thoriumGenerator
   809 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label247 (h:*label247)
-    * call *label24 *invalid :supplyBlock*retval (m:*label247) (h:*label247)
-    * label *label247
+  810 label *label621
+  811 label *label622
+  812 write "Supplying " .display ".status2"
+  813 write :supplyBlock:ore .display ".item2"
+  814 write :supplyBlock:block .display ".block2"
+  815 label *label623
+  816 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  817 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
+  818 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
+  819 jump *label625 lessThanEq :supplyBlock:missing 0
+  820 set :mineOre:ore :supplyBlock:ore
+  821 set :mineOre:amount :supplyBlock:blockCapacity
+  822 set :mineOre:block :supplyBlock:block
+  823 setaddr :mineOre*retaddr *label624 (h:*label624)
+  824 call *label21 *invalid :mineOre*retval (m:*label624) (h:*label624)
+  825 label *label624
+  826 label *label625
+  827 label *label626
+  828 label *label627
   829 jump *label246 always
   830 label *label245
   831 label *label459

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   810 label *label621
   811 label *label622
   812 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  813 write @coal .display ".item2"
+  814 write .thoriumGenerator .display ".block2"
   815 label *label623
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp299 :supplyBlock:block :supplyBlock:ore
+  816 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  817 sensor *tmp299 .thoriumGenerator @coal
   818 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
   819 jump *label625 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  820 set :mineOre:ore @coal
   821 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  822 set :mineOre:block .thoriumGenerator
   823 setaddr :mineOre*retaddr *label624 (h:*label624)
   824 call *label21 *invalid :mineOre*retval (m:*label624) (h:*label624)
   825 label *label624

Modifications by Replicate loop condition at CoreBuilder.mnd:453:5 (+1 instructions):
 
   258 label *label95
   259 read *tmp102 .controller ".polys"
   260 jump *label97 greaterThanEq *tmp102 3
+  261 label *label628
   262 setaddr :supplyBase*retaddr *label98 (h:*label98)
   263 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   264 label *label98
   265 label *label96
-    * jump *label95 always
+  266 read *tmp102 .controller ".polys"
+  267 jump *label628 lessThan *tmp102 3
   268 label *label97
   269 write 3 .controller ".flareTarget"
   270 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:458:5 (+1 instructions):
 
   272 label *label100
   273 read *tmp100 .controller ".flares"
   274 jump *label102 greaterThanEq *tmp100 2
+  275 label *label629
   276 setaddr :supplyBase*retaddr *label103 (h:*label103)
   277 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   278 label *label103
   279 label *label101
-    * jump *label100 always
+  280 read *tmp100 .controller ".flares"
+  281 jump *label629 lessThan *tmp100 2
   282 label *label102
   283 set .graphiteSurplus 100
   284 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:477:5 (+1 instructions):
 
   416 label *label127
   417 read *tmp102 .controller ".polys"
   418 jump *label129 greaterThanEq *tmp102 5
+  419 label *label630
   420 setaddr :supplyBase*retaddr *label130 (h:*label130)
   421 call *label32 *invalid :supplyBase*retval (m:*label130) (h:*label130)
   422 label *label130
   423 label *label128
-    * jump *label127 always
+  424 read *tmp102 .controller ".polys"
+  425 jump *label630 lessThan *tmp102 5
   426 label *label129
   427 set :buildBlockFromCfg:cfg "+(###A<###$E"
   428 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:488:5 (+1 instructions):
 
   448 label *label136
   449 read *tmp103 .controller ".megas"
   450 jump *label138 greaterThanEq *tmp103 1
+  451 label *label631
   452 setaddr :supplyBase*retaddr *label139 (h:*label139)
   453 call *label32 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   454 label *label139
   455 label *label137
-    * jump *label136 always
+  456 read *tmp103 .controller ".megas"
+  457 jump *label631 lessThan *tmp103 1
   458 label *label138
   459 control enabled processor7 false
   460 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:124:17 (+6 instructions):
 
  1061 write "Goal 5: supplying generator" .display ".status1"
  1062 label *label417
  1063 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label289 (h:*label289)
-    * call *label22 *invalid :mineOre.1*retval (m:*label289) (h:*label289)
-    * label *label289
+ 1064 label *label632
+ 1065 label *label633
+ 1066 write "Mining " .display ".status2"
+ 1067 write :mineOre.1:ore .display ".item2"
+ 1068 write "core" .display ".block2"
+ 1069 label *label634
+ 1070 set :mineOre:ore :mineOre.1:ore
+ 1071 set :mineOre:amount 30
+ 1072 set :mineOre:block .core
+ 1073 setaddr :mineOre*retaddr *label635 (h:*label635)
+ 1074 call *label21 *invalid :mineOre*retval (m:*label635) (h:*label635)
+ 1075 label *label635
+ 1076 label *label636
  1077 jump *label287 always
  1078 label *label286
  1079 sensor *tmp403 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1064 label *label632
  1065 label *label633
  1066 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1067 write @coal .display ".item2"
  1068 write "core" .display ".block2"
  1069 label *label634
-    * set :mineOre:ore :mineOre.1:ore
+ 1070 set :mineOre:ore @coal
  1071 set :mineOre:amount 30
  1072 set :mineOre:block .core
  1073 setaddr :mineOre*retaddr *label635 (h:*label635)

Modifications by Inline function call at CoreBuilder.mnd:130:17 (+6 instructions):
 
  1085 sensor :supplyBase0:sand .core @sand
  1086 select *tmp409 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
  1087 set :mineOre.1:ore *tmp409
-    * setaddr :mineOre.1*retaddr *label295 (h:*label295)
-    * call *label22 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
-    * label *label295
+ 1088 label *label637
+ 1089 label *label638
+ 1090 write "Mining " .display ".status2"
+ 1091 write :mineOre.1:ore .display ".item2"
+ 1092 write "core" .display ".block2"
+ 1093 label *label639
+ 1094 set :mineOre:ore :mineOre.1:ore
+ 1095 set :mineOre:amount 30
+ 1096 set :mineOre:block .core
+ 1097 setaddr :mineOre*retaddr *label640 (h:*label640)
+ 1098 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
+ 1099 label *label640
+ 1100 label *label641
  1101 jump *label291 always
  1102 label *label290
  1103 sensor *tmp410 .core @copper

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1088 label *label637
  1089 label *label638
  1090 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1091 write *tmp409 .display ".item2"
  1092 write "core" .display ".block2"
  1093 label *label639
-    * set :mineOre:ore :mineOre.1:ore
+ 1094 set :mineOre:ore *tmp409
  1095 set :mineOre:amount 30
  1096 set :mineOre:block .core
  1097 setaddr :mineOre*retaddr *label640 (h:*label640)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    90 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
    91 jump *label58 equal *tmp154 false
    92 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label52 always
    93 label *label52
    94 set .titaniumDrill *tmp137
    95 write *tmp137 processor1 ".titaniumDrill"
 
  1048 sensor *tmp391 .core @titanium
  1049 op sub *tmp392 .targetTitanium *tmp391
  1050 op min *tmp390 7 *tmp392
-    * jump *label281 always
  1051 label *label281
  1052 sensor *tmp394 .titaniumDrill @titanium
  1053 jump *label282 greaterThanEq *tmp394 *tmp390
 
  1310 read *tmp466 .blockBuilder ":buildBlockAt*finished"
  1311 jump *label346 equal *tmp466 false
  1312 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label344 always
  1313 label *label344
  1314 return :buildBlock*retaddr
  1315 end
 
  1369 call *label34 *invalid :buildBlock*retval (m:*label354) (h:*label354)
  1370 label *label354
  1371 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label352 always
  1372 label *label352
  1373 return :buildBlockFromCfg*retaddr
  1374 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1168 label *label33
  1169 label *label375
  1170 op sign *tmp424 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp424
+ 1171 set :meetTarget:count *tmp424
  1172 label *label376
  1173 label *label379
  1174 op sign *tmp424 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1167 end
  1168 label *label33
  1169 label *label375
-    * op sign *tmp424 :meetTarget:copper
-    * set :meetTarget:count *tmp424
+ 1170 op sign :meetTarget:count :meetTarget:copper
  1171 label *label376
  1172 label *label379
  1173 op sign *tmp424 :meetTarget:lead

Modifications by Iterated phase, Temp Variables Elimination, pass 2, iteration 1 (-1 instructions):
 
  1136 label *label427
  1137 sensor :supplyBase0:coal.1 .core @coal
  1138 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp422 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp422
+ 1139 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
  1140 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1141 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
  1142 label *label311

Modifications by Inline function call at CoreBuilder.mnd:133:17 (+6 instructions):
 
  1104 write "Goal 7: copper requirement" .display ".status1"
  1105 label *label421
  1106 set :mineOre.1:ore @copper
-    * setaddr :mineOre.1*retaddr *label299 (h:*label299)
-    * call *label22 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
-    * label *label299
+ 1107 label *label642
+ 1108 label *label643
+ 1109 write "Mining " .display ".status2"
+ 1110 write :mineOre.1:ore .display ".item2"
+ 1111 write "core" .display ".block2"
+ 1112 label *label644
+ 1113 set :mineOre:ore :mineOre.1:ore
+ 1114 set :mineOre:amount 30
+ 1115 set :mineOre:block .core
+ 1116 setaddr :mineOre*retaddr *label645 (h:*label645)
+ 1117 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
+ 1118 label *label645
+ 1119 label *label646
  1120 jump *label297 always
  1121 label *label296
  1122 sensor *tmp413 .core @lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
  1107 label *label642
  1108 label *label643
  1109 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1110 write @copper .display ".item2"
  1111 write "core" .display ".block2"
  1112 label *label644
-    * set :mineOre:ore :mineOre.1:ore
+ 1113 set :mineOre:ore @copper
  1114 set :mineOre:amount 30
  1115 set :mineOre:block .core
  1116 setaddr :mineOre*retaddr *label645 (h:*label645)

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    20 ubind @poly
    21 set .builder @unit
    22 ulocate building core false @copper .coreX .coreY *tmp129 .core
-    * label *label44
    23 jump *label43 equal .core null
-    * label *label45
    24 set :buildBlockFromCfg.1:cfg "#'+nA######%#"
    25 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    26 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
 
    72 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    73 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    74 jump *label55 notEqual :buildFirstTitaniumDrill:result false
-    * label *label490
    75 set .ERROR "Cannot locate spot for titanium drill"
    76 stop
-    * label *label491
    77 label *label55
-    * label *label56
    78 write @pneumatic-drill processor1 ".nextBlock"
    79 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    80 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    85 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
    86 jump *label58 equal *tmp154 false
    87 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label52
    88 set .titaniumDrill *tmp137
    89 write *tmp137 processor1 ".titaniumDrill"
    90 set :buildBlockFromCfg.1:cfg "*,###A<###$*"
 
   133 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   134 write 1 .controller ".flareTarget"
   135 write 1 processor1 ".flareTarget"
-    * label *label66
   136 write 3 .controller ".monoTarget"
   137 write 3 processor1 ".monoTarget"
-    * label *label67
   138 write 85 .controller ".pressTarget"
   139 write 150 .controller ".smelterTarget"
   140 write 30 .controller ".kilnTarget"
 
   151 jump *label73 greaterThanEq *tmp163 300
   152 jump *label71 always
   153 label *label73
-    * label *label74
-    * label *label70
   154 read *tmp101 .controller ".monos"
   155 jump *label69 lessThan *tmp101 3
   156 label *label71
 
   222 set .metaglassSurplus 200
   223 write 6 .controller ".polyTarget"
   224 write 6 processor1 ".polyTarget"
-    * label *label89
   225 set :buildBlockFromCfg.1:cfg "%.)A<######%A"
   226 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   227 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
 
   243 setaddr :buildUnits*retaddr *label94 (h:*label94)
   244 call *label39 *invalid :buildUnits*retval (m:*label94) (h:*label94)
   245 label *label94
-    * label *label95
   246 read *tmp102 .controller ".polys"
   247 jump *label97 greaterThanEq *tmp102 3
   248 label *label628
   249 setaddr :supplyBase*retaddr *label98 (h:*label98)
   250 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   251 label *label98
-    * label *label96
   252 read *tmp102 .controller ".polys"
   253 jump *label628 lessThan *tmp102 3
   254 label *label97
   255 write 3 .controller ".flareTarget"
   256 write 3 processor1 ".flareTarget"
-    * label *label99
-    * label *label100
   257 read *tmp100 .controller ".flares"
   258 jump *label102 greaterThanEq *tmp100 2
   259 label *label629
   260 setaddr :supplyBase*retaddr *label103 (h:*label103)
   261 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   262 label *label103
-    * label *label101
   263 read *tmp100 .controller ".flares"
   264 jump *label629 lessThan *tmp100 2
   265 label *label102
   266 set .graphiteSurplus 100
   267 write 5 .controller ".monoTarget"
   268 write 5 processor1 ".monoTarget"
-    * label *label104
   269 write @ore-titanium processor1 ".nextBlock"
   270 wait 0.000000001
   271 ubind @flare
 
   290 jump *label106 equal *tmp198 false
   291 write false processor4 ":stopLocation*finished"
   292 write 3 processor4 "@counter"
-    * label *label105
   293 write null processor1 ".nextBlock"
   294 write .coreX processor4 ":layoutThoriumDrill:x"
   295 write .coreY processor4 ":layoutThoriumDrill:y"
 
   311 jump *label110 equal *tmp205 false
   312 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   313 jump *label111 notEqual :buildThoriumDrill:result false
-    * label *label492
   314 set .ERROR "Cannot locate spot for thorium drill"
   315 stop
-    * label *label493
   316 label *label111
-    * label *label112
   317 write @laser-drill processor5 ":buildBlockAt:block"
   318 read *tmp56 processor4 ".drillX"
   319 write *tmp56 processor5 ":buildBlockAt:x"
 
   386 wait 1e-15
   387 read *tmp228 processor3 ":setThoriumContainer*finished"
   388 jump *label125 equal *tmp228 false
-    * label *label107
   389 write null processor1 ".nextBlock"
   390 write 1 .controller ".megaTarget"
   391 write 1 processor1 ".megaTarget"
-    * label *label126
-    * label *label127
   392 read *tmp102 .controller ".polys"
   393 jump *label129 greaterThanEq *tmp102 5
   394 label *label630
   395 setaddr :supplyBase*retaddr *label130 (h:*label130)
   396 call *label32 *invalid :supplyBase*retval (m:*label130) (h:*label130)
   397 label *label130
-    * label *label128
   398 read *tmp102 .controller ".polys"
   399 jump *label630 lessThan *tmp102 5
   400 label *label129
 
   414 label *label134
   415 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   416 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
-    * label *label133
   417 set .metaglassSurplus 50
   418 setaddr :buildUnits*retaddr *label135 (h:*label135)
   419 call *label39 *invalid :buildUnits*retval (m:*label135) (h:*label135)
   420 label *label135
-    * label *label136
   421 read *tmp103 .controller ".megas"
   422 jump *label138 greaterThanEq *tmp103 1
   423 label *label631
   424 setaddr :supplyBase*retaddr *label139 (h:*label139)
   425 call *label32 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   426 label *label139
-    * label *label137
   427 read *tmp103 .controller ".megas"
   428 jump *label631 lessThan *tmp103 1
   429 label *label138
 
   469 setaddr :lineUpUnits*retaddr *label151 (h:*label151)
   470 call *label41 *invalid :lineUpUnits*retval (m:*label151) (h:*label151)
   471 label *label151
-    * label *label146
   472 jump *label145 always
-    * label *label147
-    * label *label140
   473 end
   474 label *label21
   475 op min :mineOre:amount :mineOre:amount 30
-    * label *label476
   476 write :mineOre:amount .display ".transportTarget"
   477 write :mineOre:ore .display ".transportItem"
-    * label *label477
-    * label *label454
   478 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
   479 jump *label456 notEqual *tmp266 false
-    * label *label494
   480 set .ERROR "Cannot locate ore"
   481 stop
-    * label *label495
   482 label *label456
-    * label *label457
-    * label *label458
-    * label *label496
-    * label *label497
   483 write "Moving..." .display ".status3"
-    * label *label498
   484 label *label499
   485 sensor *tmp247 @unit @firstItem
   486 jump *label500 equal *tmp247 null
   487 ucontrol itemDrop @air 1000
   488 label *label500
-    * label *label501
   489 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label502
   490 ucontrol within :locateOre:x :locateOre:y 6 *tmp250
   491 jump *label499 equal *tmp250 false
-    * label *label503
-    * label *label504
   492 sensor *tmp271 @unit @firstItem
   493 jump *label197 equal *tmp271 :mineOre:ore
-    * label *label523
-    * label *label524
   494 sensor *tmp252 @unit @firstItem
   495 jump *label527 equal *tmp252 null
   496 label *label525
   497 ucontrol itemDrop @air 1000
-    * label *label526
   498 sensor *tmp252 @unit @firstItem
   499 jump *label525 notEqual *tmp252 null
   500 label *label527
-    * label *label528
   501 label *label197
-    * label *label198
-    * label *label436
   502 write "Mining..." .display ".status3"
-    * label *label437
   503 op add :mineOre:stop @second 10
   504 label *label201
   505 sensor :mineOre:item @unit @firstItem
 
   509 jump *label204 equal *tmp278 false
   510 jump *label203 always
   511 label *label204
-    * label *label205
   512 ucontrol mine :locateOre:x :locateOre:y
   513 jump *label206 lessThanEq @second :mineOre:stop
   514 jump *label203 always
   515 label *label206
-    * label *label207
-    * label *label202
   516 sensor *tmp282 @unit @totalItems
   517 jump *label201 lessThan *tmp282 :mineOre:amount
   518 label *label203
   519 ucontrol unbind
-    * label *label546
-    * label *label547
   520 write "Depositing..." .display ".status3"
-    * label *label548
   521 sensor *tmp256 @unit @firstItem
   522 jump *label562 notEqual *tmp256 :mineOre:ore
-    * label *label549
   523 sensor *tmp254 :mineOre:block @x
   524 sensor *tmp255 :mineOre:block @y
-    * label *label550
-    * label *label551
   525 write "Moving..." .display ".status3"
-    * label *label552
-    * label *label553
   526 ucontrol within *tmp254 *tmp255 6 *tmp242
   527 jump *label556 notEqual *tmp242 false
   528 label *label554
   529 ucontrol approach *tmp254 *tmp255 5.5
-    * label *label555
   530 ucontrol within *tmp254 *tmp255 6 *tmp242
   531 jump *label554 equal *tmp242 false
   532 label *label556
-    * label *label557
-    * label *label558
   533 sensor :depositItems:cap :mineOre:block @itemCapacity
   534 label *label559
   535 ucontrol itemDrop :mineOre:block 30
-    * label *label560
   536 sensor *tmp260 @unit @firstItem
   537 op mul *tmp261 *tmp260 :depositItems:cap
   538 sensor *tmp262 :mineOre:block :mineOre:ore
   539 jump *label559 greaterThan *tmp261 *tmp262
-    * label *label561
   540 jump *label567 always
   541 label *label562
-    * label *label563
   542 sensor *tmp264 @unit @firstItem
   543 jump *label566 equal *tmp264 null
   544 label *label564
   545 ucontrol itemDrop @air 1000
-    * label *label565
   546 sensor *tmp264 @unit @firstItem
   547 jump *label564 notEqual *tmp264 null
   548 label *label566
   549 label *label567
-    * label *label568
   550 write 0 .display ".transportTarget"
   551 write null .display ".transportItem"
-    * label *label569
-    * label *label570
-    * label *label193
   552 return :mineOre*retaddr
   553 end
   554 label *label22
-    * label *label484
   555 write "Mining " .display ".status2"
   556 write :mineOre.1:ore .display ".item2"
   557 write "core" .display ".block2"
-    * label *label485
   558 set :mineOre:ore :mineOre.1:ore
   559 set :mineOre:amount 30
   560 set :mineOre:block .core
   561 setaddr :mineOre*retaddr *label211 (h:*label211)
   562 call *label21 *invalid :mineOre*retval (m:*label211) (h:*label211)
   563 label *label211
-    * label *label209
   564 return :mineOre.1*retaddr
   565 end
   566 label *label23
   567 sensor *tmp285 :fetchBlock:block @itemCapacity
   568 op min :transportStatus:target *tmp285 30
-    * label *label478
   569 write :transportStatus:target .display ".transportTarget"
   570 write :fetchBlock:item .display ".transportItem"
-    * label *label479
-    * label *label482
   571 write "Fetching " .display ".status2"
   572 write :fetchBlock:item .display ".item2"
   573 write :fetchBlock:block .display ".block2"
-    * label *label483
   574 sensor *tmp287 :fetchBlock:block @x
   575 sensor *tmp288 :fetchBlock:block @y
-    * label *label505
-    * label *label506
   576 write "Moving..." .display ".status3"
-    * label *label507
   577 label *label508
   578 sensor *tmp247 @unit @firstItem
   579 jump *label509 equal *tmp247 null
   580 ucontrol itemDrop @air 1000
   581 label *label509
-    * label *label510
   582 ucontrol approach *tmp287 *tmp288 5.5
-    * label *label511
   583 ucontrol within *tmp287 *tmp288 6 *tmp250
   584 jump *label508 equal *tmp250 false
-    * label *label512
-    * label *label513
-    * label *label529
-    * label *label530
   585 sensor *tmp252 @unit @firstItem
   586 jump *label533 equal *tmp252 null
   587 label *label531
   588 ucontrol itemDrop @air 1000
-    * label *label532
   589 sensor *tmp252 @unit @firstItem
   590 jump *label531 notEqual *tmp252 null
   591 label *label533
-    * label *label534
   592 label *label217
   593 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   594 sensor :fetchBlock:unitItem @unit @firstItem
 
   598 jump *label220 equal *tmp292 false
   599 ucontrol itemDrop @air 1000
   600 label *label220
-    * label *label221
-    * label *label218
   601 sensor *tmp294 @unit :fetchBlock:item
   602 op lessThan *tmp295 *tmp294 30
   603 sensor *tmp296 :fetchBlock:block :fetchBlock:item
   604 op land *tmp297 *tmp295 *tmp296
   605 jump *label217 notEqual *tmp297 false
-    * label *label219
-    * label *label571
-    * label *label572
   606 write "Depositing..." .display ".status3"
-    * label *label573
   607 sensor *tmp256 @unit @firstItem
   608 jump *label587 notEqual *tmp256 :fetchBlock:item
-    * label *label574
   609 sensor *tmp254 .core @x
   610 sensor *tmp255 .core @y
-    * label *label575
-    * label *label576
   611 write "Moving..." .display ".status3"
-    * label *label577
-    * label *label578
   612 ucontrol within *tmp254 *tmp255 6 *tmp242
   613 jump *label581 notEqual *tmp242 false
   614 label *label579
   615 ucontrol approach *tmp254 *tmp255 5.5
-    * label *label580
   616 ucontrol within *tmp254 *tmp255 6 *tmp242
   617 jump *label579 equal *tmp242 false
   618 label *label581
-    * label *label582
-    * label *label583
   619 sensor :depositItems:cap .core @itemCapacity
   620 label *label584
   621 ucontrol itemDrop .core 30
-    * label *label585
   622 sensor *tmp260 @unit @firstItem
   623 op mul *tmp261 *tmp260 :depositItems:cap
   624 sensor *tmp262 .core :fetchBlock:item
   625 jump *label584 greaterThan *tmp261 *tmp262
-    * label *label586
   626 jump *label592 always
   627 label *label587
-    * label *label588
   628 sensor *tmp264 @unit @firstItem
   629 jump *label591 equal *tmp264 null
   630 label *label589
   631 ucontrol itemDrop @air 1000
-    * label *label590
   632 sensor *tmp264 @unit @firstItem
   633 jump *label589 notEqual *tmp264 null
   634 label *label591
   635 label *label592
-    * label *label593
   636 write 0 .display ".transportTarget"
   637 write null .display ".transportItem"
-    * label *label594
-    * label *label595
-    * label *label212
   638 return :fetchBlock*retaddr
   639 end
   640 label *label24
-    * label *label486
   641 write "Supplying " .display ".status2"
   642 write :supplyBlock:ore .display ".item2"
   643 write :supplyBlock:block .display ".block2"
-    * label *label487
   644 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   645 sensor *tmp299 :supplyBlock:block :supplyBlock:ore
   646 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
 
   652 call *label21 *invalid :mineOre*retval (m:*label227) (h:*label227)
   653 label *label227
   654 label *label225
-    * label *label226
-    * label *label223
   655 return :supplyBlock*retaddr
   656 end
   657 label *label31
 
   680 op sub :unpackCfg:rotation *tmp348 35
   681 read *tmp354 :unpackCfg:cfg 12
   682 op sub :unpackCfg:ind *tmp354 35
-    * label *label239
   683 return :unpackCfg*retaddr
   684 end
   685 label *label32
 
   688 op max *tmp358 0 *tmp357
   689 write *tmp358 processor8 ".sandTarget"
   690 jump *label241 equal .thoriumContainer false
-    * label *label404
   691 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label405
   692 sensor *tmp360 .core @coal
   693 jump *label245 greaterThanEq *tmp360 50
   694 set :supplyBlock:block .thoriumGenerator
   695 set :supplyBlock:ore @coal
-    * label *label621
-    * label *label622
   696 write "Supplying " .display ".status2"
   697 write @coal .display ".item2"
   698 write .thoriumGenerator .display ".block2"
-    * label *label623
   699 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   700 sensor *tmp299 .thoriumGenerator @coal
   701 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
 
   707 call *label21 *invalid :mineOre*retval (m:*label624) (h:*label624)
   708 label *label624
   709 label *label625
-    * label *label626
-    * label *label627
   710 jump *label246 always
   711 label *label245
-    * label *label459
   712 sensor *tmp303 .thoriumGenerator @itemCapacity
   713 op min :transportStatus:target *tmp303 30
-    * label *label480
   714 write :transportStatus:target .display ".transportTarget"
   715 write @coal .display ".transportItem"
-    * label *label481
-    * label *label488
   716 write "Transferring " .display ".status2"
   717 write @coal .display ".item2"
   718 write .thoriumGenerator .display ".block2"
-    * label *label489
-    * label *label514
-    * label *label515
   719 write "Moving..." .display ".status3"
-    * label *label516
   720 label *label517
   721 sensor *tmp247 @unit @firstItem
   722 jump *label518 equal *tmp247 null
   723 ucontrol itemDrop @air 1000
   724 label *label518
-    * label *label519
   725 ucontrol approach .coreX .coreY 5.5
-    * label *label520
   726 ucontrol within .coreX .coreY 6 *tmp250
   727 jump *label517 equal *tmp250 false
-    * label *label521
-    * label *label522
-    * label *label535
-    * label *label536
   728 sensor *tmp252 @unit @firstItem
   729 jump *label539 equal *tmp252 null
   730 label *label537
   731 ucontrol itemDrop @air 1000
-    * label *label538
   732 sensor *tmp252 @unit @firstItem
   733 jump *label537 notEqual *tmp252 null
   734 label *label539
-    * label *label540
   735 label *label464
   736 ucontrol itemTake .core @coal 30
   737 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   741 jump *label465 equal *tmp308 false
   742 ucontrol itemDrop @air 1000
   743 label *label465
-    * label *label466
-    * label *label467
   744 sensor *tmp310 @unit @coal
   745 op lessThan *tmp311 *tmp310 30
   746 sensor *tmp312 .core @coal
   747 op land *tmp313 *tmp311 *tmp312
   748 jump *label464 notEqual *tmp313 false
-    * label *label468
-    * label *label596
-    * label *label597
   749 write "Depositing..." .display ".status3"
-    * label *label598
   750 sensor *tmp256 @unit @firstItem
   751 jump *label612 notEqual *tmp256 @coal
-    * label *label599
   752 sensor *tmp254 .thoriumGenerator @x
   753 sensor *tmp255 .thoriumGenerator @y
-    * label *label600
-    * label *label601
   754 write "Moving..." .display ".status3"
-    * label *label602
-    * label *label603
   755 ucontrol within *tmp254 *tmp255 6 *tmp242
   756 jump *label606 notEqual *tmp242 false
   757 label *label604
   758 ucontrol approach *tmp254 *tmp255 5.5
-    * label *label605
   759 ucontrol within *tmp254 *tmp255 6 *tmp242
   760 jump *label604 equal *tmp242 false
   761 label *label606
-    * label *label607
-    * label *label608
   762 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   763 label *label609
   764 ucontrol itemDrop .thoriumGenerator 30
-    * label *label610
   765 sensor *tmp260 @unit @firstItem
   766 op mul *tmp261 *tmp260 :depositItems:cap
   767 sensor *tmp262 .thoriumGenerator @coal
   768 jump *label609 greaterThan *tmp261 *tmp262
-    * label *label611
   769 jump *label617 always
   770 label *label612
-    * label *label613
   771 sensor *tmp264 @unit @firstItem
   772 jump *label616 equal *tmp264 null
   773 label *label614
   774 ucontrol itemDrop @air 1000
-    * label *label615
   775 sensor *tmp264 @unit @firstItem
   776 jump *label614 notEqual *tmp264 null
   777 label *label616
   778 label *label617
-    * label *label618
   779 write 0 .display ".transportTarget"
   780 write null .display ".transportItem"
-    * label *label619
-    * label *label620
-    * label *label470
   781 label *label246
   782 set :fetchBlock:block .thoriumContainer
   783 set :fetchBlock:item @thorium
   784 setaddr :fetchBlock*retaddr *label249 (h:*label249)
   785 call *label23 *invalid :fetchBlock*retval (m:*label249) (h:*label249)
   786 label *label249
-    * label *label243
   787 jump *label242 always
   788 label *label241
   789 read *tmp101 .controller ".monos"
   790 jump *label250 lessThanEq *tmp101 3
-    * label *label406
   791 write "Phase 1: supplying base" .display ".status1"
-    * label *label407
   792 set :mineOre.1:ore @coal
-    * label *label541
-    * label *label542
   793 write "Mining " .display ".status2"
   794 write @coal .display ".item2"
   795 write "core" .display ".block2"
-    * label *label543
   796 set :mineOre:ore @coal
   797 set :mineOre:amount 30
   798 set :mineOre:block .core
   799 setaddr :mineOre*retaddr *label544 (h:*label544)
   800 call *label21 *invalid :mineOre*retval (m:*label544) (h:*label544)
   801 label *label544
-    * label *label545
-    * label *label252
   802 jump *label251 always
   803 label *label250
   804 set :supplyBase0:supplied false
 
   807 jump *label258 greaterThanEq *tmp367 .targetGraphite
   808 sensor *tmp370 .press @coal
   809 jump *label260 greaterThanEq *tmp370 5
-    * label *label408
   810 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label409
   811 set :supplyBlock:block .press
   812 set :supplyBlock:ore @coal
   813 setaddr :supplyBlock*retaddr *label263 (h:*label263)
 
   815 label *label263
   816 set :supplyBase0:supplied true
   817 label *label260
-    * label *label261
   818 label *label258
-    * label *label259
   819 sensor *tmp373 .core @silicon
   820 jump *label264 greaterThanEq *tmp373 .targetSilicon
   821 sensor *tmp376 .smelter @coal
   822 jump *label266 greaterThanEq *tmp376 5
-    * label *label410
   823 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label411
   824 set :supplyBlock:block .smelter
   825 set :supplyBlock:ore @coal
   826 setaddr :supplyBlock*retaddr *label269 (h:*label269)
 
   831 label *label266
   832 sensor *tmp379 .smelter @sand
   833 jump *label270 greaterThanEq *tmp379 5
-    * label *label412
   834 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label413
   835 set :supplyBlock:block .smelter
   836 set :supplyBlock:ore @sand
   837 setaddr :supplyBlock*retaddr *label273 (h:*label273)
 
   839 label *label273
   840 set :supplyBase0:supplied true
   841 label *label270
-    * label *label271
   842 label *label267
   843 label *label264
-    * label *label265
   844 sensor *tmp382 .battery @totalPower
   845 jump *label274 greaterThanEq *tmp382 .powerTarget
   846 sensor *tmp385 .generator @coal
   847 jump *label276 greaterThanEq *tmp385 2
-    * label *label414
   848 write "Goal 4: supplying generator" .display ".status1"
-    * label *label415
   849 set :supplyBlock:block .generator
   850 set :supplyBlock:ore @coal
   851 setaddr :supplyBlock*retaddr *label279 (h:*label279)
 
   853 label *label279
   854 set :supplyBase0:supplied true
   855 label *label276
-    * label *label277
   856 label *label274
-    * label *label275
   857 label *label256
-    * label *label257
   858 set *tmp390 100
   859 sensor *tmp388 .core @titanium
   860 jump *label281 greaterThanEq *tmp388 .targetTitanium
 
   868 sensor *tmp399 .battery @totalPower
   869 op mul *tmp400 .unloader1 .powerTarget
   870 jump *label286 greaterThanEq *tmp399 *tmp400
-    * label *label416
   871 write "Goal 5: supplying generator" .display ".status1"
-    * label *label417
   872 set :mineOre.1:ore @coal
-    * label *label632
-    * label *label633
   873 write "Mining " .display ".status2"
   874 write @coal .display ".item2"
   875 write "core" .display ".block2"
-    * label *label634
   876 set :mineOre:ore @coal
   877 set :mineOre:amount 30
   878 set :mineOre:block .core
   879 setaddr :mineOre*retaddr *label635 (h:*label635)
   880 call *label21 *invalid :mineOre*retval (m:*label635) (h:*label635)
   881 label *label635
-    * label *label636
   882 jump *label287 always
   883 label *label286
   884 sensor *tmp403 .core @silicon
   885 jump *label290 greaterThanEq *tmp403 .targetSilicon
-    * label *label418
   886 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label419
   887 sensor :supplyBase0:coal .core @coal
   888 sensor :supplyBase0:sand .core @sand
   889 select *tmp409 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   890 set :mineOre.1:ore *tmp409
-    * label *label637
-    * label *label638
   891 write "Mining " .display ".status2"
   892 write *tmp409 .display ".item2"
   893 write "core" .display ".block2"
-    * label *label639
   894 set :mineOre:ore *tmp409
   895 set :mineOre:amount 30
   896 set :mineOre:block .core
   897 setaddr :mineOre*retaddr *label640 (h:*label640)
   898 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
   899 label *label640
-    * label *label641
   900 jump *label291 always
   901 label *label290
   902 sensor *tmp410 .core @copper
   903 jump *label296 greaterThanEq *tmp410 .targetCopper
-    * label *label420
   904 write "Goal 7: copper requirement" .display ".status1"
-    * label *label421
   905 set :mineOre.1:ore @copper
-    * label *label642
-    * label *label643
   906 write "Mining " .display ".status2"
   907 write @copper .display ".item2"
   908 write "core" .display ".block2"
-    * label *label644
   909 set :mineOre:ore @copper
   910 set :mineOre:amount 30
   911 set :mineOre:block .core
   912 setaddr :mineOre*retaddr *label645 (h:*label645)
   913 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
   914 label *label645
-    * label *label646
   915 jump *label297 always
   916 label *label296
   917 sensor *tmp413 .core @lead
   918 jump *label300 greaterThanEq *tmp413 .targetLead
-    * label *label422
   919 write "Goal 8: lead requirement" .display ".status1"
-    * label *label423
   920 set :mineOre.1:ore @lead
   921 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   922 call *label22 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
 
   925 label *label300
   926 sensor *tmp416 .core @metaglass
   927 jump *label304 greaterThanEq *tmp416 .targetMetaglass
-    * label *label424
   928 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label425
   929 set :mineOre.1:ore @sand
   930 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   931 call *label22 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   932 label *label307
   933 jump *label305 always
   934 label *label304
-    * label *label426
   935 write "Goal 10: supplying base" .display ".status1"
-    * label *label427
   936 sensor :supplyBase0:coal.1 .core @coal
   937 sensor :supplyBase0:sand.1 .core @sand
   938 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   945 label *label291
   946 label *label287
   947 label *label284
-    * label *label285
   948 jump *label283 always
   949 label *label282
-    * label *label428
   950 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label429
   951 set :fetchBlock:block .titaniumDrill
   952 set :fetchBlock:item @titanium
   953 setaddr :fetchBlock*retaddr *label313 (h:*label313)
   954 call *label23 *invalid :fetchBlock*retval (m:*label313) (h:*label313)
   955 label *label313
   956 label *label283
-    * label *label255
   957 label *label251
   958 label *label242
-    * label *label240
   959 return :supplyBase*retaddr
   960 end
   961 label *label33
-    * label *label375
   962 op sign :meetTarget:count :meetTarget:copper
-    * label *label376
-    * label *label379
   963 op sign *tmp424 :meetTarget:lead
   964 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label380
-    * label *label383
   965 op sign *tmp424 :meetTarget:graphite
   966 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label384
-    * label *label387
   967 op sign *tmp424 :meetTarget:silicon
   968 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label388
-    * label *label391
   969 op sign *tmp424 :meetTarget:titanium
   970 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label392
-    * label *label395
   971 op sign *tmp424 :meetTarget:metaglass
   972 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label396
-    * label *label399
   973 op sign *tmp424 :meetTarget:thorium
   974 op add :meetTarget:count :meetTarget:count *tmp424
-    * label *label400
-    * label *label317
   975 write :meetTarget:count .display ".totalTargets"
   976 write :meetTarget:block .display ".nextBlock"
   977 write :meetTarget:copper .display ".targetCopper"
 
  1012 set *tmp437 false
  1013 jump *label328 always
  1014 label *label329
-    * label *label330
  1015 sensor *tmp441 .core @lead
  1016 jump *label331 greaterThanEq *tmp441 .targetLead
  1017 set *tmp437 false
  1018 jump *label328 always
  1019 label *label331
-    * label *label332
  1020 sensor *tmp444 .core @graphite
  1021 jump *label333 greaterThanEq *tmp444 .targetGraphite
  1022 set *tmp437 false
  1023 jump *label328 always
  1024 label *label333
-    * label *label334
  1025 sensor *tmp447 .core @silicon
  1026 jump *label335 greaterThanEq *tmp447 .targetSilicon
  1027 set *tmp437 false
  1028 jump *label328 always
  1029 label *label335
-    * label *label336
  1030 sensor *tmp450 .core @titanium
  1031 jump *label337 greaterThanEq *tmp450 .targetTitanium
  1032 set *tmp437 false
  1033 jump *label328 always
  1034 label *label337
-    * label *label338
  1035 sensor *tmp453 .core @metaglass
  1036 jump *label339 greaterThanEq *tmp453 .targetMetaglass
  1037 set *tmp437 false
  1038 jump *label328 always
  1039 label *label339
-    * label *label340
  1040 sensor *tmp456 .core @thorium
  1041 jump *label341 greaterThanEq *tmp456 .targetThorium
  1042 set *tmp437 false
  1043 jump *label328 always
  1044 label *label341
-    * label *label342
  1045 set *tmp437 true
  1046 jump *label328 always
  1047 label *label328
 
  1049 setaddr :supplyBase*retaddr *label343 (h:*label343)
  1050 call *label32 *invalid :supplyBase*retval (m:*label343) (h:*label343)
  1051 label *label343
-    * label *label326
  1052 jump *label325 always
  1053 label *label327
-    * label *label314
  1054 return :meetTarget*retaddr
  1055 end
  1056 label *label34
 
  1078 read *tmp466 .blockBuilder ":buildBlockAt*finished"
  1079 jump *label346 equal *tmp466 false
  1080 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label344
  1081 return :buildBlock*retaddr
  1082 end
  1083 label *label35
 
  1106 set :buildRemoteBlock*retval :buildBlock*retval
  1107 jump *label347 always
  1108 label *label348
-    * label *label349
  1109 set :buildRemoteBlock*retval false
  1110 jump *label347 always
  1111 label *label347
 
  1135 call *label34 *invalid :buildBlock*retval (m:*label354) (h:*label354)
  1136 label *label354
  1137 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label352
  1138 return :buildBlockFromCfg*retaddr
  1139 end
  1140 label *label37
 
  1144 call *label36 *invalid :buildBlockFromCfg*retval (m:*label356) (h:*label356)
  1145 label *label356
  1146 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label355
  1147 return :buildBlockFromCfg.1*retaddr
  1148 end
  1149 label *label38
 
  1162 setaddr :meetTarget*retaddr *label359 (h:*label359)
  1163 call *label33 *invalid :meetTarget*retval (m:*label359) (h:*label359)
  1164 label *label359
-    * label *label357
  1165 return :meetTarget.1*retaddr
  1166 end
  1167 label *label39
 
  1181 write 0 .controller ".leadReserve"
  1182 write 0 .controller ".siliconReserve"
  1183 write 0 .controller ".graphiteReserve"
-    * label *label360
  1184 return :buildUnits*retaddr
  1185 end
  1186 label *label40
  1187 label *label363
  1188 ubind :flagUnits:unit
  1189 set :flagUnits:firstUnit @unit
-    * label *label364
  1190 jump *label363 equal :flagUnits:firstUnit null
-    * label *label365
  1191 set :flagUnits:x @thisx
  1192 label *label366
  1193 ucontrol flag :flagUnits:x
  1194 op add :flagUnits:x :flagUnits:x 4
  1195 ubind :flagUnits:unit
-    * label *label367
  1196 jump *label366 notEqual @unit :flagUnits:firstUnit
-    * label *label368
-    * label *label362
  1197 return :flagUnits*retaddr
  1198 end
  1199 label *label41
 
  1207 jump *label373 equal *tmp478 false
  1208 ucontrol stop
  1209 label *label373
-    * label *label374
  1210 ubind :lineUpUnits:unit
-    * label *label371
  1211 jump *label370 notEqual @unit :lineUpUnits:firstUnit
-    * label *label372
-    * label *label369
  1212 return :lineUpUnits*retaddr
  1213 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   148 call *label32 *invalid :supplyBase*retval (m:*label72) (h:*label72)
   149 label *label72
   150 sensor *tmp163 .battery @totalPower
-    * jump *label73 greaterThanEq *tmp163 300
-    * jump *label71 always
+  151 jump *label71 lessThan *tmp163 300
   152 label *label73
   153 read *tmp101 .controller ".monos"
   154 jump *label69 lessThan *tmp101 3
 
   505 op notEqual *tmp276 :mineOre:item null
   506 op notEqual *tmp277 :mineOre:item :mineOre:ore
   507 op land *tmp278 *tmp276 *tmp277
-    * jump *label204 equal *tmp278 false
-    * jump *label203 always
+  508 jump *label203 notEqual *tmp278 false
   509 label *label204
   510 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label206 lessThanEq @second :mineOre:stop
-    * jump *label203 always
+  511 jump *label203 greaterThan @second :mineOre:stop
   512 label *label206
   513 sensor *tmp282 @unit @totalItems
   514 jump *label201 lessThan *tmp282 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   149 label *label72
   150 sensor *tmp163 .battery @totalPower
   151 jump *label71 lessThan *tmp163 300
-    * label *label73
   152 read *tmp101 .controller ".monos"
   153 jump *label69 lessThan *tmp101 3
   154 label *label71
 
   505 op notEqual *tmp277 :mineOre:item :mineOre:ore
   506 op land *tmp278 *tmp276 *tmp277
   507 jump *label203 notEqual *tmp278 false
-    * label *label204
   508 ucontrol mine :locateOre:x :locateOre:y
   509 jump *label203 greaterThan @second :mineOre:stop
-    * label *label206
   510 sensor *tmp282 @unit @totalItems
   511 jump *label201 lessThan *tmp282 :mineOre:amount
   512 label *label203

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   464 label *label150
   465 op sub :lineUpUnits:y @thisy 18
   466 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label151 (h:*label151)
+  467 setaddr :lineUpUnits*retaddr *label145 (h:*label151)
   468 call *label41 *invalid :lineUpUnits*retval (m:*label151) (h:*label151)
   469 label *label151
   470 jump *label145 always
 
   693 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   694 sensor *tmp299 .thoriumGenerator @coal
   695 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
-    * jump *label625 lessThanEq :supplyBlock:missing 0
+  696 jump *label246 lessThanEq :supplyBlock:missing 0
   697 set :mineOre:ore @coal
   698 set :mineOre:amount :supplyBlock:blockCapacity
   699 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label624 (h:*label624)
+  700 setaddr :mineOre*retaddr *label246 (h:*label624)
   701 call *label21 *invalid :mineOre*retval (m:*label624) (h:*label624)
   702 label *label624
   703 label *label625
 
   778 setaddr :fetchBlock*retaddr *label249 (h:*label249)
   779 call *label23 *invalid :fetchBlock*retval (m:*label249) (h:*label249)
   780 label *label249
-    * jump *label242 always
+  781 return :supplyBase*retaddr
   782 label *label241
   783 read *tmp101 .controller ".monos"
   784 jump *label250 lessThanEq *tmp101 3
 
   793 setaddr :mineOre*retaddr *label544 (h:*label544)
   794 call *label21 *invalid :mineOre*retval (m:*label544) (h:*label544)
   795 label *label544
-    * jump *label251 always
+  796 return :supplyBase*retaddr
   797 label *label250
   798 set :supplyBase0:supplied false
   799 jump *label256 notEqual .unloader1 null
 
   858 label *label281
   859 sensor *tmp394 .titaniumDrill @titanium
   860 jump *label282 greaterThanEq *tmp394 *tmp390
-    * jump *label284 notEqual :supplyBase0:supplied false
+  861 jump *label283 notEqual :supplyBase0:supplied false
   862 sensor *tmp399 .battery @totalPower
   863 op mul *tmp400 .unloader1 .powerTarget
   864 jump *label286 greaterThanEq *tmp399 *tmp400
 
   873 setaddr :mineOre*retaddr *label635 (h:*label635)
   874 call *label21 *invalid :mineOre*retval (m:*label635) (h:*label635)
   875 label *label635
-    * jump *label287 always
+  876 return :supplyBase*retaddr
   877 label *label286
   878 sensor *tmp403 .core @silicon
   879 jump *label290 greaterThanEq *tmp403 .targetSilicon
 
   891 setaddr :mineOre*retaddr *label640 (h:*label640)
   892 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
   893 label *label640
-    * jump *label291 always
+  894 return :supplyBase*retaddr
   895 label *label290
   896 sensor *tmp410 .core @copper
   897 jump *label296 greaterThanEq *tmp410 .targetCopper
 
   906 setaddr :mineOre*retaddr *label645 (h:*label645)
   907 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
   908 label *label645
-    * jump *label297 always
+  909 return :supplyBase*retaddr
   910 label *label296
   911 sensor *tmp413 .core @lead
   912 jump *label300 greaterThanEq *tmp413 .targetLead
 
   915 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   916 call *label22 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
   917 label *label303
-    * jump *label301 always
+  918 return :supplyBase*retaddr
   919 label *label300
   920 sensor *tmp416 .core @metaglass
   921 jump *label304 greaterThanEq *tmp416 .targetMetaglass
 
   924 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   925 call *label22 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   926 label *label307
-    * jump *label305 always
+  927 return :supplyBase*retaddr
   928 label *label304
   929 write "Goal 10: supplying base" .display ".status1"
   930 sensor :supplyBase0:coal.1 .core @coal
 
   939 label *label291
   940 label *label287
   941 label *label284
-    * jump *label283 always
+  942 return :supplyBase*retaddr
   943 label *label282
   944 write "Goal 11: Fetching titanium" .display ".status1"
   945 set :fetchBlock:block .titaniumDrill
 
  1040 jump *label328 always
  1041 label *label328
  1042 jump *label327 notEqual *tmp437 false
-    * setaddr :supplyBase*retaddr *label343 (h:*label343)
+ 1043 setaddr :supplyBase*retaddr *label325 (h:*label343)
  1044 call *label32 *invalid :supplyBase*retval (m:*label343) (h:*label343)
  1045 label *label343
  1046 jump *label325 always
 
  1098 call *label34 *invalid :buildBlock*retval (m:*label351) (h:*label351)
  1099 label *label351
  1100 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label347 always
+ 1101 return :buildRemoteBlock*retaddr
  1102 label *label348
  1103 set :buildRemoteBlock*retval false
-    * jump *label347 always
+ 1104 return :buildRemoteBlock*retaddr
  1105 label *label347
  1106 return :buildRemoteBlock*retaddr
  1107 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-20 instructions):
 
   466 set :lineUpUnits:unit @flare
   467 setaddr :lineUpUnits*retaddr *label145 (h:*label151)
   468 call *label41 *invalid :lineUpUnits*retval (m:*label151) (h:*label151)
-    * label *label151
-    * jump *label145 always
-    * end
   469 label *label21
   470 op min :mineOre:amount :mineOre:amount 30
   471 write :mineOre:amount .display ".transportTarget"
 
   541 write 0 .display ".transportTarget"
   542 write null .display ".transportItem"
   543 return :mineOre*retaddr
-    * end
   544 label *label22
   545 write "Mining " .display ".status2"
   546 write :mineOre.1:ore .display ".item2"
 
   552 call *label21 *invalid :mineOre*retval (m:*label211) (h:*label211)
   553 label *label211
   554 return :mineOre.1*retaddr
-    * end
   555 label *label23
   556 sensor *tmp285 :fetchBlock:block @itemCapacity
   557 op min :transportStatus:target *tmp285 30
 
   625 write 0 .display ".transportTarget"
   626 write null .display ".transportItem"
   627 return :fetchBlock*retaddr
-    * end
   628 label *label24
   629 write "Supplying " .display ".status2"
   630 write :supplyBlock:ore .display ".item2"
 
   641 label *label227
   642 label *label225
   643 return :supplyBlock*retaddr
-    * end
   644 label *label31
   645 read *tmp315 :unpackCfg:cfg 0
   646 op sub *tmp316 *tmp315 35
 
   668 read *tmp354 :unpackCfg:cfg 12
   669 op sub :unpackCfg:ind *tmp354 35
   670 return :unpackCfg*retaddr
-    * end
   671 label *label32
   672 sensor *tmp356 .core @silicon
   673 op sub *tmp357 .targetSilicon *tmp356
 
   691 set :mineOre:block .thoriumGenerator
   692 setaddr :mineOre*retaddr *label246 (h:*label624)
   693 call *label21 *invalid :mineOre*retval (m:*label624) (h:*label624)
-    * label *label624
-    * label *label625
-    * jump *label246 always
   694 label *label245
   695 sensor *tmp303 .thoriumGenerator @itemCapacity
   696 op min :transportStatus:target *tmp303 30
 
   922 setaddr :mineOre.1*retaddr *label311 (h:*label311)
   923 call *label22 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
   924 label *label311
-    * label *label305
-    * label *label301
-    * label *label297
-    * label *label291
-    * label *label287
-    * label *label284
   925 return :supplyBase*retaddr
   926 label *label282
   927 write "Goal 11: Fetching titanium" .display ".status1"
 
   931 call *label23 *invalid :fetchBlock*retval (m:*label313) (h:*label313)
   932 label *label313
   933 label *label283
-    * label *label251
-    * label *label242
   934 return :supplyBase*retaddr
-    * end
   935 label *label33
   936 op sign :meetTarget:count :meetTarget:copper
   937 op sign *tmp424 :meetTarget:lead
 
  1022 jump *label327 notEqual *tmp437 false
  1023 setaddr :supplyBase*retaddr *label325 (h:*label343)
  1024 call *label32 *invalid :supplyBase*retval (m:*label343) (h:*label343)
-    * label *label343
-    * jump *label325 always
  1025 label *label327
  1026 return :meetTarget*retaddr
-    * end
  1027 label *label34
  1028 set :meetTarget:block :buildBlock:block
  1029 set :meetTarget:copper :buildBlock:copper
 
  1050 jump *label346 equal *tmp466 false
  1051 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1052 return :buildBlock*retaddr
-    * end
  1053 label *label35
  1054 op add *tmp468 :buildRemoteBlock:x :buildRemoteBlock:y
  1055 jump *label348 lessThanEq *tmp468 0
 
  1078 label *label348
  1079 set :buildRemoteBlock*retval false
  1080 return :buildRemoteBlock*retaddr
-    * label *label347
-    * return :buildRemoteBlock*retaddr
-    * end
  1081 label *label36
  1082 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1083 setaddr :unpackCfg*retaddr *label353 (h:*label353)
 
  1103 label *label354
  1104 set :buildBlockFromCfg*retval :buildBlock*retval
  1105 return :buildBlockFromCfg*retaddr
-    * end
  1106 label *label37
  1107 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1108 set :buildBlockFromCfg:config null
 
  1111 label *label356
  1112 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1113 return :buildBlockFromCfg.1*retaddr
-    * end
  1114 label *label38
  1115 set :unpackCfg:cfg :meetTarget.1:cfg
  1116 setaddr :unpackCfg*retaddr *label358 (h:*label358)
 
  1128 call *label33 *invalid :meetTarget*retval (m:*label359) (h:*label359)
  1129 label *label359
  1130 return :meetTarget.1*retaddr
-    * end
  1131 label *label39
  1132 set :meetTarget:block 0
  1133 set :meetTarget:copper 0
 
  1146 write 0 .controller ".siliconReserve"
  1147 write 0 .controller ".graphiteReserve"
  1148 return :buildUnits*retaddr
-    * end
  1149 label *label40
  1150 label *label363
  1151 ubind :flagUnits:unit
 
  1158 ubind :flagUnits:unit
  1159 jump *label366 notEqual @unit :flagUnits:firstUnit
  1160 return :flagUnits*retaddr
-    * end
  1161 label *label41
  1162 ubind :lineUpUnits:unit
  1163 set :lineUpUnits:firstUnit @unit
 
  1172 ubind :lineUpUnits:unit
  1173 jump *label370 notEqual @unit :lineUpUnits:firstUnit
  1174 return :lineUpUnits*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    19 label *label43
    20 ubind @poly
    21 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp129 .core
+   22 ulocate building core false @copper .coreX .coreY 0 .core
    23 jump *label43 equal .core null
    24 set :buildBlockFromCfg.1:cfg "#'+nA######%#"
    25 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
 
   470 op min :mineOre:amount :mineOre:amount 30
   471 write :mineOre:amount .display ".transportTarget"
   472 write :mineOre:ore .display ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 *tmp267
+  473 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 0
   474 jump *label456 notEqual *tmp266 false
   475 set .ERROR "Cannot locate ore"
   476 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
        label *label42                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    3:  read *tmp114 processor8 "*signature"                         ...
    4:  jump *label42 notEqual *tmp114 "0:v1"                        ...
    5:  set .press null                                              CoreBuilder.mnd: var
    6:  set .generator null                                          ...
    7:  set .battery null                                            ...
    8:  set .smelter null                                            ...
    9:  set .titaniumDrill null                                      ...
   10:  set .unloader1 null                                          ...
   11:  set .thoriumContainer null                                   ...
   12:  set .thoriumGenerator null                                   ...
   13:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   14:  set .graphiteSurplus 20                                      ...
   15:  set .siliconSurplus 20                                       ...
   16:  set .metaglassSurplus 20                                     ...
   17:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label43                                               CoreBuilder.mnd: do
   18:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   19:  set .builder @unit                                           ...
   20:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   21:  jump *label43 equal .core null                               CoreBuilder.mnd: do
   22:  set :buildBlockFromCfg.1:cfg "#'+nA######%#"                 CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   23:  setaddr :buildBlockFromCfg.1*retaddr *label46                ...
   24:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label46                                               ...
   25:  set .press :buildBlockFromCfg.1*retval                       ...
   26:  set :buildBlockFromCfg.1:cfg "k*/(7######$$"                 CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   27:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   28:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   29:  set .battery :buildBlockFromCfg.1*retval                     ...
   30:  set :buildBlockFromCfg.1:cfg "k+/(7######$%"                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   31:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   32:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   33:  set :buildBlockFromCfg.1:cfg "m*.<2######$&"                 CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   34:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   35:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   36:  set .generator :buildBlockFromCfg.1*retval                   ...
   37:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   38:  set :buildBlockFromCfg.1:cfg "%+-A<######%'"                 CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   39:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   40:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   41:  set .smelter :buildBlockFromCfg.1*retval                     ...
   42:  set :buildBlockFromCfg.1:cfg "T+,%%######$("                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   43:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   44:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   45:  set :meetTarget.1:cfg "w**5#-#####%)"                        CoreBuilder.mnd: meetTarget(cfg);
   46:  setaddr :meetTarget.1*retaddr *label53                       ...
   47:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label53                                               ...
   48:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   49:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   50:  write .coreY processor4 ":findDrillLocation:y"               ...
   51:  write @unit processor4 ":findDrillLocation:unit"             ...
   52:  write @titanium processor4 ":findDrillLocation:item"         ...
   53:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   54:  write 2 processor4 ":findDrillLocation:size"                 ...
   55:  write 4 processor4 ":findDrillLocation:limit"                ...
   56:  write false processor4 ":findDrillLocation*finished"         ...
   57:  write 1 processor4 "@counter"                                ...
        label *label54                                               ...
   58:  wait 1e-15                                                   ...
   59:  read *tmp148 processor4 ":findDrillLocation*finished"        ...
   60:  jump *label54 equal *tmp148 false                            ...
   61:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   62:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   63:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   64:  jump *label55 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   65:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   66:  stop                                                         Actions.mnd: stopProcessor();
        label *label55                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   67:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   68:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   69:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   70:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   71:  write 2 processor5 "@counter"                                ...
        label *label58                                               ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished ...
   74:  jump *label58 equal *tmp154 false                            ...
   75:  read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   76:  set .titaniumDrill *tmp137                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   77:  write *tmp137 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   78:  set :buildBlockFromCfg.1:cfg "*,###A<###$*"                 CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
   79:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
   80:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
   81:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
   82:  set :buildBlockFromCfg.1:cfg "T),%%######$+"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   83:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   84:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   85:  set :buildBlockFromCfg.1:cfg "W*-'%######$,"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   86:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   87:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   88:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   89:  set :buildBlockFromCfg:cfg "®-.}U#U####$-"                   CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   90:  set :buildBlockFromCfg:config processor2                     ...
   91:  setaddr :buildBlockFromCfg*retaddr *label62                  ...
   92:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label62                                               ...
   93:  set .controller :buildBlockFromCfg*retval                    ...
   94:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   95:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   96:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   97:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   98:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
   99:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  100:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  101:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  102:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  103:  set :buildBlockFromCfg.1:cfg "g)'%)######$."                 CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  104:  setaddr :buildBlockFromCfg.1*retaddr *label63                ...
  105:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label63                                               ...
  106:  set :buildBlockFromCfg.1:cfg "(*###A<###$/"                 CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  107:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
  108:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
  109:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  110:  set :buildBlockFromCfg.1:cfg "'(_i#####&&0"                 CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  111:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
  112:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
  113:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  114:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  115:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  116:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  117:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  118:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  119:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  120:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  121:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  122:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  123:  set .siliconSurplus 20                                       ...
  124:  setaddr :buildUnits*retaddr *label68                         CoreBuilder.mnd: buildUnits();
  125:  call *label39 *invalid :buildUnits*retval                    ...
        label *label68                                               ...
        label *label69                                               CoreBuilder.mnd: do
  126:  setaddr :supplyBase*retaddr *label72                         CoreBuilder.mnd: supplyBase();
  127:  call *label32 *invalid :supplyBase*retval                    ...
        label *label72                                               ...
  128:  sensor *tmp163 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  129:  jump *label71 lessThan *tmp163 300                           ...
  130:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: while controller.monos < 3;
  131:  jump *label69 lessThan *tmp101 3                             CoreBuilder.mnd: do
        label *label71                                               ...
  132:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  133:  set :buildBlockFromCfg.1:cfg ",)###A<###$1"                 CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  134:  setaddr :buildBlockFromCfg.1*retaddr *label75                ...
  135:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label75                                               ...
  136:  set :buildBlockFromCfg.1:cfg "T,*%%######$2"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  137:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  138:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  139:  set :buildBlockFromCfg.1:cfg "',+_AA#####%3"                 CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  140:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  141:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  142:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  143:  set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"                 CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  144:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  145:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  146:  set :buildBlockFromCfg.1:cfg "W'*'%######$5"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  147:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  148:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  149:  set :buildBlockFromCfg.1:cfg "W&*'%######$6"                 CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  150:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  151:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  152:  set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"                 CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  153:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  154:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  155:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  156:  set :buildBlockFromCfg.1:cfg "$(.#U<###&8"                 CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  157:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  158:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  159:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  160:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  161:  set :buildBlockFromCfg.1:cfg " '%-#2#####&9"                 CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  162:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  163:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  164:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  165:  set :buildBlockFromCfg.1:cfg "*(###A<###$:"                 CoreBuilder.mnd: controller.unloader4 = buildBlockFromCfg(UNLOADER4);
  166:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  167:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  168:  write :buildBlockFromCfg.1*retval .controller ".unloader4"   ...
  169:  set :buildBlockFromCfg.1:cfg "X*''%######$;"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  170:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  171:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  172:  set :buildBlockFromCfg.1:cfg "*%ë#}####&<"                 CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  173:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  174:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  175:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  176:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  177:  set :buildBlockFromCfg.1:cfg "l/,#U#A7###&="                 CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  178:  setaddr :buildBlockFromCfg.1*retaddr *label87                ...
  179:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label87                                               ...
  180:  setaddr :buildUnits*retaddr *label88                         CoreBuilder.mnd: buildUnits();
  181:  call *label39 *invalid :buildUnits*retval                    ...
        label *label88                                               ...
  182:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  183:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  184:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  185:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  186:  set :buildBlockFromCfg.1:cfg "%.)A<######%A"                 CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  187:  setaddr :buildBlockFromCfg.1*retaddr *label90                ...
  188:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label90                                               ...
  189:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  190:  set :buildBlockFromCfg.1:cfg "T-*%%######$B"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  191:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  192:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  193:  set :buildBlockFromCfg.1:cfg "T-)%%######$C"                 CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  194:  setaddr :buildBlockFromCfg.1*retaddr *label92                ...
  195:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label92                                               ...
  196:  set :buildBlockFromCfg:cfg "--###A<###$D"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  197:  set :buildBlockFromCfg:config @sand                          ...
  198:  setaddr :buildBlockFromCfg*retaddr *label93                  ...
  199:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label93                                               ...
  200:  setaddr :buildUnits*retaddr *label94                         CoreBuilder.mnd: buildUnits();
  201:  call *label39 *invalid :buildUnits*retval                    ...
        label *label94                                               ...
  202:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  203:  jump *label97 greaterThanEq *tmp102 3                        ...
        label *label628                                              ...
  204:  setaddr :supplyBase*retaddr *label98                         CoreBuilder.mnd: supplyBase();
  205:  call *label32 *invalid :supplyBase*retval                    ...
        label *label98                                               ...
  206:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 3 do
  207:  jump *label628 lessThan *tmp102 3                            ...
        label *label97                                               ...
  208:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  209:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  210:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  211:  jump *label102 greaterThanEq *tmp100 2                       ...
        label *label629                                              ...
  212:  setaddr :supplyBase*retaddr *label103                        CoreBuilder.mnd: supplyBase();
  213:  call *label32 *invalid :supplyBase*retval                    ...
        label *label103                                              ...
  214:  read *tmp100 .controller ".flares"                           CoreBuilder.mnd: while controller.flares < 2 do
  215:  jump *label629 lessThan *tmp100 2                            ...
        label *label102                                              ...
  216:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  217:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  218:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  219:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  220:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  221:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  222:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  223:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  224:  write .coreY processor4 ":findDrillLocation:y"               ...
  225:  write @unit processor4 ":findDrillLocation:unit"             ...
  226:  write @titanium processor4 ":findDrillLocation:item"         ...
  227:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  228:  write 4 processor4 ":findDrillLocation:size"                 ...
  229:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  230:  write false processor4 ":findDrillLocation*finished"         ...
  231:  write 1 processor4 "@counter"                                ...
  232:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  233:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  234:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  235:  write false processor5 ":buildTitaniumDrills*finished"       ...
  236:  write 3 processor5 "@counter"                                ...
        label *label106                                              ...
  237:  wait 1e-15                                                   ...
  238:  read *tmp198 processor5 ":buildTitaniumDrills*finished"      ...
  239:  jump *label106 equal *tmp198 false                           ...
  240:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  241:  write 3 processor4 "@counter"                                ...
  242:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  243:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  244:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  245:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  246:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  247:  write false processor4 ":layoutThoriumDrill*finished"        ...
  248:  write 2 processor4 "@counter"                                ...
        label *label108                                              ...
  249:  wait 1e-15                                                   ...
  250:  read *tmp203 processor4 ":layoutThoriumDrill*finished"       ...
  251:  jump *label108 equal *tmp203 false                           ...
  252:  set :meetTarget.1:cfg "x**F#AA7###&>"                        CoreBuilder.mnd: meetTarget(LASER_DRILL);
  253:  setaddr :meetTarget.1*retaddr *label109                      ...
  254:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label109                                              ...
        label *label110                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  255:  wait 1e-15                                                   ...
  256:  read *tmp205 processor4 ":layoutThoriumDrill*finished"       ...
  257:  jump *label110 equal *tmp205 false                           ...
  258:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  259:  jump *label111 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  260:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  261:  stop                                                         Actions.mnd: stopProcessor();
        label *label111                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  262:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  263:  read *tmp56 processor4 ".drillX"                             ...
  264:  write *tmp56 processor5 ":buildBlockAt:x"                    ...
  265:  read *tmp57 processor4 ".drillY"                             ...
  266:  write *tmp57 processor5 ":buildBlockAt:y"                    ...
  267:  write null processor5 ":buildBlockAt:rotation"               ...
  268:  write 0 processor5 ":buildBlockAt:config"                    ...
  269:  write -1 processor5 ":buildBlockAt:index"                    ...
  270:  write false processor5 ":buildBlockAt*finished"              ...
  271:  write 1 processor5 "@counter"                                ...
        label *label114                                              ...
  272:  wait 1e-15                                                   ...
  273:  read *tmp215 processor5 ":buildBlockAt*finished"             ...
  274:  jump *label114 equal *tmp215 false                           ...
  275:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  276:  set :buildRemoteBlock:cfg "z%-AAA##A##%4"                    CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  277:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  278:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  279:  setaddr :buildRemoteBlock*retaddr *label115                  ...
  280:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label115                                              ...
  281:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  282:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  283:  setaddr :buildRemoteBlock*retaddr *label116                  ...
  284:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label116                                              ...
  285:  set :buildRemoteBlock:cfg "o%+FK<A####%7"                    CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  286:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  287:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  288:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  289:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  290:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  291:  set :buildRemoteBlock:cfg "g)'%)######$."                    CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  292:  read :buildRemoteBlock:x processor4 ".node1X"                ...
  293:  read :buildRemoteBlock:y processor4 ".node1Y"                ...
  294:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  295:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  296:  read :buildRemoteBlock:x processor4 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  297:  read :buildRemoteBlock:y processor4 ".node2Y"                ...
  298:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  299:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  300:  set :buildRemoteBlock:cfg "r**#-#+####$?"                    CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  301:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  302:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  303:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  304:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  305:  set :buildRemoteBlock:cfg "k*/(7######$$"                    CoreBuilder.mnd: buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  306:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  307:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  308:  setaddr :buildRemoteBlock*retaddr *label121                  ...
  309:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label121                                              ...
  310:  set :buildRemoteBlock:cfg "**#######%@"                    CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  311:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  312:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  313:  setaddr :buildRemoteBlock*retaddr *label122                  ...
  314:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label122                                              ...
  315:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  316:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  317:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  318:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  319:  write false processor3 ":setThoriumContainer*finished"       ...
  320:  write 3 processor3 "@counter"                                ...
        label *label125                                              ...
  321:  wait 1e-15                                                   ...
  322:  read *tmp228 processor3 ":setThoriumContainer*finished"      ...
  323:  jump *label125 equal *tmp228 false                           ...
  324:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  325:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  326:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  327:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  328:  jump *label129 greaterThanEq *tmp102 5                       ...
        label *label630                                              ...
  329:  setaddr :supplyBase*retaddr *label130                        CoreBuilder.mnd: supplyBase();
  330:  call *label32 *invalid :supplyBase*retval                    ...
        label *label130                                              ...
  331:  read *tmp102 .controller ".polys"                            CoreBuilder.mnd: while controller.polys < 5 do
  332:  jump *label630 lessThan *tmp102 5                            ...
        label *label129                                              ...
  333:  set :buildBlockFromCfg:cfg "+(###A<###$E"                   CoreBuilder.mnd: controller.unloader6 = buildBlockFromCfg(UNLOADER6, @silicon);
  334:  set :buildBlockFromCfg:config @silicon                       ...
  335:  setaddr :buildBlockFromCfg*retaddr *label131                 ...
  336:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label131                                              ...
  337:  write :buildBlockFromCfg*retval .controller ".unloader6"     ...
  338:  set :buildBlockFromCfg.1:cfg "X+''%######$F"                 CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  339:  setaddr :buildBlockFromCfg.1*retaddr *label132               ...
  340:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label132                                              ...
  341:  set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(G"                 CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  342:  setaddr :buildBlockFromCfg.1*retaddr *label134               ...
  343:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label134                                              ...
  344:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  345:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  346:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  347:  setaddr :buildUnits*retaddr *label135                        CoreBuilder.mnd: buildUnits();
  348:  call *label39 *invalid :buildUnits*retval                    ...
        label *label135                                              ...
  349:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  350:  jump *label138 greaterThanEq *tmp103 1                       ...
        label *label631                                              ...
  351:  setaddr :supplyBase*retaddr *label139                        CoreBuilder.mnd: supplyBase();
  352:  call *label32 *invalid :supplyBase*retval                    ...
        label *label139                                              ...
  353:  read *tmp103 .controller ".megas"                            CoreBuilder.mnd: while controller.megas < 1 do
  354:  jump *label631 lessThan *tmp103 1                            ...
        label *label138                                              ...
  355:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  356:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  357:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  358:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  359:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  360:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  361:  setaddr :flagUnits*retaddr *label141                         ...
  362:  call *label40 *invalid :flagUnits*retval                     ...
        label *label141                                              ...
  363:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  364:  setaddr :flagUnits*retaddr *label142                         ...
  365:  call *label40 *invalid :flagUnits*retval                     ...
        label *label142                                              ...
  366:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  367:  setaddr :flagUnits*retaddr *label143                         ...
  368:  call *label40 *invalid :flagUnits*retval                     ...
        label *label143                                              ...
  369:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  370:  setaddr :flagUnits*retaddr *label144                         ...
  371:  call *label40 *invalid :flagUnits*retval                     ...
        label *label144                                              ...
        label *label145                                              CoreBuilder.mnd: while true do
  372:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  373:  set :lineUpUnits:unit @mega                                  ...
  374:  setaddr :lineUpUnits*retaddr *label148                       ...
  375:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label148                                              ...
  376:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  377:  set :lineUpUnits:unit @poly                                  ...
  378:  setaddr :lineUpUnits*retaddr *label149                       ...
  379:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label149                                              ...
  380:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  381:  set :lineUpUnits:unit @mono                                  ...
  382:  setaddr :lineUpUnits*retaddr *label150                       ...
  383:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label150                                              ...
  384:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  385:  set :lineUpUnits:unit @flare                                 ...
  386:  setaddr :lineUpUnits*retaddr *label145                       ...
  387:  call *label41 *invalid :lineUpUnits*retval                   ...
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  388:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  389:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  390:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  391:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  392:  jump *label456 notEqual *tmp266 false                        ...
  393:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  394:  stop                                                         Actions.mnd: stopProcessor();
        label *label456                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  395:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label499                                              Actions.mnd: do
  396:  sensor *tmp247 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  397:  jump *label500 equal *tmp247 null                            ...
  398:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label500                                              ...
  399:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  400:  ucontrol within :locateOre:x :locateOre:y 6 *tmp250 0        Actions.mnd: while !within(x, y, RADIUS);
  401:  jump *label499 equal *tmp250 false                           Actions.mnd: do
  402:  sensor *tmp271 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  403:  jump *label197 equal *tmp271 :mineOre:ore                    ...
  404:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  405:  jump *label527 equal *tmp252 null                            ...
        label *label525                                              ...
  406:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  407:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  408:  jump *label525 notEqual *tmp252 null                         ...
        label *label527                                              ...
        label *label197                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  409:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  410:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label201                                              Actions.mnd: do
  411:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  412:  op notEqual *tmp276 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  413:  op notEqual *tmp277 :mineOre:item :mineOre:ore               ...
  414:  op land *tmp278 *tmp276 *tmp277                              ...
  415:  jump *label203 notEqual *tmp278 false                        ...
  416:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  417:  jump *label203 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  418:  sensor *tmp282 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  419:  jump *label201 lessThan *tmp282 :mineOre:amount              Actions.mnd: do
        label *label203                                              ...
  420:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  421:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  422:  sensor *tmp256 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  423:  jump *label562 notEqual *tmp256 :mineOre:ore                 ...
  424:  sensor *tmp254 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  425:  sensor *tmp255 :mineOre:block @y                             ...
  426:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  427:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  428:  jump *label556 notEqual *tmp242 false                        ...
        label *label554                                              ...
  429:  ucontrol approach *tmp254 *tmp255 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  430:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  431:  jump *label554 equal *tmp242 false                           ...
        label *label556                                              ...
  432:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label559                                              Actions.mnd: do
  433:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  434:  sensor *tmp260 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  435:  op mul *tmp261 *tmp260 :depositItems:cap                     ...
  436:  sensor *tmp262 :mineOre:block :mineOre:ore                   ...
  437:  jump *label559 greaterThan *tmp261 *tmp262                   Actions.mnd: do
  438:  jump *label567 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label562                                              ...
  439:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  440:  jump *label566 equal *tmp264 null                            ...
        label *label564                                              ...
  441:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  442:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  443:  jump *label564 notEqual *tmp264 null                         ...
        label *label566                                              ...
        label *label567                                              Actions.mnd: if @unit.@firstItem == item then
  444:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  445:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  446:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label22                                               Actions.mnd: void mineOre(ore)
  447:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  448:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  449:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  450:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  451:  set :mineOre:amount 30                                       ...
  452:  set :mineOre:block .core                                     ...
  453:  setaddr :mineOre*retaddr *label211                           ...
  454:  call *label21 *invalid :mineOre*retval                       ...
        label *label211                                              ...
  455:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  456:  sensor *tmp285 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  457:  op min :transportStatus:target *tmp285 30                    ...
  458:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  459:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  460:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  461:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  462:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  463:  sensor *tmp287 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  464:  sensor *tmp288 :fetchBlock:block @y                          ...
  465:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label508                                              Actions.mnd: do
  466:  sensor *tmp247 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  467:  jump *label509 equal *tmp247 null                            ...
  468:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label509                                              ...
  469:  ucontrol approach *tmp287 *tmp288 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  470:  ucontrol within *tmp287 *tmp288 6 *tmp250 0                  Actions.mnd: while !within(x, y, RADIUS);
  471:  jump *label508 equal *tmp250 false                           Actions.mnd: do
  472:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  473:  jump *label533 equal *tmp252 null                            ...
        label *label531                                              ...
  474:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  475:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  476:  jump *label531 notEqual *tmp252 null                         ...
        label *label533                                              ...
        label *label217                                              Actions.mnd: do
  477:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  478:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  479:  op notEqual *tmp290 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  480:  op notEqual *tmp291 :fetchBlock:unitItem :fetchBlock:item    ...
  481:  op land *tmp292 *tmp290 *tmp291                              ...
  482:  jump *label220 equal *tmp292 false                           ...
  483:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label220                                              Actions.mnd: if unitItem != null and unitItem != item then
  484:  sensor *tmp294 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  485:  op lessThan *tmp295 *tmp294 30                               ...
  486:  sensor *tmp296 :fetchBlock:block :fetchBlock:item            ...
  487:  op land *tmp297 *tmp295 *tmp296                              ...
  488:  jump *label217 notEqual *tmp297 false                        Actions.mnd: do
  489:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  490:  sensor *tmp256 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  491:  jump *label587 notEqual *tmp256 :fetchBlock:item             ...
  492:  sensor *tmp254 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  493:  sensor *tmp255 .core @y                                      ...
  494:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  495:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  496:  jump *label581 notEqual *tmp242 false                        ...
        label *label579                                              ...
  497:  ucontrol approach *tmp254 *tmp255 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  498:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  499:  jump *label579 equal *tmp242 false                           ...
        label *label581                                              ...
  500:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label584                                              Actions.mnd: do
  501:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  502:  sensor *tmp260 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  503:  op mul *tmp261 *tmp260 :depositItems:cap                     ...
  504:  sensor *tmp262 .core :fetchBlock:item                        ...
  505:  jump *label584 greaterThan *tmp261 *tmp262                   Actions.mnd: do
  506:  jump *label592 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label587                                              ...
  507:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  508:  jump *label591 equal *tmp264 null                            ...
        label *label589                                              ...
  509:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  510:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  511:  jump *label589 notEqual *tmp264 null                         ...
        label *label591                                              ...
        label *label592                                              Actions.mnd: if @unit.@firstItem == item then
  512:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  513:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  514:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  515:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  516:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  517:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  518:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  519:  sensor *tmp299 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  520:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  521:  jump *label225 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  522:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  523:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  524:  set :mineOre:block :supplyBlock:block                        ...
  525:  setaddr :mineOre*retaddr *label227                           ...
  526:  call *label21 *invalid :mineOre*retval                       ...
        label *label227                                              ...
        label *label225                                              Actions.mnd: if missing > 0 then
  527:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label31                                               CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out ind)
  528:  read *tmp315 :unpackCfg:cfg 0                                CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  529:  op sub *tmp316 *tmp315 35                                    ...
  530:  lookup block :unpackCfg:type *tmp316                         ...
  531:  read *tmp319 :unpackCfg:cfg 1                                CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  532:  op sub :unpackCfg:x *tmp319 42                               ...
  533:  read *tmp323 :unpackCfg:cfg 2                                CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  534:  op sub :unpackCfg:y *tmp323 42                               ...
  535:  read *tmp327 :unpackCfg:cfg 3                                CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  536:  op sub :unpackCfg:cu *tmp327 35                              ...
  537:  read *tmp330 :unpackCfg:cfg 4                                CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  538:  op sub :unpackCfg:pb *tmp330 35                              ...
  539:  read *tmp333 :unpackCfg:cfg 5                                CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  540:  op sub :unpackCfg:gr *tmp333 35                              ...
  541:  read *tmp336 :unpackCfg:cfg 6                                CoreBuilder.mnd: si = char(cfg, index++) - 35;
  542:  op sub :unpackCfg:si *tmp336 35                              ...
  543:  read *tmp339 :unpackCfg:cfg 7                                CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  544:  op sub :unpackCfg:ti *tmp339 35                              ...
  545:  read *tmp342 :unpackCfg:cfg 8                                CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  546:  op sub :unpackCfg:mg *tmp342 35                              ...
  547:  read *tmp345 :unpackCfg:cfg 9                                CoreBuilder.mnd: th = char(cfg, index++) - 35;
  548:  op sub :unpackCfg:th *tmp345 35                              ...
  549:  read *tmp348 :unpackCfg:cfg 10                               CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  550:  op sub :unpackCfg:rotation *tmp348 35                        ...
  551:  read *tmp354 :unpackCfg:cfg 12                               CoreBuilder.mnd: ind = char(cfg, index++) - 35;
  552:  op sub :unpackCfg:ind *tmp354 35                             ...
  553:  return :unpackCfg*retaddr                                    CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out ind)
        label *label32                                               CoreBuilder.mnd: void supplyBase()
  554:  sensor *tmp356 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  555:  op sub *tmp357 .targetSilicon *tmp356                        ...
  556:  op max *tmp358 0 *tmp357                                     ...
  557:  write *tmp358 processor8 ".sandTarget"                       ...
  558:  jump *label241 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  559:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  560:  sensor *tmp360 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  561:  jump *label245 greaterThanEq *tmp360 50                      ...
  562:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  563:  set :supplyBlock:ore @coal                                   ...
  564:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  565:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  566:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  567:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  568:  sensor *tmp299 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  569:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  570:  jump *label246 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  571:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  572:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  573:  set :mineOre:block .thoriumGenerator                         ...
  574:  setaddr :mineOre*retaddr *label246                           ...
  575:  call *label21 *invalid :mineOre*retval                       ...
        label *label245                                              CoreBuilder.mnd: if core.@coal < 50 then
  576:  sensor *tmp303 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  577:  op min :transportStatus:target *tmp303 30                    ...
  578:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  579:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  580:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  581:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  582:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  583:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label517                                              Actions.mnd: do
  584:  sensor *tmp247 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  585:  jump *label518 equal *tmp247 null                            ...
  586:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label518                                              ...
  587:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  588:  ucontrol within .coreX .coreY 6 *tmp250 0                    Actions.mnd: while !within(x, y, RADIUS);
  589:  jump *label517 equal *tmp250 false                           Actions.mnd: do
  590:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  591:  jump *label539 equal *tmp252 null                            ...
        label *label537                                              ...
  592:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  593:  sensor *tmp252 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  594:  jump *label537 notEqual *tmp252 null                         ...
        label *label539                                              ...
        label *label464                                              Actions.mnd: do
  595:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  596:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  597:  op notEqual *tmp306 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  598:  op notEqual *tmp307 :supplyBlockFromCore:unitItem @coal      ...
  599:  op land *tmp308 *tmp306 *tmp307                              ...
  600:  jump *label465 equal *tmp308 false                           ...
  601:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label465                                              Actions.mnd: if unitItem != null and unitItem != item then
  602:  sensor *tmp310 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  603:  op lessThan *tmp311 *tmp310 30                               ...
  604:  sensor *tmp312 .core @coal                                   ...
  605:  op land *tmp313 *tmp311 *tmp312                              ...
  606:  jump *label464 notEqual *tmp313 false                        Actions.mnd: do
  607:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  608:  sensor *tmp256 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  609:  jump *label612 notEqual *tmp256 @coal                        ...
  610:  sensor *tmp254 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  611:  sensor *tmp255 .thoriumGenerator @y                          ...
  612:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  613:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  614:  jump *label606 notEqual *tmp242 false                        ...
        label *label604                                              ...
  615:  ucontrol approach *tmp254 *tmp255 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  616:  ucontrol within *tmp254 *tmp255 6 *tmp242 0                  Actions.mnd: while !within(x, y, radius) do
  617:  jump *label604 equal *tmp242 false                           ...
        label *label606                                              ...
  618:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label609                                              Actions.mnd: do
  619:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  620:  sensor *tmp260 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  621:  op mul *tmp261 *tmp260 :depositItems:cap                     ...
  622:  sensor *tmp262 .thoriumGenerator @coal                       ...
  623:  jump *label609 greaterThan *tmp261 *tmp262                   Actions.mnd: do
  624:  jump *label617 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label612                                              ...
  625:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  626:  jump *label616 equal *tmp264 null                            ...
        label *label614                                              ...
  627:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  628:  sensor *tmp264 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  629:  jump *label614 notEqual *tmp264 null                         ...
        label *label616                                              ...
        label *label617                                              Actions.mnd: if @unit.@firstItem == item then
  630:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  631:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label246                                              CoreBuilder.mnd: if core.@coal < 50 then
  632:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  633:  set :fetchBlock:item @thorium                                ...
  634:  setaddr :fetchBlock*retaddr *label249                        ...
  635:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label249                                              ...
  636:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label241                                              ...
  637:  read *tmp101 .controller ".monos"                            CoreBuilder.mnd: elsif controller.monos > 3 then
  638:  jump *label250 lessThanEq *tmp101 3                          ...
  639:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  640:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  641:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  642:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  643:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  644:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  645:  set :mineOre:amount 30                                       ...
  646:  set :mineOre:block .core                                     ...
  647:  setaddr :mineOre*retaddr *label544                           ...
  648:  call *label21 *invalid :mineOre*retval                       ...
        label *label544                                              ...
  649:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label250                                              ...
  650:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  651:  jump *label256 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  652:  sensor *tmp367 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  653:  jump *label258 greaterThanEq *tmp367 .targetGraphite         ...
  654:  sensor *tmp370 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  655:  jump *label260 greaterThanEq *tmp370 5                       ...
  656:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  657:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  658:  set :supplyBlock:ore @coal                                   ...
  659:  setaddr :supplyBlock*retaddr *label263                       ...
  660:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label263                                              ...
  661:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label260                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label258                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  662:  sensor *tmp373 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  663:  jump *label264 greaterThanEq *tmp373 .targetSilicon          ...
  664:  sensor *tmp376 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  665:  jump *label266 greaterThanEq *tmp376 5                       ...
  666:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  667:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  668:  set :supplyBlock:ore @coal                                   ...
  669:  setaddr :supplyBlock*retaddr *label269                       ...
  670:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label269                                              ...
  671:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  672:  jump *label267 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label266                                              ...
  673:  sensor *tmp379 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  674:  jump *label270 greaterThanEq *tmp379 5                       ...
  675:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  676:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  677:  set :supplyBlock:ore @sand                                   ...
  678:  setaddr :supplyBlock*retaddr *label273                       ...
  679:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label273                                              ...
  680:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label270                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label267                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label264                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  681:  sensor *tmp382 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  682:  jump *label274 greaterThanEq *tmp382 .powerTarget            ...
  683:  sensor *tmp385 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  684:  jump *label276 greaterThanEq *tmp385 2                       ...
  685:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  686:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  687:  set :supplyBlock:ore @coal                                   ...
  688:  setaddr :supplyBlock*retaddr *label279                       ...
  689:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label279                                              ...
  690:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label276                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label274                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label256                                              CoreBuilder.mnd: if unloader1 == null then
  691:  set *tmp390 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  692:  sensor *tmp388 .core @titanium                               ...
  693:  jump *label281 greaterThanEq *tmp388 .targetTitanium         ...
  694:  sensor *tmp391 .core @titanium                               ...
  695:  op sub *tmp392 .targetTitanium *tmp391                       ...
  696:  op min *tmp390 7 *tmp392                                     ...
        label *label281                                              ...
  697:  sensor *tmp394 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  698:  jump *label282 greaterThanEq *tmp394 *tmp390                 ...
  699:  jump *label283 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  700:  sensor *tmp399 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  701:  op mul *tmp400 .unloader1 .powerTarget                       ...
  702:  jump *label286 greaterThanEq *tmp399 *tmp400                 ...
  703:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  704:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  705:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  706:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  707:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  708:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  709:  set :mineOre:amount 30                                       ...
  710:  set :mineOre:block .core                                     ...
  711:  setaddr :mineOre*retaddr *label635                           ...
  712:  call *label21 *invalid :mineOre*retval                       ...
        label *label635                                              ...
  713:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label286                                              ...
  714:  sensor *tmp403 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  715:  jump *label290 greaterThanEq *tmp403 .targetSilicon          ...
  716:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  717:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  718:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  719:  select *tmp409 lessThan :supplyBase0:coal :supplyBase0:sand  CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  720:  set :mineOre.1:ore *tmp409                                   CoreBuilder.mnd: mineOre(ore);
  721:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  722:  write *tmp409 .display ".item2"                              Actions.mnd: display.item2 = item;
  723:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  724:  set :mineOre:ore *tmp409                                     Actions.mnd: mineOre(ore, capacity, core);
  725:  set :mineOre:amount 30                                       ...
  726:  set :mineOre:block .core                                     ...
  727:  setaddr :mineOre*retaddr *label640                           ...
  728:  call *label21 *invalid :mineOre*retval                       ...
        label *label640                                              ...
  729:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label290                                              ...
  730:  sensor *tmp410 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  731:  jump *label296 greaterThanEq *tmp410 .targetCopper           ...
  732:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  733:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  734:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  735:  write @copper .display ".item2"                              Actions.mnd: display.item2 = item;
  736:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  737:  set :mineOre:ore @copper                                     Actions.mnd: mineOre(ore, capacity, core);
  738:  set :mineOre:amount 30                                       ...
  739:  set :mineOre:block .core                                     ...
  740:  setaddr :mineOre*retaddr *label645                           ...
  741:  call *label21 *invalid :mineOre*retval                       ...
        label *label645                                              ...
  742:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label296                                              ...
  743:  sensor *tmp413 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  744:  jump *label300 greaterThanEq *tmp413 .targetLead             ...
  745:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  746:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  747:  setaddr :mineOre.1*retaddr *label303                         ...
  748:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label303                                              ...
  749:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label300                                              ...
  750:  sensor *tmp416 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  751:  jump *label304 greaterThanEq *tmp416 .targetMetaglass        ...
  752:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  753:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  754:  setaddr :mineOre.1*retaddr *label307                         ...
  755:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label307                                              ...
  756:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label304                                              ...
  757:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  758:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  759:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  760:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  761:  setaddr :mineOre.1*retaddr *label311                         CoreBuilder.mnd: mineOre(ore);
  762:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label311                                              ...
  763:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label282                                              ...
  764:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  765:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  766:  set :fetchBlock:item @titanium                               ...
  767:  setaddr :fetchBlock*retaddr *label313                        ...
  768:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label313                                              ...
        label *label283                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  769:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label33                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  770:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  771:  op sign *tmp424 :meetTarget:lead 0                           ...
  772:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  773:  op sign *tmp424 :meetTarget:graphite 0                       ...
  774:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  775:  op sign *tmp424 :meetTarget:silicon 0                        ...
  776:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  777:  op sign *tmp424 :meetTarget:titanium 0                       ...
  778:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  779:  op sign *tmp424 :meetTarget:metaglass 0                      ...
  780:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  781:  op sign *tmp424 :meetTarget:thorium 0                        ...
  782:  op add :meetTarget:count :meetTarget:count *tmp424           ...
  783:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  784:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  785:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  786:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  787:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  788:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  789:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  790:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  791:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  792:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  793:  op add *tmp425 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  794:  op add .targetLead *tmp425 1                                 ...
  795:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  796:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  797:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  798:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  799:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  800:  op add *tmp427 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  801:  write *tmp427 .controller ".pressTarget"                     ...
  802:  op add *tmp428 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  803:  write *tmp428 .controller ".smelterTarget"                   ...
  804:  op add *tmp429 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  805:  write *tmp429 .controller ".kilnTarget"                      ...
  806:  write *tmp425 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  807:  op sign *tmp431 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  808:  op mul *tmp432 *tmp431 20                                    ...
  809:  op add *tmp433 :meetTarget:silicon *tmp432                   ...
  810:  write *tmp433 .controller ".siliconReserve"                  ...
  811:  op sign *tmp434 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  812:  op mul *tmp435 *tmp434 20                                    ...
  813:  op add *tmp436 :meetTarget:graphite *tmp435                  ...
  814:  write *tmp436 .controller ".graphiteReserve"                 ...
  815:  write .targetLead processor8 ".leadTarget"                   CoreBuilder.mnd: monoController.leadTarget = targetLead;
  816:  write :meetTarget:copper processor8 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
        label *label325                                              CoreBuilder.mnd: while !targetMet() do
  817:  sensor *tmp438 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  818:  jump *label329 greaterThanEq *tmp438 .targetCopper           ...
  819:  set *tmp437 false                                            ...
  820:  jump *label328 always 0 0                                    ...
        label *label329                                              ...
  821:  sensor *tmp441 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  822:  jump *label331 greaterThanEq *tmp441 .targetLead             ...
  823:  set *tmp437 false                                            ...
  824:  jump *label328 always 0 0                                    ...
        label *label331                                              ...
  825:  sensor *tmp444 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  826:  jump *label333 greaterThanEq *tmp444 .targetGraphite         ...
  827:  set *tmp437 false                                            ...
  828:  jump *label328 always 0 0                                    ...
        label *label333                                              ...
  829:  sensor *tmp447 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  830:  jump *label335 greaterThanEq *tmp447 .targetSilicon          ...
  831:  set *tmp437 false                                            ...
  832:  jump *label328 always 0 0                                    ...
        label *label335                                              ...
  833:  sensor *tmp450 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  834:  jump *label337 greaterThanEq *tmp450 .targetTitanium         ...
  835:  set *tmp437 false                                            ...
  836:  jump *label328 always 0 0                                    ...
        label *label337                                              ...
  837:  sensor *tmp453 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  838:  jump *label339 greaterThanEq *tmp453 .targetMetaglass        ...
  839:  set *tmp437 false                                            ...
  840:  jump *label328 always 0 0                                    ...
        label *label339                                              ...
  841:  sensor *tmp456 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  842:  jump *label341 greaterThanEq *tmp456 .targetThorium          ...
  843:  set *tmp437 false                                            ...
  844:  jump *label328 always 0 0                                    ...
        label *label341                                              ...
  845:  set *tmp437 true                                             CoreBuilder.mnd: return true;
  846:  jump *label328 always 0 0                                    ...
        label *label328                                              CoreBuilder.mnd: while !targetMet() do
  847:  jump *label327 notEqual *tmp437 false                        ...
  848:  setaddr :supplyBase*retaddr *label325                        CoreBuilder.mnd: supplyBase();
  849:  call *label32 *invalid :supplyBase*retval                    ...
        label *label327                                              CoreBuilder.mnd: while !targetMet() do
  850:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label34                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  851:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  852:  set :meetTarget:copper :buildBlock:copper                    ...
  853:  set :meetTarget:lead :buildBlock:lead                        ...
  854:  set :meetTarget:graphite :buildBlock:graphite                ...
  855:  set :meetTarget:silicon :buildBlock:silicon                  ...
  856:  set :meetTarget:titanium :buildBlock:titanium                ...
  857:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  858:  set :meetTarget:thorium :buildBlock:thorium                  ...
  859:  setaddr :meetTarget*retaddr *label345                        ...
  860:  call *label33 *invalid :meetTarget*retval                    ...
        label *label345                                              ...
  861:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  862:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  863:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  864:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  865:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  866:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  867:  write false .blockBuilder ":buildBlockAt*finished"           ...
  868:  write 1 .blockBuilder "@counter"                             ...
        label *label346                                              ...
  869:  wait 1e-15                                                   ...
  870:  read *tmp466 .blockBuilder ":buildBlockAt*finished"          ...
  871:  jump *label346 equal *tmp466 false                           ...
  872:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  873:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label35                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  874:  op add *tmp468 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  875:  jump *label348 lessThanEq *tmp468 0                          ...
  876:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out index);
  877:  setaddr :unpackCfg*retaddr *label350                         ...
  878:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label350                                              ...
  879:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  880:  set :buildBlock:x :buildRemoteBlock:x                        ...
  881:  set :buildBlock:y :buildRemoteBlock:y                        ...
  882:  set :buildBlock:copper :unpackCfg:cu                         ...
  883:  set :buildBlock:lead :unpackCfg:pb                           ...
  884:  set :buildBlock:graphite :unpackCfg:gr                       ...
  885:  set :buildBlock:silicon :unpackCfg:si                        ...
  886:  set :buildBlock:titanium :unpackCfg:ti                       ...
  887:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  888:  set :buildBlock:thorium :unpackCfg:th                        ...
  889:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  890:  set :buildBlock:config null                                  ...
  891:  set :buildBlock:index :unpackCfg:ind                         ...
  892:  setaddr :buildBlock*retaddr *label351                        ...
  893:  call *label34 *invalid :buildBlock*retval                    ...
        label *label351                                              ...
  894:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  895:  return :buildRemoteBlock*retaddr                             ...
        label *label348                                              CoreBuilder.mnd: if x + y > 0 then
  896:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  897:  return :buildRemoteBlock*retaddr                             ...
        label *label36                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  898:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out index);
  899:  setaddr :unpackCfg*retaddr *label353                         ...
  900:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label353                                              ...
  901:  op add *tmp471 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  902:  op add *tmp472 .coreY :unpackCfg:y                           ...
  903:  set :buildBlock:block :unpackCfg:type                        ...
  904:  set :buildBlock:x *tmp471                                    ...
  905:  set :buildBlock:y *tmp472                                    ...
  906:  set :buildBlock:copper :unpackCfg:cu                         ...
  907:  set :buildBlock:lead :unpackCfg:pb                           ...
  908:  set :buildBlock:graphite :unpackCfg:gr                       ...
  909:  set :buildBlock:silicon :unpackCfg:si                        ...
  910:  set :buildBlock:titanium :unpackCfg:ti                       ...
  911:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  912:  set :buildBlock:thorium :unpackCfg:th                        ...
  913:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  914:  set :buildBlock:config :buildBlockFromCfg:config             ...
  915:  set :buildBlock:index :unpackCfg:ind                         ...
  916:  setaddr :buildBlock*retaddr *label354                        ...
  917:  call *label34 *invalid :buildBlock*retval                    ...
        label *label354                                              ...
  918:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  919:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  920:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  921:  set :buildBlockFromCfg:config null                           ...
  922:  setaddr :buildBlockFromCfg*retaddr *label356                 ...
  923:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label356                                              ...
  924:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  925:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label38                                               CoreBuilder.mnd: void meetTarget(cfg)
  926:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  927:  setaddr :unpackCfg*retaddr *label358                         ...
  928:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label358                                              ...
  929:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  930:  set :meetTarget:copper :unpackCfg:cu                         ...
  931:  set :meetTarget:lead :unpackCfg:pb                           ...
  932:  set :meetTarget:graphite :unpackCfg:gr                       ...
  933:  set :meetTarget:silicon :unpackCfg:si                        ...
  934:  set :meetTarget:titanium :unpackCfg:ti                       ...
  935:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  936:  set :meetTarget:thorium :unpackCfg:th                        ...
  937:  setaddr :meetTarget*retaddr *label359                        ...
  938:  call *label33 *invalid :meetTarget*retval                    ...
        label *label359                                              ...
  939:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label39                                               CoreBuilder.mnd: void buildUnits()
  940:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  941:  set :meetTarget:copper 0                                     ...
  942:  set :meetTarget:lead 0                                       ...
  943:  set :meetTarget:graphite 0                                   ...
  944:  set :meetTarget:silicon 0                                    ...
  945:  set :meetTarget:titanium 0                                   ...
  946:  set :meetTarget:metaglass 0                                  ...
  947:  set :meetTarget:thorium 0                                    ...
  948:  setaddr :meetTarget*retaddr *label361                        ...
  949:  call *label33 *invalid :meetTarget*retval                    ...
        label *label361                                              ...
  950:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  951:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  952:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  953:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  954:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  955:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label40                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label363                                              CoreBuilder.mnd: do
  956:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  957:  set :flagUnits:firstUnit @unit                               ...
  958:  jump *label363 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  959:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label366                                              CoreBuilder.mnd: do
  960:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  961:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  962:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  963:  jump *label366 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  964:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label41                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  965:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  966:  set :lineUpUnits:firstUnit @unit                             ...
        label *label370                                              CoreBuilder.mnd: do
  967:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  968:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  969:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  970:  sensor *tmp478 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  971:  jump *label373 equal *tmp478 false                           ...
  972:  ucontrol stop 0 0 0 0 0                                      ...
        label *label373                                              ...
  973:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  974:  jump *label370 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  975:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)


Performance: parsed in 958 ms, compiled in 431 ms, optimized in 3,780 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: read *tmp114 processor8 "*signature":
Variable 'processor8' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
