  1817 instructions before optimizations.
    90 instructions eliminated by Temp Variables Elimination (2 iterations).
   124 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:10:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    65 instructions eliminated by Jump Optimization (5 iterations).
    66 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   458 instructions eliminated by Data Flow Optimization (3 passes, 28 iterations).
    22 loops improved by Loop Hoisting.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    13 instructions updated by JumpThreading.
    47 instructions eliminated by Unreachable Code Elimination (2 iterations).
   956 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:526:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:530:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:287:5            size    +2, benefit    13375.0, efficiency   6687.500
  * Unroll iteration loop at CoreBuilder.mnd:264:5               size   -11, benefit    12305.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:526:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:530:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:287:5            size    +2, benefit    13375.0, efficiency   6687.500

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:526:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:530:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:287:5            size    +2, benefit    13375.0, efficiency   6687.500

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:526:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:530:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:287:5            size    +2, benefit    13375.0, efficiency   6687.500

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-88 instructions):
 
   157 setaddr :buildBlock*retaddr *label52 (h:*label52)
   158 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   159 label *label52
-    * set *tmp105 :buildBlock*retval
   160 jump *label47 always
   161 label *label49
   162 multijump *tmp106 0 0 (m:marker2)
   163 multilabel *label51 (m:marker2)
   164 label *label50
-    * set *tmp105 null
   165 label *label47
   166 set :buildBlockFromCfg.3:block @combustion-generator
   167 set :buildBlockFromCfg.3:offsetX 0
 
   281 set .ERROR :error:error
   282 stop
   283 label *label71
-    * set *tmp131 null
   284 jump *label70 always
   285 label *label69
-    * set *tmp131 null
   286 label *label70
   287 write @pneumatic-drill .display ".nextBlock"
   288 set :buildBlockAt:block @pneumatic-drill
 
   421 setaddr :buildBlock*retaddr *label90 (h:*label90)
   422 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   423 label *label90
-    * set *tmp140 :buildBlock*retval
   424 jump *label85 always
   425 label *label87
   426 multijump *tmp141 0 0 (m:marker7)
   427 multilabel *label89 (m:marker7)
   428 label *label88
-    * set *tmp140 null
   429 label *label85
   430 set :buildBlockFromCfg.8:block @unloader
   431 set :buildBlockFromCfg.8:offsetX -2
 
   528 op lessThan *tmp153 *tmp152 300
   529 jump *label108 equal *tmp153 false
   530 jump *label106 always
-    * set *tmp154 null
   531 jump *label109 always
   532 label *label108
-    * set *tmp154 null
   533 label *label109
   534 label *label105
   535 read *tmp39 .controller ".monos"
 
   570 setaddr :buildBlock*retaddr *label115 (h:*label115)
   571 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   572 label *label115
-    * set *tmp156 :buildBlock*retval
   573 jump *label110 always
   574 label *label112
   575 multijump *tmp157 0 0 (m:marker10)
   576 multilabel *label114 (m:marker10)
   577 label *label113
-    * set *tmp156 null
   578 label *label110
   579 set :buildBlockFromCfg.11:block @junction
   580 set :buildBlockFromCfg.11:offsetX 2
 
   607 setaddr :buildBlock*retaddr *label121 (h:*label121)
   608 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   609 label *label121
-    * set *tmp160 :buildBlock*retval
   610 jump *label116 always
   611 label *label118
   612 multijump *tmp161 0 0 (m:marker11)
   613 multilabel *label120 (m:marker11)
   614 label *label119
-    * set *tmp160 null
   615 label *label116
   616 set :buildBlockFromCfg.12:block @inverted-sorter
   617 set :buildBlockFromCfg.12:offsetX 3
 
   644 setaddr :buildBlock*retaddr *label127 (h:*label127)
   645 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   646 label *label127
-    * set *tmp164 :buildBlock*retval
   647 jump *label122 always
   648 label *label124
   649 multijump *tmp165 0 0 (m:marker12)
   650 multilabel *label126 (m:marker12)
   651 label *label125
-    * set *tmp164 null
   652 label *label122
   653 set :buildBlockFromCfg.13:block @kiln
   654 set :buildBlockFromCfg.13:offsetX 3.5
 
   722 setaddr :buildBlock*retaddr *label139 (h:*label139)
   723 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   724 label *label139
-    * set *tmp172 :buildBlock*retval
   725 jump *label134 always
   726 label *label136
   727 multijump *tmp173 0 0 (m:marker14)
   728 multilabel *label138 (m:marker14)
   729 label *label137
-    * set *tmp172 null
   730 label *label134
   731 set :buildBlockFromCfg.15:block @overflow-gate
   732 set :buildBlockFromCfg.15:offsetX -3
 
   759 setaddr :buildBlock*retaddr *label145 (h:*label145)
   760 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   761 label *label145
-    * set *tmp176 :buildBlock*retval
   762 jump *label140 always
   763 label *label142
   764 multijump *tmp177 0 0 (m:marker15)
   765 multilabel *label144 (m:marker15)
   766 label *label143
-    * set *tmp176 null
   767 label *label140
   768 set :buildBlockFromCfg.16:block @steam-generator
   769 set :buildBlockFromCfg.16:offsetX -3.5
 
   877 setaddr :buildBlock*retaddr *label163 (h:*label163)
   878 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   879 label *label163
-    * set *tmp188 :buildBlock*retval
   880 jump *label158 always
   881 label *label160
   882 multijump *tmp189 0 0 (m:marker18)
   883 multilabel *label162 (m:marker18)
   884 label *label161
-    * set *tmp188 null
   885 label *label158
   886 set :buildBlockFromCfg.19:block @underflow-gate
   887 set :buildBlockFromCfg.19:offsetX 0
 
   914 setaddr :buildBlock*retaddr *label169 (h:*label169)
   915 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   916 label *label169
-    * set *tmp192 :buildBlock*retval
   917 jump *label164 always
   918 label *label166
   919 multijump *tmp193 0 0 (m:marker19)
   920 multilabel *label168 (m:marker19)
   921 label *label167
-    * set *tmp192 null
   922 label *label164
   923 set :buildBlockFromCfg.20:block @additive-reconstructor
   924 set :buildBlockFromCfg.20:offsetX 0
 
   993 ubind :findFreeUnit:unit_type
   994 op equal *tmp203 @unit null
   995 jump *label186 equal *tmp203 false
-    * set *tmp202 null
   996 jump *label185 always
-    * set *tmp204 null
   997 jump *label187 always
   998 label *label186
-    * set *tmp204 null
   999 label *label187
  1000 set :findFreeUnit:first_unit @unit
  1001 label *label188
 
  1003 op equal *tmp206 *tmp205 0
  1004 jump *label191 equal *tmp206 false
  1005 ucontrol flag :findFreeUnit:initial_flag
-    * set *tmp202 @unit
  1006 jump *label185 always
-    * set *tmp207 null
  1007 jump *label192 always
  1008 label *label191
  1009 sensor *tmp208 :findFreeUnit:first_unit @dead
 
  1016 label *label193
  1017 set *tmp210 null
  1018 label *label194
-    * set *tmp207 *tmp210
  1019 label *label192
  1020 ubind :findFreeUnit:unit_type
  1021 label *label189
  1022 op notEqual *tmp212 :findFreeUnit:first_unit @unit
  1023 jump *label188 notEqual *tmp212 false
  1024 label *label190
-    * set *tmp202 null
  1025 jump *label185 always
-    * set *tmp202 null
  1026 label *label185
  1027 write .coreX .oreLocator ":layoutThoriumDrill:x"
  1028 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1063 set .ERROR :error.1:error
  1064 stop
  1065 label *label205
-    * set *tmp222 null
  1066 jump *label204 always
  1067 label *label203
-    * set *tmp222 null
  1068 label *label204
  1069 set :buildBlockAt:block @laser-drill
  1070 read *tmp72 .oreLocator ".drillX"
 
  1083 op lessThan *tmp224 *tmp74 0
  1084 jump *label207 equal *tmp224 false
  1085 jump *label199 always
-    * set *tmp225 null
  1086 jump *label208 always
  1087 label *label207
-    * set *tmp225 null
  1088 label *label208
  1089 set :meetTarget:block @water-extractor
  1090 set :meetTarget:copper 30
 
  1108 setaddr :buildBlockAt*retaddr *label211 (h:*label211)
  1109 call *label25 *invalid :buildBlockAt*retval (m:*label211) (h:*label211)
  1110 label *label211
-    * set *tmp226 :buildBlockAt*retval
  1111 read *tmp76 .oreLocator ".water2X"
  1112 op lessThan *tmp227 *tmp76 0
  1113 jump *label212 equal *tmp227 false
  1114 jump *label199 always
-    * set *tmp228 null
  1115 jump *label213 always
  1116 label *label212
-    * set *tmp228 null
  1117 label *label213
  1118 set :meetTarget:block @water-extractor
  1119 set :meetTarget:copper 30
 
  1137 setaddr :buildBlockAt*retaddr *label216 (h:*label216)
  1138 call *label25 *invalid :buildBlockAt*retval (m:*label216) (h:*label216)
  1139 label *label216
-    * set *tmp229 :buildBlockAt*retval
  1140 set :meetTarget:block @water-extractor
  1141 set :meetTarget:copper 30
  1142 set :meetTarget:lead 30
 
  1183 setaddr :buildBlockAt*retaddr *label222 (h:*label222)
  1184 call *label25 *invalid :buildBlockAt*retval (m:*label222) (h:*label222)
  1185 label *label222
-    * set *tmp231 :buildBlockAt*retval
  1186 set :meetTarget:block @solar-panel
  1187 set :meetTarget:copper 0
  1188 set :meetTarget:lead 10
 
  1205 setaddr :buildBlockAt*retaddr *label225 (h:*label225)
  1206 call *label25 *invalid :buildBlockAt*retval (m:*label225) (h:*label225)
  1207 label *label225
-    * set *tmp232 :buildBlockAt*retval
  1208 set :meetTarget:block @battery
  1209 set :meetTarget:copper 5
  1210 set :meetTarget:lead 20
 
  1227 setaddr :buildBlockAt*retaddr *label228 (h:*label228)
  1228 call *label25 *invalid :buildBlockAt*retval (m:*label228) (h:*label228)
  1229 label *label228
-    * set *tmp233 :buildBlockAt*retval
  1230 write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
  1231 write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
  1232 write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
 
  1301 op notEqual *tmp245 *tmp244 null
  1302 jump *label252 equal *tmp245 false
  1303 ucontrol itemDrop @air 1000
-    * set *tmp246 null
  1304 jump *label253 always
  1305 label *label252
-    * set *tmp246 null
  1306 label *label253
  1307 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1308 label *label250
 
  1348 op greaterThan *tmp258 *tmp256 *tmp257
  1349 jump *label261 notEqual *tmp258 false
  1350 label *label263
-    * set *tmp253 null
  1351 jump *label259 always
  1352 label *label258
  1353 label *label264
 
  1358 label *label265
  1359 jump *label264 always
  1360 label *label266
-    * set *tmp253 null
  1361 label *label259
  1362 set :transportStatus:target 0
  1363 set :transportStatus:item null
 
  1375 set .ERROR :error.3:error
  1376 stop
  1377 label *label271
-    * set *tmp264 null
  1378 jump *label270 always
  1379 label *label269
-    * set *tmp264 null
  1380 label *label270
  1381 label *label268
  1382 return :locateOre*retaddr
 
  1412 jump *label279 always
  1413 label *label281
  1414 label *label278
-    * set *tmp268 null
  1415 jump *label277 always
  1416 label *label276
-    * set *tmp268 null
  1417 label *label277
  1418 set :status3.3:text "Mining..."
  1419 write :status3.3:text .display ".status3"
 
  1428 op land *tmp275 *tmp273 *tmp274
  1429 jump *label286 equal *tmp275 false
  1430 jump *label285 always
-    * set *tmp276 null
  1431 jump *label287 always
  1432 label *label286
-    * set *tmp276 null
  1433 label *label287
  1434 ucontrol mine :mineOre:x :mineOre:y
  1435 op greaterThan *tmp277 @second :mineOre:stop
  1436 jump *label288 equal *tmp277 false
  1437 jump *label285 always
-    * set *tmp278 null
  1438 jump *label289 always
  1439 label *label288
-    * set *tmp278 null
  1440 label *label289
  1441 label *label284
  1442 sensor *tmp279 @unit @totalItems
 
  1509 op land *tmp290 *tmp288 *tmp289
  1510 jump *label305 equal *tmp290 false
  1511 ucontrol itemDrop @air 1000
-    * set *tmp291 null
  1512 jump *label306 always
  1513 label *label305
-    * set *tmp291 null
  1514 label *label306
  1515 label *label303
  1516 sensor *tmp292 @unit :fetchBlock:item
 
  1562 setaddr :mineOre*retaddr *label320 (h:*label320)
  1563 call *label11 *invalid :mineOre*retval (m:*label320) (h:*label320)
  1564 label *label320
-    * set *tmp308 null
  1565 jump *label319 always
  1566 label *label318
-    * set *tmp308 null
  1567 label *label319
  1568 label *label316
  1569 set :supplyBase0:supplied true
 
  1572 label *label313
  1573 set *tmp303 null
  1574 label *label314
-    * set *tmp300 *tmp303
  1575 jump *label312 always
  1576 label *label311
-    * set *tmp300 null
  1577 label *label312
  1578 sensor *tmp309 .core @silicon
  1579 op lessThan *tmp310 *tmp309 .targetSilicon
 
  1606 setaddr :mineOre*retaddr *label330 (h:*label330)
  1607 call *label11 *invalid :mineOre*retval (m:*label330) (h:*label330)
  1608 label *label330
-    * set *tmp319 null
  1609 jump *label329 always
  1610 label *label328
-    * set *tmp319 null
  1611 label *label329
  1612 label *label326
  1613 set :supplyBase0:supplied true
 
  1642 setaddr :mineOre*retaddr *label338 (h:*label338)
  1643 call *label11 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1644 label *label338
-    * set *tmp327 null
  1645 jump *label337 always
  1646 label *label336
-    * set *tmp327 null
  1647 label *label337
  1648 label *label334
  1649 set :supplyBase0:supplied true
 
  1654 label *label332
  1655 set *tmp314 *tmp322
  1656 label *label324
-    * set *tmp311 *tmp314
  1657 jump *label322 always
  1658 label *label321
-    * set *tmp311 null
  1659 label *label322
  1660 sensor *tmp328 .battery @totalPower
  1661 op lessThan *tmp329 *tmp328 .powerTarget
 
  1688 setaddr :mineOre*retaddr *label348 (h:*label348)
  1689 call *label11 *invalid :mineOre*retval (m:*label348) (h:*label348)
  1690 label *label348
-    * set *tmp338 null
  1691 jump *label347 always
  1692 label *label346
-    * set *tmp338 null
  1693 label *label347
  1694 label *label344
  1695 set :supplyBase0:supplied true
 
  1703 label *label339
  1704 set *tmp330 null
  1705 label *label340
-    * set *tmp297 *tmp330
  1706 jump *label310 always
  1707 label *label309
-    * set *tmp297 null
  1708 label *label310
  1709 sensor *tmp339 .core @titanium
  1710 op lessThan *tmp340 *tmp339 .targetTitanium
 
  1835 label *label353
  1836 set *tmp349 null
  1837 label *label354
-    * set *tmp347 *tmp349
  1838 jump *label352 always
  1839 label *label351
  1840 set :status1.10:text "Goal 11: Fetching titanium"
 
  1845 setaddr :fetchBlock*retaddr *label382 (h:*label382)
  1846 call *label13 *invalid :fetchBlock*retval (m:*label382) (h:*label382)
  1847 label *label382
-    * set *tmp347 null
  1848 label *label352
  1849 label *label308
  1850 return :supplyBase0*retaddr
 
  1876 label *label389
  1877 set *tmp377 null
  1878 label *label390
-    * set *tmp375 *tmp377
  1879 jump *label388 always
  1880 label *label387
-    * set *tmp375 null
  1881 label *label388
  1882 read *tmp39 .controller ".monos"
  1883 op greaterThan *tmp380 *tmp39 3
 
  1885 setaddr :supplyBase1*retaddr *label393 (h:*label393)
  1886 call *label19 *invalid :supplyBase1*retval (m:*label393) (h:*label393)
  1887 label *label393
-    * set *tmp381 null
  1888 jump *label392 always
  1889 label *label391
  1890 setaddr :supplyBase0*retaddr *label394 (h:*label394)
  1891 call *label18 *invalid :supplyBase0*retval (m:*label394) (h:*label394)
  1892 label *label394
-    * set *tmp381 null
  1893 label *label392
  1894 label *label386
  1895 return :supplyBase*retaddr
 
  1940 label *label398
  1941 set *tmp387 null
  1942 label *label399
-    * set *tmp384 *tmp387
  1943 jump *label397 always
  1944 label *label396
-    * set *tmp384 null
  1945 label *label397
  1946 set :targetMet*retval false
  1947 jump *label395 always
 
  2064 jump *label432 equal *tmp424 false
  2065 set :buildBlockAt*retval :buildBlockAt:building
  2066 jump *label427 always
-    * set *tmp425 null
  2067 jump *label433 always
  2068 label *label432
-    * set *tmp425 null
  2069 label *label433
  2070 jump *label434 equal :buildBlockAt:skipError false
  2071 set :buildBlockAt*retval null
  2072 jump *label427 always
-    * set *tmp426 null
  2073 jump *label435 always
  2074 label *label434
-    * set *tmp426 null
  2075 label *label435
  2076 set :error.4:error "Cannot build at ("
  2077 set .ERROR :error.4:error
  2078 stop
  2079 label *label436
-    * set *tmp423 null
  2080 jump *label431 always
  2081 label *label430
-    * set *tmp423 null
  2082 label *label431
  2083 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  2084 wait 0.25
 
  2089 jump *label440 equal *tmp429 false
  2090 set :buildBlockAt*retval null
  2091 jump *label427 always
-    * set *tmp430 null
  2092 jump *label441 always
  2093 label *label440
-    * set *tmp430 null
  2094 label *label441
  2095 label *label438
  2096 op notEqual *tmp431 :buildBlockAt:type :buildBlockAt:block
 
  2139 op notEqual *tmp432 :findUnits:firstUnit null
  2140 jump *label447 equal *tmp432 false
  2141 label *label449
-    * set *tmp434 :findUnits:count
  2142 op add :findUnits:count :findUnits:count 1
  2143 ubind :findUnits:type
  2144 label *label450
  2145 op notEqual *tmp435 @unit :findUnits:firstUnit
  2146 jump *label449 notEqual *tmp435 false
  2147 label *label451
-    * set *tmp433 null
  2148 jump *label448 always
  2149 label *label447
-    * set *tmp433 null
  2150 label *label448
  2151 set :findUnits*retval :findUnits:count
  2152 label *label446

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
  1011 jump *label193 equal *tmp209 false
  1012 set *tmp211 @unit
  1013 set :findFreeUnit:first_unit *tmp211
-    * set *tmp210 :findFreeUnit:first_unit
  1014 jump *label194 always
  1015 label *label193
-    * set *tmp210 null
  1016 label *label194
  1017 label *label192
  1018 ubind :findFreeUnit:unit_type
 
  1565 label *label319
  1566 label *label316
  1567 set :supplyBase0:supplied true
-    * set *tmp303 :supplyBase0:supplied
  1568 jump *label314 always
  1569 label *label313
-    * set *tmp303 null
  1570 label *label314
  1571 jump *label312 always
  1572 label *label311
 
  1607 label *label329
  1608 label *label326
  1609 set :supplyBase0:supplied true
-    * set *tmp314 :supplyBase0:supplied
  1610 jump *label324 always
  1611 label *label323
  1612 sensor *tmp320 .smelter @sand
 
  1647 label *label331
  1648 set *tmp322 null
  1649 label *label332
-    * set *tmp314 *tmp322
  1650 label *label324
  1651 jump *label322 always
  1652 label *label321
 
  1692 label *label341
  1693 set *tmp333 null
  1694 label *label342
-    * set *tmp330 *tmp333
  1695 jump *label340 always
  1696 label *label339
-    * set *tmp330 null
  1697 label *label340
  1698 jump *label310 always
  1699 label *label309
 
  1822 label *label360
  1823 set *tmp353 *tmp356
  1824 label *label356
-    * set *tmp349 *tmp353
  1825 jump *label354 always
  1826 label *label353
-    * set *tmp349 null
  1827 label *label354
  1828 jump *label352 always
  1829 label *label351
 
  1861 write .titaniumDrill .flareController ":start:drill"
  1862 write false .flareController ":start*finished"
  1863 write 3 .flareController "@counter"
-    * set *tmp377 null
  1864 jump *label390 always
  1865 label *label389
-    * set *tmp377 null
  1866 label *label390
  1867 jump *label388 always
  1868 label *label387
 
  1923 label *label400
  1924 set *tmp390 null
  1925 label *label401
-    * set *tmp387 *tmp390
  1926 jump *label399 always
  1927 label *label398
-    * set *tmp387 null
  1928 label *label399
  1929 jump *label397 always
  1930 label *label396

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1642 label *label337
  1643 label *label334
  1644 set :supplyBase0:supplied true
-    * set *tmp322 :supplyBase0:supplied
  1645 jump *label332 always
  1646 label *label331
-    * set *tmp322 null
  1647 label *label332
  1648 label *label324
  1649 jump *label322 always
 
  1685 label *label347
  1686 label *label344
  1687 set :supplyBase0:supplied true
-    * set *tmp333 :supplyBase0:supplied
  1688 jump *label342 always
  1689 label *label341
-    * set *tmp333 null
  1690 label *label342
  1691 jump *label340 always
  1692 label *label339
 
  1722 setaddr :mineOre.1*retaddr *label358 (h:*label358)
  1723 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
  1724 label *label358
-    * set *tmp353 null
  1725 jump *label356 always
  1726 label *label355
  1727 sensor *tmp354 .core @silicon
 
  1815 label *label366
  1816 set *tmp356 *tmp363
  1817 label *label360
-    * set *tmp353 *tmp356
  1818 label *label356
  1819 jump *label354 always
  1820 label *label353
 
  1912 label *label402
  1913 set *tmp393 null
  1914 label *label403
-    * set *tmp390 *tmp393
  1915 jump *label401 always
  1916 label *label400
-    * set *tmp390 null
  1917 label *label401
  1918 jump *label399 always
  1919 label *label398

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1746 setaddr :mineOre.1*retaddr *label364 (h:*label364)
  1747 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
  1748 label *label364
-    * set *tmp356 null
  1749 jump *label360 always
  1750 label *label359
  1751 sensor *tmp361 .core @copper
 
  1812 label *label370
  1813 set *tmp363 *tmp366
  1814 label *label366
-    * set *tmp356 *tmp363
  1815 label *label360
  1816 label *label356
  1817 jump *label354 always
 
  1905 label *label404
  1906 set *tmp396 null
  1907 label *label405
-    * set *tmp393 *tmp396
  1908 jump *label403 always
  1909 label *label402
-    * set *tmp393 null
  1910 label *label403
  1911 jump *label401 always
  1912 label *label400

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1758 setaddr :mineOre.1*retaddr *label368 (h:*label368)
  1759 call *label12 *invalid :mineOre.1*retval (m:*label368) (h:*label368)
  1760 label *label368
-    * set *tmp363 null
  1761 jump *label366 always
  1762 label *label365
  1763 sensor *tmp364 .core @lead
 
  1809 label *label374
  1810 set *tmp366 *tmp369
  1811 label *label370
-    * set *tmp363 *tmp366
  1812 label *label366
  1813 label *label360
  1814 label *label356
 
  1898 label *label406
  1899 set *tmp399 null
  1900 label *label407
-    * set *tmp396 *tmp399
  1901 jump *label405 always
  1902 label *label404
-    * set *tmp396 null
  1903 label *label405
  1904 jump *label403 always
  1905 label *label402

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1770 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1771 call *label12 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
  1772 label *label372
-    * set *tmp366 null
  1773 jump *label370 always
  1774 label *label369
  1775 sensor *tmp367 .core @metaglass
 
  1806 label *label380
  1807 set *tmp369 null
  1808 label *label374
-    * set *tmp366 *tmp369
  1809 label *label370
  1810 label *label366
  1811 label *label360
 
  1891 jump *label406 equal *tmp398 false
  1892 set :targetMet*retval true
  1893 jump *label395 always
-    * set *tmp399 null
  1894 jump *label407 always
  1895 label *label406
-    * set *tmp399 null
  1896 label *label407
  1897 jump *label405 always
  1898 label *label404

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1782 setaddr :mineOre.1*retaddr *label376 (h:*label376)
  1783 call *label12 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
  1784 label *label376
-    * set *tmp369 null
  1785 jump *label374 always
  1786 label *label373
  1787 set :status1.9:text "Goal 10: supplying base"
 
  1803 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1804 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
  1805 label *label380
-    * set *tmp369 null
  1806 label *label374
  1807 label *label370
  1808 label *label366

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-90 instructions):
 
    14 write 511 bank1 511
    15 label *label29
    16 ubind @poly
-    * set *tmp87 @unit
-    * set .builder *tmp87
-    * ulocate building core false @copper .coreX .coreY *tmp89 *tmp88
-    * set .core *tmp88
+   17 set .builder @unit
+   18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label30
    20 op equal *tmp90 .core null
    21 jump *label29 notEqual *tmp90 false
 
    28 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    29 label *label32
    30 write :findUnits:count .display ".displayFlares"
-    * set *tmp92 :findUnits*retval
-    * set :flares *tmp92
+   31 set :flares :findUnits*retval
    32 set :findUnits:type @mono
    33 setaddr :findUnits*retaddr *label33 (h:*label33)
    34 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    35 label *label33
    36 write :findUnits:count .display ".displayMonos"
-    * set *tmp94 :findUnits*retval
-    * set :monos *tmp94
+   37 set :monos :findUnits*retval
    38 set :findUnits:type @poly
    39 setaddr :findUnits*retaddr *label34 (h:*label34)
    40 call *label27 *invalid :findUnits*retval (m:*label34) (h:*label34)
    41 label *label34
    42 write :findUnits:count .display ".displayPolys"
-    * set *tmp96 :findUnits*retval
-    * set :polys *tmp96
+   43 set :polys :findUnits*retval
    44 set :buildBlockFromCfg:block @graphite-press
    45 set :buildBlockFromCfg:offsetX -1.5
    46 set :buildBlockFromCfg:offsetY 2.5
 
    54 set :buildBlockFromCfg:config null
    55 setaddr *tmp98 *label39
    56 label *label36
-    * op add *tmp99 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp99
-    * op add *tmp100 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp100
+   57 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   58 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    59 set :buildBlock:block :buildBlockFromCfg:block
    60 set :buildBlock:x :buildBlockFromCfg:x
    61 set :buildBlock:y :buildBlockFromCfg:y
 
    92 set :buildBlockFromCfg.1:config null
    93 setaddr *tmp102 *label45
    94 label *label42
-    * op add *tmp103 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp103
-    * op add *tmp104 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp104
+   95 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   96 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    97 set :buildBlock:block :buildBlockFromCfg.1:block
    98 set :buildBlock:x :buildBlockFromCfg.1:x
    99 set :buildBlock:y :buildBlockFromCfg.1:y
 
   130 set :buildBlockFromCfg.2:config null
   131 setaddr *tmp106 *label51
   132 label *label48
-    * op add *tmp107 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp107
-    * op add *tmp108 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp108
+  133 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  134 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   135 set :buildBlock:block :buildBlockFromCfg.2:block
   136 set :buildBlock:x :buildBlockFromCfg.2:x
   137 set :buildBlock:y :buildBlockFromCfg.2:y
 
   165 set :buildBlockFromCfg.3:config null
   166 setaddr *tmp110 *label57
   167 label *label54
-    * op add *tmp111 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp111
-    * op add *tmp112 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp112
+  168 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  169 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   170 set :buildBlock:block :buildBlockFromCfg.3:block
   171 set :buildBlock:x :buildBlockFromCfg.3:x
   172 set :buildBlock:y :buildBlockFromCfg.3:y
 
   204 set :buildBlockFromCfg.4:config null
   205 setaddr *tmp114 *label63
   206 label *label60
-    * op add *tmp115 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp115
-    * op add *tmp116 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp116
+  207 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  208 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   209 set :buildBlock:block :buildBlockFromCfg.4:block
   210 set :buildBlock:x :buildBlockFromCfg.4:x
   211 set :buildBlock:y :buildBlockFromCfg.4:y
 
   254 wait 1e-15
   255 read *tmp128 .oreLocator ":findDrillLocation*finished"
   256 jump *label68 equal *tmp128 false
-    * read *tmp125 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp125
-    * read *tmp126 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp126
-    * read *tmp129 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp129
+  257 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  258 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  259 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   260 op equal *tmp130 :buildTitaniumDrill:result false
   261 jump *label69 equal *tmp130 false
   262 set :error:error "Cannot locate spot for titanium drill"
 
   295 set :buildBlockFromCfg.5:config null
   296 setaddr *tmp133 *label77
   297 label *label74
-    * op add *tmp134 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp134
-    * op add *tmp135 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp135
+  298 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  299 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   300 set :buildBlock:block :buildBlockFromCfg.5:block
   301 set :buildBlock:x :buildBlockFromCfg.5:x
   302 set :buildBlock:y :buildBlockFromCfg.5:y
 
   333 set :buildBlockFromCfg.6:config processor2
   334 setaddr *tmp137 *label83
   335 label *label80
-    * op add *tmp138 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp138
-    * op add *tmp139 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp139
+  336 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  337 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   338 set :buildBlock:block :buildBlockFromCfg.6:block
   339 set :buildBlock:x :buildBlockFromCfg.6:x
   340 set :buildBlock:y :buildBlockFromCfg.6:y
 
   381 set :buildBlockFromCfg.7:config null
   382 setaddr *tmp141 *label89
   383 label *label86
-    * op add *tmp142 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp142
-    * op add *tmp143 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp143
+  384 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  385 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   386 set :buildBlock:block :buildBlockFromCfg.7:block
   387 set :buildBlock:x :buildBlockFromCfg.7:x
   388 set :buildBlock:y :buildBlockFromCfg.7:y
 
   416 set :buildBlockFromCfg.8:config null
   417 setaddr *tmp145 *label95
   418 label *label92
-    * op add *tmp146 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp146
-    * op add *tmp147 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp147
+  419 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  420 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   421 set :buildBlock:block :buildBlockFromCfg.8:block
   422 set :buildBlock:x :buildBlockFromCfg.8:x
   423 set :buildBlock:y :buildBlockFromCfg.8:y
 
   454 set :buildBlockFromCfg.9:config @mono
   455 setaddr *tmp149 *label101
   456 label *label98
-    * op add *tmp150 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp150
-    * op add *tmp151 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp151
+  457 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  458 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   459 set :buildBlock:block :buildBlockFromCfg.9:block
   460 set :buildBlock:x :buildBlockFromCfg.9:x
   461 set :buildBlock:y :buildBlockFromCfg.9:y
 
   524 set :buildBlockFromCfg.10:config null
   525 setaddr *tmp157 *label114
   526 label *label111
-    * op add *tmp158 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp158
-    * op add *tmp159 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp159
+  527 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  528 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   529 set :buildBlock:block :buildBlockFromCfg.10:block
   530 set :buildBlock:x :buildBlockFromCfg.10:x
   531 set :buildBlock:y :buildBlockFromCfg.10:y
 
   559 set :buildBlockFromCfg.11:config null
   560 setaddr *tmp161 *label120
   561 label *label117
-    * op add *tmp162 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp162
-    * op add *tmp163 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp163
+  562 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  563 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   564 set :buildBlock:block :buildBlockFromCfg.11:block
   565 set :buildBlock:x :buildBlockFromCfg.11:x
   566 set :buildBlock:y :buildBlockFromCfg.11:y
 
   594 set :buildBlockFromCfg.12:config @metaglass
   595 setaddr *tmp165 *label126
   596 label *label123
-    * op add *tmp166 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp166
-    * op add *tmp167 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp167
+  597 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  598 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   599 set :buildBlock:block :buildBlockFromCfg.12:block
   600 set :buildBlock:x :buildBlockFromCfg.12:x
   601 set :buildBlock:y :buildBlockFromCfg.12:y
 
   629 set :buildBlockFromCfg.13:config null
   630 setaddr *tmp169 *label132
   631 label *label129
-    * op add *tmp170 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp170
-    * op add *tmp171 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp171
+  632 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  633 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   634 set :buildBlock:block :buildBlockFromCfg.13:block
   635 set :buildBlock:x :buildBlockFromCfg.13:x
   636 set :buildBlock:y :buildBlockFromCfg.13:y
 
   668 set :buildBlockFromCfg.14:config null
   669 setaddr *tmp173 *label138
   670 label *label135
-    * op add *tmp174 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp174
-    * op add *tmp175 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp175
+  671 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  672 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   673 set :buildBlock:block :buildBlockFromCfg.14:block
   674 set :buildBlock:x :buildBlockFromCfg.14:x
   675 set :buildBlock:y :buildBlockFromCfg.14:y
 
   703 set :buildBlockFromCfg.15:config null
   704 setaddr *tmp177 *label144
   705 label *label141
-    * op add *tmp178 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp178
-    * op add *tmp179 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp179
+  706 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  707 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   708 set :buildBlock:block :buildBlockFromCfg.15:block
   709 set :buildBlock:x :buildBlockFromCfg.15:x
   710 set :buildBlock:y :buildBlockFromCfg.15:y
 
   738 set :buildBlockFromCfg.16:config null
   739 setaddr *tmp181 *label150
   740 label *label147
-    * op add *tmp182 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp182
-    * op add *tmp183 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp183
+  741 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  742 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   743 set :buildBlock:block :buildBlockFromCfg.16:block
   744 set :buildBlock:x :buildBlockFromCfg.16:x
   745 set :buildBlock:y :buildBlockFromCfg.16:y
 
   777 set :buildBlockFromCfg.17:config null
   778 setaddr *tmp185 *label156
   779 label *label153
-    * op add *tmp186 .coreX :buildBlockFromCfg.17:offsetX
-    * set :buildBlockFromCfg.17:x *tmp186
-    * op add *tmp187 .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlockFromCfg.17:y *tmp187
+  780 op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
+  781 op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
   782 set :buildBlock:block :buildBlockFromCfg.17:block
   783 set :buildBlock:x :buildBlockFromCfg.17:x
   784 set :buildBlock:y :buildBlockFromCfg.17:y
 
   815 set :buildBlockFromCfg.18:config null
   816 setaddr *tmp189 *label162
   817 label *label159
-    * op add *tmp190 .coreX :buildBlockFromCfg.18:offsetX
-    * set :buildBlockFromCfg.18:x *tmp190
-    * op add *tmp191 .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlockFromCfg.18:y *tmp191
+  818 op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
+  819 op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
   820 set :buildBlock:block :buildBlockFromCfg.18:block
   821 set :buildBlock:x :buildBlockFromCfg.18:x
   822 set :buildBlock:y :buildBlockFromCfg.18:y
 
   850 set :buildBlockFromCfg.19:config null
   851 setaddr *tmp193 *label168
   852 label *label165
-    * op add *tmp194 .coreX :buildBlockFromCfg.19:offsetX
-    * set :buildBlockFromCfg.19:x *tmp194
-    * op add *tmp195 .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlockFromCfg.19:y *tmp195
+  853 op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
+  854 op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
   855 set :buildBlock:block :buildBlockFromCfg.19:block
   856 set :buildBlock:x :buildBlockFromCfg.19:x
   857 set :buildBlock:y :buildBlockFromCfg.19:y
 
   885 set :buildBlockFromCfg.20:config null
   886 setaddr *tmp197 *label174
   887 label *label171
-    * op add *tmp198 .coreX :buildBlockFromCfg.20:offsetX
-    * set :buildBlockFromCfg.20:x *tmp198
-    * op add *tmp199 .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlockFromCfg.20:y *tmp199
+  888 op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
+  889 op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
   890 set :buildBlock:block :buildBlockFromCfg.20:block
   891 set :buildBlock:x :buildBlockFromCfg.20:x
   892 set :buildBlock:y :buildBlockFromCfg.20:y
 
   959 sensor *tmp208 :findFreeUnit:first_unit @dead
   960 op equal *tmp209 *tmp208 1
   961 jump *label193 equal *tmp209 false
-    * set *tmp211 @unit
-    * set :findFreeUnit:first_unit *tmp211
+  962 set :findFreeUnit:first_unit @unit
   963 jump *label194 always
   964 label *label193
   965 label *label194
 
  1002 wait 1e-15
  1003 read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
  1004 jump *label202 equal *tmp219 false
-    * read *tmp220 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp220
+ 1005 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
  1006 op equal *tmp221 :buildThoriumDrill:result false
  1007 jump *label203 equal *tmp221 false
  1008 set :error.1:error "Cannot locate spot for thorium drill"
 
  1013 label *label203
  1014 label *label204
  1015 set :buildBlockAt:block @laser-drill
-    * read *tmp72 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp72
-    * read *tmp73 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp73
+ 1016 read :buildBlockAt:x .oreLocator ".drillX"
+ 1017 read :buildBlockAt:y .oreLocator ".drillY"
  1018 set :buildBlockAt:rotation null
  1019 set :buildBlockAt:config 0
  1020 set :buildBlockAt:skipError false
  1021 setaddr :buildBlockAt*retaddr *label206 (h:*label206)
  1022 call *label25 *invalid :buildBlockAt*retval (m:*label206) (h:*label206)
  1023 label *label206
-    * set *tmp223 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumDrill *tmp223
+ 1024 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1025 read *tmp74 .oreLocator ".water1X"
  1026 op lessThan *tmp224 *tmp74 0
  1027 jump *label207 equal *tmp224 false
 
  1043 set :buildBlockAt:block @water-extractor
  1044 read *tmp74 .oreLocator ".water1X"
  1045 set :buildBlockAt:x *tmp74
-    * read *tmp75 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp75
+ 1046 read :buildBlockAt:y .oreLocator ".water1Y"
  1047 set :buildBlockAt:rotation null
  1048 set :buildBlockAt:config 0
  1049 set :buildBlockAt:skipError false
 
  1071 set :buildBlockAt:block @water-extractor
  1072 read *tmp76 .oreLocator ".water2X"
  1073 set :buildBlockAt:x *tmp76
-    * read *tmp77 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp77
+ 1074 read :buildBlockAt:y .oreLocator ".water2Y"
  1075 set :buildBlockAt:rotation null
  1076 set :buildBlockAt:config 0
  1077 set :buildBlockAt:skipError false
 
  1090 label *label218
  1091 label *label217
  1092 set :buildBlockAt:block @steam-generator
-    * read *tmp78 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp78
-    * read *tmp79 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp79
+ 1093 read :buildBlockAt:x .oreLocator ".generatorX"
+ 1094 read :buildBlockAt:y .oreLocator ".generatorY"
  1095 set :buildBlockAt:rotation null
  1096 set :buildBlockAt:config 0
  1097 set :buildBlockAt:skipError false
  1098 setaddr :buildBlockAt*retaddr *label219 (h:*label219)
  1099 call *label25 *invalid :buildBlockAt*retval (m:*label219) (h:*label219)
  1100 label *label219
-    * set *tmp230 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumGenerator *tmp230
+ 1101 set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval
  1102 set :meetTarget:block @power-node
  1103 set :meetTarget:copper 2
  1104 set :meetTarget:lead 6
 
  1111 label *label221
  1112 label *label220
  1113 set :buildBlockAt:block @power-node
-    * read *tmp80 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp80
-    * read *tmp81 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp81
+ 1114 read :buildBlockAt:x .oreLocator ".nodeX"
+ 1115 read :buildBlockAt:y .oreLocator ".nodeY"
  1116 set :buildBlockAt:rotation null
  1117 set :buildBlockAt:config 0
  1118 set :buildBlockAt:skipError false
 
  1131 label *label224
  1132 label *label223
  1133 set :buildBlockAt:block @solar-panel
-    * read *tmp82 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp82
-    * read *tmp83 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp83
+ 1134 read :buildBlockAt:x .oreLocator ".panelX"
+ 1135 read :buildBlockAt:y .oreLocator ".panelY"
  1136 set :buildBlockAt:rotation null
  1137 set :buildBlockAt:config 0
  1138 set :buildBlockAt:skipError false
 
  1151 label *label227
  1152 label *label226
  1153 set :buildBlockAt:block @battery
-    * read *tmp84 .oreLocator ".batteryX"
-    * set :buildBlockAt:x *tmp84
-    * read *tmp85 .oreLocator ".batteryY"
-    * set :buildBlockAt:y *tmp85
+ 1154 read :buildBlockAt:x .oreLocator ".batteryX"
+ 1155 read :buildBlockAt:y .oreLocator ".batteryY"
  1156 set :buildBlockAt:rotation null
  1157 set :buildBlockAt:config 0
  1158 set :buildBlockAt:skipError false
 
  1269 setaddr :moveToBlock*retaddr *label260 (h:*label260)
  1270 call *label8 *invalid :moveToBlock*retval (m:*label260) (h:*label260)
  1271 label *label260
-    * sensor *tmp254 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp254
+ 1272 sensor :depositItems:cap :depositItems:block @itemCapacity
  1273 label *label261
  1274 ucontrol itemDrop :depositItems:block 30
  1275 label *label262
 
  1299 return :depositItems*retaddr
  1300 end
  1301 label *label10
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 *tmp262
+ 1302 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
  1303 op equal *tmp263 *tmp261 false
  1304 jump *label269 equal *tmp263 false
  1305 set :error.3:error "Cannot locate ore"
 
  1313 return :locateOre*retaddr
  1314 end
  1315 label *label11
-    * op min *tmp265 :mineOre:amount 30
-    * set :mineOre:amount *tmp265
+ 1316 op min :mineOre:amount :mineOre:amount 30
  1317 set :transportStatus.1:target :mineOre:amount
  1318 set :transportStatus.1:item :mineOre:ore
  1319 write :transportStatus.1:target .display ".transportTarget"
 
  1348 set :status3.3:text "Mining..."
  1349 write :status3.3:text .display ".status3"
  1350 label *label282
-    * op add *tmp271 @second 10
-    * set :mineOre:stop *tmp271
+ 1351 op add :mineOre:stop @second 10
  1352 label *label283
-    * sensor *tmp272 @unit @firstItem
-    * set :mineOre:item *tmp272
+ 1353 sensor :mineOre:item @unit @firstItem
  1354 op notEqual *tmp273 :mineOre:item null
  1355 op notEqual *tmp274 :mineOre:item :mineOre:ore
  1356 op land *tmp275 *tmp273 *tmp274
 
  1388 write :status2:item .display ".item2"
  1389 write :status2:block .display ".block2"
  1390 label *label292
-    * set *tmp281 :mineOre.1:ore
-    * set :mineOre:ore *tmp281
+ 1391 set :mineOre:ore :mineOre.1:ore
  1392 set :mineOre:amount 30
  1393 set :mineOre:block .core
  1394 setaddr :mineOre*retaddr *label293 (h:*label293)
 
  1398 return :mineOre.1*retaddr
  1399 end
  1400 label *label13
-    * sensor *tmp282 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp282
+ 1401 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1402 set :transportStatus.2:item :fetchBlock:item
  1403 write :transportStatus.2:target .display ".transportTarget"
  1404 write :transportStatus.2:item .display ".transportItem"
 
  1428 label *label298
  1429 label *label302
  1430 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp287 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp287
+ 1431 sensor :fetchBlock:unitItem @unit @firstItem
  1432 op notEqual *tmp288 :fetchBlock:unitItem null
  1433 op notEqual *tmp289 :fetchBlock:unitItem :fetchBlock:item
  1434 op land *tmp290 *tmp288 *tmp289
 
  1474 write :status2.2:item .display ".item2"
  1475 write :status2.2:block .display ".block2"
  1476 label *label317
-    * sensor *tmp304 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp304
+ 1477 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1478 sensor *tmp305 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp306 :supplyBlock:blockCapacity *tmp305
-    * set :supplyBlock:missing *tmp306
+ 1479 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
  1480 op greaterThan *tmp307 :supplyBlock:missing 0
  1481 jump *label318 equal *tmp307 false
  1482 set :mineOre:ore :supplyBlock:ore
 
  1514 write :status2.3:item .display ".item2"
  1515 write :status2.3:block .display ".block2"
  1516 label *label327
-    * sensor *tmp315 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp315
+ 1517 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1518 sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp317 :supplyBlock.1:blockCapacity *tmp316
-    * set :supplyBlock.1:missing *tmp317
+ 1519 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
  1520 op greaterThan *tmp318 :supplyBlock.1:missing 0
  1521 jump *label328 equal *tmp318 false
  1522 set :mineOre:ore :supplyBlock.1:ore
 
  1547 write :status2.4:item .display ".item2"
  1548 write :status2.4:block .display ".block2"
  1549 label *label335
-    * sensor *tmp323 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp323
+ 1550 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1551 sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp325 :supplyBlock.2:blockCapacity *tmp324
-    * set :supplyBlock.2:missing *tmp325
+ 1552 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
  1553 op greaterThan *tmp326 :supplyBlock.2:missing 0
  1554 jump *label336 equal *tmp326 false
  1555 set :mineOre:ore :supplyBlock.2:ore
 
  1588 write :status2.5:item .display ".item2"
  1589 write :status2.5:block .display ".block2"
  1590 label *label345
-    * sensor *tmp334 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp334
+ 1591 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1592 sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp336 :supplyBlock.3:blockCapacity *tmp335
-    * set :supplyBlock.3:missing *tmp336
+ 1593 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
  1594 op greaterThan *tmp337 :supplyBlock.3:missing 0
  1595 jump *label346 equal *tmp337 false
  1596 set :mineOre:ore :supplyBlock.3:ore
 
  1618 jump *label349 equal *tmp340 false
  1619 sensor *tmp342 .core @titanium
  1620 op sub *tmp343 .targetTitanium *tmp342
-    * op min *tmp344 7 *tmp343
-    * set *tmp341 *tmp344
+ 1621 op min *tmp341 7 *tmp343
  1622 jump *label350 always
  1623 label *label349
  1624 set *tmp341 100
 
  1648 set :status1.5:text "Goal 6: silicon requirement"
  1649 write :status1.5:text .display ".status1"
  1650 label *label361
-    * sensor *tmp357 .core @coal
-    * set :supplyBase0:coal *tmp357
-    * sensor *tmp358 .core @sand
-    * set :supplyBase0:sand *tmp358
+ 1651 sensor :supplyBase0:coal .core @coal
+ 1652 sensor :supplyBase0:sand .core @sand
  1653 op lessThan *tmp359 :supplyBase0:coal :supplyBase0:sand
  1654 jump *label362 equal *tmp359 false
  1655 set *tmp360 @coal
 
  1703 set :status1.9:text "Goal 10: supplying base"
  1704 write :status1.9:text .display ".status1"
  1705 label *label377
-    * sensor *tmp370 .core @coal
-    * set :supplyBase0:coal.1 *tmp370
-    * sensor *tmp371 .core @sand
-    * set :supplyBase0:sand.1 *tmp371
+ 1706 sensor :supplyBase0:coal.1 .core @coal
+ 1707 sensor :supplyBase0:sand.1 .core @sand
  1708 op lessThanEq *tmp372 :supplyBase0:coal.1 :supplyBase0:sand.1
  1709 jump *label378 equal *tmp372 false
  1710 set *tmp373 @coal
 
  1868 write :meetTarget:metaglass .display ".targetMetaglass"
  1869 set .targetCopper :meetTarget:copper
  1870 op add *tmp402 :meetTarget:lead .leadSurplus
-    * op add *tmp403 *tmp402 1
-    * set .targetLead *tmp403
+ 1871 op add .targetLead *tmp402 1
  1872 set .targetGraphite :meetTarget:graphite
  1873 set .targetSilicon :meetTarget:silicon
  1874 set .targetTitanium :meetTarget:titanium
 
  1916 return :log*retaddr
  1917 end
  1918 label *label24
-    * sensor *tmp419 :logBlock:block @id
-    * set :log:encodedId *tmp419
+ 1919 sensor :log:encodedId :logBlock:block @id
  1920 setaddr :log*retaddr *label426 (h:*label426)
  1921 call *label23 *invalid :log*retval (m:*label426) (h:*label426)
  1922 label *label426
 
  1932 set :status3.4:text "Building..."
  1933 write :status3.4:text .display ".status3"
  1934 label *label429
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp420 *tmp421
-    * set :buildBlockAt:building *tmp420
+ 1935 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1936 op notEqual *tmp422 :buildBlockAt:building null
  1937 jump *label430 equal *tmp422 false
  1938 op equal *tmp424 :buildBlockAt:type :buildBlockAt:block
 
  1958 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1959 wait 0.25
  1960 label *label437
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp427 *tmp428
-    * set :buildBlockAt:building *tmp427
+ 1961 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1962 op equal *tmp429 :buildBlockAt:building null
  1963 jump *label440 equal *tmp429 false
  1964 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1183 jump *label230 notEqual *tmp238 false
  1184 label *label232
  1185 label *label234
-    * jump *label236 equal true false
  1186 setaddr :supplyBase*retaddr *label237 (h:*label237)
  1187 call *label20 *invalid :supplyBase*retval (m:*label237) (h:*label237)
  1188 label *label237

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-65 instructions):
 
    17 set .builder @unit
    18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label30
-    * op equal *tmp90 .core null
-    * jump *label29 notEqual *tmp90 false
+   20 jump *label29 equal .core null
    21 label *label31
    22 set .display processor1
    23 set .flareController processor3
 
   256 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   257 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   258 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp130 :buildTitaniumDrill:result false
-    * jump *label69 equal *tmp130 false
+  259 jump *label69 notEqual :buildTitaniumDrill:result false
   260 set :error:error "Cannot locate spot for titanium drill"
   261 set .ERROR :error:error
   262 stop
 
   495 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   496 label *label107
   497 sensor *tmp152 .battery @totalPower
-    * op lessThan *tmp153 *tmp152 300
-    * jump *label108 equal *tmp153 false
+  498 jump *label108 greaterThanEq *tmp152 300
   499 jump *label106 always
   500 jump *label109 always
   501 label *label108
   502 label *label109
   503 label *label105
   504 read *tmp39 .controller ".monos"
-    * op lessThan *tmp155 *tmp39 3
-    * jump *label104 notEqual *tmp155 false
+  505 jump *label104 lessThan *tmp39 3
   506 label *label106
   507 set .graphiteSurplus 60
   508 set .siliconSurplus 100
 
   916 write 3 .controller ".polyTarget"
   917 label *label177
   918 read *tmp40 .controller ".polys"
-    * op lessThan *tmp200 *tmp40 3
-    * jump *label179 equal *tmp200 false
+  919 jump *label179 greaterThanEq *tmp40 3
   920 setaddr :supplyBase*retaddr *label180 (h:*label180)
   921 call *label20 *invalid :supplyBase*retval (m:*label180) (h:*label180)
   922 label *label180
 
   925 label *label179
   926 label *label181
   927 read *tmp38 .controller ".flares"
-    * op lessThan *tmp201 *tmp38 1
-    * jump *label183 equal *tmp201 false
+  928 jump *label183 greaterThanEq *tmp38 1
   929 setaddr :supplyBase*retaddr *label184 (h:*label184)
   930 call *label20 *invalid :supplyBase*retval (m:*label184) (h:*label184)
   931 label *label184
 
   935 set :findFreeUnit:unit_type @flare
   936 set :findFreeUnit:initial_flag 0
   937 ubind :findFreeUnit:unit_type
-    * op equal *tmp203 @unit null
-    * jump *label186 equal *tmp203 false
+  938 jump *label186 notEqual @unit null
   939 jump *label185 always
   940 jump *label187 always
   941 label *label186
 
   943 set :findFreeUnit:first_unit @unit
   944 label *label188
   945 sensor *tmp205 @unit @controlled
-    * op equal *tmp206 *tmp205 0
-    * jump *label191 equal *tmp206 false
+  946 jump *label191 notEqual *tmp205 0
   947 ucontrol flag :findFreeUnit:initial_flag
   948 jump *label185 always
   949 jump *label192 always
   950 label *label191
   951 sensor *tmp208 :findFreeUnit:first_unit @dead
-    * op equal *tmp209 *tmp208 1
-    * jump *label193 equal *tmp209 false
+  952 jump *label193 notEqual *tmp208 1
   953 set :findFreeUnit:first_unit @unit
   954 jump *label194 always
   955 label *label193
 
   957 label *label192
   958 ubind :findFreeUnit:unit_type
   959 label *label189
-    * op notEqual *tmp212 :findFreeUnit:first_unit @unit
-    * jump *label188 notEqual *tmp212 false
+  960 jump *label188 notEqual :findFreeUnit:first_unit @unit
   961 label *label190
   962 jump *label185 always
   963 label *label185
 
   974 label *label198
   975 label *label196
   976 read *tmp217 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp218 *tmp217 false
-    * jump *label195 notEqual *tmp218 false
+  977 jump *label195 equal *tmp217 false
   978 label *label197
   979 set :meetTarget:block @laser-drill
   980 set :meetTarget:copper 35
 
   992 read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
   993 jump *label202 equal *tmp219 false
   994 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp221 :buildThoriumDrill:result false
-    * jump *label203 equal *tmp221 false
+  995 jump *label203 notEqual :buildThoriumDrill:result false
   996 set :error.1:error "Cannot locate spot for thorium drill"
   997 set .ERROR :error.1:error
   998 stop
 
  1011 label *label206
  1012 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1013 read *tmp74 .oreLocator ".water1X"
-    * op lessThan *tmp224 *tmp74 0
-    * jump *label207 equal *tmp224 false
+ 1014 jump *label207 greaterThanEq *tmp74 0
  1015 jump *label199 always
  1016 jump *label208 always
  1017 label *label207
 
  1038 call *label25 *invalid :buildBlockAt*retval (m:*label211) (h:*label211)
  1039 label *label211
  1040 read *tmp76 .oreLocator ".water2X"
-    * op lessThan *tmp227 *tmp76 0
-    * jump *label212 equal *tmp227 false
+ 1041 jump *label212 greaterThanEq *tmp76 0
  1042 jump *label199 always
  1043 jump *label213 always
  1044 label *label212
 
  1165 read *tmp38 .controller ".flares"
  1166 read *tmp39 .controller ".monos"
  1167 op add *tmp237 *tmp38 *tmp39
-    * op lessThan *tmp238 *tmp237 16
-    * jump *label230 notEqual *tmp238 false
+ 1168 jump *label230 lessThan *tmp237 16
  1169 label *label232
  1170 label *label234
  1171 setaddr :supplyBase*retaddr *label237 (h:*label237)
 
  1186 label *label241
  1187 label *label242
  1188 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
-    * op equal *tmp240 *tmp239 false
-    * jump *label244 equal *tmp240 false
+ 1189 jump *label244 notEqual *tmp239 false
  1190 op sub *tmp241 :moveTo:radius 0.5
  1191 ucontrol approach :moveTo:x :moveTo:y *tmp241
  1192 label *label243
 
  1213 label *label248
  1214 label *label249
  1215 sensor *tmp244 @unit @firstItem
-    * op notEqual *tmp245 *tmp244 null
-    * jump *label252 equal *tmp245 false
+ 1216 jump *label252 equal *tmp244 null
  1217 ucontrol itemDrop @air 1000
  1218 jump *label253 always
  1219 label *label252
 
  1221 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1222 label *label250
  1223 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
-    * op equal *tmp248 *tmp247 false
-    * jump *label249 notEqual *tmp248 false
+ 1224 jump *label249 equal *tmp247 false
  1225 label *label251
  1226 label *label247
  1227 return :moveToEmpty*retaddr
 
  1243 write :status3.2:text .display ".status3"
  1244 label *label257
  1245 sensor *tmp251 @unit @firstItem
-    * op equal *tmp252 *tmp251 :depositItems:item
-    * jump *label258 equal *tmp252 false
+ 1246 jump *label258 notEqual *tmp251 :depositItems:item
  1247 set :moveToBlock:block :depositItems:block
  1248 set :moveToBlock:radius 6
  1249 setaddr :moveToBlock*retaddr *label260 (h:*label260)
 
  1256 sensor *tmp255 @unit @firstItem
  1257 op mul *tmp256 *tmp255 :depositItems:cap
  1258 sensor *tmp257 :depositItems:block :depositItems:item
-    * op greaterThan *tmp258 *tmp256 *tmp257
-    * jump *label261 notEqual *tmp258 false
+ 1259 jump *label261 greaterThan *tmp256 *tmp257
  1260 label *label263
  1261 jump *label259 always
  1262 label *label258
  1263 label *label264
  1264 sensor *tmp259 @unit @firstItem
-    * op notEqual *tmp260 *tmp259 null
-    * jump *label266 equal *tmp260 false
+ 1265 jump *label266 equal *tmp259 null
  1266 ucontrol itemDrop @air 1000
  1267 label *label265
  1268 jump *label264 always
 
  1278 end
  1279 label *label10
  1280 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
-    * op equal *tmp263 *tmp261 false
-    * jump *label269 equal *tmp263 false
+ 1281 jump *label269 notEqual *tmp261 false
  1282 set :error.3:error "Cannot locate ore"
  1283 set .ERROR :error.3:error
  1284 stop
 
  1308 call *label7 *invalid :moveToEmpty*retval (m:*label275) (h:*label275)
  1309 label *label275
  1310 sensor *tmp266 @unit @firstItem
-    * op notEqual *tmp267 *tmp266 :mineOre:ore
-    * jump *label276 equal *tmp267 false
+ 1311 jump *label276 equal *tmp266 :mineOre:ore
  1312 label *label279
  1313 sensor *tmp269 @unit @firstItem
-    * op notEqual *tmp270 *tmp269 null
-    * jump *label281 equal *tmp270 false
+ 1314 jump *label281 equal *tmp269 null
  1315 ucontrol itemDrop @air 1000
  1316 label *label280
  1317 jump *label279 always
 
  1335 label *label286
  1336 label *label287
  1337 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp277 @second :mineOre:stop
-    * jump *label288 equal *tmp277 false
+ 1338 jump *label288 lessThanEq @second :mineOre:stop
  1339 jump *label285 always
  1340 jump *label289 always
  1341 label *label288
  1342 label *label289
  1343 label *label284
  1344 sensor *tmp279 @unit @totalItems
-    * op lessThan *tmp280 *tmp279 :mineOre:amount
-    * jump *label283 notEqual *tmp280 false
+ 1345 jump *label283 lessThan *tmp279 :mineOre:amount
  1346 label *label285
  1347 ucontrol unbind
  1348 set :depositItems:block :mineOre:block
 
  1392 label *label297
  1393 label *label299
  1394 sensor *tmp285 @unit @firstItem
-    * op notEqual *tmp286 *tmp285 null
-    * jump *label301 equal *tmp286 false
+ 1395 jump *label301 equal *tmp285 null
  1396 ucontrol itemDrop @air 1000
  1397 label *label300
  1398 jump *label299 always
 
  1426 end
  1427 label *label18
  1428 set :supplyBase0:supplied false
-    * op equal *tmp296 .unloader1 null
-    * jump *label309 equal *tmp296 false
+ 1429 jump *label309 notEqual .unloader1 null
  1430 sensor *tmp298 .core @graphite
-    * op lessThan *tmp299 *tmp298 .targetGraphite
-    * jump *label311 equal *tmp299 false
+ 1431 jump *label311 greaterThanEq *tmp298 .targetGraphite
  1432 sensor *tmp301 .press @coal
-    * op lessThan *tmp302 *tmp301 5
-    * jump *label313 equal *tmp302 false
+ 1433 jump *label313 greaterThanEq *tmp301 5
  1434 set :status1:text "Goal 1: graphite requirement"
  1435 write :status1:text .display ".status1"
  1436 label *label315
 
  1446 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1447 sensor *tmp305 :supplyBlock:block :supplyBlock:ore
  1448 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
-    * op greaterThan *tmp307 :supplyBlock:missing 0
-    * jump *label318 equal *tmp307 false
+ 1449 jump *label318 lessThanEq :supplyBlock:missing 0
  1450 set :mineOre:ore :supplyBlock:ore
  1451 set :mineOre:amount :supplyBlock:blockCapacity
  1452 set :mineOre:block :supplyBlock:block
 
  1465 label *label311
  1466 label *label312
  1467 sensor *tmp309 .core @silicon
-    * op lessThan *tmp310 *tmp309 .targetSilicon
-    * jump *label321 equal *tmp310 false
+ 1468 jump *label321 greaterThanEq *tmp309 .targetSilicon
  1469 sensor *tmp312 .smelter @coal
-    * op lessThan *tmp313 *tmp312 5
-    * jump *label323 equal *tmp313 false
+ 1470 jump *label323 greaterThanEq *tmp312 5
  1471 set :status1.1:text "Goal 2: coal for silicon requirement"
  1472 write :status1.1:text .display ".status1"
  1473 label *label325
 
  1483 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1484 sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
  1485 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
-    * op greaterThan *tmp318 :supplyBlock.1:missing 0
-    * jump *label328 equal *tmp318 false
+ 1486 jump *label328 lessThanEq :supplyBlock.1:missing 0
  1487 set :mineOre:ore :supplyBlock.1:ore
  1488 set :mineOre:amount :supplyBlock.1:blockCapacity
  1489 set :mineOre:block :supplyBlock.1:block
 
  1498 jump *label324 always
  1499 label *label323
  1500 sensor *tmp320 .smelter @sand
-    * op lessThan *tmp321 *tmp320 5
-    * jump *label331 equal *tmp321 false
+ 1501 jump *label331 greaterThanEq *tmp320 5
  1502 set :status1.2:text "Goal 3: sand for silicon requirement"
  1503 write :status1.2:text .display ".status1"
  1504 label *label333
 
  1514 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1515 sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
  1516 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
-    * op greaterThan *tmp326 :supplyBlock.2:missing 0
-    * jump *label336 equal *tmp326 false
+ 1517 jump *label336 lessThanEq :supplyBlock.2:missing 0
  1518 set :mineOre:ore :supplyBlock.2:ore
  1519 set :mineOre:amount :supplyBlock.2:blockCapacity
  1520 set :mineOre:block :supplyBlock.2:block
 
  1534 label *label321
  1535 label *label322
  1536 sensor *tmp328 .battery @totalPower
-    * op lessThan *tmp329 *tmp328 .powerTarget
-    * jump *label339 equal *tmp329 false
+ 1537 jump *label339 greaterThanEq *tmp328 .powerTarget
  1538 sensor *tmp331 .generator @coal
-    * op lessThan *tmp332 *tmp331 2
-    * jump *label341 equal *tmp332 false
+ 1539 jump *label341 greaterThanEq *tmp331 2
  1540 set :status1.3:text "Goal 4: supplying generator"
  1541 write :status1.3:text .display ".status1"
  1542 label *label343
 
  1552 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1553 sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
  1554 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
-    * op greaterThan *tmp337 :supplyBlock.3:missing 0
-    * jump *label346 equal *tmp337 false
+ 1555 jump *label346 lessThanEq :supplyBlock.3:missing 0
  1556 set :mineOre:ore :supplyBlock.3:ore
  1557 set :mineOre:amount :supplyBlock.3:blockCapacity
  1558 set :mineOre:block :supplyBlock.3:block
 
  1574 label *label309
  1575 label *label310
  1576 sensor *tmp339 .core @titanium
-    * op lessThan *tmp340 *tmp339 .targetTitanium
-    * jump *label349 equal *tmp340 false
+ 1577 jump *label349 greaterThanEq *tmp339 .targetTitanium
  1578 sensor *tmp342 .core @titanium
  1579 op sub *tmp343 .targetTitanium *tmp342
  1580 op min *tmp341 7 *tmp343
 
  1584 label *label350
  1585 set :supplyBase0:titaniumTrigger *tmp341
  1586 sensor *tmp345 .titaniumDrill @titanium
-    * op lessThan *tmp346 *tmp345 :supplyBase0:titaniumTrigger
-    * jump *label351 equal *tmp346 false
-    * op equal *tmp348 :supplyBase0:supplied false
-    * jump *label353 equal *tmp348 false
+ 1587 jump *label351 greaterThanEq *tmp345 :supplyBase0:titaniumTrigger
+ 1588 jump *label353 notEqual :supplyBase0:supplied false
  1589 sensor *tmp350 .battery @totalPower
  1590 op mul *tmp351 .unloader1 .powerTarget
-    * op lessThan *tmp352 *tmp350 *tmp351
-    * jump *label355 equal *tmp352 false
+ 1591 jump *label355 greaterThanEq *tmp350 *tmp351
  1592 set :status1.4:text "Goal 5: supplying generator"
  1593 write :status1.4:text .display ".status1"
  1594 label *label357
 
  1599 jump *label356 always
  1600 label *label355
  1601 sensor *tmp354 .core @silicon
-    * op lessThan *tmp355 *tmp354 .targetSilicon
-    * jump *label359 equal *tmp355 false
+ 1602 jump *label359 greaterThanEq *tmp354 .targetSilicon
  1603 set :status1.5:text "Goal 6: silicon requirement"
  1604 write :status1.5:text .display ".status1"
  1605 label *label361
  1606 sensor :supplyBase0:coal .core @coal
  1607 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp359 :supplyBase0:coal :supplyBase0:sand
-    * jump *label362 equal *tmp359 false
+ 1608 jump *label362 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1609 set *tmp360 @coal
  1610 jump *label363 always
  1611 label *label362
 
  1619 jump *label360 always
  1620 label *label359
  1621 sensor *tmp361 .core @copper
-    * op lessThan *tmp362 *tmp361 .targetCopper
-    * jump *label365 equal *tmp362 false
+ 1622 jump *label365 greaterThanEq *tmp361 .targetCopper
  1623 set :status1.6:text "Goal 7: copper requirement"
  1624 write :status1.6:text .display ".status1"
  1625 label *label367
 
  1630 jump *label366 always
  1631 label *label365
  1632 sensor *tmp364 .core @lead
-    * op lessThan *tmp365 *tmp364 .targetLead
-    * jump *label369 equal *tmp365 false
+ 1633 jump *label369 greaterThanEq *tmp364 .targetLead
  1634 set :status1.7:text "Goal 8: lead requirement"
  1635 write :status1.7:text .display ".status1"
  1636 label *label371
 
  1641 jump *label370 always
  1642 label *label369
  1643 sensor *tmp367 .core @metaglass
-    * op lessThan *tmp368 *tmp367 .targetMetaglass
-    * jump *label373 equal *tmp368 false
+ 1644 jump *label373 greaterThanEq *tmp367 .targetMetaglass
  1645 set :status1.8:text "Goal 9: metaglass requirement"
  1646 write :status1.8:text .display ".status1"
  1647 label *label375
 
  1656 label *label377
  1657 sensor :supplyBase0:coal.1 .core @coal
  1658 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp372 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label378 equal *tmp372 false
+ 1659 jump *label378 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1660 set *tmp373 @coal
  1661 jump *label379 always
  1662 label *label378
 
  1701 return :supplyBase1*retaddr
  1702 end
  1703 label *label20
-    * op equal *tmp374 .flareControllerStarted false
-    * jump *label387 equal *tmp374 false
+ 1704 jump *label387 notEqual .flareControllerStarted false
  1705 read *tmp38 .controller ".flares"
-    * op greaterThan *tmp376 *tmp38 0
-    * jump *label389 equal *tmp376 false
+ 1706 jump *label389 lessThanEq *tmp38 0
  1707 set .flareControllerStarted true
  1708 write .core .flareController ":start:aCore"
  1709 write .titaniumDrill .flareController ":start:drill"
 
  1716 label *label387
  1717 label *label388
  1718 read *tmp39 .controller ".monos"
-    * op greaterThan *tmp380 *tmp39 3
-    * jump *label391 equal *tmp380 false
+ 1719 jump *label391 lessThanEq *tmp39 3
  1720 setaddr :supplyBase1*retaddr *label393 (h:*label393)
  1721 call *label19 *invalid :supplyBase1*retval (m:*label393) (h:*label393)
  1722 label *label393
 
  1731 end
  1732 label *label21
  1733 sensor *tmp382 .core @copper
-    * op greaterThanEq *tmp383 *tmp382 .targetCopper
-    * jump *label396 equal *tmp383 false
+ 1734 jump *label396 lessThan *tmp382 .targetCopper
  1735 sensor *tmp385 .core @lead
-    * op greaterThanEq *tmp386 *tmp385 .targetLead
-    * jump *label398 equal *tmp386 false
+ 1736 jump *label398 lessThan *tmp385 .targetLead
  1737 sensor *tmp388 .core @graphite
-    * op greaterThanEq *tmp389 *tmp388 .targetGraphite
-    * jump *label400 equal *tmp389 false
+ 1738 jump *label400 lessThan *tmp388 .targetGraphite
  1739 sensor *tmp391 .core @silicon
-    * op greaterThanEq *tmp392 *tmp391 .targetSilicon
-    * jump *label402 equal *tmp392 false
+ 1740 jump *label402 lessThan *tmp391 .targetSilicon
  1741 sensor *tmp394 .core @titanium
-    * op greaterThanEq *tmp395 *tmp394 .targetTitanium
-    * jump *label404 equal *tmp395 false
+ 1742 jump *label404 lessThan *tmp394 .targetTitanium
  1743 sensor *tmp397 .core @metaglass
-    * op greaterThanEq *tmp398 *tmp397 .targetMetaglass
-    * jump *label406 equal *tmp398 false
+ 1744 jump *label406 lessThan *tmp397 .targetMetaglass
  1745 set :targetMet*retval true
  1746 jump *label395 always
  1747 jump *label407 always
 
  1830 setaddr :targetMet*retaddr *label421 (h:*label421)
  1831 call *label21 *invalid :targetMet*retval (m:*label421) (h:*label421)
  1832 label *label421
-    * op equal *tmp411 :targetMet*retval false
-    * jump *label420 equal *tmp411 false
+ 1833 jump *label420 notEqual :targetMet*retval false
  1834 setaddr :supplyBase*retaddr *label422 (h:*label422)
  1835 call *label20 *invalid :supplyBase*retval (m:*label422) (h:*label422)
  1836 label *label422
 
  1873 write :status3.4:text .display ".status3"
  1874 label *label429
  1875 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp422 :buildBlockAt:building null
-    * jump *label430 equal *tmp422 false
-    * op equal *tmp424 :buildBlockAt:type :buildBlockAt:block
-    * jump *label432 equal *tmp424 false
+ 1876 jump *label430 equal :buildBlockAt:building null
+ 1877 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1878 set :buildBlockAt*retval :buildBlockAt:building
  1879 jump *label427 always
  1880 jump *label433 always
 
  1897 wait 0.25
  1898 label *label437
  1899 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp429 :buildBlockAt:building null
-    * jump *label440 equal *tmp429 false
+ 1900 jump *label440 notEqual :buildBlockAt:building null
  1901 set :buildBlockAt*retval null
  1902 jump *label427 always
  1903 jump *label441 always
  1904 label *label440
  1905 label *label441
  1906 label *label438
-    * op notEqual *tmp431 :buildBlockAt:type :buildBlockAt:block
-    * jump *label437 notEqual *tmp431 false
+ 1907 jump *label437 notEqual :buildBlockAt:type :buildBlockAt:block
  1908 label *label439
  1909 set :logBlock:block :buildBlockAt:block
  1910 setaddr :logBlock*retaddr *label442 (h:*label442)
 
  1946 set :findUnits:count 0
  1947 ubind :findUnits:type
  1948 set :findUnits:firstUnit @unit
-    * op notEqual *tmp432 :findUnits:firstUnit null
-    * jump *label447 equal *tmp432 false
+ 1949 jump *label447 equal :findUnits:firstUnit null
  1950 label *label449
  1951 op add :findUnits:count :findUnits:count 1
  1952 ubind :findUnits:type
  1953 label *label450
-    * op notEqual *tmp435 @unit :findUnits:firstUnit
-    * jump *label449 notEqual *tmp435 false
+ 1954 jump *label449 notEqual @unit :findUnits:firstUnit
  1955 label *label451
  1956 jump *label448 always
  1957 label *label447

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   261 set .ERROR :error:error
   262 stop
   263 label *label71
-    * jump *label70 always
   264 label *label69
   265 label *label70
   266 write @pneumatic-drill .display ".nextBlock"
 
   496 sensor *tmp152 .battery @totalPower
   497 jump *label108 greaterThanEq *tmp152 300
   498 jump *label106 always
-    * jump *label109 always
   499 label *label108
   500 label *label109
   501 label *label105
 
   935 ubind :findFreeUnit:unit_type
   936 jump *label186 notEqual @unit null
   937 jump *label185 always
-    * jump *label187 always
   938 label *label186
   939 label *label187
   940 set :findFreeUnit:first_unit @unit
 
   948 sensor *tmp208 :findFreeUnit:first_unit @dead
   949 jump *label193 notEqual *tmp208 1
   950 set :findFreeUnit:first_unit @unit
-    * jump *label194 always
   951 label *label193
   952 label *label194
   953 label *label192
 
   955 label *label189
   956 jump *label188 notEqual :findFreeUnit:first_unit @unit
   957 label *label190
-    * jump *label185 always
   958 label *label185
   959 write .coreX .oreLocator ":layoutThoriumDrill:x"
   960 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
   992 set .ERROR :error.1:error
   993 stop
   994 label *label205
-    * jump *label204 always
   995 label *label203
   996 label *label204
   997 set :buildBlockAt:block @laser-drill
 
  1007 read *tmp74 .oreLocator ".water1X"
  1008 jump *label207 greaterThanEq *tmp74 0
  1009 jump *label199 always
-    * jump *label208 always
  1010 label *label207
  1011 label *label208
  1012 set :meetTarget:block @water-extractor
 
  1033 read *tmp76 .oreLocator ".water2X"
  1034 jump *label212 greaterThanEq *tmp76 0
  1035 jump *label199 always
-    * jump *label213 always
  1036 label *label212
  1037 label *label213
  1038 set :meetTarget:block @water-extractor
 
  1207 sensor *tmp244 @unit @firstItem
  1208 jump *label252 equal *tmp244 null
  1209 ucontrol itemDrop @air 1000
-    * jump *label253 always
  1210 label *label252
  1211 label *label253
  1212 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1274 set .ERROR :error.3:error
  1275 stop
  1276 label *label271
-    * jump *label270 always
  1277 label *label269
  1278 label *label270
  1279 label *label268
 
  1307 jump *label279 always
  1308 label *label281
  1309 label *label278
-    * jump *label277 always
  1310 label *label276
  1311 label *label277
  1312 set :status3.3:text "Mining..."
 
  1320 op land *tmp275 *tmp273 *tmp274
  1321 jump *label286 equal *tmp275 false
  1322 jump *label285 always
-    * jump *label287 always
  1323 label *label286
  1324 label *label287
  1325 ucontrol mine :mineOre:x :mineOre:y
  1326 jump *label288 lessThanEq @second :mineOre:stop
  1327 jump *label285 always
-    * jump *label289 always
  1328 label *label288
  1329 label *label289
  1330 label *label284
 
  1393 op land *tmp290 *tmp288 *tmp289
  1394 jump *label305 equal *tmp290 false
  1395 ucontrol itemDrop @air 1000
-    * jump *label306 always
  1396 label *label305
  1397 label *label306
  1398 label *label303
 
  1439 setaddr :mineOre*retaddr *label320 (h:*label320)
  1440 call *label11 *invalid :mineOre*retval (m:*label320) (h:*label320)
  1441 label *label320
-    * jump *label319 always
  1442 label *label318
  1443 label *label319
  1444 label *label316
  1445 set :supplyBase0:supplied true
-    * jump *label314 always
  1446 label *label313
  1447 label *label314
-    * jump *label312 always
  1448 label *label311
  1449 label *label312
  1450 sensor *tmp309 .core @silicon
 
  1473 setaddr :mineOre*retaddr *label330 (h:*label330)
  1474 call *label11 *invalid :mineOre*retval (m:*label330) (h:*label330)
  1475 label *label330
-    * jump *label329 always
  1476 label *label328
  1477 label *label329
  1478 label *label326
 
  1503 setaddr :mineOre*retaddr *label338 (h:*label338)
  1504 call *label11 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1505 label *label338
-    * jump *label337 always
  1506 label *label336
  1507 label *label337
  1508 label *label334
  1509 set :supplyBase0:supplied true
-    * jump *label332 always
  1510 label *label331
  1511 label *label332
  1512 label *label324
-    * jump *label322 always
  1513 label *label321
  1514 label *label322
  1515 sensor *tmp328 .battery @totalPower
 
  1538 setaddr :mineOre*retaddr *label348 (h:*label348)
  1539 call *label11 *invalid :mineOre*retval (m:*label348) (h:*label348)
  1540 label *label348
-    * jump *label347 always
  1541 label *label346
  1542 label *label347
  1543 label *label344
  1544 set :supplyBase0:supplied true
-    * jump *label342 always
  1545 label *label341
  1546 label *label342
-    * jump *label340 always
  1547 label *label339
  1548 label *label340
-    * jump *label310 always
  1549 label *label309
  1550 label *label310
  1551 sensor *tmp339 .core @titanium
 
  1647 label *label366
  1648 label *label360
  1649 label *label356
-    * jump *label354 always
  1650 label *label353
  1651 label *label354
  1652 jump *label352 always
 
  1683 write .titaniumDrill .flareController ":start:drill"
  1684 write false .flareController ":start*finished"
  1685 write 3 .flareController "@counter"
-    * jump *label390 always
  1686 label *label389
  1687 label *label390
-    * jump *label388 always
  1688 label *label387
  1689 label *label388
  1690 read *tmp39 .controller ".monos"
 
  1716 jump *label406 lessThan *tmp397 .targetMetaglass
  1717 set :targetMet*retval true
  1718 jump *label395 always
-    * jump *label407 always
  1719 label *label406
  1720 label *label407
-    * jump *label405 always
  1721 label *label404
  1722 label *label405
-    * jump *label403 always
  1723 label *label402
  1724 label *label403
-    * jump *label401 always
  1725 label *label400
  1726 label *label401
-    * jump *label399 always
  1727 label *label398
  1728 label *label399
-    * jump *label397 always
  1729 label *label396
  1730 label *label397
  1731 set :targetMet*retval false
 
  1843 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1844 set :buildBlockAt*retval :buildBlockAt:building
  1845 jump *label427 always
-    * jump *label433 always
  1846 label *label432
  1847 label *label433
  1848 jump *label434 equal :buildBlockAt:skipError false
  1849 set :buildBlockAt*retval null
  1850 jump *label427 always
-    * jump *label435 always
  1851 label *label434
  1852 label *label435
  1853 set :error.4:error "Cannot build at ("
  1854 set .ERROR :error.4:error
  1855 stop
  1856 label *label436
-    * jump *label431 always
  1857 label *label430
  1858 label *label431
  1859 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1863 jump *label440 notEqual :buildBlockAt:building null
  1864 set :buildBlockAt*retval null
  1865 jump *label427 always
-    * jump *label441 always
  1866 label *label440
  1867 label *label441
  1868 label *label438
 
  1915 label *label450
  1916 jump *label449 notEqual @unit :findUnits:firstUnit
  1917 label *label451
-    * jump *label448 always
  1918 label *label447
  1919 label *label448
  1920 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-39 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .kiln null
     8 set .leadSurplus 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    25 setaddr :findUnits*retaddr *label32 (h:*label32)
    26 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    27 label *label32
-    * write :findUnits:count .display ".displayFlares"
+   28 write :findUnits:count processor1 ".displayFlares"
    29 set :flares :findUnits*retval
    30 set :findUnits:type @mono
    31 setaddr :findUnits*retaddr *label33 (h:*label33)
    32 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    33 label *label33
-    * write :findUnits:count .display ".displayMonos"
+   34 write :findUnits:count processor1 ".displayMonos"
    35 set :monos :findUnits*retval
    36 set :findUnits:type @poly
    37 setaddr :findUnits*retaddr *label34 (h:*label34)
    38 call *label27 *invalid :findUnits*retval (m:*label34) (h:*label34)
    39 label *label34
-    * write :findUnits:count .display ".displayPolys"
+   40 write :findUnits:count processor1 ".displayPolys"
    41 set :polys :findUnits*retval
    42 set :buildBlockFromCfg:block @graphite-press
    43 set :buildBlockFromCfg:offsetX -1.5
 
    50 set :buildBlockFromCfg:metaglass 0
    51 set :buildBlockFromCfg:rotation 0
    52 set :buildBlockFromCfg:config null
-    * setaddr *tmp98 *label39
    53 label *label36
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   54 op add :buildBlockFromCfg:x .coreX -1.5
+   55 op add :buildBlockFromCfg:y .coreY 2.5
+   56 set :buildBlock:block @graphite-press
    57 set :buildBlock:x :buildBlockFromCfg:x
    58 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   59 set :buildBlock:copper 75
+   60 set :buildBlock:lead 30
+   61 set :buildBlock:graphite 0
+   62 set :buildBlock:silicon 0
+   63 set :buildBlock:titanium 0
+   64 set :buildBlock:metaglass 0
+   65 set :buildBlock:rotation 0
+   66 set :buildBlock:config null
    67 setaddr :buildBlock*retaddr *label40 (h:*label40)
    68 call *label26 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    69 label *label40
 
    73 multijump *tmp98 0 0 (m:marker0)
    74 multilabel *label39 (m:marker0)
    75 label *label38
-    * set *tmp97 null
    76 label *label35
    77 set .press *tmp97
    78 set :buildBlockFromCfg.1:block @battery
 
    86 set :buildBlockFromCfg.1:metaglass 0
    87 set :buildBlockFromCfg.1:rotation 0
    88 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp102 *label45
    89 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   90 op add :buildBlockFromCfg.1:x .coreX 0
+   91 op add :buildBlockFromCfg.1:y .coreY 4
+   92 set :buildBlock:block @battery
    93 set :buildBlock:x :buildBlockFromCfg.1:x
    94 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   95 set :buildBlock:copper 5
+   96 set :buildBlock:lead 20
+   97 set :buildBlock:graphite 0
+   98 set :buildBlock:silicon 0
+   99 set :buildBlock:titanium 0
+  100 set :buildBlock:metaglass 0
+  101 set :buildBlock:rotation 0
+  102 set :buildBlock:config null
   103 setaddr :buildBlock*retaddr *label46 (h:*label46)
   104 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
   105 label *label46
 
   109 multijump *tmp102 0 0 (m:marker1)
   110 multilabel *label45 (m:marker1)
   111 label *label44
-    * set *tmp101 null
   112 label *label41
   113 set .battery *tmp101
   114 set :buildBlockFromCfg.2:block @battery
 
   122 set :buildBlockFromCfg.2:metaglass 0
   123 set :buildBlockFromCfg.2:rotation 0
   124 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp106 *label51
   125 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  126 op add :buildBlockFromCfg.2:x .coreX -1
+  127 op add :buildBlockFromCfg.2:y .coreY 4
+  128 set :buildBlock:block @battery
   129 set :buildBlock:x :buildBlockFromCfg.2:x
   130 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  131 set :buildBlock:copper 5
+  132 set :buildBlock:lead 20
+  133 set :buildBlock:graphite 0
+  134 set :buildBlock:silicon 0
+  135 set :buildBlock:titanium 0
+  136 set :buildBlock:metaglass 0
+  137 set :buildBlock:rotation 0
+  138 set :buildBlock:config null
   139 setaddr :buildBlock*retaddr *label52 (h:*label52)
   140 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
   141 label *label52
 
   156 set :buildBlockFromCfg.3:metaglass 0
   157 set :buildBlockFromCfg.3:rotation 0
   158 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp110 *label57
   159 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  160 op add :buildBlockFromCfg.3:x .coreX 0
+  161 op add :buildBlockFromCfg.3:y .coreY 3
+  162 set :buildBlock:block @combustion-generator
   163 set :buildBlock:x :buildBlockFromCfg.3:x
   164 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  165 set :buildBlock:copper 25
+  166 set :buildBlock:lead 15
+  167 set :buildBlock:graphite 0
+  168 set :buildBlock:silicon 0
+  169 set :buildBlock:titanium 0
+  170 set :buildBlock:metaglass 0
+  171 set :buildBlock:rotation 0
+  172 set :buildBlock:config null
   173 setaddr :buildBlock*retaddr *label58 (h:*label58)
   174 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   175 label *label58
 
   179 multijump *tmp110 0 0 (m:marker3)
   180 multilabel *label57 (m:marker3)
   181 label *label56
-    * set *tmp109 null
   182 label *label53
   183 set .generator *tmp109
   184 set .powerTarget 400
 
   193 set :buildBlockFromCfg.4:metaglass 0
   194 set :buildBlockFromCfg.4:rotation 0
   195 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp114 *label63
   196 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  197 op add :buildBlockFromCfg.4:x .coreX 1.5
+  198 op add :buildBlockFromCfg.4:y .coreY 2.5
+  199 set :buildBlock:block @silicon-smelter
   200 set :buildBlock:x :buildBlockFromCfg.4:x
   201 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  202 set :buildBlock:copper 30
+  203 set :buildBlock:lead 25
+  204 set :buildBlock:graphite 0
+  205 set :buildBlock:silicon 0
+  206 set :buildBlock:titanium 0
+  207 set :buildBlock:metaglass 0
+  208 set :buildBlock:rotation 0
+  209 set :buildBlock:config null
   210 setaddr :buildBlock*retaddr *label64 (h:*label64)
   211 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   212 label *label64
 
   216 multijump *tmp114 0 0 (m:marker4)
   217 multilabel *label63 (m:marker4)
   218 label *label62
-    * set *tmp113 null
   219 label *label59
   220 set .smelter *tmp113
   221 set :meetTarget:block @pneumatic-drill
 
   229 call *label22 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   230 label *label67
   231 label *label66
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  232 write @titanium processor1 ".nextBlock"
+  233 write .coreX processor4 ":findDrillLocation:x"
+  234 write .coreY processor4 ":findDrillLocation:y"
+  235 write @unit processor4 ":findDrillLocation:unit"
+  236 write @titanium processor4 ":findDrillLocation:item"
+  237 write @ore-titanium processor4 ":findDrillLocation:ore"
+  238 write false processor4 ":findDrillLocation:large"
+  239 write 4 processor4 ":findDrillLocation:limit"
+  240 write false processor4 ":findDrillLocation*finished"
+  241 write 1 processor4 "@counter"
   242 label *label68
   243 wait 1e-15
-    * read *tmp128 .oreLocator ":findDrillLocation*finished"
+  244 read *tmp128 processor4 ":findDrillLocation*finished"
   245 jump *label68 equal *tmp128 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  246 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  247 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  248 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   249 jump *label69 notEqual :buildTitaniumDrill:result false
   250 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  251 set .ERROR "Cannot locate spot for titanium drill"
   252 stop
   253 label *label71
   254 label *label69
   255 label *label70
-    * write @pneumatic-drill .display ".nextBlock"
+  256 write @pneumatic-drill processor1 ".nextBlock"
   257 set :buildBlockAt:block @pneumatic-drill
   258 set :buildBlockAt:x :buildTitaniumDrill:dx
   259 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   265 label *label72
   266 set *tmp117 :buildBlockAt*retval
   267 jump *label65 always
-    * set *tmp117 null
   268 label *label65
-    * set .titaniumDrill *tmp117
-    * write .titaniumDrill .display ".titaniumDrill"
+  269 set .titaniumDrill :buildBlockAt*retval
+  270 write *tmp117 processor1 ".titaniumDrill"
   271 set :buildBlockFromCfg.5:block @unloader
   272 set :buildBlockFromCfg.5:offsetX 0
   273 set :buildBlockFromCfg.5:offsetY 2
 
   279 set :buildBlockFromCfg.5:metaglass 0
   280 set :buildBlockFromCfg.5:rotation 0
   281 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp133 *label77
   282 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  283 op add :buildBlockFromCfg.5:x .coreX 0
+  284 op add :buildBlockFromCfg.5:y .coreY 2
+  285 set :buildBlock:block @unloader
   286 set :buildBlock:x :buildBlockFromCfg.5:x
   287 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  288 set :buildBlock:copper 0
+  289 set :buildBlock:lead 0
+  290 set :buildBlock:graphite 0
+  291 set :buildBlock:silicon 30
+  292 set :buildBlock:titanium 25
+  293 set :buildBlock:metaglass 0
+  294 set :buildBlock:rotation 0
+  295 set :buildBlock:config null
   296 setaddr :buildBlock*retaddr *label78 (h:*label78)
   297 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   298 label *label78
 
   302 multijump *tmp133 0 0 (m:marker5)
   303 multilabel *label77 (m:marker5)
   304 label *label76
-    * set *tmp132 null
   305 label *label73
   306 set .unloader1 *tmp132
   307 set :buildBlockFromCfg.6:block @micro-processor
 
   315 set :buildBlockFromCfg.6:metaglass 0
   316 set :buildBlockFromCfg.6:rotation 0
   317 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp137 *label83
   318 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  319 op add :buildBlockFromCfg.6:x .coreX 1
+  320 op add :buildBlockFromCfg.6:y .coreY 4
+  321 set :buildBlock:block @micro-processor
   322 set :buildBlock:x :buildBlockFromCfg.6:x
   323 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  324 set :buildBlock:copper 90
+  325 set :buildBlock:lead 50
+  326 set :buildBlock:graphite 0
+  327 set :buildBlock:silicon 50
+  328 set :buildBlock:titanium 0
+  329 set :buildBlock:metaglass 0
+  330 set :buildBlock:rotation 0
+  331 set :buildBlock:config processor2
   332 setaddr :buildBlock*retaddr *label84 (h:*label84)
   333 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   334 label *label84
 
   338 multijump *tmp137 0 0 (m:marker6)
   339 multilabel *label83 (m:marker6)
   340 label *label82
-    * set *tmp136 null
   341 label *label79
   342 set .controller *tmp136
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  343 write processor1 *tmp136 ".display"
+  344 write .core *tmp136 ".core"
+  345 write bank1 *tmp136 ".bank"
+  346 write *tmp101 *tmp136 ".battery"
+  347 write *tmp109 *tmp136 ".generator"
+  348 write *tmp113 *tmp136 ".smelter"
+  349 write *tmp97 *tmp136 ".press"
+  350 write :monos *tmp136 ".monos"
+  351 write :flares *tmp136 ".flares"
+  352 write :polys *tmp136 ".polys"
   353 set :buildBlockFromCfg.7:block @power-node
   354 set :buildBlockFromCfg.7:offsetX -2
   355 set :buildBlockFromCfg.7:offsetY 1
 
   361 set :buildBlockFromCfg.7:metaglass 0
   362 set :buildBlockFromCfg.7:rotation 0
   363 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp141 *label89
   364 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  365 op add :buildBlockFromCfg.7:x .coreX -2
+  366 op add :buildBlockFromCfg.7:y .coreY 1
+  367 set :buildBlock:block @power-node
   368 set :buildBlock:x :buildBlockFromCfg.7:x
   369 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  370 set :buildBlock:copper 2
+  371 set :buildBlock:lead 6
+  372 set :buildBlock:graphite 0
+  373 set :buildBlock:silicon 0
+  374 set :buildBlock:titanium 0
+  375 set :buildBlock:metaglass 0
+  376 set :buildBlock:rotation 0
+  377 set :buildBlock:config null
   378 setaddr :buildBlock*retaddr *label90 (h:*label90)
   379 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   380 label *label90
 
   395 set :buildBlockFromCfg.8:metaglass 0
   396 set :buildBlockFromCfg.8:rotation 0
   397 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp145 *label95
   398 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  399 op add :buildBlockFromCfg.8:x .coreX -2
+  400 op add :buildBlockFromCfg.8:y .coreY 0
+  401 set :buildBlock:block @unloader
   402 set :buildBlock:x :buildBlockFromCfg.8:x
   403 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  404 set :buildBlock:copper 0
+  405 set :buildBlock:lead 0
+  406 set :buildBlock:graphite 0
+  407 set :buildBlock:silicon 30
+  408 set :buildBlock:titanium 25
+  409 set :buildBlock:metaglass 0
+  410 set :buildBlock:rotation 0
+  411 set :buildBlock:config null
   412 setaddr :buildBlock*retaddr *label96 (h:*label96)
   413 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   414 label *label96
 
   418 multijump *tmp145 0 0 (m:marker8)
   419 multilabel *label95 (m:marker8)
   420 label *label94
-    * set *tmp144 null
   421 label *label91
-    * write *tmp144 .controller ".unloader2"
+  422 write *tmp144 *tmp136 ".unloader2"
   423 set :buildBlockFromCfg.9:block @air-factory
   424 set :buildBlockFromCfg.9:offsetX -3
   425 set :buildBlockFromCfg.9:offsetY -2
 
   431 set :buildBlockFromCfg.9:metaglass 0
   432 set :buildBlockFromCfg.9:rotation 3
   433 set :buildBlockFromCfg.9:config @mono
-    * setaddr *tmp149 *label101
   434 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  435 op add :buildBlockFromCfg.9:x .coreX -3
+  436 op add :buildBlockFromCfg.9:y .coreY -2
+  437 set :buildBlock:block @air-factory
   438 set :buildBlock:x :buildBlockFromCfg.9:x
   439 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  440 set :buildBlock:copper 60
+  441 set :buildBlock:lead 70
+  442 set :buildBlock:graphite 0
+  443 set :buildBlock:silicon 0
+  444 set :buildBlock:titanium 0
+  445 set :buildBlock:metaglass 0
+  446 set :buildBlock:rotation 3
+  447 set :buildBlock:config @mono
   448 setaddr :buildBlock*retaddr *label102 (h:*label102)
   449 call *label26 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   450 label *label102
 
   454 multijump *tmp149 0 0 (m:marker9)
   455 multilabel *label101 (m:marker9)
   456 label *label100
-    * set *tmp148 null
   457 label *label97
   458 set :factory *tmp148
-    * write :factory .controller ".factory"
-    * write :factory .display ".factory"
-    * write 1 .controller ".flareTarget"
-    * write 3 .controller ".monoTarget"
-    * write 0 .controller ".polyTarget"
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  459 write *tmp148 *tmp136 ".factory"
+  460 write *tmp148 processor1 ".factory"
+  461 write 1 *tmp136 ".flareTarget"
+  462 write 3 *tmp136 ".monoTarget"
+  463 write 0 *tmp136 ".polyTarget"
+  464 write 85 *tmp136 ".pressTarget"
+  465 write 150 *tmp136 ".smelterTarget"
+  466 write 30 *tmp136 ".kilnTarget"
   467 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  468 set .siliconSurplus 20
   469 setaddr :buildUnits*retaddr *label103 (h:*label103)
   470 call *label28 *invalid :buildUnits*retval (m:*label103) (h:*label103)
   471 label *label103
 
   473 setaddr :supplyBase*retaddr *label107 (h:*label107)
   474 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   475 label *label107
-    * sensor *tmp152 .battery @totalPower
+  476 sensor *tmp152 *tmp101 @totalPower
   477 jump *label108 greaterThanEq *tmp152 300
   478 jump *label106 always
   479 label *label108
   480 label *label109
   481 label *label105
-    * read *tmp39 .controller ".monos"
+  482 read *tmp39 *tmp136 ".monos"
   483 jump *label104 lessThan *tmp39 3
   484 label *label106
   485 set .graphiteSurplus 60
 
   496 set :buildBlockFromCfg.10:metaglass 0
   497 set :buildBlockFromCfg.10:rotation 0
   498 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp157 *label114
   499 label *label111
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  500 op add :buildBlockFromCfg.10:x .coreX 2
+  501 op add :buildBlockFromCfg.10:y .coreY 1
+  502 set :buildBlock:block @unloader
   503 set :buildBlock:x :buildBlockFromCfg.10:x
   504 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  505 set :buildBlock:copper 0
+  506 set :buildBlock:lead 0
+  507 set :buildBlock:graphite 0
+  508 set :buildBlock:silicon 30
+  509 set :buildBlock:titanium 25
+  510 set :buildBlock:metaglass 0
+  511 set :buildBlock:rotation 0
+  512 set :buildBlock:config null
   513 setaddr :buildBlock*retaddr *label115 (h:*label115)
   514 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   515 label *label115
 
   530 set :buildBlockFromCfg.11:metaglass 0
   531 set :buildBlockFromCfg.11:rotation 0
   532 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp161 *label120
   533 label *label117
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  534 op add :buildBlockFromCfg.11:x .coreX 2
+  535 op add :buildBlockFromCfg.11:y .coreY 0
+  536 set :buildBlock:block @junction
   537 set :buildBlock:x :buildBlockFromCfg.11:x
   538 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  539 set :buildBlock:copper 3
+  540 set :buildBlock:lead 0
+  541 set :buildBlock:graphite 0
+  542 set :buildBlock:silicon 0
+  543 set :buildBlock:titanium 0
+  544 set :buildBlock:metaglass 0
+  545 set :buildBlock:rotation 0
+  546 set :buildBlock:config null
   547 setaddr :buildBlock*retaddr *label121 (h:*label121)
   548 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   549 label *label121
 
   564 set :buildBlockFromCfg.12:metaglass 0
   565 set :buildBlockFromCfg.12:rotation 0
   566 set :buildBlockFromCfg.12:config @metaglass
-    * setaddr *tmp165 *label126
   567 label *label123
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  568 op add :buildBlockFromCfg.12:x .coreX 3
+  569 op add :buildBlockFromCfg.12:y .coreY 0
+  570 set :buildBlock:block @inverted-sorter
   571 set :buildBlock:x :buildBlockFromCfg.12:x
   572 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  573 set :buildBlock:copper 2
+  574 set :buildBlock:lead 2
+  575 set :buildBlock:graphite 0
+  576 set :buildBlock:silicon 0
+  577 set :buildBlock:titanium 0
+  578 set :buildBlock:metaglass 0
+  579 set :buildBlock:rotation 0
+  580 set :buildBlock:config @metaglass
   581 setaddr :buildBlock*retaddr *label127 (h:*label127)
   582 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   583 label *label127
 
   598 set :buildBlockFromCfg.13:metaglass 0
   599 set :buildBlockFromCfg.13:rotation 0
   600 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp169 *label132
   601 label *label129
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  602 op add :buildBlockFromCfg.13:x .coreX 3.5
+  603 op add :buildBlockFromCfg.13:y .coreY 1.5
+  604 set :buildBlock:block @kiln
   605 set :buildBlock:x :buildBlockFromCfg.13:x
   606 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  607 set :buildBlock:copper 60
+  608 set :buildBlock:lead 30
+  609 set :buildBlock:graphite 30
+  610 set :buildBlock:silicon 0
+  611 set :buildBlock:titanium 0
+  612 set :buildBlock:metaglass 0
+  613 set :buildBlock:rotation 0
+  614 set :buildBlock:config null
   615 setaddr :buildBlock*retaddr *label133 (h:*label133)
   616 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   617 label *label133
 
   621 multijump *tmp169 0 0 (m:marker13)
   622 multilabel *label132 (m:marker13)
   623 label *label131
-    * set *tmp168 null
   624 label *label128
   625 set .kiln *tmp168
-    * write .kiln .controller ".kiln"
+  626 write *tmp168 *tmp136 ".kiln"
   627 set :buildBlockFromCfg.14:block @water-extractor
   628 set :buildBlockFromCfg.14:offsetX -3.5
   629 set :buildBlockFromCfg.14:offsetY 3.5
 
   635 set :buildBlockFromCfg.14:metaglass 30
   636 set :buildBlockFromCfg.14:rotation 0
   637 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp173 *label138
   638 label *label135
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  639 op add :buildBlockFromCfg.14:x .coreX -3.5
+  640 op add :buildBlockFromCfg.14:y .coreY 3.5
+  641 set :buildBlock:block @water-extractor
   642 set :buildBlock:x :buildBlockFromCfg.14:x
   643 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  644 set :buildBlock:copper 30
+  645 set :buildBlock:lead 30
+  646 set :buildBlock:graphite 30
+  647 set :buildBlock:silicon 0
+  648 set :buildBlock:titanium 0
+  649 set :buildBlock:metaglass 30
+  650 set :buildBlock:rotation 0
+  651 set :buildBlock:config null
   652 setaddr :buildBlock*retaddr *label139 (h:*label139)
   653 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   654 label *label139
 
   669 set :buildBlockFromCfg.15:metaglass 0
   670 set :buildBlockFromCfg.15:rotation 0
   671 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp177 *label144
   672 label *label141
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  673 op add :buildBlockFromCfg.15:x .coreX -3
+  674 op add :buildBlockFromCfg.15:y .coreY 0
+  675 set :buildBlock:block @overflow-gate
   676 set :buildBlock:x :buildBlockFromCfg.15:x
   677 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  678 set :buildBlock:copper 4
+  679 set :buildBlock:lead 2
+  680 set :buildBlock:graphite 0
+  681 set :buildBlock:silicon 0
+  682 set :buildBlock:titanium 0
+  683 set :buildBlock:metaglass 0
+  684 set :buildBlock:rotation 0
+  685 set :buildBlock:config null
   686 setaddr :buildBlock*retaddr *label145 (h:*label145)
   687 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   688 label *label145
 
   703 set :buildBlockFromCfg.16:metaglass 0
   704 set :buildBlockFromCfg.16:rotation 0
   705 set :buildBlockFromCfg.16:config null
-    * setaddr *tmp181 *label150
   706 label *label147
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  707 op add :buildBlockFromCfg.16:x .coreX -3.5
+  708 op add :buildBlockFromCfg.16:y .coreY 1.5
+  709 set :buildBlock:block @steam-generator
   710 set :buildBlock:x :buildBlockFromCfg.16:x
   711 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  712 set :buildBlock:copper 35
+  713 set :buildBlock:lead 40
+  714 set :buildBlock:graphite 25
+  715 set :buildBlock:silicon 30
+  716 set :buildBlock:titanium 0
+  717 set :buildBlock:metaglass 0
+  718 set :buildBlock:rotation 0
+  719 set :buildBlock:config null
   720 setaddr :buildBlock*retaddr *label151 (h:*label151)
   721 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   722 label *label151
 
   726 multijump *tmp181 0 0 (m:marker16)
   727 multilabel *label150 (m:marker16)
   728 label *label149
-    * set *tmp180 null
   729 label *label146
-    * write *tmp180 .controller ".generator2"
+  730 write *tmp180 *tmp136 ".generator2"
   731 set .graphiteSurplus 200
   732 set :buildBlockFromCfg.17:block @payload-router
   733 set :buildBlockFromCfg.17:offsetX -3
 
   740 set :buildBlockFromCfg.17:metaglass 0
   741 set :buildBlockFromCfg.17:rotation 0
   742 set :buildBlockFromCfg.17:config null
-    * setaddr *tmp185 *label156
   743 label *label153
-    * op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
-    * op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.17:block
+  744 op add :buildBlockFromCfg.17:x .coreX -3
+  745 op add :buildBlockFromCfg.17:y .coreY -5
+  746 set :buildBlock:block @payload-router
   747 set :buildBlock:x :buildBlockFromCfg.17:x
   748 set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper :buildBlockFromCfg.17:copper
-    * set :buildBlock:lead :buildBlockFromCfg.17:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.17:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.17:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.17:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.17:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.17:rotation
-    * set :buildBlock:config :buildBlockFromCfg.17:config
+  749 set :buildBlock:copper 10
+  750 set :buildBlock:lead 0
+  751 set :buildBlock:graphite 15
+  752 set :buildBlock:silicon 0
+  753 set :buildBlock:titanium 0
+  754 set :buildBlock:metaglass 0
+  755 set :buildBlock:rotation 0
+  756 set :buildBlock:config null
   757 setaddr :buildBlock*retaddr *label157 (h:*label157)
   758 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   759 label *label157
 
   763 multijump *tmp185 0 0 (m:marker17)
   764 multilabel *label156 (m:marker17)
   765 label *label155
-    * set *tmp184 null
   766 label *label152
-    * write *tmp184 .controller ".payloadRouter"
+  767 write *tmp184 *tmp136 ".payloadRouter"
   768 set :buildBlockFromCfg.18:block @unloader
   769 set :buildBlockFromCfg.18:offsetX 0
   770 set :buildBlockFromCfg.18:offsetY -2
 
   776 set :buildBlockFromCfg.18:metaglass 0
   777 set :buildBlockFromCfg.18:rotation 0
   778 set :buildBlockFromCfg.18:config null
-    * setaddr *tmp189 *label162
   779 label *label159
-    * op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
-    * op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.18:block
+  780 op add :buildBlockFromCfg.18:x .coreX 0
+  781 op add :buildBlockFromCfg.18:y .coreY -2
+  782 set :buildBlock:block @unloader
   783 set :buildBlock:x :buildBlockFromCfg.18:x
   784 set :buildBlock:y :buildBlockFromCfg.18:y
-    * set :buildBlock:copper :buildBlockFromCfg.18:copper
-    * set :buildBlock:lead :buildBlockFromCfg.18:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.18:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.18:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.18:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.18:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.18:rotation
-    * set :buildBlock:config :buildBlockFromCfg.18:config
+  785 set :buildBlock:copper 0
+  786 set :buildBlock:lead 0
+  787 set :buildBlock:graphite 0
+  788 set :buildBlock:silicon 30
+  789 set :buildBlock:titanium 25
+  790 set :buildBlock:metaglass 0
+  791 set :buildBlock:rotation 0
+  792 set :buildBlock:config null
   793 setaddr :buildBlock*retaddr *label163 (h:*label163)
   794 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   795 label *label163
 
   810 set :buildBlockFromCfg.19:metaglass 0
   811 set :buildBlockFromCfg.19:rotation 0
   812 set :buildBlockFromCfg.19:config null
-    * setaddr *tmp193 *label168
   813 label *label165
-    * op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
-    * op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.19:block
+  814 op add :buildBlockFromCfg.19:x .coreX 0
+  815 op add :buildBlockFromCfg.19:y .coreY -3
+  816 set :buildBlock:block @underflow-gate
   817 set :buildBlock:x :buildBlockFromCfg.19:x
   818 set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper :buildBlockFromCfg.19:copper
-    * set :buildBlock:lead :buildBlockFromCfg.19:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.19:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.19:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.19:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.19:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.19:rotation
-    * set :buildBlock:config :buildBlockFromCfg.19:config
+  819 set :buildBlock:copper 4
+  820 set :buildBlock:lead 2
+  821 set :buildBlock:graphite 0
+  822 set :buildBlock:silicon 0
+  823 set :buildBlock:titanium 0
+  824 set :buildBlock:metaglass 0
+  825 set :buildBlock:rotation 0
+  826 set :buildBlock:config null
   827 setaddr :buildBlock*retaddr *label169 (h:*label169)
   828 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   829 label *label169
 
   844 set :buildBlockFromCfg.20:metaglass 0
   845 set :buildBlockFromCfg.20:rotation 0
   846 set :buildBlockFromCfg.20:config null
-    * setaddr *tmp197 *label174
   847 label *label171
-    * op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
-    * op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.20:block
+  848 op add :buildBlockFromCfg.20:x .coreX 0
+  849 op add :buildBlockFromCfg.20:y .coreY -5
+  850 set :buildBlock:block @additive-reconstructor
   851 set :buildBlock:x :buildBlockFromCfg.20:x
   852 set :buildBlock:y :buildBlockFromCfg.20:y
-    * set :buildBlock:copper :buildBlockFromCfg.20:copper
-    * set :buildBlock:lead :buildBlockFromCfg.20:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.20:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.20:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.20:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.20:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.20:rotation
-    * set :buildBlock:config :buildBlockFromCfg.20:config
+  853 set :buildBlock:copper 200
+  854 set :buildBlock:lead 120
+  855 set :buildBlock:graphite 0
+  856 set :buildBlock:silicon 90
+  857 set :buildBlock:titanium 0
+  858 set :buildBlock:metaglass 0
+  859 set :buildBlock:rotation 0
+  860 set :buildBlock:config null
   861 setaddr :buildBlock*retaddr *label175 (h:*label175)
   862 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   863 label *label175
 
   867 multijump *tmp197 0 0 (m:marker20)
   868 multilabel *label174 (m:marker20)
   869 label *label173
-    * set *tmp196 null
   870 label *label170
   871 set :reconstructor *tmp196
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  872 write *tmp196 *tmp136 ".reconstructor"
+  873 write *tmp196 processor1 ".reconstructor"
   874 setaddr :buildUnits*retaddr *label176 (h:*label176)
   875 call *label28 *invalid :buildUnits*retval (m:*label176) (h:*label176)
   876 label *label176
   877 set .siliconSurplus 1000
   878 set .metaglassSurplus 200
-    * write 3 .controller ".polyTarget"
+  879 write 3 *tmp136 ".polyTarget"
   880 label *label177
-    * read *tmp40 .controller ".polys"
+  881 read *tmp40 *tmp136 ".polys"
   882 jump *label179 greaterThanEq *tmp40 3
   883 setaddr :supplyBase*retaddr *label180 (h:*label180)
   884 call *label20 *invalid :supplyBase*retval (m:*label180) (h:*label180)
 
   887 jump *label177 always
   888 label *label179
   889 label *label181
-    * read *tmp38 .controller ".flares"
+  890 read *tmp38 *tmp136 ".flares"
   891 jump *label183 greaterThanEq *tmp38 1
   892 setaddr :supplyBase*retaddr *label184 (h:*label184)
   893 call *label20 *invalid :supplyBase*retval (m:*label184) (h:*label184)
 
   897 label *label183
   898 set :findFreeUnit:unit_type @flare
   899 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+  900 ubind @flare
   901 jump *label186 notEqual @unit null
   902 jump *label185 always
   903 label *label186
 
   906 label *label188
   907 sensor *tmp205 @unit @controlled
   908 jump *label191 notEqual *tmp205 0
-    * ucontrol flag :findFreeUnit:initial_flag
+  909 ucontrol flag 0
   910 jump *label185 always
   911 jump *label192 always
   912 label *label191
 
   916 label *label193
   917 label *label194
   918 label *label192
-    * ubind :findFreeUnit:unit_type
+  919 ubind @flare
   920 label *label189
   921 jump *label188 notEqual :findFreeUnit:first_unit @unit
   922 label *label190
   923 label *label185
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  924 write .coreX processor4 ":layoutThoriumDrill:x"
+  925 write .coreY processor4 ":layoutThoriumDrill:y"
+  926 write @unit processor4 ":layoutThoriumDrill:unit"
+  927 write 7 processor4 ":layoutThoriumDrill:limit"
+  928 write false processor4 ":layoutThoriumDrill*finished"
+  929 write 2 processor4 "@counter"
   930 ubind .builder
   931 label *label195
   932 setaddr :supplyBase*retaddr *label198 (h:*label198)
   933 call *label20 *invalid :supplyBase*retval (m:*label198) (h:*label198)
   934 label *label198
   935 label *label196
-    * read *tmp217 .oreLocator ":layoutThoriumDrill*finished"
+  936 read *tmp217 processor4 ":layoutThoriumDrill*finished"
   937 jump *label195 equal *tmp217 false
   938 label *label197
   939 set :meetTarget:block @laser-drill
 
   949 label *label200
   950 label *label202
   951 wait 1e-15
-    * read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
+  952 read *tmp219 processor4 ":layoutThoriumDrill*finished"
   953 jump *label202 equal *tmp219 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  954 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   955 jump *label203 notEqual :buildThoriumDrill:result false
   956 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  957 set .ERROR "Cannot locate spot for thorium drill"
   958 stop
   959 label *label205
   960 label *label203
   961 label *label204
   962 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  963 read :buildBlockAt:x processor4 ".drillX"
+  964 read :buildBlockAt:y processor4 ".drillY"
   965 set :buildBlockAt:rotation null
   966 set :buildBlockAt:config 0
   967 set :buildBlockAt:skipError false
 
   969 call *label25 *invalid :buildBlockAt*retval (m:*label206) (h:*label206)
   970 label *label206
   971 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
-    * read *tmp74 .oreLocator ".water1X"
+  972 read *tmp74 processor4 ".water1X"
   973 jump *label207 greaterThanEq *tmp74 0
   974 jump *label199 always
   975 label *label207
 
   986 label *label210
   987 label *label209
   988 set :buildBlockAt:block @water-extractor
-    * read *tmp74 .oreLocator ".water1X"
+  989 read *tmp74 processor4 ".water1X"
   990 set :buildBlockAt:x *tmp74
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  991 read :buildBlockAt:y processor4 ".water1Y"
   992 set :buildBlockAt:rotation null
   993 set :buildBlockAt:config 0
   994 set :buildBlockAt:skipError false
   995 setaddr :buildBlockAt*retaddr *label211 (h:*label211)
   996 call *label25 *invalid :buildBlockAt*retval (m:*label211) (h:*label211)
   997 label *label211
-    * read *tmp76 .oreLocator ".water2X"
+  998 read *tmp76 processor4 ".water2X"
   999 jump *label212 greaterThanEq *tmp76 0
  1000 jump *label199 always
  1001 label *label212
 
  1012 label *label215
  1013 label *label214
  1014 set :buildBlockAt:block @water-extractor
-    * read *tmp76 .oreLocator ".water2X"
+ 1015 read *tmp76 processor4 ".water2X"
  1016 set :buildBlockAt:x *tmp76
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+ 1017 read :buildBlockAt:y processor4 ".water2Y"
  1018 set :buildBlockAt:rotation null
  1019 set :buildBlockAt:config 0
  1020 set :buildBlockAt:skipError false
 
  1033 label *label218
  1034 label *label217
  1035 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+ 1036 read :buildBlockAt:x processor4 ".generatorX"
+ 1037 read :buildBlockAt:y processor4 ".generatorY"
  1038 set :buildBlockAt:rotation null
  1039 set :buildBlockAt:config 0
  1040 set :buildBlockAt:skipError false
 
  1054 label *label221
  1055 label *label220
  1056 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+ 1057 read :buildBlockAt:x processor4 ".nodeX"
+ 1058 read :buildBlockAt:y processor4 ".nodeY"
  1059 set :buildBlockAt:rotation null
  1060 set :buildBlockAt:config 0
  1061 set :buildBlockAt:skipError false
 
  1074 label *label224
  1075 label *label223
  1076 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+ 1077 read :buildBlockAt:x processor4 ".panelX"
+ 1078 read :buildBlockAt:y processor4 ".panelY"
  1079 set :buildBlockAt:rotation null
  1080 set :buildBlockAt:config 0
  1081 set :buildBlockAt:skipError false
 
  1094 label *label227
  1095 label *label226
  1096 set :buildBlockAt:block @battery
-    * read :buildBlockAt:x .oreLocator ".batteryX"
-    * read :buildBlockAt:y .oreLocator ".batteryY"
+ 1097 read :buildBlockAt:x processor4 ".batteryX"
+ 1098 read :buildBlockAt:y processor4 ".batteryY"
  1099 set :buildBlockAt:rotation null
  1100 set :buildBlockAt:config 0
  1101 set :buildBlockAt:skipError false
  1102 setaddr :buildBlockAt*retaddr *label228 (h:*label228)
  1103 call *label25 *invalid :buildBlockAt*retval (m:*label228) (h:*label228)
  1104 label *label228
-    * write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
-    * write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+ 1105 write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDrill"
+ 1106 write :buildThoriumDrill:thoriumDrill processor3 ":addThoriumDrill:drill"
+ 1107 write :buildThoriumDrill:thoriumGenerator processor3 ":addThoriumDrill:generator"
+ 1108 write false processor3 ":addThoriumDrill*finished"
+ 1109 write 1 processor3 "@counter"
  1110 label *label229
  1111 wait 1e-15
-    * read *tmp236 .flareController ":addThoriumDrill*finished"
+ 1112 read *tmp236 processor3 ":addThoriumDrill*finished"
  1113 jump *label229 equal *tmp236 false
  1114 label *label199
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+ 1115 write 0 processor1 ".totalTargets"
+ 1116 write null processor1 ".nextBlock"
  1117 label *label230
  1118 setaddr :supplyBase*retaddr *label233 (h:*label233)
  1119 call *label20 *invalid :supplyBase*retval (m:*label233) (h:*label233)
  1120 label *label233
  1121 label *label231
-    * read *tmp38 .controller ".flares"
-    * read *tmp39 .controller ".monos"
+ 1122 read *tmp38 *tmp136 ".flares"
+ 1123 read *tmp39 *tmp136 ".monos"
  1124 op add *tmp237 *tmp38 *tmp39
  1125 jump *label230 lessThan *tmp237 16
  1126 label *label232
 
  1132 jump *label234 always
  1133 label *label236
  1134 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+ 1135 set .ERROR "Done"
  1136 stop
  1137 label *label238
  1138 end
  1139 label *label5
  1140 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+ 1141 write "Moving..." .display ".status3"
  1142 label *label241
  1143 label *label242
  1144 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
 
  1154 label *label6
  1155 set *tmp242 :moveTo.1:x
  1156 set *tmp243 :moveTo.1:y
-    * set :moveTo:x *tmp242
-    * set :moveTo:y *tmp243
+ 1157 set :moveTo:x :moveTo.1:x
+ 1158 set :moveTo:y :moveTo.1:y
  1159 set :moveTo:radius 6
  1160 setaddr :moveTo*retaddr *label246 (h:*label246)
  1161 call *label5 *invalid :moveTo*retval (m:*label246) (h:*label246)
 
  1165 end
  1166 label *label7
  1167 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1168 write "Moving..." .display ".status3"
  1169 label *label248
  1170 label *label249
  1171 sensor *tmp244 @unit @firstItem
 
  1195 end
  1196 label *label9
  1197 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1198 write "Depositing..." .display ".status3"
  1199 label *label257
  1200 sensor *tmp251 @unit @firstItem
  1201 jump *label258 notEqual *tmp251 :depositItems:item
 
  1225 label *label259
  1226 set :transportStatus:target 0
  1227 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1228 write 0 .display ".transportTarget"
+ 1229 write null .display ".transportItem"
  1230 label *label267
  1231 label *label256
  1232 return :depositItems*retaddr
 
  1235 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
  1236 jump *label269 notEqual *tmp261 false
  1237 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1238 set .ERROR "Cannot locate ore"
  1239 stop
  1240 label *label271
  1241 label *label269
 
  1247 op min :mineOre:amount :mineOre:amount 30
  1248 set :transportStatus.1:target :mineOre:amount
  1249 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1250 write :mineOre:amount .display ".transportTarget"
+ 1251 write :mineOre:ore .display ".transportItem"
  1252 label *label273
  1253 set :locateOre:ore :mineOre:ore
  1254 setaddr :locateOre*retaddr *label274 (h:*label274)
 
  1256 label *label274
  1257 set :mineOre:x :locateOre:x
  1258 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1259 set :moveToEmpty:x :locateOre:x
+ 1260 set :moveToEmpty:y :locateOre:y
  1261 setaddr :moveToEmpty*retaddr *label275 (h:*label275)
  1262 call *label7 *invalid :moveToEmpty*retval (m:*label275) (h:*label275)
  1263 label *label275
 
  1274 label *label276
  1275 label *label277
  1276 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1277 write "Mining..." .display ".status3"
  1278 label *label282
  1279 op add :mineOre:stop @second 10
  1280 label *label283
 
  1308 set :status2:text "Mining "
  1309 set :status2:item :mineOre.1:ore
  1310 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1311 write "Mining " .display ".status2"
+ 1312 write :mineOre.1:ore .display ".item2"
+ 1313 write "core" .display ".block2"
  1314 label *label292
  1315 set :mineOre:ore :mineOre.1:ore
  1316 set :mineOre:amount 30
 
  1325 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1326 set :transportStatus.2:item :fetchBlock:item
  1327 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1328 write :fetchBlock:item .display ".transportItem"
  1329 label *label295
  1330 set :status2.1:text "Fetching "
  1331 set :status2.1:item :fetchBlock:item
  1332 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1333 write "Fetching " .display ".status2"
+ 1334 write :fetchBlock:item .display ".item2"
+ 1335 write :fetchBlock:block .display ".block2"
  1336 label *label296
  1337 sensor *tmp283 :fetchBlock:block @x
  1338 sensor *tmp284 :fetchBlock:block @y
 
  1382 sensor *tmp301 .press @coal
  1383 jump *label313 greaterThanEq *tmp301 5
  1384 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1385 write "Goal 1: graphite requirement" .display ".status1"
  1386 label *label315
  1387 set :supplyBlock:block .press
  1388 set :supplyBlock:ore @coal
  1389 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1390 set :status2.2:item @coal
+ 1391 set :status2.2:block .press
+ 1392 write "Supplying " .display ".status2"
+ 1393 write :supplyBlock:ore .display ".item2"
+ 1394 write :supplyBlock:block .display ".block2"
  1395 label *label317
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp305 :supplyBlock:block :supplyBlock:ore
+ 1396 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1397 sensor *tmp305 .press @coal
  1398 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
  1399 jump *label318 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1400 set :mineOre:ore @coal
  1401 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1402 set :mineOre:block .press
  1403 setaddr :mineOre*retaddr *label320 (h:*label320)
  1404 call *label11 *invalid :mineOre*retval (m:*label320) (h:*label320)
  1405 label *label320
 
  1416 sensor *tmp312 .smelter @coal
  1417 jump *label323 greaterThanEq *tmp312 5
  1418 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1419 write "Goal 2: coal for silicon requirement" .display ".status1"
  1420 label *label325
  1421 set :supplyBlock.1:block .smelter
  1422 set :supplyBlock.1:ore @coal
  1423 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1424 set :status2.3:item @coal
+ 1425 set :status2.3:block .smelter
+ 1426 write "Supplying " .display ".status2"
+ 1427 write :supplyBlock.1:ore .display ".item2"
+ 1428 write :supplyBlock.1:block .display ".block2"
  1429 label *label327
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
+ 1430 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1431 sensor *tmp316 .smelter @coal
  1432 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
  1433 jump *label328 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1434 set :mineOre:ore @coal
  1435 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1436 set :mineOre:block .smelter
  1437 setaddr :mineOre*retaddr *label330 (h:*label330)
  1438 call *label11 *invalid :mineOre*retval (m:*label330) (h:*label330)
  1439 label *label330
 
  1446 sensor *tmp320 .smelter @sand
  1447 jump *label331 greaterThanEq *tmp320 5
  1448 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1449 write "Goal 3: sand for silicon requirement" .display ".status1"
  1450 label *label333
  1451 set :supplyBlock.2:block .smelter
  1452 set :supplyBlock.2:ore @sand
  1453 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1454 set :status2.4:item @sand
+ 1455 set :status2.4:block .smelter
+ 1456 write "Supplying " .display ".status2"
+ 1457 write :supplyBlock.2:ore .display ".item2"
+ 1458 write :supplyBlock.2:block .display ".block2"
  1459 label *label335
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
+ 1460 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1461 sensor *tmp324 .smelter @sand
  1462 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
  1463 jump *label336 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1464 set :mineOre:ore @sand
  1465 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1466 set :mineOre:block .smelter
  1467 setaddr :mineOre*retaddr *label338 (h:*label338)
  1468 call *label11 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1469 label *label338
 
  1481 sensor *tmp331 .generator @coal
  1482 jump *label341 greaterThanEq *tmp331 2
  1483 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1484 write "Goal 4: supplying generator" .display ".status1"
  1485 label *label343
  1486 set :supplyBlock.3:block .generator
  1487 set :supplyBlock.3:ore @coal
  1488 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1489 set :status2.5:item @coal
+ 1490 set :status2.5:block .generator
+ 1491 write "Supplying " .display ".status2"
+ 1492 write :supplyBlock.3:ore .display ".item2"
+ 1493 write :supplyBlock.3:block .display ".block2"
  1494 label *label345
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
+ 1495 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1496 sensor *tmp335 .generator @coal
  1497 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
  1498 jump *label346 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1499 set :mineOre:ore @coal
  1500 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1501 set :mineOre:block .generator
  1502 setaddr :mineOre*retaddr *label348 (h:*label348)
  1503 call *label11 *invalid :mineOre*retval (m:*label348) (h:*label348)
  1504 label *label348
 
  1523 label *label350
  1524 set :supplyBase0:titaniumTrigger *tmp341
  1525 sensor *tmp345 .titaniumDrill @titanium
-    * jump *label351 greaterThanEq *tmp345 :supplyBase0:titaniumTrigger
+ 1526 jump *label351 greaterThanEq *tmp345 *tmp341
  1527 jump *label353 notEqual :supplyBase0:supplied false
  1528 sensor *tmp350 .battery @totalPower
  1529 op mul *tmp351 .unloader1 .powerTarget
  1530 jump *label355 greaterThanEq *tmp350 *tmp351
  1531 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1532 write "Goal 5: supplying generator" .display ".status1"
  1533 label *label357
  1534 set :mineOre.1:ore @coal
  1535 setaddr :mineOre.1*retaddr *label358 (h:*label358)
 
  1540 sensor *tmp354 .core @silicon
  1541 jump *label359 greaterThanEq *tmp354 .targetSilicon
  1542 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1543 write "Goal 6: silicon requirement" .display ".status1"
  1544 label *label361
  1545 sensor :supplyBase0:coal .core @coal
  1546 sensor :supplyBase0:sand .core @sand
 
  1551 set *tmp360 @sand
  1552 label *label363
  1553 set :supplyBase0:ore *tmp360
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1554 set :mineOre.1:ore *tmp360
  1555 setaddr :mineOre.1*retaddr *label364 (h:*label364)
  1556 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
  1557 label *label364
 
  1560 sensor *tmp361 .core @copper
  1561 jump *label365 greaterThanEq *tmp361 .targetCopper
  1562 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1563 write "Goal 7: copper requirement" .display ".status1"
  1564 label *label367
  1565 set :mineOre.1:ore @copper
  1566 setaddr :mineOre.1*retaddr *label368 (h:*label368)
 
  1571 sensor *tmp364 .core @lead
  1572 jump *label369 greaterThanEq *tmp364 .targetLead
  1573 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1574 write "Goal 8: lead requirement" .display ".status1"
  1575 label *label371
  1576 set :mineOre.1:ore @lead
  1577 setaddr :mineOre.1*retaddr *label372 (h:*label372)
 
  1582 sensor *tmp367 .core @metaglass
  1583 jump *label373 greaterThanEq *tmp367 .targetMetaglass
  1584 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1585 write "Goal 9: metaglass requirement" .display ".status1"
  1586 label *label375
  1587 set :mineOre.1:ore @sand
  1588 setaddr :mineOre.1*retaddr *label376 (h:*label376)
 
  1591 jump *label374 always
  1592 label *label373
  1593 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1594 write "Goal 10: supplying base" .display ".status1"
  1595 label *label377
  1596 sensor :supplyBase0:coal.1 .core @coal
  1597 sensor :supplyBase0:sand.1 .core @sand
 
  1602 set *tmp373 @sand
  1603 label *label379
  1604 set :supplyBase0:ore.1 *tmp373
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1605 set :mineOre.1:ore *tmp373
  1606 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1607 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
  1608 label *label380
 
  1616 jump *label352 always
  1617 label *label351
  1618 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1619 write "Goal 11: Fetching titanium" .display ".status1"
  1620 label *label381
  1621 set :fetchBlock:block .titaniumDrill
  1622 set :fetchBlock:item @titanium
 
  1629 end
  1630 label *label19
  1631 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1632 write "Phase 1: supplying base" .display ".status1"
  1633 label *label384
  1634 set :mineOre.1:ore @coal
  1635 setaddr :mineOre.1*retaddr *label385 (h:*label385)
 
  1694 label *label397
  1695 set :targetMet*retval false
  1696 jump *label395 always
-    * set :targetMet*retval null
  1697 label *label395
  1698 return :targetMet*retaddr
  1699 end
 
  1750 op add *tmp406 :meetTarget:metaglass .metaglassSurplus
  1751 write *tmp406 .controller ".kilnTarget"
  1752 op add *tmp407 :meetTarget:lead .leadSurplus
-    * write *tmp407 .controller ".leadReserve"
+ 1753 write *tmp402 .controller ".leadReserve"
  1754 op sign *tmp408 :meetTarget:silicon
  1755 op mul *tmp409 *tmp408 20
  1756 op add *tmp410 :meetTarget:silicon *tmp409
 
  1777 op mul :second:result @second TIME_COMPRESS
  1778 set *tmp415 :second:result
  1779 label *label424
-    * op floor *tmp416 *tmp415
+ 1780 op floor *tmp416 :second:result
  1781 op mul *tmp417 *tmp416 1000
  1782 op add *tmp418 :log:encodedId *tmp417
-    * write *tmp418 bank1 *tmp413
+ 1783 write *tmp418 bank1 *tmp412
  1784 label *label423
  1785 return :log*retaddr
  1786 end
 
  1799 call *label6 *invalid :moveTo.1*retval (m:*label428) (h:*label428)
  1800 label *label428
  1801 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1802 write "Building..." .display ".status3"
  1803 label *label429
  1804 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1805 jump *label430 equal :buildBlockAt:building null
 
  1814 label *label434
  1815 label *label435
  1816 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1817 set .ERROR "Cannot build at ("
  1818 stop
  1819 label *label436
  1820 label *label430
 
  1837 label *label442
  1838 set :buildBlockAt*retval :buildBlockAt:building
  1839 jump *label427 always
-    * set :buildBlockAt*retval null
  1840 label *label427
  1841 return :buildBlockAt*retaddr
  1842 end
 
  1862 label *label445
  1863 set :buildBlock*retval :buildBlockAt*retval
  1864 jump *label443 always
-    * set :buildBlock*retval null
  1865 label *label443
  1866 return :buildBlock*retaddr
  1867 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-298 instructions):
 
    20 label *label31
    21 set .display processor1
    22 set .flareController processor3
-    * set .oreLocator processor4
    23 set :findUnits:type @flare
    24 setaddr :findUnits*retaddr *label32 (h:*label32)
    25 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
 
    38 label *label34
    39 write :findUnits:count processor1 ".displayPolys"
    40 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    41 label *label36
    42 op add :buildBlockFromCfg:x .coreX -1.5
    43 op add :buildBlockFromCfg:y .coreY 2.5
 
    63 label *label38
    64 label *label35
    65 set .press *tmp97
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    66 label *label42
    67 op add :buildBlockFromCfg.1:x .coreX 0
    68 op add :buildBlockFromCfg.1:y .coreY 4
 
    88 label *label44
    89 label *label41
    90 set .battery *tmp101
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    91 label *label48
    92 op add :buildBlockFromCfg.2:x .coreX -1
    93 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    94 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
+   95 set :buildBlock:y :buildBlockFromCfg.1:y
    96 set :buildBlock:lead 20
    97 set :buildBlock:graphite 0
    98 set :buildBlock:silicon 0
 
   109 multilabel *label51 (m:marker2)
   110 label *label50
   111 label *label47
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   112 label *label54
   113 op add :buildBlockFromCfg.3:x .coreX 0
   114 op add :buildBlockFromCfg.3:y .coreY 3
   115 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  116 set :buildBlock:x :buildBlockFromCfg.1:x
   117 set :buildBlock:y :buildBlockFromCfg.3:y
   118 set :buildBlock:copper 25
   119 set :buildBlock:lead 15
 
   135 label *label53
   136 set .generator *tmp109
   137 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   138 label *label60
   139 op add :buildBlockFromCfg.4:x .coreX 1.5
   140 op add :buildBlockFromCfg.4:y .coreY 2.5
   141 set :buildBlock:block @silicon-smelter
   142 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  143 set :buildBlock:y :buildBlockFromCfg:y
   144 set :buildBlock:copper 30
   145 set :buildBlock:lead 25
   146 set :buildBlock:graphite 0
 
   189 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   190 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   191 jump *label69 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   192 set .ERROR "Cannot locate spot for titanium drill"
   193 stop
   194 label *label71
 
   208 jump *label65 always
   209 label *label65
   210 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp117 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  211 write :buildBlockAt*retval processor1 ".titaniumDrill"
   212 label *label74
   213 op add :buildBlockFromCfg.5:x .coreX 0
   214 op add :buildBlockFromCfg.5:y .coreY 2
   215 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  216 set :buildBlock:x :buildBlockFromCfg.1:x
   217 set :buildBlock:y :buildBlockFromCfg.5:y
   218 set :buildBlock:copper 0
   219 set :buildBlock:lead 0
 
   234 label *label76
   235 label *label73
   236 set .unloader1 *tmp132
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   237 label *label80
   238 op add :buildBlockFromCfg.6:x .coreX 1
   239 op add :buildBlockFromCfg.6:y .coreY 4
   240 set :buildBlock:block @micro-processor
   241 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  242 set :buildBlock:y :buildBlockFromCfg.1:y
   243 set :buildBlock:copper 90
   244 set :buildBlock:lead 50
   245 set :buildBlock:graphite 0
 
   269 write :monos *tmp136 ".monos"
   270 write :flares *tmp136 ".flares"
   271 write :polys *tmp136 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY 1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   272 label *label86
   273 op add :buildBlockFromCfg.7:x .coreX -2
   274 op add :buildBlockFromCfg.7:y .coreY 1
 
   292 multilabel *label89 (m:marker7)
   293 label *label88
   294 label *label85
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 0
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   295 label *label92
   296 op add :buildBlockFromCfg.8:x .coreX -2
   297 op add :buildBlockFromCfg.8:y .coreY 0
   298 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  299 set :buildBlock:x :buildBlockFromCfg.7:x
   300 set :buildBlock:y :buildBlockFromCfg.8:y
   301 set :buildBlock:copper 0
   302 set :buildBlock:lead 0
 
   317 label *label94
   318 label *label91
   319 write *tmp144 *tmp136 ".unloader2"
-    * set :buildBlockFromCfg.9:block @air-factory
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY -2
-    * set :buildBlockFromCfg.9:copper 60
-    * set :buildBlockFromCfg.9:lead 70
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 3
-    * set :buildBlockFromCfg.9:config @mono
   320 label *label98
   321 op add :buildBlockFromCfg.9:x .coreX -3
   322 op add :buildBlockFromCfg.9:y .coreY -2
 
   341 multilabel *label101 (m:marker9)
   342 label *label100
   343 label *label97
-    * set :factory *tmp148
   344 write *tmp148 *tmp136 ".factory"
   345 write *tmp148 processor1 ".factory"
   346 write 1 *tmp136 ".flareTarget"
 
   370 set .graphiteSurplus 60
   371 set .siliconSurplus 100
   372 set .metaglassSurplus 60
-    * set :buildBlockFromCfg.10:block @unloader
-    * set :buildBlockFromCfg.10:offsetX 2
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 0
-    * set :buildBlockFromCfg.10:lead 0
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 30
-    * set :buildBlockFromCfg.10:titanium 25
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   373 label *label111
   374 op add :buildBlockFromCfg.10:x .coreX 2
   375 op add :buildBlockFromCfg.10:y .coreY 1
   376 set :buildBlock:block @unloader
   377 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  378 set :buildBlock:y :buildBlockFromCfg.7:y
   379 set :buildBlock:copper 0
   380 set :buildBlock:lead 0
   381 set :buildBlock:graphite 0
 
   393 multilabel *label114 (m:marker10)
   394 label *label113
   395 label *label110
-    * set :buildBlockFromCfg.11:block @junction
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 3
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 0
-    * set :buildBlockFromCfg.11:titanium 0
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   396 label *label117
   397 op add :buildBlockFromCfg.11:x .coreX 2
   398 op add :buildBlockFromCfg.11:y .coreY 0
   399 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  400 set :buildBlock:x :buildBlockFromCfg.10:x
+  401 set :buildBlock:y :buildBlockFromCfg.8:y
   402 set :buildBlock:copper 3
   403 set :buildBlock:lead 0
   404 set :buildBlock:graphite 0
 
   416 multilabel *label120 (m:marker11)
   417 label *label119
   418 label *label116
-    * set :buildBlockFromCfg.12:block @inverted-sorter
-    * set :buildBlockFromCfg.12:offsetX 3
-    * set :buildBlockFromCfg.12:offsetY 0
-    * set :buildBlockFromCfg.12:copper 2
-    * set :buildBlockFromCfg.12:lead 2
-    * set :buildBlockFromCfg.12:graphite 0
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config @metaglass
   419 label *label123
   420 op add :buildBlockFromCfg.12:x .coreX 3
   421 op add :buildBlockFromCfg.12:y .coreY 0
   422 set :buildBlock:block @inverted-sorter
   423 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
+  424 set :buildBlock:y :buildBlockFromCfg.8:y
   425 set :buildBlock:copper 2
   426 set :buildBlock:lead 2
   427 set :buildBlock:graphite 0
 
   439 multilabel *label126 (m:marker12)
   440 label *label125
   441 label *label122
-    * set :buildBlockFromCfg.13:block @kiln
-    * set :buildBlockFromCfg.13:offsetX 3.5
-    * set :buildBlockFromCfg.13:offsetY 1.5
-    * set :buildBlockFromCfg.13:copper 60
-    * set :buildBlockFromCfg.13:lead 30
-    * set :buildBlockFromCfg.13:graphite 30
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   442 label *label129
   443 op add :buildBlockFromCfg.13:x .coreX 3.5
   444 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   463 multilabel *label132 (m:marker13)
   464 label *label131
   465 label *label128
-    * set .kiln *tmp168
   466 write *tmp168 *tmp136 ".kiln"
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 3.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   467 label *label135
   468 op add :buildBlockFromCfg.14:x .coreX -3.5
   469 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   487 multilabel *label138 (m:marker14)
   488 label *label137
   489 label *label134
-    * set :buildBlockFromCfg.15:block @overflow-gate
-    * set :buildBlockFromCfg.15:offsetX -3
-    * set :buildBlockFromCfg.15:offsetY 0
-    * set :buildBlockFromCfg.15:copper 4
-    * set :buildBlockFromCfg.15:lead 2
-    * set :buildBlockFromCfg.15:graphite 0
-    * set :buildBlockFromCfg.15:silicon 0
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   490 label *label141
   491 op add :buildBlockFromCfg.15:x .coreX -3
   492 op add :buildBlockFromCfg.15:y .coreY 0
   493 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  494 set :buildBlock:x :buildBlockFromCfg.9:x
+  495 set :buildBlock:y :buildBlockFromCfg.8:y
   496 set :buildBlock:copper 4
   497 set :buildBlock:lead 2
   498 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   499 set :buildBlock:titanium 0
   500 set :buildBlock:metaglass 0
   501 set :buildBlock:rotation 0
 
   509 multilabel *label144 (m:marker15)
   510 label *label143
   511 label *label140
-    * set :buildBlockFromCfg.16:block @steam-generator
-    * set :buildBlockFromCfg.16:offsetX -3.5
-    * set :buildBlockFromCfg.16:offsetY 1.5
-    * set :buildBlockFromCfg.16:copper 35
-    * set :buildBlockFromCfg.16:lead 40
-    * set :buildBlockFromCfg.16:graphite 25
-    * set :buildBlockFromCfg.16:silicon 30
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config null
   512 label *label147
   513 op add :buildBlockFromCfg.16:x .coreX -3.5
   514 op add :buildBlockFromCfg.16:y .coreY 1.5
   515 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  516 set :buildBlock:x :buildBlockFromCfg.14:x
+  517 set :buildBlock:y :buildBlockFromCfg.13:y
   518 set :buildBlock:copper 35
   519 set :buildBlock:lead 40
   520 set :buildBlock:graphite 25
 
   535 label *label146
   536 write *tmp180 *tmp136 ".generator2"
   537 set .graphiteSurplus 200
-    * set :buildBlockFromCfg.17:block @payload-router
-    * set :buildBlockFromCfg.17:offsetX -3
-    * set :buildBlockFromCfg.17:offsetY -5
-    * set :buildBlockFromCfg.17:copper 10
-    * set :buildBlockFromCfg.17:lead 0
-    * set :buildBlockFromCfg.17:graphite 15
-    * set :buildBlockFromCfg.17:silicon 0
-    * set :buildBlockFromCfg.17:titanium 0
-    * set :buildBlockFromCfg.17:metaglass 0
-    * set :buildBlockFromCfg.17:rotation 0
-    * set :buildBlockFromCfg.17:config null
   538 label *label153
   539 op add :buildBlockFromCfg.17:x .coreX -3
   540 op add :buildBlockFromCfg.17:y .coreY -5
   541 set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.17:x
+  542 set :buildBlock:x :buildBlockFromCfg.9:x
   543 set :buildBlock:y :buildBlockFromCfg.17:y
   544 set :buildBlock:copper 10
   545 set :buildBlock:lead 0
 
   560 label *label155
   561 label *label152
   562 write *tmp184 *tmp136 ".payloadRouter"
-    * set :buildBlockFromCfg.18:block @unloader
-    * set :buildBlockFromCfg.18:offsetX 0
-    * set :buildBlockFromCfg.18:offsetY -2
-    * set :buildBlockFromCfg.18:copper 0
-    * set :buildBlockFromCfg.18:lead 0
-    * set :buildBlockFromCfg.18:graphite 0
-    * set :buildBlockFromCfg.18:silicon 30
-    * set :buildBlockFromCfg.18:titanium 25
-    * set :buildBlockFromCfg.18:metaglass 0
-    * set :buildBlockFromCfg.18:rotation 0
-    * set :buildBlockFromCfg.18:config null
   563 label *label159
   564 op add :buildBlockFromCfg.18:x .coreX 0
   565 op add :buildBlockFromCfg.18:y .coreY -2
   566 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.18:y
+  567 set :buildBlock:x :buildBlockFromCfg.1:x
+  568 set :buildBlock:y :buildBlockFromCfg.9:y
   569 set :buildBlock:copper 0
-    * set :buildBlock:lead 0
   570 set :buildBlock:graphite 0
   571 set :buildBlock:silicon 30
   572 set :buildBlock:titanium 25
 
   582 multilabel *label162 (m:marker18)
   583 label *label161
   584 label *label158
-    * set :buildBlockFromCfg.19:block @underflow-gate
-    * set :buildBlockFromCfg.19:offsetX 0
-    * set :buildBlockFromCfg.19:offsetY -3
-    * set :buildBlockFromCfg.19:copper 4
-    * set :buildBlockFromCfg.19:lead 2
-    * set :buildBlockFromCfg.19:graphite 0
-    * set :buildBlockFromCfg.19:silicon 0
-    * set :buildBlockFromCfg.19:titanium 0
-    * set :buildBlockFromCfg.19:metaglass 0
-    * set :buildBlockFromCfg.19:rotation 0
-    * set :buildBlockFromCfg.19:config null
   585 label *label165
   586 op add :buildBlockFromCfg.19:x .coreX 0
   587 op add :buildBlockFromCfg.19:y .coreY -3
   588 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.19:x
+  589 set :buildBlock:x :buildBlockFromCfg.1:x
   590 set :buildBlock:y :buildBlockFromCfg.19:y
   591 set :buildBlock:copper 4
   592 set :buildBlock:lead 2
 
   605 multilabel *label168 (m:marker19)
   606 label *label167
   607 label *label164
-    * set :buildBlockFromCfg.20:block @additive-reconstructor
-    * set :buildBlockFromCfg.20:offsetX 0
-    * set :buildBlockFromCfg.20:offsetY -5
-    * set :buildBlockFromCfg.20:copper 200
-    * set :buildBlockFromCfg.20:lead 120
-    * set :buildBlockFromCfg.20:graphite 0
-    * set :buildBlockFromCfg.20:silicon 90
-    * set :buildBlockFromCfg.20:titanium 0
-    * set :buildBlockFromCfg.20:metaglass 0
-    * set :buildBlockFromCfg.20:rotation 0
-    * set :buildBlockFromCfg.20:config null
   608 label *label171
   609 op add :buildBlockFromCfg.20:x .coreX 0
   610 op add :buildBlockFromCfg.20:y .coreY -5
   611 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.20:x
-    * set :buildBlock:y :buildBlockFromCfg.20:y
+  612 set :buildBlock:x :buildBlockFromCfg.1:x
+  613 set :buildBlock:y :buildBlockFromCfg.17:y
   614 set :buildBlock:copper 200
   615 set :buildBlock:lead 120
-    * set :buildBlock:graphite 0
   616 set :buildBlock:silicon 90
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   617 setaddr :buildBlock*retaddr *label175 (h:*label175)
   618 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   619 label *label175
 
   624 multilabel *label174 (m:marker20)
   625 label *label173
   626 label *label170
-    * set :reconstructor *tmp196
   627 write *tmp196 *tmp136 ".reconstructor"
   628 write *tmp196 processor1 ".reconstructor"
   629 setaddr :buildUnits*retaddr *label176 (h:*label176)
 
   650 label *label182
   651 jump *label181 always
   652 label *label183
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   653 ubind @flare
   654 jump *label186 notEqual @unit null
   655 jump *label185 always
 
   706 jump *label202 equal *tmp219 false
   707 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   708 jump *label203 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   709 set .ERROR "Cannot locate spot for thorium drill"
   710 stop
   711 label *label205
 
   889 label *label238
   890 end
   891 label *label5
-    * set :status3:text "Moving..."
   892 write "Moving..." .display ".status3"
   893 label *label241
   894 label *label242
 
   903 return :moveTo*retaddr
   904 end
   905 label *label6
-    * set *tmp242 :moveTo.1:x
-    * set *tmp243 :moveTo.1:y
   906 set :moveTo:x :moveTo.1:x
   907 set :moveTo:y :moveTo.1:y
   908 set :moveTo:radius 6
 
   913 return :moveTo.1*retaddr
   914 end
   915 label *label7
-    * set :status3.1:text "Moving..."
   916 write "Moving..." .display ".status3"
   917 label *label248
   918 label *label249
 
   942 return :moveToBlock*retaddr
   943 end
   944 label *label9
-    * set :status3.2:text "Depositing..."
   945 write "Depositing..." .display ".status3"
   946 label *label257
   947 sensor *tmp251 @unit @firstItem
 
   970 jump *label264 always
   971 label *label266
   972 label *label259
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   973 write 0 .display ".transportTarget"
   974 write null .display ".transportItem"
   975 label *label267
 
   979 label *label10
   980 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
   981 jump *label269 notEqual *tmp261 false
-    * set :error.3:error "Cannot locate ore"
   982 set .ERROR "Cannot locate ore"
   983 stop
   984 label *label271
 
   989 end
   990 label *label11
   991 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   992 write :mineOre:amount .display ".transportTarget"
   993 write :mineOre:ore .display ".transportItem"
   994 label *label273
 
  1015 label *label278
  1016 label *label276
  1017 label *label277
-    * set :status3.3:text "Mining..."
  1018 write "Mining..." .display ".status3"
  1019 label *label282
  1020 op add :mineOre:stop @second 10
 
  1046 return :mineOre*retaddr
  1047 end
  1048 label *label12
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
  1049 write "Mining " .display ".status2"
  1050 write :mineOre.1:ore .display ".item2"
  1051 write "core" .display ".block2"
 
  1061 end
  1062 label *label13
  1063 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
  1064 write :transportStatus.2:target .display ".transportTarget"
  1065 write :fetchBlock:item .display ".transportItem"
  1066 label *label295
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
  1067 write "Fetching " .display ".status2"
  1068 write :fetchBlock:item .display ".item2"
  1069 write :fetchBlock:block .display ".block2"
 
  1115 jump *label311 greaterThanEq *tmp298 .targetGraphite
  1116 sensor *tmp301 .press @coal
  1117 jump *label313 greaterThanEq *tmp301 5
-    * set :status1:text "Goal 1: graphite requirement"
  1118 write "Goal 1: graphite requirement" .display ".status1"
  1119 label *label315
  1120 set :supplyBlock:block .press
  1121 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1122 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1123 write @coal .display ".item2"
+ 1124 write .press .display ".block2"
  1125 label *label317
  1126 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1127 sensor *tmp305 .press @coal
 
  1145 jump *label321 greaterThanEq *tmp309 .targetSilicon
  1146 sensor *tmp312 .smelter @coal
  1147 jump *label323 greaterThanEq *tmp312 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1148 write "Goal 2: coal for silicon requirement" .display ".status1"
  1149 label *label325
  1150 set :supplyBlock.1:block .smelter
  1151 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1152 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1153 write @coal .display ".item2"
+ 1154 write .smelter .display ".block2"
  1155 label *label327
  1156 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1157 sensor *tmp316 .smelter @coal
 
  1171 label *label323
  1172 sensor *tmp320 .smelter @sand
  1173 jump *label331 greaterThanEq *tmp320 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1174 write "Goal 3: sand for silicon requirement" .display ".status1"
  1175 label *label333
  1176 set :supplyBlock.2:block .smelter
  1177 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1178 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1179 write @sand .display ".item2"
+ 1180 write .smelter .display ".block2"
  1181 label *label335
  1182 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1183 sensor *tmp324 .smelter @sand
 
  1202 jump *label339 greaterThanEq *tmp328 .powerTarget
  1203 sensor *tmp331 .generator @coal
  1204 jump *label341 greaterThanEq *tmp331 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1205 write "Goal 4: supplying generator" .display ".status1"
  1206 label *label343
  1207 set :supplyBlock.3:block .generator
  1208 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1209 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1210 write @coal .display ".item2"
+ 1211 write .generator .display ".block2"
  1212 label *label345
  1213 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1214 sensor *tmp335 .generator @coal
 
  1239 label *label349
  1240 set *tmp341 100
  1241 label *label350
-    * set :supplyBase0:titaniumTrigger *tmp341
  1242 sensor *tmp345 .titaniumDrill @titanium
  1243 jump *label351 greaterThanEq *tmp345 *tmp341
  1244 jump *label353 notEqual :supplyBase0:supplied false
  1245 sensor *tmp350 .battery @totalPower
  1246 op mul *tmp351 .unloader1 .powerTarget
  1247 jump *label355 greaterThanEq *tmp350 *tmp351
-    * set :status1.4:text "Goal 5: supplying generator"
  1248 write "Goal 5: supplying generator" .display ".status1"
  1249 label *label357
  1250 set :mineOre.1:ore @coal
 
  1255 label *label355
  1256 sensor *tmp354 .core @silicon
  1257 jump *label359 greaterThanEq *tmp354 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1258 write "Goal 6: silicon requirement" .display ".status1"
  1259 label *label361
  1260 sensor :supplyBase0:coal .core @coal
 
  1265 label *label362
  1266 set *tmp360 @sand
  1267 label *label363
-    * set :supplyBase0:ore *tmp360
  1268 set :mineOre.1:ore *tmp360
  1269 setaddr :mineOre.1*retaddr *label364 (h:*label364)
  1270 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
 
  1273 label *label359
  1274 sensor *tmp361 .core @copper
  1275 jump *label365 greaterThanEq *tmp361 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1276 write "Goal 7: copper requirement" .display ".status1"
  1277 label *label367
  1278 set :mineOre.1:ore @copper
 
  1283 label *label365
  1284 sensor *tmp364 .core @lead
  1285 jump *label369 greaterThanEq *tmp364 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1286 write "Goal 8: lead requirement" .display ".status1"
  1287 label *label371
  1288 set :mineOre.1:ore @lead
 
  1293 label *label369
  1294 sensor *tmp367 .core @metaglass
  1295 jump *label373 greaterThanEq *tmp367 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1296 write "Goal 9: metaglass requirement" .display ".status1"
  1297 label *label375
  1298 set :mineOre.1:ore @sand
 
  1301 label *label376
  1302 jump *label374 always
  1303 label *label373
-    * set :status1.9:text "Goal 10: supplying base"
  1304 write "Goal 10: supplying base" .display ".status1"
  1305 label *label377
  1306 sensor :supplyBase0:coal.1 .core @coal
 
  1311 label *label378
  1312 set *tmp373 @sand
  1313 label *label379
-    * set :supplyBase0:ore.1 *tmp373
  1314 set :mineOre.1:ore *tmp373
  1315 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1316 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
 
  1324 label *label354
  1325 jump *label352 always
  1326 label *label351
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1327 write "Goal 11: Fetching titanium" .display ".status1"
  1328 label *label381
  1329 set :fetchBlock:block .titaniumDrill
 
  1336 return :supplyBase0*retaddr
  1337 end
  1338 label *label19
-    * set :status1.11:text "Phase 1: supplying base"
  1339 write "Phase 1: supplying base" .display ".status1"
  1340 label *label384
  1341 set :mineOre.1:ore @coal
 
  1456 write *tmp405 .controller ".smelterTarget"
  1457 op add *tmp406 :meetTarget:metaglass .metaglassSurplus
  1458 write *tmp406 .controller ".kilnTarget"
-    * op add *tmp407 :meetTarget:lead .leadSurplus
  1459 write *tmp402 .controller ".leadReserve"
  1460 op sign *tmp408 :meetTarget:silicon
  1461 op mul *tmp409 *tmp408 20
 
  1479 read *tmp86 bank1 511
  1480 op sub *tmp412 *tmp86 1
  1481 write *tmp412 bank1 511
-    * set *tmp413 *tmp412
  1482 op mul :second:result @second TIME_COMPRESS
-    * set *tmp415 :second:result
  1483 label *label424
  1484 op floor *tmp416 :second:result
  1485 op mul *tmp417 *tmp416 1000
 
  1502 setaddr :moveTo.1*retaddr *label428 (h:*label428)
  1503 call *label6 *invalid :moveTo.1*retval (m:*label428) (h:*label428)
  1504 label *label428
-    * set :status3.4:text "Building..."
  1505 write "Building..." .display ".status3"
  1506 label *label429
  1507 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1516 jump *label427 always
  1517 label *label434
  1518 label *label435
-    * set :error.4:error "Cannot build at ("
  1519 set .ERROR "Cannot build at ("
  1520 stop
  1521 label *label436

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-36 instructions):
 
    90 set .battery *tmp101
    91 label *label48
    92 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    93 set :buildBlock:x :buildBlockFromCfg.2:x
    94 set :buildBlock:y :buildBlockFromCfg.1:y
    95 set :buildBlock:lead 20
 
   109 label *label50
   110 label *label47
   111 label *label54
-    * op add :buildBlockFromCfg.3:x .coreX 0
   112 op add :buildBlockFromCfg.3:y .coreY 3
   113 set :buildBlock:block @combustion-generator
   114 set :buildBlock:x :buildBlockFromCfg.1:x
 
   135 set .powerTarget 400
   136 label *label60
   137 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   138 set :buildBlock:block @silicon-smelter
   139 set :buildBlock:x :buildBlockFromCfg.4:x
   140 set :buildBlock:y :buildBlockFromCfg:y
 
   201 setaddr :buildBlockAt*retaddr *label72 (h:*label72)
   202 call *label25 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   203 label *label72
-    * set *tmp117 :buildBlockAt*retval
   204 jump *label65 always
   205 label *label65
   206 set .titaniumDrill :buildBlockAt*retval
   207 write :buildBlockAt*retval processor1 ".titaniumDrill"
   208 label *label74
-    * op add :buildBlockFromCfg.5:x .coreX 0
   209 op add :buildBlockFromCfg.5:y .coreY 2
   210 set :buildBlock:block @unloader
   211 set :buildBlock:x :buildBlockFromCfg.1:x
 
   231 set .unloader1 *tmp132
   232 label *label80
   233 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   234 set :buildBlock:block @micro-processor
   235 set :buildBlock:x :buildBlockFromCfg.6:x
   236 set :buildBlock:y :buildBlockFromCfg.1:y
 
   287 label *label88
   288 label *label85
   289 label *label92
-    * op add :buildBlockFromCfg.8:x .coreX -2
   290 op add :buildBlockFromCfg.8:y .coreY 0
   291 set :buildBlock:block @unloader
   292 set :buildBlock:x :buildBlockFromCfg.7:x
 
   365 set .metaglassSurplus 60
   366 label *label111
   367 op add :buildBlockFromCfg.10:x .coreX 2
-    * op add :buildBlockFromCfg.10:y .coreY 1
   368 set :buildBlock:block @unloader
   369 set :buildBlock:x :buildBlockFromCfg.10:x
   370 set :buildBlock:y :buildBlockFromCfg.7:y
 
   386 label *label113
   387 label *label110
   388 label *label117
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
   389 set :buildBlock:block @junction
   390 set :buildBlock:x :buildBlockFromCfg.10:x
   391 set :buildBlock:y :buildBlockFromCfg.8:y
 
   408 label *label116
   409 label *label123
   410 op add :buildBlockFromCfg.12:x .coreX 3
-    * op add :buildBlockFromCfg.12:y .coreY 0
   411 set :buildBlock:block @inverted-sorter
   412 set :buildBlock:x :buildBlockFromCfg.12:x
   413 set :buildBlock:y :buildBlockFromCfg.8:y
 
   460 set :buildBlock:x :buildBlockFromCfg.14:x
   461 set :buildBlock:y :buildBlockFromCfg.14:y
   462 set :buildBlock:copper 30
-    * set :buildBlock:lead 30
   463 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   464 set :buildBlock:titanium 0
   465 set :buildBlock:metaglass 30
   466 set :buildBlock:rotation 0
 
   475 label *label137
   476 label *label134
   477 label *label141
-    * op add :buildBlockFromCfg.15:x .coreX -3
-    * op add :buildBlockFromCfg.15:y .coreY 0
   478 set :buildBlock:block @overflow-gate
   479 set :buildBlock:x :buildBlockFromCfg.9:x
   480 set :buildBlock:y :buildBlockFromCfg.8:y
 
   495 label *label143
   496 label *label140
   497 label *label147
-    * op add :buildBlockFromCfg.16:x .coreX -3.5
-    * op add :buildBlockFromCfg.16:y .coreY 1.5
   498 set :buildBlock:block @steam-generator
   499 set :buildBlock:x :buildBlockFromCfg.14:x
   500 set :buildBlock:y :buildBlockFromCfg.13:y
 
   519 write *tmp180 *tmp136 ".generator2"
   520 set .graphiteSurplus 200
   521 label *label153
-    * op add :buildBlockFromCfg.17:x .coreX -3
   522 op add :buildBlockFromCfg.17:y .coreY -5
   523 set :buildBlock:block @payload-router
   524 set :buildBlock:x :buildBlockFromCfg.9:x
 
   527 set :buildBlock:lead 0
   528 set :buildBlock:graphite 15
   529 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   530 set :buildBlock:metaglass 0
   531 set :buildBlock:rotation 0
   532 set :buildBlock:config null
 
   542 label *label152
   543 write *tmp184 *tmp136 ".payloadRouter"
   544 label *label159
-    * op add :buildBlockFromCfg.18:x .coreX 0
-    * op add :buildBlockFromCfg.18:y .coreY -2
   545 set :buildBlock:block @unloader
   546 set :buildBlock:x :buildBlockFromCfg.1:x
   547 set :buildBlock:y :buildBlockFromCfg.9:y
 
   562 label *label161
   563 label *label158
   564 label *label165
-    * op add :buildBlockFromCfg.19:x .coreX 0
   565 op add :buildBlockFromCfg.19:y .coreY -3
   566 set :buildBlock:block @underflow-gate
   567 set :buildBlock:x :buildBlockFromCfg.1:x
   568 set :buildBlock:y :buildBlockFromCfg.19:y
   569 set :buildBlock:copper 4
   570 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   571 set :buildBlock:silicon 0
   572 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   573 setaddr :buildBlock*retaddr *label169 (h:*label169)
   574 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   575 label *label169
 
   580 label *label167
   581 label *label164
   582 label *label171
-    * op add :buildBlockFromCfg.20:x .coreX 0
-    * op add :buildBlockFromCfg.20:y .coreY -5
   583 set :buildBlock:block @additive-reconstructor
   584 set :buildBlock:x :buildBlockFromCfg.1:x
   585 set :buildBlock:y :buildBlockFromCfg.17:y
 
  1089 jump *label313 greaterThanEq *tmp301 5
  1090 write "Goal 1: graphite requirement" .display ".status1"
  1091 label *label315
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1092 write "Supplying " .display ".status2"
  1093 write @coal .display ".item2"
  1094 write .press .display ".block2"
 
  1117 jump *label323 greaterThanEq *tmp312 5
  1118 write "Goal 2: coal for silicon requirement" .display ".status1"
  1119 label *label325
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1120 write "Supplying " .display ".status2"
  1121 write @coal .display ".item2"
  1122 write .smelter .display ".block2"
 
  1141 jump *label331 greaterThanEq *tmp320 5
  1142 write "Goal 3: sand for silicon requirement" .display ".status1"
  1143 label *label333
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1144 write "Supplying " .display ".status2"
  1145 write @sand .display ".item2"
  1146 write .smelter .display ".block2"
 
  1170 jump *label341 greaterThanEq *tmp331 2
  1171 write "Goal 4: supplying generator" .display ".status1"
  1172 label *label343
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1173 write "Supplying " .display ".status2"
  1174 write @coal .display ".item2"
  1175 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
   390 set :buildBlock:x :buildBlockFromCfg.10:x
   391 set :buildBlock:y :buildBlockFromCfg.8:y
   392 set :buildBlock:copper 3
-    * set :buildBlock:lead 0
   393 set :buildBlock:graphite 0
   394 set :buildBlock:silicon 0
   395 set :buildBlock:titanium 0
 
   436 set :buildBlock:copper 60
   437 set :buildBlock:lead 30
   438 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   439 set :buildBlock:titanium 0
   440 set :buildBlock:metaglass 0
   441 set :buildBlock:rotation 0
 
   458 set :buildBlock:x :buildBlockFromCfg.14:x
   459 set :buildBlock:y :buildBlockFromCfg.14:y
   460 set :buildBlock:copper 30
-    * set :buildBlock:graphite 30
   461 set :buildBlock:titanium 0
   462 set :buildBlock:metaglass 30
   463 set :buildBlock:rotation 0
 
   499 set :buildBlock:lead 40
   500 set :buildBlock:graphite 25
   501 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   502 set :buildBlock:metaglass 0
   503 set :buildBlock:rotation 0
   504 set :buildBlock:config null
 
   545 set :buildBlock:graphite 0
   546 set :buildBlock:silicon 30
   547 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   548 setaddr :buildBlock*retaddr *label163 (h:*label163)
   549 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   550 label *label163

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-7 instructions):
 
    92 op add :buildBlockFromCfg.2:x .coreX -1
    93 set :buildBlock:x :buildBlockFromCfg.2:x
    94 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:lead 20
    95 set :buildBlock:graphite 0
    96 set :buildBlock:silicon 0
    97 set :buildBlock:titanium 0
 
   411 set :buildBlock:y :buildBlockFromCfg.8:y
   412 set :buildBlock:copper 2
   413 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   414 set :buildBlock:titanium 0
   415 set :buildBlock:metaglass 0
   416 set :buildBlock:rotation 0
 
   475 set :buildBlock:copper 4
   476 set :buildBlock:lead 2
   477 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   478 set :buildBlock:metaglass 0
   479 set :buildBlock:rotation 0
   480 set :buildBlock:config null
 
   519 set :buildBlock:lead 0
   520 set :buildBlock:graphite 15
   521 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   522 setaddr :buildBlock*retaddr *label157 (h:*label157)
   523 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   524 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   140 set :buildBlock:copper 30
   141 set :buildBlock:lead 25
   142 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   143 set :buildBlock:titanium 0
   144 set :buildBlock:metaglass 0
   145 set :buildBlock:rotation 0
 
   388 set :buildBlock:x :buildBlockFromCfg.10:x
   389 set :buildBlock:y :buildBlockFromCfg.8:y
   390 set :buildBlock:copper 3
-    * set :buildBlock:graphite 0
   391 set :buildBlock:silicon 0
   392 set :buildBlock:titanium 0
   393 set :buildBlock:metaglass 0
 
   453 set :buildBlock:x :buildBlockFromCfg.14:x
   454 set :buildBlock:y :buildBlockFromCfg.14:y
   455 set :buildBlock:copper 30
-    * set :buildBlock:titanium 0
   456 set :buildBlock:metaglass 30
   457 set :buildBlock:rotation 0
   458 set :buildBlock:config null
 
   492 set :buildBlock:lead 40
   493 set :buildBlock:graphite 25
   494 set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   495 setaddr :buildBlock*retaddr *label151 (h:*label151)
   496 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   497 label *label151

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
   115 set :buildBlock:copper 25
   116 set :buildBlock:lead 15
   117 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   118 set :buildBlock:titanium 0
   119 set :buildBlock:metaglass 0
   120 set :buildBlock:rotation 0
 
   367 set :buildBlock:y :buildBlockFromCfg.7:y
   368 set :buildBlock:copper 0
   369 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   370 set :buildBlock:silicon 30
   371 set :buildBlock:titanium 25
   372 set :buildBlock:metaglass 0
 
   429 set :buildBlock:copper 60
   430 set :buildBlock:lead 30
   431 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   432 set :buildBlock:rotation 0
   433 set :buildBlock:config null
   434 setaddr :buildBlock*retaddr *label133 (h:*label133)
 
   469 set :buildBlock:lead 2
   470 set :buildBlock:graphite 0
   471 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   472 setaddr :buildBlock*retaddr *label145 (h:*label145)
   473 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   474 label *label145

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    93 set :buildBlock:x :buildBlockFromCfg.2:x
    94 set :buildBlock:y :buildBlockFromCfg.1:y
    95 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    96 set :buildBlock:titanium 0
    97 set :buildBlock:metaglass 0
    98 set :buildBlock:rotation 0
 
   314 set :buildBlock:y :buildBlockFromCfg.9:y
   315 set :buildBlock:copper 60
   316 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   317 set :buildBlock:silicon 0
   318 set :buildBlock:titanium 0
   319 set :buildBlock:metaglass 0
 
   405 set :buildBlock:y :buildBlockFromCfg.8:y
   406 set :buildBlock:copper 2
   407 set :buildBlock:lead 2
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   408 set :buildBlock:rotation 0
   409 set :buildBlock:config @metaglass
   410 setaddr :buildBlock*retaddr *label127 (h:*label127)
 
   446 set :buildBlock:y :buildBlockFromCfg.14:y
   447 set :buildBlock:copper 30
   448 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   449 setaddr :buildBlock*retaddr *label139 (h:*label139)
   450 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   451 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-6 instructions):
 
    72 set :buildBlock:copper 5
    73 set :buildBlock:lead 20
    74 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    75 set :buildBlock:titanium 0
    76 set :buildBlock:metaglass 0
    77 set :buildBlock:rotation 0
 
   268 set :buildBlock:lead 6
   269 set :buildBlock:graphite 0
   270 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   271 set :buildBlock:metaglass 0
   272 set :buildBlock:rotation 0
   273 set :buildBlock:config null
 
   287 set :buildBlock:y :buildBlockFromCfg.8:y
   288 set :buildBlock:copper 0
   289 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   290 set :buildBlock:silicon 30
   291 set :buildBlock:titanium 25
   292 set :buildBlock:metaglass 0
 
   383 set :buildBlock:copper 3
   384 set :buildBlock:silicon 0
   385 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   386 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   387 setaddr :buildBlock*retaddr *label121 (h:*label121)
   388 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   389 label *label121
 
   420 set :buildBlock:copper 60
   421 set :buildBlock:lead 30
   422 set :buildBlock:graphite 30
-    * set :buildBlock:rotation 0
   423 set :buildBlock:config null
   424 setaddr :buildBlock*retaddr *label133 (h:*label133)
   425 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
   137 set :buildBlock:copper 30
   138 set :buildBlock:lead 25
   139 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   140 set :buildBlock:metaglass 0
   141 set :buildBlock:rotation 0
   142 set :buildBlock:config null
 
   265 set :buildBlock:y :buildBlockFromCfg.7:y
   266 set :buildBlock:copper 2
   267 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   268 set :buildBlock:silicon 0
   269 set :buildBlock:metaglass 0
   270 set :buildBlock:rotation 0
 
   289 set :buildBlock:titanium 25
   290 set :buildBlock:metaglass 0
   291 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   292 setaddr :buildBlock*retaddr *label96 (h:*label96)
   293 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   294 label *label96
 
   361 set :buildBlock:lead 0
   362 set :buildBlock:silicon 30
   363 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   364 set :buildBlock:rotation 0
   365 set :buildBlock:config null
   366 setaddr :buildBlock*retaddr *label115 (h:*label115)
 
   396 set :buildBlock:y :buildBlockFromCfg.8:y
   397 set :buildBlock:copper 2
   398 set :buildBlock:lead 2
-    * set :buildBlock:rotation 0
   399 set :buildBlock:config @metaglass
   400 setaddr :buildBlock*retaddr *label127 (h:*label127)
   401 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
   115 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   116 set :buildBlock:metaglass 0
   117 set :buildBlock:rotation 0
   118 set :buildBlock:config null
 
   210 set :buildBlock:titanium 25
   211 set :buildBlock:metaglass 0
   212 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   213 setaddr :buildBlock*retaddr *label78 (h:*label78)
   214 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   215 label *label78
 
   228 set :buildBlock:y :buildBlockFromCfg.1:y
   229 set :buildBlock:copper 90
   230 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   231 set :buildBlock:silicon 50
   232 set :buildBlock:titanium 0
   233 set :buildBlock:metaglass 0
 
   307 set :buildBlock:lead 70
   308 set :buildBlock:silicon 0
   309 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   310 set :buildBlock:rotation 3
   311 set :buildBlock:config @mono
   312 setaddr :buildBlock*retaddr *label102 (h:*label102)
 
   375 set :buildBlock:copper 3
   376 set :buildBlock:silicon 0
   377 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   378 setaddr :buildBlock*retaddr *label121 (h:*label121)
   379 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   380 label *label121

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-5 instructions):
 
    92 set :buildBlock:x :buildBlockFromCfg.2:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
    94 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    95 set :buildBlock:metaglass 0
    96 set :buildBlock:rotation 0
    97 set :buildBlock:config null
 
   137 set :buildBlock:graphite 0
   138 set :buildBlock:metaglass 0
   139 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   140 setaddr :buildBlock*retaddr *label64 (h:*label64)
   141 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   142 label *label64
 
   203 set :buildBlock:y :buildBlockFromCfg.5:y
   204 set :buildBlock:copper 0
   205 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   206 set :buildBlock:silicon 30
   207 set :buildBlock:titanium 25
   208 set :buildBlock:metaglass 0
 
   281 set :buildBlock:lead 0
   282 set :buildBlock:silicon 30
   283 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   284 setaddr :buildBlock*retaddr *label96 (h:*label96)
   285 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   286 label *label96

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-5 instructions):
 
    72 set :buildBlock:copper 5
    73 set :buildBlock:lead 20
    74 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    75 set :buildBlock:metaglass 0
    76 set :buildBlock:rotation 0
    77 set :buildBlock:config null
 
   113 set :buildBlock:graphite 0
   114 set :buildBlock:metaglass 0
   115 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   116 setaddr :buildBlock*retaddr *label58 (h:*label58)
   117 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   118 label *label58
 
   132 set :buildBlock:y :buildBlockFromCfg:y
   133 set :buildBlock:copper 30
   134 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   135 set :buildBlock:metaglass 0
   136 set :buildBlock:rotation 0
   137 setaddr :buildBlock*retaddr *label64 (h:*label64)
 
   257 set :buildBlock:copper 2
   258 set :buildBlock:lead 6
   259 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   260 set :buildBlock:config null
   261 setaddr :buildBlock*retaddr *label90 (h:*label90)
   262 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-4 instructions):
 
    93 set :buildBlock:graphite 0
    94 set :buildBlock:metaglass 0
    95 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    96 setaddr :buildBlock*retaddr *label52 (h:*label52)
    97 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    98 label *label52
 
   109 set :buildBlock:y :buildBlockFromCfg.3:y
   110 set :buildBlock:copper 25
   111 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   112 set :buildBlock:metaglass 0
   113 set :buildBlock:rotation 0
   114 setaddr :buildBlock*retaddr *label58 (h:*label58)
 
   222 set :buildBlock:lead 50
   223 set :buildBlock:silicon 50
   224 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   225 set :buildBlock:config processor2
   226 setaddr :buildBlock*retaddr *label84 (h:*label84)
   227 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-4 instructions):
 
    74 set :buildBlock:graphite 0
    75 set :buildBlock:metaglass 0
    76 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    77 setaddr :buildBlock*retaddr *label46 (h:*label46)
    78 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    79 label *label46
 
    89 op add :buildBlockFromCfg.2:x .coreX -1
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    92 set :buildBlock:metaglass 0
    93 set :buildBlock:rotation 0
    94 setaddr :buildBlock*retaddr *label52 (h:*label52)
 
   198 set :buildBlock:lead 0
   199 set :buildBlock:silicon 30
   200 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   201 setaddr :buildBlock*retaddr *label78 (h:*label78)
   202 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   203 label *label78

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-3 instructions):
 
    71 set :buildBlock:y :buildBlockFromCfg.1:y
    72 set :buildBlock:copper 5
    73 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    74 set :buildBlock:metaglass 0
    75 set :buildBlock:rotation 0
    76 setaddr :buildBlock*retaddr *label46 (h:*label46)
 
   127 set :buildBlock:y :buildBlockFromCfg:y
   128 set :buildBlock:copper 30
   129 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   130 setaddr :buildBlock*retaddr *label64 (h:*label64)
   131 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   132 label *label64

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-2 instructions):
 
   106 set :buildBlock:y :buildBlockFromCfg.3:y
   107 set :buildBlock:copper 25
   108 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   109 setaddr :buildBlock*retaddr *label58 (h:*label58)
   110 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   111 label *label58

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-2 instructions):
 
    88 op add :buildBlockFromCfg.2:x .coreX -1
    89 set :buildBlock:x :buildBlockFromCfg.2:x
    90 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    91 setaddr :buildBlock*retaddr *label52 (h:*label52)
    92 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    93 label *label52

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-2 instructions):
 
    71 set :buildBlock:y :buildBlockFromCfg.1:y
    72 set :buildBlock:copper 5
    73 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    74 setaddr :buildBlock*retaddr *label46 (h:*label46)
    75 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    76 label *label46

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    38 label *label34
    39 write :findUnits:count processor1 ".displayPolys"
    40 set :polys :findUnits*retval
+   41 op add :buildBlockFromCfg:x .coreX -1.5
+   42 op add :buildBlockFromCfg:y .coreY 2.5
+   43 set :buildBlock:block @graphite-press
+   44 set :buildBlock:x :buildBlockFromCfg:x
+   45 set :buildBlock:y :buildBlockFromCfg:y
+   46 set :buildBlock:copper 75
+   47 set :buildBlock:lead 30
+   48 set :buildBlock:graphite 0
+   49 set :buildBlock:silicon 0
+   50 set :buildBlock:titanium 0
+   51 set :buildBlock:metaglass 0
+   52 set :buildBlock:rotation 0
+   53 set :buildBlock:config null
+   54 setaddr :buildBlock*retaddr *label40 (h:*label40)
    55 label *label36
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label40 (h:*label40)
    56 call *label26 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    57 label *label40
    58 set *tmp97 :buildBlock*retval
 
    63 label *label38
    64 label *label35
    65 set .press *tmp97
+   66 op add :buildBlockFromCfg.1:x .coreX 0
+   67 op add :buildBlockFromCfg.1:y .coreY 4
+   68 set :buildBlock:block @battery
+   69 set :buildBlock:x :buildBlockFromCfg.1:x
+   70 set :buildBlock:y :buildBlockFromCfg.1:y
+   71 set :buildBlock:copper 5
+   72 set :buildBlock:lead 20
+   73 setaddr :buildBlock*retaddr *label46 (h:*label46)
    74 label *label42
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label46 (h:*label46)
    75 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    76 label *label46
    77 set *tmp101 :buildBlock*retval
 
    82 label *label44
    83 label *label41
    84 set .battery *tmp101
+   85 op add :buildBlockFromCfg.2:x .coreX -1
+   86 set :buildBlock:x :buildBlockFromCfg.2:x
+   87 set :buildBlock:y :buildBlockFromCfg.1:y
+   88 setaddr :buildBlock*retaddr *label52 (h:*label52)
    89 label *label48
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label52 (h:*label52)
    90 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    91 label *label52
    92 jump *label47 always
 
    95 multilabel *label51 (m:marker2)
    96 label *label50
    97 label *label47
+   98 op add :buildBlockFromCfg.3:y .coreY 3
+   99 set :buildBlock:block @combustion-generator
+  100 set :buildBlock:x :buildBlockFromCfg.1:x
+  101 set :buildBlock:y :buildBlockFromCfg.3:y
+  102 set :buildBlock:copper 25
+  103 set :buildBlock:lead 15
+  104 setaddr :buildBlock*retaddr *label58 (h:*label58)
   105 label *label54
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label58 (h:*label58)
   106 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
   107 label *label58
   108 set *tmp109 :buildBlock*retval
 
   114 label *label53
   115 set .generator *tmp109
   116 set .powerTarget 400
+  117 op add :buildBlockFromCfg.4:x .coreX 1.5
+  118 set :buildBlock:block @silicon-smelter
+  119 set :buildBlock:x :buildBlockFromCfg.4:x
+  120 set :buildBlock:y :buildBlockFromCfg:y
+  121 set :buildBlock:copper 30
+  122 set :buildBlock:lead 25
+  123 setaddr :buildBlock*retaddr *label64 (h:*label64)
   124 label *label60
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label64 (h:*label64)
   125 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   126 label *label64
   127 set *tmp113 :buildBlock*retval
 
   180 label *label65
   181 set .titaniumDrill :buildBlockAt*retval
   182 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  183 op add :buildBlockFromCfg.5:y .coreY 2
+  184 set :buildBlock:block @unloader
+  185 set :buildBlock:x :buildBlockFromCfg.1:x
+  186 set :buildBlock:y :buildBlockFromCfg.5:y
+  187 set :buildBlock:copper 0
+  188 set :buildBlock:lead 0
+  189 set :buildBlock:silicon 30
+  190 set :buildBlock:titanium 25
+  191 setaddr :buildBlock*retaddr *label78 (h:*label78)
   192 label *label74
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label78 (h:*label78)
   193 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   194 label *label78
   195 set *tmp132 :buildBlock*retval
 
   200 label *label76
   201 label *label73
   202 set .unloader1 *tmp132
+  203 op add :buildBlockFromCfg.6:x .coreX 1
+  204 set :buildBlock:block @micro-processor
+  205 set :buildBlock:x :buildBlockFromCfg.6:x
+  206 set :buildBlock:y :buildBlockFromCfg.1:y
+  207 set :buildBlock:copper 90
+  208 set :buildBlock:lead 50
+  209 set :buildBlock:silicon 50
+  210 set :buildBlock:titanium 0
+  211 setaddr :buildBlock*retaddr *label84 (h:*label84)
   212 label *label80
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   213 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label84 (h:*label84)
   214 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   215 label *label84
   216 set *tmp136 :buildBlock*retval
 
   231 write :monos *tmp136 ".monos"
   232 write :flares *tmp136 ".flares"
   233 write :polys *tmp136 ".polys"
+  234 op add :buildBlockFromCfg.7:x .coreX -2
+  235 op add :buildBlockFromCfg.7:y .coreY 1
+  236 set :buildBlock:block @power-node
+  237 set :buildBlock:x :buildBlockFromCfg.7:x
+  238 set :buildBlock:y :buildBlockFromCfg.7:y
+  239 set :buildBlock:copper 2
+  240 set :buildBlock:lead 6
+  241 set :buildBlock:silicon 0
+  242 set :buildBlock:config null
+  243 setaddr :buildBlock*retaddr *label90 (h:*label90)
   244 label *label86
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY 1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label90 (h:*label90)
   245 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   246 label *label90
   247 jump *label85 always
 
   250 multilabel *label89 (m:marker7)
   251 label *label88
   252 label *label85
+  253 op add :buildBlockFromCfg.8:y .coreY 0
+  254 set :buildBlock:block @unloader
+  255 set :buildBlock:x :buildBlockFromCfg.7:x
+  256 set :buildBlock:y :buildBlockFromCfg.8:y
+  257 set :buildBlock:copper 0
+  258 set :buildBlock:lead 0
+  259 set :buildBlock:silicon 30
+  260 set :buildBlock:titanium 25
+  261 setaddr :buildBlock*retaddr *label96 (h:*label96)
   262 label *label92
-    * op add :buildBlockFromCfg.8:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label96 (h:*label96)
   263 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   264 label *label96
   265 set *tmp144 :buildBlock*retval
 
   270 label *label94
   271 label *label91
   272 write *tmp144 *tmp136 ".unloader2"
+  273 op add :buildBlockFromCfg.9:x .coreX -3
+  274 op add :buildBlockFromCfg.9:y .coreY -2
+  275 set :buildBlock:block @air-factory
+  276 set :buildBlock:x :buildBlockFromCfg.9:x
+  277 set :buildBlock:y :buildBlockFromCfg.9:y
+  278 set :buildBlock:copper 60
+  279 set :buildBlock:lead 70
+  280 set :buildBlock:silicon 0
+  281 set :buildBlock:titanium 0
+  282 set :buildBlock:rotation 3
+  283 set :buildBlock:config @mono
+  284 setaddr :buildBlock*retaddr *label102 (h:*label102)
   285 label *label98
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY -2
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label102 (h:*label102)
   286 call *label26 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   287 label *label102
   288 set *tmp148 :buildBlock*retval
 
   321 set .graphiteSurplus 60
   322 set .siliconSurplus 100
   323 set .metaglassSurplus 60
+  324 op add :buildBlockFromCfg.10:x .coreX 2
+  325 set :buildBlock:block @unloader
+  326 set :buildBlock:x :buildBlockFromCfg.10:x
+  327 set :buildBlock:y :buildBlockFromCfg.7:y
+  328 set :buildBlock:copper 0
+  329 set :buildBlock:lead 0
+  330 set :buildBlock:silicon 30
+  331 set :buildBlock:titanium 25
+  332 set :buildBlock:rotation 0
+  333 set :buildBlock:config null
+  334 setaddr :buildBlock*retaddr *label115 (h:*label115)
   335 label *label111
-    * op add :buildBlockFromCfg.10:x .coreX 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   336 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   337 label *label115
   338 jump *label110 always
 
   341 multilabel *label114 (m:marker10)
   342 label *label113
   343 label *label110
+  344 set :buildBlock:block @junction
+  345 set :buildBlock:x :buildBlockFromCfg.10:x
+  346 set :buildBlock:y :buildBlockFromCfg.8:y
+  347 set :buildBlock:copper 3
+  348 set :buildBlock:silicon 0
+  349 set :buildBlock:titanium 0
+  350 setaddr :buildBlock*retaddr *label121 (h:*label121)
   351 label *label117
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   352 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   353 label *label121
   354 jump *label116 always
 
   357 multilabel *label120 (m:marker11)
   358 label *label119
   359 label *label116
+  360 op add :buildBlockFromCfg.12:x .coreX 3
+  361 set :buildBlock:block @inverted-sorter
+  362 set :buildBlock:x :buildBlockFromCfg.12:x
+  363 set :buildBlock:y :buildBlockFromCfg.8:y
+  364 set :buildBlock:copper 2
+  365 set :buildBlock:lead 2
+  366 set :buildBlock:config @metaglass
+  367 setaddr :buildBlock*retaddr *label127 (h:*label127)
   368 label *label123
-    * op add :buildBlockFromCfg.12:x .coreX 3
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:config @metaglass
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   369 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   370 label *label127
   371 jump *label122 always
 
   374 multilabel *label126 (m:marker12)
   375 label *label125
   376 label *label122
+  377 op add :buildBlockFromCfg.13:x .coreX 3.5
+  378 op add :buildBlockFromCfg.13:y .coreY 1.5
+  379 set :buildBlock:block @kiln
+  380 set :buildBlock:x :buildBlockFromCfg.13:x
+  381 set :buildBlock:y :buildBlockFromCfg.13:y
+  382 set :buildBlock:copper 60
+  383 set :buildBlock:lead 30
+  384 set :buildBlock:graphite 30
+  385 set :buildBlock:config null
+  386 setaddr :buildBlock*retaddr *label133 (h:*label133)
   387 label *label129
-    * op add :buildBlockFromCfg.13:x .coreX 3.5
-    * op add :buildBlockFromCfg.13:y .coreY 1.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   388 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   389 label *label133
   390 set *tmp168 :buildBlock*retval
 
   395 label *label131
   396 label *label128
   397 write *tmp168 *tmp136 ".kiln"
+  398 op add :buildBlockFromCfg.14:x .coreX -3.5
+  399 op add :buildBlockFromCfg.14:y .coreY 3.5
+  400 set :buildBlock:block @water-extractor
+  401 set :buildBlock:x :buildBlockFromCfg.14:x
+  402 set :buildBlock:y :buildBlockFromCfg.14:y
+  403 set :buildBlock:copper 30
+  404 set :buildBlock:metaglass 30
+  405 setaddr :buildBlock*retaddr *label139 (h:*label139)
   406 label *label135
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 3.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   407 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   408 label *label139
   409 jump *label134 always
 
   412 multilabel *label138 (m:marker14)
   413 label *label137
   414 label *label134
+  415 set :buildBlock:block @overflow-gate
+  416 set :buildBlock:x :buildBlockFromCfg.9:x
+  417 set :buildBlock:y :buildBlockFromCfg.8:y
+  418 set :buildBlock:copper 4
+  419 set :buildBlock:lead 2
+  420 set :buildBlock:graphite 0
+  421 set :buildBlock:metaglass 0
+  422 setaddr :buildBlock*retaddr *label145 (h:*label145)
   423 label *label141
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label145 (h:*label145)
   424 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   425 label *label145
   426 jump *label140 always
 
   429 multilabel *label144 (m:marker15)
   430 label *label143
   431 label *label140
+  432 set :buildBlock:block @steam-generator
+  433 set :buildBlock:x :buildBlockFromCfg.14:x
+  434 set :buildBlock:y :buildBlockFromCfg.13:y
+  435 set :buildBlock:copper 35
+  436 set :buildBlock:lead 40
+  437 set :buildBlock:graphite 25
+  438 set :buildBlock:silicon 30
+  439 setaddr :buildBlock*retaddr *label151 (h:*label151)
   440 label *label147
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * setaddr :buildBlock*retaddr *label151 (h:*label151)
   441 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   442 label *label151
   443 set *tmp180 :buildBlock*retval
 
   449 label *label146
   450 write *tmp180 *tmp136 ".generator2"
   451 set .graphiteSurplus 200
+  452 op add :buildBlockFromCfg.17:y .coreY -5
+  453 set :buildBlock:block @payload-router
+  454 set :buildBlock:x :buildBlockFromCfg.9:x
+  455 set :buildBlock:y :buildBlockFromCfg.17:y
+  456 set :buildBlock:copper 10
+  457 set :buildBlock:lead 0
+  458 set :buildBlock:graphite 15
+  459 set :buildBlock:silicon 0
+  460 setaddr :buildBlock*retaddr *label157 (h:*label157)
   461 label *label153
-    * op add :buildBlockFromCfg.17:y .coreY -5
-    * set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 10
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 15
-    * set :buildBlock:silicon 0
-    * setaddr :buildBlock*retaddr *label157 (h:*label157)
   462 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   463 label *label157
   464 set *tmp184 :buildBlock*retval
 
   469 label *label155
   470 label *label152
   471 write *tmp184 *tmp136 ".payloadRouter"
+  472 set :buildBlock:block @unloader
+  473 set :buildBlock:x :buildBlockFromCfg.1:x
+  474 set :buildBlock:y :buildBlockFromCfg.9:y
+  475 set :buildBlock:copper 0
+  476 set :buildBlock:graphite 0
+  477 set :buildBlock:silicon 30
+  478 set :buildBlock:titanium 25
+  479 setaddr :buildBlock*retaddr *label163 (h:*label163)
   480 label *label159
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label163 (h:*label163)
   481 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   482 label *label163
   483 jump *label158 always
 
   486 multilabel *label162 (m:marker18)
   487 label *label161
   488 label *label158
+  489 op add :buildBlockFromCfg.19:y .coreY -3
+  490 set :buildBlock:block @underflow-gate
+  491 set :buildBlock:x :buildBlockFromCfg.1:x
+  492 set :buildBlock:y :buildBlockFromCfg.19:y
+  493 set :buildBlock:copper 4
+  494 set :buildBlock:lead 2
+  495 set :buildBlock:silicon 0
+  496 set :buildBlock:titanium 0
+  497 setaddr :buildBlock*retaddr *label169 (h:*label169)
   498 label *label165
-    * op add :buildBlockFromCfg.19:y .coreY -3
-    * set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label169 (h:*label169)
   499 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   500 label *label169
   501 jump *label164 always
 
   504 multilabel *label168 (m:marker19)
   505 label *label167
   506 label *label164
+  507 set :buildBlock:block @additive-reconstructor
+  508 set :buildBlock:x :buildBlockFromCfg.1:x
+  509 set :buildBlock:y :buildBlockFromCfg.17:y
+  510 set :buildBlock:copper 200
+  511 set :buildBlock:lead 120
+  512 set :buildBlock:silicon 90
+  513 setaddr :buildBlock*retaddr *label175 (h:*label175)
   514 label *label171
-    * set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 200
-    * set :buildBlock:lead 120
-    * set :buildBlock:silicon 90
-    * setaddr :buildBlock*retaddr *label175 (h:*label175)
   515 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   516 label *label175
   517 set *tmp196 :buildBlock*retval
 
   788 label *label5
   789 write "Moving..." .display ".status3"
   790 label *label241
+  791 op sub *tmp241 :moveTo:radius 0.5
   792 label *label242
   793 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
   794 jump *label244 notEqual *tmp239 false
-    * op sub *tmp241 :moveTo:radius 0.5
   795 ucontrol approach :moveTo:x :moveTo:y *tmp241
   796 label *label243
   797 jump *label242 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1119 label *label340
  1120 label *label309
  1121 label *label310
+ 1122 set *tmp341 100
  1123 sensor *tmp339 .core @titanium
-    * jump *label349 greaterThanEq *tmp339 .targetTitanium
+ 1124 jump *label350 greaterThanEq *tmp339 .targetTitanium
  1125 sensor *tmp342 .core @titanium
  1126 op sub *tmp343 .targetTitanium *tmp342
  1127 op min *tmp341 7 *tmp343
  1128 jump *label350 always
-    * label *label349
-    * set *tmp341 100
  1129 label *label350
  1130 sensor *tmp345 .titaniumDrill @titanium
  1131 jump *label351 greaterThanEq *tmp345 *tmp341
 
  1147 label *label361
  1148 sensor :supplyBase0:coal .core @coal
  1149 sensor :supplyBase0:sand .core @sand
-    * jump *label362 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp360 @coal
+ 1150 set :mineOre.1:ore @sand
+ 1151 jump *label363 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1152 set :mineOre.1:ore @coal
  1153 jump *label363 always
-    * label *label362
-    * set *tmp360 @sand
  1154 label *label363
-    * set :mineOre.1:ore *tmp360
  1155 setaddr :mineOre.1*retaddr *label364 (h:*label364)
  1156 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
  1157 label *label364
 
  1191 label *label377
  1192 sensor :supplyBase0:coal.1 .core @coal
  1193 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label378 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp373 @coal
+ 1194 set :mineOre.1:ore @sand
+ 1195 jump *label379 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1196 set :mineOre.1:ore @coal
  1197 jump *label379 always
-    * label *label378
-    * set *tmp373 @sand
  1198 label *label379
-    * set :mineOre.1:ore *tmp373
  1199 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1200 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
  1201 label *label380

Modifications by Unroll iteration loop at CoreBuilder.mnd:264:5 (-2 instructions):
 
  1290 end
  1291 label *label22
  1292 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp400 *label412
-    * jump *label409 always
-    * multilabel *label412 (m:marker21)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp400 *label413
-    * jump *label409 always
-    * multilabel *label413 (m:marker21)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp400 *label414
-    * jump *label409 always
-    * multilabel *label414 (m:marker21)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp400 *label415
-    * jump *label409 always
-    * multilabel *label415 (m:marker21)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp400 *label416
-    * jump *label409 always
-    * multilabel *label416 (m:marker21)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp400 *label417
-    * label *label409
-    * op sign *tmp401 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label410
-    * multijump *tmp400 0 0 (m:marker21)
-    * multilabel *label417 (m:marker21)
-    * label *label411
+ 1293 set :meetTarget:t :meetTarget:copper
+ 1294 label *label454
+ 1295 op sign *tmp401 :meetTarget:t
+ 1296 op add :meetTarget:count :meetTarget:count *tmp401
+ 1297 label *label455
+ 1298 set :meetTarget:t :meetTarget:lead
+ 1299 label *label458
+ 1300 op sign *tmp401 :meetTarget:t
+ 1301 op add :meetTarget:count :meetTarget:count *tmp401
+ 1302 label *label459
+ 1303 set :meetTarget:t :meetTarget:graphite
+ 1304 label *label462
+ 1305 op sign *tmp401 :meetTarget:t
+ 1306 op add :meetTarget:count :meetTarget:count *tmp401
+ 1307 label *label463
+ 1308 set :meetTarget:t :meetTarget:silicon
+ 1309 label *label466
+ 1310 op sign *tmp401 :meetTarget:t
+ 1311 op add :meetTarget:count :meetTarget:count *tmp401
+ 1312 label *label467
+ 1313 set :meetTarget:t :meetTarget:titanium
+ 1314 label *label470
+ 1315 op sign *tmp401 :meetTarget:t
+ 1316 op add :meetTarget:count :meetTarget:count *tmp401
+ 1317 label *label471
+ 1318 set :meetTarget:t :meetTarget:metaglass
+ 1319 label *label474
+ 1320 op sign *tmp401 :meetTarget:t
+ 1321 op add :meetTarget:count :meetTarget:count *tmp401
+ 1322 label *label475
+ 1323 label *label411
  1324 write :meetTarget:count .display ".totalTargets"
  1325 write :meetTarget:block .display ".nextBlock"
  1326 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1292 set :meetTarget:count 0
  1293 set :meetTarget:t :meetTarget:copper
  1294 label *label454
-    * op sign *tmp401 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp401
+ 1295 op sign *tmp401 :meetTarget:copper
+ 1296 op add :meetTarget:count 0 *tmp401
  1297 label *label455
  1298 set :meetTarget:t :meetTarget:lead
  1299 label *label458
-    * op sign *tmp401 :meetTarget:t
+ 1300 op sign *tmp401 :meetTarget:lead
  1301 op add :meetTarget:count :meetTarget:count *tmp401
  1302 label *label459
  1303 set :meetTarget:t :meetTarget:graphite
  1304 label *label462
-    * op sign *tmp401 :meetTarget:t
+ 1305 op sign *tmp401 :meetTarget:graphite
  1306 op add :meetTarget:count :meetTarget:count *tmp401
  1307 label *label463
  1308 set :meetTarget:t :meetTarget:silicon
  1309 label *label466
-    * op sign *tmp401 :meetTarget:t
+ 1310 op sign *tmp401 :meetTarget:silicon
  1311 op add :meetTarget:count :meetTarget:count *tmp401
  1312 label *label467
  1313 set :meetTarget:t :meetTarget:titanium
  1314 label *label470
-    * op sign *tmp401 :meetTarget:t
+ 1315 op sign *tmp401 :meetTarget:titanium
  1316 op add :meetTarget:count :meetTarget:count *tmp401
  1317 label *label471
  1318 set :meetTarget:t :meetTarget:metaglass
  1319 label *label474
-    * op sign *tmp401 :meetTarget:t
+ 1320 op sign *tmp401 :meetTarget:metaglass
  1321 op add :meetTarget:count :meetTarget:count *tmp401
  1322 label *label475
  1323 label *label411

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1289 return :targetMet*retaddr
  1290 end
  1291 label *label22
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1292 label *label454
  1293 op sign *tmp401 :meetTarget:copper
  1294 op add :meetTarget:count 0 *tmp401
  1295 label *label455
-    * set :meetTarget:t :meetTarget:lead
  1296 label *label458
  1297 op sign *tmp401 :meetTarget:lead
  1298 op add :meetTarget:count :meetTarget:count *tmp401
  1299 label *label459
-    * set :meetTarget:t :meetTarget:graphite
  1300 label *label462
  1301 op sign *tmp401 :meetTarget:graphite
  1302 op add :meetTarget:count :meetTarget:count *tmp401
  1303 label *label463
-    * set :meetTarget:t :meetTarget:silicon
  1304 label *label466
  1305 op sign *tmp401 :meetTarget:silicon
  1306 op add :meetTarget:count :meetTarget:count *tmp401
  1307 label *label467
-    * set :meetTarget:t :meetTarget:titanium
  1308 label *label470
  1309 op sign *tmp401 :meetTarget:titanium
  1310 op add :meetTarget:count :meetTarget:count *tmp401
  1311 label *label471
-    * set :meetTarget:t :meetTarget:metaglass
  1312 label *label474
  1313 op sign *tmp401 :meetTarget:metaglass
  1314 op add :meetTarget:count :meetTarget:count *tmp401

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   176 setaddr :buildBlockAt*retaddr *label72 (h:*label72)
   177 call *label25 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   178 label *label72
-    * jump *label65 always
   179 label *label65
   180 set .titaniumDrill :buildBlockAt*retval
   181 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1124 sensor *tmp342 .core @titanium
  1125 op sub *tmp343 .targetTitanium *tmp342
  1126 op min *tmp341 7 *tmp343
-    * jump *label350 always
  1127 label *label350
  1128 sensor *tmp345 .titaniumDrill @titanium
  1129 jump *label351 greaterThanEq *tmp345 *tmp341
 
  1148 set :mineOre.1:ore @sand
  1149 jump *label363 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1150 set :mineOre.1:ore @coal
-    * jump *label363 always
  1151 label *label363
  1152 setaddr :mineOre.1*retaddr *label364 (h:*label364)
  1153 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
 
  1191 set :mineOre.1:ore @sand
  1192 jump *label379 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1193 set :mineOre.1:ore @coal
-    * jump *label379 always
  1194 label *label379
  1195 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1196 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
 
  1413 call *label24 *invalid :logBlock*retval (m:*label442) (h:*label442)
  1414 label *label442
  1415 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label427 always
  1416 label *label427
  1417 return :buildBlockAt*retaddr
  1418 end
 
  1437 call *label25 *invalid :buildBlockAt*retval (m:*label445) (h:*label445)
  1438 label *label445
  1439 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label443 always
  1440 label *label443
  1441 return :buildBlock*retaddr
  1442 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    63 label *label38
    64 label *label35
    65 set .press *tmp97
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   66 set :buildBlockFromCfg.1:x .coreX
    67 op add :buildBlockFromCfg.1:y .coreY 4
    68 set :buildBlock:block @battery
    69 set :buildBlock:x :buildBlockFromCfg.1:x
 
   249 multilabel *label89 (m:marker7)
   250 label *label88
   251 label *label85
-    * op add :buildBlockFromCfg.8:y .coreY 0
+  252 set :buildBlockFromCfg.8:y .coreY
   253 set :buildBlock:block @unloader
   254 set :buildBlock:x :buildBlockFromCfg.7:x
   255 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1287 label *label22
  1288 label *label454
  1289 op sign *tmp401 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp401
+ 1290 set :meetTarget:count *tmp401
  1291 label *label455
  1292 label *label458
  1293 op sign *tmp401 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1286 end
  1287 label *label22
  1288 label *label454
-    * op sign *tmp401 :meetTarget:copper
-    * set :meetTarget:count *tmp401
+ 1289 op sign :meetTarget:count :meetTarget:copper
  1290 label *label455
  1291 label *label458
  1292 op sign *tmp401 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    66 set :buildBlockFromCfg.1:x .coreX
    67 op add :buildBlockFromCfg.1:y .coreY 4
    68 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   69 set :buildBlock:x .coreX
    70 set :buildBlock:y :buildBlockFromCfg.1:y
    71 set :buildBlock:copper 5
    72 set :buildBlock:lead 20
 
    97 label *label47
    98 op add :buildBlockFromCfg.3:y .coreY 3
    99 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  100 set :buildBlock:x .coreX
   101 set :buildBlock:y :buildBlockFromCfg.3:y
   102 set :buildBlock:copper 25
   103 set :buildBlock:lead 15
 
   181 write :buildBlockAt*retval processor1 ".titaniumDrill"
   182 op add :buildBlockFromCfg.5:y .coreY 2
   183 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  184 set :buildBlock:x .coreX
   185 set :buildBlock:y :buildBlockFromCfg.5:y
   186 set :buildBlock:copper 0
   187 set :buildBlock:lead 0
 
   252 set :buildBlockFromCfg.8:y .coreY
   253 set :buildBlock:block @unloader
   254 set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  255 set :buildBlock:y .coreY
   256 set :buildBlock:copper 0
   257 set :buildBlock:lead 0
   258 set :buildBlock:silicon 30
 
   342 label *label110
   343 set :buildBlock:block @junction
   344 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  345 set :buildBlock:y .coreY
   346 set :buildBlock:copper 3
   347 set :buildBlock:silicon 0
   348 set :buildBlock:titanium 0
 
   359 op add :buildBlockFromCfg.12:x .coreX 3
   360 set :buildBlock:block @inverted-sorter
   361 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  362 set :buildBlock:y .coreY
   363 set :buildBlock:copper 2
   364 set :buildBlock:lead 2
   365 set :buildBlock:config @metaglass
 
   413 label *label134
   414 set :buildBlock:block @overflow-gate
   415 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  416 set :buildBlock:y .coreY
   417 set :buildBlock:copper 4
   418 set :buildBlock:lead 2
   419 set :buildBlock:graphite 0
 
   469 label *label152
   470 write *tmp184 *tmp136 ".payloadRouter"
   471 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  472 set :buildBlock:x .coreX
   473 set :buildBlock:y :buildBlockFromCfg.9:y
   474 set :buildBlock:copper 0
   475 set :buildBlock:graphite 0
 
   487 label *label158
   488 op add :buildBlockFromCfg.19:y .coreY -3
   489 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  490 set :buildBlock:x .coreX
   491 set :buildBlock:y :buildBlockFromCfg.19:y
   492 set :buildBlock:copper 4
   493 set :buildBlock:lead 2
 
   504 label *label167
   505 label *label164
   506 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  507 set :buildBlock:x .coreX
   508 set :buildBlock:y :buildBlockFromCfg.17:y
   509 set :buildBlock:copper 200
   510 set :buildBlock:lead 120

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    63 label *label38
    64 label *label35
    65 set .press *tmp97
-    * set :buildBlockFromCfg.1:x .coreX
    66 op add :buildBlockFromCfg.1:y .coreY 4
    67 set :buildBlock:block @battery
    68 set :buildBlock:x .coreX
 
   248 multilabel *label89 (m:marker7)
   249 label *label88
   250 label *label85
-    * set :buildBlockFromCfg.8:y .coreY
   251 set :buildBlock:block @unloader
   252 set :buildBlock:x :buildBlockFromCfg.7:x
   253 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    15 ubind @poly
    16 set .builder @unit
    17 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label30
    18 jump *label29 equal .core null
-    * label *label31
    19 set .display processor1
    20 set .flareController processor3
    21 set :findUnits:type @flare
 
    50 set :buildBlock:rotation 0
    51 set :buildBlock:config null
    52 setaddr :buildBlock*retaddr *label40 (h:*label40)
-    * label *label36
    53 call *label26 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    54 label *label40
    55 set *tmp97 :buildBlock*retval
    56 jump *label35 always
-    * label *label37
    57 multijump *tmp98 0 0 (m:marker0)
    58 multilabel *label39 (m:marker0)
-    * label *label38
    59 label *label35
    60 set .press *tmp97
    61 op add :buildBlockFromCfg.1:y .coreY 4
 
    65 set :buildBlock:copper 5
    66 set :buildBlock:lead 20
    67 setaddr :buildBlock*retaddr *label46 (h:*label46)
-    * label *label42
    68 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    69 label *label46
    70 set *tmp101 :buildBlock*retval
    71 jump *label41 always
-    * label *label43
    72 multijump *tmp102 0 0 (m:marker1)
    73 multilabel *label45 (m:marker1)
-    * label *label44
    74 label *label41
    75 set .battery *tmp101
    76 op add :buildBlockFromCfg.2:x .coreX -1
    77 set :buildBlock:x :buildBlockFromCfg.2:x
    78 set :buildBlock:y :buildBlockFromCfg.1:y
    79 setaddr :buildBlock*retaddr *label52 (h:*label52)
-    * label *label48
    80 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    81 label *label52
    82 jump *label47 always
-    * label *label49
    83 multijump *tmp106 0 0 (m:marker2)
    84 multilabel *label51 (m:marker2)
-    * label *label50
    85 label *label47
    86 op add :buildBlockFromCfg.3:y .coreY 3
    87 set :buildBlock:block @combustion-generator
 
    90 set :buildBlock:copper 25
    91 set :buildBlock:lead 15
    92 setaddr :buildBlock*retaddr *label58 (h:*label58)
-    * label *label54
    93 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    94 label *label58
    95 set *tmp109 :buildBlock*retval
    96 jump *label53 always
-    * label *label55
    97 multijump *tmp110 0 0 (m:marker3)
    98 multilabel *label57 (m:marker3)
-    * label *label56
    99 label *label53
   100 set .generator *tmp109
   101 set .powerTarget 400
 
   106 set :buildBlock:copper 30
   107 set :buildBlock:lead 25
   108 setaddr :buildBlock*retaddr *label64 (h:*label64)
-    * label *label60
   109 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
   110 label *label64
   111 set *tmp113 :buildBlock*retval
   112 jump *label59 always
-    * label *label61
   113 multijump *tmp114 0 0 (m:marker4)
   114 multilabel *label63 (m:marker4)
-    * label *label62
   115 label *label59
   116 set .smelter *tmp113
   117 set :meetTarget:block @pneumatic-drill
 
   124 setaddr :meetTarget*retaddr *label67 (h:*label67)
   125 call *label22 *invalid :meetTarget*retval (m:*label67) (h:*label67)
   126 label *label67
-    * label *label66
   127 write @titanium processor1 ".nextBlock"
   128 write .coreX processor4 ":findDrillLocation:x"
   129 write .coreY processor4 ":findDrillLocation:y"
 
   144 jump *label69 notEqual :buildTitaniumDrill:result false
   145 set .ERROR "Cannot locate spot for titanium drill"
   146 stop
-    * label *label71
   147 label *label69
-    * label *label70
   148 write @pneumatic-drill processor1 ".nextBlock"
   149 set :buildBlockAt:block @pneumatic-drill
   150 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   155 setaddr :buildBlockAt*retaddr *label72 (h:*label72)
   156 call *label25 *invalid :buildBlockAt*retval (m:*label72) (h:*label72)
   157 label *label72
-    * label *label65
   158 set .titaniumDrill :buildBlockAt*retval
   159 write :buildBlockAt*retval processor1 ".titaniumDrill"
   160 op add :buildBlockFromCfg.5:y .coreY 2
 
   166 set :buildBlock:silicon 30
   167 set :buildBlock:titanium 25
   168 setaddr :buildBlock*retaddr *label78 (h:*label78)
-    * label *label74
   169 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   170 label *label78
   171 set *tmp132 :buildBlock*retval
   172 jump *label73 always
-    * label *label75
   173 multijump *tmp133 0 0 (m:marker5)
   174 multilabel *label77 (m:marker5)
-    * label *label76
   175 label *label73
   176 set .unloader1 *tmp132
   177 op add :buildBlockFromCfg.6:x .coreX 1
 
   183 set :buildBlock:silicon 50
   184 set :buildBlock:titanium 0
   185 setaddr :buildBlock*retaddr *label84 (h:*label84)
-    * label *label80
   186 set :buildBlock:config processor2
   187 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   188 label *label84
   189 set *tmp136 :buildBlock*retval
   190 jump *label79 always
-    * label *label81
   191 multijump *tmp137 0 0 (m:marker6)
   192 multilabel *label83 (m:marker6)
-    * label *label82
   193 label *label79
   194 set .controller *tmp136
   195 write processor1 *tmp136 ".display"
 
   212 set :buildBlock:silicon 0
   213 set :buildBlock:config null
   214 setaddr :buildBlock*retaddr *label90 (h:*label90)
-    * label *label86
   215 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   216 label *label90
   217 jump *label85 always
-    * label *label87
   218 multijump *tmp141 0 0 (m:marker7)
   219 multilabel *label89 (m:marker7)
-    * label *label88
   220 label *label85
   221 set :buildBlock:block @unloader
   222 set :buildBlock:x :buildBlockFromCfg.7:x
 
   226 set :buildBlock:silicon 30
   227 set :buildBlock:titanium 25
   228 setaddr :buildBlock*retaddr *label96 (h:*label96)
-    * label *label92
   229 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   230 label *label96
   231 set *tmp144 :buildBlock*retval
   232 jump *label91 always
-    * label *label93
   233 multijump *tmp145 0 0 (m:marker8)
   234 multilabel *label95 (m:marker8)
-    * label *label94
   235 label *label91
   236 write *tmp144 *tmp136 ".unloader2"
   237 op add :buildBlockFromCfg.9:x .coreX -3
 
   246 set :buildBlock:rotation 3
   247 set :buildBlock:config @mono
   248 setaddr :buildBlock*retaddr *label102 (h:*label102)
-    * label *label98
   249 call *label26 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   250 label *label102
   251 set *tmp148 :buildBlock*retval
   252 jump *label97 always
-    * label *label99
   253 multijump *tmp149 0 0 (m:marker9)
   254 multilabel *label101 (m:marker9)
-    * label *label100
   255 label *label97
   256 write *tmp148 *tmp136 ".factory"
   257 write *tmp148 processor1 ".factory"
 
   274 jump *label108 greaterThanEq *tmp152 300
   275 jump *label106 always
   276 label *label108
-    * label *label109
-    * label *label105
   277 read *tmp39 *tmp136 ".monos"
   278 jump *label104 lessThan *tmp39 3
   279 label *label106
 
   291 set :buildBlock:rotation 0
   292 set :buildBlock:config null
   293 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   294 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   295 label *label115
   296 jump *label110 always
-    * label *label112
   297 multijump *tmp157 0 0 (m:marker10)
   298 multilabel *label114 (m:marker10)
-    * label *label113
   299 label *label110
   300 set :buildBlock:block @junction
   301 set :buildBlock:x :buildBlockFromCfg.10:x
 
   304 set :buildBlock:silicon 0
   305 set :buildBlock:titanium 0
   306 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   307 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   308 label *label121
   309 jump *label116 always
-    * label *label118
   310 multijump *tmp161 0 0 (m:marker11)
   311 multilabel *label120 (m:marker11)
-    * label *label119
   312 label *label116
   313 op add :buildBlockFromCfg.12:x .coreX 3
   314 set :buildBlock:block @inverted-sorter
 
   318 set :buildBlock:lead 2
   319 set :buildBlock:config @metaglass
   320 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   321 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   322 label *label127
   323 jump *label122 always
-    * label *label124
   324 multijump *tmp165 0 0 (m:marker12)
   325 multilabel *label126 (m:marker12)
-    * label *label125
   326 label *label122
   327 op add :buildBlockFromCfg.13:x .coreX 3.5
   328 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   334 set :buildBlock:graphite 30
   335 set :buildBlock:config null
   336 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   337 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   338 label *label133
   339 set *tmp168 :buildBlock*retval
   340 jump *label128 always
-    * label *label130
   341 multijump *tmp169 0 0 (m:marker13)
   342 multilabel *label132 (m:marker13)
-    * label *label131
   343 label *label128
   344 write *tmp168 *tmp136 ".kiln"
   345 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   350 set :buildBlock:copper 30
   351 set :buildBlock:metaglass 30
   352 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   353 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   354 label *label139
   355 jump *label134 always
-    * label *label136
   356 multijump *tmp173 0 0 (m:marker14)
   357 multilabel *label138 (m:marker14)
-    * label *label137
   358 label *label134
   359 set :buildBlock:block @overflow-gate
   360 set :buildBlock:x :buildBlockFromCfg.9:x
 
   364 set :buildBlock:graphite 0
   365 set :buildBlock:metaglass 0
   366 setaddr :buildBlock*retaddr *label145 (h:*label145)
-    * label *label141
   367 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   368 label *label145
   369 jump *label140 always
-    * label *label142
   370 multijump *tmp177 0 0 (m:marker15)
   371 multilabel *label144 (m:marker15)
-    * label *label143
   372 label *label140
   373 set :buildBlock:block @steam-generator
   374 set :buildBlock:x :buildBlockFromCfg.14:x
 
   378 set :buildBlock:graphite 25
   379 set :buildBlock:silicon 30
   380 setaddr :buildBlock*retaddr *label151 (h:*label151)
-    * label *label147
   381 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   382 label *label151
   383 set *tmp180 :buildBlock*retval
   384 jump *label146 always
-    * label *label148
   385 multijump *tmp181 0 0 (m:marker16)
   386 multilabel *label150 (m:marker16)
-    * label *label149
   387 label *label146
   388 write *tmp180 *tmp136 ".generator2"
   389 set .graphiteSurplus 200
 
   396 set :buildBlock:graphite 15
   397 set :buildBlock:silicon 0
   398 setaddr :buildBlock*retaddr *label157 (h:*label157)
-    * label *label153
   399 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   400 label *label157
   401 set *tmp184 :buildBlock*retval
   402 jump *label152 always
-    * label *label154
   403 multijump *tmp185 0 0 (m:marker17)
   404 multilabel *label156 (m:marker17)
-    * label *label155
   405 label *label152
   406 write *tmp184 *tmp136 ".payloadRouter"
   407 set :buildBlock:block @unloader
 
   412 set :buildBlock:silicon 30
   413 set :buildBlock:titanium 25
   414 setaddr :buildBlock*retaddr *label163 (h:*label163)
-    * label *label159
   415 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   416 label *label163
   417 jump *label158 always
-    * label *label160
   418 multijump *tmp189 0 0 (m:marker18)
   419 multilabel *label162 (m:marker18)
-    * label *label161
   420 label *label158
   421 op add :buildBlockFromCfg.19:y .coreY -3
   422 set :buildBlock:block @underflow-gate
 
   427 set :buildBlock:silicon 0
   428 set :buildBlock:titanium 0
   429 setaddr :buildBlock*retaddr *label169 (h:*label169)
-    * label *label165
   430 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   431 label *label169
   432 jump *label164 always
-    * label *label166
   433 multijump *tmp193 0 0 (m:marker19)
   434 multilabel *label168 (m:marker19)
-    * label *label167
   435 label *label164
   436 set :buildBlock:block @additive-reconstructor
   437 set :buildBlock:x .coreX
 
   440 set :buildBlock:lead 120
   441 set :buildBlock:silicon 90
   442 setaddr :buildBlock*retaddr *label175 (h:*label175)
-    * label *label171
   443 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   444 label *label175
   445 set *tmp196 :buildBlock*retval
   446 jump *label170 always
-    * label *label172
   447 multijump *tmp197 0 0 (m:marker20)
   448 multilabel *label174 (m:marker20)
-    * label *label173
   449 label *label170
   450 write *tmp196 *tmp136 ".reconstructor"
   451 write *tmp196 processor1 ".reconstructor"
 
   461 setaddr :supplyBase*retaddr *label180 (h:*label180)
   462 call *label20 *invalid :supplyBase*retval (m:*label180) (h:*label180)
   463 label *label180
-    * label *label178
   464 jump *label177 always
   465 label *label179
   466 label *label181
 
   469 setaddr :supplyBase*retaddr *label184 (h:*label184)
   470 call *label20 *invalid :supplyBase*retval (m:*label184) (h:*label184)
   471 label *label184
-    * label *label182
   472 jump *label181 always
   473 label *label183
   474 ubind @flare
   475 jump *label186 notEqual @unit null
   476 jump *label185 always
   477 label *label186
-    * label *label187
   478 set :findFreeUnit:first_unit @unit
   479 label *label188
   480 sensor *tmp205 @unit @controlled
 
   487 jump *label193 notEqual *tmp208 1
   488 set :findFreeUnit:first_unit @unit
   489 label *label193
-    * label *label194
   490 label *label192
   491 ubind @flare
-    * label *label189
   492 jump *label188 notEqual :findFreeUnit:first_unit @unit
-    * label *label190
   493 label *label185
   494 write .coreX processor4 ":layoutThoriumDrill:x"
   495 write .coreY processor4 ":layoutThoriumDrill:y"
 
   502 setaddr :supplyBase*retaddr *label198 (h:*label198)
   503 call *label20 *invalid :supplyBase*retval (m:*label198) (h:*label198)
   504 label *label198
-    * label *label196
   505 read *tmp217 processor4 ":layoutThoriumDrill*finished"
   506 jump *label195 equal *tmp217 false
-    * label *label197
   507 set :meetTarget:block @laser-drill
   508 set :meetTarget:copper 35
   509 set :meetTarget:lead 0
 
   514 setaddr :meetTarget*retaddr *label201 (h:*label201)
   515 call *label22 *invalid :meetTarget*retval (m:*label201) (h:*label201)
   516 label *label201
-    * label *label200
   517 label *label202
   518 wait 1e-15
   519 read *tmp219 processor4 ":layoutThoriumDrill*finished"
 
   522 jump *label203 notEqual :buildThoriumDrill:result false
   523 set .ERROR "Cannot locate spot for thorium drill"
   524 stop
-    * label *label205
   525 label *label203
-    * label *label204
   526 set :buildBlockAt:block @laser-drill
   527 read :buildBlockAt:x processor4 ".drillX"
   528 read :buildBlockAt:y processor4 ".drillY"
 
   537 jump *label207 greaterThanEq *tmp74 0
   538 jump *label199 always
   539 label *label207
-    * label *label208
   540 set :meetTarget:block @water-extractor
   541 set :meetTarget:copper 30
   542 set :meetTarget:lead 30
 
   547 setaddr :meetTarget*retaddr *label210 (h:*label210)
   548 call *label22 *invalid :meetTarget*retval (m:*label210) (h:*label210)
   549 label *label210
-    * label *label209
   550 set :buildBlockAt:block @water-extractor
   551 read *tmp74 processor4 ".water1X"
   552 set :buildBlockAt:x *tmp74
 
   561 jump *label212 greaterThanEq *tmp76 0
   562 jump *label199 always
   563 label *label212
-    * label *label213
   564 set :meetTarget:block @water-extractor
   565 set :meetTarget:copper 30
   566 set :meetTarget:lead 30
 
   571 setaddr :meetTarget*retaddr *label215 (h:*label215)
   572 call *label22 *invalid :meetTarget*retval (m:*label215) (h:*label215)
   573 label *label215
-    * label *label214
   574 set :buildBlockAt:block @water-extractor
   575 read *tmp76 processor4 ".water2X"
   576 set :buildBlockAt:x *tmp76
 
   591 setaddr :meetTarget*retaddr *label218 (h:*label218)
   592 call *label22 *invalid :meetTarget*retval (m:*label218) (h:*label218)
   593 label *label218
-    * label *label217
   594 set :buildBlockAt:block @steam-generator
   595 read :buildBlockAt:x processor4 ".generatorX"
   596 read :buildBlockAt:y processor4 ".generatorY"
 
   611 setaddr :meetTarget*retaddr *label221 (h:*label221)
   612 call *label22 *invalid :meetTarget*retval (m:*label221) (h:*label221)
   613 label *label221
-    * label *label220
   614 set :buildBlockAt:block @power-node
   615 read :buildBlockAt:x processor4 ".nodeX"
   616 read :buildBlockAt:y processor4 ".nodeY"
 
   630 setaddr :meetTarget*retaddr *label224 (h:*label224)
   631 call *label22 *invalid :meetTarget*retval (m:*label224) (h:*label224)
   632 label *label224
-    * label *label223
   633 set :buildBlockAt:block @solar-panel
   634 read :buildBlockAt:x processor4 ".panelX"
   635 read :buildBlockAt:y processor4 ".panelY"
 
   649 setaddr :meetTarget*retaddr *label227 (h:*label227)
   650 call *label22 *invalid :meetTarget*retval (m:*label227) (h:*label227)
   651 label *label227
-    * label *label226
   652 set :buildBlockAt:block @battery
   653 read :buildBlockAt:x processor4 ".batteryX"
   654 read :buildBlockAt:y processor4 ".batteryY"
 
   674 setaddr :supplyBase*retaddr *label233 (h:*label233)
   675 call *label20 *invalid :supplyBase*retval (m:*label233) (h:*label233)
   676 label *label233
-    * label *label231
   677 read *tmp38 *tmp136 ".flares"
   678 read *tmp39 *tmp136 ".monos"
   679 op add *tmp237 *tmp38 *tmp39
   680 jump *label230 lessThan *tmp237 16
-    * label *label232
   681 label *label234
   682 setaddr :supplyBase*retaddr *label237 (h:*label237)
   683 call *label20 *invalid :supplyBase*retval (m:*label237) (h:*label237)
   684 label *label237
-    * label *label235
   685 jump *label234 always
-    * label *label236
   686 ucontrol stop
   687 set .ERROR "Done"
   688 stop
-    * label *label238
   689 end
   690 label *label5
   691 write "Moving..." .display ".status3"
-    * label *label241
   692 op sub *tmp241 :moveTo:radius 0.5
   693 label *label242
   694 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
   695 jump *label244 notEqual *tmp239 false
   696 ucontrol approach :moveTo:x :moveTo:y *tmp241
-    * label *label243
   697 jump *label242 always
   698 label *label244
-    * label *label240
   699 return :moveTo*retaddr
   700 end
   701 label *label6
 
   705 setaddr :moveTo*retaddr *label246 (h:*label246)
   706 call *label5 *invalid :moveTo*retval (m:*label246) (h:*label246)
   707 label *label246
-    * label *label245
   708 return :moveTo.1*retaddr
   709 end
   710 label *label7
   711 write "Moving..." .display ".status3"
-    * label *label248
   712 label *label249
   713 sensor *tmp244 @unit @firstItem
   714 jump *label252 equal *tmp244 null
   715 ucontrol itemDrop @air 1000
   716 label *label252
-    * label *label253
   717 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label250
   718 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
   719 jump *label249 equal *tmp247 false
-    * label *label251
-    * label *label247
   720 return :moveToEmpty*retaddr
   721 end
   722 label *label8
 
   728 setaddr :moveTo*retaddr *label255 (h:*label255)
   729 call *label5 *invalid :moveTo*retval (m:*label255) (h:*label255)
   730 label *label255
-    * label *label254
   731 return :moveToBlock*retaddr
   732 end
   733 label *label9
   734 write "Depositing..." .display ".status3"
-    * label *label257
   735 sensor *tmp251 @unit @firstItem
   736 jump *label258 notEqual *tmp251 :depositItems:item
   737 set :moveToBlock:block :depositItems:block
 
   742 sensor :depositItems:cap :depositItems:block @itemCapacity
   743 label *label261
   744 ucontrol itemDrop :depositItems:block 30
-    * label *label262
   745 sensor *tmp255 @unit @firstItem
   746 op mul *tmp256 *tmp255 :depositItems:cap
   747 sensor *tmp257 :depositItems:block :depositItems:item
   748 jump *label261 greaterThan *tmp256 *tmp257
-    * label *label263
   749 jump *label259 always
   750 label *label258
   751 label *label264
   752 sensor *tmp259 @unit @firstItem
   753 jump *label266 equal *tmp259 null
   754 ucontrol itemDrop @air 1000
-    * label *label265
   755 jump *label264 always
   756 label *label266
   757 label *label259
   758 write 0 .display ".transportTarget"
   759 write null .display ".transportItem"
-    * label *label267
-    * label *label256
   760 return :depositItems*retaddr
   761 end
   762 label *label10
 
   764 jump *label269 notEqual *tmp261 false
   765 set .ERROR "Cannot locate ore"
   766 stop
-    * label *label271
   767 label *label269
-    * label *label270
-    * label *label268
   768 return :locateOre*retaddr
   769 end
   770 label *label11
   771 op min :mineOre:amount :mineOre:amount 30
   772 write :mineOre:amount .display ".transportTarget"
   773 write :mineOre:ore .display ".transportItem"
-    * label *label273
   774 set :locateOre:ore :mineOre:ore
   775 setaddr :locateOre*retaddr *label274 (h:*label274)
   776 call *label10 *invalid :locateOre*retval (m:*label274) (h:*label274)
 
   788 sensor *tmp269 @unit @firstItem
   789 jump *label281 equal *tmp269 null
   790 ucontrol itemDrop @air 1000
-    * label *label280
   791 jump *label279 always
   792 label *label281
-    * label *label278
   793 label *label276
-    * label *label277
   794 write "Mining..." .display ".status3"
-    * label *label282
   795 op add :mineOre:stop @second 10
   796 label *label283
   797 sensor :mineOre:item @unit @firstItem
 
   801 jump *label286 equal *tmp275 false
   802 jump *label285 always
   803 label *label286
-    * label *label287
   804 ucontrol mine :mineOre:x :mineOre:y
   805 jump *label288 lessThanEq @second :mineOre:stop
   806 jump *label285 always
   807 label *label288
-    * label *label289
-    * label *label284
   808 sensor *tmp279 @unit @totalItems
   809 jump *label283 lessThan *tmp279 :mineOre:amount
   810 label *label285
 
   814 setaddr :depositItems*retaddr *label290 (h:*label290)
   815 call *label9 *invalid :depositItems*retval (m:*label290) (h:*label290)
   816 label *label290
-    * label *label272
   817 return :mineOre*retaddr
   818 end
   819 label *label12
   820 write "Mining " .display ".status2"
   821 write :mineOre.1:ore .display ".item2"
   822 write "core" .display ".block2"
-    * label *label292
   823 set :mineOre:ore :mineOre.1:ore
   824 set :mineOre:amount 30
   825 set :mineOre:block .core
   826 setaddr :mineOre*retaddr *label293 (h:*label293)
   827 call *label11 *invalid :mineOre*retval (m:*label293) (h:*label293)
   828 label *label293
-    * label *label291
   829 return :mineOre.1*retaddr
   830 end
   831 label *label13
   832 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   833 write :transportStatus.2:target .display ".transportTarget"
   834 write :fetchBlock:item .display ".transportItem"
-    * label *label295
   835 write "Fetching " .display ".status2"
   836 write :fetchBlock:item .display ".item2"
   837 write :fetchBlock:block .display ".block2"
-    * label *label296
   838 sensor *tmp283 :fetchBlock:block @x
   839 sensor *tmp284 :fetchBlock:block @y
   840 set :moveToEmpty:x *tmp283
 
   846 sensor *tmp285 @unit @firstItem
   847 jump *label301 equal *tmp285 null
   848 ucontrol itemDrop @air 1000
-    * label *label300
   849 jump *label299 always
   850 label *label301
-    * label *label298
   851 label *label302
   852 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   853 sensor :fetchBlock:unitItem @unit @firstItem
 
   857 jump *label305 equal *tmp290 false
   858 ucontrol itemDrop @air 1000
   859 label *label305
-    * label *label306
-    * label *label303
   860 sensor *tmp292 @unit :fetchBlock:item
   861 op lessThan *tmp293 *tmp292 30
   862 sensor *tmp294 :fetchBlock:block :fetchBlock:item
   863 op land *tmp295 *tmp293 *tmp294
   864 jump *label302 notEqual *tmp295 false
-    * label *label304
   865 set :depositItems:block .core
   866 set :depositItems:item :fetchBlock:item
   867 setaddr :depositItems*retaddr *label307 (h:*label307)
   868 call *label9 *invalid :depositItems*retval (m:*label307) (h:*label307)
   869 label *label307
-    * label *label294
   870 return :fetchBlock*retaddr
   871 end
   872 label *label18
 
   877 sensor *tmp301 .press @coal
   878 jump *label313 greaterThanEq *tmp301 5
   879 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label315
   880 write "Supplying " .display ".status2"
   881 write @coal .display ".item2"
   882 write .press .display ".block2"
-    * label *label317
   883 sensor :supplyBlock:blockCapacity .press @itemCapacity
   884 sensor *tmp305 .press @coal
   885 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
 
   891 call *label11 *invalid :mineOre*retval (m:*label320) (h:*label320)
   892 label *label320
   893 label *label318
-    * label *label319
-    * label *label316
   894 set :supplyBase0:supplied true
   895 label *label313
-    * label *label314
   896 label *label311
-    * label *label312
   897 sensor *tmp309 .core @silicon
   898 jump *label321 greaterThanEq *tmp309 .targetSilicon
   899 sensor *tmp312 .smelter @coal
   900 jump *label323 greaterThanEq *tmp312 5
   901 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label325
   902 write "Supplying " .display ".status2"
   903 write @coal .display ".item2"
   904 write .smelter .display ".block2"
-    * label *label327
   905 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   906 sensor *tmp316 .smelter @coal
   907 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
 
   913 call *label11 *invalid :mineOre*retval (m:*label330) (h:*label330)
   914 label *label330
   915 label *label328
-    * label *label329
-    * label *label326
   916 set :supplyBase0:supplied true
   917 jump *label324 always
   918 label *label323
   919 sensor *tmp320 .smelter @sand
   920 jump *label331 greaterThanEq *tmp320 5
   921 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label333
   922 write "Supplying " .display ".status2"
   923 write @sand .display ".item2"
   924 write .smelter .display ".block2"
-    * label *label335
   925 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   926 sensor *tmp324 .smelter @sand
   927 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
 
   933 call *label11 *invalid :mineOre*retval (m:*label338) (h:*label338)
   934 label *label338
   935 label *label336
-    * label *label337
-    * label *label334
   936 set :supplyBase0:supplied true
   937 label *label331
-    * label *label332
   938 label *label324
   939 label *label321
-    * label *label322
   940 sensor *tmp328 .battery @totalPower
   941 jump *label339 greaterThanEq *tmp328 .powerTarget
   942 sensor *tmp331 .generator @coal
   943 jump *label341 greaterThanEq *tmp331 2
   944 write "Goal 4: supplying generator" .display ".status1"
-    * label *label343
   945 write "Supplying " .display ".status2"
   946 write @coal .display ".item2"
   947 write .generator .display ".block2"
-    * label *label345
   948 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   949 sensor *tmp335 .generator @coal
   950 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
 
   956 call *label11 *invalid :mineOre*retval (m:*label348) (h:*label348)
   957 label *label348
   958 label *label346
-    * label *label347
-    * label *label344
   959 set :supplyBase0:supplied true
   960 label *label341
-    * label *label342
   961 label *label339
-    * label *label340
   962 label *label309
-    * label *label310
   963 set *tmp341 100
   964 sensor *tmp339 .core @titanium
   965 jump *label350 greaterThanEq *tmp339 .targetTitanium
 
   974 op mul *tmp351 .unloader1 .powerTarget
   975 jump *label355 greaterThanEq *tmp350 *tmp351
   976 write "Goal 5: supplying generator" .display ".status1"
-    * label *label357
   977 set :mineOre.1:ore @coal
   978 setaddr :mineOre.1*retaddr *label358 (h:*label358)
   979 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
 
   983 sensor *tmp354 .core @silicon
   984 jump *label359 greaterThanEq *tmp354 .targetSilicon
   985 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label361
   986 sensor :supplyBase0:coal .core @coal
   987 sensor :supplyBase0:sand .core @sand
   988 set :mineOre.1:ore @sand
 
   997 sensor *tmp361 .core @copper
   998 jump *label365 greaterThanEq *tmp361 .targetCopper
   999 write "Goal 7: copper requirement" .display ".status1"
-    * label *label367
  1000 set :mineOre.1:ore @copper
  1001 setaddr :mineOre.1*retaddr *label368 (h:*label368)
  1002 call *label12 *invalid :mineOre.1*retval (m:*label368) (h:*label368)
 
  1006 sensor *tmp364 .core @lead
  1007 jump *label369 greaterThanEq *tmp364 .targetLead
  1008 write "Goal 8: lead requirement" .display ".status1"
-    * label *label371
  1009 set :mineOre.1:ore @lead
  1010 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1011 call *label12 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
 
  1015 sensor *tmp367 .core @metaglass
  1016 jump *label373 greaterThanEq *tmp367 .targetMetaglass
  1017 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label375
  1018 set :mineOre.1:ore @sand
  1019 setaddr :mineOre.1*retaddr *label376 (h:*label376)
  1020 call *label12 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
 
  1022 jump *label374 always
  1023 label *label373
  1024 write "Goal 10: supplying base" .display ".status1"
-    * label *label377
  1025 sensor :supplyBase0:coal.1 .core @coal
  1026 sensor :supplyBase0:sand.1 .core @sand
  1027 set :mineOre.1:ore @sand
 
  1037 label *label360
  1038 label *label356
  1039 label *label353
-    * label *label354
  1040 jump *label352 always
  1041 label *label351
  1042 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label381
  1043 set :fetchBlock:block .titaniumDrill
  1044 set :fetchBlock:item @titanium
  1045 setaddr :fetchBlock*retaddr *label382 (h:*label382)
  1046 call *label13 *invalid :fetchBlock*retval (m:*label382) (h:*label382)
  1047 label *label382
  1048 label *label352
-    * label *label308
  1049 return :supplyBase0*retaddr
  1050 end
  1051 label *label19
  1052 write "Phase 1: supplying base" .display ".status1"
-    * label *label384
  1053 set :mineOre.1:ore @coal
  1054 setaddr :mineOre.1*retaddr *label385 (h:*label385)
  1055 call *label12 *invalid :mineOre.1*retval (m:*label385) (h:*label385)
  1056 label *label385
-    * label *label383
  1057 return :supplyBase1*retaddr
  1058 end
  1059 label *label20
 
  1066 write false .flareController ":start*finished"
  1067 write 3 .flareController "@counter"
  1068 label *label389
-    * label *label390
  1069 label *label387
-    * label *label388
  1070 read *tmp39 .controller ".monos"
  1071 jump *label391 lessThanEq *tmp39 3
  1072 setaddr :supplyBase1*retaddr *label393 (h:*label393)
 
  1078 call *label18 *invalid :supplyBase0*retval (m:*label394) (h:*label394)
  1079 label *label394
  1080 label *label392
-    * label *label386
  1081 return :supplyBase*retaddr
  1082 end
  1083 label *label21
 
  1096 set :targetMet*retval true
  1097 jump *label395 always
  1098 label *label406
-    * label *label407
  1099 label *label404
-    * label *label405
  1100 label *label402
-    * label *label403
  1101 label *label400
-    * label *label401
  1102 label *label398
-    * label *label399
  1103 label *label396
-    * label *label397
  1104 set :targetMet*retval false
  1105 jump *label395 always
  1106 label *label395
  1107 return :targetMet*retaddr
  1108 end
  1109 label *label22
-    * label *label454
  1110 op sign :meetTarget:count :meetTarget:copper
-    * label *label455
-    * label *label458
  1111 op sign *tmp401 :meetTarget:lead
  1112 op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label459
-    * label *label462
  1113 op sign *tmp401 :meetTarget:graphite
  1114 op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label463
-    * label *label466
  1115 op sign *tmp401 :meetTarget:silicon
  1116 op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label467
-    * label *label470
  1117 op sign *tmp401 :meetTarget:titanium
  1118 op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label471
-    * label *label474
  1119 op sign *tmp401 :meetTarget:metaglass
  1120 op add :meetTarget:count :meetTarget:count *tmp401
-    * label *label475
-    * label *label411
  1121 write :meetTarget:count .display ".totalTargets"
  1122 write :meetTarget:block .display ".nextBlock"
  1123 write :meetTarget:copper .display ".targetCopper"
 
  1152 setaddr :supplyBase*retaddr *label422 (h:*label422)
  1153 call *label20 *invalid :supplyBase*retval (m:*label422) (h:*label422)
  1154 label *label422
-    * label *label419
  1155 jump *label418 always
  1156 label *label420
-    * label *label408
  1157 return :meetTarget*retaddr
  1158 end
  1159 label *label23
 
  1161 op sub *tmp412 *tmp86 1
  1162 write *tmp412 bank1 511
  1163 op mul :second:result @second TIME_COMPRESS
-    * label *label424
  1164 op floor *tmp416 :second:result
  1165 op mul *tmp417 *tmp416 1000
  1166 op add *tmp418 :log:encodedId *tmp417
  1167 write *tmp418 bank1 *tmp412
-    * label *label423
  1168 return :log*retaddr
  1169 end
  1170 label *label24
 
  1172 setaddr :log*retaddr *label426 (h:*label426)
  1173 call *label23 *invalid :log*retval (m:*label426) (h:*label426)
  1174 label *label426
-    * label *label425
  1175 return :logBlock*retaddr
  1176 end
  1177 label *label25
 
  1181 call *label6 *invalid :moveTo.1*retval (m:*label428) (h:*label428)
  1182 label *label428
  1183 write "Building..." .display ".status3"
-    * label *label429
  1184 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1185 jump *label430 equal :buildBlockAt:building null
  1186 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1187 set :buildBlockAt*retval :buildBlockAt:building
  1188 jump *label427 always
  1189 label *label432
-    * label *label433
  1190 jump *label434 equal :buildBlockAt:skipError false
  1191 set :buildBlockAt*retval null
  1192 jump *label427 always
  1193 label *label434
-    * label *label435
  1194 set .ERROR "Cannot build at ("
  1195 stop
-    * label *label436
  1196 label *label430
-    * label *label431
  1197 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1198 wait 0.25
  1199 label *label437
 
  1202 set :buildBlockAt*retval null
  1203 jump *label427 always
  1204 label *label440
-    * label *label441
-    * label *label438
  1205 jump *label437 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label439
  1206 set :logBlock:block :buildBlockAt:block
  1207 setaddr :logBlock*retaddr *label442 (h:*label442)
  1208 call *label24 *invalid :logBlock*retval (m:*label442) (h:*label442)
 
  1232 call *label25 *invalid :buildBlockAt*retval (m:*label445) (h:*label445)
  1233 label *label445
  1234 set :buildBlock*retval :buildBlockAt*retval
-    * label *label443
  1235 return :buildBlock*retaddr
  1236 end
  1237 label *label27
 
  1242 label *label449
  1243 op add :findUnits:count :findUnits:count 1
  1244 ubind :findUnits:type
-    * label *label450
  1245 jump *label449 notEqual @unit :findUnits:firstUnit
-    * label *label451
  1246 label *label447
-    * label *label448
  1247 set :findUnits*retval :findUnits:count
-    * label *label446
  1248 return :findUnits*retaddr
  1249 end
  1250 label *label28
 
  1262 write null .display ".nextBlock"
  1263 write 0 .controller ".leadReserve"
  1264 write 0 .controller ".siliconReserve"
-    * label *label452
  1265 return :buildUnits*retaddr
  1266 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   271 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   272 label *label107
   273 sensor *tmp152 *tmp101 @totalPower
-    * jump *label108 greaterThanEq *tmp152 300
-    * jump *label106 always
+  274 jump *label106 lessThan *tmp152 300
   275 label *label108
   276 read *tmp39 *tmp136 ".monos"
   277 jump *label104 lessThan *tmp39 3
 
   471 jump *label181 always
   472 label *label183
   473 ubind @flare
-    * jump *label186 notEqual @unit null
-    * jump *label185 always
+  474 jump *label185 equal @unit null
   475 label *label186
   476 set :findFreeUnit:first_unit @unit
   477 label *label188
 
   532 label *label206
   533 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   534 read *tmp74 processor4 ".water1X"
-    * jump *label207 greaterThanEq *tmp74 0
-    * jump *label199 always
+  535 jump *label199 lessThan *tmp74 0
   536 label *label207
   537 set :meetTarget:block @water-extractor
   538 set :meetTarget:copper 30
 
   555 call *label25 *invalid :buildBlockAt*retval (m:*label211) (h:*label211)
   556 label *label211
   557 read *tmp76 processor4 ".water2X"
-    * jump *label212 greaterThanEq *tmp76 0
-    * jump *label199 always
+  558 jump *label199 lessThan *tmp76 0
   559 label *label212
   560 set :meetTarget:block @water-extractor
   561 set :meetTarget:copper 30
 
   794 op notEqual *tmp273 :mineOre:item null
   795 op notEqual *tmp274 :mineOre:item :mineOre:ore
   796 op land *tmp275 *tmp273 *tmp274
-    * jump *label286 equal *tmp275 false
-    * jump *label285 always
+  797 jump *label285 notEqual *tmp275 false
   798 label *label286
   799 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label288 lessThanEq @second :mineOre:stop
-    * jump *label285 always
+  800 jump *label285 greaterThan @second :mineOre:stop
   801 label *label288
   802 sensor *tmp279 @unit @totalItems
   803 jump *label283 lessThan *tmp279 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   272 label *label107
   273 sensor *tmp152 *tmp101 @totalPower
   274 jump *label106 lessThan *tmp152 300
-    * label *label108
   275 read *tmp39 *tmp136 ".monos"
   276 jump *label104 lessThan *tmp39 3
   277 label *label106
 
   471 label *label183
   472 ubind @flare
   473 jump *label185 equal @unit null
-    * label *label186
   474 set :findFreeUnit:first_unit @unit
   475 label *label188
   476 sensor *tmp205 @unit @controlled
 
   531 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   532 read *tmp74 processor4 ".water1X"
   533 jump *label199 lessThan *tmp74 0
-    * label *label207
   534 set :meetTarget:block @water-extractor
   535 set :meetTarget:copper 30
   536 set :meetTarget:lead 30
 
   553 label *label211
   554 read *tmp76 processor4 ".water2X"
   555 jump *label199 lessThan *tmp76 0
-    * label *label212
   556 set :meetTarget:block @water-extractor
   557 set :meetTarget:copper 30
   558 set :meetTarget:lead 30
 
   791 op notEqual *tmp274 :mineOre:item :mineOre:ore
   792 op land *tmp275 *tmp273 *tmp274
   793 jump *label285 notEqual *tmp275 false
-    * label *label286
   794 ucontrol mine :mineOre:x :mineOre:y
   795 jump *label285 greaterThan @second :mineOre:stop
-    * label *label288
   796 sensor *tmp279 @unit @totalItems
   797 jump *label283 lessThan *tmp279 :mineOre:amount
   798 label *label285

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   957 label *label350
   958 sensor *tmp345 .titaniumDrill @titanium
   959 jump *label351 greaterThanEq *tmp345 *tmp341
-    * jump *label353 notEqual :supplyBase0:supplied false
+  960 jump *label352 notEqual :supplyBase0:supplied false
   961 sensor *tmp350 .battery @totalPower
   962 op mul *tmp351 .unloader1 .powerTarget
   963 jump *label355 greaterThanEq *tmp350 *tmp351
 
   966 setaddr :mineOre.1*retaddr *label358 (h:*label358)
   967 call *label12 *invalid :mineOre.1*retval (m:*label358) (h:*label358)
   968 label *label358
-    * jump *label356 always
+  969 return :supplyBase0*retaddr
   970 label *label355
   971 sensor *tmp354 .core @silicon
   972 jump *label359 greaterThanEq *tmp354 .targetSilicon
 
   980 setaddr :mineOre.1*retaddr *label364 (h:*label364)
   981 call *label12 *invalid :mineOre.1*retval (m:*label364) (h:*label364)
   982 label *label364
-    * jump *label360 always
+  983 return :supplyBase0*retaddr
   984 label *label359
   985 sensor *tmp361 .core @copper
   986 jump *label365 greaterThanEq *tmp361 .targetCopper
 
   989 setaddr :mineOre.1*retaddr *label368 (h:*label368)
   990 call *label12 *invalid :mineOre.1*retval (m:*label368) (h:*label368)
   991 label *label368
-    * jump *label366 always
+  992 return :supplyBase0*retaddr
   993 label *label365
   994 sensor *tmp364 .core @lead
   995 jump *label369 greaterThanEq *tmp364 .targetLead
 
   998 setaddr :mineOre.1*retaddr *label372 (h:*label372)
   999 call *label12 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
  1000 label *label372
-    * jump *label370 always
+ 1001 return :supplyBase0*retaddr
  1002 label *label369
  1003 sensor *tmp367 .core @metaglass
  1004 jump *label373 greaterThanEq *tmp367 .targetMetaglass
 
  1007 setaddr :mineOre.1*retaddr *label376 (h:*label376)
  1008 call *label12 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
  1009 label *label376
-    * jump *label374 always
+ 1010 return :supplyBase0*retaddr
  1011 label *label373
  1012 write "Goal 10: supplying base" .display ".status1"
  1013 sensor :supplyBase0:coal.1 .core @coal
 
  1025 label *label360
  1026 label *label356
  1027 label *label353
-    * jump *label352 always
+ 1028 return :supplyBase0*retaddr
  1029 label *label351
  1030 write "Goal 11: Fetching titanium" .display ".status1"
  1031 set :fetchBlock:block .titaniumDrill
 
  1060 setaddr :supplyBase1*retaddr *label393 (h:*label393)
  1061 call *label19 *invalid :supplyBase1*retval (m:*label393) (h:*label393)
  1062 label *label393
-    * jump *label392 always
+ 1063 return :supplyBase*retaddr
  1064 label *label391
  1065 setaddr :supplyBase0*retaddr *label394 (h:*label394)
  1066 call *label18 *invalid :supplyBase0*retval (m:*label394) (h:*label394)
 
  1082 sensor *tmp397 .core @metaglass
  1083 jump *label406 lessThan *tmp397 .targetMetaglass
  1084 set :targetMet*retval true
-    * jump *label395 always
+ 1085 return :targetMet*retaddr
  1086 label *label406
  1087 label *label404
  1088 label *label402
 
  1090 label *label398
  1091 label *label396
  1092 set :targetMet*retval false
-    * jump *label395 always
+ 1093 return :targetMet*retaddr
  1094 label *label395
  1095 return :targetMet*retaddr
  1096 end
 
  1173 jump *label430 equal :buildBlockAt:building null
  1174 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1175 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label427 always
+ 1176 return :buildBlockAt*retaddr
  1177 label *label432
  1178 jump *label434 equal :buildBlockAt:skipError false
  1179 set :buildBlockAt*retval null
-    * jump *label427 always
+ 1180 return :buildBlockAt*retaddr
  1181 label *label434
  1182 set .ERROR "Cannot build at ("
  1183 stop
 
  1188 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1189 jump *label440 notEqual :buildBlockAt:building null
  1190 set :buildBlockAt*retval null
-    * jump *label427 always
+ 1191 return :buildBlockAt*retaddr
  1192 label *label440
  1193 jump *label437 notEqual :buildBlockAt:type :buildBlockAt:block
  1194 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-47 instructions):
 
    54 label *label40
    55 set *tmp97 :buildBlock*retval
    56 jump *label35 always
-    * multijump *tmp98 0 0 (m:marker0)
-    * multilabel *label39 (m:marker0)
    57 label *label35
    58 set .press *tmp97
    59 op add :buildBlockFromCfg.1:y .coreY 4
 
    67 label *label46
    68 set *tmp101 :buildBlock*retval
    69 jump *label41 always
-    * multijump *tmp102 0 0 (m:marker1)
-    * multilabel *label45 (m:marker1)
    70 label *label41
    71 set .battery *tmp101
    72 op add :buildBlockFromCfg.2:x .coreX -1
 
    76 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    77 label *label52
    78 jump *label47 always
-    * multijump *tmp106 0 0 (m:marker2)
-    * multilabel *label51 (m:marker2)
    79 label *label47
    80 op add :buildBlockFromCfg.3:y .coreY 3
    81 set :buildBlock:block @combustion-generator
 
    88 label *label58
    89 set *tmp109 :buildBlock*retval
    90 jump *label53 always
-    * multijump *tmp110 0 0 (m:marker3)
-    * multilabel *label57 (m:marker3)
    91 label *label53
    92 set .generator *tmp109
    93 set .powerTarget 400
 
   102 label *label64
   103 set *tmp113 :buildBlock*retval
   104 jump *label59 always
-    * multijump *tmp114 0 0 (m:marker4)
-    * multilabel *label63 (m:marker4)
   105 label *label59
   106 set .smelter *tmp113
   107 set :meetTarget:block @pneumatic-drill
 
   160 label *label78
   161 set *tmp132 :buildBlock*retval
   162 jump *label73 always
-    * multijump *tmp133 0 0 (m:marker5)
-    * multilabel *label77 (m:marker5)
   163 label *label73
   164 set .unloader1 *tmp132
   165 op add :buildBlockFromCfg.6:x .coreX 1
 
   176 label *label84
   177 set *tmp136 :buildBlock*retval
   178 jump *label79 always
-    * multijump *tmp137 0 0 (m:marker6)
-    * multilabel *label83 (m:marker6)
   179 label *label79
   180 set .controller *tmp136
   181 write processor1 *tmp136 ".display"
 
   201 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   202 label *label90
   203 jump *label85 always
-    * multijump *tmp141 0 0 (m:marker7)
-    * multilabel *label89 (m:marker7)
   204 label *label85
   205 set :buildBlock:block @unloader
   206 set :buildBlock:x :buildBlockFromCfg.7:x
 
   214 label *label96
   215 set *tmp144 :buildBlock*retval
   216 jump *label91 always
-    * multijump *tmp145 0 0 (m:marker8)
-    * multilabel *label95 (m:marker8)
   217 label *label91
   218 write *tmp144 *tmp136 ".unloader2"
   219 op add :buildBlockFromCfg.9:x .coreX -3
 
   232 label *label102
   233 set *tmp148 :buildBlock*retval
   234 jump *label97 always
-    * multijump *tmp149 0 0 (m:marker9)
-    * multilabel *label101 (m:marker9)
   235 label *label97
   236 write *tmp148 *tmp136 ".factory"
   237 write *tmp148 processor1 ".factory"
 
   272 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   273 label *label115
   274 jump *label110 always
-    * multijump *tmp157 0 0 (m:marker10)
-    * multilabel *label114 (m:marker10)
   275 label *label110
   276 set :buildBlock:block @junction
   277 set :buildBlock:x :buildBlockFromCfg.10:x
 
   283 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   284 label *label121
   285 jump *label116 always
-    * multijump *tmp161 0 0 (m:marker11)
-    * multilabel *label120 (m:marker11)
   286 label *label116
   287 op add :buildBlockFromCfg.12:x .coreX 3
   288 set :buildBlock:block @inverted-sorter
 
   295 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   296 label *label127
   297 jump *label122 always
-    * multijump *tmp165 0 0 (m:marker12)
-    * multilabel *label126 (m:marker12)
   298 label *label122
   299 op add :buildBlockFromCfg.13:x .coreX 3.5
   300 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   310 label *label133
   311 set *tmp168 :buildBlock*retval
   312 jump *label128 always
-    * multijump *tmp169 0 0 (m:marker13)
-    * multilabel *label132 (m:marker13)
   313 label *label128
   314 write *tmp168 *tmp136 ".kiln"
   315 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   323 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   324 label *label139
   325 jump *label134 always
-    * multijump *tmp173 0 0 (m:marker14)
-    * multilabel *label138 (m:marker14)
   326 label *label134
   327 set :buildBlock:block @overflow-gate
   328 set :buildBlock:x :buildBlockFromCfg.9:x
 
   335 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   336 label *label145
   337 jump *label140 always
-    * multijump *tmp177 0 0 (m:marker15)
-    * multilabel *label144 (m:marker15)
   338 label *label140
   339 set :buildBlock:block @steam-generator
   340 set :buildBlock:x :buildBlockFromCfg.14:x
 
   348 label *label151
   349 set *tmp180 :buildBlock*retval
   350 jump *label146 always
-    * multijump *tmp181 0 0 (m:marker16)
-    * multilabel *label150 (m:marker16)
   351 label *label146
   352 write *tmp180 *tmp136 ".generator2"
   353 set .graphiteSurplus 200
 
   364 label *label157
   365 set *tmp184 :buildBlock*retval
   366 jump *label152 always
-    * multijump *tmp185 0 0 (m:marker17)
-    * multilabel *label156 (m:marker17)
   367 label *label152
   368 write *tmp184 *tmp136 ".payloadRouter"
   369 set :buildBlock:block @unloader
 
   377 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   378 label *label163
   379 jump *label158 always
-    * multijump *tmp189 0 0 (m:marker18)
-    * multilabel *label162 (m:marker18)
   380 label *label158
   381 op add :buildBlockFromCfg.19:y .coreY -3
   382 set :buildBlock:block @underflow-gate
 
   390 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   391 label *label169
   392 jump *label164 always
-    * multijump *tmp193 0 0 (m:marker19)
-    * multilabel *label168 (m:marker19)
   393 label *label164
   394 set :buildBlock:block @additive-reconstructor
   395 set :buildBlock:x .coreX
 
   402 label *label175
   403 set *tmp196 :buildBlock*retval
   404 jump *label170 always
-    * multijump *tmp197 0 0 (m:marker20)
-    * multilabel *label174 (m:marker20)
   405 label *label170
   406 write *tmp196 *tmp136 ".reconstructor"
   407 write *tmp196 processor1 ".reconstructor"
 
   435 jump *label191 notEqual *tmp205 0
   436 ucontrol flag 0
   437 jump *label185 always
-    * jump *label192 always
   438 label *label191
   439 sensor *tmp208 :findFreeUnit:first_unit @dead
   440 jump *label193 notEqual *tmp208 1
 
   632 call *label20 *invalid :supplyBase*retval (m:*label237) (h:*label237)
   633 label *label237
   634 jump *label234 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   635 label *label5
   636 write "Moving..." .display ".status3"
   637 op sub *tmp241 :moveTo:radius 0.5
 
   642 jump *label242 always
   643 label *label244
   644 return :moveTo*retaddr
-    * end
   645 label *label6
   646 set :moveTo:x :moveTo.1:x
   647 set :moveTo:y :moveTo.1:y
 
   650 call *label5 *invalid :moveTo*retval (m:*label246) (h:*label246)
   651 label *label246
   652 return :moveTo.1*retaddr
-    * end
   653 label *label7
   654 write "Moving..." .display ".status3"
   655 label *label249
 
   661 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
   662 jump *label249 equal *tmp247 false
   663 return :moveToEmpty*retaddr
-    * end
   664 label *label8
   665 sensor *tmp249 :moveToBlock:block @x
   666 sensor *tmp250 :moveToBlock:block @y
 
   671 call *label5 *invalid :moveTo*retval (m:*label255) (h:*label255)
   672 label *label255
   673 return :moveToBlock*retaddr
-    * end
   674 label *label9
   675 write "Depositing..." .display ".status3"
   676 sensor *tmp251 @unit @firstItem
 
   699 write 0 .display ".transportTarget"
   700 write null .display ".transportItem"
   701 return :depositItems*retaddr
-    * end
   702 label *label10
   703 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
   704 jump *label269 notEqual *tmp261 false
 
   706 stop
   707 label *label269
   708 return :locateOre*retaddr
-    * end
   709 label *label11
   710 op min :mineOre:amount :mineOre:amount 30
   711 write :mineOre:amount .display ".transportTarget"
 
   750 call *label9 *invalid :depositItems*retval (m:*label290) (h:*label290)
   751 label *label290
   752 return :mineOre*retaddr
-    * end
   753 label *label12
   754 write "Mining " .display ".status2"
   755 write :mineOre.1:ore .display ".item2"
 
   761 call *label11 *invalid :mineOre*retval (m:*label293) (h:*label293)
   762 label *label293
   763 return :mineOre.1*retaddr
-    * end
   764 label *label13
   765 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   766 write :transportStatus.2:target .display ".transportTarget"
 
   801 call *label9 *invalid :depositItems*retval (m:*label307) (h:*label307)
   802 label *label307
   803 return :fetchBlock*retaddr
-    * end
   804 label *label18
   805 set :supplyBase0:supplied false
   806 jump *label309 notEqual .unloader1 null
 
   963 setaddr :mineOre.1*retaddr *label380 (h:*label380)
   964 call *label12 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
   965 label *label380
-    * label *label374
-    * label *label370
-    * label *label366
-    * label *label360
-    * label *label356
-    * label *label353
   966 return :supplyBase0*retaddr
   967 label *label351
   968 write "Goal 11: Fetching titanium" .display ".status1"
 
   973 label *label382
   974 label *label352
   975 return :supplyBase0*retaddr
-    * end
   976 label *label19
   977 write "Phase 1: supplying base" .display ".status1"
   978 set :mineOre.1:ore @coal
 
   980 call *label12 *invalid :mineOre.1*retval (m:*label385) (h:*label385)
   981 label *label385
   982 return :supplyBase1*retaddr
-    * end
   983 label *label20
   984 jump *label387 notEqual .flareControllerStarted false
   985 read *tmp38 .controller ".flares"
 
  1001 setaddr :supplyBase0*retaddr *label394 (h:*label394)
  1002 call *label18 *invalid :supplyBase0*retval (m:*label394) (h:*label394)
  1003 label *label394
-    * label *label392
  1004 return :supplyBase*retaddr
-    * end
  1005 label *label21
  1006 sensor *tmp382 .core @copper
  1007 jump *label396 lessThan *tmp382 .targetCopper
 
  1025 label *label396
  1026 set :targetMet*retval false
  1027 return :targetMet*retaddr
-    * label *label395
-    * return :targetMet*retaddr
-    * end
  1028 label *label22
  1029 op sign :meetTarget:count :meetTarget:copper
  1030 op sign *tmp401 :meetTarget:lead
 
  1074 jump *label418 always
  1075 label *label420
  1076 return :meetTarget*retaddr
-    * end
  1077 label *label23
  1078 read *tmp86 bank1 511
  1079 op sub *tmp412 *tmp86 1
 
  1084 op add *tmp418 :log:encodedId *tmp417
  1085 write *tmp418 bank1 *tmp412
  1086 return :log*retaddr
-    * end
  1087 label *label24
  1088 sensor :log:encodedId :logBlock:block @id
  1089 setaddr :log*retaddr *label426 (h:*label426)
  1090 call *label23 *invalid :log*retval (m:*label426) (h:*label426)
  1091 label *label426
  1092 return :logBlock*retaddr
-    * end
  1093 label *label25
  1094 set :moveTo.1:x :buildBlockAt:x
  1095 set :moveTo.1:y :buildBlockAt:y
 
  1124 call *label24 *invalid :logBlock*retval (m:*label442) (h:*label442)
  1125 label *label442
  1126 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label427
  1127 return :buildBlockAt*retaddr
-    * end
  1128 label *label26
  1129 set :meetTarget:block :buildBlock:block
  1130 set :meetTarget:copper :buildBlock:copper
 
  1147 label *label445
  1148 set :buildBlock*retval :buildBlockAt*retval
  1149 return :buildBlock*retaddr
-    * end
  1150 label *label27
  1151 set :findUnits:count 0
  1152 ubind :findUnits:type
 
  1159 label *label447
  1160 set :findUnits*retval :findUnits:count
  1161 return :findUnits*retaddr
-    * end
  1162 label *label28
  1163 set :meetTarget:block 0
  1164 set :meetTarget:copper 0
 
  1175 write 0 .controller ".leadReserve"
  1176 write 0 .controller ".siliconReserve"
  1177 return :buildUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   440 jump *label193 notEqual *tmp208 1
   441 set :findFreeUnit:first_unit @unit
   442 label *label193
-    * label *label192
   443 ubind @flare
   444 jump *label188 notEqual :findFreeUnit:first_unit @unit
   445 label *label185

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-21 instructions):
 
    53 call *label26 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    54 label *label40
    55 set *tmp97 :buildBlock*retval
-    * jump *label35 always
    56 label *label35
    57 set .press *tmp97
    58 op add :buildBlockFromCfg.1:y .coreY 4
 
    65 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    66 label *label46
    67 set *tmp101 :buildBlock*retval
-    * jump *label41 always
    68 label *label41
    69 set .battery *tmp101
    70 op add :buildBlockFromCfg.2:x .coreX -1
 
    73 setaddr :buildBlock*retaddr *label52 (h:*label52)
    74 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    75 label *label52
-    * jump *label47 always
    76 label *label47
    77 op add :buildBlockFromCfg.3:y .coreY 3
    78 set :buildBlock:block @combustion-generator
 
    84 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    85 label *label58
    86 set *tmp109 :buildBlock*retval
-    * jump *label53 always
    87 label *label53
    88 set .generator *tmp109
    89 set .powerTarget 400
 
    97 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    98 label *label64
    99 set *tmp113 :buildBlock*retval
-    * jump *label59 always
   100 label *label59
   101 set .smelter *tmp113
   102 set :meetTarget:block @pneumatic-drill
 
   154 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   155 label *label78
   156 set *tmp132 :buildBlock*retval
-    * jump *label73 always
   157 label *label73
   158 set .unloader1 *tmp132
   159 op add :buildBlockFromCfg.6:x .coreX 1
 
   169 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   170 label *label84
   171 set *tmp136 :buildBlock*retval
-    * jump *label79 always
   172 label *label79
   173 set .controller *tmp136
   174 write processor1 *tmp136 ".display"
 
   193 setaddr :buildBlock*retaddr *label90 (h:*label90)
   194 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   195 label *label90
-    * jump *label85 always
   196 label *label85
   197 set :buildBlock:block @unloader
   198 set :buildBlock:x :buildBlockFromCfg.7:x
 
   205 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   206 label *label96
   207 set *tmp144 :buildBlock*retval
-    * jump *label91 always
   208 label *label91
   209 write *tmp144 *tmp136 ".unloader2"
   210 op add :buildBlockFromCfg.9:x .coreX -3
 
   222 call *label26 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   223 label *label102
   224 set *tmp148 :buildBlock*retval
-    * jump *label97 always
   225 label *label97
   226 write *tmp148 *tmp136 ".factory"
   227 write *tmp148 processor1 ".factory"
 
   261 setaddr :buildBlock*retaddr *label115 (h:*label115)
   262 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   263 label *label115
-    * jump *label110 always
   264 label *label110
   265 set :buildBlock:block @junction
   266 set :buildBlock:x :buildBlockFromCfg.10:x
 
   271 setaddr :buildBlock*retaddr *label121 (h:*label121)
   272 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   273 label *label121
-    * jump *label116 always
   274 label *label116
   275 op add :buildBlockFromCfg.12:x .coreX 3
   276 set :buildBlock:block @inverted-sorter
 
   282 setaddr :buildBlock*retaddr *label127 (h:*label127)
   283 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   284 label *label127
-    * jump *label122 always
   285 label *label122
   286 op add :buildBlockFromCfg.13:x .coreX 3.5
   287 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   296 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   297 label *label133
   298 set *tmp168 :buildBlock*retval
-    * jump *label128 always
   299 label *label128
   300 write *tmp168 *tmp136 ".kiln"
   301 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   308 setaddr :buildBlock*retaddr *label139 (h:*label139)
   309 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   310 label *label139
-    * jump *label134 always
   311 label *label134
   312 set :buildBlock:block @overflow-gate
   313 set :buildBlock:x :buildBlockFromCfg.9:x
 
   319 setaddr :buildBlock*retaddr *label145 (h:*label145)
   320 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   321 label *label145
-    * jump *label140 always
   322 label *label140
   323 set :buildBlock:block @steam-generator
   324 set :buildBlock:x :buildBlockFromCfg.14:x
 
   331 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   332 label *label151
   333 set *tmp180 :buildBlock*retval
-    * jump *label146 always
   334 label *label146
   335 write *tmp180 *tmp136 ".generator2"
   336 set .graphiteSurplus 200
 
   346 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   347 label *label157
   348 set *tmp184 :buildBlock*retval
-    * jump *label152 always
   349 label *label152
   350 write *tmp184 *tmp136 ".payloadRouter"
   351 set :buildBlock:block @unloader
 
   358 setaddr :buildBlock*retaddr *label163 (h:*label163)
   359 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   360 label *label163
-    * jump *label158 always
   361 label *label158
   362 op add :buildBlockFromCfg.19:y .coreY -3
   363 set :buildBlock:block @underflow-gate
 
   370 setaddr :buildBlock*retaddr *label169 (h:*label169)
   371 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   372 label *label169
-    * jump *label164 always
   373 label *label164
   374 set :buildBlock:block @additive-reconstructor
   375 set :buildBlock:x .coreX
 
   381 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   382 label *label175
   383 set *tmp196 :buildBlock*retval
-    * jump *label170 always
   384 label *label170
   385 write *tmp196 *tmp136 ".reconstructor"
   386 write *tmp196 processor1 ".reconstructor"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    53 call *label26 *invalid :buildBlock*retval (m:*label40) (h:*label40)
    54 label *label40
    55 set *tmp97 :buildBlock*retval
-    * label *label35
    56 set .press *tmp97
    57 op add :buildBlockFromCfg.1:y .coreY 4
    58 set :buildBlock:block @battery
 
    64 call *label26 *invalid :buildBlock*retval (m:*label46) (h:*label46)
    65 label *label46
    66 set *tmp101 :buildBlock*retval
-    * label *label41
    67 set .battery *tmp101
    68 op add :buildBlockFromCfg.2:x .coreX -1
    69 set :buildBlock:x :buildBlockFromCfg.2:x
 
    71 setaddr :buildBlock*retaddr *label52 (h:*label52)
    72 call *label26 *invalid :buildBlock*retval (m:*label52) (h:*label52)
    73 label *label52
-    * label *label47
    74 op add :buildBlockFromCfg.3:y .coreY 3
    75 set :buildBlock:block @combustion-generator
    76 set :buildBlock:x .coreX
 
    81 call *label26 *invalid :buildBlock*retval (m:*label58) (h:*label58)
    82 label *label58
    83 set *tmp109 :buildBlock*retval
-    * label *label53
    84 set .generator *tmp109
    85 set .powerTarget 400
    86 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    93 call *label26 *invalid :buildBlock*retval (m:*label64) (h:*label64)
    94 label *label64
    95 set *tmp113 :buildBlock*retval
-    * label *label59
    96 set .smelter *tmp113
    97 set :meetTarget:block @pneumatic-drill
    98 set :meetTarget:copper 18
 
   149 call *label26 *invalid :buildBlock*retval (m:*label78) (h:*label78)
   150 label *label78
   151 set *tmp132 :buildBlock*retval
-    * label *label73
   152 set .unloader1 *tmp132
   153 op add :buildBlockFromCfg.6:x .coreX 1
   154 set :buildBlock:block @micro-processor
 
   163 call *label26 *invalid :buildBlock*retval (m:*label84) (h:*label84)
   164 label *label84
   165 set *tmp136 :buildBlock*retval
-    * label *label79
   166 set .controller *tmp136
   167 write processor1 *tmp136 ".display"
   168 write .core *tmp136 ".core"
 
   186 setaddr :buildBlock*retaddr *label90 (h:*label90)
   187 call *label26 *invalid :buildBlock*retval (m:*label90) (h:*label90)
   188 label *label90
-    * label *label85
   189 set :buildBlock:block @unloader
   190 set :buildBlock:x :buildBlockFromCfg.7:x
   191 set :buildBlock:y .coreY
 
   197 call *label26 *invalid :buildBlock*retval (m:*label96) (h:*label96)
   198 label *label96
   199 set *tmp144 :buildBlock*retval
-    * label *label91
   200 write *tmp144 *tmp136 ".unloader2"
   201 op add :buildBlockFromCfg.9:x .coreX -3
   202 op add :buildBlockFromCfg.9:y .coreY -2
 
   213 call *label26 *invalid :buildBlock*retval (m:*label102) (h:*label102)
   214 label *label102
   215 set *tmp148 :buildBlock*retval
-    * label *label97
   216 write *tmp148 *tmp136 ".factory"
   217 write *tmp148 processor1 ".factory"
   218 write 1 *tmp136 ".flareTarget"
 
   251 setaddr :buildBlock*retaddr *label115 (h:*label115)
   252 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   253 label *label115
-    * label *label110
   254 set :buildBlock:block @junction
   255 set :buildBlock:x :buildBlockFromCfg.10:x
   256 set :buildBlock:y .coreY
 
   260 setaddr :buildBlock*retaddr *label121 (h:*label121)
   261 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   262 label *label121
-    * label *label116
   263 op add :buildBlockFromCfg.12:x .coreX 3
   264 set :buildBlock:block @inverted-sorter
   265 set :buildBlock:x :buildBlockFromCfg.12:x
 
   270 setaddr :buildBlock*retaddr *label127 (h:*label127)
   271 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   272 label *label127
-    * label *label122
   273 op add :buildBlockFromCfg.13:x .coreX 3.5
   274 op add :buildBlockFromCfg.13:y .coreY 1.5
   275 set :buildBlock:block @kiln
 
   283 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   284 label *label133
   285 set *tmp168 :buildBlock*retval
-    * label *label128
   286 write *tmp168 *tmp136 ".kiln"
   287 op add :buildBlockFromCfg.14:x .coreX -3.5
   288 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   294 setaddr :buildBlock*retaddr *label139 (h:*label139)
   295 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   296 label *label139
-    * label *label134
   297 set :buildBlock:block @overflow-gate
   298 set :buildBlock:x :buildBlockFromCfg.9:x
   299 set :buildBlock:y .coreY
 
   304 setaddr :buildBlock*retaddr *label145 (h:*label145)
   305 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   306 label *label145
-    * label *label140
   307 set :buildBlock:block @steam-generator
   308 set :buildBlock:x :buildBlockFromCfg.14:x
   309 set :buildBlock:y :buildBlockFromCfg.13:y
 
   315 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   316 label *label151
   317 set *tmp180 :buildBlock*retval
-    * label *label146
   318 write *tmp180 *tmp136 ".generator2"
   319 set .graphiteSurplus 200
   320 op add :buildBlockFromCfg.17:y .coreY -5
 
   329 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   330 label *label157
   331 set *tmp184 :buildBlock*retval
-    * label *label152
   332 write *tmp184 *tmp136 ".payloadRouter"
   333 set :buildBlock:block @unloader
   334 set :buildBlock:x .coreX
 
   340 setaddr :buildBlock*retaddr *label163 (h:*label163)
   341 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   342 label *label163
-    * label *label158
   343 op add :buildBlockFromCfg.19:y .coreY -3
   344 set :buildBlock:block @underflow-gate
   345 set :buildBlock:x .coreX
 
   351 setaddr :buildBlock*retaddr *label169 (h:*label169)
   352 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   353 label *label169
-    * label *label164
   354 set :buildBlock:block @additive-reconstructor
   355 set :buildBlock:x .coreX
   356 set :buildBlock:y :buildBlockFromCfg.17:y
 
   361 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   362 label *label175
   363 set *tmp196 :buildBlock*retval
-    * label *label170
   364 write *tmp196 *tmp136 ".reconstructor"
   365 write *tmp196 processor1 ".reconstructor"
   366 setaddr :buildUnits*retaddr *label176 (h:*label176)

Final code before resolving virtual instructions:

    0:  jump *label479 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 TIME_COMPRESS
    2:  draw triangle .ERROR .battery .builder .controller .core .coreX
    3:  draw triangle .coreY .display .flareController .flareControllerStarted .generator .graphiteSurplus
    4:  draw triangle .leadSurplus .metaglassSurplus .powerTarget .press .siliconSurplus .smelter
    5:  draw triangle .targetCopper .targetGraphite .targetLead .targetMetaglass .targetSilicon .targetTitanium
    6:  draw triangle .titaniumDrill .unloader1 :flares :monos :polys :buildBlock:block
    7:  draw triangle :buildBlock:config :buildBlock:copper :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation
    8:  draw triangle :buildBlock:silicon :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockAt:block :buildBlockAt:building
    9:  draw triangle :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y
   10:  draw triangle :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x :buildBlockFromCfg.9:x :buildBlockFromCfg.13:x :buildBlockFromCfg.4:x
   11:  draw triangle :buildBlockFromCfg.12:x :buildBlockFromCfg.7:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y :buildBlockFromCfg.5:y
   12:  draw triangle :buildBlockFromCfg.1:y :buildBlockFromCfg.9:y :buildBlockFromCfg:y :buildBlockFromCfg.13:y :buildBlockFromCfg.17:y :buildBlockFromCfg.3:y
   13:  draw triangle :buildBlockFromCfg.7:y :buildBlockFromCfg.19:y :buildThoriumDrill:result :buildThoriumDrill:thoriumDrill :buildThoriumDrill:thoriumGenerator :buildTitaniumDrill:dx
   14:  draw triangle :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item :fetchBlock:block
   15:  draw triangle :fetchBlock:item :fetchBlock:unitItem :findFreeUnit:first_unit :findUnits:count :findUnits:firstUnit :findUnits:type
   16:  draw triangle :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block :meetTarget:block
   17:  draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
   18:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore
   19:  draw triangle :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x
   20:  draw triangle :moveTo.1:y :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y
   21:  draw triangle :second:result :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied
   22:  draw triangle :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing
   23:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing :transportStatus.2:target 0 0 0
        label *label479
   24:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   25:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   33:  set .graphiteSurplus 20                                      ...
   34:  set .siliconSurplus 20                                       ...
   35:  set .metaglassSurplus 20                                     ...
   36:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   37:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label29                                               CoreBuilder.mnd: do
   38:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   39:  set .builder @unit                                           ...
   40:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   41:  jump *label29 equal .core null                               CoreBuilder.mnd: do
   42:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   43:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   44:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.displayFlares);
   45:  setaddr :findUnits*retaddr *label32                          ...
   46:  call *label27 *invalid :findUnits*retval                     ...
        label *label32                                               ...
   47:  write :findUnits:count processor1 ".displayFlares"           ...
   48:  set :flares :findUnits*retval                                ...
   49:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.displayMonos);
   50:  setaddr :findUnits*retaddr *label33                          ...
   51:  call *label27 *invalid :findUnits*retval                     ...
        label *label33                                               ...
   52:  write :findUnits:count processor1 ".displayMonos"            ...
   53:  set :monos :findUnits*retval                                 ...
   54:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.displayPolys);
   55:  setaddr :findUnits*retaddr *label34                          ...
   56:  call *label27 *invalid :findUnits*retval                     ...
        label *label34                                               ...
   57:  write :findUnits:count processor1 ".displayPolys"            ...
   58:  set :polys :findUnits*retval                                 ...
   59:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   60:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   61:  set :buildBlock:block @graphite-press                        ...
   62:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   63:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   64:  set :buildBlock:copper 75                                    ...
   65:  set :buildBlock:lead 30                                      ...
   66:  set :buildBlock:graphite 0                                   ...
   67:  set :buildBlock:silicon 0                                    ...
   68:  set :buildBlock:titanium 0                                   ...
   69:  set :buildBlock:metaglass 0                                  ...
   70:  set :buildBlock:rotation 0                                   ...
   71:  set :buildBlock:config null                                  ...
   72:  setaddr :buildBlock*retaddr *label40                         ...
   73:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label40                                               ...
   74:  set *tmp97 :buildBlock*retval                                ...
   75:  set .press *tmp97                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   76:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   77:  set :buildBlock:block @battery                               ...
   78:  set :buildBlock:x .coreX                                     ...
   79:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   80:  set :buildBlock:copper 5                                     ...
   81:  set :buildBlock:lead 20                                      ...
   82:  setaddr :buildBlock*retaddr *label46                         ...
   83:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label46                                               ...
   84:  set *tmp101 :buildBlock*retval                               ...
   85:  set .battery *tmp101                                         CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   86:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   87:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   88:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   89:  setaddr :buildBlock*retaddr *label52                         ...
   90:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label52                                               ...
   91:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   92:  set :buildBlock:block @combustion-generator                  ...
   93:  set :buildBlock:x .coreX                                     ...
   94:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   95:  set :buildBlock:copper 25                                    ...
   96:  set :buildBlock:lead 15                                      ...
   97:  setaddr :buildBlock*retaddr *label58                         ...
   98:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label58                                               ...
   99:  set *tmp109 :buildBlock*retval                               ...
  100:  set .generator *tmp109                                       CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
  101:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
  102:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  103:  set :buildBlock:block @silicon-smelter                       ...
  104:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  105:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  106:  set :buildBlock:copper 30                                    ...
  107:  set :buildBlock:lead 25                                      ...
  108:  setaddr :buildBlock*retaddr *label64                         ...
  109:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label64                                               ...
  110:  set *tmp113 :buildBlock*retval                               ...
  111:  set .smelter *tmp113                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  112:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  113:  set :meetTarget:copper 18                                    ...
  114:  set :meetTarget:lead 0                                       ...
  115:  set :meetTarget:graphite 10                                  ...
  116:  set :meetTarget:silicon 0                                    ...
  117:  set :meetTarget:titanium 0                                   ...
  118:  set :meetTarget:metaglass 0                                  ...
  119:  setaddr :meetTarget*retaddr *label67                         ...
  120:  call *label22 *invalid :meetTarget*retval                    ...
        label *label67                                               ...
  121:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  122:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  123:  write .coreY processor4 ":findDrillLocation:y"               ...
  124:  write @unit processor4 ":findDrillLocation:unit"             ...
  125:  write @titanium processor4 ":findDrillLocation:item"         ...
  126:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  127:  write false processor4 ":findDrillLocation:large"            ...
  128:  write 4 processor4 ":findDrillLocation:limit"                ...
  129:  write false processor4 ":findDrillLocation*finished"         ...
  130:  write 1 processor4 "@counter"                                ...
        label *label68                                               ...
  131:  wait 1e-15                                                   ...
  132:  read *tmp128 processor4 ":findDrillLocation*finished"        ...
  133:  jump *label68 equal *tmp128 false                            ...
  134:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  135:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  136:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  137:  jump *label69 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  138:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  139:  stop                                                         Actions.mnd: stopProcessor();
        label *label69                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  140:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  141:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  142:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  143:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  144:  set :buildBlockAt:rotation null                              ...
  145:  set :buildBlockAt:config 0                                   ...
  146:  set :buildBlockAt:skipError false                            ...
  147:  setaddr :buildBlockAt*retaddr *label72                       ...
  148:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label72                                               ...
  149:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  150:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  151:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  152:  set :buildBlock:block @unloader                              ...
  153:  set :buildBlock:x .coreX                                     ...
  154:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  155:  set :buildBlock:copper 0                                     ...
  156:  set :buildBlock:lead 0                                       ...
  157:  set :buildBlock:silicon 30                                   ...
  158:  set :buildBlock:titanium 25                                  ...
  159:  setaddr :buildBlock*retaddr *label78                         ...
  160:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label78                                               ...
  161:  set *tmp132 :buildBlock*retval                               ...
  162:  set .unloader1 *tmp132                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  163:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  164:  set :buildBlock:block @micro-processor                       ...
  165:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  166:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  167:  set :buildBlock:copper 90                                    ...
  168:  set :buildBlock:lead 50                                      ...
  169:  set :buildBlock:silicon 50                                   ...
  170:  set :buildBlock:titanium 0                                   ...
  171:  setaddr :buildBlock*retaddr *label84                         ...
  172:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  173:  call *label26 *invalid :buildBlock*retval                    ...
        label *label84                                               ...
  174:  set *tmp136 :buildBlock*retval                               ...
  175:  set .controller *tmp136                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  176:  write processor1 *tmp136 ".display"                          CoreBuilder.mnd: controller.display = display;
  177:  write .core *tmp136 ".core"                                  CoreBuilder.mnd: controller.core = core;
  178:  write bank1 *tmp136 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  179:  write *tmp101 *tmp136 ".battery"                             CoreBuilder.mnd: controller.battery = battery;
  180:  write *tmp109 *tmp136 ".generator"                           CoreBuilder.mnd: controller.generator = generator;
  181:  write *tmp113 *tmp136 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  182:  write *tmp97 *tmp136 ".press"                                CoreBuilder.mnd: controller.press = press;
  183:  write :monos *tmp136 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  184:  write :flares *tmp136 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  185:  write :polys *tmp136 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  186:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  187:  op add :buildBlockFromCfg.7:y .coreY 1                       ...
  188:  set :buildBlock:block @power-node                            ...
  189:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  190:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  191:  set :buildBlock:copper 2                                     ...
  192:  set :buildBlock:lead 6                                       ...
  193:  set :buildBlock:silicon 0                                    ...
  194:  set :buildBlock:config null                                  ...
  195:  setaddr :buildBlock*retaddr *label90                         ...
  196:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label90                                               ...
  197:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  198:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  199:  set :buildBlock:y .coreY                                     ...
  200:  set :buildBlock:copper 0                                     ...
  201:  set :buildBlock:lead 0                                       ...
  202:  set :buildBlock:silicon 30                                   ...
  203:  set :buildBlock:titanium 25                                  ...
  204:  setaddr :buildBlock*retaddr *label96                         ...
  205:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label96                                               ...
  206:  set *tmp144 :buildBlock*retval                               ...
  207:  write *tmp144 *tmp136 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(ref UNLOADER2);
  208:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  209:  op add :buildBlockFromCfg.9:y .coreY -2                      ...
  210:  set :buildBlock:block @air-factory                           ...
  211:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  212:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  213:  set :buildBlock:copper 60                                    ...
  214:  set :buildBlock:lead 70                                      ...
  215:  set :buildBlock:silicon 0                                    ...
  216:  set :buildBlock:titanium 0                                   ...
  217:  set :buildBlock:rotation 3                                   ...
  218:  set :buildBlock:config @mono                                 ...
  219:  setaddr :buildBlock*retaddr *label102                        ...
  220:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label102                                              ...
  221:  set *tmp148 :buildBlock*retval                               ...
  222:  write *tmp148 *tmp136 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  223:  write *tmp148 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  224:  write 1 *tmp136 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 1;
  225:  write 3 *tmp136 ".monoTarget"                                CoreBuilder.mnd: controller.monoTarget = 3;
  226:  write 0 *tmp136 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 0;
  227:  write 85 *tmp136 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  228:  write 150 *tmp136 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  229:  write 30 *tmp136 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  230:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  231:  set .siliconSurplus 20                                       ...
  232:  setaddr :buildUnits*retaddr *label103                        CoreBuilder.mnd: buildUnits();
  233:  call *label28 *invalid :buildUnits*retval                    ...
        label *label103                                              ...
        label *label104                                              CoreBuilder.mnd: do
  234:  setaddr :supplyBase*retaddr *label107                        CoreBuilder.mnd: supplyBase();
  235:  call *label20 *invalid :supplyBase*retval                    ...
        label *label107                                              ...
  236:  sensor *tmp152 *tmp101 @totalPower                           CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  237:  jump *label106 lessThan *tmp152 300                          ...
  238:  read *tmp39 *tmp136 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  239:  jump *label104 lessThan *tmp39 3                             CoreBuilder.mnd: do
        label *label106                                              ...
  240:  set .graphiteSurplus 60                                      CoreBuilder.mnd: graphiteSurplus = 60;
  241:  set .siliconSurplus 100                                      CoreBuilder.mnd: siliconSurplus = 100;
  242:  set .metaglassSurplus 60                                     CoreBuilder.mnd: metaglassSurplus = 60;
  243:  op add :buildBlockFromCfg.10:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  244:  set :buildBlock:block @unloader                              ...
  245:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  246:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  247:  set :buildBlock:copper 0                                     ...
  248:  set :buildBlock:lead 0                                       ...
  249:  set :buildBlock:silicon 30                                   ...
  250:  set :buildBlock:titanium 25                                  ...
  251:  set :buildBlock:rotation 0                                   ...
  252:  set :buildBlock:config null                                  ...
  253:  setaddr :buildBlock*retaddr *label115                        ...
  254:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label115                                              ...
  255:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  256:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  257:  set :buildBlock:y .coreY                                     ...
  258:  set :buildBlock:copper 3                                     ...
  259:  set :buildBlock:silicon 0                                    ...
  260:  set :buildBlock:titanium 0                                   ...
  261:  setaddr :buildBlock*retaddr *label121                        ...
  262:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label121                                              ...
  263:  op add :buildBlockFromCfg.12:x .coreX 3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  264:  set :buildBlock:block @inverted-sorter                       ...
  265:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  266:  set :buildBlock:y .coreY                                     ...
  267:  set :buildBlock:copper 2                                     ...
  268:  set :buildBlock:lead 2                                       ...
  269:  set :buildBlock:config @metaglass                            ...
  270:  setaddr :buildBlock*retaddr *label127                        ...
  271:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  272:  op add :buildBlockFromCfg.13:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  273:  op add :buildBlockFromCfg.13:y .coreY 1.5                    ...
  274:  set :buildBlock:block @kiln                                  ...
  275:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  276:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  277:  set :buildBlock:copper 60                                    ...
  278:  set :buildBlock:lead 30                                      ...
  279:  set :buildBlock:graphite 30                                  ...
  280:  set :buildBlock:config null                                  ...
  281:  setaddr :buildBlock*retaddr *label133                        ...
  282:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  283:  set *tmp168 :buildBlock*retval                               ...
  284:  write *tmp168 *tmp136 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  285:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  286:  op add :buildBlockFromCfg.14:y .coreY 3.5                    ...
  287:  set :buildBlock:block @water-extractor                       ...
  288:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  289:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  290:  set :buildBlock:copper 30                                    ...
  291:  set :buildBlock:metaglass 30                                 ...
  292:  setaddr :buildBlock*retaddr *label139                        ...
  293:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  294:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  295:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  296:  set :buildBlock:y .coreY                                     ...
  297:  set :buildBlock:copper 4                                     ...
  298:  set :buildBlock:lead 2                                       ...
  299:  set :buildBlock:graphite 0                                   ...
  300:  set :buildBlock:metaglass 0                                  ...
  301:  setaddr :buildBlock*retaddr *label145                        ...
  302:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label145                                              ...
  303:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  304:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  305:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  306:  set :buildBlock:copper 35                                    ...
  307:  set :buildBlock:lead 40                                      ...
  308:  set :buildBlock:graphite 25                                  ...
  309:  set :buildBlock:silicon 30                                   ...
  310:  setaddr :buildBlock*retaddr *label151                        ...
  311:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label151                                              ...
  312:  set *tmp180 :buildBlock*retval                               ...
  313:  write *tmp180 *tmp136 ".generator2"                          CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(ref STEAM_GEN);
  314:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  315:  op add :buildBlockFromCfg.17:y .coreY -5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  316:  set :buildBlock:block @payload-router                        ...
  317:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  318:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  319:  set :buildBlock:copper 10                                    ...
  320:  set :buildBlock:lead 0                                       ...
  321:  set :buildBlock:graphite 15                                  ...
  322:  set :buildBlock:silicon 0                                    ...
  323:  setaddr :buildBlock*retaddr *label157                        ...
  324:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label157                                              ...
  325:  set *tmp184 :buildBlock*retval                               ...
  326:  write *tmp184 *tmp136 ".payloadRouter"                       CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(ref PAYLOAD_ROUTER);
  327:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  328:  set :buildBlock:x .coreX                                     ...
  329:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  330:  set :buildBlock:copper 0                                     ...
  331:  set :buildBlock:graphite 0                                   ...
  332:  set :buildBlock:silicon 30                                   ...
  333:  set :buildBlock:titanium 25                                  ...
  334:  setaddr :buildBlock*retaddr *label163                        ...
  335:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label163                                              ...
  336:  op add :buildBlockFromCfg.19:y .coreY -3                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  337:  set :buildBlock:block @underflow-gate                        ...
  338:  set :buildBlock:x .coreX                                     ...
  339:  set :buildBlock:y :buildBlockFromCfg.19:y                    ...
  340:  set :buildBlock:copper 4                                     ...
  341:  set :buildBlock:lead 2                                       ...
  342:  set :buildBlock:silicon 0                                    ...
  343:  set :buildBlock:titanium 0                                   ...
  344:  setaddr :buildBlock*retaddr *label169                        ...
  345:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label169                                              ...
  346:  set :buildBlock:block @additive-reconstructor                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  347:  set :buildBlock:x .coreX                                     ...
  348:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  349:  set :buildBlock:copper 200                                   ...
  350:  set :buildBlock:lead 120                                     ...
  351:  set :buildBlock:silicon 90                                   ...
  352:  setaddr :buildBlock*retaddr *label175                        ...
  353:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label175                                              ...
  354:  set *tmp196 :buildBlock*retval                               ...
  355:  write *tmp196 *tmp136 ".reconstructor"                       CoreBuilder.mnd: controller.reconstructor = reconstructor;
  356:  write *tmp196 processor1 ".reconstructor"                    CoreBuilder.mnd: display.reconstructor = reconstructor;
  357:  setaddr :buildUnits*retaddr *label176                        CoreBuilder.mnd: buildUnits();
  358:  call *label28 *invalid :buildUnits*retval                    ...
        label *label176                                              ...
  359:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  360:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  361:  write 3 *tmp136 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 3;
        label *label177                                              CoreBuilder.mnd: while controller.polys < 3 do
  362:  read *tmp40 *tmp136 ".polys"                                 ...
  363:  jump *label179 greaterThanEq *tmp40 3                        ...
  364:  setaddr :supplyBase*retaddr *label180                        CoreBuilder.mnd: supplyBase();
  365:  call *label20 *invalid :supplyBase*retval                    ...
        label *label180                                              ...
  366:  jump *label177 always 0 0                                    CoreBuilder.mnd: while controller.polys < 3 do
        label *label179                                              ...
        label *label181                                              CoreBuilder.mnd: while controller.flares < 1 do
  367:  read *tmp38 *tmp136 ".flares"                                ...
  368:  jump *label183 greaterThanEq *tmp38 1                        ...
  369:  setaddr :supplyBase*retaddr *label184                        CoreBuilder.mnd: supplyBase();
  370:  call *label20 *invalid :supplyBase*retval                    ...
        label *label184                                              ...
  371:  jump *label181 always 0 0                                    CoreBuilder.mnd: while controller.flares < 1 do
        label *label183                                              ...
  372:  ubind @flare                                                 *units: ubind(unit_type);
  373:  jump *label185 equal @unit null                              *units: if @unit == null then return null; end;
  374:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label188                                              *units: do
  375:  sensor *tmp205 @unit @controlled                             *units: if @unit.@controlled == 0 then
  376:  jump *label191 notEqual *tmp205 0                            ...
  377:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  378:  jump *label185 always 0 0                                    *units: return @unit;
        label *label191                                              *units: if @unit.@controlled == 0 then
  379:  sensor *tmp208 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  380:  jump *label193 notEqual *tmp208 1                            ...
  381:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label193                                              *units: elsif first_unit.@dead == 1 then
  382:  ubind @flare                                                 *units: ubind(unit_type);
  383:  jump *label188 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label185                                              CoreBuilder.mnd: findFreeUnit(@flare, 0);
  384:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  385:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  386:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  387:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  388:  write false processor4 ":layoutThoriumDrill*finished"        ...
  389:  write 2 processor4 "@counter"                                ...
  390:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label195                                              CoreBuilder.mnd: do
  391:  setaddr :supplyBase*retaddr *label198                        CoreBuilder.mnd: supplyBase();
  392:  call *label20 *invalid :supplyBase*retval                    ...
        label *label198                                              ...
  393:  read *tmp217 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  394:  jump *label195 equal *tmp217 false                           CoreBuilder.mnd: do
  395:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  396:  set :meetTarget:copper 35                                    ...
  397:  set :meetTarget:lead 0                                       ...
  398:  set :meetTarget:graphite 30                                  ...
  399:  set :meetTarget:silicon 30                                   ...
  400:  set :meetTarget:titanium 20                                  ...
  401:  set :meetTarget:metaglass 0                                  ...
  402:  setaddr :meetTarget*retaddr *label201                        ...
  403:  call *label22 *invalid :meetTarget*retval                    ...
        label *label201                                              ...
        label *label202                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  404:  wait 1e-15                                                   ...
  405:  read *tmp219 processor4 ":layoutThoriumDrill*finished"       ...
  406:  jump *label202 equal *tmp219 false                           ...
  407:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  408:  jump *label203 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  409:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  410:  stop                                                         Actions.mnd: stopProcessor();
        label *label203                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  411:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: var thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  412:  read :buildBlockAt:x processor4 ".drillX"                    ...
  413:  read :buildBlockAt:y processor4 ".drillY"                    ...
  414:  set :buildBlockAt:rotation null                              ...
  415:  set :buildBlockAt:config 0                                   ...
  416:  set :buildBlockAt:skipError false                            ...
  417:  setaddr :buildBlockAt*retaddr *label206                      ...
  418:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label206                                              ...
  419:  set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval     ...
  420:  read *tmp74 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  421:  jump *label199 lessThan *tmp74 0                             ...
  422:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  423:  set :meetTarget:copper 30                                    ...
  424:  set :meetTarget:lead 30                                      ...
  425:  set :meetTarget:graphite 30                                  ...
  426:  set :meetTarget:silicon 0                                    ...
  427:  set :meetTarget:titanium 0                                   ...
  428:  set :meetTarget:metaglass 30                                 ...
  429:  setaddr :meetTarget*retaddr *label210                        ...
  430:  call *label22 *invalid :meetTarget*retval                    ...
        label *label210                                              ...
  431:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  432:  read *tmp74 processor4 ".water1X"                            ...
  433:  set :buildBlockAt:x *tmp74                                   ...
  434:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  435:  set :buildBlockAt:rotation null                              ...
  436:  set :buildBlockAt:config 0                                   ...
  437:  set :buildBlockAt:skipError false                            ...
  438:  setaddr :buildBlockAt*retaddr *label211                      ...
  439:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label211                                              ...
  440:  read *tmp76 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  441:  jump *label199 lessThan *tmp76 0                             ...
  442:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  443:  set :meetTarget:copper 30                                    ...
  444:  set :meetTarget:lead 30                                      ...
  445:  set :meetTarget:graphite 30                                  ...
  446:  set :meetTarget:silicon 0                                    ...
  447:  set :meetTarget:titanium 0                                   ...
  448:  set :meetTarget:metaglass 30                                 ...
  449:  setaddr :meetTarget*retaddr *label215                        ...
  450:  call *label22 *invalid :meetTarget*retval                    ...
        label *label215                                              ...
  451:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  452:  read *tmp76 processor4 ".water2X"                            ...
  453:  set :buildBlockAt:x *tmp76                                   ...
  454:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  455:  set :buildBlockAt:rotation null                              ...
  456:  set :buildBlockAt:config 0                                   ...
  457:  set :buildBlockAt:skipError false                            ...
  458:  setaddr :buildBlockAt*retaddr *label216                      ...
  459:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label216                                              ...
  460:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  461:  set :meetTarget:copper 30                                    ...
  462:  set :meetTarget:lead 30                                      ...
  463:  set :meetTarget:graphite 30                                  ...
  464:  set :meetTarget:silicon 0                                    ...
  465:  set :meetTarget:titanium 0                                   ...
  466:  set :meetTarget:metaglass 30                                 ...
  467:  setaddr :meetTarget*retaddr *label218                        ...
  468:  call *label22 *invalid :meetTarget*retval                    ...
        label *label218                                              ...
  469:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: var thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  470:  read :buildBlockAt:x processor4 ".generatorX"                ...
  471:  read :buildBlockAt:y processor4 ".generatorY"                ...
  472:  set :buildBlockAt:rotation null                              ...
  473:  set :buildBlockAt:config 0                                   ...
  474:  set :buildBlockAt:skipError false                            ...
  475:  setaddr :buildBlockAt*retaddr *label219                      ...
  476:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label219                                              ...
  477:  set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval ...
  478:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  479:  set :meetTarget:copper 2                                     ...
  480:  set :meetTarget:lead 6                                       ...
  481:  set :meetTarget:graphite 0                                   ...
  482:  set :meetTarget:silicon 0                                    ...
  483:  set :meetTarget:titanium 0                                   ...
  484:  set :meetTarget:metaglass 0                                  ...
  485:  setaddr :meetTarget*retaddr *label221                        ...
  486:  call *label22 *invalid :meetTarget*retval                    ...
        label *label221                                              ...
  487:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  488:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  489:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  490:  set :buildBlockAt:rotation null                              ...
  491:  set :buildBlockAt:config 0                                   ...
  492:  set :buildBlockAt:skipError false                            ...
  493:  setaddr :buildBlockAt*retaddr *label222                      ...
  494:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label222                                              ...
  495:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  496:  set :meetTarget:copper 0                                     ...
  497:  set :meetTarget:lead 10                                      ...
  498:  set :meetTarget:graphite 0                                   ...
  499:  set :meetTarget:silicon 8                                    ...
  500:  set :meetTarget:titanium 0                                   ...
  501:  set :meetTarget:metaglass 0                                  ...
  502:  setaddr :meetTarget*retaddr *label224                        ...
  503:  call *label22 *invalid :meetTarget*retval                    ...
        label *label224                                              ...
  504:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  505:  read :buildBlockAt:x processor4 ".panelX"                    ...
  506:  read :buildBlockAt:y processor4 ".panelY"                    ...
  507:  set :buildBlockAt:rotation null                              ...
  508:  set :buildBlockAt:config 0                                   ...
  509:  set :buildBlockAt:skipError false                            ...
  510:  setaddr :buildBlockAt*retaddr *label225                      ...
  511:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label225                                              ...
  512:  set :meetTarget:block @battery                               CoreBuilder.mnd: meetTarget(
  513:  set :meetTarget:copper 5                                     ...
  514:  set :meetTarget:lead 20                                      ...
  515:  set :meetTarget:graphite 0                                   ...
  516:  set :meetTarget:silicon 0                                    ...
  517:  set :meetTarget:titanium 0                                   ...
  518:  set :meetTarget:metaglass 0                                  ...
  519:  setaddr :meetTarget*retaddr *label227                        ...
  520:  call *label22 *invalid :meetTarget*retval                    ...
        label *label227                                              ...
  521:  set :buildBlockAt:block @battery                             CoreBuilder.mnd: buildBlockAt(@battery, oreLocator.batteryX, oreLocator.batteryY, null, 0, false);
  522:  read :buildBlockAt:x processor4 ".batteryX"                  ...
  523:  read :buildBlockAt:y processor4 ".batteryY"                  ...
  524:  set :buildBlockAt:rotation null                              ...
  525:  set :buildBlockAt:config 0                                   ...
  526:  set :buildBlockAt:skipError false                            ...
  527:  setaddr :buildBlockAt*retaddr *label228                      ...
  528:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label228                                              ...
  529:  write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDr CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  530:  write :buildThoriumDrill:thoriumDrill processor3 ":addThoriu CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  531:  write :buildThoriumDrill:thoriumGenerator processor3 ":addTh ...
  532:  write false processor3 ":addThoriumDrill*finished"           ...
  533:  write 1 processor3 "@counter"                                ...
        label *label229                                              ...
  534:  wait 1e-15                                                   ...
  535:  read *tmp236 processor3 ":addThoriumDrill*finished"          ...
  536:  jump *label229 equal *tmp236 false                           ...
        label *label199                                              CoreBuilder.mnd: buildThoriumDrill();
  537:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  538:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label230                                              CoreBuilder.mnd: do
  539:  setaddr :supplyBase*retaddr *label233                        CoreBuilder.mnd: supplyBase();
  540:  call *label20 *invalid :supplyBase*retval                    ...
        label *label233                                              ...
  541:  read *tmp38 *tmp136 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  542:  read *tmp39 *tmp136 ".monos"                                 ...
  543:  op add *tmp237 *tmp38 *tmp39                                 ...
  544:  jump *label230 lessThan *tmp237 16                           CoreBuilder.mnd: do
        label *label234                                              CoreBuilder.mnd: while true do
  545:  setaddr :supplyBase*retaddr *label237                        CoreBuilder.mnd: supplyBase();
  546:  call *label20 *invalid :supplyBase*retval                    ...
        label *label237                                              ...
  547:  jump *label234 always 0 0                                    CoreBuilder.mnd: while true do
        label *label5                                                Actions.mnd: void moveTo(x, y, radius)
  548:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  549:  op sub *tmp241 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label242                                              ...
  550:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239 0 ...
  551:  jump *label244 notEqual *tmp239 false                        ...
  552:  ucontrol approach :moveTo:x :moveTo:y *tmp241 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  553:  jump *label242 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label244                                              ...
  554:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label6                                                Actions.mnd: void moveTo(x, y)
  555:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  556:  set :moveTo:y :moveTo.1:y                                    ...
  557:  set :moveTo:radius 6                                         ...
  558:  setaddr :moveTo*retaddr *label246                            ...
  559:  call *label5 *invalid :moveTo*retval                         ...
        label *label246                                              ...
  560:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label7                                                Actions.mnd: void moveToEmpty(x, y)
  561:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label249                                              Actions.mnd: do
  562:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  563:  jump *label252 equal *tmp244 null                            ...
  564:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label252                                              ...
  565:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  566:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247 0    Actions.mnd: while !within(x, y, RADIUS);
  567:  jump *label249 equal *tmp247 false                           Actions.mnd: do
  568:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label8                                                Actions.mnd: void moveToBlock(block, radius)
  569:  sensor *tmp249 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  570:  sensor *tmp250 :moveToBlock:block @y                         ...
  571:  set :moveTo:x *tmp249                                        ...
  572:  set :moveTo:y *tmp250                                        ...
  573:  set :moveTo:radius :moveToBlock:radius                       ...
  574:  setaddr :moveTo*retaddr *label255                            ...
  575:  call *label5 *invalid :moveTo*retval                         ...
        label *label255                                              ...
  576:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label9                                                Actions.mnd: void depositItems(block, item)
  577:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  578:  sensor *tmp251 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  579:  jump *label258 notEqual *tmp251 :depositItems:item           ...
  580:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  581:  set :moveToBlock:radius 6                                    ...
  582:  setaddr :moveToBlock*retaddr *label260                       ...
  583:  call *label8 *invalid :moveToBlock*retval                    ...
        label *label260                                              ...
  584:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label261                                              Actions.mnd: do
  585:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  586:  sensor *tmp255 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  587:  op mul *tmp256 *tmp255 :depositItems:cap                     ...
  588:  sensor *tmp257 :depositItems:block :depositItems:item        ...
  589:  jump *label261 greaterThan *tmp256 *tmp257                   Actions.mnd: do
  590:  jump *label259 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label258                                              ...
        label *label264                                              Actions.mnd: while @unit.@firstItem != null do
  591:  sensor *tmp259 @unit @firstItem                              ...
  592:  jump *label266 equal *tmp259 null                            ...
  593:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  594:  jump *label264 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label266                                              ...
        label *label259                                              Actions.mnd: if @unit.@firstItem == item then
  595:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  596:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  597:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label10                                               Actions.mnd: void locateOre(ore, out x, out y)
  598:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  599:  jump *label269 notEqual *tmp261 false                        ...
  600:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  601:  stop                                                         Actions.mnd: stopProcessor();
        label *label269                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  602:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label11                                               Actions.mnd: void mineOre(ore, amount, block)
  603:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  604:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  605:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  606:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  607:  setaddr :locateOre*retaddr *label274                         ...
  608:  call *label10 *invalid :locateOre*retval                     ...
        label *label274                                              ...
  609:  set :mineOre:x :locateOre:x                                  ...
  610:  set :mineOre:y :locateOre:y                                  ...
  611:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  612:  set :moveToEmpty:y :locateOre:y                              ...
  613:  setaddr :moveToEmpty*retaddr *label275                       ...
  614:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label275                                              ...
  615:  sensor *tmp266 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  616:  jump *label276 equal *tmp266 :mineOre:ore                    ...
        label *label279                                              Actions.mnd: while @unit.@firstItem != null do
  617:  sensor *tmp269 @unit @firstItem                              ...
  618:  jump *label281 equal *tmp269 null                            ...
  619:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  620:  jump *label279 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label281                                              ...
        label *label276                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  621:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  622:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label283                                              Actions.mnd: do
  623:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  624:  op notEqual *tmp273 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  625:  op notEqual *tmp274 :mineOre:item :mineOre:ore               ...
  626:  op land *tmp275 *tmp273 *tmp274                              ...
  627:  jump *label285 notEqual *tmp275 false                        ...
  628:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  629:  jump *label285 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  630:  sensor *tmp279 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  631:  jump *label283 lessThan *tmp279 :mineOre:amount              Actions.mnd: do
        label *label285                                              ...
  632:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  633:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  634:  set :depositItems:item :mineOre:ore                          ...
  635:  setaddr :depositItems*retaddr *label290                      ...
  636:  call *label9 *invalid :depositItems*retval                   ...
        label *label290                                              ...
  637:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label12                                               Actions.mnd: void mineOre(ore)
  638:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  639:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  640:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  641:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  642:  set :mineOre:amount 30                                       ...
  643:  set :mineOre:block .core                                     ...
  644:  setaddr :mineOre*retaddr *label293                           ...
  645:  call *label11 *invalid :mineOre*retval                       ...
        label *label293                                              ...
  646:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label13                                               Actions.mnd: void fetchBlock(block, item)
  647:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  648:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  649:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  650:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  651:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  652:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  653:  sensor *tmp283 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  654:  sensor *tmp284 :fetchBlock:block @y                          ...
  655:  set :moveToEmpty:x *tmp283                                   ...
  656:  set :moveToEmpty:y *tmp284                                   ...
  657:  setaddr :moveToEmpty*retaddr *label297                       ...
  658:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label297                                              ...
        label *label299                                              Actions.mnd: while @unit.@firstItem != null do
  659:  sensor *tmp285 @unit @firstItem                              ...
  660:  jump *label301 equal *tmp285 null                            ...
  661:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  662:  jump *label299 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label301                                              ...
        label *label302                                              Actions.mnd: do
  663:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  664:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  665:  op notEqual *tmp288 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  666:  op notEqual *tmp289 :fetchBlock:unitItem :fetchBlock:item    ...
  667:  op land *tmp290 *tmp288 *tmp289                              ...
  668:  jump *label305 equal *tmp290 false                           ...
  669:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label305                                              Actions.mnd: if unitItem != null and unitItem != item then
  670:  sensor *tmp292 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  671:  op lessThan *tmp293 *tmp292 30                               ...
  672:  sensor *tmp294 :fetchBlock:block :fetchBlock:item            ...
  673:  op land *tmp295 *tmp293 *tmp294                              ...
  674:  jump *label302 notEqual *tmp295 false                        Actions.mnd: do
  675:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  676:  set :depositItems:item :fetchBlock:item                      ...
  677:  setaddr :depositItems*retaddr *label307                      ...
  678:  call *label9 *invalid :depositItems*retval                   ...
        label *label307                                              ...
  679:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label18                                               CoreBuilder.mnd: void supplyBase0()
  680:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  681:  jump *label309 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  682:  sensor *tmp298 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  683:  jump *label311 greaterThanEq *tmp298 .targetGraphite         ...
  684:  sensor *tmp301 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  685:  jump *label313 greaterThanEq *tmp301 5                       ...
  686:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  687:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  688:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  689:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  690:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  691:  sensor *tmp305 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  692:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  693:  jump *label318 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  694:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  695:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  696:  set :mineOre:block .press                                    ...
  697:  setaddr :mineOre*retaddr *label320                           ...
  698:  call *label11 *invalid :mineOre*retval                       ...
        label *label320                                              ...
        label *label318                                              CoreBuilder.mnd: if missing > 0 then
  699:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label313                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label311                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  700:  sensor *tmp309 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  701:  jump *label321 greaterThanEq *tmp309 .targetSilicon          ...
  702:  sensor *tmp312 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  703:  jump *label323 greaterThanEq *tmp312 5                       ...
  704:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  705:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  706:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  707:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  708:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  709:  sensor *tmp316 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  710:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  711:  jump *label328 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  712:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  713:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  714:  set :mineOre:block .smelter                                  ...
  715:  setaddr :mineOre*retaddr *label330                           ...
  716:  call *label11 *invalid :mineOre*retval                       ...
        label *label330                                              ...
        label *label328                                              CoreBuilder.mnd: if missing > 0 then
  717:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  718:  jump *label324 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label323                                              ...
  719:  sensor *tmp320 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  720:  jump *label331 greaterThanEq *tmp320 5                       ...
  721:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  722:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  723:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  724:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  725:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  726:  sensor *tmp324 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  727:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  728:  jump *label336 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  729:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  730:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  731:  set :mineOre:block .smelter                                  ...
  732:  setaddr :mineOre*retaddr *label338                           ...
  733:  call *label11 *invalid :mineOre*retval                       ...
        label *label338                                              ...
        label *label336                                              CoreBuilder.mnd: if missing > 0 then
  734:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label331                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label324                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label321                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  735:  sensor *tmp328 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  736:  jump *label339 greaterThanEq *tmp328 .powerTarget            ...
  737:  sensor *tmp331 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  738:  jump *label341 greaterThanEq *tmp331 2                       ...
  739:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  740:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  741:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  742:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  743:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  744:  sensor *tmp335 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  745:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  746:  jump *label346 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  747:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  748:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  749:  set :mineOre:block .generator                                ...
  750:  setaddr :mineOre*retaddr *label348                           ...
  751:  call *label11 *invalid :mineOre*retval                       ...
        label *label348                                              ...
        label *label346                                              CoreBuilder.mnd: if missing > 0 then
  752:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label341                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label339                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label309                                              CoreBuilder.mnd: if unloader1 == null then
  753:  set *tmp341 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  754:  sensor *tmp339 .core @titanium                               ...
  755:  jump *label350 greaterThanEq *tmp339 .targetTitanium         ...
  756:  sensor *tmp342 .core @titanium                               ...
  757:  op sub *tmp343 .targetTitanium *tmp342                       ...
  758:  op min *tmp341 7 *tmp343                                     ...
        label *label350                                              ...
  759:  sensor *tmp345 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  760:  jump *label351 greaterThanEq *tmp345 *tmp341                 ...
  761:  jump *label352 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  762:  sensor *tmp350 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  763:  op mul *tmp351 .unloader1 .powerTarget                       ...
  764:  jump *label355 greaterThanEq *tmp350 *tmp351                 ...
  765:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  766:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  767:  setaddr :mineOre.1*retaddr *label358                         ...
  768:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label358                                              ...
  769:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label355                                              ...
  770:  sensor *tmp354 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  771:  jump *label359 greaterThanEq *tmp354 .targetSilicon          ...
  772:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  773:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  774:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  775:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  776:  jump *label363 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  777:  set :mineOre.1:ore @coal                                     ...
        label *label363                                              ...
  778:  setaddr :mineOre.1*retaddr *label364                         CoreBuilder.mnd: mineOre(ore);
  779:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label364                                              ...
  780:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label359                                              ...
  781:  sensor *tmp361 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  782:  jump *label365 greaterThanEq *tmp361 .targetCopper           ...
  783:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  784:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  785:  setaddr :mineOre.1*retaddr *label368                         ...
  786:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label368                                              ...
  787:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label365                                              ...
  788:  sensor *tmp364 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  789:  jump *label369 greaterThanEq *tmp364 .targetLead             ...
  790:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  791:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  792:  setaddr :mineOre.1*retaddr *label372                         ...
  793:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label372                                              ...
  794:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label369                                              ...
  795:  sensor *tmp367 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  796:  jump *label373 greaterThanEq *tmp367 .targetMetaglass        ...
  797:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  798:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  799:  setaddr :mineOre.1*retaddr *label376                         ...
  800:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label376                                              ...
  801:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label373                                              ...
  802:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  803:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  804:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  805:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  806:  jump *label379 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  807:  set :mineOre.1:ore @coal                                     ...
        label *label379                                              ...
  808:  setaddr :mineOre.1*retaddr *label380                         CoreBuilder.mnd: mineOre(ore);
  809:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label380                                              ...
  810:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label351                                              ...
  811:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  812:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  813:  set :fetchBlock:item @titanium                               ...
  814:  setaddr :fetchBlock*retaddr *label382                        ...
  815:  call *label13 *invalid :fetchBlock*retval                    ...
        label *label382                                              ...
        label *label352                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  816:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label19                                               CoreBuilder.mnd: void supplyBase1()
  817:  write "Phase 1: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  818:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  819:  setaddr :mineOre.1*retaddr *label385                         ...
  820:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label385                                              ...
  821:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label20                                               CoreBuilder.mnd: void supplyBase()
  822:  jump *label387 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  823:  read *tmp38 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  824:  jump *label389 lessThanEq *tmp38 0                           ...
  825:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  826:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  827:  write .titaniumDrill .flareController ":start:drill"         ...
  828:  write false .flareController ":start*finished"               ...
  829:  write 3 .flareController "@counter"                          ...
        label *label389                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label387                                              CoreBuilder.mnd: if !flareControllerStarted then
  830:  read *tmp39 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  831:  jump *label391 lessThanEq *tmp39 3                           ...
  832:  setaddr :supplyBase1*retaddr *label393                       CoreBuilder.mnd: supplyBase1();
  833:  call *label19 *invalid :supplyBase1*retval                   ...
        label *label393                                              ...
  834:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label391                                              ...
  835:  setaddr :supplyBase0*retaddr *label394                       CoreBuilder.mnd: supplyBase0();
  836:  call *label18 *invalid :supplyBase0*retval                   ...
        label *label394                                              ...
  837:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label21                                               CoreBuilder.mnd: def targetMet()
  838:  sensor *tmp382 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  839:  jump *label396 lessThan *tmp382 .targetCopper                ...
  840:  sensor *tmp385 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  841:  jump *label398 lessThan *tmp385 .targetLead                  ...
  842:  sensor *tmp388 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  843:  jump *label400 lessThan *tmp388 .targetGraphite              ...
  844:  sensor *tmp391 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  845:  jump *label402 lessThan *tmp391 .targetSilicon               ...
  846:  sensor *tmp394 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  847:  jump *label404 lessThan *tmp394 .targetTitanium              ...
  848:  sensor *tmp397 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  849:  jump *label406 lessThan *tmp397 .targetMetaglass             ...
  850:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  851:  return :targetMet*retaddr                                    ...
        label *label406                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label404                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label402                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label400                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label398                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label396                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  852:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  853:  return :targetMet*retaddr                                    ...
        label *label22                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  854:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  855:  op sign *tmp401 :meetTarget:lead 0                           ...
  856:  op add :meetTarget:count :meetTarget:count *tmp401           ...
  857:  op sign *tmp401 :meetTarget:graphite 0                       ...
  858:  op add :meetTarget:count :meetTarget:count *tmp401           ...
  859:  op sign *tmp401 :meetTarget:silicon 0                        ...
  860:  op add :meetTarget:count :meetTarget:count *tmp401           ...
  861:  op sign *tmp401 :meetTarget:titanium 0                       ...
  862:  op add :meetTarget:count :meetTarget:count *tmp401           ...
  863:  op sign *tmp401 :meetTarget:metaglass 0                      ...
  864:  op add :meetTarget:count :meetTarget:count *tmp401           ...
  865:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  866:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  867:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  868:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  869:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  870:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  871:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  872:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  873:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  874:  op add *tmp402 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  875:  op add .targetLead *tmp402 1                                 ...
  876:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  877:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  878:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  879:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  880:  op add *tmp404 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  881:  write *tmp404 .controller ".pressTarget"                     ...
  882:  op add *tmp405 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  883:  write *tmp405 .controller ".smelterTarget"                   ...
  884:  op add *tmp406 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  885:  write *tmp406 .controller ".kilnTarget"                      ...
  886:  write *tmp402 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  887:  op sign *tmp408 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  888:  op mul *tmp409 *tmp408 20                                    ...
  889:  op add *tmp410 :meetTarget:silicon *tmp409                   ...
  890:  write *tmp410 .controller ".siliconReserve"                  ...
        label *label418                                              CoreBuilder.mnd: while !targetMet() do
  891:  setaddr :targetMet*retaddr *label421                         ...
  892:  call *label21 *invalid :targetMet*retval                     ...
        label *label421                                              ...
  893:  jump *label420 notEqual :targetMet*retval false              ...
  894:  setaddr :supplyBase*retaddr *label422                        CoreBuilder.mnd: supplyBase();
  895:  call *label20 *invalid :supplyBase*retval                    ...
        label *label422                                              ...
  896:  jump *label418 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label420                                              ...
  897:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label23                                               CoreBuilder.mnd: void log(encodedId)
  898:  read *tmp86 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  899:  op sub *tmp412 *tmp86 1                                      ...
  900:  write *tmp412 bank1 511                                      ...
  901:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  902:  op floor *tmp416 :second:result 0                            CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  903:  op mul *tmp417 *tmp416 1000                                  ...
  904:  op add *tmp418 :log:encodedId *tmp417                        ...
  905:  write *tmp418 bank1 *tmp412                                  ...
  906:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label24                                               CoreBuilder.mnd: void logBlock(block)
  907:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  908:  setaddr :log*retaddr *label426                               ...
  909:  call *label23 *invalid :log*retval                           ...
        label *label426                                              ...
  910:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label25                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  911:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  912:  set :moveTo.1:y :buildBlockAt:y                              ...
  913:  setaddr :moveTo.1*retaddr *label428                          ...
  914:  call *label6 *invalid :moveTo.1*retval                       ...
        label *label428                                              ...
  915:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  916:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  917:  jump *label430 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  918:  jump *label432 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  919:  set :buildBlockAt*retval :buildBlockAt:building              ...
  920:  return :buildBlockAt*retaddr                                 ...
        label *label432                                              ...
  921:  jump *label434 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  922:  set :buildBlockAt*retval null                                ...
  923:  return :buildBlockAt*retaddr                                 ...
        label *label434                                              ...
  924:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  925:  stop                                                         Actions.mnd: stopProcessor();
        label *label430                                              CoreBuilder.mnd: if building != null then
  926:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  927:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label437                                              CoreBuilder.mnd: do
  928:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  929:  jump *label440 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  930:  set :buildBlockAt*retval null                                ...
  931:  return :buildBlockAt*retaddr                                 ...
        label *label440                                              ...
  932:  jump *label437 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  933:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  934:  setaddr :logBlock*retaddr *label442                          ...
  935:  call *label24 *invalid :logBlock*retval                      ...
        label *label442                                              ...
  936:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  937:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label26                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  938:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  939:  set :meetTarget:copper :buildBlock:copper                    ...
  940:  set :meetTarget:lead :buildBlock:lead                        ...
  941:  set :meetTarget:graphite :buildBlock:graphite                ...
  942:  set :meetTarget:silicon :buildBlock:silicon                  ...
  943:  set :meetTarget:titanium :buildBlock:titanium                ...
  944:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  945:  setaddr :meetTarget*retaddr *label444                        ...
  946:  call *label22 *invalid :meetTarget*retval                    ...
        label *label444                                              ...
  947:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  948:  set :buildBlockAt:x :buildBlock:x                            ...
  949:  set :buildBlockAt:y :buildBlock:y                            ...
  950:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  951:  set :buildBlockAt:config :buildBlock:config                  ...
  952:  set :buildBlockAt:skipError false                            ...
  953:  setaddr :buildBlockAt*retaddr *label445                      ...
  954:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label445                                              ...
  955:  set :buildBlock*retval :buildBlockAt*retval                  ...
  956:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label27                                               CoreBuilder.mnd: def findUnits(type, out count)
  957:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  958:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  959:  set :findUnits:firstUnit @unit                               ...
  960:  jump *label447 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label449                                              CoreBuilder.mnd: do
  961:  op add :findUnits:count :findUnits:count 1                   ...
  962:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  963:  jump *label449 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label447                                              CoreBuilder.mnd: if firstUnit != null then
  964:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  965:  return :findUnits*retaddr                                    ...
        label *label28                                               CoreBuilder.mnd: void buildUnits()
  966:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  967:  set :meetTarget:copper 0                                     ...
  968:  set :meetTarget:lead 0                                       ...
  969:  set :meetTarget:graphite 0                                   ...
  970:  set :meetTarget:silicon 0                                    ...
  971:  set :meetTarget:titanium 0                                   ...
  972:  set :meetTarget:metaglass 0                                  ...
  973:  setaddr :meetTarget*retaddr *label453                        ...
  974:  call *label22 *invalid :meetTarget*retval                    ...
        label *label453                                              ...
  975:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  976:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  977:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  978:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  979:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()


Performance: parsed in 816 ms, compiled in 482 ms, optimized in 3,346 ms, run in 4 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (16 steps):
The program didn't generate any output.
Execution exception at instruction 38: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
