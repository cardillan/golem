  1522 instructions before optimizations.
    62 instructions eliminated by Temp Variables Elimination (2 iterations).
   125 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\CoreBuilder.mnd:37:5 Variable 'mainUnit' is not used.
C:\Home\golem\jam-202507\Actions.mnd:9:14 Variable 'ERROR' is not used.
     3 instructions eliminated by Jump Normalization (5 iterations).
    57 instructions eliminated by Jump Optimization (5 iterations).
    63 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     7 instructions modified by Expression Optimization (3 iterations).
     4 instructions eliminated by If Expression Optimization (3 iterations).
   413 instructions eliminated by Data Flow Optimization (4 passes, 31 iterations).
    18 loops improved by Loop Hoisting.
     4 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
    62 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
     9 instructions eliminated by Jump Straightening (5 iterations).
    13 instructions updated by JumpThreading.
    38 instructions eliminated by Unreachable Code Elimination (2 iterations).
   814 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 155):
    Replicate loop condition at Actions.mnd:24:5                 size    +1, benefit   163877.0, efficiency 163876.953
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit   273066.4, efficiency 273066.406
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   136533.2, efficiency 136533.203
    Replicate loop condition at CoreBuilder.mnd:246:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221
  * Unroll iteration loop at CoreBuilder.mnd:216:5               size   -15, benefit    13950.0, efficiency   Infinity (-11 instructions)

Pass 1: speed optimization selection (cost limit 166):
    Replicate loop condition at Actions.mnd:24:5                 size    +1, benefit   163877.0, efficiency 163876.953
  * Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit   273066.4, efficiency 273066.406 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   136533.2, efficiency 136533.203
    Replicate loop condition at CoreBuilder.mnd:246:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 165):
  * Replicate loop condition at Actions.mnd:24:5                 size    +1, benefit   163877.0, efficiency 163876.953 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   136533.2, efficiency 136533.203
    Replicate loop condition at CoreBuilder.mnd:246:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 164):
  * Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   136533.2, efficiency 136533.203 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:246:5            size    +2, benefit    11250.0, efficiency   5625.000
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 163):
  * Replicate loop condition at CoreBuilder.mnd:246:5            size    +2, benefit    11250.0, efficiency   5625.000 (+2 instructions)
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 161):
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +169, benefit     6250.0, efficiency     36.982
  * Unroll iteration loop at CoreBuilder.mnd:342:13              size   +77, benefit    11875.0, efficiency    154.221 (+56 instructions)

Pass 1: speed optimization selection (cost limit 105):
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 2: speed optimization selection (cost limit 122):
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 3: speed optimization selection (cost limit 122):
  ! Unroll loop at CoreBuilder.mnd:336:5                         size  +393, benefit     6250.0, efficiency     15.903

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-76 instructions):
 
    20 jump *label15 notEqual *tmp43 false
    21 label *label17
    22 set *tmp44 @unit
-    * set .mainUnit *tmp44
    23 set .display processor1
    24 set .flareController processor3
    25 set :findUnits:type @mono
 
   148 setaddr :buildBlock*retaddr *label38 (h:*label38)
   149 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
   150 label *label38
-    * set *tmp53 :buildBlock*retval
   151 jump *label33 always
   152 label *label35
   153 multijump *tmp54 0 0 (m:marker2)
   154 multilabel *label37 (m:marker2)
   155 label *label36
-    * set *tmp53 null
   156 label *label33
   157 set :buildBlockFromCfg.3:block @combustion-generator
   158 set :buildBlockFromCfg.3:offsetX 0
 
   273 op or *tmp74 *tmp70 *tmp73
   274 jump *label62 equal *tmp74 false
   275 jump *label60 always
-    * set *tmp75 null
   276 jump *label63 always
   277 label *label62
-    * set *tmp75 null
   278 label *label63
   279 op sin *tmp77 :locateOreAway:angle
   280 op mul *tmp78 *tmp77 :locateOreAway:distance
 
   289 label *label65
   290 op add :locateOreAway:distance :locateOreAway:distance 4
   291 op add :locateOreAway:angle :locateOreAway:angle 45
-    * set *tmp76 :locateOreAway:angle
   292 label *label64
   293 label *label59
   294 jump *label58 always
   295 label *label60
-    * set *tmp67 null
   296 label *label57
   297 set :buildTitaniumDrillCfg:x :locateOreAway:x
   298 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   348 label *label78
   349 set *tmp88 null
   350 label *label79
-    * set *tmp84 *tmp88
   351 label *label77
   352 set :buildTitaniumDrillCfg:count :checkOre:count
   353 op add *tmp90 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   365 label *label81
   366 set *tmp95 null
   367 label *label82
-    * set *tmp91 *tmp95
   368 label *label80
   369 set :buildTitaniumDrillCfg:count :checkOre.1:count
   370 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
 
   382 label *label84
   383 set *tmp102 null
   384 label *label85
-    * set *tmp98 *tmp102
   385 label *label83
   386 set :buildTitaniumDrillCfg:count :checkOre.2:count
   387 op add *tmp104 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   400 label *label87
   401 set *tmp110 null
   402 label *label88
-    * set *tmp106 *tmp110
   403 label *label86
   404 set :buildTitaniumDrillCfg:count :checkOre.3:count
   405 op greaterThan *tmp112 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
   415 label *label91
   416 set *tmp115 null
   417 label *label92
-    * set *tmp113 *tmp115
   418 jump *label90 always
   419 label *label89
-    * set *tmp113 null
   420 label *label90
   421 label *label71
   422 multijump *tmp83 0 0 (m:marker5)
 
   456 jump *label98 equal *tmp130 false
   457 set *tmp66 :buildTitaniumDrillCfg:result
   458 jump *label52 always
-    * set *tmp131 null
   459 jump *label99 always
   460 label *label98
-    * set *tmp131 null
   461 label *label99
   462 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   463 set *tmp129 null
 
   467 set :buildTitaniumDrillCfg:minimum 3
   468 set *tmp129 :buildTitaniumDrillCfg:minimum
   469 label *label96
-    * set *tmp117 *tmp129
   470 jump *label94 always
   471 label *label93
-    * set *tmp117 null
   472 label *label94
   473 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   474 op greaterThan *tmp132 :buildTitaniumDrillCfg:attempts 5
 
   487 label *label103
   488 op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
   489 op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
-    * set *tmp134 :buildTitaniumDrillCfg:angle
   490 label *label102
   491 set :buildTitaniumDrillCfg:attempts 0
   492 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
   493 op max *tmp142 *tmp141 1
   494 set :buildTitaniumDrillCfg:minimum *tmp142
-    * set *tmp133 :buildTitaniumDrillCfg:minimum
   495 jump *label101 always
   496 label *label100
-    * set *tmp133 null
   497 label *label101
   498 label *label54
   499 jump *label53 always
 
   625 setaddr :buildBlock*retaddr *label121 (h:*label121)
   626 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   627 label *label121
-    * set *tmp151 :buildBlock*retval
   628 jump *label116 always
   629 label *label118
   630 multijump *tmp152 0 0 (m:marker8)
   631 multilabel *label120 (m:marker8)
   632 label *label119
-    * set *tmp151 null
   633 label *label116
   634 set :buildBlockFromCfg.8:block @air-factory
   635 set :buildBlockFromCfg.8:offsetX -4
 
   745 setaddr :buildBlock*retaddr *label139 (h:*label139)
   746 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   747 label *label139
-    * set *tmp163 :buildBlock*retval
   748 jump *label134 always
   749 label *label136
   750 multijump *tmp164 0 0 (m:marker11)
   751 multilabel *label138 (m:marker11)
   752 label *label137
-    * set *tmp163 null
   753 label *label134
   754 write @flare .controller ".unitToProduce"
   755 set :buildBlockFromCfg.11:block @unloader
 
   783 setaddr :buildBlock*retaddr *label145 (h:*label145)
   784 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   785 label *label145
-    * set *tmp167 :buildBlock*retval
   786 jump *label140 always
   787 label *label142
   788 multijump *tmp168 0 0 (m:marker12)
   789 multilabel *label144 (m:marker12)
   790 label *label143
-    * set *tmp167 null
   791 label *label140
   792 set :buildBlockFromCfg.12:block @kiln
   793 set :buildBlockFromCfg.12:offsetX 3.5
 
   820 setaddr :buildBlock*retaddr *label151 (h:*label151)
   821 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   822 label *label151
-    * set *tmp171 :buildBlock*retval
   823 jump *label146 always
   824 label *label148
   825 multijump *tmp172 0 0 (m:marker13)
   826 multilabel *label150 (m:marker13)
   827 label *label149
-    * set *tmp171 null
   828 label *label146
   829 write .kiln .controller ".kiln"
   830 set :buildBlockFromCfg.13:block @junction
 
   858 setaddr :buildBlock*retaddr *label157 (h:*label157)
   859 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   860 label *label157
-    * set *tmp175 :buildBlock*retval
   861 jump *label152 always
   862 label *label154
   863 multijump *tmp176 0 0 (m:marker14)
   864 multilabel *label156 (m:marker14)
   865 label *label155
-    * set *tmp175 null
   866 label *label152
   867 set :buildBlockFromCfg.14:block @water-extractor
   868 set :buildBlockFromCfg.14:offsetX -3.5
 
   895 setaddr :buildBlock*retaddr *label163 (h:*label163)
   896 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   897 label *label163
-    * set *tmp179 :buildBlock*retval
   898 jump *label158 always
   899 label *label160
   900 multijump *tmp180 0 0 (m:marker15)
   901 multilabel *label162 (m:marker15)
   902 label *label161
-    * set *tmp179 null
   903 label *label158
   904 set :buildBlockFromCfg.15:block @steam-generator
   905 set :buildBlockFromCfg.15:offsetX -3.5
 
   973 setaddr :buildBlock*retaddr *label175 (h:*label175)
   974 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   975 label *label175
-    * set *tmp187 :buildBlock*retval
   976 jump *label170 always
   977 label *label172
   978 multijump *tmp188 0 0 (m:marker17)
   979 multilabel *label174 (m:marker17)
   980 label *label173
-    * set *tmp187 null
   981 label *label170
   982 label *label176
   983 jump *label178 equal true false
 
  1030 op notEqual *tmp197 *tmp196 null
  1031 jump *label194 equal *tmp197 false
  1032 ucontrol itemDrop @air 1000
-    * set *tmp198 null
  1033 jump *label195 always
  1034 label *label194
-    * set *tmp198 null
  1035 label *label195
  1036 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
  1037 label *label192
 
  1090 op greaterThanEq *tmp213 *tmp212 :depositItems:cap
  1091 jump *label211 equal *tmp213 false
  1092 jump *label210 always
-    * set *tmp214 null
  1093 jump *label212 always
  1094 label *label211
-    * set *tmp214 null
  1095 label *label212
  1096 label *label209
  1097 sensor *tmp215 @unit @firstItem
  1098 op notEqual *tmp216 *tmp215 null
  1099 jump *label208 notEqual *tmp216 false
  1100 label *label210
-    * set *tmp207 null
  1101 jump *label204 always
  1102 label *label203
  1103 label *label213
 
  1108 label *label214
  1109 jump *label213 always
  1110 label *label215
-    * set *tmp207 null
  1111 label *label204
  1112 set :transportStatus:target 0
  1113 set :transportStatus:item null
 
  1125 set .ERROR :error.1:error
  1126 stop
  1127 label *label220
-    * set *tmp222 null
  1128 jump *label219 always
  1129 label *label218
-    * set *tmp222 null
  1130 label *label219
  1131 label *label217
  1132 return :locateOre*retaddr
 
  1163 op land *tmp228 *tmp226 *tmp227
  1164 jump *label229 equal *tmp228 false
  1165 jump *label228 always
-    * set *tmp229 null
  1166 jump *label230 always
  1167 label *label229
-    * set *tmp229 null
  1168 label *label230
  1169 ucontrol mine :mineOre:x :mineOre:y
  1170 op greaterThan *tmp230 @second :mineOre:stop
  1171 jump *label231 equal *tmp230 false
  1172 jump *label228 always
-    * set *tmp231 null
  1173 jump *label232 always
  1174 label *label231
-    * set *tmp231 null
  1175 label *label232
  1176 label *label227
  1177 sensor *tmp232 @unit @totalItems
 
  1236 op land *tmp241 *tmp239 *tmp240
  1237 jump *label244 equal *tmp241 false
  1238 ucontrol itemDrop @air 1000
-    * set *tmp242 null
  1239 jump *label245 always
  1240 label *label244
-    * set *tmp242 null
  1241 label *label245
  1242 label *label242
  1243 sensor *tmp243 @unit :fetchBlock:item
 
  1290 setaddr :mineOre*retaddr *label259 (h:*label259)
  1291 call *label6 *invalid :mineOre*retval (m:*label259) (h:*label259)
  1292 label *label259
-    * set *tmp259 null
  1293 jump *label258 always
  1294 label *label257
-    * set *tmp259 null
  1295 label *label258
  1296 label *label255
  1297 set :supplyBase:supplied true
 
  1300 label *label252
  1301 set *tmp254 null
  1302 label *label253
-    * set *tmp251 *tmp254
  1303 jump *label251 always
  1304 label *label250
-    * set *tmp251 null
  1305 label *label251
  1306 sensor *tmp260 .core @silicon
  1307 op lessThan *tmp261 *tmp260 .targetSilicon
 
  1334 setaddr :mineOre*retaddr *label269 (h:*label269)
  1335 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1336 label *label269
-    * set *tmp270 null
  1337 jump *label268 always
  1338 label *label267
-    * set *tmp270 null
  1339 label *label268
  1340 label *label265
  1341 set :supplyBase:supplied true
 
  1370 setaddr :mineOre*retaddr *label277 (h:*label277)
  1371 call *label6 *invalid :mineOre*retval (m:*label277) (h:*label277)
  1372 label *label277
-    * set *tmp278 null
  1373 jump *label276 always
  1374 label *label275
-    * set *tmp278 null
  1375 label *label276
  1376 label *label273
  1377 set :supplyBase:supplied true
 
  1382 label *label271
  1383 set *tmp265 *tmp273
  1384 label *label263
-    * set *tmp262 *tmp265
  1385 jump *label261 always
  1386 label *label260
-    * set *tmp262 null
  1387 label *label261
  1388 sensor *tmp279 .battery @totalPower
  1389 op lessThan *tmp280 *tmp279 .powerTarget
 
  1416 setaddr :mineOre*retaddr *label287 (h:*label287)
  1417 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1418 label *label287
-    * set *tmp289 null
  1419 jump *label286 always
  1420 label *label285
-    * set *tmp289 null
  1421 label *label286
  1422 label *label283
  1423 set :supplyBase:supplied true
 
  1431 label *label278
  1432 set *tmp281 null
  1433 label *label279
-    * set *tmp248 *tmp281
  1434 jump *label249 always
  1435 label *label248
-    * set *tmp248 null
  1436 label *label249
  1437 sensor *tmp290 .titanium_drill @titanium
  1438 op lessThan *tmp291 *tmp290 .titaniumTrigger
 
  1551 label *label290
  1552 set *tmp294 null
  1553 label *label291
-    * set *tmp292 *tmp294
  1554 jump *label289 always
  1555 label *label288
  1556 set :status1.10:text "Goal 11: Fetching titanium"
 
  1561 setaddr :fetchBlock*retaddr *label319 (h:*label319)
  1562 call *label8 *invalid :fetchBlock*retval (m:*label319) (h:*label319)
  1563 label *label319
-    * set *tmp292 null
  1564 label *label289
  1565 label *label247
  1566 return :supplyBase*retaddr
 
  1611 label *label323
  1612 set *tmp324 null
  1613 label *label324
-    * set *tmp321 *tmp324
  1614 jump *label322 always
  1615 label *label321
-    * set *tmp321 null
  1616 label *label322
  1617 set :targetMet*retval false
  1618 jump *label320 always
 
  1735 jump *label359 equal *tmp354 false
  1736 set :buildBlockAt*retval :buildBlockAt:building
  1737 jump *label354 always
-    * set *tmp355 null
  1738 jump *label360 always
  1739 label *label359
-    * set *tmp355 null
  1740 label *label360
  1741 jump *label361 equal :buildBlockAt:skipError false
  1742 set :buildBlockAt*retval null
  1743 jump *label354 always
-    * set *tmp356 null
  1744 jump *label362 always
  1745 label *label361
-    * set *tmp356 null
  1746 label *label362
  1747 set :error.2:error "Cannot build at ("
  1748 set .ERROR :error.2:error
  1749 stop
  1750 label *label363
-    * set *tmp353 null
  1751 jump *label358 always
  1752 label *label357
-    * set *tmp353 null
  1753 label *label358
  1754 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1755 wait 0.25
 
  1759 op equal *tmp359 :buildBlockAt:building null
  1760 jump *label367 equal *tmp359 false
  1761 jump *label366 always
-    * set *tmp360 null
  1762 jump *label368 always
  1763 label *label367
-    * set *tmp360 null
  1764 label *label368
  1765 label *label365
  1766 op notEqual *tmp361 :buildBlockAt:type :buildBlockAt:block
 
  1814 op notEqual *tmp364 @unit :findUnits:firstUnit
  1815 jump *label375 notEqual *tmp364 false
  1816 label *label377
-    * set *tmp363 null
  1817 jump *label374 always
  1818 label *label373
-    * set *tmp363 null
  1819 label *label374
  1820 label *label372
  1821 return :findUnits*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-23 instructions):
 
    19 op equal *tmp43 .core null
    20 jump *label15 notEqual *tmp43 false
    21 label *label17
-    * set *tmp44 @unit
    22 set .display processor1
    23 set .flareController processor3
    24 set :findUnits:type @mono
 
   342 jump *label78 equal *tmp87 false
   343 set *tmp89 :checkOre:count
   344 op add :checkOre:count :checkOre:count 1
-    * set *tmp88 *tmp89
   345 jump *label79 always
   346 label *label78
-    * set *tmp88 null
   347 label *label79
   348 label *label77
   349 set :buildTitaniumDrillCfg:count :checkOre:count
 
   357 jump *label81 equal *tmp94 false
   358 set *tmp96 :checkOre.1:count
   359 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp95 *tmp96
   360 jump *label82 always
   361 label *label81
-    * set *tmp95 null
   362 label *label82
   363 label *label80
   364 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
   372 jump *label84 equal *tmp101 false
   373 set *tmp103 :checkOre.2:count
   374 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp102 *tmp103
   375 jump *label85 always
   376 label *label84
-    * set *tmp102 null
   377 label *label85
   378 label *label83
   379 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
   388 jump *label87 equal *tmp109 false
   389 set *tmp111 :checkOre.3:count
   390 op add :checkOre.3:count :checkOre.3:count 1
-    * set *tmp110 *tmp111
   391 jump *label88 always
   392 label *label87
-    * set *tmp110 null
   393 label *label88
   394 label *label86
   395 set :buildTitaniumDrillCfg:count :checkOre.3:count
 
   401 op greaterThanEq *tmp114 :buildTitaniumDrillCfg:count 4
   402 jump *label91 equal *tmp114 false
   403 jump *label69 always
-    * set *tmp115 null
   404 jump *label92 always
   405 label *label91
-    * set *tmp115 null
   406 label *label92
   407 jump *label90 always
   408 label *label89
 
   449 label *label98
   450 label *label99
   451 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * set *tmp129 null
   452 jump *label96 always
   453 label *label95
   454 set :buildTitaniumDrillCfg:attempts 1000
   455 set :buildTitaniumDrillCfg:minimum 3
-    * set *tmp129 :buildTitaniumDrillCfg:minimum
   456 label *label96
   457 jump *label94 always
   458 label *label93
 
  1282 label *label258
  1283 label *label255
  1284 set :supplyBase:supplied true
-    * set *tmp254 :supplyBase:supplied
  1285 jump *label253 always
  1286 label *label252
-    * set *tmp254 null
  1287 label *label253
  1288 jump *label251 always
  1289 label *label250
 
  1324 label *label268
  1325 label *label265
  1326 set :supplyBase:supplied true
-    * set *tmp265 :supplyBase:supplied
  1327 jump *label263 always
  1328 label *label262
  1329 sensor *tmp271 .smelter @sand
 
  1364 label *label270
  1365 set *tmp273 null
  1366 label *label271
-    * set *tmp265 *tmp273
  1367 label *label263
  1368 jump *label261 always
  1369 label *label260
 
  1409 label *label280
  1410 set *tmp284 null
  1411 label *label281
-    * set *tmp281 *tmp284
  1412 jump *label279 always
  1413 label *label278
-    * set *tmp281 null
  1414 label *label279
  1415 jump *label249 always
  1416 label *label248
 
  1527 label *label297
  1528 set *tmp298 *tmp301
  1529 label *label293
-    * set *tmp294 *tmp298
  1530 jump *label291 always
  1531 label *label290
-    * set *tmp294 null
  1532 label *label291
  1533 jump *label289 always
  1534 label *label288
 
  1585 label *label325
  1586 set *tmp327 null
  1587 label *label326
-    * set *tmp324 *tmp327
  1588 jump *label324 always
  1589 label *label323
-    * set *tmp324 null
  1590 label *label324
  1591 jump *label322 always
  1592 label *label321

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-12 instructions):
 
   340 ucontrol getBlock :checkOre:x :checkOre:y *tmp86 *tmp85 :checkOre:floor
   341 op equal *tmp87 :checkOre:floor :checkOre:ore
   342 jump *label78 equal *tmp87 false
-    * set *tmp89 :checkOre:count
   343 op add :checkOre:count :checkOre:count 1
   344 jump *label79 always
   345 label *label78
 
   354 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp93 *tmp92 :checkOre.1:floor
   355 op equal *tmp94 :checkOre.1:floor :checkOre.1:ore
   356 jump *label81 equal *tmp94 false
-    * set *tmp96 :checkOre.1:count
   357 op add :checkOre.1:count :checkOre.1:count 1
   358 jump *label82 always
   359 label *label81
 
   368 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp100 *tmp99 :checkOre.2:floor
   369 op equal *tmp101 :checkOre.2:floor :checkOre.2:ore
   370 jump *label84 equal *tmp101 false
-    * set *tmp103 :checkOre.2:count
   371 op add :checkOre.2:count :checkOre.2:count 1
   372 jump *label85 always
   373 label *label84
 
   383 ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp108 *tmp107 :checkOre.3:floor
   384 op equal *tmp109 :checkOre.3:floor :checkOre.3:ore
   385 jump *label87 equal *tmp109 false
-    * set *tmp111 :checkOre.3:count
   386 op add :checkOre.3:count :checkOre.3:count 1
   387 jump *label88 always
   388 label *label87
 
  1355 label *label276
  1356 label *label273
  1357 set :supplyBase:supplied true
-    * set *tmp273 :supplyBase:supplied
  1358 jump *label271 always
  1359 label *label270
-    * set *tmp273 null
  1360 label *label271
  1361 label *label263
  1362 jump *label261 always
 
  1398 label *label286
  1399 label *label283
  1400 set :supplyBase:supplied true
-    * set *tmp284 :supplyBase:supplied
  1401 jump *label281 always
  1402 label *label280
-    * set *tmp284 null
  1403 label *label281
  1404 jump *label279 always
  1405 label *label278
 
  1423 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1424 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1425 label *label295
-    * set *tmp298 null
  1426 jump *label293 always
  1427 label *label292
  1428 sensor *tmp299 .core @silicon
 
  1516 label *label303
  1517 set *tmp301 *tmp308
  1518 label *label297
-    * set *tmp298 *tmp301
  1519 label *label293
  1520 jump *label291 always
  1521 label *label290
 
  1570 label *label327
  1571 set *tmp330 null
  1572 label *label328
-    * set *tmp327 *tmp330
  1573 jump *label326 always
  1574 label *label325
-    * set *tmp327 null
  1575 label *label326
  1576 jump *label324 always
  1577 label *label323

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1447 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1448 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
  1449 label *label301
-    * set *tmp301 null
  1450 jump *label297 always
  1451 label *label296
  1452 sensor *tmp306 .core @copper
 
  1513 label *label307
  1514 set *tmp308 *tmp311
  1515 label *label303
-    * set *tmp301 *tmp308
  1516 label *label297
  1517 label *label293
  1518 jump *label291 always
 
  1563 label *label329
  1564 set *tmp333 null
  1565 label *label330
-    * set *tmp330 *tmp333
  1566 jump *label328 always
  1567 label *label327
-    * set *tmp330 null
  1568 label *label328
  1569 jump *label326 always
  1570 label *label325

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1459 setaddr :mineOre.1*retaddr *label305 (h:*label305)
  1460 call *label7 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
  1461 label *label305
-    * set *tmp308 null
  1462 jump *label303 always
  1463 label *label302
  1464 sensor *tmp309 .core @lead
 
  1510 label *label311
  1511 set *tmp311 *tmp314
  1512 label *label307
-    * set *tmp308 *tmp311
  1513 label *label303
  1514 label *label297
  1515 label *label293
 
  1556 label *label331
  1557 set *tmp336 null
  1558 label *label332
-    * set *tmp333 *tmp336
  1559 jump *label330 always
  1560 label *label329
-    * set *tmp333 null
  1561 label *label330
  1562 jump *label328 always
  1563 label *label327

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1471 setaddr :mineOre.1*retaddr *label309 (h:*label309)
  1472 call *label7 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
  1473 label *label309
-    * set *tmp311 null
  1474 jump *label307 always
  1475 label *label306
  1476 sensor *tmp312 .core @metaglass
 
  1507 label *label317
  1508 set *tmp314 null
  1509 label *label311
-    * set *tmp311 *tmp314
  1510 label *label307
  1511 label *label303
  1512 label *label297
 
  1549 jump *label331 equal *tmp335 false
  1550 set :targetMet*retval true
  1551 jump *label320 always
-    * set *tmp336 null
  1552 jump *label332 always
  1553 label *label331
-    * set *tmp336 null
  1554 label *label332
  1555 jump *label330 always
  1556 label *label329

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1483 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1484 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
  1485 label *label313
-    * set *tmp314 null
  1486 jump *label311 always
  1487 label *label310
  1488 set :status1.9:text "Goal 10: Supplying base"
 
  1504 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1505 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
  1506 label *label317
-    * set *tmp314 null
  1507 label *label311
  1508 label *label307
  1509 label *label303

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-62 instructions):
 
    13 set .polys 0
    14 label *label15
    15 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp42 *tmp41
-    * set .core *tmp41
+   16 ulocate building core false @copper .coreX .coreY 0 .core
    17 label *label16
    18 op equal *tmp43 .core null
    19 jump *label15 notEqual *tmp43 false
 
    48 set :buildBlockFromCfg:config null
    49 setaddr *tmp46 *label25
    50 label *label22
-    * op add *tmp47 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp47
-    * op add *tmp48 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp48
+   51 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   52 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    53 set :buildBlock:block :buildBlockFromCfg:block
    54 set :buildBlock:x :buildBlockFromCfg:x
    55 set :buildBlock:y :buildBlockFromCfg:y
 
    86 set :buildBlockFromCfg.1:config null
    87 setaddr *tmp50 *label31
    88 label *label28
-    * op add *tmp51 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp51
-    * op add *tmp52 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp52
+   89 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   90 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    91 set :buildBlock:block :buildBlockFromCfg.1:block
    92 set :buildBlock:x :buildBlockFromCfg.1:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
 
   124 set :buildBlockFromCfg.2:config null
   125 setaddr *tmp54 *label37
   126 label *label34
-    * op add *tmp55 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp55
-    * op add *tmp56 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp56
+  127 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  128 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   129 set :buildBlock:block :buildBlockFromCfg.2:block
   130 set :buildBlock:x :buildBlockFromCfg.2:x
   131 set :buildBlock:y :buildBlockFromCfg.2:y
 
   159 set :buildBlockFromCfg.3:config null
   160 setaddr *tmp58 *label43
   161 label *label40
-    * op add *tmp59 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp59
-    * op add *tmp60 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp60
+  162 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  163 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   164 set :buildBlock:block :buildBlockFromCfg.3:block
   165 set :buildBlock:x :buildBlockFromCfg.3:x
   166 set :buildBlock:y :buildBlockFromCfg.3:y
 
   198 set :buildBlockFromCfg.4:config null
   199 setaddr *tmp62 *label49
   200 label *label46
-    * op add *tmp63 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp63
-    * op add *tmp64 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp64
+  201 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  202 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   203 set :buildBlock:block :buildBlockFromCfg.4:block
   204 set :buildBlock:x :buildBlockFromCfg.4:x
   205 set :buildBlock:y :buildBlockFromCfg.4:y
 
   326 set :checkOre:y :buildTitaniumDrillCfg:ay
   327 set :checkOre:ore @ore-titanium
   328 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp86 *tmp85 :checkOre:floor
+  329 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   330 op equal *tmp87 :checkOre:floor :checkOre:ore
   331 jump *label78 equal *tmp87 false
   332 op add :checkOre:count :checkOre:count 1
 
   335 label *label79
   336 label *label77
   337 set :buildTitaniumDrillCfg:count :checkOre:count
-    * op add *tmp90 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:x *tmp90
+  338 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   339 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   340 set :checkOre.1:ore @ore-titanium
   341 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp93 *tmp92 :checkOre.1:floor
+  342 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   343 op equal *tmp94 :checkOre.1:floor :checkOre.1:ore
   344 jump *label81 equal *tmp94 false
   345 op add :checkOre.1:count :checkOre.1:count 1
 
   353 set :checkOre.2:y *tmp97
   354 set :checkOre.2:ore @ore-titanium
   355 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp100 *tmp99 :checkOre.2:floor
+  356 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   357 op equal *tmp101 :checkOre.2:floor :checkOre.2:ore
   358 jump *label84 equal *tmp101 false
   359 op add :checkOre.2:count :checkOre.2:count 1
 
   368 set :checkOre.3:y *tmp105
   369 set :checkOre.3:ore @ore-titanium
   370 set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp108 *tmp107 :checkOre.3:floor
+  371 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   372 op equal *tmp109 :checkOre.3:floor :checkOre.3:ore
   373 jump *label87 equal *tmp109 false
   374 op add :checkOre.3:count :checkOre.3:count 1
 
   402 op greaterThan *tmp116 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   403 jump *label93 equal *tmp116 false
   404 op div *tmp118 :buildTitaniumDrillCfg:dx 2
-    * op add *tmp119 :buildTitaniumDrillCfg:ax *tmp118
-    * set :buildTitaniumDrillCfg:ax *tmp119
+  405 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp118
   406 op div *tmp120 :buildTitaniumDrillCfg:dy 2
-    * op add *tmp121 :buildTitaniumDrillCfg:ay *tmp120
-    * set :buildTitaniumDrillCfg:ay *tmp121
+  407 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp120
   408 op sub *tmp122 :buildTitaniumDrillCfg:x .coreX
   409 op abs *tmp123 *tmp122
   410 op greaterThanEq *tmp124 *tmp123 10
 
   459 label *label102
   460 set :buildTitaniumDrillCfg:attempts 0
   461 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
-    * op max *tmp142 *tmp141 1
-    * set :buildTitaniumDrillCfg:minimum *tmp142
+  462 op max :buildTitaniumDrillCfg:minimum *tmp141 1
   463 jump *label101 always
   464 label *label100
   465 label *label101
 
   486 set :buildBlockFromCfg.5:config null
   487 setaddr *tmp144 *label108
   488 label *label105
-    * op add *tmp145 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp145
-    * op add *tmp146 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp146
+  489 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  490 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   491 set :buildBlock:block :buildBlockFromCfg.5:block
   492 set :buildBlock:x :buildBlockFromCfg.5:x
   493 set :buildBlock:y :buildBlockFromCfg.5:y
 
   524 set :buildBlockFromCfg.6:config processor2
   525 setaddr *tmp148 *label114
   526 label *label111
-    * op add *tmp149 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp149
-    * op add *tmp150 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp150
+  527 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  528 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   529 set :buildBlock:block :buildBlockFromCfg.6:block
   530 set :buildBlock:x :buildBlockFromCfg.6:x
   531 set :buildBlock:y :buildBlockFromCfg.6:y
 
   571 set :buildBlockFromCfg.7:config null
   572 setaddr *tmp152 *label120
   573 label *label117
-    * op add *tmp153 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp153
-    * op add *tmp154 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp154
+  574 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  575 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   576 set :buildBlock:block :buildBlockFromCfg.7:block
   577 set :buildBlock:x :buildBlockFromCfg.7:x
   578 set :buildBlock:y :buildBlockFromCfg.7:y
 
   606 set :buildBlockFromCfg.8:config @mono
   607 setaddr *tmp156 *label126
   608 label *label123
-    * op add *tmp157 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp157
-    * op add *tmp158 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp158
+  609 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  610 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   611 set :buildBlock:block :buildBlockFromCfg.8:block
   612 set :buildBlock:x :buildBlockFromCfg.8:x
   613 set :buildBlock:y :buildBlockFromCfg.8:y
 
   646 set :buildBlockFromCfg.9:config null
   647 setaddr *tmp160 *label132
   648 label *label129
-    * op add *tmp161 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp161
-    * op add *tmp162 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp162
+  649 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  650 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   651 set :buildBlock:block :buildBlockFromCfg.9:block
   652 set :buildBlock:x :buildBlockFromCfg.9:x
   653 set :buildBlock:y :buildBlockFromCfg.9:y
 
   685 set :buildBlockFromCfg.10:config null
   686 setaddr *tmp164 *label138
   687 label *label135
-    * op add *tmp165 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp165
-    * op add *tmp166 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp166
+  688 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  689 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   690 set :buildBlock:block :buildBlockFromCfg.10:block
   691 set :buildBlock:x :buildBlockFromCfg.10:x
   692 set :buildBlock:y :buildBlockFromCfg.10:y
 
   721 set :buildBlockFromCfg.11:config null
   722 setaddr *tmp168 *label144
   723 label *label141
-    * op add *tmp169 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp169
-    * op add *tmp170 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp170
+  724 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  725 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   726 set :buildBlock:block :buildBlockFromCfg.11:block
   727 set :buildBlock:x :buildBlockFromCfg.11:x
   728 set :buildBlock:y :buildBlockFromCfg.11:y
 
   756 set :buildBlockFromCfg.12:config null
   757 setaddr *tmp172 *label150
   758 label *label147
-    * op add *tmp173 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp173
-    * op add *tmp174 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp174
+  759 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  760 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   761 set :buildBlock:block :buildBlockFromCfg.12:block
   762 set :buildBlock:x :buildBlockFromCfg.12:x
   763 set :buildBlock:y :buildBlockFromCfg.12:y
 
   792 set :buildBlockFromCfg.13:config null
   793 setaddr *tmp176 *label156
   794 label *label153
-    * op add *tmp177 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp177
-    * op add *tmp178 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp178
+  795 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  796 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   797 set :buildBlock:block :buildBlockFromCfg.13:block
   798 set :buildBlock:x :buildBlockFromCfg.13:x
   799 set :buildBlock:y :buildBlockFromCfg.13:y
 
   827 set :buildBlockFromCfg.14:config null
   828 setaddr *tmp180 *label162
   829 label *label159
-    * op add *tmp181 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp181
-    * op add *tmp182 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp182
+  830 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  831 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   832 set :buildBlock:block :buildBlockFromCfg.14:block
   833 set :buildBlock:x :buildBlockFromCfg.14:x
   834 set :buildBlock:y :buildBlockFromCfg.14:y
 
   862 set :buildBlockFromCfg.15:config null
   863 setaddr *tmp184 *label168
   864 label *label165
-    * op add *tmp185 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp185
-    * op add *tmp186 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp186
+  865 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  866 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   867 set :buildBlock:block :buildBlockFromCfg.15:block
   868 set :buildBlock:x :buildBlockFromCfg.15:x
   869 set :buildBlock:y :buildBlockFromCfg.15:y
 
   901 set :buildBlockFromCfg.16:config @coal
   902 setaddr *tmp188 *label174
   903 label *label171
-    * op add *tmp189 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp189
-    * op add *tmp190 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp190
+  904 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  905 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   906 set :buildBlock:block :buildBlockFromCfg.16:block
   907 set :buildBlock:x :buildBlockFromCfg.16:x
   908 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1026 setaddr :moveToBlock*retaddr *label207 (h:*label207)
  1027 call *label3 *invalid :moveToBlock*retval (m:*label207) (h:*label207)
  1028 label *label207
-    * sensor *tmp211 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp211
+ 1029 sensor :depositItems:cap :depositItems:block @itemCapacity
  1030 label *label208
  1031 ucontrol itemDrop :depositItems:block 30
  1032 sensor *tmp212 :depositItems:block :depositItems:item
 
  1061 return :depositItems*retaddr
  1062 end
  1063 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 *tmp220
+ 1064 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
  1065 op equal *tmp221 *tmp219 false
  1066 jump *label218 equal *tmp221 false
  1067 set :error.1:error "Cannot locate ore"
 
  1075 return :locateOre*retaddr
  1076 end
  1077 label *label6
-    * op min *tmp223 :mineOre:amount 30
-    * set :mineOre:amount *tmp223
+ 1078 op min :mineOre:amount :mineOre:amount 30
  1079 set :transportStatus.1:target :mineOre:amount
  1080 set :transportStatus.1:item :mineOre:ore
  1081 write :transportStatus.1:target .display ".transportTarget"
 
  1095 set :status3.3:text "Mining..."
  1096 write :status3.3:text .display ".status3"
  1097 label *label225
-    * op add *tmp224 @second 10
-    * set :mineOre:stop *tmp224
+ 1098 op add :mineOre:stop @second 10
  1099 label *label226
-    * sensor *tmp225 @unit @firstItem
-    * set :mineOre:item *tmp225
+ 1100 sensor :mineOre:item @unit @firstItem
  1101 op notEqual *tmp226 :mineOre:item null
  1102 op notEqual *tmp227 :mineOre:item :mineOre:ore
  1103 op land *tmp228 *tmp226 *tmp227
 
  1136 write :status2:item .display ".item2"
  1137 write :status2:block .display ".block2"
  1138 label *label235
-    * set *tmp234 :mineOre.1:ore
-    * set :mineOre:ore *tmp234
+ 1139 set :mineOre:ore :mineOre.1:ore
  1140 set :mineOre:amount 30
  1141 set :mineOre:block .core
  1142 setaddr :mineOre*retaddr *label236 (h:*label236)
 
  1146 return :mineOre.1*retaddr
  1147 end
  1148 label *label8
-    * sensor *tmp235 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp235
+ 1149 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1150 set :transportStatus.2:item :fetchBlock:item
  1151 write :transportStatus.2:target .display ".transportTarget"
  1152 write :transportStatus.2:item .display ".transportItem"
 
  1167 label *label240
  1168 label *label241
  1169 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp238 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp238
+ 1170 sensor :fetchBlock:unitItem @unit @firstItem
  1171 op notEqual *tmp239 :fetchBlock:unitItem null
  1172 op notEqual *tmp240 :fetchBlock:unitItem :fetchBlock:item
  1173 op land *tmp241 *tmp239 *tmp240
 
  1214 write :status2.2:item .display ".item2"
  1215 write :status2.2:block .display ".block2"
  1216 label *label256
-    * sensor *tmp255 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp255
+ 1217 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1218 sensor *tmp256 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp257 :supplyBlock:blockCapacity *tmp256
-    * set :supplyBlock:missing *tmp257
+ 1219 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp256
  1220 op greaterThan *tmp258 :supplyBlock:missing 0
  1221 jump *label257 equal *tmp258 false
  1222 set :mineOre:ore :supplyBlock:ore
 
  1254 write :status2.3:item .display ".item2"
  1255 write :status2.3:block .display ".block2"
  1256 label *label266
-    * sensor *tmp266 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp266
+ 1257 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1258 sensor *tmp267 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp268 :supplyBlock.1:blockCapacity *tmp267
-    * set :supplyBlock.1:missing *tmp268
+ 1259 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp267
  1260 op greaterThan *tmp269 :supplyBlock.1:missing 0
  1261 jump *label267 equal *tmp269 false
  1262 set :mineOre:ore :supplyBlock.1:ore
 
  1287 write :status2.4:item .display ".item2"
  1288 write :status2.4:block .display ".block2"
  1289 label *label274
-    * sensor *tmp274 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp274
+ 1290 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1291 sensor *tmp275 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp276 :supplyBlock.2:blockCapacity *tmp275
-    * set :supplyBlock.2:missing *tmp276
+ 1292 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp275
  1293 op greaterThan *tmp277 :supplyBlock.2:missing 0
  1294 jump *label275 equal *tmp277 false
  1295 set :mineOre:ore :supplyBlock.2:ore
 
  1328 write :status2.5:item .display ".item2"
  1329 write :status2.5:block .display ".block2"
  1330 label *label284
-    * sensor *tmp285 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp285
+ 1331 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1332 sensor *tmp286 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp287 :supplyBlock.3:blockCapacity *tmp286
-    * set :supplyBlock.3:missing *tmp287
+ 1333 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp286
  1334 op greaterThan *tmp288 :supplyBlock.3:missing 0
  1335 jump *label285 equal *tmp288 false
  1336 set :mineOre:ore :supplyBlock.3:ore
 
  1377 set :status1.5:text "Goal 6: Meeting the silicon target"
  1378 write :status1.5:text .display ".status1"
  1379 label *label298
-    * sensor *tmp302 .core @coal
-    * set :supplyBase:coal *tmp302
-    * sensor *tmp303 .core @sand
-    * set :supplyBase:sand *tmp303
+ 1380 sensor :supplyBase:coal .core @coal
+ 1381 sensor :supplyBase:sand .core @sand
  1382 op lessThan *tmp304 :supplyBase:coal :supplyBase:sand
  1383 jump *label299 equal *tmp304 false
  1384 set *tmp305 @coal
 
  1432 set :status1.9:text "Goal 10: Supplying base"
  1433 write :status1.9:text .display ".status1"
  1434 label *label314
-    * sensor *tmp315 .core @coal
-    * set :supplyBase:coal.1 *tmp315
-    * sensor *tmp316 .core @sand
-    * set :supplyBase:sand.1 *tmp316
+ 1435 sensor :supplyBase:coal.1 .core @coal
+ 1436 sensor :supplyBase:sand.1 .core @sand
  1437 op lessThanEq *tmp317 :supplyBase:coal.1 :supplyBase:sand.1
  1438 jump *label315 equal *tmp317 false
  1439 set *tmp318 @coal
 
  1566 write .polys .display ".polys"
  1567 write .flares .display ".flares"
  1568 set .targetCopper :meetTarget:copper
-    * op max *tmp339 :meetTarget:lead :meetTarget:leadFactory
-    * set .targetLead *tmp339
+ 1569 op max .targetLead :meetTarget:lead :meetTarget:leadFactory
  1570 set .targetGraphite :meetTarget:graphite
-    * op max *tmp340 :meetTarget:silicon :meetTarget:siliconFactory
-    * set .targetSilicon *tmp340
+ 1571 op max .targetSilicon :meetTarget:silicon :meetTarget:siliconFactory
  1572 set .targetTitanium :meetTarget:titanium
  1573 set .targetMetaglass :meetTarget:metaglass
  1574 op add *tmp341 .targetGraphite 20
 
  1618 set :status3.4:text "Building..."
  1619 write :status3.4:text .display ".status3"
  1620 label *label356
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp350 *tmp351
-    * set :buildBlockAt:building *tmp350
+ 1621 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1622 op notEqual *tmp352 :buildBlockAt:building null
  1623 jump *label357 equal *tmp352 false
  1624 op equal *tmp354 :buildBlockAt:type :buildBlockAt:block
 
  1644 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1645 wait 0.25
  1646 label *label364
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp357 *tmp358
-    * set :buildBlockAt:building *tmp357
+ 1647 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1648 op equal *tmp359 :buildBlockAt:building null
  1649 jump *label367 equal *tmp359 false
  1650 jump *label366 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
   228 set :buildTitaniumDrillCfg:attempts 0
   229 set :buildTitaniumDrillCfg:minimum 3
   230 label *label53
-    * jump *label55 equal true false
   231 set :meetTarget:block @pneumatic-drill
   232 set :meetTarget:copper 18
   233 set :meetTarget:lead 0
 
   244 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   245 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   246 label *label58
-    * jump *label60 equal true false
   247 set :locateOre:ore :locateOreAway:ore
   248 setaddr :locateOre*retaddr *label61 (h:*label61)
   249 call *label5 *invalid :locateOre*retval (m:*label61) (h:*label61)
 
   922 label *label173
   923 label *label170
   924 label *label176
-    * jump *label178 equal true false
   925 setaddr :supplyBase*retaddr *label179 (h:*label179)
   926 call *label9 *invalid :supplyBase*retval (m:*label179) (h:*label179)
   927 label *label179

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-57 instructions):
 
    15 ubind @poly
    16 ulocate building core false @copper .coreX .coreY 0 .core
    17 label *label16
-    * op equal *tmp43 .core null
-    * jump *label15 notEqual *tmp43 false
+   18 jump *label15 equal .core null
    19 label *label17
    20 set .display processor1
    21 set .flareController processor3
 
   324 set :checkOre:ore @ore-titanium
   325 set :checkOre:count :buildTitaniumDrillCfg:count
   326 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp87 :checkOre:floor :checkOre:ore
-    * jump *label78 equal *tmp87 false
+  327 jump *label78 notEqual :checkOre:floor :checkOre:ore
   328 op add :checkOre:count :checkOre:count 1
   329 jump *label79 always
   330 label *label78
 
   336 set :checkOre.1:ore @ore-titanium
   337 set :checkOre.1:count :buildTitaniumDrillCfg:count
   338 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp94 :checkOre.1:floor :checkOre.1:ore
-    * jump *label81 equal *tmp94 false
+  339 jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
   340 op add :checkOre.1:count :checkOre.1:count 1
   341 jump *label82 always
   342 label *label81
 
   349 set :checkOre.2:ore @ore-titanium
   350 set :checkOre.2:count :buildTitaniumDrillCfg:count
   351 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp101 :checkOre.2:floor :checkOre.2:ore
-    * jump *label84 equal *tmp101 false
+  352 jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
   353 op add :checkOre.2:count :checkOre.2:count 1
   354 jump *label85 always
   355 label *label84
 
   363 set :checkOre.3:ore @ore-titanium
   364 set :checkOre.3:count :buildTitaniumDrillCfg:count
   365 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * op equal *tmp109 :checkOre.3:floor :checkOre.3:ore
-    * jump *label87 equal *tmp109 false
+  366 jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
   367 op add :checkOre.3:count :checkOre.3:count 1
   368 jump *label88 always
   369 label *label87
   370 label *label88
   371 label *label86
   372 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * op greaterThan *tmp112 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label89 equal *tmp112 false
+  373 jump *label89 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
   374 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   375 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
   376 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp114 :buildTitaniumDrillCfg:count 4
-    * jump *label91 equal *tmp114 false
+  377 jump *label91 lessThan :buildTitaniumDrillCfg:count 4
   378 jump *label69 always
   379 jump *label92 always
   380 label *label91
 
   390 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   391 jump *label67 always
   392 label *label69
-    * op greaterThan *tmp116 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
-    * jump *label93 equal *tmp116 false
+  393 jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   394 op div *tmp118 :buildTitaniumDrillCfg:dx 2
   395 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp118
   396 op div *tmp120 :buildTitaniumDrillCfg:dy 2
 
   413 call *label12 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   414 label *label97
   415 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp130 :buildTitaniumDrillCfg:result null
-    * jump *label98 equal *tmp130 false
+  416 jump *label98 equal :buildTitaniumDrillCfg:result null
   417 set *tmp66 :buildTitaniumDrillCfg:result
   418 jump *label52 always
   419 jump *label99 always
 
   429 label *label93
   430 label *label94
   431 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp132 :buildTitaniumDrillCfg:attempts 5
-    * jump *label100 equal *tmp132 false
+  432 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
   433 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   434 op sin *tmp135 :buildTitaniumDrillCfg:angle
   435 op mul *tmp136 *tmp135 :buildTitaniumDrillCfg:distance
 
   930 label *label183
   931 label *label184
   932 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
-    * op equal *tmp192 *tmp191 false
-    * jump *label186 equal *tmp192 false
+  933 jump *label186 notEqual *tmp191 false
   934 op sub *tmp193 :moveTo:radius 0.5
   935 ucontrol approach :moveTo:x :moveTo:y *tmp193
   936 label *label185
 
   957 label *label190
   958 label *label191
   959 sensor *tmp196 @unit @firstItem
-    * op notEqual *tmp197 *tmp196 null
-    * jump *label194 equal *tmp197 false
+  960 jump *label194 equal *tmp196 null
   961 ucontrol itemDrop @air 1000
   962 jump *label195 always
   963 label *label194
 
   965 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
   966 label *label192
   967 ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp199
-    * op equal *tmp200 *tmp199 false
-    * jump *label191 notEqual *tmp200 false
+  968 jump *label191 equal *tmp199 false
   969 label *label193
   970 label *label196
   971 sensor *tmp201 @unit @firstItem
-    * op notEqual *tmp202 *tmp201 null
-    * jump *label198 equal *tmp202 false
+  972 jump *label198 equal *tmp201 null
   973 ucontrol itemDrop @air 1000
   974 label *label197
   975 jump *label196 always
 
   994 write :status3.2:text .display ".status3"
   995 label *label202
   996 sensor *tmp205 @unit @firstItem
-    * op equal *tmp206 *tmp205 :depositItems:item
-    * jump *label203 equal *tmp206 false
+  997 jump *label203 notEqual *tmp205 :depositItems:item
   998 op equal *tmp208 :depositItems:block .core
   999 op land *tmp209 :depositItems:fromMining *tmp208
  1000 jump *label205 equal *tmp209 false
 
  1012 label *label208
  1013 ucontrol itemDrop :depositItems:block 30
  1014 sensor *tmp212 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp213 *tmp212 :depositItems:cap
-    * jump *label211 equal *tmp213 false
+ 1015 jump *label211 lessThan *tmp212 :depositItems:cap
  1016 jump *label210 always
  1017 jump *label212 always
  1018 label *label211
  1019 label *label212
  1020 label *label209
  1021 sensor *tmp215 @unit @firstItem
-    * op notEqual *tmp216 *tmp215 null
-    * jump *label208 notEqual *tmp216 false
+ 1022 jump *label208 notEqual *tmp215 null
  1023 label *label210
  1024 jump *label204 always
  1025 label *label203
  1026 label *label213
  1027 sensor *tmp217 @unit @firstItem
-    * op notEqual *tmp218 *tmp217 null
-    * jump *label215 equal *tmp218 false
+ 1028 jump *label215 equal *tmp217 null
  1029 ucontrol itemDrop @air 1000
  1030 label *label214
  1031 jump *label213 always
 
  1041 end
  1042 label *label5
  1043 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
-    * op equal *tmp221 *tmp219 false
-    * jump *label218 equal *tmp221 false
+ 1044 jump *label218 notEqual *tmp219 false
  1045 set :error.1:error "Cannot locate ore"
  1046 set .ERROR :error.1:error
  1047 stop
 
  1085 label *label229
  1086 label *label230
  1087 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp230 @second :mineOre:stop
-    * jump *label231 equal *tmp230 false
+ 1088 jump *label231 lessThanEq @second :mineOre:stop
  1089 jump *label228 always
  1090 jump *label232 always
  1091 label *label231
  1092 label *label232
  1093 label *label227
  1094 sensor *tmp232 @unit @totalItems
-    * op lessThan *tmp233 *tmp232 :mineOre:amount
-    * jump *label226 notEqual *tmp233 false
+ 1095 jump *label226 lessThan *tmp232 :mineOre:amount
  1096 label *label228
  1097 ucontrol unbind
  1098 set :depositItems:block :mineOre:block
 
  1170 end
  1171 label *label9
  1172 set :supplyBase:supplied false
-    * op equal *tmp247 .unloader1 null
-    * jump *label248 equal *tmp247 false
+ 1173 jump *label248 notEqual .unloader1 null
  1174 sensor *tmp249 .core @graphite
-    * op lessThan *tmp250 *tmp249 .targetGraphite
-    * jump *label250 equal *tmp250 false
+ 1175 jump *label250 greaterThanEq *tmp249 .targetGraphite
  1176 sensor *tmp252 .press @coal
-    * op lessThan *tmp253 *tmp252 5
-    * jump *label252 equal *tmp253 false
+ 1177 jump *label252 greaterThanEq *tmp252 5
  1178 set :status1:text "Goal 1: Meeting the graphite target"
  1179 write :status1:text .display ".status1"
  1180 label *label254
 
  1190 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1191 sensor *tmp256 :supplyBlock:block :supplyBlock:ore
  1192 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp256
-    * op greaterThan *tmp258 :supplyBlock:missing 0
-    * jump *label257 equal *tmp258 false
+ 1193 jump *label257 lessThanEq :supplyBlock:missing 0
  1194 set :mineOre:ore :supplyBlock:ore
  1195 set :mineOre:amount :supplyBlock:blockCapacity
  1196 set :mineOre:block :supplyBlock:block
 
  1209 label *label250
  1210 label *label251
  1211 sensor *tmp260 .core @silicon
-    * op lessThan *tmp261 *tmp260 .targetSilicon
-    * jump *label260 equal *tmp261 false
+ 1212 jump *label260 greaterThanEq *tmp260 .targetSilicon
  1213 sensor *tmp263 .smelter @coal
-    * op lessThan *tmp264 *tmp263 5
-    * jump *label262 equal *tmp264 false
+ 1214 jump *label262 greaterThanEq *tmp263 5
  1215 set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
  1216 write :status1.1:text .display ".status1"
  1217 label *label264
 
  1227 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1228 sensor *tmp267 :supplyBlock.1:block :supplyBlock.1:ore
  1229 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp267
-    * op greaterThan *tmp269 :supplyBlock.1:missing 0
-    * jump *label267 equal *tmp269 false
+ 1230 jump *label267 lessThanEq :supplyBlock.1:missing 0
  1231 set :mineOre:ore :supplyBlock.1:ore
  1232 set :mineOre:amount :supplyBlock.1:blockCapacity
  1233 set :mineOre:block :supplyBlock.1:block
 
  1242 jump *label263 always
  1243 label *label262
  1244 sensor *tmp271 .smelter @sand
-    * op lessThan *tmp272 *tmp271 5
-    * jump *label270 equal *tmp272 false
+ 1245 jump *label270 greaterThanEq *tmp271 5
  1246 set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
  1247 write :status1.2:text .display ".status1"
  1248 label *label272
 
  1258 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1259 sensor *tmp275 :supplyBlock.2:block :supplyBlock.2:ore
  1260 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp275
-    * op greaterThan *tmp277 :supplyBlock.2:missing 0
-    * jump *label275 equal *tmp277 false
+ 1261 jump *label275 lessThanEq :supplyBlock.2:missing 0
  1262 set :mineOre:ore :supplyBlock.2:ore
  1263 set :mineOre:amount :supplyBlock.2:blockCapacity
  1264 set :mineOre:block :supplyBlock.2:block
 
  1278 label *label260
  1279 label *label261
  1280 sensor *tmp279 .battery @totalPower
-    * op lessThan *tmp280 *tmp279 .powerTarget
-    * jump *label278 equal *tmp280 false
+ 1281 jump *label278 greaterThanEq *tmp279 .powerTarget
  1282 sensor *tmp282 .generator @coal
-    * op lessThan *tmp283 *tmp282 2
-    * jump *label280 equal *tmp283 false
+ 1283 jump *label280 greaterThanEq *tmp282 2
  1284 set :status1.3:text "Goal 4: Supplying generator"
  1285 write :status1.3:text .display ".status1"
  1286 label *label282
 
  1296 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1297 sensor *tmp286 :supplyBlock.3:block :supplyBlock.3:ore
  1298 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp286
-    * op greaterThan *tmp288 :supplyBlock.3:missing 0
-    * jump *label285 equal *tmp288 false
+ 1299 jump *label285 lessThanEq :supplyBlock.3:missing 0
  1300 set :mineOre:ore :supplyBlock.3:ore
  1301 set :mineOre:amount :supplyBlock.3:blockCapacity
  1302 set :mineOre:block :supplyBlock.3:block
 
  1318 label *label248
  1319 label *label249
  1320 sensor *tmp290 .titanium_drill @titanium
-    * op lessThan *tmp291 *tmp290 .titaniumTrigger
-    * jump *label288 equal *tmp291 false
-    * op equal *tmp293 :supplyBase:supplied false
-    * jump *label290 equal *tmp293 false
+ 1321 jump *label288 greaterThanEq *tmp290 .titaniumTrigger
+ 1322 jump *label290 notEqual :supplyBase:supplied false
  1323 sensor *tmp295 .battery @totalPower
  1324 op mul *tmp296 .unloader1 .powerTarget
-    * op lessThan *tmp297 *tmp295 *tmp296
-    * jump *label292 equal *tmp297 false
+ 1325 jump *label292 greaterThanEq *tmp295 *tmp296
  1326 set :status1.4:text "Goal 5: Supplying generator (5)"
  1327 write :status1.4:text .display ".status1"
  1328 label *label294
 
  1333 jump *label293 always
  1334 label *label292
  1335 sensor *tmp299 .core @silicon
-    * op lessThan *tmp300 *tmp299 .targetSilicon
-    * jump *label296 equal *tmp300 false
+ 1336 jump *label296 greaterThanEq *tmp299 .targetSilicon
  1337 set :status1.5:text "Goal 6: Meeting the silicon target"
  1338 write :status1.5:text .display ".status1"
  1339 label *label298
  1340 sensor :supplyBase:coal .core @coal
  1341 sensor :supplyBase:sand .core @sand
-    * op lessThan *tmp304 :supplyBase:coal :supplyBase:sand
-    * jump *label299 equal *tmp304 false
+ 1342 jump *label299 greaterThanEq :supplyBase:coal :supplyBase:sand
  1343 set *tmp305 @coal
  1344 jump *label300 always
  1345 label *label299
 
  1353 jump *label297 always
  1354 label *label296
  1355 sensor *tmp306 .core @copper
-    * op lessThan *tmp307 *tmp306 .targetCopper
-    * jump *label302 equal *tmp307 false
+ 1356 jump *label302 greaterThanEq *tmp306 .targetCopper
  1357 set :status1.6:text "Goal 7: Meeting the copper target"
  1358 write :status1.6:text .display ".status1"
  1359 label *label304
 
  1364 jump *label303 always
  1365 label *label302
  1366 sensor *tmp309 .core @lead
-    * op lessThan *tmp310 *tmp309 .targetLead
-    * jump *label306 equal *tmp310 false
+ 1367 jump *label306 greaterThanEq *tmp309 .targetLead
  1368 set :status1.7:text "Goal 8: Meeting the lead target"
  1369 write :status1.7:text .display ".status1"
  1370 label *label308
 
  1375 jump *label307 always
  1376 label *label306
  1377 sensor *tmp312 .core @metaglass
-    * op lessThan *tmp313 *tmp312 .targetMetaglass
-    * jump *label310 equal *tmp313 false
+ 1378 jump *label310 greaterThanEq *tmp312 .targetMetaglass
  1379 set :status1.8:text "Goal 9: Meeting the metaglass target"
  1380 write :status1.8:text .display ".status1"
  1381 label *label312
 
  1390 label *label314
  1391 sensor :supplyBase:coal.1 .core @coal
  1392 sensor :supplyBase:sand.1 .core @sand
-    * op lessThanEq *tmp317 :supplyBase:coal.1 :supplyBase:sand.1
-    * jump *label315 equal *tmp317 false
+ 1393 jump *label315 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1394 set *tmp318 @coal
  1395 jump *label316 always
  1396 label *label315
 
  1425 end
  1426 label *label10
  1427 sensor *tmp319 .core @copper
-    * op greaterThanEq *tmp320 *tmp319 .targetCopper
-    * jump *label321 equal *tmp320 false
+ 1428 jump *label321 lessThan *tmp319 .targetCopper
  1429 sensor *tmp322 .leadSiliconBlock @lead
-    * op greaterThanEq *tmp323 *tmp322 .targetLead
-    * jump *label323 equal *tmp323 false
+ 1430 jump *label323 lessThan *tmp322 .targetLead
  1431 sensor *tmp325 .core @graphite
-    * op greaterThanEq *tmp326 *tmp325 .targetGraphite
-    * jump *label325 equal *tmp326 false
+ 1432 jump *label325 lessThan *tmp325 .targetGraphite
  1433 sensor *tmp328 .leadSiliconBlock @silicon
-    * op greaterThanEq *tmp329 *tmp328 .targetSilicon
-    * jump *label327 equal *tmp329 false
+ 1434 jump *label327 lessThan *tmp328 .targetSilicon
  1435 sensor *tmp331 .core @titanium
-    * op greaterThanEq *tmp332 *tmp331 .targetTitanium
-    * jump *label329 equal *tmp332 false
+ 1436 jump *label329 lessThan *tmp331 .targetTitanium
  1437 sensor *tmp334 .core @metaglass
-    * op greaterThanEq *tmp335 *tmp334 .targetMetaglass
-    * jump *label331 equal *tmp335 false
+ 1438 jump *label331 lessThan *tmp334 .targetMetaglass
  1439 set :targetMet*retval true
  1440 jump *label320 always
  1441 jump *label332 always
 
  1527 op add *tmp343 .targetMetaglass 20
  1528 write *tmp343 .controller ".kilnTarget"
  1529 sensor *tmp344 .core @titanium
-    * op lessThan *tmp345 *tmp344 .targetTitanium
-    * jump *label345 equal *tmp345 false
+ 1530 jump *label345 greaterThanEq *tmp344 .targetTitanium
  1531 set *tmp346 7
  1532 jump *label346 always
  1533 label *label345
  1534 set *tmp346 100
  1535 label *label346
  1536 set .titaniumTrigger *tmp346
-    * op greaterThan *tmp347 :meetTarget:siliconFactory 0
-    * jump *label347 equal *tmp347 false
+ 1537 jump *label347 lessThanEq :meetTarget:siliconFactory 0
  1538 set *tmp348 .factory
  1539 jump *label348 always
  1540 label *label347
 
  1545 setaddr :targetMet*retaddr *label352 (h:*label352)
  1546 call *label10 *invalid :targetMet*retval (m:*label352) (h:*label352)
  1547 label *label352
-    * op equal *tmp349 :targetMet*retval false
-    * jump *label351 equal *tmp349 false
+ 1548 jump *label351 notEqual :targetMet*retval false
  1549 setaddr :supplyBase*retaddr *label353 (h:*label353)
  1550 call *label9 *invalid :supplyBase*retval (m:*label353) (h:*label353)
  1551 label *label353
 
  1565 write :status3.4:text .display ".status3"
  1566 label *label356
  1567 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp352 :buildBlockAt:building null
-    * jump *label357 equal *tmp352 false
-    * op equal *tmp354 :buildBlockAt:type :buildBlockAt:block
-    * jump *label359 equal *tmp354 false
+ 1568 jump *label357 equal :buildBlockAt:building null
+ 1569 jump *label359 notEqual :buildBlockAt:type :buildBlockAt:block
  1570 set :buildBlockAt*retval :buildBlockAt:building
  1571 jump *label354 always
  1572 jump *label360 always
 
  1589 wait 0.25
  1590 label *label364
  1591 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp359 :buildBlockAt:building null
-    * jump *label367 equal *tmp359 false
+ 1592 jump *label367 notEqual :buildBlockAt:building null
  1593 jump *label366 always
  1594 jump *label368 always
  1595 label *label367
  1596 label *label368
  1597 label *label365
-    * op notEqual *tmp361 :buildBlockAt:type :buildBlockAt:block
-    * jump *label364 notEqual *tmp361 false
+ 1598 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1599 label *label366
  1600 set :buildBlockAt*retval :buildBlockAt:building
  1601 jump *label354 always
 
  1635 set :findUnits:count 0
  1636 ubind :findUnits:type
  1637 set :findUnits:firstUnit @unit
-    * op notEqual *tmp362 :findUnits:firstUnit null
-    * jump *label373 equal *tmp362 false
+ 1638 jump *label373 equal :findUnits:firstUnit null
  1639 label *label375
  1640 op add :findUnits:count :findUnits:count 1
  1641 ucontrol flag :findUnits:count
  1642 ubind :findUnits:type
  1643 label *label376
-    * op notEqual *tmp364 @unit :findUnits:firstUnit
-    * jump *label375 notEqual *tmp364 false
+ 1644 jump *label375 notEqual @unit :findUnits:firstUnit
  1645 label *label377
  1646 jump *label374 always
  1647 label *label373

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   258 op or *tmp74 *tmp70 *tmp73
   259 jump *label62 equal *tmp74 false
   260 jump *label60 always
-    * jump *label63 always
   261 label *label62
   262 label *label63
   263 op sin *tmp77 :locateOreAway:angle
 
   325 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   326 jump *label78 notEqual :checkOre:floor :checkOre:ore
   327 op add :checkOre:count :checkOre:count 1
-    * jump *label79 always
   328 label *label78
   329 label *label79
   330 label *label77
 
   336 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   337 jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
   338 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label82 always
   339 label *label81
   340 label *label82
   341 label *label80
 
   348 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   349 jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
   350 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label85 always
   351 label *label84
   352 label *label85
   353 label *label83
 
   361 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   362 jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
   363 op add :checkOre.3:count :checkOre.3:count 1
-    * jump *label88 always
   364 label *label87
   365 label *label88
   366 label *label86
 
   371 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
   372 jump *label91 lessThan :buildTitaniumDrillCfg:count 4
   373 jump *label69 always
-    * jump *label92 always
   374 label *label91
   375 label *label92
-    * jump *label90 always
   376 label *label89
   377 label *label90
   378 label *label71
 
   409 jump *label98 equal :buildTitaniumDrillCfg:result null
   410 set *tmp66 :buildTitaniumDrillCfg:result
   411 jump *label52 always
-    * jump *label99 always
   412 label *label98
   413 label *label99
   414 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
 
   417 set :buildTitaniumDrillCfg:attempts 1000
   418 set :buildTitaniumDrillCfg:minimum 3
   419 label *label96
-    * jump *label94 always
   420 label *label93
   421 label *label94
   422 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
   439 set :buildTitaniumDrillCfg:attempts 0
   440 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
   441 op max :buildTitaniumDrillCfg:minimum *tmp141 1
-    * jump *label101 always
   442 label *label100
   443 label *label101
   444 label *label54
 
   949 sensor *tmp196 @unit @firstItem
   950 jump *label194 equal *tmp196 null
   951 ucontrol itemDrop @air 1000
-    * jump *label195 always
   952 label *label194
   953 label *label195
   954 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
 
  1003 sensor *tmp212 :depositItems:block :depositItems:item
  1004 jump *label211 lessThan *tmp212 :depositItems:cap
  1005 jump *label210 always
-    * jump *label212 always
  1006 label *label211
  1007 label *label212
  1008 label *label209
 
  1034 set .ERROR :error.1:error
  1035 stop
  1036 label *label220
-    * jump *label219 always
  1037 label *label218
  1038 label *label219
  1039 label *label217
 
  1068 op land *tmp228 *tmp226 *tmp227
  1069 jump *label229 equal *tmp228 false
  1070 jump *label228 always
-    * jump *label230 always
  1071 label *label229
  1072 label *label230
  1073 ucontrol mine :mineOre:x :mineOre:y
  1074 jump *label231 lessThanEq @second :mineOre:stop
  1075 jump *label228 always
-    * jump *label232 always
  1076 label *label231
  1077 label *label232
  1078 label *label227
 
  1134 op land *tmp241 *tmp239 *tmp240
  1135 jump *label244 equal *tmp241 false
  1136 ucontrol itemDrop @air 1000
-    * jump *label245 always
  1137 label *label244
  1138 label *label245
  1139 label *label242
 
  1181 setaddr :mineOre*retaddr *label259 (h:*label259)
  1182 call *label6 *invalid :mineOre*retval (m:*label259) (h:*label259)
  1183 label *label259
-    * jump *label258 always
  1184 label *label257
  1185 label *label258
  1186 label *label255
  1187 set :supplyBase:supplied true
-    * jump *label253 always
  1188 label *label252
  1189 label *label253
-    * jump *label251 always
  1190 label *label250
  1191 label *label251
  1192 sensor *tmp260 .core @silicon
 
  1215 setaddr :mineOre*retaddr *label269 (h:*label269)
  1216 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1217 label *label269
-    * jump *label268 always
  1218 label *label267
  1219 label *label268
  1220 label *label265
 
  1245 setaddr :mineOre*retaddr *label277 (h:*label277)
  1246 call *label6 *invalid :mineOre*retval (m:*label277) (h:*label277)
  1247 label *label277
-    * jump *label276 always
  1248 label *label275
  1249 label *label276
  1250 label *label273
  1251 set :supplyBase:supplied true
-    * jump *label271 always
  1252 label *label270
  1253 label *label271
  1254 label *label263
-    * jump *label261 always
  1255 label *label260
  1256 label *label261
  1257 sensor *tmp279 .battery @totalPower
 
  1280 setaddr :mineOre*retaddr *label287 (h:*label287)
  1281 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1282 label *label287
-    * jump *label286 always
  1283 label *label285
  1284 label *label286
  1285 label *label283
  1286 set :supplyBase:supplied true
-    * jump *label281 always
  1287 label *label280
  1288 label *label281
-    * jump *label279 always
  1289 label *label278
  1290 label *label279
-    * jump *label249 always
  1291 label *label248
  1292 label *label249
  1293 sensor *tmp290 .titanium_drill @titanium
 
  1379 label *label303
  1380 label *label297
  1381 label *label293
-    * jump *label291 always
  1382 label *label290
  1383 label *label291
  1384 jump *label289 always
 
  1410 jump *label331 lessThan *tmp334 .targetMetaglass
  1411 set :targetMet*retval true
  1412 jump *label320 always
-    * jump *label332 always
  1413 label *label331
  1414 label *label332
-    * jump *label330 always
  1415 label *label329
  1416 label *label330
-    * jump *label328 always
  1417 label *label327
  1418 label *label328
-    * jump *label326 always
  1419 label *label325
  1420 label *label326
-    * jump *label324 always
  1421 label *label323
  1422 label *label324
-    * jump *label322 always
  1423 label *label321
  1424 label *label322
  1425 set :targetMet*retval false
 
  1535 jump *label359 notEqual :buildBlockAt:type :buildBlockAt:block
  1536 set :buildBlockAt*retval :buildBlockAt:building
  1537 jump *label354 always
-    * jump *label360 always
  1538 label *label359
  1539 label *label360
  1540 jump *label361 equal :buildBlockAt:skipError false
  1541 set :buildBlockAt*retval null
  1542 jump *label354 always
-    * jump *label362 always
  1543 label *label361
  1544 label *label362
  1545 set :error.2:error "Cannot build at ("
  1546 set .ERROR :error.2:error
  1547 stop
  1548 label *label363
-    * jump *label358 always
  1549 label *label357
  1550 label *label358
  1551 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1554 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1555 jump *label367 notEqual :buildBlockAt:building null
  1556 jump *label366 always
-    * jump *label368 always
  1557 label *label367
  1558 label *label368
  1559 label *label365
 
  1605 label *label376
  1606 jump *label375 notEqual @unit :findUnits:firstUnit
  1607 label *label377
-    * jump *label374 always
  1608 label *label373
  1609 label *label374
  1610 label *label372

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-35 instructions):
 
     4 set .smelter null
     5 set .titanium_drill null
     6 set .unloader1 null
-    * set .unloader2 null
     7 set .factory null
-    * set .generator2 null
     8 set .kiln null
-    * set .monos 0
-    * set .flares 0
-    * set .polys 0
     9 label *label15
    10 ubind @poly
    11 ulocate building core false @copper .coreX .coreY 0 .core
 
    40 set :buildBlockFromCfg:metaglass 0
    41 set :buildBlockFromCfg:rotation 0
    42 set :buildBlockFromCfg:config null
-    * setaddr *tmp46 *label25
    43 label *label22
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   44 op add :buildBlockFromCfg:x .coreX -1.5
+   45 op add :buildBlockFromCfg:y .coreY 2.5
+   46 set :buildBlock:block @graphite-press
    47 set :buildBlock:x :buildBlockFromCfg:x
    48 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   49 set :buildBlock:copper 75
+   50 set :buildBlock:lead 30
+   51 set :buildBlock:graphite 0
+   52 set :buildBlock:silicon 0
+   53 set :buildBlock:titanium 0
+   54 set :buildBlock:metaglass 0
+   55 set :buildBlock:rotation 0
+   56 set :buildBlock:config null
    57 setaddr :buildBlock*retaddr *label26 (h:*label26)
    58 call *label13 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    59 label *label26
 
    63 multijump *tmp46 0 0 (m:marker0)
    64 multilabel *label25 (m:marker0)
    65 label *label24
-    * set *tmp45 null
    66 label *label21
    67 set .press *tmp45
    68 set :buildBlockFromCfg.1:block @battery
 
    76 set :buildBlockFromCfg.1:metaglass 0
    77 set :buildBlockFromCfg.1:rotation 0
    78 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp50 *label31
    79 label *label28
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   80 op add :buildBlockFromCfg.1:x .coreX 0
+   81 op add :buildBlockFromCfg.1:y .coreY 4
+   82 set :buildBlock:block @battery
    83 set :buildBlock:x :buildBlockFromCfg.1:x
    84 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   85 set :buildBlock:copper 5
+   86 set :buildBlock:lead 20
+   87 set :buildBlock:graphite 0
+   88 set :buildBlock:silicon 0
+   89 set :buildBlock:titanium 0
+   90 set :buildBlock:metaglass 0
+   91 set :buildBlock:rotation 0
+   92 set :buildBlock:config null
    93 setaddr :buildBlock*retaddr *label32 (h:*label32)
    94 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    95 label *label32
 
    99 multijump *tmp50 0 0 (m:marker1)
   100 multilabel *label31 (m:marker1)
   101 label *label30
-    * set *tmp49 null
   102 label *label27
   103 set .battery *tmp49
   104 set :buildBlockFromCfg.2:block @battery
 
   112 set :buildBlockFromCfg.2:metaglass 0
   113 set :buildBlockFromCfg.2:rotation 0
   114 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp54 *label37
   115 label *label34
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  116 op add :buildBlockFromCfg.2:x .coreX -1
+  117 op add :buildBlockFromCfg.2:y .coreY 4
+  118 set :buildBlock:block @battery
   119 set :buildBlock:x :buildBlockFromCfg.2:x
   120 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  121 set :buildBlock:copper 5
+  122 set :buildBlock:lead 20
+  123 set :buildBlock:graphite 0
+  124 set :buildBlock:silicon 0
+  125 set :buildBlock:titanium 0
+  126 set :buildBlock:metaglass 0
+  127 set :buildBlock:rotation 0
+  128 set :buildBlock:config null
   129 setaddr :buildBlock*retaddr *label38 (h:*label38)
   130 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
   131 label *label38
 
   146 set :buildBlockFromCfg.3:metaglass 0
   147 set :buildBlockFromCfg.3:rotation 0
   148 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp58 *label43
   149 label *label40
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  150 op add :buildBlockFromCfg.3:x .coreX 0
+  151 op add :buildBlockFromCfg.3:y .coreY 3
+  152 set :buildBlock:block @combustion-generator
   153 set :buildBlock:x :buildBlockFromCfg.3:x
   154 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  155 set :buildBlock:copper 25
+  156 set :buildBlock:lead 15
+  157 set :buildBlock:graphite 0
+  158 set :buildBlock:silicon 0
+  159 set :buildBlock:titanium 0
+  160 set :buildBlock:metaglass 0
+  161 set :buildBlock:rotation 0
+  162 set :buildBlock:config null
   163 setaddr :buildBlock*retaddr *label44 (h:*label44)
   164 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   165 label *label44
 
   169 multijump *tmp58 0 0 (m:marker3)
   170 multilabel *label43 (m:marker3)
   171 label *label42
-    * set *tmp57 null
   172 label *label39
   173 set .generator *tmp57
   174 set .powerTarget 400
 
   183 set :buildBlockFromCfg.4:metaglass 0
   184 set :buildBlockFromCfg.4:rotation 0
   185 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp62 *label49
   186 label *label46
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  187 op add :buildBlockFromCfg.4:x .coreX 1.5
+  188 op add :buildBlockFromCfg.4:y .coreY 2.5
+  189 set :buildBlock:block @silicon-smelter
   190 set :buildBlock:x :buildBlockFromCfg.4:x
   191 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  192 set :buildBlock:copper 30
+  193 set :buildBlock:lead 25
+  194 set :buildBlock:graphite 0
+  195 set :buildBlock:silicon 0
+  196 set :buildBlock:titanium 0
+  197 set :buildBlock:metaglass 0
+  198 set :buildBlock:rotation 0
+  199 set :buildBlock:config null
   200 setaddr :buildBlock*retaddr *label50 (h:*label50)
   201 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   202 label *label50
 
   206 multijump *tmp62 0 0 (m:marker4)
   207 multilabel *label49 (m:marker4)
   208 label *label48
-    * set *tmp61 null
   209 label *label45
   210 set .smelter *tmp61
   211 set :buildTitaniumDrillCfg:distance 32
 
   229 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   230 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   231 label *label58
-    * set :locateOre:ore :locateOreAway:ore
+  232 set :locateOre:ore @titanium
   233 setaddr :locateOre*retaddr *label61 (h:*label61)
   234 call *label5 *invalid :locateOre*retval (m:*label61) (h:*label61)
   235 label *label61
   236 set :locateOreAway:x :locateOre:x
   237 set :locateOreAway:y :locateOre:y
-    * op sub *tmp68 :locateOreAway:x .coreX
+  238 op sub *tmp68 :locateOre:x .coreX
   239 op abs *tmp69 *tmp68
   240 op greaterThanEq *tmp70 *tmp69 10
-    * op sub *tmp71 :locateOreAway:y .coreY
+  241 op sub *tmp71 :locateOre:y .coreY
   242 op abs *tmp72 *tmp71
   243 op greaterThanEq *tmp73 *tmp72 10
   244 op or *tmp74 *tmp70 *tmp73
 
   268 set :buildTitaniumDrillCfg:y :locateOreAway:y
   269 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   270 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  271 set :moveTo.1:x :locateOreAway:x
+  272 set :moveTo.1:y :locateOreAway:y
   273 setaddr :moveTo.1*retaddr *label66 (h:*label66)
   274 call *label1 *invalid :moveTo.1*retval (m:*label66) (h:*label66)
   275 label *label66
-    * set :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:x
-    * set :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:y
+  276 set :buildTitaniumDrillCfg:ax :locateOreAway:x
+  277 set :buildTitaniumDrillCfg:ay :locateOreAway:y
   278 set :buildTitaniumDrillCfg:best 0
   279 set :buildTitaniumDrillCfg:dx 0
   280 set :buildTitaniumDrillCfg:dy 0
 
   307 set :checkOre:x :buildTitaniumDrillCfg:ax
   308 set :checkOre:y :buildTitaniumDrillCfg:ay
   309 set :checkOre:ore @ore-titanium
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * jump *label78 notEqual :checkOre:floor :checkOre:ore
-    * op add :checkOre:count :checkOre:count 1
+  310 set :checkOre:count 0
+  311 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  312 jump *label78 notEqual :checkOre:floor @ore-titanium
+  313 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   314 label *label78
   315 label *label79
   316 label *label77
 
   318 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   319 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   320 set :checkOre.1:ore @ore-titanium
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
-    * op add :checkOre.1:count :checkOre.1:count 1
+  321 set :checkOre.1:count :checkOre:count
+  322 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  323 jump *label81 notEqual :checkOre.1:floor @ore-titanium
+  324 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   325 label *label81
   326 label *label82
   327 label *label80
 
   330 set :checkOre.2:x :buildTitaniumDrillCfg:ax
   331 set :checkOre.2:y *tmp97
   332 set :checkOre.2:ore @ore-titanium
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
-    * op add :checkOre.2:count :checkOre.2:count 1
+  333 set :checkOre.2:count :checkOre.1:count
+  334 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
+  335 jump *label84 notEqual :checkOre.2:floor @ore-titanium
+  336 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   337 label *label84
   338 label *label85
   339 label *label83
   340 set :buildTitaniumDrillCfg:count :checkOre.2:count
   341 op add *tmp104 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   342 op add *tmp105 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x *tmp104
-    * set :checkOre.3:y *tmp105
+  343 set :checkOre.3:x :checkOre.1:x
+  344 set :checkOre.3:y *tmp97
   345 set :checkOre.3:ore @ore-titanium
-    * set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
-    * op add :checkOre.3:count :checkOre.3:count 1
+  346 set :checkOre.3:count :checkOre.2:count
+  347 ucontrol getBlock *tmp104 *tmp105 0 0 :checkOre.3:floor
+  348 jump *label87 notEqual :checkOre.3:floor @ore-titanium
+  349 op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
   350 label *label87
   351 label *label88
   352 label *label86
   353 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * jump *label89 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  354 jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   355 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   356 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label91 lessThan :buildTitaniumDrillCfg:count 4
+  357 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  358 jump *label91 lessThan :checkOre.3:count 4
   359 jump *label69 always
   360 label *label91
   361 label *label92
 
   374 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp118
   375 op div *tmp120 :buildTitaniumDrillCfg:dy 2
   376 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp120
-    * op sub *tmp122 :buildTitaniumDrillCfg:x .coreX
+  377 op sub *tmp122 :locateOreAway:x .coreX
   378 op abs *tmp123 *tmp122
   379 op greaterThanEq *tmp124 *tmp123 10
-    * op sub *tmp125 :buildTitaniumDrillCfg:y .coreY
+  380 op sub *tmp125 :locateOreAway:y .coreY
   381 op abs *tmp126 *tmp125
   382 op greaterThanEq *tmp127 *tmp126 10
   383 op or *tmp128 *tmp124 *tmp127
 
   392 call *label12 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   393 label *label97
   394 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label98 equal :buildTitaniumDrillCfg:result null
-    * set *tmp66 :buildTitaniumDrillCfg:result
+  395 jump *label98 equal :buildBlockAt*retval null
+  396 set *tmp66 :buildBlockAt*retval
   397 jump *label52 always
   398 label *label98
   399 label *label99
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
+  400 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   401 jump *label96 always
   402 label *label95
   403 set :buildTitaniumDrillCfg:attempts 1000
 
   407 label *label94
   408 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   409 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * op sin *tmp135 :buildTitaniumDrillCfg:angle
-    * op mul *tmp136 *tmp135 :buildTitaniumDrillCfg:distance
+  410 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
+  411 op sin *tmp135 :locateOreAway:angle
+  412 op mul *tmp136 *tmp135 :locateOreAway:distance
   413 op add *tmp137 .coreX *tmp136
-    * op cos *tmp138 :buildTitaniumDrillCfg:angle
-    * op mul *tmp139 *tmp138 :buildTitaniumDrillCfg:distance
+  414 op cos *tmp138 :locateOreAway:angle
+  415 op mul *tmp139 *tmp138 :locateOreAway:distance
   416 op add *tmp140 .coreY *tmp139
   417 set :moveTo.1:x *tmp137
   418 set :moveTo.1:y *tmp140
   419 setaddr :moveTo.1*retaddr *label103 (h:*label103)
   420 call *label1 *invalid :moveTo.1*retval (m:*label103) (h:*label103)
   421 label *label103
-    * op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
-    * op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
+  422 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
+  423 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
   424 label *label102
   425 set :buildTitaniumDrillCfg:attempts 0
   426 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
 
   434 label *label52
   435 set *tmp65 *tmp66
   436 label *label51
-    * set .titanium_drill *tmp65
-    * write .core .flareController ".core"
-    * write .titanium_drill .flareController ".drill"
+  437 set .titanium_drill *tmp66
+  438 write .core processor3 ".core"
+  439 write *tmp65 processor3 ".drill"
   440 set :buildBlockFromCfg.5:block @unloader
   441 set :buildBlockFromCfg.5:offsetX 0
   442 set :buildBlockFromCfg.5:offsetY 2
 
   448 set :buildBlockFromCfg.5:metaglass 0
   449 set :buildBlockFromCfg.5:rotation 0
   450 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp144 *label108
   451 label *label105
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  452 op add :buildBlockFromCfg.5:x .coreX 0
+  453 op add :buildBlockFromCfg.5:y .coreY 2
+  454 set :buildBlock:block @unloader
   455 set :buildBlock:x :buildBlockFromCfg.5:x
   456 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  457 set :buildBlock:copper 0
+  458 set :buildBlock:lead 0
+  459 set :buildBlock:graphite 0
+  460 set :buildBlock:silicon 30
+  461 set :buildBlock:titanium 25
+  462 set :buildBlock:metaglass 0
+  463 set :buildBlock:rotation 0
+  464 set :buildBlock:config null
   465 setaddr :buildBlock*retaddr *label109 (h:*label109)
   466 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   467 label *label109
 
   471 multijump *tmp144 0 0 (m:marker6)
   472 multilabel *label108 (m:marker6)
   473 label *label107
-    * set *tmp143 null
   474 label *label104
   475 set .unloader1 *tmp143
   476 set :buildBlockFromCfg.6:block @micro-processor
 
   484 set :buildBlockFromCfg.6:metaglass 0
   485 set :buildBlockFromCfg.6:rotation 0
   486 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp148 *label114
   487 label *label111
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  488 op add :buildBlockFromCfg.6:x .coreX 1
+  489 op add :buildBlockFromCfg.6:y .coreY 4
+  490 set :buildBlock:block @micro-processor
   491 set :buildBlock:x :buildBlockFromCfg.6:x
   492 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  493 set :buildBlock:copper 90
+  494 set :buildBlock:lead 50
+  495 set :buildBlock:graphite 0
+  496 set :buildBlock:silicon 50
+  497 set :buildBlock:titanium 0
+  498 set :buildBlock:metaglass 0
+  499 set :buildBlock:rotation 0
+  500 set :buildBlock:config processor2
   501 setaddr :buildBlock*retaddr *label115 (h:*label115)
   502 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   503 label *label115
 
   507 multijump *tmp148 0 0 (m:marker7)
   508 multilabel *label114 (m:marker7)
   509 label *label113
-    * set *tmp147 null
   510 label *label110
   511 set .controller *tmp147
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .monos .controller ".monos"
-    * write .flares .controller ".flares"
-    * write .polys .controller ".polys"
+  512 write processor1 *tmp147 ".display"
+  513 write .core *tmp147 ".core"
+  514 write *tmp49 *tmp147 ".battery"
+  515 write *tmp57 *tmp147 ".generator"
+  516 write *tmp61 *tmp147 ".smelter"
+  517 write *tmp45 *tmp147 ".press"
+  518 write .monos *tmp147 ".monos"
+  519 write .flares *tmp147 ".flares"
+  520 write .polys *tmp147 ".polys"
   521 set :buildBlockFromCfg.7:block @power-node
   522 set :buildBlockFromCfg.7:offsetX -2
   523 set :buildBlockFromCfg.7:offsetY -1
 
   529 set :buildBlockFromCfg.7:metaglass 0
   530 set :buildBlockFromCfg.7:rotation 0
   531 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp152 *label120
   532 label *label117
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  533 op add :buildBlockFromCfg.7:x .coreX -2
+  534 op add :buildBlockFromCfg.7:y .coreY -1
+  535 set :buildBlock:block @power-node
   536 set :buildBlock:x :buildBlockFromCfg.7:x
   537 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  538 set :buildBlock:copper 2
+  539 set :buildBlock:lead 6
+  540 set :buildBlock:graphite 0
+  541 set :buildBlock:silicon 0
+  542 set :buildBlock:titanium 0
+  543 set :buildBlock:metaglass 0
+  544 set :buildBlock:rotation 0
+  545 set :buildBlock:config null
   546 setaddr :buildBlock*retaddr *label121 (h:*label121)
   547 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   548 label *label121
 
   563 set :buildBlockFromCfg.8:metaglass 0
   564 set :buildBlockFromCfg.8:rotation 3
   565 set :buildBlockFromCfg.8:config @mono
-    * setaddr *tmp156 *label126
   566 label *label123
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  567 op add :buildBlockFromCfg.8:x .coreX -4
+  568 op add :buildBlockFromCfg.8:y .coreY -1
+  569 set :buildBlock:block @air-factory
   570 set :buildBlock:x :buildBlockFromCfg.8:x
   571 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  572 set :buildBlock:copper 60
+  573 set :buildBlock:lead 70
+  574 set :buildBlock:graphite 0
+  575 set :buildBlock:silicon 0
+  576 set :buildBlock:titanium 0
+  577 set :buildBlock:metaglass 0
+  578 set :buildBlock:rotation 3
+  579 set :buildBlock:config @mono
   580 setaddr :buildBlock*retaddr *label127 (h:*label127)
   581 call *label13 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   582 label *label127
 
   586 multijump *tmp156 0 0 (m:marker9)
   587 multilabel *label126 (m:marker9)
   588 label *label125
-    * set *tmp155 null
   589 label *label122
   590 set .factory *tmp155
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
+  591 write *tmp155 *tmp147 ".factory"
+  592 write *tmp155 processor1 ".factory"
   593 set :buildBlockFromCfg.9:block @unloader
   594 set :buildBlockFromCfg.9:offsetX -2
   595 set :buildBlockFromCfg.9:offsetY 1
 
   601 set :buildBlockFromCfg.9:metaglass 0
   602 set :buildBlockFromCfg.9:rotation 0
   603 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp160 *label132
   604 label *label129
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  605 op add :buildBlockFromCfg.9:x .coreX -2
+  606 op add :buildBlockFromCfg.9:y .coreY 1
+  607 set :buildBlock:block @unloader
   608 set :buildBlock:x :buildBlockFromCfg.9:x
   609 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  610 set :buildBlock:copper 0
+  611 set :buildBlock:lead 0
+  612 set :buildBlock:graphite 0
+  613 set :buildBlock:silicon 30
+  614 set :buildBlock:titanium 25
+  615 set :buildBlock:metaglass 0
+  616 set :buildBlock:rotation 0
+  617 set :buildBlock:config null
   618 setaddr :buildBlock*retaddr *label133 (h:*label133)
   619 call *label13 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   620 label *label133
 
   624 multijump *tmp160 0 0 (m:marker10)
   625 multilabel *label132 (m:marker10)
   626 label *label131
-    * set *tmp159 null
   627 label *label128
   628 set .unloader2 *tmp159
-    * write .unloader2 .controller ".unloader2"
+  629 write *tmp159 *tmp147 ".unloader2"
   630 set :buildBlockFromCfg.10:block @overflow-gate
   631 set :buildBlockFromCfg.10:offsetX -3
   632 set :buildBlockFromCfg.10:offsetY 1
 
   638 set :buildBlockFromCfg.10:metaglass 0
   639 set :buildBlockFromCfg.10:rotation 0
   640 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp164 *label138
   641 label *label135
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  642 op add :buildBlockFromCfg.10:x .coreX -3
+  643 op add :buildBlockFromCfg.10:y .coreY 1
+  644 set :buildBlock:block @overflow-gate
   645 set :buildBlock:x :buildBlockFromCfg.10:x
   646 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  647 set :buildBlock:copper 4
+  648 set :buildBlock:lead 2
+  649 set :buildBlock:graphite 0
+  650 set :buildBlock:silicon 0
+  651 set :buildBlock:titanium 0
+  652 set :buildBlock:metaglass 0
+  653 set :buildBlock:rotation 0
+  654 set :buildBlock:config null
   655 setaddr :buildBlock*retaddr *label139 (h:*label139)
   656 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   657 label *label139
 
   661 multilabel *label138 (m:marker11)
   662 label *label137
   663 label *label134
-    * write @flare .controller ".unitToProduce"
+  664 write @flare *tmp147 ".unitToProduce"
   665 set :buildBlockFromCfg.11:block @unloader
   666 set :buildBlockFromCfg.11:offsetX 2
   667 set :buildBlockFromCfg.11:offsetY 0
 
   673 set :buildBlockFromCfg.11:metaglass 0
   674 set :buildBlockFromCfg.11:rotation 0
   675 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp168 *label144
   676 label *label141
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  677 op add :buildBlockFromCfg.11:x .coreX 2
+  678 op add :buildBlockFromCfg.11:y .coreY 0
+  679 set :buildBlock:block @unloader
   680 set :buildBlock:x :buildBlockFromCfg.11:x
   681 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  682 set :buildBlock:copper 0
+  683 set :buildBlock:lead 0
+  684 set :buildBlock:graphite 0
+  685 set :buildBlock:silicon 30
+  686 set :buildBlock:titanium 25
+  687 set :buildBlock:metaglass 0
+  688 set :buildBlock:rotation 0
+  689 set :buildBlock:config null
   690 setaddr :buildBlock*retaddr *label145 (h:*label145)
   691 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   692 label *label145
 
   707 set :buildBlockFromCfg.12:metaglass 0
   708 set :buildBlockFromCfg.12:rotation 0
   709 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp172 *label150
   710 label *label147
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  711 op add :buildBlockFromCfg.12:x .coreX 3.5
+  712 op add :buildBlockFromCfg.12:y .coreY 0.5
+  713 set :buildBlock:block @kiln
   714 set :buildBlock:x :buildBlockFromCfg.12:x
   715 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  716 set :buildBlock:copper 60
+  717 set :buildBlock:lead 30
+  718 set :buildBlock:graphite 30
+  719 set :buildBlock:silicon 0
+  720 set :buildBlock:titanium 0
+  721 set :buildBlock:metaglass 0
+  722 set :buildBlock:rotation 0
+  723 set :buildBlock:config null
   724 setaddr :buildBlock*retaddr *label151 (h:*label151)
   725 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   726 label *label151
 
   730 multilabel *label150 (m:marker13)
   731 label *label149
   732 label *label146
-    * write .kiln .controller ".kiln"
+  733 write null *tmp147 ".kiln"
   734 set :buildBlockFromCfg.13:block @junction
   735 set :buildBlockFromCfg.13:offsetX 2
   736 set :buildBlockFromCfg.13:offsetY 1
 
   742 set :buildBlockFromCfg.13:metaglass 0
   743 set :buildBlockFromCfg.13:rotation 0
   744 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp176 *label156
   745 label *label153
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  746 op add :buildBlockFromCfg.13:x .coreX 2
+  747 op add :buildBlockFromCfg.13:y .coreY 1
+  748 set :buildBlock:block @junction
   749 set :buildBlock:x :buildBlockFromCfg.13:x
   750 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  751 set :buildBlock:copper 3
+  752 set :buildBlock:lead 0
+  753 set :buildBlock:graphite 0
+  754 set :buildBlock:silicon 0
+  755 set :buildBlock:titanium 0
+  756 set :buildBlock:metaglass 0
+  757 set :buildBlock:rotation 0
+  758 set :buildBlock:config null
   759 setaddr :buildBlock*retaddr *label157 (h:*label157)
   760 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   761 label *label157
 
   776 set :buildBlockFromCfg.14:metaglass 30
   777 set :buildBlockFromCfg.14:rotation 0
   778 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp180 *label162
   779 label *label159
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  780 op add :buildBlockFromCfg.14:x .coreX -3.5
+  781 op add :buildBlockFromCfg.14:y .coreY 4.5
+  782 set :buildBlock:block @water-extractor
   783 set :buildBlock:x :buildBlockFromCfg.14:x
   784 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  785 set :buildBlock:copper 30
+  786 set :buildBlock:lead 30
+  787 set :buildBlock:graphite 30
+  788 set :buildBlock:silicon 0
+  789 set :buildBlock:titanium 0
+  790 set :buildBlock:metaglass 30
+  791 set :buildBlock:rotation 0
+  792 set :buildBlock:config null
   793 setaddr :buildBlock*retaddr *label163 (h:*label163)
   794 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   795 label *label163
 
   810 set :buildBlockFromCfg.15:metaglass 0
   811 set :buildBlockFromCfg.15:rotation 0
   812 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp184 *label168
   813 label *label165
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  814 op add :buildBlockFromCfg.15:x .coreX -3.5
+  815 op add :buildBlockFromCfg.15:y .coreY 2.5
+  816 set :buildBlock:block @steam-generator
   817 set :buildBlock:x :buildBlockFromCfg.15:x
   818 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  819 set :buildBlock:copper 35
+  820 set :buildBlock:lead 40
+  821 set :buildBlock:graphite 25
+  822 set :buildBlock:silicon 30
+  823 set :buildBlock:titanium 0
+  824 set :buildBlock:metaglass 0
+  825 set :buildBlock:rotation 0
+  826 set :buildBlock:config null
   827 setaddr :buildBlock*retaddr *label169 (h:*label169)
   828 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   829 label *label169
 
   833 multijump *tmp184 0 0 (m:marker16)
   834 multilabel *label168 (m:marker16)
   835 label *label167
-    * set *tmp183 null
   836 label *label164
   837 set .generator2 *tmp183
-    * write .generator2 .controller ".generator2"
+  838 write *tmp183 *tmp147 ".generator2"
   839 set :buildBlockFromCfg.16:block @sorter
   840 set :buildBlockFromCfg.16:offsetX -4
   841 set :buildBlockFromCfg.16:offsetY 1
 
   847 set :buildBlockFromCfg.16:metaglass 0
   848 set :buildBlockFromCfg.16:rotation 0
   849 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp188 *label174
   850 label *label171
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  851 op add :buildBlockFromCfg.16:x .coreX -4
+  852 op add :buildBlockFromCfg.16:y .coreY 1
+  853 set :buildBlock:block @sorter
   854 set :buildBlock:x :buildBlockFromCfg.16:x
   855 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  856 set :buildBlock:copper 2
+  857 set :buildBlock:lead 2
+  858 set :buildBlock:graphite 0
+  859 set :buildBlock:silicon 0
+  860 set :buildBlock:titanium 0
+  861 set :buildBlock:metaglass 0
+  862 set :buildBlock:rotation 0
+  863 set :buildBlock:config @coal
   864 setaddr :buildBlock*retaddr *label175 (h:*label175)
   865 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   866 label *label175
 
   878 jump *label176 always
   879 label *label178
   880 ucontrol stop
-    * set :error:error "Done"
-    * set .ERROR :error:error
+  881 set .ERROR "Done"
   882 stop
   883 label *label180
   884 end
   885 label *label0
   886 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  887 write "Moving..." .display ".status3"
   888 label *label183
   889 label *label184
   890 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
 
   900 label *label1
   901 set *tmp194 :moveTo.1:x
   902 set *tmp195 :moveTo.1:y
-    * set :moveTo:x *tmp194
-    * set :moveTo:y *tmp195
+  903 set :moveTo:x :moveTo.1:x
+  904 set :moveTo:y :moveTo.1:y
   905 set :moveTo:radius 5
   906 setaddr :moveTo*retaddr *label188 (h:*label188)
   907 call *label0 *invalid :moveTo*retval (m:*label188) (h:*label188)
 
   911 end
   912 label *label2
   913 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  914 write "Moving..." .display ".status3"
   915 label *label190
   916 label *label191
   917 sensor *tmp196 @unit @firstItem
 
   948 end
   949 label *label4
   950 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+  951 write "Depositing..." .display ".status3"
   952 label *label202
   953 sensor *tmp205 @unit @firstItem
   954 jump *label203 notEqual *tmp205 :depositItems:item
 
   989 label *label204
   990 set :transportStatus:target 0
   991 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  992 write 0 .display ".transportTarget"
+  993 write null .display ".transportItem"
   994 label *label216
   995 label *label201
   996 return :depositItems*retaddr
 
   999 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
  1000 jump *label218 notEqual *tmp219 false
  1001 set :error.1:error "Cannot locate ore"
-    * set .ERROR :error.1:error
+ 1002 set .ERROR "Cannot locate ore"
  1003 stop
  1004 label *label220
  1005 label *label218
 
  1011 op min :mineOre:amount :mineOre:amount 30
  1012 set :transportStatus.1:target :mineOre:amount
  1013 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1014 write :mineOre:amount .display ".transportTarget"
+ 1015 write :mineOre:ore .display ".transportItem"
  1016 label *label222
  1017 set :locateOre:ore :mineOre:ore
  1018 setaddr :locateOre*retaddr *label223 (h:*label223)
 
  1020 label *label223
  1021 set :mineOre:x :locateOre:x
  1022 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1023 set :moveToEmpty:x :locateOre:x
+ 1024 set :moveToEmpty:y :locateOre:y
  1025 setaddr :moveToEmpty*retaddr *label224 (h:*label224)
  1026 call *label2 *invalid :moveToEmpty*retval (m:*label224) (h:*label224)
  1027 label *label224
  1028 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1029 write "Mining..." .display ".status3"
  1030 label *label225
  1031 op add :mineOre:stop @second 10
  1032 label *label226
 
  1061 set :status2:text "Mining "
  1062 set :status2:item :mineOre.1:ore
  1063 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1064 write "Mining " .display ".status2"
+ 1065 write :mineOre.1:ore .display ".item2"
+ 1066 write "core" .display ".block2"
  1067 label *label235
  1068 set :mineOre:ore :mineOre.1:ore
  1069 set :mineOre:amount 30
 
  1078 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1079 set :transportStatus.2:item :fetchBlock:item
  1080 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1081 write :fetchBlock:item .display ".transportItem"
  1082 label *label238
  1083 set :status2.1:text "Fetching "
  1084 set :status2.1:item :fetchBlock:item
  1085 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1086 write "Fetching " .display ".status2"
+ 1087 write :fetchBlock:item .display ".item2"
+ 1088 write :fetchBlock:block .display ".block2"
  1089 label *label239
  1090 sensor *tmp236 :fetchBlock:block @x
  1091 sensor *tmp237 :fetchBlock:block @y
 
  1128 sensor *tmp252 .press @coal
  1129 jump *label252 greaterThanEq *tmp252 5
  1130 set :status1:text "Goal 1: Meeting the graphite target"
-    * write :status1:text .display ".status1"
+ 1131 write "Goal 1: Meeting the graphite target" .display ".status1"
  1132 label *label254
  1133 set :supplyBlock:block .press
  1134 set :supplyBlock:ore @coal
  1135 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1136 set :status2.2:item @coal
+ 1137 set :status2.2:block .press
+ 1138 write "Supplying " .display ".status2"
+ 1139 write :supplyBlock:ore .display ".item2"
+ 1140 write :supplyBlock:block .display ".block2"
  1141 label *label256
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp256 :supplyBlock:block :supplyBlock:ore
+ 1142 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1143 sensor *tmp256 .press @coal
  1144 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp256
  1145 jump *label257 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1146 set :mineOre:ore @coal
  1147 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1148 set :mineOre:block .press
  1149 setaddr :mineOre*retaddr *label259 (h:*label259)
  1150 call *label6 *invalid :mineOre*retval (m:*label259) (h:*label259)
  1151 label *label259
 
  1162 sensor *tmp263 .smelter @coal
  1163 jump *label262 greaterThanEq *tmp263 5
  1164 set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
-    * write :status1.1:text .display ".status1"
+ 1165 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
  1166 label *label264
  1167 set :supplyBlock.1:block .smelter
  1168 set :supplyBlock.1:ore @coal
  1169 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1170 set :status2.3:item @coal
+ 1171 set :status2.3:block .smelter
+ 1172 write "Supplying " .display ".status2"
+ 1173 write :supplyBlock.1:ore .display ".item2"
+ 1174 write :supplyBlock.1:block .display ".block2"
  1175 label *label266
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp267 :supplyBlock.1:block :supplyBlock.1:ore
+ 1176 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1177 sensor *tmp267 .smelter @coal
  1178 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp267
  1179 jump *label267 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1180 set :mineOre:ore @coal
  1181 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1182 set :mineOre:block .smelter
  1183 setaddr :mineOre*retaddr *label269 (h:*label269)
  1184 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
  1185 label *label269
 
  1192 sensor *tmp271 .smelter @sand
  1193 jump *label270 greaterThanEq *tmp271 5
  1194 set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
-    * write :status1.2:text .display ".status1"
+ 1195 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
  1196 label *label272
  1197 set :supplyBlock.2:block .smelter
  1198 set :supplyBlock.2:ore @sand
  1199 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1200 set :status2.4:item @sand
+ 1201 set :status2.4:block .smelter
+ 1202 write "Supplying " .display ".status2"
+ 1203 write :supplyBlock.2:ore .display ".item2"
+ 1204 write :supplyBlock.2:block .display ".block2"
  1205 label *label274
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp275 :supplyBlock.2:block :supplyBlock.2:ore
+ 1206 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1207 sensor *tmp275 .smelter @sand
  1208 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp275
  1209 jump *label275 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1210 set :mineOre:ore @sand
  1211 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1212 set :mineOre:block .smelter
  1213 setaddr :mineOre*retaddr *label277 (h:*label277)
  1214 call *label6 *invalid :mineOre*retval (m:*label277) (h:*label277)
  1215 label *label277
 
  1227 sensor *tmp282 .generator @coal
  1228 jump *label280 greaterThanEq *tmp282 2
  1229 set :status1.3:text "Goal 4: Supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1230 write "Goal 4: Supplying generator" .display ".status1"
  1231 label *label282
  1232 set :supplyBlock.3:block .generator
  1233 set :supplyBlock.3:ore @coal
  1234 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1235 set :status2.5:item @coal
+ 1236 set :status2.5:block .generator
+ 1237 write "Supplying " .display ".status2"
+ 1238 write :supplyBlock.3:ore .display ".item2"
+ 1239 write :supplyBlock.3:block .display ".block2"
  1240 label *label284
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp286 :supplyBlock.3:block :supplyBlock.3:ore
+ 1241 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1242 sensor *tmp286 .generator @coal
  1243 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp286
  1244 jump *label285 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1245 set :mineOre:ore @coal
  1246 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1247 set :mineOre:block .generator
  1248 setaddr :mineOre*retaddr *label287 (h:*label287)
  1249 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
  1250 label *label287
 
  1265 op mul *tmp296 .unloader1 .powerTarget
  1266 jump *label292 greaterThanEq *tmp295 *tmp296
  1267 set :status1.4:text "Goal 5: Supplying generator (5)"
-    * write :status1.4:text .display ".status1"
+ 1268 write "Goal 5: Supplying generator (5)" .display ".status1"
  1269 label *label294
  1270 set :mineOre.1:ore @coal
  1271 setaddr :mineOre.1*retaddr *label295 (h:*label295)
 
  1276 sensor *tmp299 .core @silicon
  1277 jump *label296 greaterThanEq *tmp299 .targetSilicon
  1278 set :status1.5:text "Goal 6: Meeting the silicon target"
-    * write :status1.5:text .display ".status1"
+ 1279 write "Goal 6: Meeting the silicon target" .display ".status1"
  1280 label *label298
  1281 sensor :supplyBase:coal .core @coal
  1282 sensor :supplyBase:sand .core @sand
 
  1287 set *tmp305 @sand
  1288 label *label300
  1289 set :supplyBase:ore *tmp305
-    * set :mineOre.1:ore :supplyBase:ore
+ 1290 set :mineOre.1:ore *tmp305
  1291 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1292 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
  1293 label *label301
 
  1296 sensor *tmp306 .core @copper
  1297 jump *label302 greaterThanEq *tmp306 .targetCopper
  1298 set :status1.6:text "Goal 7: Meeting the copper target"
-    * write :status1.6:text .display ".status1"
+ 1299 write "Goal 7: Meeting the copper target" .display ".status1"
  1300 label *label304
  1301 set :mineOre.1:ore @copper
  1302 setaddr :mineOre.1*retaddr *label305 (h:*label305)
 
  1307 sensor *tmp309 .core @lead
  1308 jump *label306 greaterThanEq *tmp309 .targetLead
  1309 set :status1.7:text "Goal 8: Meeting the lead target"
-    * write :status1.7:text .display ".status1"
+ 1310 write "Goal 8: Meeting the lead target" .display ".status1"
  1311 label *label308
  1312 set :mineOre.1:ore @lead
  1313 setaddr :mineOre.1*retaddr *label309 (h:*label309)
 
  1318 sensor *tmp312 .core @metaglass
  1319 jump *label310 greaterThanEq *tmp312 .targetMetaglass
  1320 set :status1.8:text "Goal 9: Meeting the metaglass target"
-    * write :status1.8:text .display ".status1"
+ 1321 write "Goal 9: Meeting the metaglass target" .display ".status1"
  1322 label *label312
  1323 set :mineOre.1:ore @sand
  1324 setaddr :mineOre.1*retaddr *label313 (h:*label313)
 
  1327 jump *label311 always
  1328 label *label310
  1329 set :status1.9:text "Goal 10: Supplying base"
-    * write :status1.9:text .display ".status1"
+ 1330 write "Goal 10: Supplying base" .display ".status1"
  1331 label *label314
  1332 sensor :supplyBase:coal.1 .core @coal
  1333 sensor :supplyBase:sand.1 .core @sand
 
  1338 set *tmp318 @sand
  1339 label *label316
  1340 set :supplyBase:ore.1 *tmp318
-    * set :mineOre.1:ore :supplyBase:ore.1
+ 1341 set :mineOre.1:ore *tmp318
  1342 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1343 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
  1344 label *label317
 
  1352 jump *label289 always
  1353 label *label288
  1354 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1355 write "Goal 11: Fetching titanium" .display ".status1"
  1356 label *label318
  1357 set :fetchBlock:block .titanium_drill
  1358 set :fetchBlock:item @titanium
 
  1392 label *label322
  1393 set :targetMet*retval false
  1394 jump *label320 always
-    * set :targetMet*retval null
  1395 label *label320
  1396 return :targetMet*retaddr
  1397 end
 
  1453 op max .targetSilicon :meetTarget:silicon :meetTarget:siliconFactory
  1454 set .targetTitanium :meetTarget:titanium
  1455 set .targetMetaglass :meetTarget:metaglass
-    * op add *tmp341 .targetGraphite 20
+ 1456 op add *tmp341 :meetTarget:graphite 20
  1457 write *tmp341 .controller ".pressTarget"
  1458 op add *tmp342 .targetSilicon 20
  1459 write *tmp342 .controller ".smelterTarget"
-    * op add *tmp343 .targetMetaglass 20
+ 1460 op add *tmp343 :meetTarget:metaglass 20
  1461 write *tmp343 .controller ".kilnTarget"
  1462 sensor *tmp344 .core @titanium
-    * jump *label345 greaterThanEq *tmp344 .targetTitanium
+ 1463 jump *label345 greaterThanEq *tmp344 :meetTarget:titanium
  1464 set *tmp346 7
  1465 jump *label346 always
  1466 label *label345
 
  1495 call *label1 *invalid :moveTo.1*retval (m:*label355) (h:*label355)
  1496 label *label355
  1497 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1498 write "Building..." .display ".status3"
  1499 label *label356
  1500 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1501 jump *label357 equal :buildBlockAt:building null
 
  1510 label *label361
  1511 label *label362
  1512 set :error.2:error "Cannot build at ("
-    * set .ERROR :error.2:error
+ 1513 set .ERROR "Cannot build at ("
  1514 stop
  1515 label *label363
  1516 label *label357
 
  1528 label *label366
  1529 set :buildBlockAt*retval :buildBlockAt:building
  1530 jump *label354 always
-    * set :buildBlockAt*retval null
  1531 label *label354
  1532 return :buildBlockAt*retaddr
  1533 end
 
  1555 label *label371
  1556 set :buildBlock*retval :buildBlockAt*retval
  1557 jump *label369 always
-    * set :buildBlock*retval null
  1558 label *label369
  1559 return :buildBlock*retaddr
  1560 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-261 instructions):
 
     5 set .titanium_drill null
     6 set .unloader1 null
     7 set .factory null
-    * set .kiln null
     8 label *label15
     9 ubind @poly
    10 ulocate building core false @copper .coreX .coreY 0 .core
 
    12 jump *label15 equal .core null
    13 label *label17
    14 set .display processor1
-    * set .flareController processor3
    15 set :findUnits:type @mono
    16 setaddr :findUnits*retaddr *label18 (h:*label18)
    17 call *label14 *invalid :findUnits*retval (m:*label18) (h:*label18)
 
    27 call *label14 *invalid :findUnits*retval (m:*label20) (h:*label20)
    28 label *label20
    29 set .polys :findUnits:count
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    30 label *label22
    31 op add :buildBlockFromCfg:x .coreX -1.5
    32 op add :buildBlockFromCfg:y .coreY 2.5
 
    52 label *label24
    53 label *label21
    54 set .press *tmp45
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    55 label *label28
    56 op add :buildBlockFromCfg.1:x .coreX 0
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    77 label *label30
    78 label *label27
    79 set .battery *tmp49
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    80 label *label34
    81 op add :buildBlockFromCfg.2:x .coreX -1
    82 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    83 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   84 set :buildBlock:y :buildBlockFromCfg.1:y
    85 set :buildBlock:graphite 0
    86 set :buildBlock:silicon 0
    87 set :buildBlock:titanium 0
 
    97 multilabel *label37 (m:marker2)
    98 label *label36
    99 label *label33
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   100 label *label40
   101 op add :buildBlockFromCfg.3:x .coreX 0
   102 op add :buildBlockFromCfg.3:y .coreY 3
   103 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  104 set :buildBlock:x :buildBlockFromCfg.1:x
   105 set :buildBlock:y :buildBlockFromCfg.3:y
   106 set :buildBlock:copper 25
   107 set :buildBlock:lead 15
 
   123 label *label39
   124 set .generator *tmp57
   125 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   126 label *label46
   127 op add :buildBlockFromCfg.4:x .coreX 1.5
   128 op add :buildBlockFromCfg.4:y .coreY 2.5
   129 set :buildBlock:block @silicon-smelter
   130 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  131 set :buildBlock:y :buildBlockFromCfg:y
   132 set :buildBlock:copper 30
   133 set :buildBlock:lead 25
   134 set :buildBlock:graphite 0
 
   165 setaddr :meetTarget*retaddr *label56 (h:*label56)
   166 call *label11 *invalid :meetTarget*retval (m:*label56) (h:*label56)
   167 label *label56
-    * set :locateOreAway:ore @titanium
   168 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   169 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   170 label *label58
 
   203 jump *label58 always
   204 label *label60
   205 label *label57
-    * set :buildTitaniumDrillCfg:x :locateOreAway:x
-    * set :buildTitaniumDrillCfg:y :locateOreAway:y
   206 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   207 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   208 set :moveTo.1:x :locateOreAway:x
 
   241 setaddr *tmp83 *label76
   242 label *label70
   243 set :buildTitaniumDrillCfg:count 0
-    * set :checkOre:x :buildTitaniumDrillCfg:ax
-    * set :checkOre:y :buildTitaniumDrillCfg:ay
-    * set :checkOre:ore @ore-titanium
   244 set :checkOre:count 0
   245 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   246 jump *label78 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  247 op add :checkOre:count 0 1
   248 label *label78
   249 label *label79
   250 label *label77
   251 set :buildTitaniumDrillCfg:count :checkOre:count
   252 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:y :buildTitaniumDrillCfg:ay
-    * set :checkOre.1:ore @ore-titanium
   253 set :checkOre.1:count :checkOre:count
   254 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   255 jump *label81 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  256 op add :checkOre.1:count :checkOre:count 1
   257 label *label81
   258 label *label82
   259 label *label80
   260 set :buildTitaniumDrillCfg:count :checkOre.1:count
   261 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :buildTitaniumDrillCfg:ax
-    * set :checkOre.2:y *tmp97
-    * set :checkOre.2:ore @ore-titanium
   262 set :checkOre.2:count :checkOre.1:count
   263 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   264 jump *label84 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  265 op add :checkOre.2:count :checkOre.1:count 1
   266 label *label84
   267 label *label85
   268 label *label83
   269 set :buildTitaniumDrillCfg:count :checkOre.2:count
   270 op add *tmp104 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   271 op add *tmp105 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x :checkOre.1:x
-    * set :checkOre.3:y *tmp97
-    * set :checkOre.3:ore @ore-titanium
   272 set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock *tmp104 *tmp105 0 0 :checkOre.3:floor
+  273 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   274 jump *label87 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
+  275 op add :checkOre.3:count :checkOre.2:count 1
   276 label *label87
   277 label *label88
   278 label *label86
-    * set :buildTitaniumDrillCfg:count :checkOre.3:count
   279 jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   280 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   281 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
 
   316 setaddr :buildBlockAt*retaddr *label97 (h:*label97)
   317 call *label12 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   318 label *label97
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   319 jump *label98 equal :buildBlockAt*retval null
   320 set *tmp66 :buildBlockAt*retval
   321 jump *label52 always
 
   360 label *label51
   361 set .titanium_drill *tmp66
   362 write .core processor3 ".core"
-    * write *tmp65 processor3 ".drill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  363 write *tmp66 processor3 ".drill"
   364 label *label105
   365 op add :buildBlockFromCfg.5:x .coreX 0
   366 op add :buildBlockFromCfg.5:y .coreY 2
   367 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  368 set :buildBlock:x :buildBlockFromCfg.1:x
   369 set :buildBlock:y :buildBlockFromCfg.5:y
   370 set :buildBlock:copper 0
   371 set :buildBlock:lead 0
 
   386 label *label107
   387 label *label104
   388 set .unloader1 *tmp143
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   389 label *label111
   390 op add :buildBlockFromCfg.6:x .coreX 1
   391 op add :buildBlockFromCfg.6:y .coreY 4
   392 set :buildBlock:block @micro-processor
   393 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  394 set :buildBlock:y :buildBlockFromCfg.1:y
   395 set :buildBlock:copper 90
   396 set :buildBlock:lead 50
   397 set :buildBlock:graphite 0
 
   420 write .monos *tmp147 ".monos"
   421 write .flares *tmp147 ".flares"
   422 write .polys *tmp147 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   423 label *label117
   424 op add :buildBlockFromCfg.7:x .coreX -2
   425 op add :buildBlockFromCfg.7:y .coreY -1
 
   443 multilabel *label120 (m:marker8)
   444 label *label119
   445 label *label116
-    * set :buildBlockFromCfg.8:block @air-factory
-    * set :buildBlockFromCfg.8:offsetX -4
-    * set :buildBlockFromCfg.8:offsetY -1
-    * set :buildBlockFromCfg.8:copper 60
-    * set :buildBlockFromCfg.8:lead 70
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 3
-    * set :buildBlockFromCfg.8:config @mono
   446 label *label123
   447 op add :buildBlockFromCfg.8:x .coreX -4
   448 op add :buildBlockFromCfg.8:y .coreY -1
   449 set :buildBlock:block @air-factory
   450 set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  451 set :buildBlock:y :buildBlockFromCfg.7:y
   452 set :buildBlock:copper 60
   453 set :buildBlock:lead 70
   454 set :buildBlock:graphite 0
 
   470 set .factory *tmp155
   471 write *tmp155 *tmp147 ".factory"
   472 write *tmp155 processor1 ".factory"
-    * set :buildBlockFromCfg.9:block @unloader
-    * set :buildBlockFromCfg.9:offsetX -2
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 0
-    * set :buildBlockFromCfg.9:lead 0
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 30
-    * set :buildBlockFromCfg.9:titanium 25
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   473 label *label129
   474 op add :buildBlockFromCfg.9:x .coreX -2
   475 op add :buildBlockFromCfg.9:y .coreY 1
   476 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.9:x
+  477 set :buildBlock:x :buildBlockFromCfg.7:x
   478 set :buildBlock:y :buildBlockFromCfg.9:y
   479 set :buildBlock:copper 0
   480 set :buildBlock:lead 0
 
   494 multilabel *label132 (m:marker10)
   495 label *label131
   496 label *label128
-    * set .unloader2 *tmp159
   497 write *tmp159 *tmp147 ".unloader2"
-    * set :buildBlockFromCfg.10:block @overflow-gate
-    * set :buildBlockFromCfg.10:offsetX -3
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 4
-    * set :buildBlockFromCfg.10:lead 2
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   498 label *label135
   499 op add :buildBlockFromCfg.10:x .coreX -3
   500 op add :buildBlockFromCfg.10:y .coreY 1
   501 set :buildBlock:block @overflow-gate
   502 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  503 set :buildBlock:y :buildBlockFromCfg.9:y
   504 set :buildBlock:copper 4
   505 set :buildBlock:lead 2
   506 set :buildBlock:graphite 0
 
   519 label *label137
   520 label *label134
   521 write @flare *tmp147 ".unitToProduce"
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   522 label *label141
   523 op add :buildBlockFromCfg.11:x .coreX 2
   524 op add :buildBlockFromCfg.11:y .coreY 0
 
   527 set :buildBlock:y :buildBlockFromCfg.11:y
   528 set :buildBlock:copper 0
   529 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   530 set :buildBlock:silicon 30
   531 set :buildBlock:titanium 25
   532 set :buildBlock:metaglass 0
 
   541 multilabel *label144 (m:marker12)
   542 label *label143
   543 label *label140
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   544 label *label147
   545 op add :buildBlockFromCfg.12:x .coreX 3.5
   546 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   565 label *label149
   566 label *label146
   567 write null *tmp147 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   568 label *label153
   569 op add :buildBlockFromCfg.13:x .coreX 2
   570 op add :buildBlockFromCfg.13:y .coreY 1
   571 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  572 set :buildBlock:x :buildBlockFromCfg.11:x
+  573 set :buildBlock:y :buildBlockFromCfg.9:y
   574 set :buildBlock:copper 3
   575 set :buildBlock:lead 0
   576 set :buildBlock:graphite 0
 
   588 multilabel *label156 (m:marker14)
   589 label *label155
   590 label *label152
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   591 label *label159
   592 op add :buildBlockFromCfg.14:x .coreX -3.5
   593 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   597 set :buildBlock:copper 30
   598 set :buildBlock:lead 30
   599 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   600 set :buildBlock:titanium 0
   601 set :buildBlock:metaglass 30
   602 set :buildBlock:rotation 0
 
   610 multilabel *label162 (m:marker15)
   611 label *label161
   612 label *label158
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   613 label *label165
   614 op add :buildBlockFromCfg.15:x .coreX -3.5
   615 op add :buildBlockFromCfg.15:y .coreY 2.5
   616 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  617 set :buildBlock:x :buildBlockFromCfg.14:x
+  618 set :buildBlock:y :buildBlockFromCfg:y
   619 set :buildBlock:copper 35
   620 set :buildBlock:lead 40
   621 set :buildBlock:graphite 25
 
   623 set :buildBlock:titanium 0
   624 set :buildBlock:metaglass 0
   625 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   626 setaddr :buildBlock*retaddr *label169 (h:*label169)
   627 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   628 label *label169
 
   633 multilabel *label168 (m:marker16)
   634 label *label167
   635 label *label164
-    * set .generator2 *tmp183
   636 write *tmp183 *tmp147 ".generator2"
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   637 label *label171
   638 op add :buildBlockFromCfg.16:x .coreX -4
   639 op add :buildBlockFromCfg.16:y .coreY 1
   640 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  641 set :buildBlock:x :buildBlockFromCfg.8:x
+  642 set :buildBlock:y :buildBlockFromCfg.9:y
   643 set :buildBlock:copper 2
   644 set :buildBlock:lead 2
   645 set :buildBlock:graphite 0
   646 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   647 set :buildBlock:config @coal
   648 setaddr :buildBlock*retaddr *label175 (h:*label175)
   649 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
 
   667 label *label180
   668 end
   669 label *label0
-    * set :status3:text "Moving..."
   670 write "Moving..." .display ".status3"
   671 label *label183
   672 label *label184
 
   681 return :moveTo*retaddr
   682 end
   683 label *label1
-    * set *tmp194 :moveTo.1:x
-    * set *tmp195 :moveTo.1:y
   684 set :moveTo:x :moveTo.1:x
   685 set :moveTo:y :moveTo.1:y
   686 set :moveTo:radius 5
 
   691 return :moveTo.1*retaddr
   692 end
   693 label *label2
-    * set :status3.1:text "Moving..."
   694 write "Moving..." .display ".status3"
   695 label *label190
   696 label *label191
 
   727 return :moveToBlock*retaddr
   728 end
   729 label *label4
-    * set :status3.2:text "Depositing..."
   730 write "Depositing..." .display ".status3"
   731 label *label202
   732 sensor *tmp205 @unit @firstItem
 
   766 jump *label213 always
   767 label *label215
   768 label *label204
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   769 write 0 .display ".transportTarget"
   770 write null .display ".transportItem"
   771 label *label216
 
   775 label *label5
   776 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
   777 jump *label218 notEqual *tmp219 false
-    * set :error.1:error "Cannot locate ore"
   778 set .ERROR "Cannot locate ore"
   779 stop
   780 label *label220
 
   785 end
   786 label *label6
   787 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   788 write :mineOre:amount .display ".transportTarget"
   789 write :mineOre:ore .display ".transportItem"
   790 label *label222
 
   799 setaddr :moveToEmpty*retaddr *label224 (h:*label224)
   800 call *label2 *invalid :moveToEmpty*retval (m:*label224) (h:*label224)
   801 label *label224
-    * set :status3.3:text "Mining..."
   802 write "Mining..." .display ".status3"
   803 label *label225
   804 op add :mineOre:stop @second 10
 
   831 return :mineOre*retaddr
   832 end
   833 label *label7
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   834 write "Mining " .display ".status2"
   835 write :mineOre.1:ore .display ".item2"
   836 write "core" .display ".block2"
 
   846 end
   847 label *label8
   848 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   849 write :transportStatus.2:target .display ".transportTarget"
   850 write :fetchBlock:item .display ".transportItem"
   851 label *label238
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   852 write "Fetching " .display ".status2"
   853 write :fetchBlock:item .display ".item2"
   854 write :fetchBlock:block .display ".block2"
 
   893 jump *label250 greaterThanEq *tmp249 .targetGraphite
   894 sensor *tmp252 .press @coal
   895 jump *label252 greaterThanEq *tmp252 5
-    * set :status1:text "Goal 1: Meeting the graphite target"
   896 write "Goal 1: Meeting the graphite target" .display ".status1"
   897 label *label254
   898 set :supplyBlock:block .press
   899 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
   900 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  901 write @coal .display ".item2"
+  902 write .press .display ".block2"
   903 label *label256
   904 sensor :supplyBlock:blockCapacity .press @itemCapacity
   905 sensor *tmp256 .press @coal
 
   923 jump *label260 greaterThanEq *tmp260 .targetSilicon
   924 sensor *tmp263 .smelter @coal
   925 jump *label262 greaterThanEq *tmp263 5
-    * set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
   926 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
   927 label *label264
   928 set :supplyBlock.1:block .smelter
   929 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
   930 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+  931 write @coal .display ".item2"
+  932 write .smelter .display ".block2"
   933 label *label266
   934 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   935 sensor *tmp267 .smelter @coal
 
   949 label *label262
   950 sensor *tmp271 .smelter @sand
   951 jump *label270 greaterThanEq *tmp271 5
-    * set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
   952 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
   953 label *label272
   954 set :supplyBlock.2:block .smelter
   955 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
   956 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+  957 write @sand .display ".item2"
+  958 write .smelter .display ".block2"
   959 label *label274
   960 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   961 sensor *tmp275 .smelter @sand
 
   980 jump *label278 greaterThanEq *tmp279 .powerTarget
   981 sensor *tmp282 .generator @coal
   982 jump *label280 greaterThanEq *tmp282 2
-    * set :status1.3:text "Goal 4: Supplying generator"
   983 write "Goal 4: Supplying generator" .display ".status1"
   984 label *label282
   985 set :supplyBlock.3:block .generator
   986 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
   987 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+  988 write @coal .display ".item2"
+  989 write .generator .display ".block2"
   990 label *label284
   991 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   992 sensor *tmp286 .generator @coal
 
  1014 sensor *tmp295 .battery @totalPower
  1015 op mul *tmp296 .unloader1 .powerTarget
  1016 jump *label292 greaterThanEq *tmp295 *tmp296
-    * set :status1.4:text "Goal 5: Supplying generator (5)"
  1017 write "Goal 5: Supplying generator (5)" .display ".status1"
  1018 label *label294
  1019 set :mineOre.1:ore @coal
 
  1024 label *label292
  1025 sensor *tmp299 .core @silicon
  1026 jump *label296 greaterThanEq *tmp299 .targetSilicon
-    * set :status1.5:text "Goal 6: Meeting the silicon target"
  1027 write "Goal 6: Meeting the silicon target" .display ".status1"
  1028 label *label298
  1029 sensor :supplyBase:coal .core @coal
 
  1034 label *label299
  1035 set *tmp305 @sand
  1036 label *label300
-    * set :supplyBase:ore *tmp305
  1037 set :mineOre.1:ore *tmp305
  1038 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1039 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
 
  1042 label *label296
  1043 sensor *tmp306 .core @copper
  1044 jump *label302 greaterThanEq *tmp306 .targetCopper
-    * set :status1.6:text "Goal 7: Meeting the copper target"
  1045 write "Goal 7: Meeting the copper target" .display ".status1"
  1046 label *label304
  1047 set :mineOre.1:ore @copper
 
  1052 label *label302
  1053 sensor *tmp309 .core @lead
  1054 jump *label306 greaterThanEq *tmp309 .targetLead
-    * set :status1.7:text "Goal 8: Meeting the lead target"
  1055 write "Goal 8: Meeting the lead target" .display ".status1"
  1056 label *label308
  1057 set :mineOre.1:ore @lead
 
  1062 label *label306
  1063 sensor *tmp312 .core @metaglass
  1064 jump *label310 greaterThanEq *tmp312 .targetMetaglass
-    * set :status1.8:text "Goal 9: Meeting the metaglass target"
  1065 write "Goal 9: Meeting the metaglass target" .display ".status1"
  1066 label *label312
  1067 set :mineOre.1:ore @sand
 
  1070 label *label313
  1071 jump *label311 always
  1072 label *label310
-    * set :status1.9:text "Goal 10: Supplying base"
  1073 write "Goal 10: Supplying base" .display ".status1"
  1074 label *label314
  1075 sensor :supplyBase:coal.1 .core @coal
 
  1080 label *label315
  1081 set *tmp318 @sand
  1082 label *label316
-    * set :supplyBase:ore.1 *tmp318
  1083 set :mineOre.1:ore *tmp318
  1084 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1085 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
 
  1093 label *label291
  1094 jump *label289 always
  1095 label *label288
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1096 write "Goal 11: Fetching titanium" .display ".status1"
  1097 label *label318
  1098 set :fetchBlock:block .titanium_drill
 
  1235 setaddr :moveTo.1*retaddr *label355 (h:*label355)
  1236 call *label1 *invalid :moveTo.1*retval (m:*label355) (h:*label355)
  1237 label *label355
-    * set :status3.4:text "Building..."
  1238 write "Building..." .display ".status3"
  1239 label *label356
  1240 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1249 jump *label354 always
  1250 label *label361
  1251 label *label362
-    * set :error.2:error "Cannot build at ("
  1252 set .ERROR "Cannot build at ("
  1253 stop
  1254 label *label363

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-35 instructions):
 
    79 set .battery *tmp49
    80 label *label34
    81 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    82 set :buildBlock:x :buildBlockFromCfg.2:x
    83 set :buildBlock:y :buildBlockFromCfg.1:y
    84 set :buildBlock:graphite 0
 
    97 label *label36
    98 label *label33
    99 label *label40
-    * op add :buildBlockFromCfg.3:x .coreX 0
   100 op add :buildBlockFromCfg.3:y .coreY 3
   101 set :buildBlock:block @combustion-generator
   102 set :buildBlock:x :buildBlockFromCfg.1:x
 
   123 set .powerTarget 400
   124 label *label46
   125 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   126 set :buildBlock:block @silicon-smelter
   127 set :buildBlock:x :buildBlockFromCfg.4:x
   128 set :buildBlock:y :buildBlockFromCfg:y
 
   237 set :buildTitaniumDrillCfg:yy -1
   238 setaddr *tmp83 *label76
   239 label *label70
-    * set :buildTitaniumDrillCfg:count 0
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   242 jump *label78 notEqual :checkOre:floor @ore-titanium
 
   244 label *label78
   245 label *label79
   246 label *label77
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   247 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   248 set :checkOre.1:count :checkOre:count
   249 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
 
   252 label *label81
   253 label *label82
   254 label *label80
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
   255 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   256 set :checkOre.2:count :checkOre.1:count
   257 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
 
   260 label *label84
   261 label *label85
   262 label *label83
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op add *tmp104 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * op add *tmp105 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   263 set :checkOre.3:count :checkOre.2:count
   264 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   265 jump *label87 notEqual :checkOre.3:floor @ore-titanium
 
   347 label *label55
   348 set *tmp66 null
   349 label *label52
-    * set *tmp65 *tmp66
   350 label *label51
   351 set .titanium_drill *tmp66
   352 write .core processor3 ".core"
   353 write *tmp66 processor3 ".drill"
   354 label *label105
-    * op add :buildBlockFromCfg.5:x .coreX 0
   355 op add :buildBlockFromCfg.5:y .coreY 2
   356 set :buildBlock:block @unloader
   357 set :buildBlock:x :buildBlockFromCfg.1:x
 
   377 set .unloader1 *tmp143
   378 label *label111
   379 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   380 set :buildBlock:block @micro-processor
   381 set :buildBlock:x :buildBlockFromCfg.6:x
   382 set :buildBlock:y :buildBlockFromCfg.1:y
 
   433 label *label116
   434 label *label123
   435 op add :buildBlockFromCfg.8:x .coreX -4
-    * op add :buildBlockFromCfg.8:y .coreY -1
   436 set :buildBlock:block @air-factory
   437 set :buildBlock:x :buildBlockFromCfg.8:x
   438 set :buildBlock:y :buildBlockFromCfg.7:y
 
   458 write *tmp155 *tmp147 ".factory"
   459 write *tmp155 processor1 ".factory"
   460 label *label129
-    * op add :buildBlockFromCfg.9:x .coreX -2
   461 op add :buildBlockFromCfg.9:y .coreY 1
   462 set :buildBlock:block @unloader
   463 set :buildBlock:x :buildBlockFromCfg.7:x
 
   483 write *tmp159 *tmp147 ".unloader2"
   484 label *label135
   485 op add :buildBlockFromCfg.10:x .coreX -3
-    * op add :buildBlockFromCfg.10:y .coreY 1
   486 set :buildBlock:block @overflow-gate
   487 set :buildBlock:x :buildBlockFromCfg.10:x
   488 set :buildBlock:y :buildBlockFromCfg.9:y
   489 set :buildBlock:copper 4
   490 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   491 set :buildBlock:silicon 0
   492 set :buildBlock:titanium 0
   493 set :buildBlock:metaglass 0
 
   550 label *label146
   551 write null *tmp147 ".kiln"
   552 label *label153
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   553 set :buildBlock:block @junction
   554 set :buildBlock:x :buildBlockFromCfg.11:x
   555 set :buildBlock:y :buildBlockFromCfg.9:y
   556 set :buildBlock:copper 3
   557 set :buildBlock:lead 0
   558 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   559 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   560 set :buildBlock:rotation 0
   561 set :buildBlock:config null
   562 setaddr :buildBlock*retaddr *label157 (h:*label157)
 
   580 set :buildBlock:titanium 0
   581 set :buildBlock:metaglass 30
   582 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   583 setaddr :buildBlock*retaddr *label163 (h:*label163)
   584 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   585 label *label163
 
   590 label *label161
   591 label *label158
   592 label *label165
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   593 set :buildBlock:block @steam-generator
   594 set :buildBlock:x :buildBlockFromCfg.14:x
   595 set :buildBlock:y :buildBlockFromCfg:y
 
   597 set :buildBlock:lead 40
   598 set :buildBlock:graphite 25
   599 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   600 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   601 setaddr :buildBlock*retaddr *label169 (h:*label169)
   602 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   603 label *label169
 
   610 label *label164
   611 write *tmp183 *tmp147 ".generator2"
   612 label *label171
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   613 set :buildBlock:block @sorter
   614 set :buildBlock:x :buildBlockFromCfg.8:x
   615 set :buildBlock:y :buildBlockFromCfg.9:y
 
   868 jump *label252 greaterThanEq *tmp252 5
   869 write "Goal 1: Meeting the graphite target" .display ".status1"
   870 label *label254
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   871 write "Supplying " .display ".status2"
   872 write @coal .display ".item2"
   873 write .press .display ".block2"
 
   896 jump *label262 greaterThanEq *tmp263 5
   897 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
   898 label *label264
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   899 write "Supplying " .display ".status2"
   900 write @coal .display ".item2"
   901 write .smelter .display ".block2"
 
   920 jump *label270 greaterThanEq *tmp271 5
   921 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
   922 label *label272
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   923 write "Supplying " .display ".status2"
   924 write @sand .display ".item2"
   925 write .smelter .display ".block2"
 
   949 jump *label280 greaterThanEq *tmp282 2
   950 write "Goal 4: Supplying generator" .display ".status1"
   951 label *label282
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   952 write "Supplying " .display ".status2"
   953 write @coal .display ".item2"
   954 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   439 set :buildBlock:copper 60
   440 set :buildBlock:lead 70
   441 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   442 set :buildBlock:titanium 0
   443 set :buildBlock:metaglass 0
   444 set :buildBlock:rotation 3
 
   463 set :buildBlock:y :buildBlockFromCfg.9:y
   464 set :buildBlock:copper 0
   465 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   466 set :buildBlock:silicon 30
   467 set :buildBlock:titanium 25
   468 set :buildBlock:metaglass 0
 
   534 set :buildBlock:graphite 30
   535 set :buildBlock:silicon 0
   536 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   537 set :buildBlock:rotation 0
   538 set :buildBlock:config null
   539 setaddr :buildBlock*retaddr *label151 (h:*label151)
 
   555 set :buildBlock:graphite 0
   556 set :buildBlock:titanium 0
   557 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   558 setaddr :buildBlock*retaddr *label157 (h:*label157)
   559 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   560 label *label157
 
   573 set :buildBlock:copper 30
   574 set :buildBlock:lead 30
   575 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   576 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   577 setaddr :buildBlock*retaddr *label163 (h:*label163)
   578 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   579 label *label163

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   129 set :buildBlock:copper 30
   130 set :buildBlock:lead 25
   131 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   132 set :buildBlock:titanium 0
   133 set :buildBlock:metaglass 0
   134 set :buildBlock:rotation 0
 
   437 set :buildBlock:y :buildBlockFromCfg.7:y
   438 set :buildBlock:copper 60
   439 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   440 set :buildBlock:titanium 0
   441 set :buildBlock:metaglass 0
   442 set :buildBlock:rotation 3
 
   509 set :buildBlock:lead 0
   510 set :buildBlock:silicon 30
   511 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   512 set :buildBlock:rotation 0
   513 set :buildBlock:config null
   514 setaddr :buildBlock*retaddr *label145 (h:*label145)
 
   532 set :buildBlock:silicon 0
   533 set :buildBlock:titanium 0
   534 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   535 setaddr :buildBlock*retaddr *label151 (h:*label151)
   536 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   537 label *label151
 
   549 set :buildBlock:copper 3
   550 set :buildBlock:lead 0
   551 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   552 setaddr :buildBlock*retaddr *label157 (h:*label157)
   553 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   554 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   104 set :buildBlock:copper 25
   105 set :buildBlock:lead 15
   106 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   107 set :buildBlock:titanium 0
   108 set :buildBlock:metaglass 0
   109 set :buildBlock:rotation 0
 
   414 set :buildBlock:y :buildBlockFromCfg.7:y
   415 set :buildBlock:copper 2
   416 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   417 set :buildBlock:silicon 0
   418 set :buildBlock:titanium 0
   419 set :buildBlock:metaglass 0
 
   435 set :buildBlock:y :buildBlockFromCfg.7:y
   436 set :buildBlock:copper 60
   437 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
   438 set :buildBlock:metaglass 0
   439 set :buildBlock:rotation 3
   440 set :buildBlock:config @mono
 
   483 set :buildBlock:lead 2
   484 set :buildBlock:silicon 0
   485 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   486 set :buildBlock:rotation 0
   487 set :buildBlock:config null
   488 setaddr :buildBlock*retaddr *label139 (h:*label139)
 
   506 set :buildBlock:silicon 30
   507 set :buildBlock:titanium 25
   508 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   509 setaddr :buildBlock*retaddr *label145 (h:*label145)
   510 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   511 label *label145
 
   526 set :buildBlock:graphite 30
   527 set :buildBlock:silicon 0
   528 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   529 setaddr :buildBlock*retaddr *label151 (h:*label151)
   530 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   531 label *label151

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    82 set :buildBlock:x :buildBlockFromCfg.2:x
    83 set :buildBlock:y :buildBlockFromCfg.1:y
    84 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    85 set :buildBlock:titanium 0
    86 set :buildBlock:metaglass 0
    87 set :buildBlock:rotation 0
 
   379 set :buildBlock:y :buildBlockFromCfg.1:y
   380 set :buildBlock:copper 90
   381 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   382 set :buildBlock:silicon 50
   383 set :buildBlock:titanium 0
   384 set :buildBlock:metaglass 0
 
   413 set :buildBlock:copper 2
   414 set :buildBlock:lead 6
   415 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   416 set :buildBlock:metaglass 0
   417 set :buildBlock:rotation 0
   418 set :buildBlock:config null
 
   457 set :buildBlock:lead 0
   458 set :buildBlock:silicon 30
   459 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   460 set :buildBlock:rotation 0
   461 set :buildBlock:config null
   462 setaddr :buildBlock*retaddr *label133 (h:*label133)
 
   480 set :buildBlock:silicon 0
   481 set :buildBlock:titanium 0
   482 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   483 setaddr :buildBlock*retaddr *label139 (h:*label139)
   484 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   485 label *label139
 
   500 set :buildBlock:lead 0
   501 set :buildBlock:silicon 30
   502 set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
   503 setaddr :buildBlock*retaddr *label145 (h:*label145)
   504 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   505 label *label145

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
    63 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    64 set :buildBlock:titanium 0
    65 set :buildBlock:metaglass 0
    66 set :buildBlock:rotation 0
 
   126 set :buildBlock:copper 30
   127 set :buildBlock:lead 25
   128 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   129 set :buildBlock:metaglass 0
   130 set :buildBlock:rotation 0
   131 set :buildBlock:config null
 
   353 set :buildBlock:y :buildBlockFromCfg.5:y
   354 set :buildBlock:copper 0
   355 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   356 set :buildBlock:silicon 30
   357 set :buildBlock:titanium 25
   358 set :buildBlock:metaglass 0
   359 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   360 setaddr :buildBlock*retaddr *label109 (h:*label109)
   361 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   362 label *label109
 
   428 set :buildBlock:y :buildBlockFromCfg.7:y
   429 set :buildBlock:copper 60
   430 set :buildBlock:lead 70
-    * set :buildBlock:metaglass 0
   431 set :buildBlock:rotation 3
   432 set :buildBlock:config @mono
   433 setaddr :buildBlock*retaddr *label127 (h:*label127)
 
   474 set :buildBlock:lead 2
   475 set :buildBlock:silicon 0
   476 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   477 setaddr :buildBlock*retaddr *label139 (h:*label139)
   478 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   479 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   102 set :buildBlock:copper 25
   103 set :buildBlock:lead 15
   104 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   105 set :buildBlock:metaglass 0
   106 set :buildBlock:rotation 0
   107 set :buildBlock:config null
 
   124 set :buildBlock:y :buildBlockFromCfg:y
   125 set :buildBlock:copper 30
   126 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   127 set :buildBlock:metaglass 0
   128 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   129 setaddr :buildBlock*retaddr *label50 (h:*label50)
   130 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   131 label *label50
 
   406 set :buildBlock:copper 2
   407 set :buildBlock:lead 6
   408 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   409 set :buildBlock:config null
   410 setaddr :buildBlock*retaddr *label121 (h:*label121)
   411 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    81 set :buildBlock:x :buildBlockFromCfg.2:x
    82 set :buildBlock:y :buildBlockFromCfg.1:y
    83 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    84 set :buildBlock:metaglass 0
    85 set :buildBlock:rotation 0
    86 set :buildBlock:config null
 
   100 set :buildBlock:y :buildBlockFromCfg.3:y
   101 set :buildBlock:copper 25
   102 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   103 set :buildBlock:metaglass 0
   104 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   105 setaddr :buildBlock*retaddr *label44 (h:*label44)
   106 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   107 label *label44
 
   371 set :buildBlock:lead 50
   372 set :buildBlock:silicon 50
   373 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   374 set :buildBlock:config processor2
   375 setaddr :buildBlock*retaddr *label115 (h:*label115)
   376 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
    63 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    64 set :buildBlock:metaglass 0
    65 set :buildBlock:rotation 0
    66 set :buildBlock:config null
 
    79 op add :buildBlockFromCfg.2:x .coreX -1
    80 set :buildBlock:x :buildBlockFromCfg.2:x
    81 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    82 set :buildBlock:metaglass 0
    83 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    84 setaddr :buildBlock*retaddr *label38 (h:*label38)
    85 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    86 label *label38
 
   346 set :buildBlock:lead 0
   347 set :buildBlock:silicon 30
   348 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   349 setaddr :buildBlock*retaddr *label109 (h:*label109)
   350 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   351 label *label109

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    60 set :buildBlock:y :buildBlockFromCfg.1:y
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    63 set :buildBlock:metaglass 0
    64 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    65 setaddr :buildBlock*retaddr *label32 (h:*label32)
    66 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    67 label *label32
 
   116 set :buildBlock:y :buildBlockFromCfg:y
   117 set :buildBlock:copper 30
   118 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   119 setaddr :buildBlock*retaddr *label50 (h:*label50)
   120 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   121 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
    95 set :buildBlock:y :buildBlockFromCfg.3:y
    96 set :buildBlock:copper 25
    97 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    98 setaddr :buildBlock*retaddr *label44 (h:*label44)
    99 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   100 label *label44

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    77 op add :buildBlockFromCfg.2:x .coreX -1
    78 set :buildBlock:x :buildBlockFromCfg.2:x
    79 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    80 setaddr :buildBlock*retaddr *label38 (h:*label38)
    81 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    82 label *label38

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    60 set :buildBlock:y :buildBlockFromCfg.1:y
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    63 setaddr :buildBlock*retaddr *label32 (h:*label32)
    64 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    65 label *label32

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    27 call *label14 *invalid :findUnits*retval (m:*label20) (h:*label20)
    28 label *label20
    29 set .polys :findUnits:count
+   30 op add :buildBlockFromCfg:x .coreX -1.5
+   31 op add :buildBlockFromCfg:y .coreY 2.5
+   32 set :buildBlock:block @graphite-press
+   33 set :buildBlock:x :buildBlockFromCfg:x
+   34 set :buildBlock:y :buildBlockFromCfg:y
+   35 set :buildBlock:copper 75
+   36 set :buildBlock:lead 30
+   37 set :buildBlock:graphite 0
+   38 set :buildBlock:silicon 0
+   39 set :buildBlock:titanium 0
+   40 set :buildBlock:metaglass 0
+   41 set :buildBlock:rotation 0
+   42 set :buildBlock:config null
+   43 setaddr :buildBlock*retaddr *label26 (h:*label26)
    44 label *label22
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label26 (h:*label26)
    45 call *label13 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    46 label *label26
    47 set *tmp45 :buildBlock*retval
 
    52 label *label24
    53 label *label21
    54 set .press *tmp45
+   55 op add :buildBlockFromCfg.1:x .coreX 0
+   56 op add :buildBlockFromCfg.1:y .coreY 4
+   57 set :buildBlock:block @battery
+   58 set :buildBlock:x :buildBlockFromCfg.1:x
+   59 set :buildBlock:y :buildBlockFromCfg.1:y
+   60 set :buildBlock:copper 5
+   61 set :buildBlock:lead 20
+   62 setaddr :buildBlock*retaddr *label32 (h:*label32)
    63 label *label28
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label32 (h:*label32)
    64 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    65 label *label32
    66 set *tmp49 :buildBlock*retval
 
    71 label *label30
    72 label *label27
    73 set .battery *tmp49
+   74 op add :buildBlockFromCfg.2:x .coreX -1
+   75 set :buildBlock:x :buildBlockFromCfg.2:x
+   76 set :buildBlock:y :buildBlockFromCfg.1:y
+   77 setaddr :buildBlock*retaddr *label38 (h:*label38)
    78 label *label34
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label38 (h:*label38)
    79 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    80 label *label38
    81 jump *label33 always
 
    84 multilabel *label37 (m:marker2)
    85 label *label36
    86 label *label33
+   87 op add :buildBlockFromCfg.3:y .coreY 3
+   88 set :buildBlock:block @combustion-generator
+   89 set :buildBlock:x :buildBlockFromCfg.1:x
+   90 set :buildBlock:y :buildBlockFromCfg.3:y
+   91 set :buildBlock:copper 25
+   92 set :buildBlock:lead 15
+   93 setaddr :buildBlock*retaddr *label44 (h:*label44)
    94 label *label40
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label44 (h:*label44)
    95 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    96 label *label44
    97 set *tmp57 :buildBlock*retval
 
   103 label *label39
   104 set .generator *tmp57
   105 set .powerTarget 400
+  106 op add :buildBlockFromCfg.4:x .coreX 1.5
+  107 set :buildBlock:block @silicon-smelter
+  108 set :buildBlock:x :buildBlockFromCfg.4:x
+  109 set :buildBlock:y :buildBlockFromCfg:y
+  110 set :buildBlock:copper 30
+  111 set :buildBlock:lead 25
+  112 setaddr :buildBlock*retaddr *label50 (h:*label50)
   113 label *label46
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label50 (h:*label50)
   114 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   115 label *label50
   116 set *tmp61 :buildBlock*retval
 
   327 set .titanium_drill *tmp66
   328 write .core processor3 ".core"
   329 write *tmp66 processor3 ".drill"
+  330 op add :buildBlockFromCfg.5:y .coreY 2
+  331 set :buildBlock:block @unloader
+  332 set :buildBlock:x :buildBlockFromCfg.1:x
+  333 set :buildBlock:y :buildBlockFromCfg.5:y
+  334 set :buildBlock:copper 0
+  335 set :buildBlock:lead 0
+  336 set :buildBlock:silicon 30
+  337 set :buildBlock:titanium 25
+  338 setaddr :buildBlock*retaddr *label109 (h:*label109)
   339 label *label105
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label109 (h:*label109)
   340 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   341 label *label109
   342 set *tmp143 :buildBlock*retval
 
   347 label *label107
   348 label *label104
   349 set .unloader1 *tmp143
+  350 op add :buildBlockFromCfg.6:x .coreX 1
+  351 set :buildBlock:block @micro-processor
+  352 set :buildBlock:x :buildBlockFromCfg.6:x
+  353 set :buildBlock:y :buildBlockFromCfg.1:y
+  354 set :buildBlock:copper 90
+  355 set :buildBlock:lead 50
+  356 set :buildBlock:silicon 50
+  357 set :buildBlock:titanium 0
+  358 setaddr :buildBlock*retaddr *label115 (h:*label115)
   359 label *label111
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   360 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   361 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   362 label *label115
   363 set *tmp147 :buildBlock*retval
 
   377 write .monos *tmp147 ".monos"
   378 write .flares *tmp147 ".flares"
   379 write .polys *tmp147 ".polys"
+  380 op add :buildBlockFromCfg.7:x .coreX -2
+  381 op add :buildBlockFromCfg.7:y .coreY -1
+  382 set :buildBlock:block @power-node
+  383 set :buildBlock:x :buildBlockFromCfg.7:x
+  384 set :buildBlock:y :buildBlockFromCfg.7:y
+  385 set :buildBlock:copper 2
+  386 set :buildBlock:lead 6
+  387 set :buildBlock:silicon 0
+  388 set :buildBlock:config null
+  389 setaddr :buildBlock*retaddr *label121 (h:*label121)
   390 label *label117
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   391 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   392 label *label121
   393 jump *label116 always
 
   396 multilabel *label120 (m:marker8)
   397 label *label119
   398 label *label116
+  399 op add :buildBlockFromCfg.8:x .coreX -4
+  400 set :buildBlock:block @air-factory
+  401 set :buildBlock:x :buildBlockFromCfg.8:x
+  402 set :buildBlock:y :buildBlockFromCfg.7:y
+  403 set :buildBlock:copper 60
+  404 set :buildBlock:lead 70
+  405 set :buildBlock:rotation 3
+  406 set :buildBlock:config @mono
+  407 setaddr :buildBlock*retaddr *label127 (h:*label127)
   408 label *label123
-    * op add :buildBlockFromCfg.8:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   409 call *label13 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   410 label *label127
   411 set *tmp155 :buildBlock*retval
 
   418 set .factory *tmp155
   419 write *tmp155 *tmp147 ".factory"
   420 write *tmp155 processor1 ".factory"
+  421 op add :buildBlockFromCfg.9:y .coreY 1
+  422 set :buildBlock:block @unloader
+  423 set :buildBlock:x :buildBlockFromCfg.7:x
+  424 set :buildBlock:y :buildBlockFromCfg.9:y
+  425 set :buildBlock:copper 0
+  426 set :buildBlock:lead 0
+  427 set :buildBlock:silicon 30
+  428 set :buildBlock:titanium 25
+  429 set :buildBlock:rotation 0
+  430 set :buildBlock:config null
+  431 setaddr :buildBlock*retaddr *label133 (h:*label133)
   432 label *label129
-    * op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   433 call *label13 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   434 label *label133
   435 set *tmp159 :buildBlock*retval
 
   440 label *label131
   441 label *label128
   442 write *tmp159 *tmp147 ".unloader2"
+  443 op add :buildBlockFromCfg.10:x .coreX -3
+  444 set :buildBlock:block @overflow-gate
+  445 set :buildBlock:x :buildBlockFromCfg.10:x
+  446 set :buildBlock:y :buildBlockFromCfg.9:y
+  447 set :buildBlock:copper 4
+  448 set :buildBlock:lead 2
+  449 set :buildBlock:silicon 0
+  450 set :buildBlock:titanium 0
+  451 setaddr :buildBlock*retaddr *label139 (h:*label139)
   452 label *label135
-    * op add :buildBlockFromCfg.10:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   453 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   454 label *label139
   455 jump *label134 always
 
   459 label *label137
   460 label *label134
   461 write @flare *tmp147 ".unitToProduce"
+  462 op add :buildBlockFromCfg.11:x .coreX 2
+  463 op add :buildBlockFromCfg.11:y .coreY 0
+  464 set :buildBlock:block @unloader
+  465 set :buildBlock:x :buildBlockFromCfg.11:x
+  466 set :buildBlock:y :buildBlockFromCfg.11:y
+  467 set :buildBlock:copper 0
+  468 set :buildBlock:lead 0
+  469 set :buildBlock:silicon 30
+  470 set :buildBlock:titanium 25
+  471 setaddr :buildBlock*retaddr *label145 (h:*label145)
   472 label *label141
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label145 (h:*label145)
   473 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   474 label *label145
   475 jump *label140 always
 
   478 multilabel *label144 (m:marker12)
   479 label *label143
   480 label *label140
+  481 op add :buildBlockFromCfg.12:x .coreX 3.5
+  482 op add :buildBlockFromCfg.12:y .coreY 0.5
+  483 set :buildBlock:block @kiln
+  484 set :buildBlock:x :buildBlockFromCfg.12:x
+  485 set :buildBlock:y :buildBlockFromCfg.12:y
+  486 set :buildBlock:copper 60
+  487 set :buildBlock:lead 30
+  488 set :buildBlock:graphite 30
+  489 set :buildBlock:silicon 0
+  490 set :buildBlock:titanium 0
+  491 setaddr :buildBlock*retaddr *label151 (h:*label151)
   492 label *label147
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label151 (h:*label151)
   493 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   494 label *label151
   495 jump *label146 always
 
   499 label *label149
   500 label *label146
   501 write null *tmp147 ".kiln"
+  502 set :buildBlock:block @junction
+  503 set :buildBlock:x :buildBlockFromCfg.11:x
+  504 set :buildBlock:y :buildBlockFromCfg.9:y
+  505 set :buildBlock:copper 3
+  506 set :buildBlock:lead 0
+  507 set :buildBlock:graphite 0
+  508 setaddr :buildBlock*retaddr *label157 (h:*label157)
   509 label *label153
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label157 (h:*label157)
   510 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   511 label *label157
   512 jump *label152 always
 
   515 multilabel *label156 (m:marker14)
   516 label *label155
   517 label *label152
+  518 op add :buildBlockFromCfg.14:x .coreX -3.5
+  519 op add :buildBlockFromCfg.14:y .coreY 4.5
+  520 set :buildBlock:block @water-extractor
+  521 set :buildBlock:x :buildBlockFromCfg.14:x
+  522 set :buildBlock:y :buildBlockFromCfg.14:y
+  523 set :buildBlock:copper 30
+  524 set :buildBlock:lead 30
+  525 set :buildBlock:graphite 30
+  526 set :buildBlock:metaglass 30
+  527 setaddr :buildBlock*retaddr *label163 (h:*label163)
   528 label *label159
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label163 (h:*label163)
   529 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   530 label *label163
   531 jump *label158 always
 
   534 multilabel *label162 (m:marker15)
   535 label *label161
   536 label *label158
+  537 set :buildBlock:block @steam-generator
+  538 set :buildBlock:x :buildBlockFromCfg.14:x
+  539 set :buildBlock:y :buildBlockFromCfg:y
+  540 set :buildBlock:copper 35
+  541 set :buildBlock:lead 40
+  542 set :buildBlock:graphite 25
+  543 set :buildBlock:silicon 30
+  544 set :buildBlock:metaglass 0
+  545 setaddr :buildBlock*retaddr *label169 (h:*label169)
   546 label *label165
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label169 (h:*label169)
   547 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   548 label *label169
   549 set *tmp183 :buildBlock*retval
 
   554 label *label167
   555 label *label164
   556 write *tmp183 *tmp147 ".generator2"
+  557 set :buildBlock:block @sorter
+  558 set :buildBlock:x :buildBlockFromCfg.8:x
+  559 set :buildBlock:y :buildBlockFromCfg.9:y
+  560 set :buildBlock:copper 2
+  561 set :buildBlock:lead 2
+  562 set :buildBlock:graphite 0
+  563 set :buildBlock:silicon 0
+  564 set :buildBlock:config @coal
+  565 setaddr :buildBlock*retaddr *label175 (h:*label175)
   566 label *label171
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label175 (h:*label175)
   567 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   568 label *label175
   569 jump *label170 always
 
   587 label *label0
   588 write "Moving..." .display ".status3"
   589 label *label183
+  590 op sub *tmp193 :moveTo:radius 0.5
   591 label *label184
   592 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
   593 jump *label186 notEqual *tmp191 false
-    * op sub *tmp193 :moveTo:radius 0.5
   594 ucontrol approach :moveTo:x :moveTo:y *tmp193
   595 label *label185
   596 jump *label184 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   190 set :buildTitaniumDrillCfg:dy 0
   191 set :buildTitaniumDrillCfg:searches 0
   192 label *label67
-    * jump *label69 greaterThanEq :buildTitaniumDrillCfg:searches 5
+  193 label *label378
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
 
   259 label *label72
   260 label *label68
   261 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
-    * jump *label67 always
+  262 jump *label378 lessThan :buildTitaniumDrillCfg:searches 5
   263 label *label69
   264 jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   265 op div *tmp118 :buildTitaniumDrillCfg:dx 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-4 instructions):
 
   649 label *label202
   650 sensor *tmp205 @unit @firstItem
   651 jump *label203 notEqual *tmp205 :depositItems:item
+  652 set *tmp210 5
   653 op equal *tmp208 :depositItems:block .core
   654 op land *tmp209 :depositItems:fromMining *tmp208
-    * jump *label205 equal *tmp209 false
+  655 jump *label206 equal *tmp209 false
   656 set *tmp210 7
   657 jump *label206 always
-    * label *label205
-    * set *tmp210 5
   658 label *label206
   659 set :moveToBlock:block :depositItems:block
   660 set :moveToBlock:radius *tmp210
 
   937 label *label298
   938 sensor :supplyBase:coal .core @coal
   939 sensor :supplyBase:sand .core @sand
-    * jump *label299 greaterThanEq :supplyBase:coal :supplyBase:sand
-    * set *tmp305 @coal
+  940 set :mineOre.1:ore @sand
+  941 jump *label300 greaterThanEq :supplyBase:coal :supplyBase:sand
+  942 set :mineOre.1:ore @coal
   943 jump *label300 always
-    * label *label299
-    * set *tmp305 @sand
   944 label *label300
-    * set :mineOre.1:ore *tmp305
   945 setaddr :mineOre.1*retaddr *label301 (h:*label301)
   946 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
   947 label *label301
 
   981 label *label314
   982 sensor :supplyBase:coal.1 .core @coal
   983 sensor :supplyBase:sand.1 .core @sand
-    * jump *label315 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
-    * set *tmp318 @coal
+  984 set :mineOre.1:ore @sand
+  985 jump *label316 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
+  986 set :mineOre.1:ore @coal
   987 jump *label316 always
-    * label *label315
-    * set *tmp318 @sand
   988 label *label316
-    * set :mineOre.1:ore *tmp318
   989 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   990 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
   991 label *label317
 
  1105 write *tmp342 .controller ".smelterTarget"
  1106 op add *tmp343 :meetTarget:metaglass 20
  1107 write *tmp343 .controller ".kilnTarget"
+ 1108 set .titaniumTrigger 100
  1109 sensor *tmp344 .core @titanium
-    * jump *label345 greaterThanEq *tmp344 :meetTarget:titanium
-    * set *tmp346 7
+ 1110 jump *label346 greaterThanEq *tmp344 :meetTarget:titanium
+ 1111 set .titaniumTrigger 7
  1112 jump *label346 always
-    * label *label345
-    * set *tmp346 100
  1113 label *label346
-    * set .titaniumTrigger *tmp346
-    * jump *label347 lessThanEq :meetTarget:siliconFactory 0
-    * set *tmp348 .factory
+ 1114 set .leadSiliconBlock .core
+ 1115 jump *label348 lessThanEq :meetTarget:siliconFactory 0
+ 1116 set .leadSiliconBlock .factory
  1117 jump *label348 always
-    * label *label347
-    * set *tmp348 .core
  1118 label *label348
-    * set .leadSiliconBlock *tmp348
  1119 label *label349
  1120 setaddr :targetMet*retaddr *label352 (h:*label352)
  1121 call *label10 *invalid :targetMet*retval (m:*label352) (h:*label352)

Modifications by Unroll iteration loop at CoreBuilder.mnd:216:5 (-2 instructions):
 
  1043 end
  1044 label *label11
  1045 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp337 *label337
-    * jump *label334 always
-    * multilabel *label337 (m:marker18)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp337 *label338
-    * jump *label334 always
-    * multilabel *label338 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp337 *label339
-    * jump *label334 always
-    * multilabel *label339 (m:marker18)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp337 *label340
-    * jump *label334 always
-    * multilabel *label340 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp337 *label341
-    * jump *label334 always
-    * multilabel *label341 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp337 *label342
-    * jump *label334 always
-    * multilabel *label342 (m:marker18)
-    * set :meetTarget:t :meetTarget:leadFactory
-    * setaddr *tmp337 *label343
-    * jump *label334 always
-    * multilabel *label343 (m:marker18)
-    * set :meetTarget:t :meetTarget:siliconFactory
-    * setaddr *tmp337 *label344
-    * label *label334
-    * op sign *tmp338 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label335
-    * multijump *tmp337 0 0 (m:marker18)
-    * multilabel *label344 (m:marker18)
-    * label *label336
+ 1046 set :meetTarget:t :meetTarget:copper
+ 1047 label *label379
+ 1048 op sign *tmp338 :meetTarget:t
+ 1049 op add :meetTarget:count :meetTarget:count *tmp338
+ 1050 label *label380
+ 1051 set :meetTarget:t :meetTarget:lead
+ 1052 label *label383
+ 1053 op sign *tmp338 :meetTarget:t
+ 1054 op add :meetTarget:count :meetTarget:count *tmp338
+ 1055 label *label384
+ 1056 set :meetTarget:t :meetTarget:graphite
+ 1057 label *label387
+ 1058 op sign *tmp338 :meetTarget:t
+ 1059 op add :meetTarget:count :meetTarget:count *tmp338
+ 1060 label *label388
+ 1061 set :meetTarget:t :meetTarget:silicon
+ 1062 label *label391
+ 1063 op sign *tmp338 :meetTarget:t
+ 1064 op add :meetTarget:count :meetTarget:count *tmp338
+ 1065 label *label392
+ 1066 set :meetTarget:t :meetTarget:titanium
+ 1067 label *label395
+ 1068 op sign *tmp338 :meetTarget:t
+ 1069 op add :meetTarget:count :meetTarget:count *tmp338
+ 1070 label *label396
+ 1071 set :meetTarget:t :meetTarget:metaglass
+ 1072 label *label399
+ 1073 op sign *tmp338 :meetTarget:t
+ 1074 op add :meetTarget:count :meetTarget:count *tmp338
+ 1075 label *label400
+ 1076 set :meetTarget:t :meetTarget:leadFactory
+ 1077 label *label403
+ 1078 op sign *tmp338 :meetTarget:t
+ 1079 op add :meetTarget:count :meetTarget:count *tmp338
+ 1080 label *label404
+ 1081 set :meetTarget:t :meetTarget:siliconFactory
+ 1082 label *label407
+ 1083 op sign *tmp338 :meetTarget:t
+ 1084 op add :meetTarget:count :meetTarget:count *tmp338
+ 1085 label *label408
+ 1086 label *label336
  1087 write :meetTarget:count .display ".totalTargets"
  1088 write :meetTarget:block .display ".nextBlock"
  1089 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1045 set :meetTarget:count 0
  1046 set :meetTarget:t :meetTarget:copper
  1047 label *label379
-    * op sign *tmp338 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp338
+ 1048 op sign *tmp338 :meetTarget:copper
+ 1049 op add :meetTarget:count 0 *tmp338
  1050 label *label380
  1051 set :meetTarget:t :meetTarget:lead
  1052 label *label383
-    * op sign *tmp338 :meetTarget:t
+ 1053 op sign *tmp338 :meetTarget:lead
  1054 op add :meetTarget:count :meetTarget:count *tmp338
  1055 label *label384
  1056 set :meetTarget:t :meetTarget:graphite
  1057 label *label387
-    * op sign *tmp338 :meetTarget:t
+ 1058 op sign *tmp338 :meetTarget:graphite
  1059 op add :meetTarget:count :meetTarget:count *tmp338
  1060 label *label388
  1061 set :meetTarget:t :meetTarget:silicon
  1062 label *label391
-    * op sign *tmp338 :meetTarget:t
+ 1063 op sign *tmp338 :meetTarget:silicon
  1064 op add :meetTarget:count :meetTarget:count *tmp338
  1065 label *label392
  1066 set :meetTarget:t :meetTarget:titanium
  1067 label *label395
-    * op sign *tmp338 :meetTarget:t
+ 1068 op sign *tmp338 :meetTarget:titanium
  1069 op add :meetTarget:count :meetTarget:count *tmp338
  1070 label *label396
  1071 set :meetTarget:t :meetTarget:metaglass
  1072 label *label399
-    * op sign *tmp338 :meetTarget:t
+ 1073 op sign *tmp338 :meetTarget:metaglass
  1074 op add :meetTarget:count :meetTarget:count *tmp338
  1075 label *label400
  1076 set :meetTarget:t :meetTarget:leadFactory
  1077 label *label403
-    * op sign *tmp338 :meetTarget:t
+ 1078 op sign *tmp338 :meetTarget:leadFactory
  1079 op add :meetTarget:count :meetTarget:count *tmp338
  1080 label *label404
  1081 set :meetTarget:t :meetTarget:siliconFactory
  1082 label *label407
-    * op sign *tmp338 :meetTarget:t
+ 1083 op sign *tmp338 :meetTarget:siliconFactory
  1084 op add :meetTarget:count :meetTarget:count *tmp338
  1085 label *label408
  1086 label *label336

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
  1042 return :targetMet*retaddr
  1043 end
  1044 label *label11
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1045 label *label379
  1046 op sign *tmp338 :meetTarget:copper
  1047 op add :meetTarget:count 0 *tmp338
  1048 label *label380
-    * set :meetTarget:t :meetTarget:lead
  1049 label *label383
  1050 op sign *tmp338 :meetTarget:lead
  1051 op add :meetTarget:count :meetTarget:count *tmp338
  1052 label *label384
-    * set :meetTarget:t :meetTarget:graphite
  1053 label *label387
  1054 op sign *tmp338 :meetTarget:graphite
  1055 op add :meetTarget:count :meetTarget:count *tmp338
  1056 label *label388
-    * set :meetTarget:t :meetTarget:silicon
  1057 label *label391
  1058 op sign *tmp338 :meetTarget:silicon
  1059 op add :meetTarget:count :meetTarget:count *tmp338
  1060 label *label392
-    * set :meetTarget:t :meetTarget:titanium
  1061 label *label395
  1062 op sign *tmp338 :meetTarget:titanium
  1063 op add :meetTarget:count :meetTarget:count *tmp338
  1064 label *label396
-    * set :meetTarget:t :meetTarget:metaglass
  1065 label *label399
  1066 op sign *tmp338 :meetTarget:metaglass
  1067 op add :meetTarget:count :meetTarget:count *tmp338
  1068 label *label400
-    * set :meetTarget:t :meetTarget:leadFactory
  1069 label *label403
  1070 op sign *tmp338 :meetTarget:leadFactory
  1071 op add :meetTarget:count :meetTarget:count *tmp338
  1072 label *label404
-    * set :meetTarget:t :meetTarget:siliconFactory
  1073 label *label407
  1074 op sign *tmp338 :meetTarget:siliconFactory
  1075 op add :meetTarget:count :meetTarget:count *tmp338

Modifications by Replicate loop condition at Actions.mnd:44:5 (+1 instructions):
 
   625 label *label196
   626 sensor *tmp201 @unit @firstItem
   627 jump *label198 equal *tmp201 null
+  628 label *label412
   629 ucontrol itemDrop @air 1000
   630 label *label197
-    * jump *label196 always
+  631 sensor *tmp201 @unit @firstItem
+  632 jump *label412 notEqual *tmp201 null
   633 label *label198
   634 label *label189
   635 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at Actions.mnd:24:5 (+1 instructions):
 
   591 label *label184
   592 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
   593 jump *label186 notEqual *tmp191 false
+  594 label *label413
   595 ucontrol approach :moveTo:x :moveTo:y *tmp193
   596 label *label185
-    * jump *label184 always
+  597 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
+  598 jump *label413 equal *tmp191 false
   599 label *label186
   600 label *label182
   601 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:68:9 (+1 instructions):
 
   682 label *label213
   683 sensor *tmp217 @unit @firstItem
   684 jump *label215 equal *tmp217 null
+  685 label *label414
   686 ucontrol itemDrop @air 1000
   687 label *label214
-    * jump *label213 always
+  688 sensor *tmp217 @unit @firstItem
+  689 jump *label414 notEqual *tmp217 null
   690 label *label215
   691 label *label204
   692 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:246:5 (+2 instructions):
 
  1122 call *label10 *invalid :targetMet*retval (m:*label352) (h:*label352)
  1123 label *label352
  1124 jump *label351 notEqual :targetMet*retval false
+ 1125 label *label415
  1126 setaddr :supplyBase*retaddr *label353 (h:*label353)
  1127 call *label9 *invalid :supplyBase*retval (m:*label353) (h:*label353)
  1128 label *label353
  1129 label *label350
-    * jump *label349 always
+ 1130 setaddr :targetMet*retaddr *label416 (h:*label416)
+ 1131 call *label10 *invalid :targetMet*retval (m:*label416) (h:*label416)
+ 1132 label *label416
+ 1133 jump *label415 equal :targetMet*retval false
  1134 label *label351
  1135 label *label333
  1136 return :meetTarget*retaddr

Modifications by Unroll iteration loop at CoreBuilder.mnd:342:13 (+64 instructions):
 
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp83 *label73
-    * jump *label70 always
-    * multilabel *label73 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp83 *label74
-    * jump *label70 always
-    * multilabel *label74 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp83 *label75
-    * jump *label70 always
-    * multilabel *label75 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp83 *label76
-    * label *label70
-    * set :checkOre:count 0
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
-    * jump *label78 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
-    * label *label78
-    * label *label79
-    * label *label77
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
-    * jump *label81 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label81
-    * label *label82
-    * label *label80
-    * op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
-    * jump *label84 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label84
-    * label *label85
-    * label *label83
-    * set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
-    * jump *label87 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :checkOre.2:count 1
-    * label *label87
-    * label *label88
-    * label *label86
-    * jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label91 lessThan :checkOre.3:count 4
-    * jump *label69 always
-    * label *label91
-    * label *label92
-    * label *label89
-    * label *label90
-    * label *label71
-    * multijump *tmp83 0 0 (m:marker5)
-    * multilabel *label76 (m:marker5)
-    * label *label72
+  197 set :buildTitaniumDrillCfg:xx 1
+  198 set :buildTitaniumDrillCfg:yy 1
+  199 label *label417
+  200 set :checkOre:count 0
+  201 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  202 jump *label418 notEqual :checkOre:floor @ore-titanium
+  203 op add :checkOre:count 0 1
+  204 label *label418
+  205 label *label419
+  206 label *label420
+  207 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  208 set :checkOre.1:count :checkOre:count
+  209 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  210 jump *label421 notEqual :checkOre.1:floor @ore-titanium
+  211 op add :checkOre.1:count :checkOre:count 1
+  212 label *label421
+  213 label *label422
+  214 label *label423
+  215 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  216 set :checkOre.2:count :checkOre.1:count
+  217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
+  218 jump *label424 notEqual :checkOre.2:floor @ore-titanium
+  219 op add :checkOre.2:count :checkOre.1:count 1
+  220 label *label424
+  221 label *label425
+  222 label *label426
+  223 set :checkOre.3:count :checkOre.2:count
+  224 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
+  225 jump *label427 notEqual :checkOre.3:floor @ore-titanium
+  226 op add :checkOre.3:count :checkOre.2:count 1
+  227 label *label427
+  228 label *label428
+  229 label *label429
+  230 jump *label432 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  231 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  232 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  233 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  234 jump *label430 lessThan :checkOre.3:count 4
+  235 jump *label69 always
+  236 label *label430
+  237 label *label431
+  238 label *label432
+  239 label *label433
+  240 label *label434
+  241 set :buildTitaniumDrillCfg:xx 1
+  242 set :buildTitaniumDrillCfg:yy -1
+  243 label *label437
+  244 set :checkOre:count 0
+  245 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  246 jump *label438 notEqual :checkOre:floor @ore-titanium
+  247 op add :checkOre:count 0 1
+  248 label *label438
+  249 label *label439
+  250 label *label440
+  251 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  252 set :checkOre.1:count :checkOre:count
+  253 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  254 jump *label441 notEqual :checkOre.1:floor @ore-titanium
+  255 op add :checkOre.1:count :checkOre:count 1
+  256 label *label441
+  257 label *label442
+  258 label *label443
+  259 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  260 set :checkOre.2:count :checkOre.1:count
+  261 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
+  262 jump *label444 notEqual :checkOre.2:floor @ore-titanium
+  263 op add :checkOre.2:count :checkOre.1:count 1
+  264 label *label444
+  265 label *label445
+  266 label *label446
+  267 set :checkOre.3:count :checkOre.2:count
+  268 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
+  269 jump *label447 notEqual :checkOre.3:floor @ore-titanium
+  270 op add :checkOre.3:count :checkOre.2:count 1
+  271 label *label447
+  272 label *label448
+  273 label *label449
+  274 jump *label452 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  275 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  276 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  277 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  278 jump *label450 lessThan :checkOre.3:count 4
+  279 jump *label69 always
+  280 label *label450
+  281 label *label451
+  282 label *label452
+  283 label *label453
+  284 label *label454
+  285 set :buildTitaniumDrillCfg:xx -1
+  286 set :buildTitaniumDrillCfg:yy 1
+  287 label *label457
+  288 set :checkOre:count 0
+  289 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  290 jump *label458 notEqual :checkOre:floor @ore-titanium
+  291 op add :checkOre:count 0 1
+  292 label *label458
+  293 label *label459
+  294 label *label460
+  295 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  296 set :checkOre.1:count :checkOre:count
+  297 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  298 jump *label461 notEqual :checkOre.1:floor @ore-titanium
+  299 op add :checkOre.1:count :checkOre:count 1
+  300 label *label461
+  301 label *label462
+  302 label *label463
+  303 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  304 set :checkOre.2:count :checkOre.1:count
+  305 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
+  306 jump *label464 notEqual :checkOre.2:floor @ore-titanium
+  307 op add :checkOre.2:count :checkOre.1:count 1
+  308 label *label464
+  309 label *label465
+  310 label *label466
+  311 set :checkOre.3:count :checkOre.2:count
+  312 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
+  313 jump *label467 notEqual :checkOre.3:floor @ore-titanium
+  314 op add :checkOre.3:count :checkOre.2:count 1
+  315 label *label467
+  316 label *label468
+  317 label *label469
+  318 jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  319 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  320 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  321 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  322 jump *label470 lessThan :checkOre.3:count 4
+  323 jump *label69 always
+  324 label *label470
+  325 label *label471
+  326 label *label472
+  327 label *label473
+  328 label *label474
+  329 set :buildTitaniumDrillCfg:xx -1
+  330 set :buildTitaniumDrillCfg:yy -1
+  331 label *label477
+  332 set :checkOre:count 0
+  333 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  334 jump *label478 notEqual :checkOre:floor @ore-titanium
+  335 op add :checkOre:count 0 1
+  336 label *label478
+  337 label *label479
+  338 label *label480
+  339 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  340 set :checkOre.1:count :checkOre:count
+  341 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  342 jump *label481 notEqual :checkOre.1:floor @ore-titanium
+  343 op add :checkOre.1:count :checkOre:count 1
+  344 label *label481
+  345 label *label482
+  346 label *label483
+  347 op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  348 set :checkOre.2:count :checkOre.1:count
+  349 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
+  350 jump *label484 notEqual :checkOre.2:floor @ore-titanium
+  351 op add :checkOre.2:count :checkOre.1:count 1
+  352 label *label484
+  353 label *label485
+  354 label *label486
+  355 set :checkOre.3:count :checkOre.2:count
+  356 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
+  357 jump *label487 notEqual :checkOre.3:floor @ore-titanium
+  358 op add :checkOre.3:count :checkOre.2:count 1
+  359 label *label487
+  360 label *label488
+  361 label *label489
+  362 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  363 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  364 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  365 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  366 jump *label490 lessThan :checkOre.3:count 4
+  367 jump *label69 always
+  368 label *label490
+  369 label *label491
+  370 label *label492
+  371 label *label493
+  372 label *label494
+  373 label *label72
   374 label *label68
   375 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   376 jump *label378 lessThan :buildTitaniumDrillCfg:searches 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   204 label *label418
   205 label *label419
   206 label *label420
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  207 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   208 set :checkOre.1:count :checkOre:count
   209 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   210 jump *label421 notEqual :checkOre.1:floor @ore-titanium
 
   212 label *label421
   213 label *label422
   214 label *label423
-    * op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  215 op add *tmp97 :buildTitaniumDrillCfg:ay 1
   216 set :checkOre.2:count :checkOre.1:count
   217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   218 jump *label424 notEqual :checkOre.2:floor @ore-titanium
 
   227 label *label427
   228 label *label428
   229 label *label429
-    * jump *label432 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  230 jump *label432 lessThanEq :checkOre.3:count 0
+  231 set :buildTitaniumDrillCfg:dx 1
+  232 set :buildTitaniumDrillCfg:dy 1
   233 set :buildTitaniumDrillCfg:best :checkOre.3:count
   234 jump *label430 lessThan :checkOre.3:count 4
   235 jump *label69 always
 
   248 label *label438
   249 label *label439
   250 label *label440
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  251 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   252 set :checkOre.1:count :checkOre:count
   253 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   254 jump *label441 notEqual :checkOre.1:floor @ore-titanium
 
   256 label *label441
   257 label *label442
   258 label *label443
-    * op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  259 op add *tmp97 :buildTitaniumDrillCfg:ay -1
   260 set :checkOre.2:count :checkOre.1:count
   261 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   262 jump *label444 notEqual :checkOre.2:floor @ore-titanium
 
   272 label *label448
   273 label *label449
   274 jump *label452 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  275 set :buildTitaniumDrillCfg:dx 1
+  276 set :buildTitaniumDrillCfg:dy -1
   277 set :buildTitaniumDrillCfg:best :checkOre.3:count
   278 jump *label450 lessThan :checkOre.3:count 4
   279 jump *label69 always
 
   292 label *label458
   293 label *label459
   294 label *label460
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  295 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   296 set :checkOre.1:count :checkOre:count
   297 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   298 jump *label461 notEqual :checkOre.1:floor @ore-titanium
 
   300 label *label461
   301 label *label462
   302 label *label463
-    * op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  303 op add *tmp97 :buildTitaniumDrillCfg:ay 1
   304 set :checkOre.2:count :checkOre.1:count
   305 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   306 jump *label464 notEqual :checkOre.2:floor @ore-titanium
 
   316 label *label468
   317 label *label469
   318 jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  319 set :buildTitaniumDrillCfg:dx -1
+  320 set :buildTitaniumDrillCfg:dy 1
   321 set :buildTitaniumDrillCfg:best :checkOre.3:count
   322 jump *label470 lessThan :checkOre.3:count 4
   323 jump *label69 always
 
   336 label *label478
   337 label *label479
   338 label *label480
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  339 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   340 set :checkOre.1:count :checkOre:count
   341 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   342 jump *label481 notEqual :checkOre.1:floor @ore-titanium
 
   344 label *label481
   345 label *label482
   346 label *label483
-    * op add *tmp97 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  347 op add *tmp97 :buildTitaniumDrillCfg:ay -1
   348 set :checkOre.2:count :checkOre.1:count
   349 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   350 jump *label484 notEqual :checkOre.2:floor @ore-titanium
 
   360 label *label488
   361 label *label489
   362 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  363 set :buildTitaniumDrillCfg:dx -1
+  364 set :buildTitaniumDrillCfg:dy -1
   365 set :buildTitaniumDrillCfg:best :checkOre.3:count
   366 jump *label490 lessThan :checkOre.3:count 4
   367 jump *label69 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   197 label *label417
   198 set :checkOre:count 0
   199 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   236 label *label432
   237 label *label433
   238 label *label434
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   239 label *label437
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   278 label *label452
   279 label *label453
   280 label *label454
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   281 label *label457
   282 set :checkOre:count 0
   283 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   320 label *label472
   321 label *label473
   322 label *label474
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   323 label *label477
   324 set :checkOre:count 0
   325 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-7 instructions):
 
   764 op land *tmp209 :depositItems:fromMining *tmp208
   765 jump *label206 equal *tmp209 false
   766 set *tmp210 7
-    * jump *label206 always
   767 label *label206
   768 set :moveToBlock:block :depositItems:block
   769 set :moveToBlock:radius *tmp210
 
  1051 set :mineOre.1:ore @sand
  1052 jump *label300 greaterThanEq :supplyBase:coal :supplyBase:sand
  1053 set :mineOre.1:ore @coal
-    * jump *label300 always
  1054 label *label300
  1055 setaddr :mineOre.1*retaddr *label301 (h:*label301)
  1056 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
 
  1094 set :mineOre.1:ore @sand
  1095 jump *label316 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1096 set :mineOre.1:ore @coal
-    * jump *label316 always
  1097 label *label316
  1098 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1099 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
 
  1213 sensor *tmp344 .core @titanium
  1214 jump *label346 greaterThanEq *tmp344 :meetTarget:titanium
  1215 set .titaniumTrigger 7
-    * jump *label346 always
  1216 label *label346
  1217 set .leadSiliconBlock .core
  1218 jump *label348 lessThanEq :meetTarget:siliconFactory 0
  1219 set .leadSiliconBlock .factory
-    * jump *label348 always
  1220 label *label348
  1221 label *label349
  1222 setaddr :targetMet*retaddr *label352 (h:*label352)
 
  1273 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1274 label *label366
  1275 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label354 always
  1276 label *label354
  1277 return :buildBlockAt*retaddr
  1278 end
 
  1299 call *label12 *invalid :buildBlockAt*retval (m:*label371) (h:*label371)
  1300 label *label371
  1301 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label369 always
  1302 label *label369
  1303 return :buildBlock*retaddr
  1304 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    52 label *label24
    53 label *label21
    54 set .press *tmp45
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   55 set :buildBlockFromCfg.1:x .coreX
    56 op add :buildBlockFromCfg.1:y .coreY 4
    57 set :buildBlock:block @battery
    58 set :buildBlock:x :buildBlockFromCfg.1:x
 
   198 set :checkOre:count 0
   199 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   200 jump *label418 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  201 set :checkOre:count 1
   202 label *label418
   203 label *label419
   204 label *label420
 
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   242 jump *label438 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  243 set :checkOre:count 1
   244 label *label438
   245 label *label439
   246 label *label440
 
   282 set :checkOre:count 0
   283 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   284 jump *label458 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  285 set :checkOre:count 1
   286 label *label458
   287 label *label459
   288 label *label460
 
   324 set :checkOre:count 0
   325 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   326 jump *label478 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  327 set :checkOre:count 1
   328 label *label478
   329 label *label479
   330 label *label480
 
   566 label *label134
   567 write @flare *tmp147 ".unitToProduce"
   568 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  569 set :buildBlockFromCfg.11:y .coreY
   570 set :buildBlock:block @unloader
   571 set :buildBlock:x :buildBlockFromCfg.11:x
   572 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1153 label *label11
  1154 label *label379
  1155 op sign *tmp338 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp338
+ 1156 set :meetTarget:count *tmp338
  1157 label *label380
  1158 label *label383
  1159 op sign *tmp338 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-9 instructions):
 
   433 set .titanium_drill *tmp66
   434 write .core processor3 ".core"
   435 write *tmp66 processor3 ".drill"
-    * op add :buildBlockFromCfg.5:y .coreY 2
+  436 op add :buildBlock:y .coreY 2
   437 set :buildBlock:block @unloader
   438 set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
   439 set :buildBlock:copper 0
   440 set :buildBlock:lead 0
   441 set :buildBlock:silicon 30
 
   444 label *label105
   445 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   446 label *label109
-    * set *tmp143 :buildBlock*retval
+  447 set .unloader1 :buildBlock*retval
   448 jump *label104 always
   449 label *label106
   450 multijump *tmp144 0 0 (m:marker6)
   451 multilabel *label108 (m:marker6)
   452 label *label107
   453 label *label104
-    * set .unloader1 *tmp143
-    * op add :buildBlockFromCfg.6:x .coreX 1
+  454 op add :buildBlock:x .coreX 1
   455 set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
   456 set :buildBlock:y :buildBlockFromCfg.1:y
   457 set :buildBlock:copper 90
   458 set :buildBlock:lead 50
 
   543 label *label131
   544 label *label128
   545 write *tmp159 *tmp147 ".unloader2"
-    * op add :buildBlockFromCfg.10:x .coreX -3
+  546 op add :buildBlock:x .coreX -3
   547 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.10:x
   548 set :buildBlock:y :buildBlockFromCfg.9:y
   549 set :buildBlock:copper 4
   550 set :buildBlock:lead 2
 
   562 label *label134
   563 write @flare *tmp147 ".unitToProduce"
   564 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
+  565 set :buildBlock:y .coreY
   566 set :buildBlock:block @unloader
   567 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
   568 set :buildBlock:copper 0
   569 set :buildBlock:lead 0
   570 set :buildBlock:silicon 30
 
   579 multilabel *label144 (m:marker12)
   580 label *label143
   581 label *label140
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
+  582 op add :buildBlock:x .coreX 3.5
+  583 op add :buildBlock:y .coreY 0.5
   584 set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
   585 set :buildBlock:copper 60
   586 set :buildBlock:lead 30
   587 set :buildBlock:graphite 30
 
   615 label *label155
   616 label *label152
   617 op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
+  618 op add :buildBlock:y .coreY 4.5
   619 set :buildBlock:block @water-extractor
   620 set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
   621 set :buildBlock:copper 30
   622 set :buildBlock:lead 30
   623 set :buildBlock:graphite 30
 
  1144 end
  1145 label *label11
  1146 label *label379
-    * op sign *tmp338 :meetTarget:copper
-    * set :meetTarget:count *tmp338
+ 1147 op sign :meetTarget:count :meetTarget:copper
  1148 label *label380
  1149 label *label383
  1150 op sign *tmp338 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    55 set :buildBlockFromCfg.1:x .coreX
    56 op add :buildBlockFromCfg.1:y .coreY 4
    57 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   58 set :buildBlock:x .coreX
    59 set :buildBlock:y :buildBlockFromCfg.1:y
    60 set :buildBlock:copper 5
    61 set :buildBlock:lead 20
 
    86 label *label33
    87 op add :buildBlockFromCfg.3:y .coreY 3
    88 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   89 set :buildBlock:x .coreX
    90 set :buildBlock:y :buildBlockFromCfg.3:y
    91 set :buildBlock:copper 25
    92 set :buildBlock:lead 15
 
   435 write *tmp66 processor3 ".drill"
   436 op add :buildBlock:y .coreY 2
   437 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  438 set :buildBlock:x .coreX
   439 set :buildBlock:copper 0
   440 set :buildBlock:lead 0
   441 set :buildBlock:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    52 label *label24
    53 label *label21
    54 set .press *tmp45
-    * set :buildBlockFromCfg.1:x .coreX
    55 op add :buildBlockFromCfg.1:y .coreY 4
    56 set :buildBlock:block @battery
    57 set :buildBlock:x .coreX

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     8 label *label15
     9 ubind @poly
    10 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label16
    11 jump *label15 equal .core null
-    * label *label17
    12 set .display processor1
    13 set :findUnits:type @mono
    14 setaddr :findUnits*retaddr *label18 (h:*label18)
 
    39 set :buildBlock:rotation 0
    40 set :buildBlock:config null
    41 setaddr :buildBlock*retaddr *label26 (h:*label26)
-    * label *label22
    42 call *label13 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp45 :buildBlock*retval
    45 jump *label21 always
-    * label *label23
    46 multijump *tmp46 0 0 (m:marker0)
    47 multilabel *label25 (m:marker0)
-    * label *label24
    48 label *label21
    49 set .press *tmp45
    50 op add :buildBlockFromCfg.1:y .coreY 4
 
    54 set :buildBlock:copper 5
    55 set :buildBlock:lead 20
    56 setaddr :buildBlock*retaddr *label32 (h:*label32)
-    * label *label28
    57 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    58 label *label32
    59 set *tmp49 :buildBlock*retval
    60 jump *label27 always
-    * label *label29
    61 multijump *tmp50 0 0 (m:marker1)
    62 multilabel *label31 (m:marker1)
-    * label *label30
    63 label *label27
    64 set .battery *tmp49
    65 op add :buildBlockFromCfg.2:x .coreX -1
    66 set :buildBlock:x :buildBlockFromCfg.2:x
    67 set :buildBlock:y :buildBlockFromCfg.1:y
    68 setaddr :buildBlock*retaddr *label38 (h:*label38)
-    * label *label34
    69 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    70 label *label38
    71 jump *label33 always
-    * label *label35
    72 multijump *tmp54 0 0 (m:marker2)
    73 multilabel *label37 (m:marker2)
-    * label *label36
    74 label *label33
    75 op add :buildBlockFromCfg.3:y .coreY 3
    76 set :buildBlock:block @combustion-generator
 
    79 set :buildBlock:copper 25
    80 set :buildBlock:lead 15
    81 setaddr :buildBlock*retaddr *label44 (h:*label44)
-    * label *label40
    82 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    83 label *label44
    84 set *tmp57 :buildBlock*retval
    85 jump *label39 always
-    * label *label41
    86 multijump *tmp58 0 0 (m:marker3)
    87 multilabel *label43 (m:marker3)
-    * label *label42
    88 label *label39
    89 set .generator *tmp57
    90 set .powerTarget 400
 
    95 set :buildBlock:copper 30
    96 set :buildBlock:lead 25
    97 setaddr :buildBlock*retaddr *label50 (h:*label50)
-    * label *label46
    98 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    99 label *label50
   100 set *tmp61 :buildBlock*retval
   101 jump *label45 always
-    * label *label47
   102 multijump *tmp62 0 0 (m:marker4)
   103 multilabel *label49 (m:marker4)
-    * label *label48
   104 label *label45
   105 set .smelter *tmp61
   106 set :buildTitaniumDrillCfg:distance 32
 
   139 jump *label62 equal *tmp74 false
   140 jump *label60 always
   141 label *label62
-    * label *label63
   142 op sin *tmp77 :locateOreAway:angle
   143 op mul *tmp78 *tmp77 :locateOreAway:distance
   144 op add *tmp79 .coreX *tmp78
 
   152 label *label65
   153 op add :locateOreAway:distance :locateOreAway:distance 4
   154 op add :locateOreAway:angle :locateOreAway:angle 45
-    * label *label64
-    * label *label59
   155 jump *label58 always
   156 label *label60
-    * label *label57
   157 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   158 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   159 set :moveTo.1:x :locateOreAway:x
 
   167 set :buildTitaniumDrillCfg:dx 0
   168 set :buildTitaniumDrillCfg:dy 0
   169 set :buildTitaniumDrillCfg:searches 0
-    * label *label67
   170 label *label378
   171 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   172 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   173 set :buildTitaniumDrillCfg:best 0
-    * label *label417
   174 set :checkOre:count 0
   175 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   176 jump *label418 notEqual :checkOre:floor @ore-titanium
   177 set :checkOre:count 1
   178 label *label418
-    * label *label419
-    * label *label420
   179 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   180 set :checkOre.1:count :checkOre:count
   181 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   182 jump *label421 notEqual :checkOre.1:floor @ore-titanium
   183 op add :checkOre.1:count :checkOre:count 1
   184 label *label421
-    * label *label422
-    * label *label423
   185 op add *tmp97 :buildTitaniumDrillCfg:ay 1
   186 set :checkOre.2:count :checkOre.1:count
   187 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   188 jump *label424 notEqual :checkOre.2:floor @ore-titanium
   189 op add :checkOre.2:count :checkOre.1:count 1
   190 label *label424
-    * label *label425
-    * label *label426
   191 set :checkOre.3:count :checkOre.2:count
   192 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   193 jump *label427 notEqual :checkOre.3:floor @ore-titanium
   194 op add :checkOre.3:count :checkOre.2:count 1
   195 label *label427
-    * label *label428
-    * label *label429
   196 jump *label432 lessThanEq :checkOre.3:count 0
   197 set :buildTitaniumDrillCfg:dx 1
   198 set :buildTitaniumDrillCfg:dy 1
 
   200 jump *label430 lessThan :checkOre.3:count 4
   201 jump *label69 always
   202 label *label430
-    * label *label431
   203 label *label432
-    * label *label433
-    * label *label434
-    * label *label437
   204 set :checkOre:count 0
   205 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   206 jump *label438 notEqual :checkOre:floor @ore-titanium
   207 set :checkOre:count 1
   208 label *label438
-    * label *label439
-    * label *label440
   209 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   210 set :checkOre.1:count :checkOre:count
   211 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   212 jump *label441 notEqual :checkOre.1:floor @ore-titanium
   213 op add :checkOre.1:count :checkOre:count 1
   214 label *label441
-    * label *label442
-    * label *label443
   215 op add *tmp97 :buildTitaniumDrillCfg:ay -1
   216 set :checkOre.2:count :checkOre.1:count
   217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   218 jump *label444 notEqual :checkOre.2:floor @ore-titanium
   219 op add :checkOre.2:count :checkOre.1:count 1
   220 label *label444
-    * label *label445
-    * label *label446
   221 set :checkOre.3:count :checkOre.2:count
   222 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   223 jump *label447 notEqual :checkOre.3:floor @ore-titanium
   224 op add :checkOre.3:count :checkOre.2:count 1
   225 label *label447
-    * label *label448
-    * label *label449
   226 jump *label452 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   227 set :buildTitaniumDrillCfg:dx 1
   228 set :buildTitaniumDrillCfg:dy -1
 
   230 jump *label450 lessThan :checkOre.3:count 4
   231 jump *label69 always
   232 label *label450
-    * label *label451
   233 label *label452
-    * label *label453
-    * label *label454
-    * label *label457
   234 set :checkOre:count 0
   235 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   236 jump *label458 notEqual :checkOre:floor @ore-titanium
   237 set :checkOre:count 1
   238 label *label458
-    * label *label459
-    * label *label460
   239 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   240 set :checkOre.1:count :checkOre:count
   241 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   242 jump *label461 notEqual :checkOre.1:floor @ore-titanium
   243 op add :checkOre.1:count :checkOre:count 1
   244 label *label461
-    * label *label462
-    * label *label463
   245 op add *tmp97 :buildTitaniumDrillCfg:ay 1
   246 set :checkOre.2:count :checkOre.1:count
   247 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   248 jump *label464 notEqual :checkOre.2:floor @ore-titanium
   249 op add :checkOre.2:count :checkOre.1:count 1
   250 label *label464
-    * label *label465
-    * label *label466
   251 set :checkOre.3:count :checkOre.2:count
   252 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   253 jump *label467 notEqual :checkOre.3:floor @ore-titanium
   254 op add :checkOre.3:count :checkOre.2:count 1
   255 label *label467
-    * label *label468
-    * label *label469
   256 jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   257 set :buildTitaniumDrillCfg:dx -1
   258 set :buildTitaniumDrillCfg:dy 1
 
   260 jump *label470 lessThan :checkOre.3:count 4
   261 jump *label69 always
   262 label *label470
-    * label *label471
   263 label *label472
-    * label *label473
-    * label *label474
-    * label *label477
   264 set :checkOre:count 0
   265 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   266 jump *label478 notEqual :checkOre:floor @ore-titanium
   267 set :checkOre:count 1
   268 label *label478
-    * label *label479
-    * label *label480
   269 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   270 set :checkOre.1:count :checkOre:count
   271 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   272 jump *label481 notEqual :checkOre.1:floor @ore-titanium
   273 op add :checkOre.1:count :checkOre:count 1
   274 label *label481
-    * label *label482
-    * label *label483
   275 op add *tmp97 :buildTitaniumDrillCfg:ay -1
   276 set :checkOre.2:count :checkOre.1:count
   277 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :checkOre.2:floor
   278 jump *label484 notEqual :checkOre.2:floor @ore-titanium
   279 op add :checkOre.2:count :checkOre.1:count 1
   280 label *label484
-    * label *label485
-    * label *label486
   281 set :checkOre.3:count :checkOre.2:count
   282 ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor
   283 jump *label487 notEqual :checkOre.3:floor @ore-titanium
   284 op add :checkOre.3:count :checkOre.2:count 1
   285 label *label487
-    * label *label488
-    * label *label489
   286 jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   287 set :buildTitaniumDrillCfg:dx -1
   288 set :buildTitaniumDrillCfg:dy -1
 
   290 jump *label490 lessThan :checkOre.3:count 4
   291 jump *label69 always
   292 label *label490
-    * label *label491
   293 label *label492
-    * label *label493
-    * label *label494
-    * label *label72
-    * label *label68
   294 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   295 jump *label378 lessThan :buildTitaniumDrillCfg:searches 5
   296 label *label69
 
   320 set *tmp66 :buildBlockAt*retval
   321 jump *label52 always
   322 label *label98
-    * label *label99
   323 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   324 jump *label96 always
   325 label *label95
 
   327 set :buildTitaniumDrillCfg:minimum 3
   328 label *label96
   329 label *label93
-    * label *label94
   330 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   331 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
   332 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
 
   343 label *label103
   344 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
   345 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
-    * label *label102
   346 set :buildTitaniumDrillCfg:attempts 0
   347 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
   348 op max :buildTitaniumDrillCfg:minimum *tmp141 1
   349 label *label100
-    * label *label101
-    * label *label54
   350 jump *label53 always
-    * label *label55
   351 set *tmp66 null
   352 label *label52
-    * label *label51
   353 set .titanium_drill *tmp66
   354 write .core processor3 ".core"
   355 write *tmp66 processor3 ".drill"
 
   361 set :buildBlock:silicon 30
   362 set :buildBlock:titanium 25
   363 setaddr :buildBlock*retaddr *label109 (h:*label109)
-    * label *label105
   364 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   365 label *label109
   366 set .unloader1 :buildBlock*retval
   367 jump *label104 always
-    * label *label106
   368 multijump *tmp144 0 0 (m:marker6)
   369 multilabel *label108 (m:marker6)
-    * label *label107
   370 label *label104
   371 op add :buildBlock:x .coreX 1
   372 set :buildBlock:block @micro-processor
 
   376 set :buildBlock:silicon 50
   377 set :buildBlock:titanium 0
   378 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   379 set :buildBlock:config processor2
   380 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   381 label *label115
   382 set *tmp147 :buildBlock*retval
   383 jump *label110 always
-    * label *label112
   384 multijump *tmp148 0 0 (m:marker7)
   385 multilabel *label114 (m:marker7)
-    * label *label113
   386 label *label110
   387 set .controller *tmp147
   388 write processor1 *tmp147 ".display"
 
   404 set :buildBlock:silicon 0
   405 set :buildBlock:config null
   406 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   407 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   408 label *label121
   409 jump *label116 always
-    * label *label118
   410 multijump *tmp152 0 0 (m:marker8)
   411 multilabel *label120 (m:marker8)
-    * label *label119
   412 label *label116
   413 op add :buildBlockFromCfg.8:x .coreX -4
   414 set :buildBlock:block @air-factory
 
   419 set :buildBlock:rotation 3
   420 set :buildBlock:config @mono
   421 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   422 call *label13 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   423 label *label127
   424 set *tmp155 :buildBlock*retval
   425 jump *label122 always
-    * label *label124
   426 multijump *tmp156 0 0 (m:marker9)
   427 multilabel *label126 (m:marker9)
-    * label *label125
   428 label *label122
   429 set .factory *tmp155
   430 write *tmp155 *tmp147 ".factory"
 
   440 set :buildBlock:rotation 0
   441 set :buildBlock:config null
   442 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   443 call *label13 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   444 label *label133
   445 set *tmp159 :buildBlock*retval
   446 jump *label128 always
-    * label *label130
   447 multijump *tmp160 0 0 (m:marker10)
   448 multilabel *label132 (m:marker10)
-    * label *label131
   449 label *label128
   450 write *tmp159 *tmp147 ".unloader2"
   451 op add :buildBlock:x .coreX -3
 
   456 set :buildBlock:silicon 0
   457 set :buildBlock:titanium 0
   458 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   459 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   460 label *label139
   461 jump *label134 always
-    * label *label136
   462 multijump *tmp164 0 0 (m:marker11)
   463 multilabel *label138 (m:marker11)
-    * label *label137
   464 label *label134
   465 write @flare *tmp147 ".unitToProduce"
   466 op add :buildBlockFromCfg.11:x .coreX 2
 
   472 set :buildBlock:silicon 30
   473 set :buildBlock:titanium 25
   474 setaddr :buildBlock*retaddr *label145 (h:*label145)
-    * label *label141
   475 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   476 label *label145
   477 jump *label140 always
-    * label *label142
   478 multijump *tmp168 0 0 (m:marker12)
   479 multilabel *label144 (m:marker12)
-    * label *label143
   480 label *label140
   481 op add :buildBlock:x .coreX 3.5
   482 op add :buildBlock:y .coreY 0.5
 
   487 set :buildBlock:silicon 0
   488 set :buildBlock:titanium 0
   489 setaddr :buildBlock*retaddr *label151 (h:*label151)
-    * label *label147
   490 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   491 label *label151
   492 jump *label146 always
-    * label *label148
   493 multijump *tmp172 0 0 (m:marker13)
   494 multilabel *label150 (m:marker13)
-    * label *label149
   495 label *label146
   496 write null *tmp147 ".kiln"
   497 set :buildBlock:block @junction
 
   501 set :buildBlock:lead 0
   502 set :buildBlock:graphite 0
   503 setaddr :buildBlock*retaddr *label157 (h:*label157)
-    * label *label153
   504 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   505 label *label157
   506 jump *label152 always
-    * label *label154
   507 multijump *tmp176 0 0 (m:marker14)
   508 multilabel *label156 (m:marker14)
-    * label *label155
   509 label *label152
   510 op add :buildBlockFromCfg.14:x .coreX -3.5
   511 op add :buildBlock:y .coreY 4.5
 
   516 set :buildBlock:graphite 30
   517 set :buildBlock:metaglass 30
   518 setaddr :buildBlock*retaddr *label163 (h:*label163)
-    * label *label159
   519 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   520 label *label163
   521 jump *label158 always
-    * label *label160
   522 multijump *tmp180 0 0 (m:marker15)
   523 multilabel *label162 (m:marker15)
-    * label *label161
   524 label *label158
   525 set :buildBlock:block @steam-generator
   526 set :buildBlock:x :buildBlockFromCfg.14:x
 
   531 set :buildBlock:silicon 30
   532 set :buildBlock:metaglass 0
   533 setaddr :buildBlock*retaddr *label169 (h:*label169)
-    * label *label165
   534 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   535 label *label169
   536 set *tmp183 :buildBlock*retval
   537 jump *label164 always
-    * label *label166
   538 multijump *tmp184 0 0 (m:marker16)
   539 multilabel *label168 (m:marker16)
-    * label *label167
   540 label *label164
   541 write *tmp183 *tmp147 ".generator2"
   542 set :buildBlock:block @sorter
 
   548 set :buildBlock:silicon 0
   549 set :buildBlock:config @coal
   550 setaddr :buildBlock*retaddr *label175 (h:*label175)
-    * label *label171
   551 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   552 label *label175
   553 jump *label170 always
-    * label *label172
   554 multijump *tmp188 0 0 (m:marker17)
   555 multilabel *label174 (m:marker17)
-    * label *label173
   556 label *label170
   557 label *label176
   558 setaddr :supplyBase*retaddr *label179 (h:*label179)
   559 call *label9 *invalid :supplyBase*retval (m:*label179) (h:*label179)
   560 label *label179
-    * label *label177
   561 jump *label176 always
-    * label *label178
   562 ucontrol stop
   563 set .ERROR "Done"
   564 stop
-    * label *label180
   565 end
   566 label *label0
   567 write "Moving..." .display ".status3"
-    * label *label183
   568 op sub *tmp193 :moveTo:radius 0.5
-    * label *label184
   569 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
   570 jump *label186 notEqual *tmp191 false
   571 label *label413
   572 ucontrol approach :moveTo:x :moveTo:y *tmp193
-    * label *label185
   573 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191
   574 jump *label413 equal *tmp191 false
   575 label *label186
-    * label *label182
   576 return :moveTo*retaddr
   577 end
   578 label *label1
 
   582 setaddr :moveTo*retaddr *label188 (h:*label188)
   583 call *label0 *invalid :moveTo*retval (m:*label188) (h:*label188)
   584 label *label188
-    * label *label187
   585 return :moveTo.1*retaddr
   586 end
   587 label *label2
   588 write "Moving..." .display ".status3"
-    * label *label190
   589 label *label191
   590 sensor *tmp196 @unit @firstItem
   591 jump *label194 equal *tmp196 null
   592 ucontrol itemDrop @air 1000
   593 label *label194
-    * label *label195
   594 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
-    * label *label192
   595 ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp199
   596 jump *label191 equal *tmp199 false
-    * label *label193
-    * label *label196
   597 sensor *tmp201 @unit @firstItem
   598 jump *label198 equal *tmp201 null
   599 label *label412
   600 ucontrol itemDrop @air 1000
-    * label *label197
   601 sensor *tmp201 @unit @firstItem
   602 jump *label412 notEqual *tmp201 null
   603 label *label198
-    * label *label189
   604 return :moveToEmpty*retaddr
   605 end
   606 label *label3
 
   612 setaddr :moveTo*retaddr *label200 (h:*label200)
   613 call *label0 *invalid :moveTo*retval (m:*label200) (h:*label200)
   614 label *label200
-    * label *label199
   615 return :moveToBlock*retaddr
   616 end
   617 label *label4
   618 write "Depositing..." .display ".status3"
-    * label *label202
   619 sensor *tmp205 @unit @firstItem
   620 jump *label203 notEqual *tmp205 :depositItems:item
   621 set *tmp210 5
 
   636 jump *label211 lessThan *tmp212 :depositItems:cap
   637 jump *label210 always
   638 label *label211
-    * label *label212
-    * label *label209
   639 sensor *tmp215 @unit @firstItem
   640 jump *label208 notEqual *tmp215 null
   641 label *label210
   642 jump *label204 always
   643 label *label203
-    * label *label213
   644 sensor *tmp217 @unit @firstItem
   645 jump *label215 equal *tmp217 null
   646 label *label414
   647 ucontrol itemDrop @air 1000
-    * label *label214
   648 sensor *tmp217 @unit @firstItem
   649 jump *label414 notEqual *tmp217 null
   650 label *label215
   651 label *label204
   652 write 0 .display ".transportTarget"
   653 write null .display ".transportItem"
-    * label *label216
-    * label *label201
   654 return :depositItems*retaddr
   655 end
   656 label *label5
 
   658 jump *label218 notEqual *tmp219 false
   659 set .ERROR "Cannot locate ore"
   660 stop
-    * label *label220
   661 label *label218
-    * label *label219
-    * label *label217
   662 return :locateOre*retaddr
   663 end
   664 label *label6
   665 op min :mineOre:amount :mineOre:amount 30
   666 write :mineOre:amount .display ".transportTarget"
   667 write :mineOre:ore .display ".transportItem"
-    * label *label222
   668 set :locateOre:ore :mineOre:ore
   669 setaddr :locateOre*retaddr *label223 (h:*label223)
   670 call *label5 *invalid :locateOre*retval (m:*label223) (h:*label223)
 
   677 call *label2 *invalid :moveToEmpty*retval (m:*label224) (h:*label224)
   678 label *label224
   679 write "Mining..." .display ".status3"
-    * label *label225
   680 op add :mineOre:stop @second 10
   681 label *label226
   682 sensor :mineOre:item @unit @firstItem
 
   686 jump *label229 equal *tmp228 false
   687 jump *label228 always
   688 label *label229
-    * label *label230
   689 ucontrol mine :mineOre:x :mineOre:y
   690 jump *label231 lessThanEq @second :mineOre:stop
   691 jump *label228 always
   692 label *label231
-    * label *label232
-    * label *label227
   693 sensor *tmp232 @unit @totalItems
   694 jump *label226 lessThan *tmp232 :mineOre:amount
   695 label *label228
 
   700 setaddr :depositItems*retaddr *label233 (h:*label233)
   701 call *label4 *invalid :depositItems*retval (m:*label233) (h:*label233)
   702 label *label233
-    * label *label221
   703 return :mineOre*retaddr
   704 end
   705 label *label7
   706 write "Mining " .display ".status2"
   707 write :mineOre.1:ore .display ".item2"
   708 write "core" .display ".block2"
-    * label *label235
   709 set :mineOre:ore :mineOre.1:ore
   710 set :mineOre:amount 30
   711 set :mineOre:block .core
   712 setaddr :mineOre*retaddr *label236 (h:*label236)
   713 call *label6 *invalid :mineOre*retval (m:*label236) (h:*label236)
   714 label *label236
-    * label *label234
   715 return :mineOre.1*retaddr
   716 end
   717 label *label8
   718 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   719 write :transportStatus.2:target .display ".transportTarget"
   720 write :fetchBlock:item .display ".transportItem"
-    * label *label238
   721 write "Fetching " .display ".status2"
   722 write :fetchBlock:item .display ".item2"
   723 write :fetchBlock:block .display ".block2"
-    * label *label239
   724 sensor *tmp236 :fetchBlock:block @x
   725 sensor *tmp237 :fetchBlock:block @y
   726 set :moveToEmpty:x *tmp236
 
   737 jump *label244 equal *tmp241 false
   738 ucontrol itemDrop @air 1000
   739 label *label244
-    * label *label245
-    * label *label242
   740 sensor *tmp243 @unit :fetchBlock:item
   741 op lessThan *tmp244 *tmp243 30
   742 sensor *tmp245 :fetchBlock:block :fetchBlock:item
   743 op land *tmp246 *tmp244 *tmp245
   744 jump *label241 notEqual *tmp246 false
-    * label *label243
   745 set :depositItems:block .core
   746 set :depositItems:item :fetchBlock:item
   747 set :depositItems:fromMining false
   748 setaddr :depositItems*retaddr *label246 (h:*label246)
   749 call *label4 *invalid :depositItems*retval (m:*label246) (h:*label246)
   750 label *label246
-    * label *label237
   751 return :fetchBlock*retaddr
   752 end
   753 label *label9
 
   758 sensor *tmp252 .press @coal
   759 jump *label252 greaterThanEq *tmp252 5
   760 write "Goal 1: Meeting the graphite target" .display ".status1"
-    * label *label254
   761 write "Supplying " .display ".status2"
   762 write @coal .display ".item2"
   763 write .press .display ".block2"
-    * label *label256
   764 sensor :supplyBlock:blockCapacity .press @itemCapacity
   765 sensor *tmp256 .press @coal
   766 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp256
 
   772 call *label6 *invalid :mineOre*retval (m:*label259) (h:*label259)
   773 label *label259
   774 label *label257
-    * label *label258
-    * label *label255
   775 set :supplyBase:supplied true
   776 label *label252
-    * label *label253
   777 label *label250
-    * label *label251
   778 sensor *tmp260 .core @silicon
   779 jump *label260 greaterThanEq *tmp260 .targetSilicon
   780 sensor *tmp263 .smelter @coal
   781 jump *label262 greaterThanEq *tmp263 5
   782 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
-    * label *label264
   783 write "Supplying " .display ".status2"
   784 write @coal .display ".item2"
   785 write .smelter .display ".block2"
-    * label *label266
   786 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   787 sensor *tmp267 .smelter @coal
   788 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp267
 
   794 call *label6 *invalid :mineOre*retval (m:*label269) (h:*label269)
   795 label *label269
   796 label *label267
-    * label *label268
-    * label *label265
   797 set :supplyBase:supplied true
   798 jump *label263 always
   799 label *label262
   800 sensor *tmp271 .smelter @sand
   801 jump *label270 greaterThanEq *tmp271 5
   802 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
-    * label *label272
   803 write "Supplying " .display ".status2"
   804 write @sand .display ".item2"
   805 write .smelter .display ".block2"
-    * label *label274
   806 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   807 sensor *tmp275 .smelter @sand
   808 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp275
 
   814 call *label6 *invalid :mineOre*retval (m:*label277) (h:*label277)
   815 label *label277
   816 label *label275
-    * label *label276
-    * label *label273
   817 set :supplyBase:supplied true
   818 label *label270
-    * label *label271
   819 label *label263
   820 label *label260
-    * label *label261
   821 sensor *tmp279 .battery @totalPower
   822 jump *label278 greaterThanEq *tmp279 .powerTarget
   823 sensor *tmp282 .generator @coal
   824 jump *label280 greaterThanEq *tmp282 2
   825 write "Goal 4: Supplying generator" .display ".status1"
-    * label *label282
   826 write "Supplying " .display ".status2"
   827 write @coal .display ".item2"
   828 write .generator .display ".block2"
-    * label *label284
   829 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   830 sensor *tmp286 .generator @coal
   831 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp286
 
   837 call *label6 *invalid :mineOre*retval (m:*label287) (h:*label287)
   838 label *label287
   839 label *label285
-    * label *label286
-    * label *label283
   840 set :supplyBase:supplied true
   841 label *label280
-    * label *label281
   842 label *label278
-    * label *label279
   843 label *label248
-    * label *label249
   844 sensor *tmp290 .titanium_drill @titanium
   845 jump *label288 greaterThanEq *tmp290 .titaniumTrigger
   846 jump *label290 notEqual :supplyBase:supplied false
 
   848 op mul *tmp296 .unloader1 .powerTarget
   849 jump *label292 greaterThanEq *tmp295 *tmp296
   850 write "Goal 5: Supplying generator (5)" .display ".status1"
-    * label *label294
   851 set :mineOre.1:ore @coal
   852 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   853 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
   857 sensor *tmp299 .core @silicon
   858 jump *label296 greaterThanEq *tmp299 .targetSilicon
   859 write "Goal 6: Meeting the silicon target" .display ".status1"
-    * label *label298
   860 sensor :supplyBase:coal .core @coal
   861 sensor :supplyBase:sand .core @sand
   862 set :mineOre.1:ore @sand
 
   871 sensor *tmp306 .core @copper
   872 jump *label302 greaterThanEq *tmp306 .targetCopper
   873 write "Goal 7: Meeting the copper target" .display ".status1"
-    * label *label304
   874 set :mineOre.1:ore @copper
   875 setaddr :mineOre.1*retaddr *label305 (h:*label305)
   876 call *label7 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
 
   880 sensor *tmp309 .core @lead
   881 jump *label306 greaterThanEq *tmp309 .targetLead
   882 write "Goal 8: Meeting the lead target" .display ".status1"
-    * label *label308
   883 set :mineOre.1:ore @lead
   884 setaddr :mineOre.1*retaddr *label309 (h:*label309)
   885 call *label7 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
 
   889 sensor *tmp312 .core @metaglass
   890 jump *label310 greaterThanEq *tmp312 .targetMetaglass
   891 write "Goal 9: Meeting the metaglass target" .display ".status1"
-    * label *label312
   892 set :mineOre.1:ore @sand
   893 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   894 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
 
   896 jump *label311 always
   897 label *label310
   898 write "Goal 10: Supplying base" .display ".status1"
-    * label *label314
   899 sensor :supplyBase:coal.1 .core @coal
   900 sensor :supplyBase:sand.1 .core @sand
   901 set :mineOre.1:ore @sand
 
   911 label *label297
   912 label *label293
   913 label *label290
-    * label *label291
   914 jump *label289 always
   915 label *label288
   916 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label318
   917 set :fetchBlock:block .titanium_drill
   918 set :fetchBlock:item @titanium
   919 setaddr :fetchBlock*retaddr *label319 (h:*label319)
   920 call *label8 *invalid :fetchBlock*retval (m:*label319) (h:*label319)
   921 label *label319
   922 label *label289
-    * label *label247
   923 return :supplyBase*retaddr
   924 end
   925 label *label10
 
   938 set :targetMet*retval true
   939 jump *label320 always
   940 label *label331
-    * label *label332
   941 label *label329
-    * label *label330
   942 label *label327
-    * label *label328
   943 label *label325
-    * label *label326
   944 label *label323
-    * label *label324
   945 label *label321
-    * label *label322
   946 set :targetMet*retval false
   947 jump *label320 always
   948 label *label320
   949 return :targetMet*retaddr
   950 end
   951 label *label11
-    * label *label379
   952 op sign :meetTarget:count :meetTarget:copper
-    * label *label380
-    * label *label383
   953 op sign *tmp338 :meetTarget:lead
   954 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label384
-    * label *label387
   955 op sign *tmp338 :meetTarget:graphite
   956 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label388
-    * label *label391
   957 op sign *tmp338 :meetTarget:silicon
   958 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label392
-    * label *label395
   959 op sign *tmp338 :meetTarget:titanium
   960 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label396
-    * label *label399
   961 op sign *tmp338 :meetTarget:metaglass
   962 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label400
-    * label *label403
   963 op sign *tmp338 :meetTarget:leadFactory
   964 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label404
-    * label *label407
   965 op sign *tmp338 :meetTarget:siliconFactory
   966 op add :meetTarget:count :meetTarget:count *tmp338
-    * label *label408
-    * label *label336
   967 write :meetTarget:count .display ".totalTargets"
   968 write :meetTarget:block .display ".nextBlock"
   969 write :meetTarget:copper .display ".targetCopper"
 
   998 jump *label348 lessThanEq :meetTarget:siliconFactory 0
   999 set .leadSiliconBlock .factory
  1000 label *label348
-    * label *label349
  1001 setaddr :targetMet*retaddr *label352 (h:*label352)
  1002 call *label10 *invalid :targetMet*retval (m:*label352) (h:*label352)
  1003 label *label352
 
  1006 setaddr :supplyBase*retaddr *label353 (h:*label353)
  1007 call *label9 *invalid :supplyBase*retval (m:*label353) (h:*label353)
  1008 label *label353
-    * label *label350
  1009 setaddr :targetMet*retaddr *label416 (h:*label416)
  1010 call *label10 *invalid :targetMet*retval (m:*label416) (h:*label416)
  1011 label *label416
  1012 jump *label415 equal :targetMet*retval false
  1013 label *label351
-    * label *label333
  1014 return :meetTarget*retaddr
  1015 end
  1016 label *label12
 
  1020 call *label1 *invalid :moveTo.1*retval (m:*label355) (h:*label355)
  1021 label *label355
  1022 write "Building..." .display ".status3"
-    * label *label356
  1023 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1024 jump *label357 equal :buildBlockAt:building null
  1025 jump *label359 notEqual :buildBlockAt:type :buildBlockAt:block
  1026 set :buildBlockAt*retval :buildBlockAt:building
  1027 jump *label354 always
  1028 label *label359
-    * label *label360
  1029 jump *label361 equal :buildBlockAt:skipError false
  1030 set :buildBlockAt*retval null
  1031 jump *label354 always
  1032 label *label361
-    * label *label362
  1033 set .ERROR "Cannot build at ("
  1034 stop
-    * label *label363
  1035 label *label357
-    * label *label358
  1036 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1037 wait 0.25
  1038 label *label364
 
  1040 jump *label367 notEqual :buildBlockAt:building null
  1041 jump *label366 always
  1042 label *label367
-    * label *label368
-    * label *label365
  1043 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1044 label *label366
  1045 set :buildBlockAt*retval :buildBlockAt:building
 
  1069 call *label12 *invalid :buildBlockAt*retval (m:*label371) (h:*label371)
  1070 label *label371
  1071 set :buildBlock*retval :buildBlockAt*retval
-    * label *label369
  1072 return :buildBlock*retaddr
  1073 end
  1074 label *label14
 
  1080 op add :findUnits:count :findUnits:count 1
  1081 ucontrol flag :findUnits:count
  1082 ubind :findUnits:type
-    * label *label376
  1083 jump *label375 notEqual @unit :findUnits:firstUnit
-    * label *label377
  1084 label *label373
-    * label *label374
-    * label *label372
  1085 return :findUnits*retaddr
  1086 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-9 instructions):
 
   136 op abs *tmp72 *tmp71
   137 op greaterThanEq *tmp73 *tmp72 10
   138 op or *tmp74 *tmp70 *tmp73
-    * jump *label62 equal *tmp74 false
-    * jump *label60 always
+  139 jump *label60 notEqual *tmp74 false
   140 label *label62
   141 op sin *tmp77 :locateOreAway:angle
   142 op mul *tmp78 *tmp77 :locateOreAway:distance
 
   196 set :buildTitaniumDrillCfg:dx 1
   197 set :buildTitaniumDrillCfg:dy 1
   198 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label430 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  199 jump *label69 greaterThanEq :checkOre.3:count 4
   200 label *label430
   201 label *label432
   202 set :checkOre:count 0
 
   225 set :buildTitaniumDrillCfg:dx 1
   226 set :buildTitaniumDrillCfg:dy -1
   227 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label450 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  228 jump *label69 greaterThanEq :checkOre.3:count 4
   229 label *label450
   230 label *label452
   231 set :checkOre:count 0
 
   254 set :buildTitaniumDrillCfg:dx -1
   255 set :buildTitaniumDrillCfg:dy 1
   256 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label470 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  257 jump *label69 greaterThanEq :checkOre.3:count 4
   258 label *label470
   259 label *label472
   260 set :checkOre:count 0
 
   283 set :buildTitaniumDrillCfg:dx -1
   284 set :buildTitaniumDrillCfg:dy -1
   285 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label490 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  286 jump *label69 greaterThanEq :checkOre.3:count 4
   287 label *label490
   288 label *label492
   289 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
 
   628 label *label208
   629 ucontrol itemDrop :depositItems:block 30
   630 sensor *tmp212 :depositItems:block :depositItems:item
-    * jump *label211 lessThan *tmp212 :depositItems:cap
-    * jump *label210 always
+  631 jump *label210 greaterThanEq *tmp212 :depositItems:cap
   632 label *label211
   633 sensor *tmp215 @unit @firstItem
   634 jump *label208 notEqual *tmp215 null
 
   677 op notEqual *tmp226 :mineOre:item null
   678 op notEqual *tmp227 :mineOre:item :mineOre:ore
   679 op land *tmp228 *tmp226 *tmp227
-    * jump *label229 equal *tmp228 false
-    * jump *label228 always
+  680 jump *label228 notEqual *tmp228 false
   681 label *label229
   682 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label231 lessThanEq @second :mineOre:stop
-    * jump *label228 always
+  683 jump *label228 greaterThan @second :mineOre:stop
   684 label *label231
   685 sensor *tmp232 @unit @totalItems
   686 jump *label226 lessThan *tmp232 :mineOre:amount
 
  1029 wait 0.25
  1030 label *label364
  1031 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label367 notEqual :buildBlockAt:building null
-    * jump *label366 always
+ 1032 jump *label366 equal :buildBlockAt:building null
  1033 label *label367
  1034 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1035 label *label366

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   137 op greaterThanEq *tmp73 *tmp72 10
   138 op or *tmp74 *tmp70 *tmp73
   139 jump *label60 notEqual *tmp74 false
-    * label *label62
   140 op sin *tmp77 :locateOreAway:angle
   141 op mul *tmp78 *tmp77 :locateOreAway:distance
   142 op add *tmp79 .coreX *tmp78
 
   196 set :buildTitaniumDrillCfg:dy 1
   197 set :buildTitaniumDrillCfg:best :checkOre.3:count
   198 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label430
   199 label *label432
   200 set :checkOre:count 0
   201 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   224 set :buildTitaniumDrillCfg:dy -1
   225 set :buildTitaniumDrillCfg:best :checkOre.3:count
   226 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label450
   227 label *label452
   228 set :checkOre:count 0
   229 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   252 set :buildTitaniumDrillCfg:dy 1
   253 set :buildTitaniumDrillCfg:best :checkOre.3:count
   254 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label470
   255 label *label472
   256 set :checkOre:count 0
   257 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   280 set :buildTitaniumDrillCfg:dy -1
   281 set :buildTitaniumDrillCfg:best :checkOre.3:count
   282 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label490
   283 label *label492
   284 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   285 jump *label378 lessThan :buildTitaniumDrillCfg:searches 5
 
   624 ucontrol itemDrop :depositItems:block 30
   625 sensor *tmp212 :depositItems:block :depositItems:item
   626 jump *label210 greaterThanEq *tmp212 :depositItems:cap
-    * label *label211
   627 sensor *tmp215 @unit @firstItem
   628 jump *label208 notEqual *tmp215 null
   629 label *label210
 
   672 op notEqual *tmp227 :mineOre:item :mineOre:ore
   673 op land *tmp228 *tmp226 *tmp227
   674 jump *label228 notEqual *tmp228 false
-    * label *label229
   675 ucontrol mine :mineOre:x :mineOre:y
   676 jump *label228 greaterThan @second :mineOre:stop
-    * label *label231
   677 sensor *tmp232 @unit @totalItems
   678 jump *label226 lessThan *tmp232 :mineOre:amount
   679 label *label228
 
  1022 label *label364
  1023 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1024 jump *label366 equal :buildBlockAt:building null
-    * label *label367
  1025 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1026 label *label366
  1027 set :buildBlockAt*retval :buildBlockAt:building

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   318 label *label96
   319 label *label93
   320 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  321 jump *label53 lessThanEq :buildTitaniumDrillCfg:attempts 5
   322 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   323 op sin *tmp135 :locateOreAway:angle
   324 op mul *tmp136 *tmp135 :locateOreAway:distance
 
   623 label *label208
   624 ucontrol itemDrop :depositItems:block 30
   625 sensor *tmp212 :depositItems:block :depositItems:item
-    * jump *label210 greaterThanEq *tmp212 :depositItems:cap
+  626 jump *label204 greaterThanEq *tmp212 :depositItems:cap
   627 sensor *tmp215 @unit @firstItem
   628 jump *label208 notEqual *tmp215 null
   629 label *label210
 
   827 label *label248
   828 sensor *tmp290 .titanium_drill @titanium
   829 jump *label288 greaterThanEq *tmp290 .titaniumTrigger
-    * jump *label290 notEqual :supplyBase:supplied false
+  830 jump *label289 notEqual :supplyBase:supplied false
   831 sensor *tmp295 .battery @totalPower
   832 op mul *tmp296 .unloader1 .powerTarget
   833 jump *label292 greaterThanEq *tmp295 *tmp296
 
   836 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   837 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
   838 label *label295
-    * jump *label293 always
+  839 return :supplyBase*retaddr
   840 label *label292
   841 sensor *tmp299 .core @silicon
   842 jump *label296 greaterThanEq *tmp299 .targetSilicon
 
   850 setaddr :mineOre.1*retaddr *label301 (h:*label301)
   851 call *label7 *invalid :mineOre.1*retval (m:*label301) (h:*label301)
   852 label *label301
-    * jump *label297 always
+  853 return :supplyBase*retaddr
   854 label *label296
   855 sensor *tmp306 .core @copper
   856 jump *label302 greaterThanEq *tmp306 .targetCopper
 
   859 setaddr :mineOre.1*retaddr *label305 (h:*label305)
   860 call *label7 *invalid :mineOre.1*retval (m:*label305) (h:*label305)
   861 label *label305
-    * jump *label303 always
+  862 return :supplyBase*retaddr
   863 label *label302
   864 sensor *tmp309 .core @lead
   865 jump *label306 greaterThanEq *tmp309 .targetLead
 
   868 setaddr :mineOre.1*retaddr *label309 (h:*label309)
   869 call *label7 *invalid :mineOre.1*retval (m:*label309) (h:*label309)
   870 label *label309
-    * jump *label307 always
+  871 return :supplyBase*retaddr
   872 label *label306
   873 sensor *tmp312 .core @metaglass
   874 jump *label310 greaterThanEq *tmp312 .targetMetaglass
 
   877 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   878 call *label7 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
   879 label *label313
-    * jump *label311 always
+  880 return :supplyBase*retaddr
   881 label *label310
   882 write "Goal 10: Supplying base" .display ".status1"
   883 sensor :supplyBase:coal.1 .core @coal
 
   895 label *label297
   896 label *label293
   897 label *label290
-    * jump *label289 always
+  898 return :supplyBase*retaddr
   899 label *label288
   900 write "Goal 11: Fetching titanium" .display ".status1"
   901 set :fetchBlock:block .titanium_drill
 
   920 sensor *tmp334 .core @metaglass
   921 jump *label331 lessThan *tmp334 .targetMetaglass
   922 set :targetMet*retval true
-    * jump *label320 always
+  923 return :targetMet*retaddr
   924 label *label331
   925 label *label329
   926 label *label327
 
   928 label *label323
   929 label *label321
   930 set :targetMet*retval false
-    * jump *label320 always
+  931 return :targetMet*retaddr
   932 label *label320
   933 return :targetMet*retaddr
   934 end
 
  1008 jump *label357 equal :buildBlockAt:building null
  1009 jump *label359 notEqual :buildBlockAt:type :buildBlockAt:block
  1010 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label354 always
+ 1011 return :buildBlockAt*retaddr
  1012 label *label359
  1013 jump *label361 equal :buildBlockAt:skipError false
  1014 set :buildBlockAt*retval null
-    * jump *label354 always
+ 1015 return :buildBlockAt*retaddr
  1016 label *label361
  1017 set .ERROR "Cannot build at ("
  1018 stop

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-38 instructions):
 
    43 label *label26
    44 set *tmp45 :buildBlock*retval
    45 jump *label21 always
-    * multijump *tmp46 0 0 (m:marker0)
-    * multilabel *label25 (m:marker0)
    46 label *label21
    47 set .press *tmp45
    48 op add :buildBlockFromCfg.1:y .coreY 4
 
    56 label *label32
    57 set *tmp49 :buildBlock*retval
    58 jump *label27 always
-    * multijump *tmp50 0 0 (m:marker1)
-    * multilabel *label31 (m:marker1)
    59 label *label27
    60 set .battery *tmp49
    61 op add :buildBlockFromCfg.2:x .coreX -1
 
    65 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    66 label *label38
    67 jump *label33 always
-    * multijump *tmp54 0 0 (m:marker2)
-    * multilabel *label37 (m:marker2)
    68 label *label33
    69 op add :buildBlockFromCfg.3:y .coreY 3
    70 set :buildBlock:block @combustion-generator
 
    77 label *label44
    78 set *tmp57 :buildBlock*retval
    79 jump *label39 always
-    * multijump *tmp58 0 0 (m:marker3)
-    * multilabel *label43 (m:marker3)
    80 label *label39
    81 set .generator *tmp57
    82 set .powerTarget 400
 
    91 label *label50
    92 set *tmp61 :buildBlock*retval
    93 jump *label45 always
-    * multijump *tmp62 0 0 (m:marker4)
-    * multilabel *label49 (m:marker4)
    94 label *label45
    95 set .smelter *tmp61
    96 set :buildTitaniumDrillCfg:distance 32
 
   326 set :buildTitaniumDrillCfg:attempts 0
   327 op sub *tmp141 :buildTitaniumDrillCfg:minimum 1
   328 op max :buildTitaniumDrillCfg:minimum *tmp141 1
-    * label *label100
   329 jump *label53 always
-    * set *tmp66 null
   330 label *label52
   331 set .titanium_drill *tmp66
   332 write .core processor3 ".core"
 
   343 label *label109
   344 set .unloader1 :buildBlock*retval
   345 jump *label104 always
-    * multijump *tmp144 0 0 (m:marker6)
-    * multilabel *label108 (m:marker6)
   346 label *label104
   347 op add :buildBlock:x .coreX 1
   348 set :buildBlock:block @micro-processor
 
   357 label *label115
   358 set *tmp147 :buildBlock*retval
   359 jump *label110 always
-    * multijump *tmp148 0 0 (m:marker7)
-    * multilabel *label114 (m:marker7)
   360 label *label110
   361 set .controller *tmp147
   362 write processor1 *tmp147 ".display"
 
   381 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   382 label *label121
   383 jump *label116 always
-    * multijump *tmp152 0 0 (m:marker8)
-    * multilabel *label120 (m:marker8)
   384 label *label116
   385 op add :buildBlockFromCfg.8:x .coreX -4
   386 set :buildBlock:block @air-factory
 
   395 label *label127
   396 set *tmp155 :buildBlock*retval
   397 jump *label122 always
-    * multijump *tmp156 0 0 (m:marker9)
-    * multilabel *label126 (m:marker9)
   398 label *label122
   399 set .factory *tmp155
   400 write *tmp155 *tmp147 ".factory"
 
   414 label *label133
   415 set *tmp159 :buildBlock*retval
   416 jump *label128 always
-    * multijump *tmp160 0 0 (m:marker10)
-    * multilabel *label132 (m:marker10)
   417 label *label128
   418 write *tmp159 *tmp147 ".unloader2"
   419 op add :buildBlock:x .coreX -3
 
   427 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   428 label *label139
   429 jump *label134 always
-    * multijump *tmp164 0 0 (m:marker11)
-    * multilabel *label138 (m:marker11)
   430 label *label134
   431 write @flare *tmp147 ".unitToProduce"
   432 op add :buildBlockFromCfg.11:x .coreX 2
 
   441 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   442 label *label145
   443 jump *label140 always
-    * multijump *tmp168 0 0 (m:marker12)
-    * multilabel *label144 (m:marker12)
   444 label *label140
   445 op add :buildBlock:x .coreX 3.5
   446 op add :buildBlock:y .coreY 0.5
 
   454 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   455 label *label151
   456 jump *label146 always
-    * multijump *tmp172 0 0 (m:marker13)
-    * multilabel *label150 (m:marker13)
   457 label *label146
   458 write null *tmp147 ".kiln"
   459 set :buildBlock:block @junction
 
   466 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   467 label *label157
   468 jump *label152 always
-    * multijump *tmp176 0 0 (m:marker14)
-    * multilabel *label156 (m:marker14)
   469 label *label152
   470 op add :buildBlockFromCfg.14:x .coreX -3.5
   471 op add :buildBlock:y .coreY 4.5
 
   479 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   480 label *label163
   481 jump *label158 always
-    * multijump *tmp180 0 0 (m:marker15)
-    * multilabel *label162 (m:marker15)
   482 label *label158
   483 set :buildBlock:block @steam-generator
   484 set :buildBlock:x :buildBlockFromCfg.14:x
 
   493 label *label169
   494 set *tmp183 :buildBlock*retval
   495 jump *label164 always
-    * multijump *tmp184 0 0 (m:marker16)
-    * multilabel *label168 (m:marker16)
   496 label *label164
   497 write *tmp183 *tmp147 ".generator2"
   498 set :buildBlock:block @sorter
 
   507 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   508 label *label175
   509 jump *label170 always
-    * multijump *tmp188 0 0 (m:marker17)
-    * multilabel *label174 (m:marker17)
   510 label *label170
   511 label *label176
   512 setaddr :supplyBase*retaddr *label179 (h:*label179)
   513 call *label9 *invalid :supplyBase*retval (m:*label179) (h:*label179)
   514 label *label179
   515 jump *label176 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   516 label *label0
   517 write "Moving..." .display ".status3"
   518 op sub *tmp193 :moveTo:radius 0.5
 
   524 jump *label413 equal *tmp191 false
   525 label *label186
   526 return :moveTo*retaddr
-    * end
   527 label *label1
   528 set :moveTo:x :moveTo.1:x
   529 set :moveTo:y :moveTo.1:y
 
   532 call *label0 *invalid :moveTo*retval (m:*label188) (h:*label188)
   533 label *label188
   534 return :moveTo.1*retaddr
-    * end
   535 label *label2
   536 write "Moving..." .display ".status3"
   537 label *label191
 
   550 jump *label412 notEqual *tmp201 null
   551 label *label198
   552 return :moveToEmpty*retaddr
-    * end
   553 label *label3
   554 sensor *tmp203 :moveToBlock:block @x
   555 sensor *tmp204 :moveToBlock:block @y
 
   560 call *label0 *invalid :moveTo*retval (m:*label200) (h:*label200)
   561 label *label200
   562 return :moveToBlock*retaddr
-    * end
   563 label *label4
   564 write "Depositing..." .display ".status3"
   565 sensor *tmp205 @unit @firstItem
 
   582 jump *label204 greaterThanEq *tmp212 :depositItems:cap
   583 sensor *tmp215 @unit @firstItem
   584 jump *label208 notEqual *tmp215 null
-    * label *label210
   585 jump *label204 always
   586 label *label203
   587 sensor *tmp217 @unit @firstItem
 
   595 write 0 .display ".transportTarget"
   596 write null .display ".transportItem"
   597 return :depositItems*retaddr
-    * end
   598 label *label5
   599 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
   600 jump *label218 notEqual *tmp219 false
 
   602 stop
   603 label *label218
   604 return :locateOre*retaddr
-    * end
   605 label *label6
   606 op min :mineOre:amount :mineOre:amount 30
   607 write :mineOre:amount .display ".transportTarget"
 
   638 call *label4 *invalid :depositItems*retval (m:*label233) (h:*label233)
   639 label *label233
   640 return :mineOre*retaddr
-    * end
   641 label *label7
   642 write "Mining " .display ".status2"
   643 write :mineOre.1:ore .display ".item2"
 
   649 call *label6 *invalid :mineOre*retval (m:*label236) (h:*label236)
   650 label *label236
   651 return :mineOre.1*retaddr
-    * end
   652 label *label8
   653 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   654 write :transportStatus.2:target .display ".transportTarget"
 
   684 call *label4 *invalid :depositItems*retval (m:*label246) (h:*label246)
   685 label *label246
   686 return :fetchBlock*retaddr
-    * end
   687 label *label9
   688 set :supplyBase:supplied false
   689 jump *label248 notEqual .unloader1 null
 
   839 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   840 call *label7 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
   841 label *label317
-    * label *label311
-    * label *label307
-    * label *label303
-    * label *label297
-    * label *label293
-    * label *label290
   842 return :supplyBase*retaddr
   843 label *label288
   844 write "Goal 11: Fetching titanium" .display ".status1"
 
   849 label *label319
   850 label *label289
   851 return :supplyBase*retaddr
-    * end
   852 label *label10
   853 sensor *tmp319 .core @copper
   854 jump *label321 lessThan *tmp319 .targetCopper
 
   872 label *label321
   873 set :targetMet*retval false
   874 return :targetMet*retaddr
-    * label *label320
-    * return :targetMet*retaddr
-    * end
   875 label *label11
   876 op sign :meetTarget:count :meetTarget:copper
   877 op sign *tmp338 :meetTarget:lead
 
   936 jump *label415 equal :targetMet*retval false
   937 label *label351
   938 return :meetTarget*retaddr
-    * end
   939 label *label12
   940 set :moveTo.1:x :buildBlockAt:x
   941 set :moveTo.1:y :buildBlockAt:y
 
   964 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
   965 label *label366
   966 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label354
   967 return :buildBlockAt*retaddr
-    * end
   968 label *label13
   969 set :meetTarget:block :buildBlock:block
   970 set :meetTarget:copper :buildBlock:copper
 
   989 label *label371
   990 set :buildBlock*retval :buildBlockAt*retval
   991 return :buildBlock*retaddr
-    * end
   992 label *label14
   993 set :findUnits:count 0
   994 ubind :findUnits:type
 
  1001 jump *label375 notEqual @unit :findUnits:firstUnit
  1002 label *label373
  1003 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    42 call *label13 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp45 :buildBlock*retval
-    * jump *label21 always
    45 label *label21
    46 set .press *tmp45
    47 op add :buildBlockFromCfg.1:y .coreY 4
 
    54 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    55 label *label32
    56 set *tmp49 :buildBlock*retval
-    * jump *label27 always
    57 label *label27
    58 set .battery *tmp49
    59 op add :buildBlockFromCfg.2:x .coreX -1
 
    62 setaddr :buildBlock*retaddr *label38 (h:*label38)
    63 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    64 label *label38
-    * jump *label33 always
    65 label *label33
    66 op add :buildBlockFromCfg.3:y .coreY 3
    67 set :buildBlock:block @combustion-generator
 
    73 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    74 label *label44
    75 set *tmp57 :buildBlock*retval
-    * jump *label39 always
    76 label *label39
    77 set .generator *tmp57
    78 set .powerTarget 400
 
    86 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    87 label *label50
    88 set *tmp61 :buildBlock*retval
-    * jump *label45 always
    89 label *label45
    90 set .smelter *tmp61
    91 set :buildTitaniumDrillCfg:distance 32
 
   337 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   338 label *label109
   339 set .unloader1 :buildBlock*retval
-    * jump *label104 always
   340 label *label104
   341 op add :buildBlock:x .coreX 1
   342 set :buildBlock:block @micro-processor
 
   350 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   351 label *label115
   352 set *tmp147 :buildBlock*retval
-    * jump *label110 always
   353 label *label110
   354 set .controller *tmp147
   355 write processor1 *tmp147 ".display"
 
   373 setaddr :buildBlock*retaddr *label121 (h:*label121)
   374 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   375 label *label121
-    * jump *label116 always
   376 label *label116
   377 op add :buildBlockFromCfg.8:x .coreX -4
   378 set :buildBlock:block @air-factory
 
   386 call *label13 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   387 label *label127
   388 set *tmp155 :buildBlock*retval
-    * jump *label122 always
   389 label *label122
   390 set .factory *tmp155
   391 write *tmp155 *tmp147 ".factory"
 
   404 call *label13 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   405 label *label133
   406 set *tmp159 :buildBlock*retval
-    * jump *label128 always
   407 label *label128
   408 write *tmp159 *tmp147 ".unloader2"
   409 op add :buildBlock:x .coreX -3
 
   416 setaddr :buildBlock*retaddr *label139 (h:*label139)
   417 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   418 label *label139
-    * jump *label134 always
   419 label *label134
   420 write @flare *tmp147 ".unitToProduce"
   421 op add :buildBlockFromCfg.11:x .coreX 2
 
   429 setaddr :buildBlock*retaddr *label145 (h:*label145)
   430 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   431 label *label145
-    * jump *label140 always
   432 label *label140
   433 op add :buildBlock:x .coreX 3.5
   434 op add :buildBlock:y .coreY 0.5
 
   441 setaddr :buildBlock*retaddr *label151 (h:*label151)
   442 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   443 label *label151
-    * jump *label146 always
   444 label *label146
   445 write null *tmp147 ".kiln"
   446 set :buildBlock:block @junction
 
   452 setaddr :buildBlock*retaddr *label157 (h:*label157)
   453 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   454 label *label157
-    * jump *label152 always
   455 label *label152
   456 op add :buildBlockFromCfg.14:x .coreX -3.5
   457 op add :buildBlock:y .coreY 4.5
 
   464 setaddr :buildBlock*retaddr *label163 (h:*label163)
   465 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   466 label *label163
-    * jump *label158 always
   467 label *label158
   468 set :buildBlock:block @steam-generator
   469 set :buildBlock:x :buildBlockFromCfg.14:x
 
   477 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   478 label *label169
   479 set *tmp183 :buildBlock*retval
-    * jump *label164 always
   480 label *label164
   481 write *tmp183 *tmp147 ".generator2"
   482 set :buildBlock:block @sorter
 
   490 setaddr :buildBlock*retaddr *label175 (h:*label175)
   491 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   492 label *label175
-    * jump *label170 always
   493 label *label170
   494 label *label176
   495 setaddr :supplyBase*retaddr *label179 (h:*label179)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    42 call *label13 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp45 :buildBlock*retval
-    * label *label21
    45 set .press *tmp45
    46 op add :buildBlockFromCfg.1:y .coreY 4
    47 set :buildBlock:block @battery
 
    53 call *label13 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    54 label *label32
    55 set *tmp49 :buildBlock*retval
-    * label *label27
    56 set .battery *tmp49
    57 op add :buildBlockFromCfg.2:x .coreX -1
    58 set :buildBlock:x :buildBlockFromCfg.2:x
 
    60 setaddr :buildBlock*retaddr *label38 (h:*label38)
    61 call *label13 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    62 label *label38
-    * label *label33
    63 op add :buildBlockFromCfg.3:y .coreY 3
    64 set :buildBlock:block @combustion-generator
    65 set :buildBlock:x .coreX
 
    70 call *label13 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    71 label *label44
    72 set *tmp57 :buildBlock*retval
-    * label *label39
    73 set .generator *tmp57
    74 set .powerTarget 400
    75 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    82 call *label13 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    83 label *label50
    84 set *tmp61 :buildBlock*retval
-    * label *label45
    85 set .smelter *tmp61
    86 set :buildTitaniumDrillCfg:distance 32
    87 set :buildTitaniumDrillCfg:angle 0
 
   332 call *label13 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   333 label *label109
   334 set .unloader1 :buildBlock*retval
-    * label *label104
   335 op add :buildBlock:x .coreX 1
   336 set :buildBlock:block @micro-processor
   337 set :buildBlock:y :buildBlockFromCfg.1:y
 
   344 call *label13 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   345 label *label115
   346 set *tmp147 :buildBlock*retval
-    * label *label110
   347 set .controller *tmp147
   348 write processor1 *tmp147 ".display"
   349 write .core *tmp147 ".core"
 
   366 setaddr :buildBlock*retaddr *label121 (h:*label121)
   367 call *label13 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   368 label *label121
-    * label *label116
   369 op add :buildBlockFromCfg.8:x .coreX -4
   370 set :buildBlock:block @air-factory
   371 set :buildBlock:x :buildBlockFromCfg.8:x
 
   378 call *label13 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   379 label *label127
   380 set *tmp155 :buildBlock*retval
-    * label *label122
   381 set .factory *tmp155
   382 write *tmp155 *tmp147 ".factory"
   383 write *tmp155 processor1 ".factory"
 
   395 call *label13 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   396 label *label133
   397 set *tmp159 :buildBlock*retval
-    * label *label128
   398 write *tmp159 *tmp147 ".unloader2"
   399 op add :buildBlock:x .coreX -3
   400 set :buildBlock:block @overflow-gate
 
   406 setaddr :buildBlock*retaddr *label139 (h:*label139)
   407 call *label13 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   408 label *label139
-    * label *label134
   409 write @flare *tmp147 ".unitToProduce"
   410 op add :buildBlockFromCfg.11:x .coreX 2
   411 set :buildBlock:y .coreY
 
   418 setaddr :buildBlock*retaddr *label145 (h:*label145)
   419 call *label13 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   420 label *label145
-    * label *label140
   421 op add :buildBlock:x .coreX 3.5
   422 op add :buildBlock:y .coreY 0.5
   423 set :buildBlock:block @kiln
 
   429 setaddr :buildBlock*retaddr *label151 (h:*label151)
   430 call *label13 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   431 label *label151
-    * label *label146
   432 write null *tmp147 ".kiln"
   433 set :buildBlock:block @junction
   434 set :buildBlock:x :buildBlockFromCfg.11:x
 
   439 setaddr :buildBlock*retaddr *label157 (h:*label157)
   440 call *label13 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   441 label *label157
-    * label *label152
   442 op add :buildBlockFromCfg.14:x .coreX -3.5
   443 op add :buildBlock:y .coreY 4.5
   444 set :buildBlock:block @water-extractor
 
   450 setaddr :buildBlock*retaddr *label163 (h:*label163)
   451 call *label13 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   452 label *label163
-    * label *label158
   453 set :buildBlock:block @steam-generator
   454 set :buildBlock:x :buildBlockFromCfg.14:x
   455 set :buildBlock:y :buildBlockFromCfg:y
 
   462 call *label13 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   463 label *label169
   464 set *tmp183 :buildBlock*retval
-    * label *label164
   465 write *tmp183 *tmp147 ".generator2"
   466 set :buildBlock:block @sorter
   467 set :buildBlock:x :buildBlockFromCfg.8:x
 
   474 setaddr :buildBlock*retaddr *label175 (h:*label175)
   475 call *label13 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   476 label *label175
-    * label *label170
   477 label *label176
   478 setaddr :supplyBase*retaddr *label179 (h:*label179)
   479 call *label9 *invalid :supplyBase*retval (m:*label179) (h:*label179)

Final code before resolving virtual instructions:

    0:  jump *label498 always 0 0                                    Actions.mnd: volatile var ERROR = "";
    1:  draw triangle processor1 processor2 processor3 .ERROR .batte ...
    2:  draw triangle .core .coreX .coreY .display .factory .flares  ...
    3:  draw triangle .generator .leadSiliconBlock .monos .polys .po ...
    4:  draw triangle .smelter .targetCopper .targetGraphite .target ...
    5:  draw triangle .targetTitanium .titaniumTrigger .titanium_dri ...
    6:  draw triangle :buildBlock:copper :buildBlock:graphite :build ...
    7:  draw triangle :buildBlock:titanium :buildBlock:x :buildBlock ...
    8:  draw triangle :buildBlockAt:rotation :buildBlockAt:skipError ...
    9:  draw triangle :buildBlockFromCfg:x :buildBlockFromCfg.4:x :b ...
   10:  draw triangle :buildBlockFromCfg.1:y :buildBlockFromCfg.9:y  ...
   11:  draw triangle :buildTitaniumDrillCfg:attempts :buildTitanium ...
   12:  draw triangle :buildTitaniumDrillCfg:dy :buildTitaniumDrillC ...
   13:  draw triangle :checkOre:count :checkOre.2:floor :checkOre.1: ...
   14:  draw triangle :depositItems:block :depositItems:cap :deposit ...
   15:  draw triangle :fetchBlock:unitItem :findUnits:count :findUni ...
   16:  draw triangle :locateOre:y :locateOreAway:angle :locateOreAw ...
   17:  draw triangle :meetTarget:copper :meetTarget:count :meetTarg ...
   18:  draw triangle :meetTarget:silicon :meetTarget:siliconFactory ...
   19:  draw triangle :mineOre.1:ore :mineOre:ore :mineOre:stop :min ...
   20:  draw triangle :moveTo.1:x :moveTo:x :moveTo.1:y :moveTo:y :m ...
   21:  draw triangle :moveToEmpty:x :moveToEmpty:y :supplyBase:coal ...
   22:  draw triangle :supplyBase:supplied :supplyBlock.3:blockCapac ...
   23:  draw triangle :supplyBlock:missing :supplyBlock.2:missing :s ...
        label *label498                                              ...
   24:  set .ERROR ""                                                ...
   25:  set .press null                                              CoreBuilder.mnd: var
   26:  set .generator null                                          ...
   27:  set .battery null                                            ...
   28:  set .smelter null                                            ...
   29:  set .titanium_drill null                                     ...
   30:  set .unloader1 null                                          ...
   31:  set .factory null                                            ...
        label *label15                                               CoreBuilder.mnd: do
   32:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   33:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   34:  jump *label15 equal .core null                               CoreBuilder.mnd: do
   35:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   36:  set :findUnits:type @mono                                    CoreBuilder.mnd: findUnits(@mono, out monos);
   37:  setaddr :findUnits*retaddr *label18                          ...
   38:  call *label14 *invalid :findUnits*retval                     ...
        label *label18                                               ...
   39:  set .monos :findUnits:count                                  ...
   40:  set :findUnits:type @flare                                   CoreBuilder.mnd: findUnits(@flare, out flares);
   41:  setaddr :findUnits*retaddr *label19                          ...
   42:  call *label14 *invalid :findUnits*retval                     ...
        label *label19                                               ...
   43:  set .flares :findUnits:count                                 ...
   44:  set :findUnits:type @poly                                    CoreBuilder.mnd: findUnits(@poly, out polys);
   45:  setaddr :findUnits*retaddr *label20                          ...
   46:  call *label14 *invalid :findUnits*retval                     ...
        label *label20                                               ...
   47:  set .polys :findUnits:count                                  ...
   48:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   49:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   50:  set :buildBlock:block @graphite-press                        ...
   51:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   52:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   53:  set :buildBlock:copper 75                                    ...
   54:  set :buildBlock:lead 30                                      ...
   55:  set :buildBlock:graphite 0                                   ...
   56:  set :buildBlock:silicon 0                                    ...
   57:  set :buildBlock:titanium 0                                   ...
   58:  set :buildBlock:metaglass 0                                  ...
   59:  set :buildBlock:rotation 0                                   ...
   60:  set :buildBlock:config null                                  ...
   61:  setaddr :buildBlock*retaddr *label26                         ...
   62:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label26                                               ...
   63:  set *tmp45 :buildBlock*retval                                ...
   64:  set .press *tmp45                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   65:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   66:  set :buildBlock:block @battery                               ...
   67:  set :buildBlock:x .coreX                                     ...
   68:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   69:  set :buildBlock:copper 5                                     ...
   70:  set :buildBlock:lead 20                                      ...
   71:  setaddr :buildBlock*retaddr *label32                         ...
   72:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label32                                               ...
   73:  set *tmp49 :buildBlock*retval                                ...
   74:  set .battery *tmp49                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   75:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   76:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   77:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   78:  setaddr :buildBlock*retaddr *label38                         ...
   79:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label38                                               ...
   80:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   81:  set :buildBlock:block @combustion-generator                  ...
   82:  set :buildBlock:x .coreX                                     ...
   83:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   84:  set :buildBlock:copper 25                                    ...
   85:  set :buildBlock:lead 15                                      ...
   86:  setaddr :buildBlock*retaddr *label44                         ...
   87:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label44                                               ...
   88:  set *tmp57 :buildBlock*retval                                ...
   89:  set .generator *tmp57                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   90:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   91:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   92:  set :buildBlock:block @silicon-smelter                       ...
   93:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
   94:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   95:  set :buildBlock:copper 30                                    ...
   96:  set :buildBlock:lead 25                                      ...
   97:  setaddr :buildBlock*retaddr *label50                         ...
   98:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label50                                               ...
   99:  set *tmp61 :buildBlock*retval                                ...
  100:  set .smelter *tmp61                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  101:  set :buildTitaniumDrillCfg:distance 32                       CoreBuilder.mnd: var distance = 32;
  102:  set :buildTitaniumDrillCfg:angle 0                           CoreBuilder.mnd: var angle = 0;
  103:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
  104:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: var minimum = 3;
        label *label53                                               CoreBuilder.mnd: while true do
  105:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  106:  set :meetTarget:copper 18                                    ...
  107:  set :meetTarget:lead 0                                       ...
  108:  set :meetTarget:graphite 10                                  ...
  109:  set :meetTarget:silicon 0                                    ...
  110:  set :meetTarget:titanium 0                                   ...
  111:  set :meetTarget:metaglass 0                                  ...
  112:  set :meetTarget:leadFactory 0                                ...
  113:  set :meetTarget:siliconFactory 0                             ...
  114:  setaddr :meetTarget*retaddr *label56                         ...
  115:  call *label11 *invalid :meetTarget*retval                    ...
        label *label56                                               ...
  116:  set :locateOreAway:distance :buildTitaniumDrillCfg:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  117:  set :locateOreAway:angle :buildTitaniumDrillCfg:angle        ...
        label *label58                                               CoreBuilder.mnd: while true do
  118:  set :locateOre:ore @titanium                                 CoreBuilder.mnd: locateOre(ore, out x, out y);
  119:  setaddr :locateOre*retaddr *label61                          ...
  120:  call *label5 *invalid :locateOre*retval                      ...
        label *label61                                               ...
  121:  set :locateOreAway:x :locateOre:x                            ...
  122:  set :locateOreAway:y :locateOre:y                            ...
  123:  op sub *tmp68 :locateOre:x .coreX                            CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then break; end;
  124:  op abs *tmp69 *tmp68 0                                       ...
  125:  op greaterThanEq *tmp70 *tmp69 10                            ...
  126:  op sub *tmp71 :locateOre:y .coreY                            ...
  127:  op abs *tmp72 *tmp71 0                                       ...
  128:  op greaterThanEq *tmp73 *tmp72 10                            ...
  129:  op or *tmp74 *tmp70 *tmp73                                   ...
  130:  jump *label60 notEqual *tmp74 false                          ...
  131:  op sin *tmp77 :locateOreAway:angle 0                         CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  132:  op mul *tmp78 *tmp77 :locateOreAway:distance                 ...
  133:  op add *tmp79 .coreX *tmp78                                  ...
  134:  op cos *tmp80 :locateOreAway:angle 0                         ...
  135:  op mul *tmp81 *tmp80 :locateOreAway:distance                 ...
  136:  op add *tmp82 .coreY *tmp81                                  ...
  137:  set :moveTo.1:x *tmp79                                       ...
  138:  set :moveTo.1:y *tmp82                                       ...
  139:  setaddr :moveTo.1*retaddr *label65                           ...
  140:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label65                                               ...
  141:  op add :locateOreAway:distance :locateOreAway:distance 4     CoreBuilder.mnd: distance += 4;
  142:  op add :locateOreAway:angle :locateOreAway:angle 45          CoreBuilder.mnd: angle += 45;
  143:  jump *label58 always 0 0                                     CoreBuilder.mnd: while true do
        label *label60                                               ...
  144:  set :buildTitaniumDrillCfg:distance :locateOreAway:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  145:  set :buildTitaniumDrillCfg:angle :locateOreAway:angle        ...
  146:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  147:  set :moveTo.1:y :locateOreAway:y                             ...
  148:  setaddr :moveTo.1*retaddr *label66                           ...
  149:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label66                                               ...
  150:  set :buildTitaniumDrillCfg:ax :locateOreAway:x               CoreBuilder.mnd: var ax = x, ay = y;
  151:  set :buildTitaniumDrillCfg:ay :locateOreAway:y               ...
  152:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, dx = 0, dy = 0;
  153:  set :buildTitaniumDrillCfg:dx 0                              ...
  154:  set :buildTitaniumDrillCfg:dy 0                              ...
  155:  set :buildTitaniumDrillCfg:searches 0                        CoreBuilder.mnd: SearchLoop:
        label *label378                                              ...
  156:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax : CoreBuilder.mnd: ax += dx;
  157:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay : CoreBuilder.mnd: ay += dy;
  158:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: best = 0;
  159:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  160:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  161:  jump *label418 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  162:  set :checkOre:count 1                                        ...
        label *label418                                              ...
  163:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  164:  set :checkOre.1:count :checkOre:count                        ...
  165:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  166:  jump *label421 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  167:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label421                                              ...
  168:  op add *tmp97 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  169:  set :checkOre.2:count :checkOre.1:count                      ...
  170:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  171:  jump *label424 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  172:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label424                                              ...
  173:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  174:  ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  175:  jump *label427 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  176:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label427                                              ...
  177:  jump *label432 lessThanEq :checkOre.3:count 0                CoreBuilder.mnd: if count > best then
  178:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  179:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  180:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  181:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label432                                              CoreBuilder.mnd: if count > best then
  182:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  183:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  184:  jump *label438 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  185:  set :checkOre:count 1                                        ...
        label *label438                                              ...
  186:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  187:  set :checkOre.1:count :checkOre:count                        ...
  188:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  189:  jump *label441 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  190:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label441                                              ...
  191:  op add *tmp97 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  192:  set :checkOre.2:count :checkOre.1:count                      ...
  193:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  194:  jump *label444 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  195:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label444                                              ...
  196:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  197:  ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  198:  jump *label447 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  199:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label447                                              ...
  200:  jump *label452 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  201:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  202:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  203:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  204:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label452                                              CoreBuilder.mnd: if count > best then
  205:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  206:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  207:  jump *label458 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  208:  set :checkOre:count 1                                        ...
        label *label458                                              ...
  209:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  210:  set :checkOre.1:count :checkOre:count                        ...
  211:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  212:  jump *label461 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  213:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label461                                              ...
  214:  op add *tmp97 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  215:  set :checkOre.2:count :checkOre.1:count                      ...
  216:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  217:  jump *label464 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  218:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label464                                              ...
  219:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  220:  ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  221:  jump *label467 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  222:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label467                                              ...
  223:  jump *label472 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  224:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  225:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  226:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  227:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label472                                              CoreBuilder.mnd: if count > best then
  228:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  229:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  230:  jump *label478 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  231:  set :checkOre:count 1                                        ...
        label *label478                                              ...
  232:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  233:  set :checkOre.1:count :checkOre:count                        ...
  234:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  235:  jump *label481 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  236:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label481                                              ...
  237:  op add *tmp97 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  238:  set :checkOre.2:count :checkOre.1:count                      ...
  239:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp97 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  240:  jump *label484 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  241:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label484                                              ...
  242:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  243:  ucontrol getBlock :checkOre.1:x *tmp97 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  244:  jump *label487 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  245:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label487                                              ...
  246:  jump *label492 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  247:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  248:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  249:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  250:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label492                                              CoreBuilder.mnd: if count > best then
  251:  op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCf CoreBuilder.mnd: SearchLoop:
  252:  jump *label378 lessThan :buildTitaniumDrillCfg:searches 5    ...
        label *label69                                               ...
  253:  jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildT CoreBuilder.mnd: if best > minimum then
  254:  op div *tmp118 :buildTitaniumDrillCfg:dx 2                   CoreBuilder.mnd: ax = ax + dx / 2;
  255:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax * ...
  256:  op div *tmp120 :buildTitaniumDrillCfg:dy 2                   CoreBuilder.mnd: ay = ay + dy / 2;
  257:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay * ...
  258:  op sub *tmp122 :locateOreAway:x .coreX                       CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
  259:  op abs *tmp123 *tmp122 0                                     ...
  260:  op greaterThanEq *tmp124 *tmp123 10                          ...
  261:  op sub *tmp125 :locateOreAway:y .coreY                       ...
  262:  op abs *tmp126 *tmp125 0                                     ...
  263:  op greaterThanEq *tmp127 *tmp126 10                          ...
  264:  op or *tmp128 *tmp124 *tmp127                                ...
  265:  jump *label95 equal *tmp128 false                            ...
  266:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, ax, ay, null, 0, true);
  267:  set :buildBlockAt:x :buildTitaniumDrillCfg:ax                ...
  268:  set :buildBlockAt:y :buildTitaniumDrillCfg:ay                ...
  269:  set :buildBlockAt:rotation null                              ...
  270:  set :buildBlockAt:config 0                                   ...
  271:  set :buildBlockAt:skipError true                             ...
  272:  setaddr :buildBlockAt*retaddr *label97                       ...
  273:  call *label12 *invalid :buildBlockAt*retval                  ...
        label *label97                                               ...
  274:  jump *label98 equal :buildBlockAt*retval null                CoreBuilder.mnd: if result != null then return result; end;
  275:  set *tmp66 :buildBlockAt*retval                              ...
  276:  jump *label52 always 0 0                                     ...
        label *label98                                               ...
  277:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  278:  jump *label96 always 0 0                                     CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label95                                               ...
  279:  set :buildTitaniumDrillCfg:attempts 1000                     CoreBuilder.mnd: attempts = 1000;
  280:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: minimum = 3;
        label *label96                                               CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label93                                               CoreBuilder.mnd: if best > minimum then
  281:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  282:  jump *label53 lessThanEq :buildTitaniumDrillCfg:attempts 5   ...
  283:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  284:  op sin *tmp135 :locateOreAway:angle 0                        CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  285:  op mul *tmp136 *tmp135 :locateOreAway:distance               ...
  286:  op add *tmp137 .coreX *tmp136                                ...
  287:  op cos *tmp138 :locateOreAway:angle 0                        ...
  288:  op mul *tmp139 *tmp138 :locateOreAway:distance               ...
  289:  op add *tmp140 .coreY *tmp139                                ...
  290:  set :moveTo.1:x *tmp137                                      ...
  291:  set :moveTo.1:y *tmp140                                      ...
  292:  setaddr :moveTo.1*retaddr *label103                          ...
  293:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label103                                              ...
  294:  op add :buildTitaniumDrillCfg:distance :locateOreAway:distan CoreBuilder.mnd: distance += 4;
  295:  op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45  CoreBuilder.mnd: angle += 45;
  296:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  297:  op sub *tmp141 :buildTitaniumDrillCfg:minimum 1              CoreBuilder.mnd: minimum = max(minimum - 1, 1);
  298:  op max :buildTitaniumDrillCfg:minimum *tmp141 1              ...
  299:  jump *label53 always 0 0                                     CoreBuilder.mnd: while true do
        label *label52                                               CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEU_DRILL);
  300:  set .titanium_drill *tmp66                                   CoreBuilder.mnd: titanium_drill = buildTitaniumDrill();
  301:  write .core processor3 ".core"                               CoreBuilder.mnd: flareController.core = core;
  302:  write *tmp66 processor3 ".drill"                             CoreBuilder.mnd: flareController.drill = titanium_drill;
  303:  op add :buildBlock:y .coreY 2                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  304:  set :buildBlock:block @unloader                              ...
  305:  set :buildBlock:x .coreX                                     ...
  306:  set :buildBlock:copper 0                                     ...
  307:  set :buildBlock:lead 0                                       ...
  308:  set :buildBlock:silicon 30                                   ...
  309:  set :buildBlock:titanium 25                                  ...
  310:  setaddr :buildBlock*retaddr *label109                        ...
  311:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label109                                              ...
  312:  set .unloader1 :buildBlock*retval                            ...
  313:  op add :buildBlock:x .coreX 1                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  314:  set :buildBlock:block @micro-processor                       ...
  315:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  316:  set :buildBlock:copper 90                                    ...
  317:  set :buildBlock:lead 50                                      ...
  318:  set :buildBlock:silicon 50                                   ...
  319:  set :buildBlock:titanium 0                                   ...
  320:  setaddr :buildBlock*retaddr *label115                        ...
  321:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  322:  call *label13 *invalid :buildBlock*retval                    ...
        label *label115                                              ...
  323:  set *tmp147 :buildBlock*retval                               ...
  324:  set .controller *tmp147                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  325:  write processor1 *tmp147 ".display"                          CoreBuilder.mnd: controller.display = display;
  326:  write .core *tmp147 ".core"                                  CoreBuilder.mnd: controller.core = core;
  327:  write *tmp49 *tmp147 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  328:  write *tmp57 *tmp147 ".generator"                            CoreBuilder.mnd: controller.generator = generator;
  329:  write *tmp61 *tmp147 ".smelter"                              CoreBuilder.mnd: controller.smelter = smelter;
  330:  write *tmp45 *tmp147 ".press"                                CoreBuilder.mnd: controller.press = press;
  331:  write .monos *tmp147 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  332:  write .flares *tmp147 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  333:  write .polys *tmp147 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  334:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  335:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  336:  set :buildBlock:block @power-node                            ...
  337:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  338:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  339:  set :buildBlock:copper 2                                     ...
  340:  set :buildBlock:lead 6                                       ...
  341:  set :buildBlock:silicon 0                                    ...
  342:  set :buildBlock:config null                                  ...
  343:  setaddr :buildBlock*retaddr *label121                        ...
  344:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label121                                              ...
  345:  op add :buildBlockFromCfg.8:x .coreX -4                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  346:  set :buildBlock:block @air-factory                           ...
  347:  set :buildBlock:x :buildBlockFromCfg.8:x                     ...
  348:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  349:  set :buildBlock:copper 60                                    ...
  350:  set :buildBlock:lead 70                                      ...
  351:  set :buildBlock:rotation 3                                   ...
  352:  set :buildBlock:config @mono                                 ...
  353:  setaddr :buildBlock*retaddr *label127                        ...
  354:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  355:  set *tmp155 :buildBlock*retval                               ...
  356:  set .factory *tmp155                                         CoreBuilder.mnd: factory = buildBlockFromCfg(ref AIR_FACTORY);
  357:  write *tmp155 *tmp147 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  358:  write *tmp155 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  359:  op add :buildBlockFromCfg.9:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  360:  set :buildBlock:block @unloader                              ...
  361:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  362:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  363:  set :buildBlock:copper 0                                     ...
  364:  set :buildBlock:lead 0                                       ...
  365:  set :buildBlock:silicon 30                                   ...
  366:  set :buildBlock:titanium 25                                  ...
  367:  set :buildBlock:rotation 0                                   ...
  368:  set :buildBlock:config null                                  ...
  369:  setaddr :buildBlock*retaddr *label133                        ...
  370:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  371:  set *tmp159 :buildBlock*retval                               ...
  372:  write *tmp159 *tmp147 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  373:  op add :buildBlock:x .coreX -3                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  374:  set :buildBlock:block @overflow-gate                         ...
  375:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  376:  set :buildBlock:copper 4                                     ...
  377:  set :buildBlock:lead 2                                       ...
  378:  set :buildBlock:silicon 0                                    ...
  379:  set :buildBlock:titanium 0                                   ...
  380:  setaddr :buildBlock*retaddr *label139                        ...
  381:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  382:  write @flare *tmp147 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = @flare;
  383:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  384:  set :buildBlock:y .coreY                                     ...
  385:  set :buildBlock:block @unloader                              ...
  386:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  387:  set :buildBlock:copper 0                                     ...
  388:  set :buildBlock:lead 0                                       ...
  389:  set :buildBlock:silicon 30                                   ...
  390:  set :buildBlock:titanium 25                                  ...
  391:  setaddr :buildBlock*retaddr *label145                        ...
  392:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label145                                              ...
  393:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  394:  op add :buildBlock:y .coreY 0.5                              ...
  395:  set :buildBlock:block @kiln                                  ...
  396:  set :buildBlock:copper 60                                    ...
  397:  set :buildBlock:lead 30                                      ...
  398:  set :buildBlock:graphite 30                                  ...
  399:  set :buildBlock:silicon 0                                    ...
  400:  set :buildBlock:titanium 0                                   ...
  401:  setaddr :buildBlock*retaddr *label151                        ...
  402:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label151                                              ...
  403:  write null *tmp147 ".kiln"                                   CoreBuilder.mnd: controller.kiln = kiln;
  404:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  405:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  406:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  407:  set :buildBlock:copper 3                                     ...
  408:  set :buildBlock:lead 0                                       ...
  409:  set :buildBlock:graphite 0                                   ...
  410:  setaddr :buildBlock*retaddr *label157                        ...
  411:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label157                                              ...
  412:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  413:  op add :buildBlock:y .coreY 4.5                              ...
  414:  set :buildBlock:block @water-extractor                       ...
  415:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  416:  set :buildBlock:copper 30                                    ...
  417:  set :buildBlock:lead 30                                      ...
  418:  set :buildBlock:graphite 30                                  ...
  419:  set :buildBlock:metaglass 30                                 ...
  420:  setaddr :buildBlock*retaddr *label163                        ...
  421:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label163                                              ...
  422:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  423:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  424:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  425:  set :buildBlock:copper 35                                    ...
  426:  set :buildBlock:lead 40                                      ...
  427:  set :buildBlock:graphite 25                                  ...
  428:  set :buildBlock:silicon 30                                   ...
  429:  set :buildBlock:metaglass 0                                  ...
  430:  setaddr :buildBlock*retaddr *label169                        ...
  431:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label169                                              ...
  432:  set *tmp183 :buildBlock*retval                               ...
  433:  write *tmp183 *tmp147 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  434:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  435:  set :buildBlock:x :buildBlockFromCfg.8:x                     ...
  436:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  437:  set :buildBlock:copper 2                                     ...
  438:  set :buildBlock:lead 2                                       ...
  439:  set :buildBlock:graphite 0                                   ...
  440:  set :buildBlock:silicon 0                                    ...
  441:  set :buildBlock:config @coal                                 ...
  442:  setaddr :buildBlock*retaddr *label175                        ...
  443:  call *label13 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label175                                              ...
        label *label176                                              CoreBuilder.mnd: while true do
  444:  setaddr :supplyBase*retaddr *label179                        CoreBuilder.mnd: supplyBase();
  445:  call *label9 *invalid :supplyBase*retval                     ...
        label *label179                                              ...
  446:  jump *label176 always 0 0                                    CoreBuilder.mnd: while true do
        label *label0                                                Actions.mnd: void moveTo(x, y, radius)
  447:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  448:  op sub *tmp193 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  449:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191 0 ...
  450:  jump *label186 notEqual *tmp191 false                        ...
        label *label413                                              ...
  451:  ucontrol approach :moveTo:x :moveTo:y *tmp193 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  452:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp191 0 Actions.mnd: while !within(x, y, radius) do
  453:  jump *label413 equal *tmp191 false                           ...
        label *label186                                              ...
  454:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label1                                                Actions.mnd: void moveTo(x, y)
  455:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, REGULAR_RADIUS);
  456:  set :moveTo:y :moveTo.1:y                                    ...
  457:  set :moveTo:radius 5                                         ...
  458:  setaddr :moveTo*retaddr *label188                            ...
  459:  call *label0 *invalid :moveTo*retval                         ...
        label *label188                                              ...
  460:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label2                                                Actions.mnd: void moveToEmpty(x, y)
  461:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label191                                              Actions.mnd: do
  462:  sensor *tmp196 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  463:  jump *label194 equal *tmp196 null                            ...
  464:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label194                                              ...
  465:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5 0 0      Actions.mnd: approach(x, y, REGULAR_RADIUS - 0.5);
  466:  ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp199 0    Actions.mnd: while !within(x, y, REGULAR_RADIUS);
  467:  jump *label191 equal *tmp199 false                           Actions.mnd: do
  468:  sensor *tmp201 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  469:  jump *label198 equal *tmp201 null                            ...
        label *label412                                              ...
  470:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  471:  sensor *tmp201 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  472:  jump *label412 notEqual *tmp201 null                         ...
        label *label198                                              ...
  473:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label3                                                Actions.mnd: void moveToBlock(block, radius)
  474:  sensor *tmp203 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  475:  sensor *tmp204 :moveToBlock:block @y                         ...
  476:  set :moveTo:x *tmp203                                        ...
  477:  set :moveTo:y *tmp204                                        ...
  478:  set :moveTo:radius :moveToBlock:radius                       ...
  479:  setaddr :moveTo*retaddr *label200                            ...
  480:  call *label0 *invalid :moveTo*retval                         ...
        label *label200                                              ...
  481:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label4                                                Actions.mnd: void depositItems(block, item, fromMining)
  482:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  483:  sensor *tmp205 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  484:  jump *label203 notEqual *tmp205 :depositItems:item           ...
  485:  set *tmp210 5                                                Actions.mnd: moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
  486:  op equal *tmp208 :depositItems:block .core                   ...
  487:  op land *tmp209 :depositItems:fromMining *tmp208             ...
  488:  jump *label206 equal *tmp209 false                           ...
  489:  set *tmp210 7                                                ...
        label *label206                                              ...
  490:  set :moveToBlock:block :depositItems:block                   ...
  491:  set :moveToBlock:radius *tmp210                              ...
  492:  setaddr :moveToBlock*retaddr *label207                       ...
  493:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label207                                              ...
  494:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label208                                              Actions.mnd: do
  495:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  496:  sensor *tmp212 :depositItems:block :depositItems:item        Actions.mnd: if block.sensor(item) >= cap then break; end;
  497:  jump *label204 greaterThanEq *tmp212 :depositItems:cap       ...
  498:  sensor *tmp215 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null;
  499:  jump *label208 notEqual *tmp215 null                         Actions.mnd: do
  500:  jump *label204 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label203                                              ...
  501:  sensor *tmp217 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  502:  jump *label215 equal *tmp217 null                            ...
        label *label414                                              ...
  503:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  504:  sensor *tmp217 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  505:  jump *label414 notEqual *tmp217 null                         ...
        label *label215                                              ...
        label *label204                                              Actions.mnd: if @unit.@firstItem == item then
  506:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  507:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  508:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item, fromMining)
        label *label5                                                Actions.mnd: void locateOre(ore, out x, out y)
  509:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  510:  jump *label218 notEqual *tmp219 false                        ...
  511:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  512:  stop                                                         Actions.mnd: stopProcessor();
        label *label218                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  513:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label6                                                Actions.mnd: void mineOre(ore, amount, block)
  514:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  515:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  516:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  517:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  518:  setaddr :locateOre*retaddr *label223                         ...
  519:  call *label5 *invalid :locateOre*retval                      ...
        label *label223                                              ...
  520:  set :mineOre:x :locateOre:x                                  ...
  521:  set :mineOre:y :locateOre:y                                  ...
  522:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  523:  set :moveToEmpty:y :locateOre:y                              ...
  524:  setaddr :moveToEmpty*retaddr *label224                       ...
  525:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label224                                              ...
  526:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  527:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label226                                              Actions.mnd: do
  528:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  529:  op notEqual *tmp226 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  530:  op notEqual *tmp227 :mineOre:item :mineOre:ore               ...
  531:  op land *tmp228 *tmp226 *tmp227                              ...
  532:  jump *label228 notEqual *tmp228 false                        ...
  533:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  534:  jump *label228 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  535:  sensor *tmp232 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  536:  jump *label226 lessThan *tmp232 :mineOre:amount              Actions.mnd: do
        label *label228                                              ...
  537:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  538:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore, true);
  539:  set :depositItems:item :mineOre:ore                          ...
  540:  set :depositItems:fromMining true                            ...
  541:  setaddr :depositItems*retaddr *label233                      ...
  542:  call *label4 *invalid :depositItems*retval                   ...
        label *label233                                              ...
  543:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label7                                                Actions.mnd: void mineOre(ore)
  544:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  545:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  546:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  547:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  548:  set :mineOre:amount 30                                       ...
  549:  set :mineOre:block .core                                     ...
  550:  setaddr :mineOre*retaddr *label236                           ...
  551:  call *label6 *invalid :mineOre*retval                        ...
        label *label236                                              ...
  552:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label8                                                Actions.mnd: void fetchBlock(block, item)
  553:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  554:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  555:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  556:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  557:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  558:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  559:  sensor *tmp236 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  560:  sensor *tmp237 :fetchBlock:block @y                          ...
  561:  set :moveToEmpty:x *tmp236                                   ...
  562:  set :moveToEmpty:y *tmp237                                   ...
  563:  setaddr :moveToEmpty*retaddr *label240                       ...
  564:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label240                                              ...
        label *label241                                              Actions.mnd: do
  565:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  566:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  567:  op notEqual *tmp239 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  568:  op notEqual *tmp240 :fetchBlock:unitItem :fetchBlock:item    ...
  569:  op land *tmp241 *tmp239 *tmp240                              ...
  570:  jump *label244 equal *tmp241 false                           ...
  571:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label244                                              Actions.mnd: if unitItem != null and unitItem != item then
  572:  sensor *tmp243 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  573:  op lessThan *tmp244 *tmp243 30                               ...
  574:  sensor *tmp245 :fetchBlock:block :fetchBlock:item            ...
  575:  op land *tmp246 *tmp244 *tmp245                              ...
  576:  jump *label241 notEqual *tmp246 false                        Actions.mnd: do
  577:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item, false);
  578:  set :depositItems:item :fetchBlock:item                      ...
  579:  set :depositItems:fromMining false                           ...
  580:  setaddr :depositItems*retaddr *label246                      ...
  581:  call *label4 *invalid :depositItems*retval                   ...
        label *label246                                              ...
  582:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label9                                                CoreBuilder.mnd: void supplyBase()
  583:  set :supplyBase:supplied false                               CoreBuilder.mnd: var supplied = false;
  584:  jump *label248 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  585:  sensor *tmp249 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  586:  jump *label250 greaterThanEq *tmp249 .targetGraphite         ...
  587:  sensor *tmp252 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  588:  jump *label252 greaterThanEq *tmp252 5                       ...
  589:  write "Goal 1: Meeting the graphite target" .display ".statu CoreBuilder.mnd: display.status1 = text;
  590:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  591:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  592:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  593:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  594:  sensor *tmp256 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  595:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  596:  jump *label257 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  597:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  598:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  599:  set :mineOre:block .press                                    ...
  600:  setaddr :mineOre*retaddr *label259                           ...
  601:  call *label6 *invalid :mineOre*retval                        ...
        label *label259                                              ...
        label *label257                                              CoreBuilder.mnd: if missing > 0 then
  602:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label252                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label250                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  603:  sensor *tmp260 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  604:  jump *label260 greaterThanEq *tmp260 .targetSilicon          ...
  605:  sensor *tmp263 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  606:  jump *label262 greaterThanEq *tmp263 5                       ...
  607:  write "Goal 2: Meeting the silicon target (coal)" .display " CoreBuilder.mnd: display.status1 = text;
  608:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  609:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  610:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  611:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  612:  sensor *tmp267 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  613:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  614:  jump *label267 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  615:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  616:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  617:  set :mineOre:block .smelter                                  ...
  618:  setaddr :mineOre*retaddr *label269                           ...
  619:  call *label6 *invalid :mineOre*retval                        ...
        label *label269                                              ...
        label *label267                                              CoreBuilder.mnd: if missing > 0 then
  620:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
  621:  jump *label263 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label262                                              ...
  622:  sensor *tmp271 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  623:  jump *label270 greaterThanEq *tmp271 5                       ...
  624:  write "Goal 3: Meeting the silicon target (sand)" .display " CoreBuilder.mnd: display.status1 = text;
  625:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  626:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  627:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  628:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  629:  sensor *tmp275 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  630:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  631:  jump *label275 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  632:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  633:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  634:  set :mineOre:block .smelter                                  ...
  635:  setaddr :mineOre*retaddr *label277                           ...
  636:  call *label6 *invalid :mineOre*retval                        ...
        label *label277                                              ...
        label *label275                                              CoreBuilder.mnd: if missing > 0 then
  637:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label270                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label263                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label260                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  638:  sensor *tmp279 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  639:  jump *label278 greaterThanEq *tmp279 .powerTarget            ...
  640:  sensor *tmp282 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  641:  jump *label280 greaterThanEq *tmp282 2                       ...
  642:  write "Goal 4: Supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  643:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  644:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  645:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  646:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  647:  sensor *tmp286 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  648:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  649:  jump *label285 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  650:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  651:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  652:  set :mineOre:block .generator                                ...
  653:  setaddr :mineOre*retaddr *label287                           ...
  654:  call *label6 *invalid :mineOre*retval                        ...
        label *label287                                              ...
        label *label285                                              CoreBuilder.mnd: if missing > 0 then
  655:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label280                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label278                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label248                                              CoreBuilder.mnd: if unloader1 == null then
  656:  sensor *tmp290 .titanium_drill @titanium                     CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  657:  jump *label288 greaterThanEq *tmp290 .titaniumTrigger        ...
  658:  jump *label289 notEqual :supplyBase:supplied false           CoreBuilder.mnd: if !supplied then
  659:  sensor *tmp295 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  660:  op mul *tmp296 .unloader1 .powerTarget                       ...
  661:  jump *label292 greaterThanEq *tmp295 *tmp296                 ...
  662:  write "Goal 5: Supplying generator (5)" .display ".status1"  CoreBuilder.mnd: display.status1 = text;
  663:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  664:  setaddr :mineOre.1*retaddr *label295                         ...
  665:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label295                                              ...
  666:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label292                                              ...
  667:  sensor *tmp299 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  668:  jump *label296 greaterThanEq *tmp299 .targetSilicon          ...
  669:  write "Goal 6: Meeting the silicon target" .display ".status CoreBuilder.mnd: display.status1 = text;
  670:  sensor :supplyBase:coal .core @coal                          CoreBuilder.mnd: var coal = core.@coal;
  671:  sensor :supplyBase:sand .core @sand                          CoreBuilder.mnd: var sand = core.@sand;
  672:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  673:  jump *label300 greaterThanEq :supplyBase:coal :supplyBase:sa ...
  674:  set :mineOre.1:ore @coal                                     ...
        label *label300                                              ...
  675:  setaddr :mineOre.1*retaddr *label301                         CoreBuilder.mnd: mineOre(ore);
  676:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label301                                              ...
  677:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label296                                              ...
  678:  sensor *tmp306 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  679:  jump *label302 greaterThanEq *tmp306 .targetCopper           ...
  680:  write "Goal 7: Meeting the copper target" .display ".status1 CoreBuilder.mnd: display.status1 = text;
  681:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  682:  setaddr :mineOre.1*retaddr *label305                         ...
  683:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label305                                              ...
  684:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label302                                              ...
  685:  sensor *tmp309 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  686:  jump *label306 greaterThanEq *tmp309 .targetLead             ...
  687:  write "Goal 8: Meeting the lead target" .display ".status1"  CoreBuilder.mnd: display.status1 = text;
  688:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  689:  setaddr :mineOre.1*retaddr *label309                         ...
  690:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label309                                              ...
  691:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label306                                              ...
  692:  sensor *tmp312 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  693:  jump *label310 greaterThanEq *tmp312 .targetMetaglass        ...
  694:  write "Goal 9: Meeting the metaglass target" .display ".stat CoreBuilder.mnd: display.status1 = text;
  695:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  696:  setaddr :mineOre.1*retaddr *label313                         ...
  697:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label313                                              ...
  698:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label310                                              ...
  699:  write "Goal 10: Supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  700:  sensor :supplyBase:coal.1 .core @coal                        CoreBuilder.mnd: var coal = core.@coal;
  701:  sensor :supplyBase:sand.1 .core @sand                        CoreBuilder.mnd: var sand = core.@sand;
  702:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  703:  jump *label316 greaterThan :supplyBase:coal.1 :supplyBase:sa ...
  704:  set :mineOre.1:ore @coal                                     ...
        label *label316                                              ...
  705:  setaddr :mineOre.1*retaddr *label317                         CoreBuilder.mnd: mineOre(ore);
  706:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label317                                              ...
  707:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
        label *label288                                              ...
  708:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  709:  set :fetchBlock:block .titanium_drill                        CoreBuilder.mnd: fetchBlock(titanium_drill, @titanium);
  710:  set :fetchBlock:item @titanium                               ...
  711:  setaddr :fetchBlock*retaddr *label319                        ...
  712:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label319                                              ...
        label *label289                                              CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  713:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label10                                               CoreBuilder.mnd: def targetMet()
  714:  sensor *tmp319 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  715:  jump *label321 lessThan *tmp319 .targetCopper                ...
  716:  sensor *tmp322 .leadSiliconBlock @lead                       CoreBuilder.mnd: if leadSiliconBlock.@lead >= targetLead then
  717:  jump *label323 lessThan *tmp322 .targetLead                  ...
  718:  sensor *tmp325 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  719:  jump *label325 lessThan *tmp325 .targetGraphite              ...
  720:  sensor *tmp328 .leadSiliconBlock @silicon                    CoreBuilder.mnd: if leadSiliconBlock.@silicon >= targetSilicon then
  721:  jump *label327 lessThan *tmp328 .targetSilicon               ...
  722:  sensor *tmp331 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  723:  jump *label329 lessThan *tmp331 .targetTitanium              ...
  724:  sensor *tmp334 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  725:  jump *label331 lessThan *tmp334 .targetMetaglass             ...
  726:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  727:  return :targetMet*retaddr                                    ...
        label *label331                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label329                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label327                                              CoreBuilder.mnd: if leadSiliconBlock.@silicon >= targetSilicon then
        label *label325                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label323                                              CoreBuilder.mnd: if leadSiliconBlock.@lead >= targetLead then
        label *label321                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  728:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  729:  return :targetMet*retaddr                                    ...
        label *label11                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory)
  730:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory do count += sign(t); end;
  731:  op sign *tmp338 :meetTarget:lead 0                           ...
  732:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  733:  op sign *tmp338 :meetTarget:graphite 0                       ...
  734:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  735:  op sign *tmp338 :meetTarget:silicon 0                        ...
  736:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  737:  op sign *tmp338 :meetTarget:titanium 0                       ...
  738:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  739:  op sign *tmp338 :meetTarget:metaglass 0                      ...
  740:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  741:  op sign *tmp338 :meetTarget:leadFactory 0                    ...
  742:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  743:  op sign *tmp338 :meetTarget:siliconFactory 0                 ...
  744:  op add :meetTarget:count :meetTarget:count *tmp338           ...
  745:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  746:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  747:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  748:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  749:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  750:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  751:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  752:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  753:  write :meetTarget:leadFactory .display ".targetLeadFactory"  CoreBuilder.mnd: display.targetLeadFactory = leadFactory;
  754:  write :meetTarget:siliconFactory .display ".targetSiliconFac CoreBuilder.mnd: display.targetSiliconFactory = siliconFactory;
  755:  write .monos .display ".monos"                               CoreBuilder.mnd: display.monos = monos;
  756:  write .polys .display ".polys"                               CoreBuilder.mnd: display.polys = polys;
  757:  write .flares .display ".flares"                             CoreBuilder.mnd: display.flares = flares;
  758:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  759:  op max .targetLead :meetTarget:lead :meetTarget:leadFactory  CoreBuilder.mnd: targetLead = max(lead, leadFactory);
  760:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  761:  op max .targetSilicon :meetTarget:silicon :meetTarget:silico CoreBuilder.mnd: targetSilicon = max(silicon, siliconFactory);
  762:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  763:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  764:  op add *tmp341 :meetTarget:graphite 20                       CoreBuilder.mnd: controller.pressTarget = targetGraphite + 20;
  765:  write *tmp341 .controller ".pressTarget"                     ...
  766:  op add *tmp342 .targetSilicon 20                             CoreBuilder.mnd: controller.smelterTarget = targetSilicon + 20;
  767:  write *tmp342 .controller ".smelterTarget"                   ...
  768:  op add *tmp343 :meetTarget:metaglass 20                      CoreBuilder.mnd: controller.kilnTarget = targetMetaglass + 20;
  769:  write *tmp343 .controller ".kilnTarget"                      ...
  770:  set .titaniumTrigger 100                                     CoreBuilder.mnd: titaniumTrigger = core.@titanium < targetTitanium ? 7 : 100;
  771:  sensor *tmp344 .core @titanium                               ...
  772:  jump *label346 greaterThanEq *tmp344 :meetTarget:titanium    ...
  773:  set .titaniumTrigger 7                                       ...
        label *label346                                              ...
  774:  set .leadSiliconBlock .core                                  CoreBuilder.mnd: leadSiliconBlock = siliconFactory > 0 ? factory : core;
  775:  jump *label348 lessThanEq :meetTarget:siliconFactory 0       ...
  776:  set .leadSiliconBlock .factory                               ...
        label *label348                                              ...
  777:  setaddr :targetMet*retaddr *label352                         CoreBuilder.mnd: while !targetMet() do
  778:  call *label10 *invalid :targetMet*retval                     ...
        label *label352                                              ...
  779:  jump *label351 notEqual :targetMet*retval false              ...
        label *label415                                              ...
  780:  setaddr :supplyBase*retaddr *label353                        CoreBuilder.mnd: supplyBase();
  781:  call *label9 *invalid :supplyBase*retval                     ...
        label *label353                                              ...
  782:  setaddr :targetMet*retaddr *label416                         CoreBuilder.mnd: while !targetMet() do
  783:  call *label10 *invalid :targetMet*retval                     ...
        label *label416                                              ...
  784:  jump *label415 equal :targetMet*retval false                 ...
        label *label351                                              ...
  785:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, leadFactory, siliconFactory)
        label *label12                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  786:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  787:  set :moveTo.1:y :buildBlockAt:y                              ...
  788:  setaddr :moveTo.1*retaddr *label355                          ...
  789:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label355                                              ...
  790:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  791:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  792:  jump *label357 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  793:  jump *label359 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  794:  set :buildBlockAt*retval :buildBlockAt:building              ...
  795:  return :buildBlockAt*retaddr                                 ...
        label *label359                                              ...
  796:  jump *label361 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  797:  set :buildBlockAt*retval null                                ...
  798:  return :buildBlockAt*retaddr                                 ...
        label *label361                                              ...
  799:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  800:  stop                                                         Actions.mnd: stopProcessor();
        label *label357                                              CoreBuilder.mnd: if building != null then
  801:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  802:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label364                                              CoreBuilder.mnd: do
  803:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  804:  jump *label366 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  805:  jump *label364 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label366                                              ...
  806:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  807:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label13                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  808:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, 0, 0);
  809:  set :meetTarget:copper :buildBlock:copper                    ...
  810:  set :meetTarget:lead :buildBlock:lead                        ...
  811:  set :meetTarget:graphite :buildBlock:graphite                ...
  812:  set :meetTarget:silicon :buildBlock:silicon                  ...
  813:  set :meetTarget:titanium :buildBlock:titanium                ...
  814:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  815:  set :meetTarget:leadFactory 0                                ...
  816:  set :meetTarget:siliconFactory 0                             ...
  817:  setaddr :meetTarget*retaddr *label370                        ...
  818:  call *label11 *invalid :meetTarget*retval                    ...
        label *label370                                              ...
  819:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  820:  set :buildBlockAt:x :buildBlock:x                            ...
  821:  set :buildBlockAt:y :buildBlock:y                            ...
  822:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  823:  set :buildBlockAt:config :buildBlock:config                  ...
  824:  set :buildBlockAt:skipError false                            ...
  825:  setaddr :buildBlockAt*retaddr *label371                      ...
  826:  call *label12 *invalid :buildBlockAt*retval                  ...
        label *label371                                              ...
  827:  set :buildBlock*retval :buildBlockAt*retval                  ...
  828:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label14                                               CoreBuilder.mnd: void findUnits(type, out count)
  829:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  830:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  831:  set :findUnits:firstUnit @unit                               ...
  832:  jump *label373 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label375                                              CoreBuilder.mnd: do
  833:  op add :findUnits:count :findUnits:count 1                   CoreBuilder.mnd: flag(++count);
  834:  ucontrol flag :findUnits:count 0 0 0 0                       ...
  835:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  836:  jump *label375 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label373                                              CoreBuilder.mnd: if firstUnit != null then
  837:  return :findUnits*retaddr                                    CoreBuilder.mnd: void findUnits(type, out count)


Performance: parsed in 445 ms, compiled in 335 ms, optimized in 2,327 ms, run in 11 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (10 steps):
The program didn't generate any output.
Execution exception at instruction 32: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
