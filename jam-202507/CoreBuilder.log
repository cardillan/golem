  1493 instructions before optimizations.
    66 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
   107 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:8:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    57 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     4 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   405 instructions eliminated by Data Flow Optimization (3 passes, 30 iterations).
    19 loops improved by Loop Hoisting.
     6 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (9 iterations).
     1 loops unrolled by Loop Unrolling.
     5 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    16 instructions updated by JumpThreading.
    42 instructions eliminated by Unreachable Code Elimination (2 iterations).
   756 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 165):
    Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   150943.0, efficiency 150942.969
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   139668.0, efficiency 139667.969
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   104355.5, efficiency 104355.469
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    70625.0, efficiency  70625.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500
  * Unroll iteration loop at CoreBuilder.mnd:246:5               size   -11, benefit    10373.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 174):
  * Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   150943.0, efficiency 150942.969 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   139668.0, efficiency 139667.969
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   104355.5, efficiency 104355.469
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    70625.0, efficiency  70625.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500

Pass 1: speed optimization selection (cost limit 173):
  * Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   139668.0, efficiency 139667.969 (+1 instructions)
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   104355.5, efficiency 104355.469
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    70625.0, efficiency  70625.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500

Pass 1: speed optimization selection (cost limit 172):
  * Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   104355.5, efficiency 104355.469 (+1 instructions)
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    70625.0, efficiency  70625.000
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500

Pass 1: speed optimization selection (cost limit 171):
  * Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    70625.0, efficiency  70625.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500

Pass 1: speed optimization selection (cost limit 170):
  * Replicate loop condition at CoreBuilder.mnd:269:5            size    +2, benefit    11275.0, efficiency   5637.500 (+2 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1580 return :supplyBase1*retaddr
  1581 end
  1582 label *label12
-    * set *tmp309 .phase
-    * jump *label323 equal *tmp309 0
+ 1583 jump *label323 equal .phase 0
  1584 jump *label322 always
  1585 label *label323
  1586 setaddr :supplyBase0*retaddr *label324 (h:*label324)
 
  1589 set *tmp308 null
  1590 jump *label321 always
  1591 label *label322
-    * jump *label326 equal *tmp309 1
+ 1592 jump *label326 equal .phase 1
  1593 jump *label325 always
  1594 label *label326
  1595 setaddr :supplyBase1*retaddr *label327 (h:*label327)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-71 instructions):
 
   158 setaddr :buildBlock*retaddr *label44 (h:*label44)
   159 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   160 label *label44
-    * set *tmp82 :buildBlock*retval
   161 jump *label39 always
   162 label *label41
   163 multijump *tmp83 0 0 (m:marker2)
   164 multilabel *label43 (m:marker2)
   165 label *label42
-    * set *tmp82 null
   166 label *label39
   167 set :buildBlockFromCfg.3:block @combustion-generator
   168 set :buildBlockFromCfg.3:offsetX 0
 
   280 set .ERROR :error:error
   281 stop
   282 label *label62
-    * set *tmp98 null
   283 jump *label61 always
   284 label *label60
-    * set *tmp98 null
   285 label *label61
   286 set :buildBlockAt:block @pneumatic-drill
   287 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   421 setaddr :buildBlock*retaddr *label81 (h:*label81)
   422 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   423 label *label81
-    * set *tmp107 :buildBlock*retval
   424 jump *label76 always
   425 label *label78
   426 multijump *tmp108 0 0 (m:marker7)
   427 multilabel *label80 (m:marker7)
   428 label *label79
-    * set *tmp107 null
   429 label *label76
   430 set :buildBlockFromCfg.8:block @unloader
   431 set :buildBlockFromCfg.8:offsetX -2
 
   499 setaddr :buildBlock*retaddr *label93 (h:*label93)
   500 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   501 label *label93
-    * set *tmp115 :buildBlock*retval
   502 jump *label88 always
   503 label *label90
   504 multijump *tmp116 0 0 (m:marker9)
   505 multilabel *label92 (m:marker9)
   506 label *label91
-    * set *tmp115 null
   507 label *label88
   508 set :buildBlockFromCfg.10:block @air-factory
   509 set :buildBlockFromCfg.10:offsetX -4
 
   555 write 0 .controller ".siliconReserve"
   556 write :buildUnits:unit .controller ".unitToProduce"
   557 label *label100
-    * set *tmp123 .phase
   558 op add .phase .phase 1
   559 write 85 .controller ".pressTarget"
   560 write 150 .controller ".smelterTarget"
 
   567 jump *label104 equal *tmp125 false
   568 set :thoriumDrill false
   569 label *label106
-    * set *tmp126 null
   570 jump *label105 always
   571 label *label104
-    * set *tmp126 null
   572 label *label105
   573 setaddr :supplyBase1*retaddr *label107 (h:*label107)
   574 call *label11 *invalid :supplyBase1*retval (m:*label107) (h:*label107)
 
   577 op lessThan *tmp128 *tmp127 300
   578 jump *label108 equal *tmp128 false
   579 jump *label103 always
-    * set *tmp129 null
   580 jump *label109 always
   581 label *label108
-    * set *tmp129 null
   582 label *label109
   583 label *label102
   584 read *tmp34 .controller ".monos"
 
   616 setaddr :buildBlock*retaddr *label115 (h:*label115)
   617 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   618 label *label115
-    * set *tmp131 :buildBlock*retval
   619 jump *label110 always
   620 label *label112
   621 multijump *tmp132 0 0 (m:marker11)
   622 multilabel *label114 (m:marker11)
   623 label *label113
-    * set *tmp131 null
   624 label *label110
   625 set :buildBlockFromCfg.12:block @kiln
   626 set :buildBlockFromCfg.12:offsetX 3.5
 
   694 setaddr :buildBlock*retaddr *label127 (h:*label127)
   695 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   696 label *label127
-    * set *tmp139 :buildBlock*retval
   697 jump *label122 always
   698 label *label124
   699 multijump *tmp140 0 0 (m:marker13)
   700 multilabel *label126 (m:marker13)
   701 label *label125
-    * set *tmp139 null
   702 label *label122
   703 set :buildBlockFromCfg.14:block @water-extractor
   704 set :buildBlockFromCfg.14:offsetX -3.5
 
   731 setaddr :buildBlock*retaddr *label133 (h:*label133)
   732 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   733 label *label133
-    * set *tmp143 :buildBlock*retval
   734 jump *label128 always
   735 label *label130
   736 multijump *tmp144 0 0 (m:marker14)
   737 multilabel *label132 (m:marker14)
   738 label *label131
-    * set *tmp143 null
   739 label *label128
   740 set :buildBlockFromCfg.15:block @steam-generator
   741 set :buildBlockFromCfg.15:offsetX -3.5
 
   809 setaddr :buildBlock*retaddr *label145 (h:*label145)
   810 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   811 label *label145
-    * set *tmp151 :buildBlock*retval
   812 jump *label140 always
   813 label *label142
   814 multijump *tmp152 0 0 (m:marker16)
   815 multilabel *label144 (m:marker16)
   816 label *label143
-    * set *tmp151 null
   817 label *label140
   818 set .graphiteSurplus 100
   819 set .siliconSurplus 1000
 
   849 setaddr :buildBlock*retaddr *label151 (h:*label151)
   850 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   851 label *label151
-    * set *tmp155 :buildBlock*retval
   852 jump *label146 always
   853 label *label148
   854 multijump *tmp156 0 0 (m:marker17)
   855 multilabel *label150 (m:marker17)
   856 label *label149
-    * set *tmp155 null
   857 label *label146
   858 write 0 .display ".totalTargets"
   859 write null .display ".nextBlock"
 
   919 op notEqual *tmp167 *tmp166 null
   920 jump *label174 equal *tmp167 false
   921 ucontrol itemDrop @air 1000
-    * set *tmp168 null
   922 jump *label175 always
   923 label *label174
-    * set *tmp168 null
   924 label *label175
   925 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   926 label *label172
 
   966 op greaterThan *tmp180 *tmp178 *tmp179
   967 jump *label183 notEqual *tmp180 false
   968 label *label185
-    * set *tmp175 null
   969 jump *label181 always
   970 label *label180
   971 label *label186
 
   976 label *label187
   977 jump *label186 always
   978 label *label188
-    * set *tmp175 null
   979 label *label181
   980 set :transportStatus:target 0
   981 set :transportStatus:item null
 
   993 set .ERROR :error.2:error
   994 stop
   995 label *label193
-    * set *tmp186 null
   996 jump *label192 always
   997 label *label191
-    * set *tmp186 null
   998 label *label192
   999 label *label190
  1000 return :locateOre*retaddr
 
  1030 jump *label201 always
  1031 label *label203
  1032 label *label200
-    * set *tmp190 null
  1033 jump *label199 always
  1034 label *label198
-    * set *tmp190 null
  1035 label *label199
  1036 set :status3.3:text "Mining..."
  1037 write :status3.3:text .display ".status3"
 
  1046 op land *tmp197 *tmp195 *tmp196
  1047 jump *label208 equal *tmp197 false
  1048 jump *label207 always
-    * set *tmp198 null
  1049 jump *label209 always
  1050 label *label208
-    * set *tmp198 null
  1051 label *label209
  1052 ucontrol mine :mineOre:x :mineOre:y
  1053 op greaterThan *tmp199 @second :mineOre:stop
  1054 jump *label210 equal *tmp199 false
  1055 jump *label207 always
-    * set *tmp200 null
  1056 jump *label211 always
  1057 label *label210
-    * set *tmp200 null
  1058 label *label211
  1059 label *label206
  1060 sensor *tmp201 @unit @totalItems
 
  1127 op land *tmp212 *tmp210 *tmp211
  1128 jump *label227 equal *tmp212 false
  1129 ucontrol itemDrop @air 1000
-    * set *tmp213 null
  1130 jump *label228 always
  1131 label *label227
-    * set *tmp213 null
  1132 label *label228
  1133 label *label225
  1134 sensor *tmp214 @unit :fetchBlock:item
 
  1180 setaddr :mineOre*retaddr *label242 (h:*label242)
  1181 call *label7 *invalid :mineOre*retval (m:*label242) (h:*label242)
  1182 label *label242
-    * set *tmp230 null
  1183 jump *label241 always
  1184 label *label240
-    * set *tmp230 null
  1185 label *label241
  1186 label *label238
  1187 set :supplyBase0:supplied true
 
  1190 label *label235
  1191 set *tmp225 null
  1192 label *label236
-    * set *tmp222 *tmp225
  1193 jump *label234 always
  1194 label *label233
-    * set *tmp222 null
  1195 label *label234
  1196 sensor *tmp231 .core @silicon
  1197 op lessThan *tmp232 *tmp231 .targetSilicon
 
  1224 setaddr :mineOre*retaddr *label252 (h:*label252)
  1225 call *label7 *invalid :mineOre*retval (m:*label252) (h:*label252)
  1226 label *label252
-    * set *tmp241 null
  1227 jump *label251 always
  1228 label *label250
-    * set *tmp241 null
  1229 label *label251
  1230 label *label248
  1231 set :supplyBase0:supplied true
 
  1260 setaddr :mineOre*retaddr *label260 (h:*label260)
  1261 call *label7 *invalid :mineOre*retval (m:*label260) (h:*label260)
  1262 label *label260
-    * set *tmp249 null
  1263 jump *label259 always
  1264 label *label258
-    * set *tmp249 null
  1265 label *label259
  1266 label *label256
  1267 set :supplyBase0:supplied true
 
  1272 label *label254
  1273 set *tmp236 *tmp244
  1274 label *label246
-    * set *tmp233 *tmp236
  1275 jump *label244 always
  1276 label *label243
-    * set *tmp233 null
  1277 label *label244
  1278 sensor *tmp250 .battery @totalPower
  1279 op lessThan *tmp251 *tmp250 .powerTarget
 
  1306 setaddr :mineOre*retaddr *label270 (h:*label270)
  1307 call *label7 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1308 label *label270
-    * set *tmp260 null
  1309 jump *label269 always
  1310 label *label268
-    * set *tmp260 null
  1311 label *label269
  1312 label *label266
  1313 set :supplyBase0:supplied true
 
  1321 label *label261
  1322 set *tmp252 null
  1323 label *label262
-    * set *tmp219 *tmp252
  1324 jump *label232 always
  1325 label *label231
-    * set *tmp219 null
  1326 label *label232
  1327 sensor *tmp261 .core @titanium
  1328 op lessThan *tmp262 *tmp261 .targetTitanium
 
  1453 label *label275
  1454 set *tmp271 null
  1455 label *label276
-    * set *tmp269 *tmp271
  1456 jump *label274 always
  1457 label *label273
  1458 set :status1.10:text "Goal 11: Fetching titanium"
 
  1463 setaddr :fetchBlock*retaddr *label304 (h:*label304)
  1464 call *label9 *invalid :fetchBlock*retval (m:*label304) (h:*label304)
  1465 label *label304
-    * set *tmp269 null
  1466 label *label274
  1467 label *label230
  1468 return :supplyBase0*retaddr
 
  1495 label *label313
  1496 set *tmp303 null
  1497 label *label309
-    * set *tmp299 *tmp303
  1498 jump *label307 always
  1499 label *label306
  1500 sensor *tmp304 .core @coal
 
  1520 label *label319
  1521 set *tmp307 null
  1522 label *label315
-    * set *tmp299 *tmp307
  1523 label *label307
  1524 label *label305
  1525 return :supplyBase1*retaddr
 
  1531 setaddr :supplyBase0*retaddr *label324 (h:*label324)
  1532 call *label10 *invalid :supplyBase0*retval (m:*label324) (h:*label324)
  1533 label *label324
-    * set *tmp308 null
  1534 jump *label321 always
  1535 label *label322
  1536 jump *label326 equal .phase 1
 
  1539 setaddr :supplyBase1*retaddr *label327 (h:*label327)
  1540 call *label11 *invalid :supplyBase1*retval (m:*label327) (h:*label327)
  1541 label *label327
-    * set *tmp308 null
  1542 jump *label321 always
  1543 label *label325
-    * set *tmp308 null
  1544 label *label321
  1545 label *label320
  1546 return :supplyBase*retaddr
 
  1591 label *label331
  1592 set *tmp315 null
  1593 label *label332
-    * set *tmp312 *tmp315
  1594 jump *label330 always
  1595 label *label329
-    * set *tmp312 null
  1596 label *label330
  1597 set :targetMet*retval false
  1598 jump *label328 always
 
  1712 jump *label364 equal *tmp351 false
  1713 set :buildBlockAt*retval :buildBlockAt:building
  1714 jump *label359 always
-    * set *tmp352 null
  1715 jump *label365 always
  1716 label *label364
-    * set *tmp352 null
  1717 label *label365
  1718 jump *label366 equal :buildBlockAt:skipError false
  1719 set :buildBlockAt*retval null
  1720 jump *label359 always
-    * set *tmp353 null
  1721 jump *label367 always
  1722 label *label366
-    * set *tmp353 null
  1723 label *label367
  1724 set :error.3:error "Cannot build at ("
  1725 set .ERROR :error.3:error
  1726 stop
  1727 label *label368
-    * set *tmp350 null
  1728 jump *label363 always
  1729 label *label362
-    * set *tmp350 null
  1730 label *label363
  1731 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1732 wait 0.25
 
  1737 jump *label372 equal *tmp356 false
  1738 set :buildBlockAt*retval null
  1739 jump *label359 always
-    * set *tmp357 null
  1740 jump *label373 always
  1741 label *label372
-    * set *tmp357 null
  1742 label *label373
  1743 label *label370
  1744 op notEqual *tmp358 :buildBlockAt:type :buildBlockAt:block
 
  1787 op notEqual *tmp359 :findUnits:firstUnit null
  1788 jump *label379 equal *tmp359 false
  1789 label *label381
-    * set *tmp361 :findUnits:count
  1790 op add :findUnits:count :findUnits:count 1
  1791 ubind :findUnits:type
  1792 label *label382
  1793 op notEqual *tmp362 @unit :findUnits:firstUnit
  1794 jump *label381 notEqual *tmp362 false
  1795 label *label383
-    * set *tmp360 null
  1796 jump *label380 always
  1797 label *label379
-    * set *tmp360 null
  1798 label *label380
  1799 set :findUnits*retval :findUnits:count
  1800 label *label378

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
  1185 label *label241
  1186 label *label238
  1187 set :supplyBase0:supplied true
-    * set *tmp225 :supplyBase0:supplied
  1188 jump *label236 always
  1189 label *label235
-    * set *tmp225 null
  1190 label *label236
  1191 jump *label234 always
  1192 label *label233
 
  1227 label *label251
  1228 label *label248
  1229 set :supplyBase0:supplied true
-    * set *tmp236 :supplyBase0:supplied
  1230 jump *label246 always
  1231 label *label245
  1232 sensor *tmp242 .smelter @sand
 
  1267 label *label253
  1268 set *tmp244 null
  1269 label *label254
-    * set *tmp236 *tmp244
  1270 label *label246
  1271 jump *label244 always
  1272 label *label243
 
  1312 label *label263
  1313 set *tmp255 null
  1314 label *label264
-    * set *tmp252 *tmp255
  1315 jump *label262 always
  1316 label *label261
-    * set *tmp252 null
  1317 label *label262
  1318 jump *label232 always
  1319 label *label231
 
  1442 label *label282
  1443 set *tmp275 *tmp278
  1444 label *label278
-    * set *tmp271 *tmp275
  1445 jump *label276 always
  1446 label *label275
-    * set *tmp271 null
  1447 label *label276
  1448 jump *label274 always
  1449 label *label273
 
  1475 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1476 call *label8 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
  1477 label *label311
-    * set *tmp303 null
  1478 jump *label309 always
  1479 label *label308
  1480 set :status1.12:text "Phase 1: mining lead"
 
  1484 setaddr :mineOre.1*retaddr *label313 (h:*label313)
  1485 call *label8 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
  1486 label *label313
-    * set *tmp303 null
  1487 label *label309
  1488 jump *label307 always
  1489 label *label306
 
  1498 setaddr :mineOre.1*retaddr *label317 (h:*label317)
  1499 call *label8 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
  1500 label *label317
-    * set *tmp307 null
  1501 jump *label315 always
  1502 label *label314
  1503 set :status1.14:text "Phase 1: mining lead"
 
  1507 setaddr :mineOre.1*retaddr *label319 (h:*label319)
  1508 call *label8 *invalid :mineOre.1*retval (m:*label319) (h:*label319)
  1509 label *label319
-    * set *tmp307 null
  1510 label *label315
  1511 label *label307
  1512 label *label305
 
  1574 label *label333
  1575 set *tmp318 null
  1576 label *label334
-    * set *tmp315 *tmp318
  1577 jump *label332 always
  1578 label *label331
-    * set *tmp315 null
  1579 label *label332
  1580 jump *label330 always
  1581 label *label329

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1262 label *label259
  1263 label *label256
  1264 set :supplyBase0:supplied true
-    * set *tmp244 :supplyBase0:supplied
  1265 jump *label254 always
  1266 label *label253
-    * set *tmp244 null
  1267 label *label254
  1268 label *label246
  1269 jump *label244 always
 
  1305 label *label269
  1306 label *label266
  1307 set :supplyBase0:supplied true
-    * set *tmp255 :supplyBase0:supplied
  1308 jump *label264 always
  1309 label *label263
-    * set *tmp255 null
  1310 label *label264
  1311 jump *label262 always
  1312 label *label261
 
  1342 setaddr :mineOre.1*retaddr *label280 (h:*label280)
  1343 call *label8 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
  1344 label *label280
-    * set *tmp275 null
  1345 jump *label278 always
  1346 label *label277
  1347 sensor *tmp276 .core @silicon
 
  1435 label *label288
  1436 set *tmp278 *tmp285
  1437 label *label282
-    * set *tmp275 *tmp278
  1438 label *label278
  1439 jump *label276 always
  1440 label *label275
 
  1563 label *label335
  1564 set *tmp321 null
  1565 label *label336
-    * set *tmp318 *tmp321
  1566 jump *label334 always
  1567 label *label333
-    * set *tmp318 null
  1568 label *label334
  1569 jump *label332 always
  1570 label *label331

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1366 setaddr :mineOre.1*retaddr *label286 (h:*label286)
  1367 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
  1368 label *label286
-    * set *tmp278 null
  1369 jump *label282 always
  1370 label *label281
  1371 sensor *tmp283 .core @copper
 
  1432 label *label292
  1433 set *tmp285 *tmp288
  1434 label *label288
-    * set *tmp278 *tmp285
  1435 label *label282
  1436 label *label278
  1437 jump *label276 always
 
  1556 label *label337
  1557 set *tmp324 null
  1558 label *label338
-    * set *tmp321 *tmp324
  1559 jump *label336 always
  1560 label *label335
-    * set *tmp321 null
  1561 label *label336
  1562 jump *label334 always
  1563 label *label333

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1378 setaddr :mineOre.1*retaddr *label290 (h:*label290)
  1379 call *label8 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
  1380 label *label290
-    * set *tmp285 null
  1381 jump *label288 always
  1382 label *label287
  1383 sensor *tmp286 .core @lead
 
  1429 label *label296
  1430 set *tmp288 *tmp291
  1431 label *label292
-    * set *tmp285 *tmp288
  1432 label *label288
  1433 label *label282
  1434 label *label278
 
  1549 label *label339
  1550 set *tmp327 null
  1551 label *label340
-    * set *tmp324 *tmp327
  1552 jump *label338 always
  1553 label *label337
-    * set *tmp324 null
  1554 label *label338
  1555 jump *label336 always
  1556 label *label335

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1390 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1391 call *label8 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
  1392 label *label294
-    * set *tmp288 null
  1393 jump *label292 always
  1394 label *label291
  1395 sensor *tmp289 .core @metaglass
 
  1426 label *label302
  1427 set *tmp291 null
  1428 label *label296
-    * set *tmp288 *tmp291
  1429 label *label292
  1430 label *label288
  1431 label *label282
 
  1542 jump *label339 equal *tmp326 false
  1543 set :targetMet*retval true
  1544 jump *label328 always
-    * set *tmp327 null
  1545 jump *label340 always
  1546 label *label339
-    * set *tmp327 null
  1547 label *label340
  1548 jump *label338 always
  1549 label *label337

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1402 setaddr :mineOre.1*retaddr *label298 (h:*label298)
  1403 call *label8 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
  1404 label *label298
-    * set *tmp291 null
  1405 jump *label296 always
  1406 label *label295
  1407 set :status1.9:text "Goal 10: supplying base"
 
  1423 setaddr :mineOre.1*retaddr *label302 (h:*label302)
  1424 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
  1425 label *label302
-    * set *tmp291 null
  1426 label *label296
  1427 label *label292
  1428 label *label288

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-66 instructions):
 
    18 write 511 bank1 511
    19 label *label21
    20 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp66 *tmp65
-    * set .core *tmp65
+   21 ulocate building core false @copper .coreX .coreY 0 .core
    22 label *label22
    23 op equal *tmp67 .core null
    24 jump *label21 notEqual *tmp67 false
 
    30 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
    31 label *label24
    32 write :findUnits:count .display ".monos"
-    * set *tmp69 :findUnits*retval
-    * set :monos *tmp69
+   33 set :monos :findUnits*retval
    34 set :findUnits:type @flare
    35 setaddr :findUnits*retaddr *label25 (h:*label25)
    36 call *label19 *invalid :findUnits*retval (m:*label25) (h:*label25)
    37 label *label25
    38 write :findUnits:count .display ".flares"
-    * set *tmp71 :findUnits*retval
-    * set :flares *tmp71
+   39 set :flares :findUnits*retval
    40 set :findUnits:type @poly
    41 setaddr :findUnits*retaddr *label26 (h:*label26)
    42 call *label19 *invalid :findUnits*retval (m:*label26) (h:*label26)
    43 label *label26
    44 write :findUnits:count .display ".polys"
-    * set *tmp73 :findUnits*retval
-    * set :polys *tmp73
+   45 set :polys :findUnits*retval
    46 set :buildBlockFromCfg:block @graphite-press
    47 set :buildBlockFromCfg:offsetX -1.5
    48 set :buildBlockFromCfg:offsetY 2.5
 
    56 set :buildBlockFromCfg:config null
    57 setaddr *tmp75 *label31
    58 label *label28
-    * op add *tmp76 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp76
-    * op add *tmp77 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp77
+   59 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   60 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    61 set :buildBlock:block :buildBlockFromCfg:block
    62 set :buildBlock:x :buildBlockFromCfg:x
    63 set :buildBlock:y :buildBlockFromCfg:y
 
    94 set :buildBlockFromCfg.1:config null
    95 setaddr *tmp79 *label37
    96 label *label34
-    * op add *tmp80 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp80
-    * op add *tmp81 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp81
+   97 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   98 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    99 set :buildBlock:block :buildBlockFromCfg.1:block
   100 set :buildBlock:x :buildBlockFromCfg.1:x
   101 set :buildBlock:y :buildBlockFromCfg.1:y
 
   132 set :buildBlockFromCfg.2:config null
   133 setaddr *tmp83 *label43
   134 label *label40
-    * op add *tmp84 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp84
-    * op add *tmp85 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp85
+  135 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  136 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   137 set :buildBlock:block :buildBlockFromCfg.2:block
   138 set :buildBlock:x :buildBlockFromCfg.2:x
   139 set :buildBlock:y :buildBlockFromCfg.2:y
 
   167 set :buildBlockFromCfg.3:config null
   168 setaddr *tmp87 *label49
   169 label *label46
-    * op add *tmp88 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp88
-    * op add *tmp89 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp89
+  170 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  171 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   172 set :buildBlock:block :buildBlockFromCfg.3:block
   173 set :buildBlock:x :buildBlockFromCfg.3:x
   174 set :buildBlock:y :buildBlockFromCfg.3:y
 
   206 set :buildBlockFromCfg.4:config null
   207 setaddr *tmp91 *label55
   208 label *label52
-    * op add *tmp92 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp92
-    * op add *tmp93 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp93
+  209 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  210 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   211 set :buildBlock:block :buildBlockFromCfg.4:block
   212 set :buildBlock:x :buildBlockFromCfg.4:x
   213 set :buildBlock:y :buildBlockFromCfg.4:y
 
   254 wait 1e-15
   255 read *tmp95 processor4 ":findDrillLocation*finished"
   256 jump *label59 equal *tmp95 false
-    * read *tmp50 processor4 ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp50
-    * read *tmp51 processor4 ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp51
-    * read *tmp96 processor4 ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp96
+  257 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  258 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  259 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   260 op equal *tmp97 :buildTitaniumDrill:result false
   261 jump *label60 equal *tmp97 false
   262 set :error:error "Cannot locate spot for titanium drill"
 
   296 set :buildBlockFromCfg.5:config null
   297 setaddr *tmp100 *label68
   298 label *label65
-    * op add *tmp101 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp101
-    * op add *tmp102 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp102
+  299 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  300 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   301 set :buildBlock:block :buildBlockFromCfg.5:block
   302 set :buildBlock:x :buildBlockFromCfg.5:x
   303 set :buildBlock:y :buildBlockFromCfg.5:y
 
   334 set :buildBlockFromCfg.6:config processor2
   335 setaddr *tmp104 *label74
   336 label *label71
-    * op add *tmp105 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp105
-    * op add *tmp106 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp106
+  337 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  338 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   339 set :buildBlock:block :buildBlockFromCfg.6:block
   340 set :buildBlock:x :buildBlockFromCfg.6:x
   341 set :buildBlock:y :buildBlockFromCfg.6:y
 
   382 set :buildBlockFromCfg.7:config null
   383 setaddr *tmp108 *label80
   384 label *label77
-    * op add *tmp109 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp109
-    * op add *tmp110 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp110
+  385 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  386 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   387 set :buildBlock:block :buildBlockFromCfg.7:block
   388 set :buildBlock:x :buildBlockFromCfg.7:x
   389 set :buildBlock:y :buildBlockFromCfg.7:y
 
   417 set :buildBlockFromCfg.8:config null
   418 setaddr *tmp112 *label86
   419 label *label83
-    * op add *tmp113 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp113
-    * op add *tmp114 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp114
+  420 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  421 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   422 set :buildBlock:block :buildBlockFromCfg.8:block
   423 set :buildBlock:x :buildBlockFromCfg.8:x
   424 set :buildBlock:y :buildBlockFromCfg.8:y
 
   456 set :buildBlockFromCfg.9:config null
   457 setaddr *tmp116 *label92
   458 label *label89
-    * op add *tmp117 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp117
-    * op add *tmp118 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp118
+  459 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  460 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   461 set :buildBlock:block :buildBlockFromCfg.9:block
   462 set :buildBlock:x :buildBlockFromCfg.9:x
   463 set :buildBlock:y :buildBlockFromCfg.9:y
 
   491 set :buildBlockFromCfg.10:config @mono
   492 setaddr *tmp120 *label98
   493 label *label95
-    * op add *tmp121 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp121
-    * op add *tmp122 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp122
+  494 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  495 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   496 set :buildBlock:block :buildBlockFromCfg.10:block
   497 set :buildBlock:x :buildBlockFromCfg.10:x
   498 set :buildBlock:y :buildBlockFromCfg.10:y
 
   569 set :buildBlockFromCfg.11:config null
   570 setaddr *tmp132 *label114
   571 label *label111
-    * op add *tmp133 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp133
-    * op add *tmp134 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp134
+  572 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  573 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   574 set :buildBlock:block :buildBlockFromCfg.11:block
   575 set :buildBlock:x :buildBlockFromCfg.11:x
   576 set :buildBlock:y :buildBlockFromCfg.11:y
 
   604 set :buildBlockFromCfg.12:config null
   605 setaddr *tmp136 *label120
   606 label *label117
-    * op add *tmp137 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp137
-    * op add *tmp138 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp138
+  607 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  608 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   609 set :buildBlock:block :buildBlockFromCfg.12:block
   610 set :buildBlock:x :buildBlockFromCfg.12:x
   611 set :buildBlock:y :buildBlockFromCfg.12:y
 
   643 set :buildBlockFromCfg.13:config null
   644 setaddr *tmp140 *label126
   645 label *label123
-    * op add *tmp141 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp141
-    * op add *tmp142 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp142
+  646 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  647 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   648 set :buildBlock:block :buildBlockFromCfg.13:block
   649 set :buildBlock:x :buildBlockFromCfg.13:x
   650 set :buildBlock:y :buildBlockFromCfg.13:y
 
   678 set :buildBlockFromCfg.14:config null
   679 setaddr *tmp144 *label132
   680 label *label129
-    * op add *tmp145 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp145
-    * op add *tmp146 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp146
+  681 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  682 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   683 set :buildBlock:block :buildBlockFromCfg.14:block
   684 set :buildBlock:x :buildBlockFromCfg.14:x
   685 set :buildBlock:y :buildBlockFromCfg.14:y
 
   713 set :buildBlockFromCfg.15:config null
   714 setaddr *tmp148 *label138
   715 label *label135
-    * op add *tmp149 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp149
-    * op add *tmp150 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp150
+  716 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  717 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   718 set :buildBlock:block :buildBlockFromCfg.15:block
   719 set :buildBlock:x :buildBlockFromCfg.15:x
   720 set :buildBlock:y :buildBlockFromCfg.15:y
 
   752 set :buildBlockFromCfg.16:config null
   753 setaddr *tmp152 *label144
   754 label *label141
-    * op add *tmp153 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp153
-    * op add *tmp154 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp154
+  755 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  756 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   757 set :buildBlock:block :buildBlockFromCfg.16:block
   758 set :buildBlock:x :buildBlockFromCfg.16:x
   759 set :buildBlock:y :buildBlockFromCfg.16:y
 
   790 set :buildBlockFromCfg.17:config @coal
   791 setaddr *tmp156 *label150
   792 label *label147
-    * op add *tmp157 .coreX :buildBlockFromCfg.17:offsetX
-    * set :buildBlockFromCfg.17:x *tmp157
-    * op add *tmp158 .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlockFromCfg.17:y *tmp158
+  793 op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
+  794 op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
   795 set :buildBlock:block :buildBlockFromCfg.17:block
   796 set :buildBlock:x :buildBlockFromCfg.17:x
   797 set :buildBlock:y :buildBlockFromCfg.17:y
 
   912 setaddr :moveToBlock*retaddr *label182 (h:*label182)
   913 call *label4 *invalid :moveToBlock*retval (m:*label182) (h:*label182)
   914 label *label182
-    * sensor *tmp176 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp176
+  915 sensor :depositItems:cap :depositItems:block @itemCapacity
   916 label *label183
   917 ucontrol itemDrop :depositItems:block 30
   918 label *label184
 
   942 return :depositItems*retaddr
   943 end
   944 label *label6
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 *tmp184
+  945 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
   946 op equal *tmp185 *tmp183 false
   947 jump *label191 equal *tmp185 false
   948 set :error.2:error "Cannot locate ore"
 
   956 return :locateOre*retaddr
   957 end
   958 label *label7
-    * op min *tmp187 :mineOre:amount 30
-    * set :mineOre:amount *tmp187
+  959 op min :mineOre:amount :mineOre:amount 30
   960 set :transportStatus.1:target :mineOre:amount
   961 set :transportStatus.1:item :mineOre:ore
   962 write :transportStatus.1:target .display ".transportTarget"
 
   991 set :status3.3:text "Mining..."
   992 write :status3.3:text .display ".status3"
   993 label *label204
-    * op add *tmp193 @second 10
-    * set :mineOre:stop *tmp193
+  994 op add :mineOre:stop @second 10
   995 label *label205
-    * sensor *tmp194 @unit @firstItem
-    * set :mineOre:item *tmp194
+  996 sensor :mineOre:item @unit @firstItem
   997 op notEqual *tmp195 :mineOre:item null
   998 op notEqual *tmp196 :mineOre:item :mineOre:ore
   999 op land *tmp197 *tmp195 *tmp196
 
  1031 write :status2:item .display ".item2"
  1032 write :status2:block .display ".block2"
  1033 label *label214
-    * set *tmp203 :mineOre.1:ore
-    * set :mineOre:ore *tmp203
+ 1034 set :mineOre:ore :mineOre.1:ore
  1035 set :mineOre:amount 30
  1036 set :mineOre:block .core
  1037 setaddr :mineOre*retaddr *label215 (h:*label215)
 
  1041 return :mineOre.1*retaddr
  1042 end
  1043 label *label9
-    * sensor *tmp204 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp204
+ 1044 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1045 set :transportStatus.2:item :fetchBlock:item
  1046 write :transportStatus.2:target .display ".transportTarget"
  1047 write :transportStatus.2:item .display ".transportItem"
 
  1071 label *label220
  1072 label *label224
  1073 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp209 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp209
+ 1074 sensor :fetchBlock:unitItem @unit @firstItem
  1075 op notEqual *tmp210 :fetchBlock:unitItem null
  1076 op notEqual *tmp211 :fetchBlock:unitItem :fetchBlock:item
  1077 op land *tmp212 *tmp210 *tmp211
 
  1117 write :status2.2:item .display ".item2"
  1118 write :status2.2:block .display ".block2"
  1119 label *label239
-    * sensor *tmp226 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp226
+ 1120 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1121 sensor *tmp227 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp228 :supplyBlock:blockCapacity *tmp227
-    * set :supplyBlock:missing *tmp228
+ 1122 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp227
  1123 op greaterThan *tmp229 :supplyBlock:missing 0
  1124 jump *label240 equal *tmp229 false
  1125 set :mineOre:ore :supplyBlock:ore
 
  1157 write :status2.3:item .display ".item2"
  1158 write :status2.3:block .display ".block2"
  1159 label *label249
-    * sensor *tmp237 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp237
+ 1160 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1161 sensor *tmp238 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp239 :supplyBlock.1:blockCapacity *tmp238
-    * set :supplyBlock.1:missing *tmp239
+ 1162 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp238
  1163 op greaterThan *tmp240 :supplyBlock.1:missing 0
  1164 jump *label250 equal *tmp240 false
  1165 set :mineOre:ore :supplyBlock.1:ore
 
  1190 write :status2.4:item .display ".item2"
  1191 write :status2.4:block .display ".block2"
  1192 label *label257
-    * sensor *tmp245 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp245
+ 1193 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1194 sensor *tmp246 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp247 :supplyBlock.2:blockCapacity *tmp246
-    * set :supplyBlock.2:missing *tmp247
+ 1195 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp246
  1196 op greaterThan *tmp248 :supplyBlock.2:missing 0
  1197 jump *label258 equal *tmp248 false
  1198 set :mineOre:ore :supplyBlock.2:ore
 
  1231 write :status2.5:item .display ".item2"
  1232 write :status2.5:block .display ".block2"
  1233 label *label267
-    * sensor *tmp256 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp256
+ 1234 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1235 sensor *tmp257 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp258 :supplyBlock.3:blockCapacity *tmp257
-    * set :supplyBlock.3:missing *tmp258
+ 1236 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp257
  1237 op greaterThan *tmp259 :supplyBlock.3:missing 0
  1238 jump *label268 equal *tmp259 false
  1239 set :mineOre:ore :supplyBlock.3:ore
 
  1261 jump *label271 equal *tmp262 false
  1262 sensor *tmp264 .core @titanium
  1263 op sub *tmp265 .targetTitanium *tmp264
-    * op min *tmp266 7 *tmp265
-    * set *tmp263 *tmp266
+ 1264 op min *tmp263 7 *tmp265
  1265 jump *label272 always
  1266 label *label271
  1267 set *tmp263 100
 
  1291 set :status1.5:text "Goal 6: silicon requirement"
  1292 write :status1.5:text .display ".status1"
  1293 label *label283
-    * sensor *tmp279 .core @coal
-    * set :supplyBase0:coal *tmp279
-    * sensor *tmp280 .core @sand
-    * set :supplyBase0:sand *tmp280
+ 1294 sensor :supplyBase0:coal .core @coal
+ 1295 sensor :supplyBase0:sand .core @sand
  1296 op lessThan *tmp281 :supplyBase0:coal :supplyBase0:sand
  1297 jump *label284 equal *tmp281 false
  1298 set *tmp282 @coal
 
  1346 set :status1.9:text "Goal 10: supplying base"
  1347 write :status1.9:text .display ".status1"
  1348 label *label299
-    * sensor *tmp292 .core @coal
-    * set :supplyBase0:coal.1 *tmp292
-    * sensor *tmp293 .core @sand
-    * set :supplyBase0:sand.1 *tmp293
+ 1349 sensor :supplyBase0:coal.1 .core @coal
+ 1350 sensor :supplyBase0:sand.1 .core @sand
  1351 op lessThanEq *tmp294 :supplyBase0:coal.1 :supplyBase0:sand.1
  1352 jump *label300 equal *tmp294 false
  1353 set *tmp295 @coal
 
  1588 return :log*retaddr
  1589 end
  1590 label *label16
-    * sensor *tmp346 :logBlock:block @id
-    * set :log:encodedId *tmp346
+ 1591 sensor :log:encodedId :logBlock:block @id
  1592 setaddr :log*retaddr *label358 (h:*label358)
  1593 call *label15 *invalid :log*retval (m:*label358) (h:*label358)
  1594 label *label358
 
  1604 set :status3.4:text "Building..."
  1605 write :status3.4:text .display ".status3"
  1606 label *label361
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp347 *tmp348
-    * set :buildBlockAt:building *tmp347
+ 1607 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1608 op notEqual *tmp349 :buildBlockAt:building null
  1609 jump *label362 equal *tmp349 false
  1610 op equal *tmp351 :buildBlockAt:type :buildBlockAt:block
 
  1630 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1631 wait 0.25
  1632 label *label369
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp354 *tmp355
-    * set :buildBlockAt:building *tmp354
+ 1633 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1634 op equal *tmp356 :buildBlockAt:building null
  1635 jump *label372 equal *tmp356 false
  1636 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   826 jump *label152 notEqual *tmp160 false
   827 label *label154
   828 label *label156
-    * jump *label158 equal true false
   829 setaddr :supplyBase*retaddr *label159 (h:*label159)
   830 call *label12 *invalid :supplyBase*retval (m:*label159) (h:*label159)
   831 label *label159

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1435 return :supplyBase1*retaddr
  1436 end
  1437 label *label12
-    * jump *label323 equal .phase 0
-    * jump *label322 always
+ 1438 jump *label322 notEqual .phase 0
  1439 label *label323
  1440 setaddr :supplyBase0*retaddr *label324 (h:*label324)
  1441 call *label10 *invalid :supplyBase0*retval (m:*label324) (h:*label324)
  1442 label *label324
  1443 jump *label321 always
  1444 label *label322
-    * jump *label326 equal .phase 1
-    * jump *label325 always
+ 1445 jump *label325 notEqual .phase 1
  1446 label *label326
  1447 setaddr :supplyBase1*retaddr *label327 (h:*label327)
  1448 call *label11 *invalid :supplyBase1*retval (m:*label327) (h:*label327)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    20 ubind @poly
    21 ulocate building core false @copper .coreX .coreY 0 .core
    22 label *label22
-    * op equal *tmp67 .core null
-    * jump *label21 notEqual *tmp67 false
+   23 jump *label21 equal .core null
    24 label *label23
    25 set .display processor1
    26 set .flareController processor3
 
   256 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
   257 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   258 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
-    * op equal *tmp97 :buildTitaniumDrill:result false
-    * jump *label60 equal *tmp97 false
+  259 jump *label60 notEqual :buildTitaniumDrill:result false
   260 set :error:error "Cannot locate spot for titanium drill"
   261 set .ERROR :error:error
   262 stop
 
   543 call *label11 *invalid :supplyBase1*retval (m:*label107) (h:*label107)
   544 label *label107
   545 sensor *tmp127 .battery @totalPower
-    * op lessThan *tmp128 *tmp127 300
-    * jump *label108 equal *tmp128 false
+  546 jump *label108 greaterThanEq *tmp127 300
   547 jump *label103 always
   548 jump *label109 always
   549 label *label108
   550 label *label109
   551 label *label102
   552 read *tmp34 .controller ".monos"
-    * op lessThan *tmp130 *tmp34 3
-    * jump *label101 notEqual *tmp130 false
+  553 jump *label101 lessThan *tmp34 3
   554 label *label103
   555 set :buildBlockFromCfg.11:block @unloader
   556 set :buildBlockFromCfg.11:offsetX 2
 
   818 read *tmp35 .controller ".flares"
   819 read *tmp34 .controller ".monos"
   820 op add *tmp159 *tmp35 *tmp34
-    * op lessThan *tmp160 *tmp159 16
-    * jump *label152 notEqual *tmp160 false
+  821 jump *label152 lessThan *tmp159 16
   822 label *label154
   823 label *label156
   824 setaddr :supplyBase*retaddr *label159 (h:*label159)
 
   839 label *label163
   840 label *label164
   841 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
-    * op equal *tmp162 *tmp161 false
-    * jump *label166 equal *tmp162 false
+  842 jump *label166 notEqual *tmp161 false
   843 op sub *tmp163 :moveTo:radius 0.5
   844 ucontrol approach :moveTo:x :moveTo:y *tmp163
   845 label *label165
 
   866 label *label170
   867 label *label171
   868 sensor *tmp166 @unit @firstItem
-    * op notEqual *tmp167 *tmp166 null
-    * jump *label174 equal *tmp167 false
+  869 jump *label174 equal *tmp166 null
   870 ucontrol itemDrop @air 1000
   871 jump *label175 always
   872 label *label174
 
   874 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   875 label *label172
   876 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp169
-    * op equal *tmp170 *tmp169 false
-    * jump *label171 notEqual *tmp170 false
+  877 jump *label171 equal *tmp169 false
   878 label *label173
   879 label *label169
   880 return :moveToEmpty*retaddr
 
   896 write :status3.2:text .display ".status3"
   897 label *label179
   898 sensor *tmp173 @unit @firstItem
-    * op equal *tmp174 *tmp173 :depositItems:item
-    * jump *label180 equal *tmp174 false
+  899 jump *label180 notEqual *tmp173 :depositItems:item
   900 set :moveToBlock:block :depositItems:block
   901 set :moveToBlock:radius 6
   902 setaddr :moveToBlock*retaddr *label182 (h:*label182)
 
   909 sensor *tmp177 @unit @firstItem
   910 op mul *tmp178 *tmp177 :depositItems:cap
   911 sensor *tmp179 :depositItems:block :depositItems:item
-    * op greaterThan *tmp180 *tmp178 *tmp179
-    * jump *label183 notEqual *tmp180 false
+  912 jump *label183 greaterThan *tmp178 *tmp179
   913 label *label185
   914 jump *label181 always
   915 label *label180
   916 label *label186
   917 sensor *tmp181 @unit @firstItem
-    * op notEqual *tmp182 *tmp181 null
-    * jump *label188 equal *tmp182 false
+  918 jump *label188 equal *tmp181 null
   919 ucontrol itemDrop @air 1000
   920 label *label187
   921 jump *label186 always
 
   931 end
   932 label *label6
   933 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
-    * op equal *tmp185 *tmp183 false
-    * jump *label191 equal *tmp185 false
+  934 jump *label191 notEqual *tmp183 false
   935 set :error.2:error "Cannot locate ore"
   936 set .ERROR :error.2:error
   937 stop
 
   961 call *label3 *invalid :moveToEmpty*retval (m:*label197) (h:*label197)
   962 label *label197
   963 sensor *tmp188 @unit @firstItem
-    * op notEqual *tmp189 *tmp188 :mineOre:ore
-    * jump *label198 equal *tmp189 false
+  964 jump *label198 equal *tmp188 :mineOre:ore
   965 label *label201
   966 sensor *tmp191 @unit @firstItem
-    * op notEqual *tmp192 *tmp191 null
-    * jump *label203 equal *tmp192 false
+  967 jump *label203 equal *tmp191 null
   968 ucontrol itemDrop @air 1000
   969 label *label202
   970 jump *label201 always
 
   988 label *label208
   989 label *label209
   990 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp199 @second :mineOre:stop
-    * jump *label210 equal *tmp199 false
+  991 jump *label210 lessThanEq @second :mineOre:stop
   992 jump *label207 always
   993 jump *label211 always
   994 label *label210
   995 label *label211
   996 label *label206
   997 sensor *tmp201 @unit @totalItems
-    * op lessThan *tmp202 *tmp201 :mineOre:amount
-    * jump *label205 notEqual *tmp202 false
+  998 jump *label205 lessThan *tmp201 :mineOre:amount
   999 label *label207
  1000 ucontrol unbind
  1001 set :depositItems:block :mineOre:block
 
  1045 label *label219
  1046 label *label221
  1047 sensor *tmp207 @unit @firstItem
-    * op notEqual *tmp208 *tmp207 null
-    * jump *label223 equal *tmp208 false
+ 1048 jump *label223 equal *tmp207 null
  1049 ucontrol itemDrop @air 1000
  1050 label *label222
  1051 jump *label221 always
 
  1079 end
  1080 label *label10
  1081 set :supplyBase0:supplied false
-    * op equal *tmp218 .unloader1 null
-    * jump *label231 equal *tmp218 false
+ 1082 jump *label231 notEqual .unloader1 null
  1083 sensor *tmp220 .core @graphite
-    * op lessThan *tmp221 *tmp220 .targetGraphite
-    * jump *label233 equal *tmp221 false
+ 1084 jump *label233 greaterThanEq *tmp220 .targetGraphite
  1085 sensor *tmp223 .press @coal
-    * op lessThan *tmp224 *tmp223 5
-    * jump *label235 equal *tmp224 false
+ 1086 jump *label235 greaterThanEq *tmp223 5
  1087 set :status1:text "Goal 1: graphite requirement"
  1088 write :status1:text .display ".status1"
  1089 label *label237
 
  1099 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1100 sensor *tmp227 :supplyBlock:block :supplyBlock:ore
  1101 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp227
-    * op greaterThan *tmp229 :supplyBlock:missing 0
-    * jump *label240 equal *tmp229 false
+ 1102 jump *label240 lessThanEq :supplyBlock:missing 0
  1103 set :mineOre:ore :supplyBlock:ore
  1104 set :mineOre:amount :supplyBlock:blockCapacity
  1105 set :mineOre:block :supplyBlock:block
 
  1118 label *label233
  1119 label *label234
  1120 sensor *tmp231 .core @silicon
-    * op lessThan *tmp232 *tmp231 .targetSilicon
-    * jump *label243 equal *tmp232 false
+ 1121 jump *label243 greaterThanEq *tmp231 .targetSilicon
  1122 sensor *tmp234 .smelter @coal
-    * op lessThan *tmp235 *tmp234 5
-    * jump *label245 equal *tmp235 false
+ 1123 jump *label245 greaterThanEq *tmp234 5
  1124 set :status1.1:text "Goal 2: coal for silicon requirement"
  1125 write :status1.1:text .display ".status1"
  1126 label *label247
 
  1136 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1137 sensor *tmp238 :supplyBlock.1:block :supplyBlock.1:ore
  1138 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp238
-    * op greaterThan *tmp240 :supplyBlock.1:missing 0
-    * jump *label250 equal *tmp240 false
+ 1139 jump *label250 lessThanEq :supplyBlock.1:missing 0
  1140 set :mineOre:ore :supplyBlock.1:ore
  1141 set :mineOre:amount :supplyBlock.1:blockCapacity
  1142 set :mineOre:block :supplyBlock.1:block
 
  1151 jump *label246 always
  1152 label *label245
  1153 sensor *tmp242 .smelter @sand
-    * op lessThan *tmp243 *tmp242 5
-    * jump *label253 equal *tmp243 false
+ 1154 jump *label253 greaterThanEq *tmp242 5
  1155 set :status1.2:text "Goal 3: sand for silicon requirement"
  1156 write :status1.2:text .display ".status1"
  1157 label *label255
 
  1167 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1168 sensor *tmp246 :supplyBlock.2:block :supplyBlock.2:ore
  1169 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp246
-    * op greaterThan *tmp248 :supplyBlock.2:missing 0
-    * jump *label258 equal *tmp248 false
+ 1170 jump *label258 lessThanEq :supplyBlock.2:missing 0
  1171 set :mineOre:ore :supplyBlock.2:ore
  1172 set :mineOre:amount :supplyBlock.2:blockCapacity
  1173 set :mineOre:block :supplyBlock.2:block
 
  1187 label *label243
  1188 label *label244
  1189 sensor *tmp250 .battery @totalPower
-    * op lessThan *tmp251 *tmp250 .powerTarget
-    * jump *label261 equal *tmp251 false
+ 1190 jump *label261 greaterThanEq *tmp250 .powerTarget
  1191 sensor *tmp253 .generator @coal
-    * op lessThan *tmp254 *tmp253 2
-    * jump *label263 equal *tmp254 false
+ 1192 jump *label263 greaterThanEq *tmp253 2
  1193 set :status1.3:text "Goal 4: supplying generator"
  1194 write :status1.3:text .display ".status1"
  1195 label *label265
 
  1205 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1206 sensor *tmp257 :supplyBlock.3:block :supplyBlock.3:ore
  1207 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp257
-    * op greaterThan *tmp259 :supplyBlock.3:missing 0
-    * jump *label268 equal *tmp259 false
+ 1208 jump *label268 lessThanEq :supplyBlock.3:missing 0
  1209 set :mineOre:ore :supplyBlock.3:ore
  1210 set :mineOre:amount :supplyBlock.3:blockCapacity
  1211 set :mineOre:block :supplyBlock.3:block
 
  1227 label *label231
  1228 label *label232
  1229 sensor *tmp261 .core @titanium
-    * op lessThan *tmp262 *tmp261 .targetTitanium
-    * jump *label271 equal *tmp262 false
+ 1230 jump *label271 greaterThanEq *tmp261 .targetTitanium
  1231 sensor *tmp264 .core @titanium
  1232 op sub *tmp265 .targetTitanium *tmp264
  1233 op min *tmp263 7 *tmp265
 
  1237 label *label272
  1238 set :supplyBase0:titaniumTrigger *tmp263
  1239 sensor *tmp267 .titaniumDrill @titanium
-    * op lessThan *tmp268 *tmp267 :supplyBase0:titaniumTrigger
-    * jump *label273 equal *tmp268 false
-    * op equal *tmp270 :supplyBase0:supplied false
-    * jump *label275 equal *tmp270 false
+ 1240 jump *label273 greaterThanEq *tmp267 :supplyBase0:titaniumTrigger
+ 1241 jump *label275 notEqual :supplyBase0:supplied false
  1242 sensor *tmp272 .battery @totalPower
  1243 op mul *tmp273 .unloader1 .powerTarget
-    * op lessThan *tmp274 *tmp272 *tmp273
-    * jump *label277 equal *tmp274 false
+ 1244 jump *label277 greaterThanEq *tmp272 *tmp273
  1245 set :status1.4:text "Goal 5: supplying generator"
  1246 write :status1.4:text .display ".status1"
  1247 label *label279
 
  1252 jump *label278 always
  1253 label *label277
  1254 sensor *tmp276 .core @silicon
-    * op lessThan *tmp277 *tmp276 .targetSilicon
-    * jump *label281 equal *tmp277 false
+ 1255 jump *label281 greaterThanEq *tmp276 .targetSilicon
  1256 set :status1.5:text "Goal 6: silicon requirement"
  1257 write :status1.5:text .display ".status1"
  1258 label *label283
  1259 sensor :supplyBase0:coal .core @coal
  1260 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp281 :supplyBase0:coal :supplyBase0:sand
-    * jump *label284 equal *tmp281 false
+ 1261 jump *label284 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1262 set *tmp282 @coal
  1263 jump *label285 always
  1264 label *label284
 
  1272 jump *label282 always
  1273 label *label281
  1274 sensor *tmp283 .core @copper
-    * op lessThan *tmp284 *tmp283 .targetCopper
-    * jump *label287 equal *tmp284 false
+ 1275 jump *label287 greaterThanEq *tmp283 .targetCopper
  1276 set :status1.6:text "Goal 7: copper requirement"
  1277 write :status1.6:text .display ".status1"
  1278 label *label289
 
  1283 jump *label288 always
  1284 label *label287
  1285 sensor *tmp286 .core @lead
-    * op lessThan *tmp287 *tmp286 .targetLead
-    * jump *label291 equal *tmp287 false
+ 1286 jump *label291 greaterThanEq *tmp286 .targetLead
  1287 set :status1.7:text "Goal 8: lead requirement"
  1288 write :status1.7:text .display ".status1"
  1289 label *label293
 
  1294 jump *label292 always
  1295 label *label291
  1296 sensor *tmp289 .core @metaglass
-    * op lessThan *tmp290 *tmp289 .targetMetaglass
-    * jump *label295 equal *tmp290 false
+ 1297 jump *label295 greaterThanEq *tmp289 .targetMetaglass
  1298 set :status1.8:text "Goal 9: metaglass requirement"
  1299 write :status1.8:text .display ".status1"
  1300 label *label297
 
  1309 label *label299
  1310 sensor :supplyBase0:coal.1 .core @coal
  1311 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp294 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label300 equal *tmp294 false
+ 1312 jump *label300 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1313 set *tmp295 @coal
  1314 jump *label301 always
  1315 label *label300
 
  1345 label *label11
  1346 sensor *tmp296 .core @sand
  1347 sensor *tmp297 .core @coal
-    * op lessThan *tmp298 *tmp296 *tmp297
-    * jump *label306 equal *tmp298 false
+ 1348 jump *label306 greaterThanEq *tmp296 *tmp297
  1349 sensor *tmp300 .core @sand
  1350 sensor *tmp301 .core @lead
-    * op lessThan *tmp302 *tmp300 *tmp301
-    * jump *label308 equal *tmp302 false
+ 1351 jump *label308 greaterThanEq *tmp300 *tmp301
  1352 set :status1.11:text "Phase 1: mining sand"
  1353 write :status1.11:text .display ".status1"
  1354 label *label310
 
  1370 label *label306
  1371 sensor *tmp304 .core @coal
  1372 sensor *tmp305 .core @lead
-    * op lessThan *tmp306 *tmp304 *tmp305
-    * jump *label314 equal *tmp306 false
+ 1373 jump *label314 greaterThanEq *tmp304 *tmp305
  1374 set :status1.13:text "Phase 1: mining coal"
  1375 write :status1.13:text .display ".status1"
  1376 label *label316
 
  1413 end
  1414 label *label13
  1415 sensor *tmp310 .core @copper
-    * op greaterThanEq *tmp311 *tmp310 .targetCopper
-    * jump *label329 equal *tmp311 false
+ 1416 jump *label329 lessThan *tmp310 .targetCopper
  1417 sensor *tmp313 .core @lead
-    * op greaterThanEq *tmp314 *tmp313 .targetLead
-    * jump *label331 equal *tmp314 false
+ 1418 jump *label331 lessThan *tmp313 .targetLead
  1419 sensor *tmp316 .core @graphite
-    * op greaterThanEq *tmp317 *tmp316 .targetGraphite
-    * jump *label333 equal *tmp317 false
+ 1420 jump *label333 lessThan *tmp316 .targetGraphite
  1421 sensor *tmp319 .core @silicon
-    * op greaterThanEq *tmp320 *tmp319 .targetSilicon
-    * jump *label335 equal *tmp320 false
+ 1422 jump *label335 lessThan *tmp319 .targetSilicon
  1423 sensor *tmp322 .core @titanium
-    * op greaterThanEq *tmp323 *tmp322 .targetTitanium
-    * jump *label337 equal *tmp323 false
+ 1424 jump *label337 lessThan *tmp322 .targetTitanium
  1425 sensor *tmp325 .core @metaglass
-    * op greaterThanEq *tmp326 *tmp325 .targetMetaglass
-    * jump *label339 equal *tmp326 false
+ 1426 jump *label339 lessThan *tmp325 .targetMetaglass
  1427 set :targetMet*retval true
  1428 jump *label328 always
  1429 jump *label340 always
 
  1513 setaddr :targetMet*retaddr *label354 (h:*label354)
  1514 call *label13 *invalid :targetMet*retval (m:*label354) (h:*label354)
  1515 label *label354
-    * op equal *tmp339 :targetMet*retval false
-    * jump *label353 equal *tmp339 false
+ 1516 jump *label353 notEqual :targetMet*retval false
  1517 setaddr :supplyBase*retaddr *label355 (h:*label355)
  1518 call *label12 *invalid :supplyBase*retval (m:*label355) (h:*label355)
  1519 label *label355
 
  1553 write :status3.4:text .display ".status3"
  1554 label *label361
  1555 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp349 :buildBlockAt:building null
-    * jump *label362 equal *tmp349 false
-    * op equal *tmp351 :buildBlockAt:type :buildBlockAt:block
-    * jump *label364 equal *tmp351 false
+ 1556 jump *label362 equal :buildBlockAt:building null
+ 1557 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1558 set :buildBlockAt*retval :buildBlockAt:building
  1559 jump *label359 always
  1560 jump *label365 always
 
  1577 wait 0.25
  1578 label *label369
  1579 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp356 :buildBlockAt:building null
-    * jump *label372 equal *tmp356 false
+ 1580 jump *label372 notEqual :buildBlockAt:building null
  1581 set :buildBlockAt*retval null
  1582 jump *label359 always
  1583 jump *label373 always
  1584 label *label372
  1585 label *label373
  1586 label *label370
-    * op notEqual *tmp358 :buildBlockAt:type :buildBlockAt:block
-    * jump *label369 notEqual *tmp358 false
+ 1587 jump *label369 notEqual :buildBlockAt:type :buildBlockAt:block
  1588 label *label371
  1589 set :logBlock:block :buildBlockAt:block
  1590 setaddr :logBlock*retaddr *label374 (h:*label374)
 
  1626 set :findUnits:count 0
  1627 ubind :findUnits:type
  1628 set :findUnits:firstUnit @unit
-    * op notEqual *tmp359 :findUnits:firstUnit null
-    * jump *label379 equal *tmp359 false
+ 1629 jump *label379 equal :findUnits:firstUnit null
  1630 label *label381
  1631 op add :findUnits:count :findUnits:count 1
  1632 ubind :findUnits:type
  1633 label *label382
-    * op notEqual *tmp362 @unit :findUnits:firstUnit
-    * jump *label381 notEqual *tmp362 false
+ 1634 jump *label381 notEqual @unit :findUnits:firstUnit
  1635 label *label383
  1636 jump *label380 always
  1637 label *label379

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-33 instructions):
 
   261 set .ERROR :error:error
   262 stop
   263 label *label62
-    * jump *label61 always
   264 label *label60
   265 label *label61
   266 set :buildBlockAt:block @pneumatic-drill
 
   535 jump *label104 equal *tmp125 false
   536 set :thoriumDrill false
   537 label *label106
-    * jump *label105 always
   538 label *label104
   539 label *label105
   540 setaddr :supplyBase1*retaddr *label107 (h:*label107)
 
   543 sensor *tmp127 .battery @totalPower
   544 jump *label108 greaterThanEq *tmp127 300
   545 jump *label103 always
-    * jump *label109 always
   546 label *label108
   547 label *label109
   548 label *label102
 
   865 sensor *tmp166 @unit @firstItem
   866 jump *label174 equal *tmp166 null
   867 ucontrol itemDrop @air 1000
-    * jump *label175 always
   868 label *label174
   869 label *label175
   870 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   932 set .ERROR :error.2:error
   933 stop
   934 label *label193
-    * jump *label192 always
   935 label *label191
   936 label *label192
   937 label *label190
 
   965 jump *label201 always
   966 label *label203
   967 label *label200
-    * jump *label199 always
   968 label *label198
   969 label *label199
   970 set :status3.3:text "Mining..."
 
   978 op land *tmp197 *tmp195 *tmp196
   979 jump *label208 equal *tmp197 false
   980 jump *label207 always
-    * jump *label209 always
   981 label *label208
   982 label *label209
   983 ucontrol mine :mineOre:x :mineOre:y
   984 jump *label210 lessThanEq @second :mineOre:stop
   985 jump *label207 always
-    * jump *label211 always
   986 label *label210
   987 label *label211
   988 label *label206
 
  1051 op land *tmp212 *tmp210 *tmp211
  1052 jump *label227 equal *tmp212 false
  1053 ucontrol itemDrop @air 1000
-    * jump *label228 always
  1054 label *label227
  1055 label *label228
  1056 label *label225
 
  1097 setaddr :mineOre*retaddr *label242 (h:*label242)
  1098 call *label7 *invalid :mineOre*retval (m:*label242) (h:*label242)
  1099 label *label242
-    * jump *label241 always
  1100 label *label240
  1101 label *label241
  1102 label *label238
  1103 set :supplyBase0:supplied true
-    * jump *label236 always
  1104 label *label235
  1105 label *label236
-    * jump *label234 always
  1106 label *label233
  1107 label *label234
  1108 sensor *tmp231 .core @silicon
 
  1131 setaddr :mineOre*retaddr *label252 (h:*label252)
  1132 call *label7 *invalid :mineOre*retval (m:*label252) (h:*label252)
  1133 label *label252
-    * jump *label251 always
  1134 label *label250
  1135 label *label251
  1136 label *label248
 
  1161 setaddr :mineOre*retaddr *label260 (h:*label260)
  1162 call *label7 *invalid :mineOre*retval (m:*label260) (h:*label260)
  1163 label *label260
-    * jump *label259 always
  1164 label *label258
  1165 label *label259
  1166 label *label256
  1167 set :supplyBase0:supplied true
-    * jump *label254 always
  1168 label *label253
  1169 label *label254
  1170 label *label246
-    * jump *label244 always
  1171 label *label243
  1172 label *label244
  1173 sensor *tmp250 .battery @totalPower
 
  1196 setaddr :mineOre*retaddr *label270 (h:*label270)
  1197 call *label7 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1198 label *label270
-    * jump *label269 always
  1199 label *label268
  1200 label *label269
  1201 label *label266
  1202 set :supplyBase0:supplied true
-    * jump *label264 always
  1203 label *label263
  1204 label *label264
-    * jump *label262 always
  1205 label *label261
  1206 label *label262
-    * jump *label232 always
  1207 label *label231
  1208 label *label232
  1209 sensor *tmp261 .core @titanium
 
  1305 label *label288
  1306 label *label282
  1307 label *label278
-    * jump *label276 always
  1308 label *label275
  1309 label *label276
  1310 jump *label274 always
 
  1384 setaddr :supplyBase1*retaddr *label327 (h:*label327)
  1385 call *label11 *invalid :supplyBase1*retval (m:*label327) (h:*label327)
  1386 label *label327
-    * jump *label321 always
  1387 label *label325
  1388 label *label321
  1389 label *label320
 
  1404 jump *label339 lessThan *tmp325 .targetMetaglass
  1405 set :targetMet*retval true
  1406 jump *label328 always
-    * jump *label340 always
  1407 label *label339
  1408 label *label340
-    * jump *label338 always
  1409 label *label337
  1410 label *label338
-    * jump *label336 always
  1411 label *label335
  1412 label *label336
-    * jump *label334 always
  1413 label *label333
  1414 label *label334
-    * jump *label332 always
  1415 label *label331
  1416 label *label332
-    * jump *label330 always
  1417 label *label329
  1418 label *label330
  1419 set :targetMet*retval false
 
  1529 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
  1530 set :buildBlockAt*retval :buildBlockAt:building
  1531 jump *label359 always
-    * jump *label365 always
  1532 label *label364
  1533 label *label365
  1534 jump *label366 equal :buildBlockAt:skipError false
  1535 set :buildBlockAt*retval null
  1536 jump *label359 always
-    * jump *label367 always
  1537 label *label366
  1538 label *label367
  1539 set :error.3:error "Cannot build at ("
  1540 set .ERROR :error.3:error
  1541 stop
  1542 label *label368
-    * jump *label363 always
  1543 label *label362
  1544 label *label363
  1545 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1549 jump *label372 notEqual :buildBlockAt:building null
  1550 set :buildBlockAt*retval null
  1551 jump *label359 always
-    * jump *label373 always
  1552 label *label372
  1553 label *label373
  1554 label *label370
 
  1601 label *label382
  1602 jump *label381 notEqual @unit :findUnits:firstUnit
  1603 label *label383
-    * jump *label380 always
  1604 label *label379
  1605 label *label380
  1606 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-37 instructions):
 
     7 set .smelter null
     8 set .titaniumDrill null
     9 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
-    * set .kiln null
    10 set .phase 0
    11 set .graphiteSurplus 20
    12 set .siliconSurplus 20
 
    24 setaddr :findUnits*retaddr *label24 (h:*label24)
    25 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
    26 label *label24
-    * write :findUnits:count .display ".monos"
+   27 write :findUnits:count processor1 ".monos"
    28 set :monos :findUnits*retval
    29 set :findUnits:type @flare
    30 setaddr :findUnits*retaddr *label25 (h:*label25)
    31 call *label19 *invalid :findUnits*retval (m:*label25) (h:*label25)
    32 label *label25
-    * write :findUnits:count .display ".flares"
+   33 write :findUnits:count processor1 ".flares"
    34 set :flares :findUnits*retval
    35 set :findUnits:type @poly
    36 setaddr :findUnits*retaddr *label26 (h:*label26)
    37 call *label19 *invalid :findUnits*retval (m:*label26) (h:*label26)
    38 label *label26
-    * write :findUnits:count .display ".polys"
+   39 write :findUnits:count processor1 ".polys"
    40 set :polys :findUnits*retval
    41 set :buildBlockFromCfg:block @graphite-press
    42 set :buildBlockFromCfg:offsetX -1.5
 
    49 set :buildBlockFromCfg:metaglass 0
    50 set :buildBlockFromCfg:rotation 0
    51 set :buildBlockFromCfg:config null
-    * setaddr *tmp75 *label31
    52 label *label28
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   53 op add :buildBlockFromCfg:x .coreX -1.5
+   54 op add :buildBlockFromCfg:y .coreY 2.5
+   55 set :buildBlock:block @graphite-press
    56 set :buildBlock:x :buildBlockFromCfg:x
    57 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   58 set :buildBlock:copper 75
+   59 set :buildBlock:lead 30
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label32 (h:*label32)
    67 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    68 label *label32
 
    72 multijump *tmp75 0 0 (m:marker0)
    73 multilabel *label31 (m:marker0)
    74 label *label30
-    * set *tmp74 null
    75 label *label27
    76 set .press *tmp74
    77 set :buildBlockFromCfg.1:block @battery
 
    85 set :buildBlockFromCfg.1:metaglass 0
    86 set :buildBlockFromCfg.1:rotation 0
    87 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp79 *label37
    88 label *label34
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   89 op add :buildBlockFromCfg.1:x .coreX 0
+   90 op add :buildBlockFromCfg.1:y .coreY 4
+   91 set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.1:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   94 set :buildBlock:copper 5
+   95 set :buildBlock:lead 20
+   96 set :buildBlock:graphite 0
+   97 set :buildBlock:silicon 0
+   98 set :buildBlock:titanium 0
+   99 set :buildBlock:metaglass 0
+  100 set :buildBlock:rotation 0
+  101 set :buildBlock:config null
   102 setaddr :buildBlock*retaddr *label38 (h:*label38)
   103 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
   104 label *label38
 
   108 multijump *tmp79 0 0 (m:marker1)
   109 multilabel *label37 (m:marker1)
   110 label *label36
-    * set *tmp78 null
   111 label *label33
   112 set .battery *tmp78
   113 set :buildBlockFromCfg.2:block @battery
 
   121 set :buildBlockFromCfg.2:metaglass 0
   122 set :buildBlockFromCfg.2:rotation 0
   123 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp83 *label43
   124 label *label40
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  125 op add :buildBlockFromCfg.2:x .coreX -1
+  126 op add :buildBlockFromCfg.2:y .coreY 4
+  127 set :buildBlock:block @battery
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  130 set :buildBlock:copper 5
+  131 set :buildBlock:lead 20
+  132 set :buildBlock:graphite 0
+  133 set :buildBlock:silicon 0
+  134 set :buildBlock:titanium 0
+  135 set :buildBlock:metaglass 0
+  136 set :buildBlock:rotation 0
+  137 set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label44 (h:*label44)
   139 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   140 label *label44
 
   155 set :buildBlockFromCfg.3:metaglass 0
   156 set :buildBlockFromCfg.3:rotation 0
   157 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp87 *label49
   158 label *label46
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  159 op add :buildBlockFromCfg.3:x .coreX 0
+  160 op add :buildBlockFromCfg.3:y .coreY 3
+  161 set :buildBlock:block @combustion-generator
   162 set :buildBlock:x :buildBlockFromCfg.3:x
   163 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  164 set :buildBlock:copper 25
+  165 set :buildBlock:lead 15
+  166 set :buildBlock:graphite 0
+  167 set :buildBlock:silicon 0
+  168 set :buildBlock:titanium 0
+  169 set :buildBlock:metaglass 0
+  170 set :buildBlock:rotation 0
+  171 set :buildBlock:config null
   172 setaddr :buildBlock*retaddr *label50 (h:*label50)
   173 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   174 label *label50
 
   178 multijump *tmp87 0 0 (m:marker3)
   179 multilabel *label49 (m:marker3)
   180 label *label48
-    * set *tmp86 null
   181 label *label45
   182 set .generator *tmp86
   183 set .powerTarget 800
 
   192 set :buildBlockFromCfg.4:metaglass 0
   193 set :buildBlockFromCfg.4:rotation 0
   194 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp91 *label55
   195 label *label52
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  196 op add :buildBlockFromCfg.4:x .coreX 1.5
+  197 op add :buildBlockFromCfg.4:y .coreY 2.5
+  198 set :buildBlock:block @silicon-smelter
   199 set :buildBlock:x :buildBlockFromCfg.4:x
   200 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  201 set :buildBlock:copper 30
+  202 set :buildBlock:lead 25
+  203 set :buildBlock:graphite 0
+  204 set :buildBlock:silicon 0
+  205 set :buildBlock:titanium 0
+  206 set :buildBlock:metaglass 0
+  207 set :buildBlock:rotation 0
+  208 set :buildBlock:config null
   209 setaddr :buildBlock*retaddr *label56 (h:*label56)
   210 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   211 label *label56
 
   215 multijump *tmp91 0 0 (m:marker4)
   216 multilabel *label55 (m:marker4)
   217 label *label54
-    * set *tmp90 null
   218 label *label51
   219 set .smelter *tmp90
   220 set :meetTarget:block @pneumatic-drill
 
   245 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   246 jump *label60 notEqual :buildTitaniumDrill:result false
   247 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  248 set .ERROR "Cannot locate spot for titanium drill"
   249 stop
   250 label *label62
   251 label *label60
 
   261 label *label63
   262 set *tmp94 :buildBlockAt*retval
   263 jump *label57 always
-    * set *tmp94 null
   264 label *label57
-    * set .titaniumDrill *tmp94
-    * write .titaniumDrill .display ".titaniumDrill"
-    * write .core .flareController ".core"
-    * write .titaniumDrill .flareController ".drill"
+  265 set .titaniumDrill :buildBlockAt*retval
+  266 write *tmp94 processor1 ".titaniumDrill"
+  267 write .core processor3 ".core"
+  268 write *tmp94 processor3 ".drill"
   269 set :buildBlockFromCfg.5:block @unloader
   270 set :buildBlockFromCfg.5:offsetX 0
   271 set :buildBlockFromCfg.5:offsetY 2
 
   277 set :buildBlockFromCfg.5:metaglass 0
   278 set :buildBlockFromCfg.5:rotation 0
   279 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp100 *label68
   280 label *label65
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  281 op add :buildBlockFromCfg.5:x .coreX 0
+  282 op add :buildBlockFromCfg.5:y .coreY 2
+  283 set :buildBlock:block @unloader
   284 set :buildBlock:x :buildBlockFromCfg.5:x
   285 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  286 set :buildBlock:copper 0
+  287 set :buildBlock:lead 0
+  288 set :buildBlock:graphite 0
+  289 set :buildBlock:silicon 30
+  290 set :buildBlock:titanium 25
+  291 set :buildBlock:metaglass 0
+  292 set :buildBlock:rotation 0
+  293 set :buildBlock:config null
   294 setaddr :buildBlock*retaddr *label69 (h:*label69)
   295 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   296 label *label69
 
   300 multijump *tmp100 0 0 (m:marker5)
   301 multilabel *label68 (m:marker5)
   302 label *label67
-    * set *tmp99 null
   303 label *label64
   304 set .unloader1 *tmp99
   305 set :buildBlockFromCfg.6:block @micro-processor
 
   313 set :buildBlockFromCfg.6:metaglass 0
   314 set :buildBlockFromCfg.6:rotation 0
   315 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp104 *label74
   316 label *label71
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  317 op add :buildBlockFromCfg.6:x .coreX 1
+  318 op add :buildBlockFromCfg.6:y .coreY 4
+  319 set :buildBlock:block @micro-processor
   320 set :buildBlock:x :buildBlockFromCfg.6:x
   321 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  322 set :buildBlock:copper 90
+  323 set :buildBlock:lead 50
+  324 set :buildBlock:graphite 0
+  325 set :buildBlock:silicon 50
+  326 set :buildBlock:titanium 0
+  327 set :buildBlock:metaglass 0
+  328 set :buildBlock:rotation 0
+  329 set :buildBlock:config processor2
   330 setaddr :buildBlock*retaddr *label75 (h:*label75)
   331 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)
   332 label *label75
 
   336 multijump *tmp104 0 0 (m:marker6)
   337 multilabel *label74 (m:marker6)
   338 label *label73
-    * set *tmp103 null
   339 label *label70
   340 set .controller *tmp103
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  341 write processor1 *tmp103 ".display"
+  342 write .core *tmp103 ".core"
+  343 write bank1 *tmp103 ".bank"
+  344 write *tmp78 *tmp103 ".battery"
+  345 write *tmp86 *tmp103 ".generator"
+  346 write *tmp90 *tmp103 ".smelter"
+  347 write *tmp74 *tmp103 ".press"
+  348 write :monos *tmp103 ".monos"
+  349 write :flares *tmp103 ".flares"
+  350 write :polys *tmp103 ".polys"
   351 set :buildBlockFromCfg.7:block @power-node
   352 set :buildBlockFromCfg.7:offsetX -2
   353 set :buildBlockFromCfg.7:offsetY -1
 
   359 set :buildBlockFromCfg.7:metaglass 0
   360 set :buildBlockFromCfg.7:rotation 0
   361 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp108 *label80
   362 label *label77
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  363 op add :buildBlockFromCfg.7:x .coreX -2
+  364 op add :buildBlockFromCfg.7:y .coreY -1
+  365 set :buildBlock:block @power-node
   366 set :buildBlock:x :buildBlockFromCfg.7:x
   367 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  368 set :buildBlock:copper 2
+  369 set :buildBlock:lead 6
+  370 set :buildBlock:graphite 0
+  371 set :buildBlock:silicon 0
+  372 set :buildBlock:titanium 0
+  373 set :buildBlock:metaglass 0
+  374 set :buildBlock:rotation 0
+  375 set :buildBlock:config null
   376 setaddr :buildBlock*retaddr *label81 (h:*label81)
   377 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   378 label *label81
 
   393 set :buildBlockFromCfg.8:metaglass 0
   394 set :buildBlockFromCfg.8:rotation 0
   395 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp112 *label86
   396 label *label83
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  397 op add :buildBlockFromCfg.8:x .coreX -2
+  398 op add :buildBlockFromCfg.8:y .coreY 1
+  399 set :buildBlock:block @unloader
   400 set :buildBlock:x :buildBlockFromCfg.8:x
   401 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  402 set :buildBlock:copper 0
+  403 set :buildBlock:lead 0
+  404 set :buildBlock:graphite 0
+  405 set :buildBlock:silicon 30
+  406 set :buildBlock:titanium 25
+  407 set :buildBlock:metaglass 0
+  408 set :buildBlock:rotation 0
+  409 set :buildBlock:config null
   410 setaddr :buildBlock*retaddr *label87 (h:*label87)
   411 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   412 label *label87
 
   416 multijump *tmp112 0 0 (m:marker8)
   417 multilabel *label86 (m:marker8)
   418 label *label85
-    * set *tmp111 null
   419 label *label82
   420 set .unloader2 *tmp111
-    * write .unloader2 .controller ".unloader2"
+  421 write *tmp111 *tmp103 ".unloader2"
   422 set :buildBlockFromCfg.9:block @overflow-gate
   423 set :buildBlockFromCfg.9:offsetX -3
   424 set :buildBlockFromCfg.9:offsetY 1
 
   430 set :buildBlockFromCfg.9:metaglass 0
   431 set :buildBlockFromCfg.9:rotation 0
   432 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp116 *label92
   433 label *label89
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  434 op add :buildBlockFromCfg.9:x .coreX -3
+  435 op add :buildBlockFromCfg.9:y .coreY 1
+  436 set :buildBlock:block @overflow-gate
   437 set :buildBlock:x :buildBlockFromCfg.9:x
   438 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  439 set :buildBlock:copper 4
+  440 set :buildBlock:lead 2
+  441 set :buildBlock:graphite 0
+  442 set :buildBlock:silicon 0
+  443 set :buildBlock:titanium 0
+  444 set :buildBlock:metaglass 0
+  445 set :buildBlock:rotation 0
+  446 set :buildBlock:config null
   447 setaddr :buildBlock*retaddr *label93 (h:*label93)
   448 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   449 label *label93
 
   464 set :buildBlockFromCfg.10:metaglass 0
   465 set :buildBlockFromCfg.10:rotation 3
   466 set :buildBlockFromCfg.10:config @mono
-    * setaddr *tmp120 *label98
   467 label *label95
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  468 op add :buildBlockFromCfg.10:x .coreX -4
+  469 op add :buildBlockFromCfg.10:y .coreY -1
+  470 set :buildBlock:block @air-factory
   471 set :buildBlock:x :buildBlockFromCfg.10:x
   472 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  473 set :buildBlock:copper 60
+  474 set :buildBlock:lead 70
+  475 set :buildBlock:graphite 0
+  476 set :buildBlock:silicon 0
+  477 set :buildBlock:titanium 0
+  478 set :buildBlock:metaglass 0
+  479 set :buildBlock:rotation 3
+  480 set :buildBlock:config @mono
   481 setaddr :buildBlock*retaddr *label99 (h:*label99)
   482 call *label18 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   483 label *label99
 
   487 multijump *tmp120 0 0 (m:marker10)
   488 multilabel *label98 (m:marker10)
   489 label *label97
-    * set *tmp119 null
   490 label *label94
   491 set .factory *tmp119
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
-    * write 2 .controller ".flareTarget"
+  492 write *tmp119 *tmp103 ".factory"
+  493 write *tmp119 processor1 ".factory"
+  494 write 2 *tmp103 ".flareTarget"
   495 set :buildUnits:unit @flare
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
-    * write :buildUnits:unit .controller ".unitToProduce"
+  496 write 0 processor1 ".totalTargets"
+  497 write null processor1 ".nextBlock"
+  498 write 0 *tmp103 ".leadReserve"
+  499 write 0 *tmp103 ".siliconReserve"
+  500 write @flare *tmp103 ".unitToProduce"
   501 label *label100
-    * op add .phase .phase 1
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  502 op add .phase 0 1
+  503 write 85 *tmp103 ".pressTarget"
+  504 write 150 *tmp103 ".smelterTarget"
+  505 write 30 *tmp103 ".kilnTarget"
   506 set :thoriumDrill true
   507 label *label101
-    * read *tmp35 .controller ".flares"
+  508 read *tmp35 *tmp103 ".flares"
   509 op greaterThan *tmp124 *tmp35 1
   510 op land *tmp125 :thoriumDrill *tmp124
   511 jump *label104 equal *tmp125 false
 
   516 setaddr :supplyBase1*retaddr *label107 (h:*label107)
   517 call *label11 *invalid :supplyBase1*retval (m:*label107) (h:*label107)
   518 label *label107
-    * sensor *tmp127 .battery @totalPower
+  519 sensor *tmp127 *tmp78 @totalPower
   520 jump *label108 greaterThanEq *tmp127 300
   521 jump *label103 always
   522 label *label108
   523 label *label109
   524 label *label102
-    * read *tmp34 .controller ".monos"
+  525 read *tmp34 *tmp103 ".monos"
   526 jump *label101 lessThan *tmp34 3
   527 label *label103
   528 set :buildBlockFromCfg.11:block @unloader
 
   536 set :buildBlockFromCfg.11:metaglass 0
   537 set :buildBlockFromCfg.11:rotation 0
   538 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp132 *label114
   539 label *label111
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  540 op add :buildBlockFromCfg.11:x .coreX 2
+  541 op add :buildBlockFromCfg.11:y .coreY 0
+  542 set :buildBlock:block @unloader
   543 set :buildBlock:x :buildBlockFromCfg.11:x
   544 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  545 set :buildBlock:copper 0
+  546 set :buildBlock:lead 0
+  547 set :buildBlock:graphite 0
+  548 set :buildBlock:silicon 30
+  549 set :buildBlock:titanium 25
+  550 set :buildBlock:metaglass 0
+  551 set :buildBlock:rotation 0
+  552 set :buildBlock:config null
   553 setaddr :buildBlock*retaddr *label115 (h:*label115)
   554 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   555 label *label115
 
   570 set :buildBlockFromCfg.12:metaglass 0
   571 set :buildBlockFromCfg.12:rotation 0
   572 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp136 *label120
   573 label *label117
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  574 op add :buildBlockFromCfg.12:x .coreX 3.5
+  575 op add :buildBlockFromCfg.12:y .coreY 0.5
+  576 set :buildBlock:block @kiln
   577 set :buildBlock:x :buildBlockFromCfg.12:x
   578 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  579 set :buildBlock:copper 60
+  580 set :buildBlock:lead 30
+  581 set :buildBlock:graphite 30
+  582 set :buildBlock:silicon 0
+  583 set :buildBlock:titanium 0
+  584 set :buildBlock:metaglass 0
+  585 set :buildBlock:rotation 0
+  586 set :buildBlock:config null
   587 setaddr :buildBlock*retaddr *label121 (h:*label121)
   588 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   589 label *label121
 
   593 multijump *tmp136 0 0 (m:marker12)
   594 multilabel *label120 (m:marker12)
   595 label *label119
-    * set *tmp135 null
   596 label *label116
   597 set .kiln *tmp135
-    * write .kiln .controller ".kiln"
+  598 write *tmp135 *tmp103 ".kiln"
   599 set :buildBlockFromCfg.13:block @junction
   600 set :buildBlockFromCfg.13:offsetX 2
   601 set :buildBlockFromCfg.13:offsetY 1
 
   607 set :buildBlockFromCfg.13:metaglass 0
   608 set :buildBlockFromCfg.13:rotation 0
   609 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp140 *label126
   610 label *label123
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  611 op add :buildBlockFromCfg.13:x .coreX 2
+  612 op add :buildBlockFromCfg.13:y .coreY 1
+  613 set :buildBlock:block @junction
   614 set :buildBlock:x :buildBlockFromCfg.13:x
   615 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  616 set :buildBlock:copper 3
+  617 set :buildBlock:lead 0
+  618 set :buildBlock:graphite 0
+  619 set :buildBlock:silicon 0
+  620 set :buildBlock:titanium 0
+  621 set :buildBlock:metaglass 0
+  622 set :buildBlock:rotation 0
+  623 set :buildBlock:config null
   624 setaddr :buildBlock*retaddr *label127 (h:*label127)
   625 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   626 label *label127
 
   641 set :buildBlockFromCfg.14:metaglass 30
   642 set :buildBlockFromCfg.14:rotation 0
   643 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp144 *label132
   644 label *label129
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  645 op add :buildBlockFromCfg.14:x .coreX -3.5
+  646 op add :buildBlockFromCfg.14:y .coreY 4.5
+  647 set :buildBlock:block @water-extractor
   648 set :buildBlock:x :buildBlockFromCfg.14:x
   649 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  650 set :buildBlock:copper 30
+  651 set :buildBlock:lead 30
+  652 set :buildBlock:graphite 30
+  653 set :buildBlock:silicon 0
+  654 set :buildBlock:titanium 0
+  655 set :buildBlock:metaglass 30
+  656 set :buildBlock:rotation 0
+  657 set :buildBlock:config null
   658 setaddr :buildBlock*retaddr *label133 (h:*label133)
   659 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   660 label *label133
 
   675 set :buildBlockFromCfg.15:metaglass 0
   676 set :buildBlockFromCfg.15:rotation 0
   677 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp148 *label138
   678 label *label135
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  679 op add :buildBlockFromCfg.15:x .coreX -3.5
+  680 op add :buildBlockFromCfg.15:y .coreY 2.5
+  681 set :buildBlock:block @steam-generator
   682 set :buildBlock:x :buildBlockFromCfg.15:x
   683 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  684 set :buildBlock:copper 35
+  685 set :buildBlock:lead 40
+  686 set :buildBlock:graphite 25
+  687 set :buildBlock:silicon 30
+  688 set :buildBlock:titanium 0
+  689 set :buildBlock:metaglass 0
+  690 set :buildBlock:rotation 0
+  691 set :buildBlock:config null
   692 setaddr :buildBlock*retaddr *label139 (h:*label139)
   693 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   694 label *label139
 
   698 multijump *tmp148 0 0 (m:marker15)
   699 multilabel *label138 (m:marker15)
   700 label *label137
-    * set *tmp147 null
   701 label *label134
   702 set .generator2 *tmp147
-    * write .generator2 .controller ".generator2"
+  703 write *tmp147 *tmp103 ".generator2"
   704 set :buildBlockFromCfg.16:block @battery-large
   705 set :buildBlockFromCfg.16:offsetX 4
   706 set :buildBlockFromCfg.16:offsetY 3
 
   712 set :buildBlockFromCfg.16:metaglass 0
   713 set :buildBlockFromCfg.16:rotation 0
   714 set :buildBlockFromCfg.16:config null
-    * setaddr *tmp152 *label144
   715 label *label141
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  716 op add :buildBlockFromCfg.16:x .coreX 4
+  717 op add :buildBlockFromCfg.16:y .coreY 3
+  718 set :buildBlock:block @battery-large
   719 set :buildBlock:x :buildBlockFromCfg.16:x
   720 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  721 set :buildBlock:copper 0
+  722 set :buildBlock:lead 50
+  723 set :buildBlock:graphite 0
+  724 set :buildBlock:silicon 30
+  725 set :buildBlock:titanium 20
+  726 set :buildBlock:metaglass 0
+  727 set :buildBlock:rotation 0
+  728 set :buildBlock:config null
   729 setaddr :buildBlock*retaddr *label145 (h:*label145)
   730 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   731 label *label145
 
   749 set :buildBlockFromCfg.17:metaglass 0
   750 set :buildBlockFromCfg.17:rotation 0
   751 set :buildBlockFromCfg.17:config @coal
-    * setaddr *tmp156 *label150
   752 label *label147
-    * op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
-    * op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.17:block
+  753 op add :buildBlockFromCfg.17:x .coreX -4
+  754 op add :buildBlockFromCfg.17:y .coreY 1
+  755 set :buildBlock:block @sorter
   756 set :buildBlock:x :buildBlockFromCfg.17:x
   757 set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper :buildBlockFromCfg.17:copper
-    * set :buildBlock:lead :buildBlockFromCfg.17:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.17:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.17:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.17:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.17:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.17:rotation
-    * set :buildBlock:config :buildBlockFromCfg.17:config
+  758 set :buildBlock:copper 2
+  759 set :buildBlock:lead 2
+  760 set :buildBlock:graphite 0
+  761 set :buildBlock:silicon 0
+  762 set :buildBlock:titanium 0
+  763 set :buildBlock:metaglass 0
+  764 set :buildBlock:rotation 0
+  765 set :buildBlock:config @coal
   766 setaddr :buildBlock*retaddr *label151 (h:*label151)
   767 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   768 label *label151
 
   772 multilabel *label150 (m:marker17)
   773 label *label149
   774 label *label146
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  775 write 0 processor1 ".totalTargets"
+  776 write null processor1 ".nextBlock"
   777 label *label152
   778 setaddr :supplyBase1*retaddr *label155 (h:*label155)
   779 call *label11 *invalid :supplyBase1*retval (m:*label155) (h:*label155)
   780 label *label155
   781 label *label153
-    * read *tmp35 .controller ".flares"
-    * read *tmp34 .controller ".monos"
+  782 read *tmp35 *tmp103 ".flares"
+  783 read *tmp34 *tmp103 ".monos"
   784 op add *tmp159 *tmp35 *tmp34
   785 jump *label152 lessThan *tmp159 16
   786 label *label154
 
   792 jump *label156 always
   793 label *label158
   794 ucontrol stop
-    * set :error.1:error "Done"
-    * set .ERROR :error.1:error
+  795 set .ERROR "Done"
   796 stop
   797 label *label160
   798 end
   799 label *label1
   800 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  801 write "Moving..." .display ".status3"
   802 label *label163
   803 label *label164
   804 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
 
   814 label *label2
   815 set *tmp164 :moveTo.1:x
   816 set *tmp165 :moveTo.1:y
-    * set :moveTo:x *tmp164
-    * set :moveTo:y *tmp165
+  817 set :moveTo:x :moveTo.1:x
+  818 set :moveTo:y :moveTo.1:y
   819 set :moveTo:radius 6
   820 setaddr :moveTo*retaddr *label168 (h:*label168)
   821 call *label1 *invalid :moveTo*retval (m:*label168) (h:*label168)
 
   825 end
   826 label *label3
   827 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  828 write "Moving..." .display ".status3"
   829 label *label170
   830 label *label171
   831 sensor *tmp166 @unit @firstItem
 
   855 end
   856 label *label5
   857 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+  858 write "Depositing..." .display ".status3"
   859 label *label179
   860 sensor *tmp173 @unit @firstItem
   861 jump *label180 notEqual *tmp173 :depositItems:item
 
   885 label *label181
   886 set :transportStatus:target 0
   887 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  888 write 0 .display ".transportTarget"
+  889 write null .display ".transportItem"
   890 label *label189
   891 label *label178
   892 return :depositItems*retaddr
 
   895 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
   896 jump *label191 notEqual *tmp183 false
   897 set :error.2:error "Cannot locate ore"
-    * set .ERROR :error.2:error
+  898 set .ERROR "Cannot locate ore"
   899 stop
   900 label *label193
   901 label *label191
 
   907 op min :mineOre:amount :mineOre:amount 30
   908 set :transportStatus.1:target :mineOre:amount
   909 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+  910 write :mineOre:amount .display ".transportTarget"
+  911 write :mineOre:ore .display ".transportItem"
   912 label *label195
   913 set :locateOre:ore :mineOre:ore
   914 setaddr :locateOre*retaddr *label196 (h:*label196)
 
   916 label *label196
   917 set :mineOre:x :locateOre:x
   918 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  919 set :moveToEmpty:x :locateOre:x
+  920 set :moveToEmpty:y :locateOre:y
   921 setaddr :moveToEmpty*retaddr *label197 (h:*label197)
   922 call *label3 *invalid :moveToEmpty*retval (m:*label197) (h:*label197)
   923 label *label197
 
   934 label *label198
   935 label *label199
   936 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+  937 write "Mining..." .display ".status3"
   938 label *label204
   939 op add :mineOre:stop @second 10
   940 label *label205
 
   968 set :status2:text "Mining "
   969 set :status2:item :mineOre.1:ore
   970 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  971 write "Mining " .display ".status2"
+  972 write :mineOre.1:ore .display ".item2"
+  973 write "core" .display ".block2"
   974 label *label214
   975 set :mineOre:ore :mineOre.1:ore
   976 set :mineOre:amount 30
 
   985 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   986 set :transportStatus.2:item :fetchBlock:item
   987 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+  988 write :fetchBlock:item .display ".transportItem"
   989 label *label217
   990 set :status2.1:text "Fetching "
   991 set :status2.1:item :fetchBlock:item
   992 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+  993 write "Fetching " .display ".status2"
+  994 write :fetchBlock:item .display ".item2"
+  995 write :fetchBlock:block .display ".block2"
   996 label *label218
   997 sensor *tmp205 :fetchBlock:block @x
   998 sensor *tmp206 :fetchBlock:block @y
 
  1042 sensor *tmp223 .press @coal
  1043 jump *label235 greaterThanEq *tmp223 5
  1044 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1045 write "Goal 1: graphite requirement" .display ".status1"
  1046 label *label237
  1047 set :supplyBlock:block .press
  1048 set :supplyBlock:ore @coal
  1049 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1050 set :status2.2:item @coal
+ 1051 set :status2.2:block .press
+ 1052 write "Supplying " .display ".status2"
+ 1053 write :supplyBlock:ore .display ".item2"
+ 1054 write :supplyBlock:block .display ".block2"
  1055 label *label239
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp227 :supplyBlock:block :supplyBlock:ore
+ 1056 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1057 sensor *tmp227 .press @coal
  1058 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp227
  1059 jump *label240 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1060 set :mineOre:ore @coal
  1061 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1062 set :mineOre:block .press
  1063 setaddr :mineOre*retaddr *label242 (h:*label242)
  1064 call *label7 *invalid :mineOre*retval (m:*label242) (h:*label242)
  1065 label *label242
 
  1076 sensor *tmp234 .smelter @coal
  1077 jump *label245 greaterThanEq *tmp234 5
  1078 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1079 write "Goal 2: coal for silicon requirement" .display ".status1"
  1080 label *label247
  1081 set :supplyBlock.1:block .smelter
  1082 set :supplyBlock.1:ore @coal
  1083 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1084 set :status2.3:item @coal
+ 1085 set :status2.3:block .smelter
+ 1086 write "Supplying " .display ".status2"
+ 1087 write :supplyBlock.1:ore .display ".item2"
+ 1088 write :supplyBlock.1:block .display ".block2"
  1089 label *label249
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp238 :supplyBlock.1:block :supplyBlock.1:ore
+ 1090 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1091 sensor *tmp238 .smelter @coal
  1092 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp238
  1093 jump *label250 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1094 set :mineOre:ore @coal
  1095 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1096 set :mineOre:block .smelter
  1097 setaddr :mineOre*retaddr *label252 (h:*label252)
  1098 call *label7 *invalid :mineOre*retval (m:*label252) (h:*label252)
  1099 label *label252
 
  1106 sensor *tmp242 .smelter @sand
  1107 jump *label253 greaterThanEq *tmp242 5
  1108 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1109 write "Goal 3: sand for silicon requirement" .display ".status1"
  1110 label *label255
  1111 set :supplyBlock.2:block .smelter
  1112 set :supplyBlock.2:ore @sand
  1113 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1114 set :status2.4:item @sand
+ 1115 set :status2.4:block .smelter
+ 1116 write "Supplying " .display ".status2"
+ 1117 write :supplyBlock.2:ore .display ".item2"
+ 1118 write :supplyBlock.2:block .display ".block2"
  1119 label *label257
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp246 :supplyBlock.2:block :supplyBlock.2:ore
+ 1120 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1121 sensor *tmp246 .smelter @sand
  1122 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp246
  1123 jump *label258 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1124 set :mineOre:ore @sand
  1125 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1126 set :mineOre:block .smelter
  1127 setaddr :mineOre*retaddr *label260 (h:*label260)
  1128 call *label7 *invalid :mineOre*retval (m:*label260) (h:*label260)
  1129 label *label260
 
  1141 sensor *tmp253 .generator @coal
  1142 jump *label263 greaterThanEq *tmp253 2
  1143 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1144 write "Goal 4: supplying generator" .display ".status1"
  1145 label *label265
  1146 set :supplyBlock.3:block .generator
  1147 set :supplyBlock.3:ore @coal
  1148 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1149 set :status2.5:item @coal
+ 1150 set :status2.5:block .generator
+ 1151 write "Supplying " .display ".status2"
+ 1152 write :supplyBlock.3:ore .display ".item2"
+ 1153 write :supplyBlock.3:block .display ".block2"
  1154 label *label267
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp257 :supplyBlock.3:block :supplyBlock.3:ore
+ 1155 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1156 sensor *tmp257 .generator @coal
  1157 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp257
  1158 jump *label268 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1159 set :mineOre:ore @coal
  1160 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1161 set :mineOre:block .generator
  1162 setaddr :mineOre*retaddr *label270 (h:*label270)
  1163 call *label7 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1164 label *label270
 
  1183 label *label272
  1184 set :supplyBase0:titaniumTrigger *tmp263
  1185 sensor *tmp267 .titaniumDrill @titanium
-    * jump *label273 greaterThanEq *tmp267 :supplyBase0:titaniumTrigger
+ 1186 jump *label273 greaterThanEq *tmp267 *tmp263
  1187 jump *label275 notEqual :supplyBase0:supplied false
  1188 sensor *tmp272 .battery @totalPower
  1189 op mul *tmp273 .unloader1 .powerTarget
  1190 jump *label277 greaterThanEq *tmp272 *tmp273
  1191 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1192 write "Goal 5: supplying generator" .display ".status1"
  1193 label *label279
  1194 set :mineOre.1:ore @coal
  1195 setaddr :mineOre.1*retaddr *label280 (h:*label280)
 
  1200 sensor *tmp276 .core @silicon
  1201 jump *label281 greaterThanEq *tmp276 .targetSilicon
  1202 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1203 write "Goal 6: silicon requirement" .display ".status1"
  1204 label *label283
  1205 sensor :supplyBase0:coal .core @coal
  1206 sensor :supplyBase0:sand .core @sand
 
  1211 set *tmp282 @sand
  1212 label *label285
  1213 set :supplyBase0:ore *tmp282
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1214 set :mineOre.1:ore *tmp282
  1215 setaddr :mineOre.1*retaddr *label286 (h:*label286)
  1216 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
  1217 label *label286
 
  1220 sensor *tmp283 .core @copper
  1221 jump *label287 greaterThanEq *tmp283 .targetCopper
  1222 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1223 write "Goal 7: copper requirement" .display ".status1"
  1224 label *label289
  1225 set :mineOre.1:ore @copper
  1226 setaddr :mineOre.1*retaddr *label290 (h:*label290)
 
  1231 sensor *tmp286 .core @lead
  1232 jump *label291 greaterThanEq *tmp286 .targetLead
  1233 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1234 write "Goal 8: lead requirement" .display ".status1"
  1235 label *label293
  1236 set :mineOre.1:ore @lead
  1237 setaddr :mineOre.1*retaddr *label294 (h:*label294)
 
  1242 sensor *tmp289 .core @metaglass
  1243 jump *label295 greaterThanEq *tmp289 .targetMetaglass
  1244 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1245 write "Goal 9: metaglass requirement" .display ".status1"
  1246 label *label297
  1247 set :mineOre.1:ore @sand
  1248 setaddr :mineOre.1*retaddr *label298 (h:*label298)
 
  1251 jump *label296 always
  1252 label *label295
  1253 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1254 write "Goal 10: supplying base" .display ".status1"
  1255 label *label299
  1256 sensor :supplyBase0:coal.1 .core @coal
  1257 sensor :supplyBase0:sand.1 .core @sand
 
  1262 set *tmp295 @sand
  1263 label *label301
  1264 set :supplyBase0:ore.1 *tmp295
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1265 set :mineOre.1:ore *tmp295
  1266 setaddr :mineOre.1*retaddr *label302 (h:*label302)
  1267 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
  1268 label *label302
 
  1276 jump *label274 always
  1277 label *label273
  1278 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1279 write "Goal 11: Fetching titanium" .display ".status1"
  1280 label *label303
  1281 set :fetchBlock:block .titaniumDrill
  1282 set :fetchBlock:item @titanium
 
  1295 sensor *tmp301 .core @lead
  1296 jump *label308 greaterThanEq *tmp300 *tmp301
  1297 set :status1.11:text "Phase 1: mining sand"
-    * write :status1.11:text .display ".status1"
+ 1298 write "Phase 1: mining sand" .display ".status1"
  1299 label *label310
  1300 set :mineOre.1:ore @sand
  1301 setaddr :mineOre.1*retaddr *label311 (h:*label311)
 
  1304 jump *label309 always
  1305 label *label308
  1306 set :status1.12:text "Phase 1: mining lead"
-    * write :status1.12:text .display ".status1"
+ 1307 write "Phase 1: mining lead" .display ".status1"
  1308 label *label312
  1309 set :mineOre.1:ore @lead
  1310 setaddr :mineOre.1*retaddr *label313 (h:*label313)
 
  1317 sensor *tmp305 .core @lead
  1318 jump *label314 greaterThanEq *tmp304 *tmp305
  1319 set :status1.13:text "Phase 1: mining coal"
-    * write :status1.13:text .display ".status1"
+ 1320 write "Phase 1: mining coal" .display ".status1"
  1321 label *label316
  1322 set :mineOre.1:ore @coal
  1323 setaddr :mineOre.1*retaddr *label317 (h:*label317)
 
  1326 jump *label315 always
  1327 label *label314
  1328 set :status1.14:text "Phase 1: mining lead"
-    * write :status1.14:text .display ".status1"
+ 1329 write "Phase 1: mining lead" .display ".status1"
  1330 label *label318
  1331 set :mineOre.1:ore @lead
  1332 setaddr :mineOre.1*retaddr *label319 (h:*label319)
 
  1384 label *label330
  1385 set :targetMet*retval false
  1386 jump *label328 always
-    * set :targetMet*retval null
  1387 label *label328
  1388 return :targetMet*retaddr
  1389 end
 
  1468 op floor *tmp343 @second
  1469 op mul *tmp344 *tmp343 1000
  1470 op add *tmp345 :log:encodedId *tmp344
-    * write *tmp345 bank1 *tmp341
+ 1471 write *tmp345 bank1 *tmp340
  1472 label *label356
  1473 return :log*retaddr
  1474 end
 
  1487 call *label2 *invalid :moveTo.1*retval (m:*label360) (h:*label360)
  1488 label *label360
  1489 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1490 write "Building..." .display ".status3"
  1491 label *label361
  1492 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1493 jump *label362 equal :buildBlockAt:building null
 
  1502 label *label366
  1503 label *label367
  1504 set :error.3:error "Cannot build at ("
-    * set .ERROR :error.3:error
+ 1505 set .ERROR "Cannot build at ("
  1506 stop
  1507 label *label368
  1508 label *label362
 
  1525 label *label374
  1526 set :buildBlockAt*retval :buildBlockAt:building
  1527 jump *label359 always
-    * set :buildBlockAt*retval null
  1528 label *label359
  1529 return :buildBlockAt*retaddr
  1530 end
 
  1550 label *label377
  1551 set :buildBlock*retval :buildBlockAt*retval
  1552 jump *label375 always
-    * set :buildBlock*retval null
  1553 label *label375
  1554 return :buildBlock*retaddr
  1555 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-265 instructions):
 
    19 jump *label21 equal .core null
    20 label *label23
    21 set .display processor1
-    * set .flareController processor3
    22 set :findUnits:type @mono
    23 setaddr :findUnits*retaddr *label24 (h:*label24)
    24 call *label19 *invalid :findUnits*retval (m:*label24) (h:*label24)
 
    37 label *label26
    38 write :findUnits:count processor1 ".polys"
    39 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    40 label *label28
    41 op add :buildBlockFromCfg:x .coreX -1.5
    42 op add :buildBlockFromCfg:y .coreY 2.5
 
    62 label *label30
    63 label *label27
    64 set .press *tmp74
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    65 label *label34
    66 op add :buildBlockFromCfg.1:x .coreX 0
    67 op add :buildBlockFromCfg.1:y .coreY 4
 
    87 label *label36
    88 label *label33
    89 set .battery *tmp78
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    90 label *label40
    91 op add :buildBlockFromCfg.2:x .coreX -1
    92 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    93 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   94 set :buildBlock:y :buildBlockFromCfg.1:y
    95 set :buildBlock:graphite 0
    96 set :buildBlock:silicon 0
    97 set :buildBlock:titanium 0
 
   107 multilabel *label43 (m:marker2)
   108 label *label42
   109 label *label39
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   110 label *label46
   111 op add :buildBlockFromCfg.3:x .coreX 0
   112 op add :buildBlockFromCfg.3:y .coreY 3
   113 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  114 set :buildBlock:x :buildBlockFromCfg.1:x
   115 set :buildBlock:y :buildBlockFromCfg.3:y
   116 set :buildBlock:copper 25
   117 set :buildBlock:lead 15
 
   133 label *label45
   134 set .generator *tmp86
   135 set .powerTarget 800
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   136 label *label52
   137 op add :buildBlockFromCfg.4:x .coreX 1.5
   138 op add :buildBlockFromCfg.4:y .coreY 2.5
   139 set :buildBlock:block @silicon-smelter
   140 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  141 set :buildBlock:y :buildBlockFromCfg:y
   142 set :buildBlock:copper 30
   143 set :buildBlock:lead 25
   144 set :buildBlock:graphite 0
 
   185 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   186 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   187 jump *label60 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   188 set .ERROR "Cannot locate spot for titanium drill"
   189 stop
   190 label *label62
 
   203 jump *label57 always
   204 label *label57
   205 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp94 processor1 ".titaniumDrill"
+  206 write :buildBlockAt*retval processor1 ".titaniumDrill"
   207 write .core processor3 ".core"
-    * write *tmp94 processor3 ".drill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  208 write :buildBlockAt*retval processor3 ".drill"
   209 label *label65
   210 op add :buildBlockFromCfg.5:x .coreX 0
   211 op add :buildBlockFromCfg.5:y .coreY 2
   212 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  213 set :buildBlock:x :buildBlockFromCfg.1:x
   214 set :buildBlock:y :buildBlockFromCfg.5:y
   215 set :buildBlock:copper 0
   216 set :buildBlock:lead 0
 
   231 label *label67
   232 label *label64
   233 set .unloader1 *tmp99
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   234 label *label71
   235 op add :buildBlockFromCfg.6:x .coreX 1
   236 op add :buildBlockFromCfg.6:y .coreY 4
   237 set :buildBlock:block @micro-processor
   238 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  239 set :buildBlock:y :buildBlockFromCfg.1:y
   240 set :buildBlock:copper 90
   241 set :buildBlock:lead 50
   242 set :buildBlock:graphite 0
 
   266 write :monos *tmp103 ".monos"
   267 write :flares *tmp103 ".flares"
   268 write :polys *tmp103 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   269 label *label77
   270 op add :buildBlockFromCfg.7:x .coreX -2
   271 op add :buildBlockFromCfg.7:y .coreY -1
 
   289 multilabel *label80 (m:marker7)
   290 label *label79
   291 label *label76
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 1
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   292 label *label83
   293 op add :buildBlockFromCfg.8:x .coreX -2
   294 op add :buildBlockFromCfg.8:y .coreY 1
   295 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  296 set :buildBlock:x :buildBlockFromCfg.7:x
   297 set :buildBlock:y :buildBlockFromCfg.8:y
   298 set :buildBlock:copper 0
   299 set :buildBlock:lead 0
 
   313 multilabel *label86 (m:marker8)
   314 label *label85
   315 label *label82
-    * set .unloader2 *tmp111
   316 write *tmp111 *tmp103 ".unloader2"
-    * set :buildBlockFromCfg.9:block @overflow-gate
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 4
-    * set :buildBlockFromCfg.9:lead 2
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   317 label *label89
   318 op add :buildBlockFromCfg.9:x .coreX -3
   319 op add :buildBlockFromCfg.9:y .coreY 1
   320 set :buildBlock:block @overflow-gate
   321 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  322 set :buildBlock:y :buildBlockFromCfg.8:y
   323 set :buildBlock:copper 4
   324 set :buildBlock:lead 2
   325 set :buildBlock:graphite 0
 
   337 multilabel *label92 (m:marker9)
   338 label *label91
   339 label *label88
-    * set :buildBlockFromCfg.10:block @air-factory
-    * set :buildBlockFromCfg.10:offsetX -4
-    * set :buildBlockFromCfg.10:offsetY -1
-    * set :buildBlockFromCfg.10:copper 60
-    * set :buildBlockFromCfg.10:lead 70
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 3
-    * set :buildBlockFromCfg.10:config @mono
   340 label *label95
   341 op add :buildBlockFromCfg.10:x .coreX -4
   342 op add :buildBlockFromCfg.10:y .coreY -1
   343 set :buildBlock:block @air-factory
   344 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  345 set :buildBlock:y :buildBlockFromCfg.7:y
   346 set :buildBlock:copper 60
   347 set :buildBlock:lead 70
   348 set :buildBlock:graphite 0
 
   361 multilabel *label98 (m:marker10)
   362 label *label97
   363 label *label94
-    * set .factory *tmp119
   364 write *tmp119 *tmp103 ".factory"
   365 write *tmp119 processor1 ".factory"
   366 write 2 *tmp103 ".flareTarget"
-    * set :buildUnits:unit @flare
   367 write 0 processor1 ".totalTargets"
   368 write null processor1 ".nextBlock"
   369 write 0 *tmp103 ".leadReserve"
 
   396 read *tmp34 *tmp103 ".monos"
   397 jump *label101 lessThan *tmp34 3
   398 label *label103
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   399 label *label111
   400 op add :buildBlockFromCfg.11:x .coreX 2
   401 op add :buildBlockFromCfg.11:y .coreY 0
 
   419 multilabel *label114 (m:marker11)
   420 label *label113
   421 label *label110
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   422 label *label117
   423 op add :buildBlockFromCfg.12:x .coreX 3.5
   424 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   443 multilabel *label120 (m:marker12)
   444 label *label119
   445 label *label116
-    * set .kiln *tmp135
   446 write *tmp135 *tmp103 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   447 label *label123
   448 op add :buildBlockFromCfg.13:x .coreX 2
   449 op add :buildBlockFromCfg.13:y .coreY 1
   450 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  451 set :buildBlock:x :buildBlockFromCfg.11:x
+  452 set :buildBlock:y :buildBlockFromCfg.8:y
   453 set :buildBlock:copper 3
   454 set :buildBlock:lead 0
   455 set :buildBlock:graphite 0
 
   467 multilabel *label126 (m:marker13)
   468 label *label125
   469 label *label122
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   470 label *label129
   471 op add :buildBlockFromCfg.14:x .coreX -3.5
   472 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   490 multilabel *label132 (m:marker14)
   491 label *label131
   492 label *label128
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   493 label *label135
   494 op add :buildBlockFromCfg.15:x .coreX -3.5
   495 op add :buildBlockFromCfg.15:y .coreY 2.5
   496 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  497 set :buildBlock:x :buildBlockFromCfg.14:x
+  498 set :buildBlock:y :buildBlockFromCfg:y
   499 set :buildBlock:copper 35
   500 set :buildBlock:lead 40
   501 set :buildBlock:graphite 25
   502 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   503 set :buildBlock:metaglass 0
   504 set :buildBlock:rotation 0
   505 set :buildBlock:config null
 
   513 multilabel *label138 (m:marker15)
   514 label *label137
   515 label *label134
-    * set .generator2 *tmp147
   516 write *tmp147 *tmp103 ".generator2"
-    * set :buildBlockFromCfg.16:block @battery-large
-    * set :buildBlockFromCfg.16:offsetX 4
-    * set :buildBlockFromCfg.16:offsetY 3
-    * set :buildBlockFromCfg.16:copper 0
-    * set :buildBlockFromCfg.16:lead 50
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 30
-    * set :buildBlockFromCfg.16:titanium 20
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config null
   517 label *label141
   518 op add :buildBlockFromCfg.16:x .coreX 4
   519 op add :buildBlockFromCfg.16:y .coreY 3
   520 set :buildBlock:block @battery-large
   521 set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  522 set :buildBlock:y :buildBlockFromCfg.3:y
   523 set :buildBlock:copper 0
   524 set :buildBlock:lead 50
   525 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
   526 set :buildBlock:titanium 20
   527 set :buildBlock:metaglass 0
   528 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   529 setaddr :buildBlock*retaddr *label145 (h:*label145)
   530 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   531 label *label145
 
   538 set .graphiteSurplus 100
   539 set .siliconSurplus 1000
   540 set .metaglassSurplus 100
-    * set :buildBlockFromCfg.17:block @sorter
-    * set :buildBlockFromCfg.17:offsetX -4
-    * set :buildBlockFromCfg.17:offsetY 1
-    * set :buildBlockFromCfg.17:copper 2
-    * set :buildBlockFromCfg.17:lead 2
-    * set :buildBlockFromCfg.17:graphite 0
-    * set :buildBlockFromCfg.17:silicon 0
-    * set :buildBlockFromCfg.17:titanium 0
-    * set :buildBlockFromCfg.17:metaglass 0
-    * set :buildBlockFromCfg.17:rotation 0
-    * set :buildBlockFromCfg.17:config @coal
   541 label *label147
   542 op add :buildBlockFromCfg.17:x .coreX -4
   543 op add :buildBlockFromCfg.17:y .coreY 1
   544 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.17:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
+  545 set :buildBlock:x :buildBlockFromCfg.10:x
+  546 set :buildBlock:y :buildBlockFromCfg.8:y
   547 set :buildBlock:copper 2
   548 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   549 set :buildBlock:silicon 0
   550 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   551 set :buildBlock:config @coal
   552 setaddr :buildBlock*retaddr *label151 (h:*label151)
   553 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
 
   583 label *label160
   584 end
   585 label *label1
-    * set :status3:text "Moving..."
   586 write "Moving..." .display ".status3"
   587 label *label163
   588 label *label164
 
   597 return :moveTo*retaddr
   598 end
   599 label *label2
-    * set *tmp164 :moveTo.1:x
-    * set *tmp165 :moveTo.1:y
   600 set :moveTo:x :moveTo.1:x
   601 set :moveTo:y :moveTo.1:y
   602 set :moveTo:radius 6
 
   607 return :moveTo.1*retaddr
   608 end
   609 label *label3
-    * set :status3.1:text "Moving..."
   610 write "Moving..." .display ".status3"
   611 label *label170
   612 label *label171
 
   636 return :moveToBlock*retaddr
   637 end
   638 label *label5
-    * set :status3.2:text "Depositing..."
   639 write "Depositing..." .display ".status3"
   640 label *label179
   641 sensor *tmp173 @unit @firstItem
 
   664 jump *label186 always
   665 label *label188
   666 label *label181
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   667 write 0 .display ".transportTarget"
   668 write null .display ".transportItem"
   669 label *label189
 
   673 label *label6
   674 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
   675 jump *label191 notEqual *tmp183 false
-    * set :error.2:error "Cannot locate ore"
   676 set .ERROR "Cannot locate ore"
   677 stop
   678 label *label193
 
   683 end
   684 label *label7
   685 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   686 write :mineOre:amount .display ".transportTarget"
   687 write :mineOre:ore .display ".transportItem"
   688 label *label195
 
   709 label *label200
   710 label *label198
   711 label *label199
-    * set :status3.3:text "Mining..."
   712 write "Mining..." .display ".status3"
   713 label *label204
   714 op add :mineOre:stop @second 10
 
   740 return :mineOre*retaddr
   741 end
   742 label *label8
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   743 write "Mining " .display ".status2"
   744 write :mineOre.1:ore .display ".item2"
   745 write "core" .display ".block2"
 
   755 end
   756 label *label9
   757 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   758 write :transportStatus.2:target .display ".transportTarget"
   759 write :fetchBlock:item .display ".transportItem"
   760 label *label217
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   761 write "Fetching " .display ".status2"
   762 write :fetchBlock:item .display ".item2"
   763 write :fetchBlock:block .display ".block2"
 
   809 jump *label233 greaterThanEq *tmp220 .targetGraphite
   810 sensor *tmp223 .press @coal
   811 jump *label235 greaterThanEq *tmp223 5
-    * set :status1:text "Goal 1: graphite requirement"
   812 write "Goal 1: graphite requirement" .display ".status1"
   813 label *label237
   814 set :supplyBlock:block .press
   815 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
   816 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  817 write @coal .display ".item2"
+  818 write .press .display ".block2"
   819 label *label239
   820 sensor :supplyBlock:blockCapacity .press @itemCapacity
   821 sensor *tmp227 .press @coal
 
   839 jump *label243 greaterThanEq *tmp231 .targetSilicon
   840 sensor *tmp234 .smelter @coal
   841 jump *label245 greaterThanEq *tmp234 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
   842 write "Goal 2: coal for silicon requirement" .display ".status1"
   843 label *label247
   844 set :supplyBlock.1:block .smelter
   845 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
   846 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+  847 write @coal .display ".item2"
+  848 write .smelter .display ".block2"
   849 label *label249
   850 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   851 sensor *tmp238 .smelter @coal
 
   865 label *label245
   866 sensor *tmp242 .smelter @sand
   867 jump *label253 greaterThanEq *tmp242 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
   868 write "Goal 3: sand for silicon requirement" .display ".status1"
   869 label *label255
   870 set :supplyBlock.2:block .smelter
   871 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
   872 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+  873 write @sand .display ".item2"
+  874 write .smelter .display ".block2"
   875 label *label257
   876 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   877 sensor *tmp246 .smelter @sand
 
   896 jump *label261 greaterThanEq *tmp250 .powerTarget
   897 sensor *tmp253 .generator @coal
   898 jump *label263 greaterThanEq *tmp253 2
-    * set :status1.3:text "Goal 4: supplying generator"
   899 write "Goal 4: supplying generator" .display ".status1"
   900 label *label265
   901 set :supplyBlock.3:block .generator
   902 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
   903 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+  904 write @coal .display ".item2"
+  905 write .generator .display ".block2"
   906 label *label267
   907 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   908 sensor *tmp257 .generator @coal
 
   933 label *label271
   934 set *tmp263 100
   935 label *label272
-    * set :supplyBase0:titaniumTrigger *tmp263
   936 sensor *tmp267 .titaniumDrill @titanium
   937 jump *label273 greaterThanEq *tmp267 *tmp263
   938 jump *label275 notEqual :supplyBase0:supplied false
   939 sensor *tmp272 .battery @totalPower
   940 op mul *tmp273 .unloader1 .powerTarget
   941 jump *label277 greaterThanEq *tmp272 *tmp273
-    * set :status1.4:text "Goal 5: supplying generator"
   942 write "Goal 5: supplying generator" .display ".status1"
   943 label *label279
   944 set :mineOre.1:ore @coal
 
   949 label *label277
   950 sensor *tmp276 .core @silicon
   951 jump *label281 greaterThanEq *tmp276 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
   952 write "Goal 6: silicon requirement" .display ".status1"
   953 label *label283
   954 sensor :supplyBase0:coal .core @coal
 
   959 label *label284
   960 set *tmp282 @sand
   961 label *label285
-    * set :supplyBase0:ore *tmp282
   962 set :mineOre.1:ore *tmp282
   963 setaddr :mineOre.1*retaddr *label286 (h:*label286)
   964 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
 
   967 label *label281
   968 sensor *tmp283 .core @copper
   969 jump *label287 greaterThanEq *tmp283 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
   970 write "Goal 7: copper requirement" .display ".status1"
   971 label *label289
   972 set :mineOre.1:ore @copper
 
   977 label *label287
   978 sensor *tmp286 .core @lead
   979 jump *label291 greaterThanEq *tmp286 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
   980 write "Goal 8: lead requirement" .display ".status1"
   981 label *label293
   982 set :mineOre.1:ore @lead
 
   987 label *label291
   988 sensor *tmp289 .core @metaglass
   989 jump *label295 greaterThanEq *tmp289 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
   990 write "Goal 9: metaglass requirement" .display ".status1"
   991 label *label297
   992 set :mineOre.1:ore @sand
 
   995 label *label298
   996 jump *label296 always
   997 label *label295
-    * set :status1.9:text "Goal 10: supplying base"
   998 write "Goal 10: supplying base" .display ".status1"
   999 label *label299
  1000 sensor :supplyBase0:coal.1 .core @coal
 
  1005 label *label300
  1006 set *tmp295 @sand
  1007 label *label301
-    * set :supplyBase0:ore.1 *tmp295
  1008 set :mineOre.1:ore *tmp295
  1009 setaddr :mineOre.1*retaddr *label302 (h:*label302)
  1010 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
 
  1018 label *label276
  1019 jump *label274 always
  1020 label *label273
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1021 write "Goal 11: Fetching titanium" .display ".status1"
  1022 label *label303
  1023 set :fetchBlock:block .titaniumDrill
 
  1036 sensor *tmp300 .core @sand
  1037 sensor *tmp301 .core @lead
  1038 jump *label308 greaterThanEq *tmp300 *tmp301
-    * set :status1.11:text "Phase 1: mining sand"
  1039 write "Phase 1: mining sand" .display ".status1"
  1040 label *label310
  1041 set :mineOre.1:ore @sand
 
  1044 label *label311
  1045 jump *label309 always
  1046 label *label308
-    * set :status1.12:text "Phase 1: mining lead"
  1047 write "Phase 1: mining lead" .display ".status1"
  1048 label *label312
  1049 set :mineOre.1:ore @lead
 
  1056 sensor *tmp304 .core @coal
  1057 sensor *tmp305 .core @lead
  1058 jump *label314 greaterThanEq *tmp304 *tmp305
-    * set :status1.13:text "Phase 1: mining coal"
  1059 write "Phase 1: mining coal" .display ".status1"
  1060 label *label316
  1061 set :mineOre.1:ore @coal
 
  1064 label *label317
  1065 jump *label315 always
  1066 label *label314
-    * set :status1.14:text "Phase 1: mining lead"
  1067 write "Phase 1: mining lead" .display ".status1"
  1068 label *label318
  1069 set :mineOre.1:ore @lead
 
  1202 read *tmp64 bank1 511
  1203 op sub *tmp340 *tmp64 1
  1204 write *tmp340 bank1 511
-    * set *tmp341 *tmp340
  1205 op floor *tmp343 @second
  1206 op mul *tmp344 *tmp343 1000
  1207 op add *tmp345 :log:encodedId *tmp344
 
  1223 setaddr :moveTo.1*retaddr *label360 (h:*label360)
  1224 call *label2 *invalid :moveTo.1*retval (m:*label360) (h:*label360)
  1225 label *label360
-    * set :status3.4:text "Building..."
  1226 write "Building..." .display ".status3"
  1227 label *label361
  1228 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1237 jump *label359 always
  1238 label *label366
  1239 label *label367
-    * set :error.3:error "Cannot build at ("
  1240 set .ERROR "Cannot build at ("
  1241 stop
  1242 label *label368

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-30 instructions):
 
    89 set .battery *tmp78
    90 label *label40
    91 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    92 set :buildBlock:x :buildBlockFromCfg.2:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
    94 set :buildBlock:graphite 0
 
   107 label *label42
   108 label *label39
   109 label *label46
-    * op add :buildBlockFromCfg.3:x .coreX 0
   110 op add :buildBlockFromCfg.3:y .coreY 3
   111 set :buildBlock:block @combustion-generator
   112 set :buildBlock:x :buildBlockFromCfg.1:x
 
   133 set .powerTarget 800
   134 label *label52
   135 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   136 set :buildBlock:block @silicon-smelter
   137 set :buildBlock:x :buildBlockFromCfg.4:x
   138 set :buildBlock:y :buildBlockFromCfg:y
 
   196 setaddr :buildBlockAt*retaddr *label63 (h:*label63)
   197 call *label17 *invalid :buildBlockAt*retval (m:*label63) (h:*label63)
   198 label *label63
-    * set *tmp94 :buildBlockAt*retval
   199 jump *label57 always
   200 label *label57
   201 set .titaniumDrill :buildBlockAt*retval
 
   203 write .core processor3 ".core"
   204 write :buildBlockAt*retval processor3 ".drill"
   205 label *label65
-    * op add :buildBlockFromCfg.5:x .coreX 0
   206 op add :buildBlockFromCfg.5:y .coreY 2
   207 set :buildBlock:block @unloader
   208 set :buildBlock:x :buildBlockFromCfg.1:x
 
   228 set .unloader1 *tmp99
   229 label *label71
   230 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   231 set :buildBlock:block @micro-processor
   232 set :buildBlock:x :buildBlockFromCfg.6:x
   233 set :buildBlock:y :buildBlockFromCfg.1:y
 
   284 label *label79
   285 label *label76
   286 label *label83
-    * op add :buildBlockFromCfg.8:x .coreX -2
   287 op add :buildBlockFromCfg.8:y .coreY 1
   288 set :buildBlock:block @unloader
   289 set :buildBlock:x :buildBlockFromCfg.7:x
 
   309 write *tmp111 *tmp103 ".unloader2"
   310 label *label89
   311 op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY 1
   312 set :buildBlock:block @overflow-gate
   313 set :buildBlock:x :buildBlockFromCfg.9:x
   314 set :buildBlock:y :buildBlockFromCfg.8:y
 
   331 label *label88
   332 label *label95
   333 op add :buildBlockFromCfg.10:x .coreX -4
-    * op add :buildBlockFromCfg.10:y .coreY -1
   334 set :buildBlock:block @air-factory
   335 set :buildBlock:x :buildBlockFromCfg.10:x
   336 set :buildBlock:y :buildBlockFromCfg.7:y
 
   395 set :buildBlock:y :buildBlockFromCfg.11:y
   396 set :buildBlock:copper 0
   397 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   398 set :buildBlock:silicon 30
   399 set :buildBlock:titanium 25
   400 set :buildBlock:metaglass 0
 
   435 label *label116
   436 write *tmp135 *tmp103 ".kiln"
   437 label *label123
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   438 set :buildBlock:block @junction
   439 set :buildBlock:x :buildBlockFromCfg.11:x
   440 set :buildBlock:y :buildBlockFromCfg.8:y
 
   464 set :buildBlock:copper 30
   465 set :buildBlock:lead 30
   466 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   467 set :buildBlock:metaglass 30
   468 set :buildBlock:rotation 0
   469 set :buildBlock:config null
 
   477 label *label131
   478 label *label128
   479 label *label135
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   480 set :buildBlock:block @steam-generator
   481 set :buildBlock:x :buildBlockFromCfg.14:x
   482 set :buildBlock:y :buildBlockFromCfg:y
 
   486 set :buildBlock:silicon 30
   487 set :buildBlock:metaglass 0
   488 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   489 setaddr :buildBlock*retaddr *label139 (h:*label139)
   490 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   491 label *label139
 
   499 write *tmp147 *tmp103 ".generator2"
   500 label *label141
   501 op add :buildBlockFromCfg.16:x .coreX 4
-    * op add :buildBlockFromCfg.16:y .coreY 3
   502 set :buildBlock:block @battery-large
   503 set :buildBlock:x :buildBlockFromCfg.16:x
   504 set :buildBlock:y :buildBlockFromCfg.3:y
 
   506 set :buildBlock:lead 50
   507 set :buildBlock:graphite 0
   508 set :buildBlock:titanium 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   509 setaddr :buildBlock*retaddr *label145 (h:*label145)
   510 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   511 label *label145
 
   519 set .siliconSurplus 1000
   520 set .metaglassSurplus 100
   521 label *label147
-    * op add :buildBlockFromCfg.17:x .coreX -4
-    * op add :buildBlockFromCfg.17:y .coreY 1
   522 set :buildBlock:block @sorter
   523 set :buildBlock:x :buildBlockFromCfg.10:x
   524 set :buildBlock:y :buildBlockFromCfg.8:y
 
   789 jump *label235 greaterThanEq *tmp223 5
   790 write "Goal 1: graphite requirement" .display ".status1"
   791 label *label237
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   792 write "Supplying " .display ".status2"
   793 write @coal .display ".item2"
   794 write .press .display ".block2"
 
   817 jump *label245 greaterThanEq *tmp234 5
   818 write "Goal 2: coal for silicon requirement" .display ".status1"
   819 label *label247
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   820 write "Supplying " .display ".status2"
   821 write @coal .display ".item2"
   822 write .smelter .display ".block2"
 
   841 jump *label253 greaterThanEq *tmp242 5
   842 write "Goal 3: sand for silicon requirement" .display ".status1"
   843 label *label255
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   844 write "Supplying " .display ".status2"
   845 write @sand .display ".item2"
   846 write .smelter .display ".block2"
 
   870 jump *label263 greaterThanEq *tmp253 2
   871 write "Goal 4: supplying generator" .display ".status1"
   872 label *label265
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   873 write "Supplying " .display ".status2"
   874 write @coal .display ".item2"
   875 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   336 set :buildBlock:y :buildBlockFromCfg.7:y
   337 set :buildBlock:copper 60
   338 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   339 set :buildBlock:silicon 0
   340 set :buildBlock:titanium 0
   341 set :buildBlock:metaglass 0
 
   440 set :buildBlock:copper 3
   441 set :buildBlock:lead 0
   442 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   443 set :buildBlock:rotation 0
   444 set :buildBlock:config null
   445 setaddr :buildBlock*retaddr *label127 (h:*label127)
 
   462 set :buildBlock:graphite 30
   463 set :buildBlock:metaglass 30
   464 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   465 setaddr :buildBlock*retaddr *label133 (h:*label133)
   466 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   467 label *label133
 
   480 set :buildBlock:graphite 25
   481 set :buildBlock:silicon 30
   482 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   483 setaddr :buildBlock*retaddr *label139 (h:*label139)
   484 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   485 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   314 set :buildBlock:y :buildBlockFromCfg.8:y
   315 set :buildBlock:copper 4
   316 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   317 set :buildBlock:silicon 0
   318 set :buildBlock:titanium 0
   319 set :buildBlock:metaglass 0
 
   335 set :buildBlock:y :buildBlockFromCfg.7:y
   336 set :buildBlock:copper 60
   337 set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   338 set :buildBlock:metaglass 0
   339 set :buildBlock:rotation 3
   340 set :buildBlock:config @mono
 
   416 set :buildBlock:graphite 30
   417 set :buildBlock:silicon 0
   418 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   419 set :buildBlock:rotation 0
   420 set :buildBlock:config null
   421 setaddr :buildBlock*retaddr *label121 (h:*label121)
 
   437 set :buildBlock:lead 0
   438 set :buildBlock:graphite 0
   439 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   440 setaddr :buildBlock*retaddr *label127 (h:*label127)
   441 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   442 label *label127
 
   456 set :buildBlock:lead 30
   457 set :buildBlock:graphite 30
   458 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   459 setaddr :buildBlock*retaddr *label133 (h:*label133)
   460 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   461 label *label133

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   139 set :buildBlock:copper 30
   140 set :buildBlock:lead 25
   141 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   142 set :buildBlock:titanium 0
   143 set :buildBlock:metaglass 0
   144 set :buildBlock:rotation 0
 
   269 set :buildBlock:lead 6
   270 set :buildBlock:graphite 0
   271 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   272 set :buildBlock:metaglass 0
   273 set :buildBlock:rotation 0
   274 set :buildBlock:config null
 
   288 set :buildBlock:y :buildBlockFromCfg.8:y
   289 set :buildBlock:copper 0
   290 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   291 set :buildBlock:silicon 30
   292 set :buildBlock:titanium 25
   293 set :buildBlock:metaglass 0
 
   390 set :buildBlock:lead 0
   391 set :buildBlock:silicon 30
   392 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   393 set :buildBlock:rotation 0
   394 set :buildBlock:config null
   395 setaddr :buildBlock*retaddr *label115 (h:*label115)
 
   413 set :buildBlock:silicon 0
   414 set :buildBlock:titanium 0
   415 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   416 setaddr :buildBlock*retaddr *label121 (h:*label121)
   417 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   418 label *label121
 
   431 set :buildBlock:copper 3
   432 set :buildBlock:lead 0
   433 set :buildBlock:graphite 0
-    * set :buildBlock:rotation 0
   434 setaddr :buildBlock*retaddr *label127 (h:*label127)
   435 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   436 label *label127

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
   114 set :buildBlock:copper 25
   115 set :buildBlock:lead 15
   116 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   117 set :buildBlock:titanium 0
   118 set :buildBlock:metaglass 0
   119 set :buildBlock:rotation 0
 
   138 set :buildBlock:copper 30
   139 set :buildBlock:lead 25
   140 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   141 set :buildBlock:metaglass 0
   142 set :buildBlock:rotation 0
   143 set :buildBlock:config null
 
   265 set :buildBlock:y :buildBlockFromCfg.7:y
   266 set :buildBlock:copper 2
   267 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   268 set :buildBlock:silicon 0
   269 set :buildBlock:metaglass 0
   270 set :buildBlock:rotation 0
 
   312 set :buildBlock:titanium 0
   313 set :buildBlock:metaglass 0
   314 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   315 setaddr :buildBlock*retaddr *label93 (h:*label93)
   316 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   317 label *label93
 
   328 set :buildBlock:y :buildBlockFromCfg.7:y
   329 set :buildBlock:copper 60
   330 set :buildBlock:lead 70
-    * set :buildBlock:metaglass 0
   331 set :buildBlock:rotation 3
   332 set :buildBlock:config @mono
   333 setaddr :buildBlock*retaddr *label99 (h:*label99)
 
   407 set :buildBlock:graphite 30
   408 set :buildBlock:silicon 0
   409 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   410 setaddr :buildBlock*retaddr *label121 (h:*label121)
   411 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   412 label *label121

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    92 set :buildBlock:x :buildBlockFromCfg.2:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
    94 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    95 set :buildBlock:titanium 0
    96 set :buildBlock:metaglass 0
    97 set :buildBlock:rotation 0
 
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
   115 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   116 set :buildBlock:metaglass 0
   117 set :buildBlock:rotation 0
   118 set :buildBlock:config null
 
   228 set :buildBlock:y :buildBlockFromCfg.1:y
   229 set :buildBlock:copper 90
   230 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   231 set :buildBlock:silicon 50
   232 set :buildBlock:titanium 0
   233 set :buildBlock:metaglass 0
 
   286 set :buildBlock:titanium 25
   287 set :buildBlock:metaglass 0
   288 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   289 setaddr :buildBlock*retaddr *label87 (h:*label87)
   290 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   291 label *label87
 
   306 set :buildBlock:lead 2
   307 set :buildBlock:silicon 0
   308 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   309 setaddr :buildBlock*retaddr *label93 (h:*label93)
   310 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   311 label *label93

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-6 instructions):
 
    71 set :buildBlock:copper 5
    72 set :buildBlock:lead 20
    73 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    74 set :buildBlock:titanium 0
    75 set :buildBlock:metaglass 0
    76 set :buildBlock:rotation 0
 
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    94 set :buildBlock:metaglass 0
    95 set :buildBlock:rotation 0
    96 set :buildBlock:config null
 
   202 set :buildBlock:y :buildBlockFromCfg.5:y
   203 set :buildBlock:copper 0
   204 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   205 set :buildBlock:silicon 30
   206 set :buildBlock:titanium 25
   207 set :buildBlock:metaglass 0
   208 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   209 setaddr :buildBlock*retaddr *label69 (h:*label69)
   210 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   211 label *label69
 
   280 set :buildBlock:lead 0
   281 set :buildBlock:silicon 30
   282 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   283 setaddr :buildBlock*retaddr *label87 (h:*label87)
   284 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   285 label *label87

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    71 set :buildBlock:copper 5
    72 set :buildBlock:lead 20
    73 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    74 set :buildBlock:metaglass 0
    75 set :buildBlock:rotation 0
    76 set :buildBlock:config null
 
   132 set :buildBlock:y :buildBlockFromCfg:y
   133 set :buildBlock:copper 30
   134 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   135 set :buildBlock:metaglass 0
   136 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   137 setaddr :buildBlock*retaddr *label56 (h:*label56)
   138 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   139 label *label56
 
   256 set :buildBlock:copper 2
   257 set :buildBlock:lead 6
   258 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   259 set :buildBlock:config null
   260 setaddr :buildBlock*retaddr *label81 (h:*label81)
   261 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-4 instructions):
 
   109 set :buildBlock:y :buildBlockFromCfg.3:y
   110 set :buildBlock:copper 25
   111 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   112 set :buildBlock:metaglass 0
   113 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   114 setaddr :buildBlock*retaddr *label50 (h:*label50)
   115 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   116 label *label50
 
   221 set :buildBlock:lead 50
   222 set :buildBlock:silicon 50
   223 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   224 set :buildBlock:config processor2
   225 setaddr :buildBlock*retaddr *label75 (h:*label75)
   226 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    89 op add :buildBlockFromCfg.2:x .coreX -1
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    92 set :buildBlock:metaglass 0
    93 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    94 setaddr :buildBlock*retaddr *label44 (h:*label44)
    95 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    96 label *label44
 
   197 set :buildBlock:lead 0
   198 set :buildBlock:silicon 30
   199 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   200 setaddr :buildBlock*retaddr *label69 (h:*label69)
   201 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   202 label *label69

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-4 instructions):
 
    70 set :buildBlock:y :buildBlockFromCfg.1:y
    71 set :buildBlock:copper 5
    72 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    73 set :buildBlock:metaglass 0
    74 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    75 setaddr :buildBlock*retaddr *label38 (h:*label38)
    76 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    77 label *label38
 
   126 set :buildBlock:y :buildBlockFromCfg:y
   127 set :buildBlock:copper 30
   128 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   129 setaddr :buildBlock*retaddr *label56 (h:*label56)
   130 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   131 label *label56

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
   105 set :buildBlock:y :buildBlockFromCfg.3:y
   106 set :buildBlock:copper 25
   107 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   108 setaddr :buildBlock*retaddr *label50 (h:*label50)
   109 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   110 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    87 op add :buildBlockFromCfg.2:x .coreX -1
    88 set :buildBlock:x :buildBlockFromCfg.2:x
    89 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    90 setaddr :buildBlock*retaddr *label44 (h:*label44)
    91 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    92 label *label44

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-2 instructions):
 
    70 set :buildBlock:y :buildBlockFromCfg.1:y
    71 set :buildBlock:copper 5
    72 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    73 setaddr :buildBlock*retaddr *label38 (h:*label38)
    74 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    75 label *label38

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    37 label *label26
    38 write :findUnits:count processor1 ".polys"
    39 set :polys :findUnits*retval
+   40 op add :buildBlockFromCfg:x .coreX -1.5
+   41 op add :buildBlockFromCfg:y .coreY 2.5
+   42 set :buildBlock:block @graphite-press
+   43 set :buildBlock:x :buildBlockFromCfg:x
+   44 set :buildBlock:y :buildBlockFromCfg:y
+   45 set :buildBlock:copper 75
+   46 set :buildBlock:lead 30
+   47 set :buildBlock:graphite 0
+   48 set :buildBlock:silicon 0
+   49 set :buildBlock:titanium 0
+   50 set :buildBlock:metaglass 0
+   51 set :buildBlock:rotation 0
+   52 set :buildBlock:config null
+   53 setaddr :buildBlock*retaddr *label32 (h:*label32)
    54 label *label28
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label32 (h:*label32)
    55 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    56 label *label32
    57 set *tmp74 :buildBlock*retval
 
    62 label *label30
    63 label *label27
    64 set .press *tmp74
+   65 op add :buildBlockFromCfg.1:x .coreX 0
+   66 op add :buildBlockFromCfg.1:y .coreY 4
+   67 set :buildBlock:block @battery
+   68 set :buildBlock:x :buildBlockFromCfg.1:x
+   69 set :buildBlock:y :buildBlockFromCfg.1:y
+   70 set :buildBlock:copper 5
+   71 set :buildBlock:lead 20
+   72 setaddr :buildBlock*retaddr *label38 (h:*label38)
    73 label *label34
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label38 (h:*label38)
    74 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    75 label *label38
    76 set *tmp78 :buildBlock*retval
 
    81 label *label36
    82 label *label33
    83 set .battery *tmp78
+   84 op add :buildBlockFromCfg.2:x .coreX -1
+   85 set :buildBlock:x :buildBlockFromCfg.2:x
+   86 set :buildBlock:y :buildBlockFromCfg.1:y
+   87 setaddr :buildBlock*retaddr *label44 (h:*label44)
    88 label *label40
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label44 (h:*label44)
    89 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    90 label *label44
    91 jump *label39 always
 
    94 multilabel *label43 (m:marker2)
    95 label *label42
    96 label *label39
+   97 op add :buildBlockFromCfg.3:y .coreY 3
+   98 set :buildBlock:block @combustion-generator
+   99 set :buildBlock:x :buildBlockFromCfg.1:x
+  100 set :buildBlock:y :buildBlockFromCfg.3:y
+  101 set :buildBlock:copper 25
+  102 set :buildBlock:lead 15
+  103 setaddr :buildBlock*retaddr *label50 (h:*label50)
   104 label *label46
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label50 (h:*label50)
   105 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   106 label *label50
   107 set *tmp86 :buildBlock*retval
 
   113 label *label45
   114 set .generator *tmp86
   115 set .powerTarget 800
+  116 op add :buildBlockFromCfg.4:x .coreX 1.5
+  117 set :buildBlock:block @silicon-smelter
+  118 set :buildBlock:x :buildBlockFromCfg.4:x
+  119 set :buildBlock:y :buildBlockFromCfg:y
+  120 set :buildBlock:copper 30
+  121 set :buildBlock:lead 25
+  122 setaddr :buildBlock*retaddr *label56 (h:*label56)
   123 label *label52
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label56 (h:*label56)
   124 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   125 label *label56
   126 set *tmp90 :buildBlock*retval
 
   178 write :buildBlockAt*retval processor1 ".titaniumDrill"
   179 write .core processor3 ".core"
   180 write :buildBlockAt*retval processor3 ".drill"
+  181 op add :buildBlockFromCfg.5:y .coreY 2
+  182 set :buildBlock:block @unloader
+  183 set :buildBlock:x :buildBlockFromCfg.1:x
+  184 set :buildBlock:y :buildBlockFromCfg.5:y
+  185 set :buildBlock:copper 0
+  186 set :buildBlock:lead 0
+  187 set :buildBlock:silicon 30
+  188 set :buildBlock:titanium 25
+  189 setaddr :buildBlock*retaddr *label69 (h:*label69)
   190 label *label65
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label69 (h:*label69)
   191 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   192 label *label69
   193 set *tmp99 :buildBlock*retval
 
   198 label *label67
   199 label *label64
   200 set .unloader1 *tmp99
+  201 op add :buildBlockFromCfg.6:x .coreX 1
+  202 set :buildBlock:block @micro-processor
+  203 set :buildBlock:x :buildBlockFromCfg.6:x
+  204 set :buildBlock:y :buildBlockFromCfg.1:y
+  205 set :buildBlock:copper 90
+  206 set :buildBlock:lead 50
+  207 set :buildBlock:silicon 50
+  208 set :buildBlock:titanium 0
+  209 setaddr :buildBlock*retaddr *label75 (h:*label75)
   210 label *label71
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   211 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label75 (h:*label75)
   212 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)
   213 label *label75
   214 set *tmp103 :buildBlock*retval
 
   229 write :monos *tmp103 ".monos"
   230 write :flares *tmp103 ".flares"
   231 write :polys *tmp103 ".polys"
+  232 op add :buildBlockFromCfg.7:x .coreX -2
+  233 op add :buildBlockFromCfg.7:y .coreY -1
+  234 set :buildBlock:block @power-node
+  235 set :buildBlock:x :buildBlockFromCfg.7:x
+  236 set :buildBlock:y :buildBlockFromCfg.7:y
+  237 set :buildBlock:copper 2
+  238 set :buildBlock:lead 6
+  239 set :buildBlock:silicon 0
+  240 set :buildBlock:config null
+  241 setaddr :buildBlock*retaddr *label81 (h:*label81)
   242 label *label77
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label81 (h:*label81)
   243 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   244 label *label81
   245 jump *label76 always
 
   248 multilabel *label80 (m:marker7)
   249 label *label79
   250 label *label76
+  251 op add :buildBlockFromCfg.8:y .coreY 1
+  252 set :buildBlock:block @unloader
+  253 set :buildBlock:x :buildBlockFromCfg.7:x
+  254 set :buildBlock:y :buildBlockFromCfg.8:y
+  255 set :buildBlock:copper 0
+  256 set :buildBlock:lead 0
+  257 set :buildBlock:silicon 30
+  258 set :buildBlock:titanium 25
+  259 setaddr :buildBlock*retaddr *label87 (h:*label87)
   260 label *label83
-    * op add :buildBlockFromCfg.8:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label87 (h:*label87)
   261 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   262 label *label87
   263 set *tmp111 :buildBlock*retval
 
   268 label *label85
   269 label *label82
   270 write *tmp111 *tmp103 ".unloader2"
+  271 op add :buildBlockFromCfg.9:x .coreX -3
+  272 set :buildBlock:block @overflow-gate
+  273 set :buildBlock:x :buildBlockFromCfg.9:x
+  274 set :buildBlock:y :buildBlockFromCfg.8:y
+  275 set :buildBlock:copper 4
+  276 set :buildBlock:lead 2
+  277 set :buildBlock:silicon 0
+  278 set :buildBlock:titanium 0
+  279 setaddr :buildBlock*retaddr *label93 (h:*label93)
   280 label *label89
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label93 (h:*label93)
   281 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   282 label *label93
   283 jump *label88 always
 
   286 multilabel *label92 (m:marker9)
   287 label *label91
   288 label *label88
+  289 op add :buildBlockFromCfg.10:x .coreX -4
+  290 set :buildBlock:block @air-factory
+  291 set :buildBlock:x :buildBlockFromCfg.10:x
+  292 set :buildBlock:y :buildBlockFromCfg.7:y
+  293 set :buildBlock:copper 60
+  294 set :buildBlock:lead 70
+  295 set :buildBlock:rotation 3
+  296 set :buildBlock:config @mono
+  297 setaddr :buildBlock*retaddr *label99 (h:*label99)
   298 label *label95
-    * op add :buildBlockFromCfg.10:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label99 (h:*label99)
   299 call *label18 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   300 label *label99
   301 set *tmp119 :buildBlock*retval
 
   340 read *tmp34 *tmp103 ".monos"
   341 jump *label101 lessThan *tmp34 3
   342 label *label103
+  343 op add :buildBlockFromCfg.11:x .coreX 2
+  344 op add :buildBlockFromCfg.11:y .coreY 0
+  345 set :buildBlock:block @unloader
+  346 set :buildBlock:x :buildBlockFromCfg.11:x
+  347 set :buildBlock:y :buildBlockFromCfg.11:y
+  348 set :buildBlock:copper 0
+  349 set :buildBlock:lead 0
+  350 set :buildBlock:silicon 30
+  351 set :buildBlock:titanium 25
+  352 set :buildBlock:rotation 0
+  353 set :buildBlock:config null
+  354 setaddr :buildBlock*retaddr *label115 (h:*label115)
   355 label *label111
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   356 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   357 label *label115
   358 jump *label110 always
 
   361 multilabel *label114 (m:marker11)
   362 label *label113
   363 label *label110
+  364 op add :buildBlockFromCfg.12:x .coreX 3.5
+  365 op add :buildBlockFromCfg.12:y .coreY 0.5
+  366 set :buildBlock:block @kiln
+  367 set :buildBlock:x :buildBlockFromCfg.12:x
+  368 set :buildBlock:y :buildBlockFromCfg.12:y
+  369 set :buildBlock:copper 60
+  370 set :buildBlock:lead 30
+  371 set :buildBlock:graphite 30
+  372 set :buildBlock:silicon 0
+  373 set :buildBlock:titanium 0
+  374 setaddr :buildBlock*retaddr *label121 (h:*label121)
   375 label *label117
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   376 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   377 label *label121
   378 set *tmp135 :buildBlock*retval
 
   383 label *label119
   384 label *label116
   385 write *tmp135 *tmp103 ".kiln"
+  386 set :buildBlock:block @junction
+  387 set :buildBlock:x :buildBlockFromCfg.11:x
+  388 set :buildBlock:y :buildBlockFromCfg.8:y
+  389 set :buildBlock:copper 3
+  390 set :buildBlock:lead 0
+  391 set :buildBlock:graphite 0
+  392 setaddr :buildBlock*retaddr *label127 (h:*label127)
   393 label *label123
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   394 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   395 label *label127
   396 jump *label122 always
 
   399 multilabel *label126 (m:marker13)
   400 label *label125
   401 label *label122
+  402 op add :buildBlockFromCfg.14:x .coreX -3.5
+  403 op add :buildBlockFromCfg.14:y .coreY 4.5
+  404 set :buildBlock:block @water-extractor
+  405 set :buildBlock:x :buildBlockFromCfg.14:x
+  406 set :buildBlock:y :buildBlockFromCfg.14:y
+  407 set :buildBlock:copper 30
+  408 set :buildBlock:lead 30
+  409 set :buildBlock:graphite 30
+  410 set :buildBlock:metaglass 30
+  411 setaddr :buildBlock*retaddr *label133 (h:*label133)
   412 label *label129
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   413 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   414 label *label133
   415 jump *label128 always
 
   418 multilabel *label132 (m:marker14)
   419 label *label131
   420 label *label128
+  421 set :buildBlock:block @steam-generator
+  422 set :buildBlock:x :buildBlockFromCfg.14:x
+  423 set :buildBlock:y :buildBlockFromCfg:y
+  424 set :buildBlock:copper 35
+  425 set :buildBlock:lead 40
+  426 set :buildBlock:graphite 25
+  427 set :buildBlock:silicon 30
+  428 set :buildBlock:metaglass 0
+  429 setaddr :buildBlock*retaddr *label139 (h:*label139)
   430 label *label135
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   431 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   432 label *label139
   433 set *tmp147 :buildBlock*retval
 
   438 label *label137
   439 label *label134
   440 write *tmp147 *tmp103 ".generator2"
+  441 op add :buildBlockFromCfg.16:x .coreX 4
+  442 set :buildBlock:block @battery-large
+  443 set :buildBlock:x :buildBlockFromCfg.16:x
+  444 set :buildBlock:y :buildBlockFromCfg.3:y
+  445 set :buildBlock:copper 0
+  446 set :buildBlock:lead 50
+  447 set :buildBlock:graphite 0
+  448 set :buildBlock:titanium 20
+  449 setaddr :buildBlock*retaddr *label145 (h:*label145)
   450 label *label141
-    * op add :buildBlockFromCfg.16:x .coreX 4
-    * set :buildBlock:block @battery-large
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
-    * set :buildBlock:titanium 20
-    * setaddr :buildBlock*retaddr *label145 (h:*label145)
   451 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   452 label *label145
   453 jump *label140 always
 
   459 set .graphiteSurplus 100
   460 set .siliconSurplus 1000
   461 set .metaglassSurplus 100
+  462 set :buildBlock:block @sorter
+  463 set :buildBlock:x :buildBlockFromCfg.10:x
+  464 set :buildBlock:y :buildBlockFromCfg.8:y
+  465 set :buildBlock:copper 2
+  466 set :buildBlock:lead 2
+  467 set :buildBlock:silicon 0
+  468 set :buildBlock:titanium 0
+  469 set :buildBlock:config @coal
+  470 setaddr :buildBlock*retaddr *label151 (h:*label151)
   471 label *label147
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label151 (h:*label151)
   472 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   473 label *label151
   474 jump *label146 always
 
   504 label *label1
   505 write "Moving..." .display ".status3"
   506 label *label163
+  507 op sub *tmp163 :moveTo:radius 0.5
   508 label *label164
   509 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
   510 jump *label166 notEqual *tmp161 false
-    * op sub *tmp163 :moveTo:radius 0.5
   511 ucontrol approach :moveTo:x :moveTo:y *tmp163
   512 label *label165
   513 jump *label164 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   835 label *label262
   836 label *label231
   837 label *label232
+  838 set *tmp263 100
   839 sensor *tmp261 .core @titanium
-    * jump *label271 greaterThanEq *tmp261 .targetTitanium
+  840 jump *label272 greaterThanEq *tmp261 .targetTitanium
   841 sensor *tmp264 .core @titanium
   842 op sub *tmp265 .targetTitanium *tmp264
   843 op min *tmp263 7 *tmp265
   844 jump *label272 always
-    * label *label271
-    * set *tmp263 100
   845 label *label272
   846 sensor *tmp267 .titaniumDrill @titanium
   847 jump *label273 greaterThanEq *tmp267 *tmp263
 
   863 label *label283
   864 sensor :supplyBase0:coal .core @coal
   865 sensor :supplyBase0:sand .core @sand
-    * jump *label284 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp282 @coal
+  866 set :mineOre.1:ore @sand
+  867 jump *label285 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  868 set :mineOre.1:ore @coal
   869 jump *label285 always
-    * label *label284
-    * set *tmp282 @sand
   870 label *label285
-    * set :mineOre.1:ore *tmp282
   871 setaddr :mineOre.1*retaddr *label286 (h:*label286)
   872 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
   873 label *label286
 
   907 label *label299
   908 sensor :supplyBase0:coal.1 .core @coal
   909 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label300 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp295 @coal
+  910 set :mineOre.1:ore @sand
+  911 jump *label301 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+  912 set :mineOre.1:ore @coal
   913 jump *label301 always
-    * label *label300
-    * set *tmp295 @sand
   914 label *label301
-    * set :mineOre.1:ore *tmp295
   915 setaddr :mineOre.1*retaddr *label302 (h:*label302)
   916 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
   917 label *label302

Modifications by Unroll iteration loop at CoreBuilder.mnd:246:5 (-2 instructions):
 
  1033 end
  1034 label *label14
  1035 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp328 *label345
-    * jump *label342 always
-    * multilabel *label345 (m:marker18)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp328 *label346
-    * jump *label342 always
-    * multilabel *label346 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp328 *label347
-    * jump *label342 always
-    * multilabel *label347 (m:marker18)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp328 *label348
-    * jump *label342 always
-    * multilabel *label348 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp328 *label349
-    * jump *label342 always
-    * multilabel *label349 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp328 *label350
-    * label *label342
-    * op sign *tmp329 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label343
-    * multijump *tmp328 0 0 (m:marker18)
-    * multilabel *label350 (m:marker18)
-    * label *label344
+ 1036 set :meetTarget:t :meetTarget:copper
+ 1037 label *label384
+ 1038 op sign *tmp329 :meetTarget:t
+ 1039 op add :meetTarget:count :meetTarget:count *tmp329
+ 1040 label *label385
+ 1041 set :meetTarget:t :meetTarget:lead
+ 1042 label *label388
+ 1043 op sign *tmp329 :meetTarget:t
+ 1044 op add :meetTarget:count :meetTarget:count *tmp329
+ 1045 label *label389
+ 1046 set :meetTarget:t :meetTarget:graphite
+ 1047 label *label392
+ 1048 op sign *tmp329 :meetTarget:t
+ 1049 op add :meetTarget:count :meetTarget:count *tmp329
+ 1050 label *label393
+ 1051 set :meetTarget:t :meetTarget:silicon
+ 1052 label *label396
+ 1053 op sign *tmp329 :meetTarget:t
+ 1054 op add :meetTarget:count :meetTarget:count *tmp329
+ 1055 label *label397
+ 1056 set :meetTarget:t :meetTarget:titanium
+ 1057 label *label400
+ 1058 op sign *tmp329 :meetTarget:t
+ 1059 op add :meetTarget:count :meetTarget:count *tmp329
+ 1060 label *label401
+ 1061 set :meetTarget:t :meetTarget:metaglass
+ 1062 label *label404
+ 1063 op sign *tmp329 :meetTarget:t
+ 1064 op add :meetTarget:count :meetTarget:count *tmp329
+ 1065 label *label405
+ 1066 label *label344
  1067 write :meetTarget:count .display ".totalTargets"
  1068 write :meetTarget:block .display ".nextBlock"
  1069 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1035 set :meetTarget:count 0
  1036 set :meetTarget:t :meetTarget:copper
  1037 label *label384
-    * op sign *tmp329 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp329
+ 1038 op sign *tmp329 :meetTarget:copper
+ 1039 op add :meetTarget:count 0 *tmp329
  1040 label *label385
  1041 set :meetTarget:t :meetTarget:lead
  1042 label *label388
-    * op sign *tmp329 :meetTarget:t
+ 1043 op sign *tmp329 :meetTarget:lead
  1044 op add :meetTarget:count :meetTarget:count *tmp329
  1045 label *label389
  1046 set :meetTarget:t :meetTarget:graphite
  1047 label *label392
-    * op sign *tmp329 :meetTarget:t
+ 1048 op sign *tmp329 :meetTarget:graphite
  1049 op add :meetTarget:count :meetTarget:count *tmp329
  1050 label *label393
  1051 set :meetTarget:t :meetTarget:silicon
  1052 label *label396
-    * op sign *tmp329 :meetTarget:t
+ 1053 op sign *tmp329 :meetTarget:silicon
  1054 op add :meetTarget:count :meetTarget:count *tmp329
  1055 label *label397
  1056 set :meetTarget:t :meetTarget:titanium
  1057 label *label400
-    * op sign *tmp329 :meetTarget:t
+ 1058 op sign *tmp329 :meetTarget:titanium
  1059 op add :meetTarget:count :meetTarget:count *tmp329
  1060 label *label401
  1061 set :meetTarget:t :meetTarget:metaglass
  1062 label *label404
-    * op sign *tmp329 :meetTarget:t
+ 1063 op sign *tmp329 :meetTarget:metaglass
  1064 op add :meetTarget:count :meetTarget:count *tmp329
  1065 label *label405
  1066 label *label344

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1032 return :targetMet*retaddr
  1033 end
  1034 label *label14
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1035 label *label384
  1036 op sign *tmp329 :meetTarget:copper
  1037 op add :meetTarget:count 0 *tmp329
  1038 label *label385
-    * set :meetTarget:t :meetTarget:lead
  1039 label *label388
  1040 op sign *tmp329 :meetTarget:lead
  1041 op add :meetTarget:count :meetTarget:count *tmp329
  1042 label *label389
-    * set :meetTarget:t :meetTarget:graphite
  1043 label *label392
  1044 op sign *tmp329 :meetTarget:graphite
  1045 op add :meetTarget:count :meetTarget:count *tmp329
  1046 label *label393
-    * set :meetTarget:t :meetTarget:silicon
  1047 label *label396
  1048 op sign *tmp329 :meetTarget:silicon
  1049 op add :meetTarget:count :meetTarget:count *tmp329
  1050 label *label397
-    * set :meetTarget:t :meetTarget:titanium
  1051 label *label400
  1052 op sign *tmp329 :meetTarget:titanium
  1053 op add :meetTarget:count :meetTarget:count *tmp329
  1054 label *label401
-    * set :meetTarget:t :meetTarget:metaglass
  1055 label *label404
  1056 op sign *tmp329 :meetTarget:metaglass
  1057 op add :meetTarget:count :meetTarget:count *tmp329

Modifications by Replicate loop condition at Actions.mnd:23:5 (+1 instructions):
 
   508 label *label164
   509 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
   510 jump *label166 notEqual *tmp161 false
+  511 label *label409
   512 ucontrol approach :moveTo:x :moveTo:y *tmp163
   513 label *label165
-    * jump *label164 always
+  514 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
+  515 jump *label409 equal *tmp161 false
   516 label *label166
   517 label *label162
   518 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:68:9 (+1 instructions):
 
   580 label *label186
   581 sensor *tmp181 @unit @firstItem
   582 jump *label188 equal *tmp181 null
+  583 label *label410
   584 ucontrol itemDrop @air 1000
   585 label *label187
-    * jump *label186 always
+  586 sensor *tmp181 @unit @firstItem
+  587 jump *label410 notEqual *tmp181 null
   588 label *label188
   589 label *label181
   590 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at Actions.mnd:45:5 (+1 instructions):
 
   625 label *label201
   626 sensor *tmp191 @unit @firstItem
   627 jump *label203 equal *tmp191 null
+  628 label *label411
   629 ucontrol itemDrop @air 1000
   630 label *label202
-    * jump *label201 always
+  631 sensor *tmp191 @unit @firstItem
+  632 jump *label411 notEqual *tmp191 null
   633 label *label203
   634 label *label200
   635 label *label198

Modifications by Replicate loop condition at Actions.mnd:45:5 (+1 instructions):
 
   697 label *label221
   698 sensor *tmp207 @unit @firstItem
   699 jump *label223 equal *tmp207 null
+  700 label *label412
   701 ucontrol itemDrop @air 1000
   702 label *label222
-    * jump *label221 always
+  703 sensor *tmp207 @unit @firstItem
+  704 jump *label412 notEqual *tmp207 null
   705 label *label223
   706 label *label220
   707 label *label224

Modifications by Replicate loop condition at CoreBuilder.mnd:269:5 (+2 instructions):
 
  1098 call *label13 *invalid :targetMet*retval (m:*label354) (h:*label354)
  1099 label *label354
  1100 jump *label353 notEqual :targetMet*retval false
+ 1101 label *label413
  1102 setaddr :supplyBase*retaddr *label355 (h:*label355)
  1103 call *label12 *invalid :supplyBase*retval (m:*label355) (h:*label355)
  1104 label *label355
  1105 label *label352
-    * jump *label351 always
+ 1106 setaddr :targetMet*retaddr *label414 (h:*label414)
+ 1107 call *label13 *invalid :targetMet*retval (m:*label414) (h:*label414)
+ 1108 label *label414
+ 1109 jump *label413 equal :targetMet*retval false
  1110 label *label353
  1111 label *label341
  1112 return :meetTarget*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   172 setaddr :buildBlockAt*retaddr *label63 (h:*label63)
   173 call *label17 *invalid :buildBlockAt*retval (m:*label63) (h:*label63)
   174 label *label63
-    * jump *label57 always
   175 label *label57
   176 set .titaniumDrill :buildBlockAt*retval
   177 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
   848 sensor *tmp264 .core @titanium
   849 op sub *tmp265 .targetTitanium *tmp264
   850 op min *tmp263 7 *tmp265
-    * jump *label272 always
   851 label *label272
   852 sensor *tmp267 .titaniumDrill @titanium
   853 jump *label273 greaterThanEq *tmp267 *tmp263
 
   872 set :mineOre.1:ore @sand
   873 jump *label285 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   874 set :mineOre.1:ore @coal
-    * jump *label285 always
   875 label *label285
   876 setaddr :mineOre.1*retaddr *label286 (h:*label286)
   877 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
 
   915 set :mineOre.1:ore @sand
   916 jump *label301 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   917 set :mineOre.1:ore @coal
-    * jump *label301 always
   918 label *label301
   919 setaddr :mineOre.1*retaddr *label302 (h:*label302)
   920 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
 
  1168 call *label16 *invalid :logBlock*retval (m:*label374) (h:*label374)
  1169 label *label374
  1170 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label359 always
  1171 label *label359
  1172 return :buildBlockAt*retaddr
  1173 end
 
  1192 call *label17 *invalid :buildBlockAt*retval (m:*label377) (h:*label377)
  1193 label *label377
  1194 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label375 always
  1195 label *label375
  1196 return :buildBlock*retaddr
  1197 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    62 label *label30
    63 label *label27
    64 set .press *tmp74
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   65 set :buildBlockFromCfg.1:x .coreX
    66 op add :buildBlockFromCfg.1:y .coreY 4
    67 set :buildBlock:block @battery
    68 set :buildBlock:x :buildBlockFromCfg.1:x
 
   313 write 0 *tmp103 ".siliconReserve"
   314 write @flare *tmp103 ".unitToProduce"
   315 label *label100
-    * op add .phase 0 1
+  316 set .phase 1
   317 write 85 *tmp103 ".pressTarget"
   318 write 150 *tmp103 ".smelterTarget"
   319 write 30 *tmp103 ".kilnTarget"
 
   340 jump *label101 lessThan *tmp34 3
   341 label *label103
   342 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  343 set :buildBlockFromCfg.11:y .coreY
   344 set :buildBlock:block @unloader
   345 set :buildBlock:x :buildBlockFromCfg.11:x
   346 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1038 label *label14
  1039 label *label384
  1040 op sign *tmp329 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp329
+ 1041 set :meetTarget:count *tmp329
  1042 label *label385
  1043 label *label388
  1044 op sign *tmp329 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-6 instructions):
 
   340 jump *label101 lessThan *tmp34 3
   341 label *label103
   342 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
+  343 set :buildBlock:y .coreY
   344 set :buildBlock:block @unloader
   345 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
   346 set :buildBlock:copper 0
   347 set :buildBlock:lead 0
   348 set :buildBlock:silicon 30
 
   359 multilabel *label114 (m:marker11)
   360 label *label113
   361 label *label110
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
+  362 op add :buildBlock:x .coreX 3.5
+  363 op add :buildBlock:y .coreY 0.5
   364 set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
   365 set :buildBlock:copper 60
   366 set :buildBlock:lead 30
   367 set :buildBlock:graphite 30
 
   396 label *label125
   397 label *label122
   398 op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
+  399 op add :buildBlock:y .coreY 4.5
   400 set :buildBlock:block @water-extractor
   401 set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
   402 set :buildBlock:copper 30
   403 set :buildBlock:lead 30
   404 set :buildBlock:graphite 30
 
   433 label *label137
   434 label *label134
   435 write *tmp147 *tmp103 ".generator2"
-    * op add :buildBlockFromCfg.16:x .coreX 4
+  436 op add :buildBlock:x .coreX 4
   437 set :buildBlock:block @battery-large
-    * set :buildBlock:x :buildBlockFromCfg.16:x
   438 set :buildBlock:y :buildBlockFromCfg.3:y
   439 set :buildBlock:copper 0
   440 set :buildBlock:lead 50
 
  1032 end
  1033 label *label14
  1034 label *label384
-    * op sign *tmp329 :meetTarget:copper
-    * set :meetTarget:count *tmp329
+ 1035 op sign :meetTarget:count :meetTarget:copper
  1036 label *label385
  1037 label *label388
  1038 op sign *tmp329 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    65 set :buildBlockFromCfg.1:x .coreX
    66 op add :buildBlockFromCfg.1:y .coreY 4
    67 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   68 set :buildBlock:x .coreX
    69 set :buildBlock:y :buildBlockFromCfg.1:y
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
 
    96 label *label39
    97 op add :buildBlockFromCfg.3:y .coreY 3
    98 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   99 set :buildBlock:x .coreX
   100 set :buildBlock:y :buildBlockFromCfg.3:y
   101 set :buildBlock:copper 25
   102 set :buildBlock:lead 15
 
   179 write :buildBlockAt*retval processor3 ".drill"
   180 op add :buildBlockFromCfg.5:y .coreY 2
   181 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  182 set :buildBlock:x .coreX
   183 set :buildBlock:y :buildBlockFromCfg.5:y
   184 set :buildBlock:copper 0
   185 set :buildBlock:lead 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    62 label *label30
    63 label *label27
    64 set .press *tmp74
-    * set :buildBlockFromCfg.1:x .coreX
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
    67 set :buildBlock:x .coreX

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    15 label *label21
    16 ubind @poly
    17 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label22
    18 jump *label21 equal .core null
-    * label *label23
    19 set .display processor1
    20 set :findUnits:type @mono
    21 setaddr :findUnits*retaddr *label24 (h:*label24)
 
    49 set :buildBlock:rotation 0
    50 set :buildBlock:config null
    51 setaddr :buildBlock*retaddr *label32 (h:*label32)
-    * label *label28
    52 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    53 label *label32
    54 set *tmp74 :buildBlock*retval
    55 jump *label27 always
-    * label *label29
    56 multijump *tmp75 0 0 (m:marker0)
    57 multilabel *label31 (m:marker0)
-    * label *label30
    58 label *label27
    59 set .press *tmp74
    60 op add :buildBlockFromCfg.1:y .coreY 4
 
    64 set :buildBlock:copper 5
    65 set :buildBlock:lead 20
    66 setaddr :buildBlock*retaddr *label38 (h:*label38)
-    * label *label34
    67 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    68 label *label38
    69 set *tmp78 :buildBlock*retval
    70 jump *label33 always
-    * label *label35
    71 multijump *tmp79 0 0 (m:marker1)
    72 multilabel *label37 (m:marker1)
-    * label *label36
    73 label *label33
    74 set .battery *tmp78
    75 op add :buildBlockFromCfg.2:x .coreX -1
    76 set :buildBlock:x :buildBlockFromCfg.2:x
    77 set :buildBlock:y :buildBlockFromCfg.1:y
    78 setaddr :buildBlock*retaddr *label44 (h:*label44)
-    * label *label40
    79 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    80 label *label44
    81 jump *label39 always
-    * label *label41
    82 multijump *tmp83 0 0 (m:marker2)
    83 multilabel *label43 (m:marker2)
-    * label *label42
    84 label *label39
    85 op add :buildBlockFromCfg.3:y .coreY 3
    86 set :buildBlock:block @combustion-generator
 
    89 set :buildBlock:copper 25
    90 set :buildBlock:lead 15
    91 setaddr :buildBlock*retaddr *label50 (h:*label50)
-    * label *label46
    92 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    93 label *label50
    94 set *tmp86 :buildBlock*retval
    95 jump *label45 always
-    * label *label47
    96 multijump *tmp87 0 0 (m:marker3)
    97 multilabel *label49 (m:marker3)
-    * label *label48
    98 label *label45
    99 set .generator *tmp86
   100 set .powerTarget 800
 
   105 set :buildBlock:copper 30
   106 set :buildBlock:lead 25
   107 setaddr :buildBlock*retaddr *label56 (h:*label56)
-    * label *label52
   108 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
   109 label *label56
   110 set *tmp90 :buildBlock*retval
   111 jump *label51 always
-    * label *label53
   112 multijump *tmp91 0 0 (m:marker4)
   113 multilabel *label55 (m:marker4)
-    * label *label54
   114 label *label51
   115 set .smelter *tmp90
   116 set :meetTarget:block @pneumatic-drill
 
   142 jump *label60 notEqual :buildTitaniumDrill:result false
   143 set .ERROR "Cannot locate spot for titanium drill"
   144 stop
-    * label *label62
   145 label *label60
-    * label *label61
   146 set :buildBlockAt:block @pneumatic-drill
   147 set :buildBlockAt:x :buildTitaniumDrill:dx
   148 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   152 setaddr :buildBlockAt*retaddr *label63 (h:*label63)
   153 call *label17 *invalid :buildBlockAt*retval (m:*label63) (h:*label63)
   154 label *label63
-    * label *label57
   155 set .titaniumDrill :buildBlockAt*retval
   156 write :buildBlockAt*retval processor1 ".titaniumDrill"
   157 write .core processor3 ".core"
 
   165 set :buildBlock:silicon 30
   166 set :buildBlock:titanium 25
   167 setaddr :buildBlock*retaddr *label69 (h:*label69)
-    * label *label65
   168 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   169 label *label69
   170 set *tmp99 :buildBlock*retval
   171 jump *label64 always
-    * label *label66
   172 multijump *tmp100 0 0 (m:marker5)
   173 multilabel *label68 (m:marker5)
-    * label *label67
   174 label *label64
   175 set .unloader1 *tmp99
   176 op add :buildBlockFromCfg.6:x .coreX 1
 
   182 set :buildBlock:silicon 50
   183 set :buildBlock:titanium 0
   184 setaddr :buildBlock*retaddr *label75 (h:*label75)
-    * label *label71
   185 set :buildBlock:config processor2
   186 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)
   187 label *label75
   188 set *tmp103 :buildBlock*retval
   189 jump *label70 always
-    * label *label72
   190 multijump *tmp104 0 0 (m:marker6)
   191 multilabel *label74 (m:marker6)
-    * label *label73
   192 label *label70
   193 set .controller *tmp103
   194 write processor1 *tmp103 ".display"
 
   211 set :buildBlock:silicon 0
   212 set :buildBlock:config null
   213 setaddr :buildBlock*retaddr *label81 (h:*label81)
-    * label *label77
   214 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   215 label *label81
   216 jump *label76 always
-    * label *label78
   217 multijump *tmp108 0 0 (m:marker7)
   218 multilabel *label80 (m:marker7)
-    * label *label79
   219 label *label76
   220 op add :buildBlockFromCfg.8:y .coreY 1
   221 set :buildBlock:block @unloader
 
   226 set :buildBlock:silicon 30
   227 set :buildBlock:titanium 25
   228 setaddr :buildBlock*retaddr *label87 (h:*label87)
-    * label *label83
   229 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   230 label *label87
   231 set *tmp111 :buildBlock*retval
   232 jump *label82 always
-    * label *label84
   233 multijump *tmp112 0 0 (m:marker8)
   234 multilabel *label86 (m:marker8)
-    * label *label85
   235 label *label82
   236 write *tmp111 *tmp103 ".unloader2"
   237 op add :buildBlockFromCfg.9:x .coreX -3
 
   243 set :buildBlock:silicon 0
   244 set :buildBlock:titanium 0
   245 setaddr :buildBlock*retaddr *label93 (h:*label93)
-    * label *label89
   246 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   247 label *label93
   248 jump *label88 always
-    * label *label90
   249 multijump *tmp116 0 0 (m:marker9)
   250 multilabel *label92 (m:marker9)
-    * label *label91
   251 label *label88
   252 op add :buildBlockFromCfg.10:x .coreX -4
   253 set :buildBlock:block @air-factory
 
   258 set :buildBlock:rotation 3
   259 set :buildBlock:config @mono
   260 setaddr :buildBlock*retaddr *label99 (h:*label99)
-    * label *label95
   261 call *label18 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   262 label *label99
   263 set *tmp119 :buildBlock*retval
   264 jump *label94 always
-    * label *label96
   265 multijump *tmp120 0 0 (m:marker10)
   266 multilabel *label98 (m:marker10)
-    * label *label97
   267 label *label94
   268 write *tmp119 *tmp103 ".factory"
   269 write *tmp119 processor1 ".factory"
 
   273 write 0 *tmp103 ".leadReserve"
   274 write 0 *tmp103 ".siliconReserve"
   275 write @flare *tmp103 ".unitToProduce"
-    * label *label100
   276 set .phase 1
   277 write 85 *tmp103 ".pressTarget"
   278 write 150 *tmp103 ".smelterTarget"
 
   284 op land *tmp125 :thoriumDrill *tmp124
   285 jump *label104 equal *tmp125 false
   286 set :thoriumDrill false
-    * label *label106
   287 label *label104
-    * label *label105
   288 setaddr :supplyBase1*retaddr *label107 (h:*label107)
   289 call *label11 *invalid :supplyBase1*retval (m:*label107) (h:*label107)
   290 label *label107
 
   292 jump *label108 greaterThanEq *tmp127 300
   293 jump *label103 always
   294 label *label108
-    * label *label109
-    * label *label102
   295 read *tmp34 *tmp103 ".monos"
   296 jump *label101 lessThan *tmp34 3
   297 label *label103
 
   306 set :buildBlock:rotation 0
   307 set :buildBlock:config null
   308 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   309 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   310 label *label115
   311 jump *label110 always
-    * label *label112
   312 multijump *tmp132 0 0 (m:marker11)
   313 multilabel *label114 (m:marker11)
-    * label *label113
   314 label *label110
   315 op add :buildBlock:x .coreX 3.5
   316 op add :buildBlock:y .coreY 0.5
 
   321 set :buildBlock:silicon 0
   322 set :buildBlock:titanium 0
   323 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   324 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   325 label *label121
   326 set *tmp135 :buildBlock*retval
   327 jump *label116 always
-    * label *label118
   328 multijump *tmp136 0 0 (m:marker12)
   329 multilabel *label120 (m:marker12)
-    * label *label119
   330 label *label116
   331 write *tmp135 *tmp103 ".kiln"
   332 set :buildBlock:block @junction
 
   336 set :buildBlock:lead 0
   337 set :buildBlock:graphite 0
   338 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   339 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   340 label *label127
   341 jump *label122 always
-    * label *label124
   342 multijump *tmp140 0 0 (m:marker13)
   343 multilabel *label126 (m:marker13)
-    * label *label125
   344 label *label122
   345 op add :buildBlockFromCfg.14:x .coreX -3.5
   346 op add :buildBlock:y .coreY 4.5
 
   351 set :buildBlock:graphite 30
   352 set :buildBlock:metaglass 30
   353 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   354 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   355 label *label133
   356 jump *label128 always
-    * label *label130
   357 multijump *tmp144 0 0 (m:marker14)
   358 multilabel *label132 (m:marker14)
-    * label *label131
   359 label *label128
   360 set :buildBlock:block @steam-generator
   361 set :buildBlock:x :buildBlockFromCfg.14:x
 
   366 set :buildBlock:silicon 30
   367 set :buildBlock:metaglass 0
   368 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   369 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   370 label *label139
   371 set *tmp147 :buildBlock*retval
   372 jump *label134 always
-    * label *label136
   373 multijump *tmp148 0 0 (m:marker15)
   374 multilabel *label138 (m:marker15)
-    * label *label137
   375 label *label134
   376 write *tmp147 *tmp103 ".generator2"
   377 op add :buildBlock:x .coreX 4
 
   382 set :buildBlock:graphite 0
   383 set :buildBlock:titanium 20
   384 setaddr :buildBlock*retaddr *label145 (h:*label145)
-    * label *label141
   385 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   386 label *label145
   387 jump *label140 always
-    * label *label142
   388 multijump *tmp152 0 0 (m:marker16)
   389 multilabel *label144 (m:marker16)
-    * label *label143
   390 label *label140
   391 set .graphiteSurplus 100
   392 set .siliconSurplus 1000
 
   400 set :buildBlock:titanium 0
   401 set :buildBlock:config @coal
   402 setaddr :buildBlock*retaddr *label151 (h:*label151)
-    * label *label147
   403 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   404 label *label151
   405 jump *label146 always
-    * label *label148
   406 multijump *tmp156 0 0 (m:marker17)
   407 multilabel *label150 (m:marker17)
-    * label *label149
   408 label *label146
   409 write 0 processor1 ".totalTargets"
   410 write null processor1 ".nextBlock"
 
   412 setaddr :supplyBase1*retaddr *label155 (h:*label155)
   413 call *label11 *invalid :supplyBase1*retval (m:*label155) (h:*label155)
   414 label *label155
-    * label *label153
   415 read *tmp35 *tmp103 ".flares"
   416 read *tmp34 *tmp103 ".monos"
   417 op add *tmp159 *tmp35 *tmp34
   418 jump *label152 lessThan *tmp159 16
-    * label *label154
   419 label *label156
   420 setaddr :supplyBase*retaddr *label159 (h:*label159)
   421 call *label12 *invalid :supplyBase*retval (m:*label159) (h:*label159)
   422 label *label159
-    * label *label157
   423 jump *label156 always
-    * label *label158
   424 ucontrol stop
   425 set .ERROR "Done"
   426 stop
-    * label *label160
   427 end
   428 label *label1
   429 write "Moving..." .display ".status3"
-    * label *label163
   430 op sub *tmp163 :moveTo:radius 0.5
-    * label *label164
   431 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
   432 jump *label166 notEqual *tmp161 false
   433 label *label409
   434 ucontrol approach :moveTo:x :moveTo:y *tmp163
-    * label *label165
   435 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161
   436 jump *label409 equal *tmp161 false
   437 label *label166
-    * label *label162
   438 return :moveTo*retaddr
   439 end
   440 label *label2
 
   444 setaddr :moveTo*retaddr *label168 (h:*label168)
   445 call *label1 *invalid :moveTo*retval (m:*label168) (h:*label168)
   446 label *label168
-    * label *label167
   447 return :moveTo.1*retaddr
   448 end
   449 label *label3
   450 write "Moving..." .display ".status3"
-    * label *label170
   451 label *label171
   452 sensor *tmp166 @unit @firstItem
   453 jump *label174 equal *tmp166 null
   454 ucontrol itemDrop @air 1000
   455 label *label174
-    * label *label175
   456 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label172
   457 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp169
   458 jump *label171 equal *tmp169 false
-    * label *label173
-    * label *label169
   459 return :moveToEmpty*retaddr
   460 end
   461 label *label4
 
   467 setaddr :moveTo*retaddr *label177 (h:*label177)
   468 call *label1 *invalid :moveTo*retval (m:*label177) (h:*label177)
   469 label *label177
-    * label *label176
   470 return :moveToBlock*retaddr
   471 end
   472 label *label5
   473 write "Depositing..." .display ".status3"
-    * label *label179
   474 sensor *tmp173 @unit @firstItem
   475 jump *label180 notEqual *tmp173 :depositItems:item
   476 set :moveToBlock:block :depositItems:block
 
   481 sensor :depositItems:cap :depositItems:block @itemCapacity
   482 label *label183
   483 ucontrol itemDrop :depositItems:block 30
-    * label *label184
   484 sensor *tmp177 @unit @firstItem
   485 op mul *tmp178 *tmp177 :depositItems:cap
   486 sensor *tmp179 :depositItems:block :depositItems:item
   487 jump *label183 greaterThan *tmp178 *tmp179
-    * label *label185
   488 jump *label181 always
   489 label *label180
-    * label *label186
   490 sensor *tmp181 @unit @firstItem
   491 jump *label188 equal *tmp181 null
   492 label *label410
   493 ucontrol itemDrop @air 1000
-    * label *label187
   494 sensor *tmp181 @unit @firstItem
   495 jump *label410 notEqual *tmp181 null
   496 label *label188
   497 label *label181
   498 write 0 .display ".transportTarget"
   499 write null .display ".transportItem"
-    * label *label189
-    * label *label178
   500 return :depositItems*retaddr
   501 end
   502 label *label6
 
   504 jump *label191 notEqual *tmp183 false
   505 set .ERROR "Cannot locate ore"
   506 stop
-    * label *label193
   507 label *label191
-    * label *label192
-    * label *label190
   508 return :locateOre*retaddr
   509 end
   510 label *label7
   511 op min :mineOre:amount :mineOre:amount 30
   512 write :mineOre:amount .display ".transportTarget"
   513 write :mineOre:ore .display ".transportItem"
-    * label *label195
   514 set :locateOre:ore :mineOre:ore
   515 setaddr :locateOre*retaddr *label196 (h:*label196)
   516 call *label6 *invalid :locateOre*retval (m:*label196) (h:*label196)
 
   524 label *label197
   525 sensor *tmp188 @unit @firstItem
   526 jump *label198 equal *tmp188 :mineOre:ore
-    * label *label201
   527 sensor *tmp191 @unit @firstItem
   528 jump *label203 equal *tmp191 null
   529 label *label411
   530 ucontrol itemDrop @air 1000
-    * label *label202
   531 sensor *tmp191 @unit @firstItem
   532 jump *label411 notEqual *tmp191 null
   533 label *label203
-    * label *label200
   534 label *label198
-    * label *label199
   535 write "Mining..." .display ".status3"
-    * label *label204
   536 op add :mineOre:stop @second 10
   537 label *label205
   538 sensor :mineOre:item @unit @firstItem
 
   542 jump *label208 equal *tmp197 false
   543 jump *label207 always
   544 label *label208
-    * label *label209
   545 ucontrol mine :mineOre:x :mineOre:y
   546 jump *label210 lessThanEq @second :mineOre:stop
   547 jump *label207 always
   548 label *label210
-    * label *label211
-    * label *label206
   549 sensor *tmp201 @unit @totalItems
   550 jump *label205 lessThan *tmp201 :mineOre:amount
   551 label *label207
 
   555 setaddr :depositItems*retaddr *label212 (h:*label212)
   556 call *label5 *invalid :depositItems*retval (m:*label212) (h:*label212)
   557 label *label212
-    * label *label194
   558 return :mineOre*retaddr
   559 end
   560 label *label8
   561 write "Mining " .display ".status2"
   562 write :mineOre.1:ore .display ".item2"
   563 write "core" .display ".block2"
-    * label *label214
   564 set :mineOre:ore :mineOre.1:ore
   565 set :mineOre:amount 30
   566 set :mineOre:block .core
   567 setaddr :mineOre*retaddr *label215 (h:*label215)
   568 call *label7 *invalid :mineOre*retval (m:*label215) (h:*label215)
   569 label *label215
-    * label *label213
   570 return :mineOre.1*retaddr
   571 end
   572 label *label9
   573 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   574 write :transportStatus.2:target .display ".transportTarget"
   575 write :fetchBlock:item .display ".transportItem"
-    * label *label217
   576 write "Fetching " .display ".status2"
   577 write :fetchBlock:item .display ".item2"
   578 write :fetchBlock:block .display ".block2"
-    * label *label218
   579 sensor *tmp205 :fetchBlock:block @x
   580 sensor *tmp206 :fetchBlock:block @y
   581 set :moveToEmpty:x *tmp205
 
   583 setaddr :moveToEmpty*retaddr *label219 (h:*label219)
   584 call *label3 *invalid :moveToEmpty*retval (m:*label219) (h:*label219)
   585 label *label219
-    * label *label221
   586 sensor *tmp207 @unit @firstItem
   587 jump *label223 equal *tmp207 null
   588 label *label412
   589 ucontrol itemDrop @air 1000
-    * label *label222
   590 sensor *tmp207 @unit @firstItem
   591 jump *label412 notEqual *tmp207 null
   592 label *label223
-    * label *label220
   593 label *label224
   594 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   595 sensor :fetchBlock:unitItem @unit @firstItem
 
   599 jump *label227 equal *tmp212 false
   600 ucontrol itemDrop @air 1000
   601 label *label227
-    * label *label228
-    * label *label225
   602 sensor *tmp214 @unit :fetchBlock:item
   603 op lessThan *tmp215 *tmp214 30
   604 sensor *tmp216 :fetchBlock:block :fetchBlock:item
   605 op land *tmp217 *tmp215 *tmp216
   606 jump *label224 notEqual *tmp217 false
-    * label *label226
   607 set :depositItems:block .core
   608 set :depositItems:item :fetchBlock:item
   609 setaddr :depositItems*retaddr *label229 (h:*label229)
   610 call *label5 *invalid :depositItems*retval (m:*label229) (h:*label229)
   611 label *label229
-    * label *label216
   612 return :fetchBlock*retaddr
   613 end
   614 label *label10
 
   619 sensor *tmp223 .press @coal
   620 jump *label235 greaterThanEq *tmp223 5
   621 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label237
   622 write "Supplying " .display ".status2"
   623 write @coal .display ".item2"
   624 write .press .display ".block2"
-    * label *label239
   625 sensor :supplyBlock:blockCapacity .press @itemCapacity
   626 sensor *tmp227 .press @coal
   627 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp227
 
   633 call *label7 *invalid :mineOre*retval (m:*label242) (h:*label242)
   634 label *label242
   635 label *label240
-    * label *label241
-    * label *label238
   636 set :supplyBase0:supplied true
   637 label *label235
-    * label *label236
   638 label *label233
-    * label *label234
   639 sensor *tmp231 .core @silicon
   640 jump *label243 greaterThanEq *tmp231 .targetSilicon
   641 sensor *tmp234 .smelter @coal
   642 jump *label245 greaterThanEq *tmp234 5
   643 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label247
   644 write "Supplying " .display ".status2"
   645 write @coal .display ".item2"
   646 write .smelter .display ".block2"
-    * label *label249
   647 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   648 sensor *tmp238 .smelter @coal
   649 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp238
 
   655 call *label7 *invalid :mineOre*retval (m:*label252) (h:*label252)
   656 label *label252
   657 label *label250
-    * label *label251
-    * label *label248
   658 set :supplyBase0:supplied true
   659 jump *label246 always
   660 label *label245
   661 sensor *tmp242 .smelter @sand
   662 jump *label253 greaterThanEq *tmp242 5
   663 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label255
   664 write "Supplying " .display ".status2"
   665 write @sand .display ".item2"
   666 write .smelter .display ".block2"
-    * label *label257
   667 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   668 sensor *tmp246 .smelter @sand
   669 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp246
 
   675 call *label7 *invalid :mineOre*retval (m:*label260) (h:*label260)
   676 label *label260
   677 label *label258
-    * label *label259
-    * label *label256
   678 set :supplyBase0:supplied true
   679 label *label253
-    * label *label254
   680 label *label246
   681 label *label243
-    * label *label244
   682 sensor *tmp250 .battery @totalPower
   683 jump *label261 greaterThanEq *tmp250 .powerTarget
   684 sensor *tmp253 .generator @coal
   685 jump *label263 greaterThanEq *tmp253 2
   686 write "Goal 4: supplying generator" .display ".status1"
-    * label *label265
   687 write "Supplying " .display ".status2"
   688 write @coal .display ".item2"
   689 write .generator .display ".block2"
-    * label *label267
   690 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   691 sensor *tmp257 .generator @coal
   692 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp257
 
   698 call *label7 *invalid :mineOre*retval (m:*label270) (h:*label270)
   699 label *label270
   700 label *label268
-    * label *label269
-    * label *label266
   701 set :supplyBase0:supplied true
   702 label *label263
-    * label *label264
   703 label *label261
-    * label *label262
   704 label *label231
-    * label *label232
   705 set *tmp263 100
   706 sensor *tmp261 .core @titanium
   707 jump *label272 greaterThanEq *tmp261 .targetTitanium
 
   716 op mul *tmp273 .unloader1 .powerTarget
   717 jump *label277 greaterThanEq *tmp272 *tmp273
   718 write "Goal 5: supplying generator" .display ".status1"
-    * label *label279
   719 set :mineOre.1:ore @coal
   720 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   721 call *label8 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
 
   725 sensor *tmp276 .core @silicon
   726 jump *label281 greaterThanEq *tmp276 .targetSilicon
   727 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label283
   728 sensor :supplyBase0:coal .core @coal
   729 sensor :supplyBase0:sand .core @sand
   730 set :mineOre.1:ore @sand
 
   739 sensor *tmp283 .core @copper
   740 jump *label287 greaterThanEq *tmp283 .targetCopper
   741 write "Goal 7: copper requirement" .display ".status1"
-    * label *label289
   742 set :mineOre.1:ore @copper
   743 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   744 call *label8 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
 
   748 sensor *tmp286 .core @lead
   749 jump *label291 greaterThanEq *tmp286 .targetLead
   750 write "Goal 8: lead requirement" .display ".status1"
-    * label *label293
   751 set :mineOre.1:ore @lead
   752 setaddr :mineOre.1*retaddr *label294 (h:*label294)
   753 call *label8 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
 
   757 sensor *tmp289 .core @metaglass
   758 jump *label295 greaterThanEq *tmp289 .targetMetaglass
   759 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label297
   760 set :mineOre.1:ore @sand
   761 setaddr :mineOre.1*retaddr *label298 (h:*label298)
   762 call *label8 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
 
   764 jump *label296 always
   765 label *label295
   766 write "Goal 10: supplying base" .display ".status1"
-    * label *label299
   767 sensor :supplyBase0:coal.1 .core @coal
   768 sensor :supplyBase0:sand.1 .core @sand
   769 set :mineOre.1:ore @sand
 
   779 label *label282
   780 label *label278
   781 label *label275
-    * label *label276
   782 jump *label274 always
   783 label *label273
   784 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label303
   785 set :fetchBlock:block .titaniumDrill
   786 set :fetchBlock:item @titanium
   787 setaddr :fetchBlock*retaddr *label304 (h:*label304)
   788 call *label9 *invalid :fetchBlock*retval (m:*label304) (h:*label304)
   789 label *label304
   790 label *label274
-    * label *label230
   791 return :supplyBase0*retaddr
   792 end
   793 label *label11
 
   798 sensor *tmp301 .core @lead
   799 jump *label308 greaterThanEq *tmp300 *tmp301
   800 write "Phase 1: mining sand" .display ".status1"
-    * label *label310
   801 set :mineOre.1:ore @sand
   802 setaddr :mineOre.1*retaddr *label311 (h:*label311)
   803 call *label8 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
 
   805 jump *label309 always
   806 label *label308
   807 write "Phase 1: mining lead" .display ".status1"
-    * label *label312
   808 set :mineOre.1:ore @lead
   809 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   810 call *label8 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
 
   816 sensor *tmp305 .core @lead
   817 jump *label314 greaterThanEq *tmp304 *tmp305
   818 write "Phase 1: mining coal" .display ".status1"
-    * label *label316
   819 set :mineOre.1:ore @coal
   820 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   821 call *label8 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
 
   823 jump *label315 always
   824 label *label314
   825 write "Phase 1: mining lead" .display ".status1"
-    * label *label318
   826 set :mineOre.1:ore @lead
   827 setaddr :mineOre.1*retaddr *label319 (h:*label319)
   828 call *label8 *invalid :mineOre.1*retval (m:*label319) (h:*label319)
   829 label *label319
   830 label *label315
   831 label *label307
-    * label *label305
   832 return :supplyBase1*retaddr
   833 end
   834 label *label12
   835 jump *label322 notEqual .phase 0
-    * label *label323
   836 setaddr :supplyBase0*retaddr *label324 (h:*label324)
   837 call *label10 *invalid :supplyBase0*retval (m:*label324) (h:*label324)
   838 label *label324
   839 jump *label321 always
   840 label *label322
   841 jump *label325 notEqual .phase 1
-    * label *label326
   842 setaddr :supplyBase1*retaddr *label327 (h:*label327)
   843 call *label11 *invalid :supplyBase1*retval (m:*label327) (h:*label327)
   844 label *label327
   845 label *label325
   846 label *label321
-    * label *label320
   847 return :supplyBase*retaddr
   848 end
   849 label *label13
 
   862 set :targetMet*retval true
   863 jump *label328 always
   864 label *label339
-    * label *label340
   865 label *label337
-    * label *label338
   866 label *label335
-    * label *label336
   867 label *label333
-    * label *label334
   868 label *label331
-    * label *label332
   869 label *label329
-    * label *label330
   870 set :targetMet*retval false
   871 jump *label328 always
   872 label *label328
   873 return :targetMet*retaddr
   874 end
   875 label *label14
-    * label *label384
   876 op sign :meetTarget:count :meetTarget:copper
-    * label *label385
-    * label *label388
   877 op sign *tmp329 :meetTarget:lead
   878 op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label389
-    * label *label392
   879 op sign *tmp329 :meetTarget:graphite
   880 op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label393
-    * label *label396
   881 op sign *tmp329 :meetTarget:silicon
   882 op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label397
-    * label *label400
   883 op sign *tmp329 :meetTarget:titanium
   884 op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label401
-    * label *label404
   885 op sign *tmp329 :meetTarget:metaglass
   886 op add :meetTarget:count :meetTarget:count *tmp329
-    * label *label405
-    * label *label344
   887 write :meetTarget:count .display ".totalTargets"
   888 write :meetTarget:block .display ".nextBlock"
   889 write :meetTarget:copper .display ".targetCopper"
 
   912 op mul *tmp337 *tmp336 20
   913 op add *tmp338 :meetTarget:silicon *tmp337
   914 write *tmp338 .controller ".siliconReserve"
-    * label *label351
   915 setaddr :targetMet*retaddr *label354 (h:*label354)
   916 call *label13 *invalid :targetMet*retval (m:*label354) (h:*label354)
   917 label *label354
 
   920 setaddr :supplyBase*retaddr *label355 (h:*label355)
   921 call *label12 *invalid :supplyBase*retval (m:*label355) (h:*label355)
   922 label *label355
-    * label *label352
   923 setaddr :targetMet*retaddr *label414 (h:*label414)
   924 call *label13 *invalid :targetMet*retval (m:*label414) (h:*label414)
   925 label *label414
   926 jump *label413 equal :targetMet*retval false
   927 label *label353
-    * label *label341
   928 return :meetTarget*retaddr
   929 end
   930 label *label15
 
   935 op mul *tmp344 *tmp343 1000
   936 op add *tmp345 :log:encodedId *tmp344
   937 write *tmp345 bank1 *tmp340
-    * label *label356
   938 return :log*retaddr
   939 end
   940 label *label16
 
   942 setaddr :log*retaddr *label358 (h:*label358)
   943 call *label15 *invalid :log*retval (m:*label358) (h:*label358)
   944 label *label358
-    * label *label357
   945 return :logBlock*retaddr
   946 end
   947 label *label17
 
   951 call *label2 *invalid :moveTo.1*retval (m:*label360) (h:*label360)
   952 label *label360
   953 write "Building..." .display ".status3"
-    * label *label361
   954 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   955 jump *label362 equal :buildBlockAt:building null
   956 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
   957 set :buildBlockAt*retval :buildBlockAt:building
   958 jump *label359 always
   959 label *label364
-    * label *label365
   960 jump *label366 equal :buildBlockAt:skipError false
   961 set :buildBlockAt*retval null
   962 jump *label359 always
   963 label *label366
-    * label *label367
   964 set .ERROR "Cannot build at ("
   965 stop
-    * label *label368
   966 label *label362
-    * label *label363
   967 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   968 wait 0.25
   969 label *label369
 
   972 set :buildBlockAt*retval null
   973 jump *label359 always
   974 label *label372
-    * label *label373
-    * label *label370
   975 jump *label369 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label371
   976 set :logBlock:block :buildBlockAt:block
   977 setaddr :logBlock*retaddr *label374 (h:*label374)
   978 call *label16 *invalid :logBlock*retval (m:*label374) (h:*label374)
 
  1002 call *label17 *invalid :buildBlockAt*retval (m:*label377) (h:*label377)
  1003 label *label377
  1004 set :buildBlock*retval :buildBlockAt*retval
-    * label *label375
  1005 return :buildBlock*retaddr
  1006 end
  1007 label *label19
 
  1012 label *label381
  1013 op add :findUnits:count :findUnits:count 1
  1014 ubind :findUnits:type
-    * label *label382
  1015 jump *label381 notEqual @unit :findUnits:firstUnit
-    * label *label383
  1016 label *label379
-    * label *label380
  1017 set :findUnits*retval :findUnits:count
-    * label *label378
  1018 return :findUnits*retaddr
  1019 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   289 call *label11 *invalid :supplyBase1*retval (m:*label107) (h:*label107)
   290 label *label107
   291 sensor *tmp127 *tmp78 @totalPower
-    * jump *label108 greaterThanEq *tmp127 300
-    * jump *label103 always
+  292 jump *label103 lessThan *tmp127 300
   293 label *label108
   294 read *tmp34 *tmp103 ".monos"
   295 jump *label101 lessThan *tmp34 3
 
   538 op notEqual *tmp195 :mineOre:item null
   539 op notEqual *tmp196 :mineOre:item :mineOre:ore
   540 op land *tmp197 *tmp195 *tmp196
-    * jump *label208 equal *tmp197 false
-    * jump *label207 always
+  541 jump *label207 notEqual *tmp197 false
   542 label *label208
   543 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label210 lessThanEq @second :mineOre:stop
-    * jump *label207 always
+  544 jump *label207 greaterThan @second :mineOre:stop
   545 label *label210
   546 sensor *tmp201 @unit @totalItems
   547 jump *label205 lessThan *tmp201 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   290 label *label107
   291 sensor *tmp127 *tmp78 @totalPower
   292 jump *label103 lessThan *tmp127 300
-    * label *label108
   293 read *tmp34 *tmp103 ".monos"
   294 jump *label101 lessThan *tmp34 3
   295 label *label103
 
   538 op notEqual *tmp196 :mineOre:item :mineOre:ore
   539 op land *tmp197 *tmp195 *tmp196
   540 jump *label207 notEqual *tmp197 false
-    * label *label208
   541 ucontrol mine :mineOre:x :mineOre:y
   542 jump *label207 greaterThan @second :mineOre:stop
-    * label *label210
   543 sensor *tmp201 @unit @totalItems
   544 jump *label205 lessThan *tmp201 :mineOre:amount
   545 label *label207

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   705 label *label272
   706 sensor *tmp267 .titaniumDrill @titanium
   707 jump *label273 greaterThanEq *tmp267 *tmp263
-    * jump *label275 notEqual :supplyBase0:supplied false
+  708 jump *label274 notEqual :supplyBase0:supplied false
   709 sensor *tmp272 .battery @totalPower
   710 op mul *tmp273 .unloader1 .powerTarget
   711 jump *label277 greaterThanEq *tmp272 *tmp273
 
   714 setaddr :mineOre.1*retaddr *label280 (h:*label280)
   715 call *label8 *invalid :mineOre.1*retval (m:*label280) (h:*label280)
   716 label *label280
-    * jump *label278 always
+  717 return :supplyBase0*retaddr
   718 label *label277
   719 sensor *tmp276 .core @silicon
   720 jump *label281 greaterThanEq *tmp276 .targetSilicon
 
   728 setaddr :mineOre.1*retaddr *label286 (h:*label286)
   729 call *label8 *invalid :mineOre.1*retval (m:*label286) (h:*label286)
   730 label *label286
-    * jump *label282 always
+  731 return :supplyBase0*retaddr
   732 label *label281
   733 sensor *tmp283 .core @copper
   734 jump *label287 greaterThanEq *tmp283 .targetCopper
 
   737 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   738 call *label8 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
   739 label *label290
-    * jump *label288 always
+  740 return :supplyBase0*retaddr
   741 label *label287
   742 sensor *tmp286 .core @lead
   743 jump *label291 greaterThanEq *tmp286 .targetLead
 
   746 setaddr :mineOre.1*retaddr *label294 (h:*label294)
   747 call *label8 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
   748 label *label294
-    * jump *label292 always
+  749 return :supplyBase0*retaddr
   750 label *label291
   751 sensor *tmp289 .core @metaglass
   752 jump *label295 greaterThanEq *tmp289 .targetMetaglass
 
   755 setaddr :mineOre.1*retaddr *label298 (h:*label298)
   756 call *label8 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
   757 label *label298
-    * jump *label296 always
+  758 return :supplyBase0*retaddr
   759 label *label295
   760 write "Goal 10: supplying base" .display ".status1"
   761 sensor :supplyBase0:coal.1 .core @coal
 
   773 label *label282
   774 label *label278
   775 label *label275
-    * jump *label274 always
+  776 return :supplyBase0*retaddr
   777 label *label273
   778 write "Goal 11: Fetching titanium" .display ".status1"
   779 set :fetchBlock:block .titaniumDrill
 
   796 setaddr :mineOre.1*retaddr *label311 (h:*label311)
   797 call *label8 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
   798 label *label311
-    * jump *label309 always
+  799 return :supplyBase1*retaddr
   800 label *label308
   801 write "Phase 1: mining lead" .display ".status1"
   802 set :mineOre.1:ore @lead
 
   804 call *label8 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
   805 label *label313
   806 label *label309
-    * jump *label307 always
+  807 return :supplyBase1*retaddr
   808 label *label306
   809 sensor *tmp304 .core @coal
   810 sensor *tmp305 .core @lead
 
   814 setaddr :mineOre.1*retaddr *label317 (h:*label317)
   815 call *label8 *invalid :mineOre.1*retval (m:*label317) (h:*label317)
   816 label *label317
-    * jump *label315 always
+  817 return :supplyBase1*retaddr
   818 label *label314
   819 write "Phase 1: mining lead" .display ".status1"
   820 set :mineOre.1:ore @lead
 
   830 setaddr :supplyBase0*retaddr *label324 (h:*label324)
   831 call *label10 *invalid :supplyBase0*retval (m:*label324) (h:*label324)
   832 label *label324
-    * jump *label321 always
+  833 return :supplyBase*retaddr
   834 label *label322
   835 jump *label325 notEqual .phase 1
   836 setaddr :supplyBase1*retaddr *label327 (h:*label327)
 
   854 sensor *tmp325 .core @metaglass
   855 jump *label339 lessThan *tmp325 .targetMetaglass
   856 set :targetMet*retval true
-    * jump *label328 always
+  857 return :targetMet*retaddr
   858 label *label339
   859 label *label337
   860 label *label335
 
   862 label *label331
   863 label *label329
   864 set :targetMet*retval false
-    * jump *label328 always
+  865 return :targetMet*retaddr
   866 label *label328
   867 return :targetMet*retaddr
   868 end
 
   949 jump *label362 equal :buildBlockAt:building null
   950 jump *label364 notEqual :buildBlockAt:type :buildBlockAt:block
   951 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label359 always
+  952 return :buildBlockAt*retaddr
   953 label *label364
   954 jump *label366 equal :buildBlockAt:skipError false
   955 set :buildBlockAt*retval null
-    * jump *label359 always
+  956 return :buildBlockAt*retaddr
   957 label *label366
   958 set .ERROR "Cannot build at ("
   959 stop
 
   964 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   965 jump *label372 notEqual :buildBlockAt:building null
   966 set :buildBlockAt*retval null
-    * jump *label359 always
+  967 return :buildBlockAt*retaddr
   968 label *label372
   969 jump *label369 notEqual :buildBlockAt:type :buildBlockAt:block
   970 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-42 instructions):
 
    53 label *label32
    54 set *tmp74 :buildBlock*retval
    55 jump *label27 always
-    * multijump *tmp75 0 0 (m:marker0)
-    * multilabel *label31 (m:marker0)
    56 label *label27
    57 set .press *tmp74
    58 op add :buildBlockFromCfg.1:y .coreY 4
 
    66 label *label38
    67 set *tmp78 :buildBlock*retval
    68 jump *label33 always
-    * multijump *tmp79 0 0 (m:marker1)
-    * multilabel *label37 (m:marker1)
    69 label *label33
    70 set .battery *tmp78
    71 op add :buildBlockFromCfg.2:x .coreX -1
 
    75 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    76 label *label44
    77 jump *label39 always
-    * multijump *tmp83 0 0 (m:marker2)
-    * multilabel *label43 (m:marker2)
    78 label *label39
    79 op add :buildBlockFromCfg.3:y .coreY 3
    80 set :buildBlock:block @combustion-generator
 
    87 label *label50
    88 set *tmp86 :buildBlock*retval
    89 jump *label45 always
-    * multijump *tmp87 0 0 (m:marker3)
-    * multilabel *label49 (m:marker3)
    90 label *label45
    91 set .generator *tmp86
    92 set .powerTarget 800
 
   101 label *label56
   102 set *tmp90 :buildBlock*retval
   103 jump *label51 always
-    * multijump *tmp91 0 0 (m:marker4)
-    * multilabel *label55 (m:marker4)
   104 label *label51
   105 set .smelter *tmp90
   106 set :meetTarget:block @pneumatic-drill
 
   159 label *label69
   160 set *tmp99 :buildBlock*retval
   161 jump *label64 always
-    * multijump *tmp100 0 0 (m:marker5)
-    * multilabel *label68 (m:marker5)
   162 label *label64
   163 set .unloader1 *tmp99
   164 op add :buildBlockFromCfg.6:x .coreX 1
 
   175 label *label75
   176 set *tmp103 :buildBlock*retval
   177 jump *label70 always
-    * multijump *tmp104 0 0 (m:marker6)
-    * multilabel *label74 (m:marker6)
   178 label *label70
   179 set .controller *tmp103
   180 write processor1 *tmp103 ".display"
 
   200 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   201 label *label81
   202 jump *label76 always
-    * multijump *tmp108 0 0 (m:marker7)
-    * multilabel *label80 (m:marker7)
   203 label *label76
   204 op add :buildBlockFromCfg.8:y .coreY 1
   205 set :buildBlock:block @unloader
 
   214 label *label87
   215 set *tmp111 :buildBlock*retval
   216 jump *label82 always
-    * multijump *tmp112 0 0 (m:marker8)
-    * multilabel *label86 (m:marker8)
   217 label *label82
   218 write *tmp111 *tmp103 ".unloader2"
   219 op add :buildBlockFromCfg.9:x .coreX -3
 
   228 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   229 label *label93
   230 jump *label88 always
-    * multijump *tmp116 0 0 (m:marker9)
-    * multilabel *label92 (m:marker9)
   231 label *label88
   232 op add :buildBlockFromCfg.10:x .coreX -4
   233 set :buildBlock:block @air-factory
 
   242 label *label99
   243 set *tmp119 :buildBlock*retval
   244 jump *label94 always
-    * multijump *tmp120 0 0 (m:marker10)
-    * multilabel *label98 (m:marker10)
   245 label *label94
   246 write *tmp119 *tmp103 ".factory"
   247 write *tmp119 processor1 ".factory"
 
   285 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   286 label *label115
   287 jump *label110 always
-    * multijump *tmp132 0 0 (m:marker11)
-    * multilabel *label114 (m:marker11)
   288 label *label110
   289 op add :buildBlock:x .coreX 3.5
   290 op add :buildBlock:y .coreY 0.5
 
   299 label *label121
   300 set *tmp135 :buildBlock*retval
   301 jump *label116 always
-    * multijump *tmp136 0 0 (m:marker12)
-    * multilabel *label120 (m:marker12)
   302 label *label116
   303 write *tmp135 *tmp103 ".kiln"
   304 set :buildBlock:block @junction
 
   311 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   312 label *label127
   313 jump *label122 always
-    * multijump *tmp140 0 0 (m:marker13)
-    * multilabel *label126 (m:marker13)
   314 label *label122
   315 op add :buildBlockFromCfg.14:x .coreX -3.5
   316 op add :buildBlock:y .coreY 4.5
 
   324 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   325 label *label133
   326 jump *label128 always
-    * multijump *tmp144 0 0 (m:marker14)
-    * multilabel *label132 (m:marker14)
   327 label *label128
   328 set :buildBlock:block @steam-generator
   329 set :buildBlock:x :buildBlockFromCfg.14:x
 
   338 label *label139
   339 set *tmp147 :buildBlock*retval
   340 jump *label134 always
-    * multijump *tmp148 0 0 (m:marker15)
-    * multilabel *label138 (m:marker15)
   341 label *label134
   342 write *tmp147 *tmp103 ".generator2"
   343 op add :buildBlock:x .coreX 4
 
   351 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   352 label *label145
   353 jump *label140 always
-    * multijump *tmp152 0 0 (m:marker16)
-    * multilabel *label144 (m:marker16)
   354 label *label140
   355 set .graphiteSurplus 100
   356 set .siliconSurplus 1000
 
   367 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   368 label *label151
   369 jump *label146 always
-    * multijump *tmp156 0 0 (m:marker17)
-    * multilabel *label150 (m:marker17)
   370 label *label146
   371 write 0 processor1 ".totalTargets"
   372 write null processor1 ".nextBlock"
 
   383 call *label12 *invalid :supplyBase*retval (m:*label159) (h:*label159)
   384 label *label159
   385 jump *label156 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   386 label *label1
   387 write "Moving..." .display ".status3"
   388 op sub *tmp163 :moveTo:radius 0.5
 
   394 jump *label409 equal *tmp161 false
   395 label *label166
   396 return :moveTo*retaddr
-    * end
   397 label *label2
   398 set :moveTo:x :moveTo.1:x
   399 set :moveTo:y :moveTo.1:y
 
   402 call *label1 *invalid :moveTo*retval (m:*label168) (h:*label168)
   403 label *label168
   404 return :moveTo.1*retaddr
-    * end
   405 label *label3
   406 write "Moving..." .display ".status3"
   407 label *label171
 
   413 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp169
   414 jump *label171 equal *tmp169 false
   415 return :moveToEmpty*retaddr
-    * end
   416 label *label4
   417 sensor *tmp171 :moveToBlock:block @x
   418 sensor *tmp172 :moveToBlock:block @y
 
   423 call *label1 *invalid :moveTo*retval (m:*label177) (h:*label177)
   424 label *label177
   425 return :moveToBlock*retaddr
-    * end
   426 label *label5
   427 write "Depositing..." .display ".status3"
   428 sensor *tmp173 @unit @firstItem
 
   452 write 0 .display ".transportTarget"
   453 write null .display ".transportItem"
   454 return :depositItems*retaddr
-    * end
   455 label *label6
   456 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
   457 jump *label191 notEqual *tmp183 false
 
   459 stop
   460 label *label191
   461 return :locateOre*retaddr
-    * end
   462 label *label7
   463 op min :mineOre:amount :mineOre:amount 30
   464 write :mineOre:amount .display ".transportTarget"
 
   504 call *label5 *invalid :depositItems*retval (m:*label212) (h:*label212)
   505 label *label212
   506 return :mineOre*retaddr
-    * end
   507 label *label8
   508 write "Mining " .display ".status2"
   509 write :mineOre.1:ore .display ".item2"
 
   515 call *label7 *invalid :mineOre*retval (m:*label215) (h:*label215)
   516 label *label215
   517 return :mineOre.1*retaddr
-    * end
   518 label *label9
   519 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   520 write :transportStatus.2:target .display ".transportTarget"
 
   556 call *label5 *invalid :depositItems*retval (m:*label229) (h:*label229)
   557 label *label229
   558 return :fetchBlock*retaddr
-    * end
   559 label *label10
   560 set :supplyBase0:supplied false
   561 jump *label231 notEqual .unloader1 null
 
   718 setaddr :mineOre.1*retaddr *label302 (h:*label302)
   719 call *label8 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
   720 label *label302
-    * label *label296
-    * label *label292
-    * label *label288
-    * label *label282
-    * label *label278
-    * label *label275
   721 return :supplyBase0*retaddr
   722 label *label273
   723 write "Goal 11: Fetching titanium" .display ".status1"
 
   728 label *label304
   729 label *label274
   730 return :supplyBase0*retaddr
-    * end
   731 label *label11
   732 sensor *tmp296 .core @sand
   733 sensor *tmp297 .core @coal
 
   747 setaddr :mineOre.1*retaddr *label313 (h:*label313)
   748 call *label8 *invalid :mineOre.1*retval (m:*label313) (h:*label313)
   749 label *label313
-    * label *label309
   750 return :supplyBase1*retaddr
   751 label *label306
   752 sensor *tmp304 .core @coal
 
   764 setaddr :mineOre.1*retaddr *label319 (h:*label319)
   765 call *label8 *invalid :mineOre.1*retval (m:*label319) (h:*label319)
   766 label *label319
-    * label *label315
-    * label *label307
   767 return :supplyBase1*retaddr
-    * end
   768 label *label12
   769 jump *label322 notEqual .phase 0
   770 setaddr :supplyBase0*retaddr *label324 (h:*label324)
 
   777 call *label11 *invalid :supplyBase1*retval (m:*label327) (h:*label327)
   778 label *label327
   779 label *label325
-    * label *label321
   780 return :supplyBase*retaddr
-    * end
   781 label *label13
   782 sensor *tmp310 .core @copper
   783 jump *label329 lessThan *tmp310 .targetCopper
 
   801 label *label329
   802 set :targetMet*retval false
   803 return :targetMet*retaddr
-    * label *label328
-    * return :targetMet*retaddr
-    * end
   804 label *label14
   805 op sign :meetTarget:count :meetTarget:copper
   806 op sign *tmp329 :meetTarget:lead
 
   855 jump *label413 equal :targetMet*retval false
   856 label *label353
   857 return :meetTarget*retaddr
-    * end
   858 label *label15
   859 read *tmp64 bank1 511
   860 op sub *tmp340 *tmp64 1
 
   864 op add *tmp345 :log:encodedId *tmp344
   865 write *tmp345 bank1 *tmp340
   866 return :log*retaddr
-    * end
   867 label *label16
   868 sensor :log:encodedId :logBlock:block @id
   869 setaddr :log*retaddr *label358 (h:*label358)
   870 call *label15 *invalid :log*retval (m:*label358) (h:*label358)
   871 label *label358
   872 return :logBlock*retaddr
-    * end
   873 label *label17
   874 set :moveTo.1:x :buildBlockAt:x
   875 set :moveTo.1:y :buildBlockAt:y
 
   904 call *label16 *invalid :logBlock*retval (m:*label374) (h:*label374)
   905 label *label374
   906 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label359
   907 return :buildBlockAt*retaddr
-    * end
   908 label *label18
   909 set :meetTarget:block :buildBlock:block
   910 set :meetTarget:copper :buildBlock:copper
 
   927 label *label377
   928 set :buildBlock*retval :buildBlockAt*retval
   929 return :buildBlock*retaddr
-    * end
   930 label *label19
   931 set :findUnits:count 0
   932 ubind :findUnits:type
 
   939 label *label379
   940 set :findUnits*retval :findUnits:count
   941 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-18 instructions):
 
    52 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    53 label *label32
    54 set *tmp74 :buildBlock*retval
-    * jump *label27 always
    55 label *label27
    56 set .press *tmp74
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    64 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    65 label *label38
    66 set *tmp78 :buildBlock*retval
-    * jump *label33 always
    67 label *label33
    68 set .battery *tmp78
    69 op add :buildBlockFromCfg.2:x .coreX -1
 
    72 setaddr :buildBlock*retaddr *label44 (h:*label44)
    73 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    74 label *label44
-    * jump *label39 always
    75 label *label39
    76 op add :buildBlockFromCfg.3:y .coreY 3
    77 set :buildBlock:block @combustion-generator
 
    83 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    84 label *label50
    85 set *tmp86 :buildBlock*retval
-    * jump *label45 always
    86 label *label45
    87 set .generator *tmp86
    88 set .powerTarget 800
 
    96 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
    97 label *label56
    98 set *tmp90 :buildBlock*retval
-    * jump *label51 always
    99 label *label51
   100 set .smelter *tmp90
   101 set :meetTarget:block @pneumatic-drill
 
   153 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   154 label *label69
   155 set *tmp99 :buildBlock*retval
-    * jump *label64 always
   156 label *label64
   157 set .unloader1 *tmp99
   158 op add :buildBlockFromCfg.6:x .coreX 1
 
   168 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)
   169 label *label75
   170 set *tmp103 :buildBlock*retval
-    * jump *label70 always
   171 label *label70
   172 set .controller *tmp103
   173 write processor1 *tmp103 ".display"
 
   192 setaddr :buildBlock*retaddr *label81 (h:*label81)
   193 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   194 label *label81
-    * jump *label76 always
   195 label *label76
   196 op add :buildBlockFromCfg.8:y .coreY 1
   197 set :buildBlock:block @unloader
 
   205 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   206 label *label87
   207 set *tmp111 :buildBlock*retval
-    * jump *label82 always
   208 label *label82
   209 write *tmp111 *tmp103 ".unloader2"
   210 op add :buildBlockFromCfg.9:x .coreX -3
 
   218 setaddr :buildBlock*retaddr *label93 (h:*label93)
   219 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   220 label *label93
-    * jump *label88 always
   221 label *label88
   222 op add :buildBlockFromCfg.10:x .coreX -4
   223 set :buildBlock:block @air-factory
 
   231 call *label18 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   232 label *label99
   233 set *tmp119 :buildBlock*retval
-    * jump *label94 always
   234 label *label94
   235 write *tmp119 *tmp103 ".factory"
   236 write *tmp119 processor1 ".factory"
 
   273 setaddr :buildBlock*retaddr *label115 (h:*label115)
   274 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   275 label *label115
-    * jump *label110 always
   276 label *label110
   277 op add :buildBlock:x .coreX 3.5
   278 op add :buildBlock:y .coreY 0.5
 
   286 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   287 label *label121
   288 set *tmp135 :buildBlock*retval
-    * jump *label116 always
   289 label *label116
   290 write *tmp135 *tmp103 ".kiln"
   291 set :buildBlock:block @junction
 
   297 setaddr :buildBlock*retaddr *label127 (h:*label127)
   298 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   299 label *label127
-    * jump *label122 always
   300 label *label122
   301 op add :buildBlockFromCfg.14:x .coreX -3.5
   302 op add :buildBlock:y .coreY 4.5
 
   309 setaddr :buildBlock*retaddr *label133 (h:*label133)
   310 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   311 label *label133
-    * jump *label128 always
   312 label *label128
   313 set :buildBlock:block @steam-generator
   314 set :buildBlock:x :buildBlockFromCfg.14:x
 
   322 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   323 label *label139
   324 set *tmp147 :buildBlock*retval
-    * jump *label134 always
   325 label *label134
   326 write *tmp147 *tmp103 ".generator2"
   327 op add :buildBlock:x .coreX 4
 
   334 setaddr :buildBlock*retaddr *label145 (h:*label145)
   335 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   336 label *label145
-    * jump *label140 always
   337 label *label140
   338 set .graphiteSurplus 100
   339 set .siliconSurplus 1000
 
   349 setaddr :buildBlock*retaddr *label151 (h:*label151)
   350 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   351 label *label151
-    * jump *label146 always
   352 label *label146
   353 write 0 processor1 ".totalTargets"
   354 write null processor1 ".nextBlock"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    52 call *label18 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    53 label *label32
    54 set *tmp74 :buildBlock*retval
-    * label *label27
    55 set .press *tmp74
    56 op add :buildBlockFromCfg.1:y .coreY 4
    57 set :buildBlock:block @battery
 
    63 call *label18 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    64 label *label38
    65 set *tmp78 :buildBlock*retval
-    * label *label33
    66 set .battery *tmp78
    67 op add :buildBlockFromCfg.2:x .coreX -1
    68 set :buildBlock:x :buildBlockFromCfg.2:x
 
    70 setaddr :buildBlock*retaddr *label44 (h:*label44)
    71 call *label18 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    72 label *label44
-    * label *label39
    73 op add :buildBlockFromCfg.3:y .coreY 3
    74 set :buildBlock:block @combustion-generator
    75 set :buildBlock:x .coreX
 
    80 call *label18 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    81 label *label50
    82 set *tmp86 :buildBlock*retval
-    * label *label45
    83 set .generator *tmp86
    84 set .powerTarget 800
    85 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    92 call *label18 *invalid :buildBlock*retval (m:*label56) (h:*label56)
    93 label *label56
    94 set *tmp90 :buildBlock*retval
-    * label *label51
    95 set .smelter *tmp90
    96 set :meetTarget:block @pneumatic-drill
    97 set :meetTarget:copper 18
 
   148 call *label18 *invalid :buildBlock*retval (m:*label69) (h:*label69)
   149 label *label69
   150 set *tmp99 :buildBlock*retval
-    * label *label64
   151 set .unloader1 *tmp99
   152 op add :buildBlockFromCfg.6:x .coreX 1
   153 set :buildBlock:block @micro-processor
 
   162 call *label18 *invalid :buildBlock*retval (m:*label75) (h:*label75)
   163 label *label75
   164 set *tmp103 :buildBlock*retval
-    * label *label70
   165 set .controller *tmp103
   166 write processor1 *tmp103 ".display"
   167 write .core *tmp103 ".core"
 
   185 setaddr :buildBlock*retaddr *label81 (h:*label81)
   186 call *label18 *invalid :buildBlock*retval (m:*label81) (h:*label81)
   187 label *label81
-    * label *label76
   188 op add :buildBlockFromCfg.8:y .coreY 1
   189 set :buildBlock:block @unloader
   190 set :buildBlock:x :buildBlockFromCfg.7:x
 
   197 call *label18 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   198 label *label87
   199 set *tmp111 :buildBlock*retval
-    * label *label82
   200 write *tmp111 *tmp103 ".unloader2"
   201 op add :buildBlockFromCfg.9:x .coreX -3
   202 set :buildBlock:block @overflow-gate
 
   209 setaddr :buildBlock*retaddr *label93 (h:*label93)
   210 call *label18 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   211 label *label93
-    * label *label88
   212 op add :buildBlockFromCfg.10:x .coreX -4
   213 set :buildBlock:block @air-factory
   214 set :buildBlock:x :buildBlockFromCfg.10:x
 
   221 call *label18 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   222 label *label99
   223 set *tmp119 :buildBlock*retval
-    * label *label94
   224 write *tmp119 *tmp103 ".factory"
   225 write *tmp119 processor1 ".factory"
   226 write 2 *tmp103 ".flareTarget"
 
   262 setaddr :buildBlock*retaddr *label115 (h:*label115)
   263 call *label18 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   264 label *label115
-    * label *label110
   265 op add :buildBlock:x .coreX 3.5
   266 op add :buildBlock:y .coreY 0.5
   267 set :buildBlock:block @kiln
 
   274 call *label18 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   275 label *label121
   276 set *tmp135 :buildBlock*retval
-    * label *label116
   277 write *tmp135 *tmp103 ".kiln"
   278 set :buildBlock:block @junction
   279 set :buildBlock:x :buildBlockFromCfg.11:x
 
   284 setaddr :buildBlock*retaddr *label127 (h:*label127)
   285 call *label18 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   286 label *label127
-    * label *label122
   287 op add :buildBlockFromCfg.14:x .coreX -3.5
   288 op add :buildBlock:y .coreY 4.5
   289 set :buildBlock:block @water-extractor
 
   295 setaddr :buildBlock*retaddr *label133 (h:*label133)
   296 call *label18 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   297 label *label133
-    * label *label128
   298 set :buildBlock:block @steam-generator
   299 set :buildBlock:x :buildBlockFromCfg.14:x
   300 set :buildBlock:y :buildBlockFromCfg:y
 
   307 call *label18 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   308 label *label139
   309 set *tmp147 :buildBlock*retval
-    * label *label134
   310 write *tmp147 *tmp103 ".generator2"
   311 op add :buildBlock:x .coreX 4
   312 set :buildBlock:block @battery-large
 
   318 setaddr :buildBlock*retaddr *label145 (h:*label145)
   319 call *label18 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   320 label *label145
-    * label *label140
   321 set .graphiteSurplus 100
   322 set .siliconSurplus 1000
   323 set .metaglassSurplus 100
 
   332 setaddr :buildBlock*retaddr *label151 (h:*label151)
   333 call *label18 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   334 label *label151
-    * label *label146
   335 write 0 processor1 ".totalTargets"
   336 write null processor1 ".nextBlock"
   337 label *label152

Final code before resolving virtual instructions:

    0:  jump *label415 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 .ERROR
    2:  draw triangle .battery .controller .core .coreX .coreY .display
    3:  draw triangle .generator .graphiteSurplus .metaglassSurplus .phase .powerTarget .press
    4:  draw triangle .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass
    5:  draw triangle .targetSilicon .targetTitanium .titaniumDrill .unloader1 :flares :monos
    6:  draw triangle :polys :thoriumDrill :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite
    7:  draw triangle :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x
    8:  draw triangle :buildBlock:y :buildBlockAt:block :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError
    9:  draw triangle :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x
   10:  draw triangle :buildBlockFromCfg.9:x :buildBlockFromCfg.4:x :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x
   11:  draw triangle :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg:y :buildBlockFromCfg.8:y :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y
   12:  draw triangle :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item
   13:  draw triangle :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem :findUnits:count :findUnits:firstUnit :findUnits:type
   14:  draw triangle :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block :meetTarget:block
   15:  draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
   16:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore
   17:  draw triangle :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x
   18:  draw triangle :moveTo.1:y :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y
   19:  draw triangle :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock.3:blockCapacity
   20:  draw triangle :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing :supplyBlock.2:missing
   21:  draw triangle :supplyBlock.3:missing :transportStatus.2:target 0 0 0 0
        label *label415
   22:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
        label *label20                                               CoreBuilder.mnd: require "OreLocator.mnd" remote processor4;
   23:  read *tmp63 processor4 "*signature"                          ...
   24:  jump *label20 notEqual *tmp63 "56ce045a33d85ce5:v1"          ...
   25:  set .press null                                              CoreBuilder.mnd: var
   26:  set .generator null                                          ...
   27:  set .battery null                                            ...
   28:  set .smelter null                                            ...
   29:  set .titaniumDrill null                                      ...
   30:  set .unloader1 null                                          ...
   31:  set .phase 0                                                 CoreBuilder.mnd: var phase = 0;
   32:  set .graphiteSurplus 20                                      CoreBuilder.mnd: var
   33:  set .siliconSurplus 20                                       ...
   34:  set .metaglassSurplus 20                                     ...
   35:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label21                                               CoreBuilder.mnd: do
   36:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   37:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   38:  jump *label21 equal .core null                               CoreBuilder.mnd: do
   39:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   40:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.monos);
   41:  setaddr :findUnits*retaddr *label24                          ...
   42:  call *label19 *invalid :findUnits*retval                     ...
        label *label24                                               ...
   43:  write :findUnits:count processor1 ".monos"                   ...
   44:  set :monos :findUnits*retval                                 ...
   45:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.flares);
   46:  setaddr :findUnits*retaddr *label25                          ...
   47:  call *label19 *invalid :findUnits*retval                     ...
        label *label25                                               ...
   48:  write :findUnits:count processor1 ".flares"                  ...
   49:  set :flares :findUnits*retval                                ...
   50:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.polys);
   51:  setaddr :findUnits*retaddr *label26                          ...
   52:  call *label19 *invalid :findUnits*retval                     ...
        label *label26                                               ...
   53:  write :findUnits:count processor1 ".polys"                   ...
   54:  set :polys :findUnits*retval                                 ...
   55:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   56:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   57:  set :buildBlock:block @graphite-press                        ...
   58:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   59:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   60:  set :buildBlock:copper 75                                    ...
   61:  set :buildBlock:lead 30                                      ...
   62:  set :buildBlock:graphite 0                                   ...
   63:  set :buildBlock:silicon 0                                    ...
   64:  set :buildBlock:titanium 0                                   ...
   65:  set :buildBlock:metaglass 0                                  ...
   66:  set :buildBlock:rotation 0                                   ...
   67:  set :buildBlock:config null                                  ...
   68:  setaddr :buildBlock*retaddr *label32                         ...
   69:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label32                                               ...
   70:  set *tmp74 :buildBlock*retval                                ...
   71:  set .press *tmp74                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   72:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   73:  set :buildBlock:block @battery                               ...
   74:  set :buildBlock:x .coreX                                     ...
   75:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   76:  set :buildBlock:copper 5                                     ...
   77:  set :buildBlock:lead 20                                      ...
   78:  setaddr :buildBlock*retaddr *label38                         ...
   79:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label38                                               ...
   80:  set *tmp78 :buildBlock*retval                                ...
   81:  set .battery *tmp78                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   82:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   83:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   84:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   85:  setaddr :buildBlock*retaddr *label44                         ...
   86:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label44                                               ...
   87:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   88:  set :buildBlock:block @combustion-generator                  ...
   89:  set :buildBlock:x .coreX                                     ...
   90:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   91:  set :buildBlock:copper 25                                    ...
   92:  set :buildBlock:lead 15                                      ...
   93:  setaddr :buildBlock*retaddr *label50                         ...
   94:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label50                                               ...
   95:  set *tmp86 :buildBlock*retval                                ...
   96:  set .generator *tmp86                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   97:  set .powerTarget 800                                         CoreBuilder.mnd: powerTarget = 800;
   98:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   99:  set :buildBlock:block @silicon-smelter                       ...
  100:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  101:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  102:  set :buildBlock:copper 30                                    ...
  103:  set :buildBlock:lead 25                                      ...
  104:  setaddr :buildBlock*retaddr *label56                         ...
  105:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label56                                               ...
  106:  set *tmp90 :buildBlock*retval                                ...
  107:  set .smelter *tmp90                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  108:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  109:  set :meetTarget:copper 18                                    ...
  110:  set :meetTarget:lead 0                                       ...
  111:  set :meetTarget:graphite 10                                  ...
  112:  set :meetTarget:silicon 0                                    ...
  113:  set :meetTarget:titanium 0                                   ...
  114:  set :meetTarget:metaglass 0                                  ...
  115:  setaddr :meetTarget*retaddr *label58                         ...
  116:  call *label14 *invalid :meetTarget*retval                    ...
        label *label58                                               ...
  117:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  118:  write .coreY processor4 ":findDrillLocation:y"               ...
  119:  write @unit processor4 ":findDrillLocation:unit"             ...
  120:  write @titanium processor4 ":findDrillLocation:item"         ...
  121:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  122:  write false processor4 ":findDrillLocation:large"            ...
  123:  write 4 processor4 ":findDrillLocation:limit"                ...
  124:  write false processor4 ":findDrillLocation*finished"         ...
  125:  write 1 processor4 "@counter"                                ...
        label *label59                                               ...
  126:  wait 1e-15                                                   ...
  127:  read *tmp95 processor4 ":findDrillLocation*finished"         ...
  128:  jump *label59 equal *tmp95 false                             ...
  129:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  130:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  131:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  132:  jump *label60 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  133:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  134:  stop                                                         Actions.mnd: stopProcessor();
        label *label60                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  135:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  136:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  137:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  138:  set :buildBlockAt:rotation null                              ...
  139:  set :buildBlockAt:config 0                                   ...
  140:  set :buildBlockAt:skipError false                            ...
  141:  setaddr :buildBlockAt*retaddr *label63                       ...
  142:  call *label17 *invalid :buildBlockAt*retval                  ...
        label *label63                                               ...
  143:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  144:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  145:  write .core processor3 ".core"                               CoreBuilder.mnd: flareController.core = core;
  146:  write :buildBlockAt*retval processor3 ".drill"               CoreBuilder.mnd: flareController.drill = titaniumDrill;
  147:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  148:  set :buildBlock:block @unloader                              ...
  149:  set :buildBlock:x .coreX                                     ...
  150:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  151:  set :buildBlock:copper 0                                     ...
  152:  set :buildBlock:lead 0                                       ...
  153:  set :buildBlock:silicon 30                                   ...
  154:  set :buildBlock:titanium 25                                  ...
  155:  setaddr :buildBlock*retaddr *label69                         ...
  156:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label69                                               ...
  157:  set *tmp99 :buildBlock*retval                                ...
  158:  set .unloader1 *tmp99                                        CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  159:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  160:  set :buildBlock:block @micro-processor                       ...
  161:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  162:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  163:  set :buildBlock:copper 90                                    ...
  164:  set :buildBlock:lead 50                                      ...
  165:  set :buildBlock:silicon 50                                   ...
  166:  set :buildBlock:titanium 0                                   ...
  167:  setaddr :buildBlock*retaddr *label75                         ...
  168:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  169:  call *label18 *invalid :buildBlock*retval                    ...
        label *label75                                               ...
  170:  set *tmp103 :buildBlock*retval                               ...
  171:  set .controller *tmp103                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  172:  write processor1 *tmp103 ".display"                          CoreBuilder.mnd: controller.display = display;
  173:  write .core *tmp103 ".core"                                  CoreBuilder.mnd: controller.core = core;
  174:  write bank1 *tmp103 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  175:  write *tmp78 *tmp103 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  176:  write *tmp86 *tmp103 ".generator"                            CoreBuilder.mnd: controller.generator = generator;
  177:  write *tmp90 *tmp103 ".smelter"                              CoreBuilder.mnd: controller.smelter = smelter;
  178:  write *tmp74 *tmp103 ".press"                                CoreBuilder.mnd: controller.press = press;
  179:  write :monos *tmp103 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  180:  write :flares *tmp103 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  181:  write :polys *tmp103 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  182:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  183:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  184:  set :buildBlock:block @power-node                            ...
  185:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  186:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  187:  set :buildBlock:copper 2                                     ...
  188:  set :buildBlock:lead 6                                       ...
  189:  set :buildBlock:silicon 0                                    ...
  190:  set :buildBlock:config null                                  ...
  191:  setaddr :buildBlock*retaddr *label81                         ...
  192:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label81                                               ...
  193:  op add :buildBlockFromCfg.8:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  194:  set :buildBlock:block @unloader                              ...
  195:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  196:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  197:  set :buildBlock:copper 0                                     ...
  198:  set :buildBlock:lead 0                                       ...
  199:  set :buildBlock:silicon 30                                   ...
  200:  set :buildBlock:titanium 25                                  ...
  201:  setaddr :buildBlock*retaddr *label87                         ...
  202:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label87                                               ...
  203:  set *tmp111 :buildBlock*retval                               ...
  204:  write *tmp111 *tmp103 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  205:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  206:  set :buildBlock:block @overflow-gate                         ...
  207:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  208:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  209:  set :buildBlock:copper 4                                     ...
  210:  set :buildBlock:lead 2                                       ...
  211:  set :buildBlock:silicon 0                                    ...
  212:  set :buildBlock:titanium 0                                   ...
  213:  setaddr :buildBlock*retaddr *label93                         ...
  214:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label93                                               ...
  215:  op add :buildBlockFromCfg.10:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  216:  set :buildBlock:block @air-factory                           ...
  217:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  218:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  219:  set :buildBlock:copper 60                                    ...
  220:  set :buildBlock:lead 70                                      ...
  221:  set :buildBlock:rotation 3                                   ...
  222:  set :buildBlock:config @mono                                 ...
  223:  setaddr :buildBlock*retaddr *label99                         ...
  224:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label99                                               ...
  225:  set *tmp119 :buildBlock*retval                               ...
  226:  write *tmp119 *tmp103 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  227:  write *tmp119 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  228:  write 2 *tmp103 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 2;
  229:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  230:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  231:  write 0 *tmp103 ".leadReserve"                               CoreBuilder.mnd: controller.leadReserve = 0;
  232:  write 0 *tmp103 ".siliconReserve"                            CoreBuilder.mnd: controller.siliconReserve = 0;
  233:  write @flare *tmp103 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = unit;
  234:  set .phase 1                                                 CoreBuilder.mnd: begin
  235:  write 85 *tmp103 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  236:  write 150 *tmp103 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  237:  write 30 *tmp103 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  238:  set :thoriumDrill true                                       CoreBuilder.mnd: var thoriumDrill = true;
        label *label101                                              CoreBuilder.mnd: do
  239:  read *tmp35 *tmp103 ".flares"                                CoreBuilder.mnd: if thoriumDrill and controller.flares > 1 then
  240:  op greaterThan *tmp124 *tmp35 1                              ...
  241:  op land *tmp125 :thoriumDrill *tmp124                        ...
  242:  jump *label104 equal *tmp125 false                           ...
  243:  set :thoriumDrill false                                      CoreBuilder.mnd: thoriumDrill = false;
        label *label104                                              CoreBuilder.mnd: if thoriumDrill and controller.flares > 1 then
  244:  setaddr :supplyBase1*retaddr *label107                       CoreBuilder.mnd: supplyBase1();
  245:  call *label11 *invalid :supplyBase1*retval                   ...
        label *label107                                              ...
  246:  sensor *tmp127 *tmp78 @totalPower                            CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  247:  jump *label103 lessThan *tmp127 300                          ...
  248:  read *tmp34 *tmp103 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  249:  jump *label101 lessThan *tmp34 3                             CoreBuilder.mnd: do
        label *label103                                              ...
  250:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  251:  set :buildBlock:y .coreY                                     ...
  252:  set :buildBlock:block @unloader                              ...
  253:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  254:  set :buildBlock:copper 0                                     ...
  255:  set :buildBlock:lead 0                                       ...
  256:  set :buildBlock:silicon 30                                   ...
  257:  set :buildBlock:titanium 25                                  ...
  258:  set :buildBlock:rotation 0                                   ...
  259:  set :buildBlock:config null                                  ...
  260:  setaddr :buildBlock*retaddr *label115                        ...
  261:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label115                                              ...
  262:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  263:  op add :buildBlock:y .coreY 0.5                              ...
  264:  set :buildBlock:block @kiln                                  ...
  265:  set :buildBlock:copper 60                                    ...
  266:  set :buildBlock:lead 30                                      ...
  267:  set :buildBlock:graphite 30                                  ...
  268:  set :buildBlock:silicon 0                                    ...
  269:  set :buildBlock:titanium 0                                   ...
  270:  setaddr :buildBlock*retaddr *label121                        ...
  271:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label121                                              ...
  272:  set *tmp135 :buildBlock*retval                               ...
  273:  write *tmp135 *tmp103 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  274:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  275:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  276:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  277:  set :buildBlock:copper 3                                     ...
  278:  set :buildBlock:lead 0                                       ...
  279:  set :buildBlock:graphite 0                                   ...
  280:  setaddr :buildBlock*retaddr *label127                        ...
  281:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  282:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  283:  op add :buildBlock:y .coreY 4.5                              ...
  284:  set :buildBlock:block @water-extractor                       ...
  285:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  286:  set :buildBlock:copper 30                                    ...
  287:  set :buildBlock:lead 30                                      ...
  288:  set :buildBlock:graphite 30                                  ...
  289:  set :buildBlock:metaglass 30                                 ...
  290:  setaddr :buildBlock*retaddr *label133                        ...
  291:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  292:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  293:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  294:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  295:  set :buildBlock:copper 35                                    ...
  296:  set :buildBlock:lead 40                                      ...
  297:  set :buildBlock:graphite 25                                  ...
  298:  set :buildBlock:silicon 30                                   ...
  299:  set :buildBlock:metaglass 0                                  ...
  300:  setaddr :buildBlock*retaddr *label139                        ...
  301:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  302:  set *tmp147 :buildBlock*retval                               ...
  303:  write *tmp147 *tmp103 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  304:  op add :buildBlock:x .coreX 4                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  305:  set :buildBlock:block @battery-large                         ...
  306:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
  307:  set :buildBlock:copper 0                                     ...
  308:  set :buildBlock:lead 50                                      ...
  309:  set :buildBlock:graphite 0                                   ...
  310:  set :buildBlock:titanium 20                                  ...
  311:  setaddr :buildBlock*retaddr *label145                        ...
  312:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label145                                              ...
  313:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  314:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  315:  set .metaglassSurplus 100                                    CoreBuilder.mnd: metaglassSurplus = 100;
  316:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  317:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  318:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  319:  set :buildBlock:copper 2                                     ...
  320:  set :buildBlock:lead 2                                       ...
  321:  set :buildBlock:silicon 0                                    ...
  322:  set :buildBlock:titanium 0                                   ...
  323:  set :buildBlock:config @coal                                 ...
  324:  setaddr :buildBlock*retaddr *label151                        ...
  325:  call *label18 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label151                                              ...
  326:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  327:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label152                                              CoreBuilder.mnd: do
  328:  setaddr :supplyBase1*retaddr *label155                       CoreBuilder.mnd: supplyBase1();
  329:  call *label11 *invalid :supplyBase1*retval                   ...
        label *label155                                              ...
  330:  read *tmp35 *tmp103 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  331:  read *tmp34 *tmp103 ".monos"                                 ...
  332:  op add *tmp159 *tmp35 *tmp34                                 ...
  333:  jump *label152 lessThan *tmp159 16                           CoreBuilder.mnd: do
        label *label156                                              CoreBuilder.mnd: while true do
  334:  setaddr :supplyBase*retaddr *label159                        CoreBuilder.mnd: supplyBase();
  335:  call *label12 *invalid :supplyBase*retval                    ...
        label *label159                                              ...
  336:  jump *label156 always 0 0                                    CoreBuilder.mnd: while true do
        label *label1                                                Actions.mnd: void moveTo(x, y, radius)
  337:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  338:  op sub *tmp163 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  339:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161 0 ...
  340:  jump *label166 notEqual *tmp161 false                        ...
        label *label409                                              ...
  341:  ucontrol approach :moveTo:x :moveTo:y *tmp163 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  342:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161 0 Actions.mnd: while !within(x, y, radius) do
  343:  jump *label409 equal *tmp161 false                           ...
        label *label166                                              ...
  344:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label2                                                Actions.mnd: void moveTo(x, y)
  345:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  346:  set :moveTo:y :moveTo.1:y                                    ...
  347:  set :moveTo:radius 6                                         ...
  348:  setaddr :moveTo*retaddr *label168                            ...
  349:  call *label1 *invalid :moveTo*retval                         ...
        label *label168                                              ...
  350:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label3                                                Actions.mnd: void moveToEmpty(x, y)
  351:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label171                                              Actions.mnd: do
  352:  sensor *tmp166 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  353:  jump *label174 equal *tmp166 null                            ...
  354:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label174                                              ...
  355:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  356:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp169 0    Actions.mnd: while !within(x, y, RADIUS);
  357:  jump *label171 equal *tmp169 false                           Actions.mnd: do
  358:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label4                                                Actions.mnd: void moveToBlock(block, radius)
  359:  sensor *tmp171 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  360:  sensor *tmp172 :moveToBlock:block @y                         ...
  361:  set :moveTo:x *tmp171                                        ...
  362:  set :moveTo:y *tmp172                                        ...
  363:  set :moveTo:radius :moveToBlock:radius                       ...
  364:  setaddr :moveTo*retaddr *label177                            ...
  365:  call *label1 *invalid :moveTo*retval                         ...
        label *label177                                              ...
  366:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label5                                                Actions.mnd: void depositItems(block, item)
  367:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  368:  sensor *tmp173 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  369:  jump *label180 notEqual *tmp173 :depositItems:item           ...
  370:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  371:  set :moveToBlock:radius 6                                    ...
  372:  setaddr :moveToBlock*retaddr *label182                       ...
  373:  call *label4 *invalid :moveToBlock*retval                    ...
        label *label182                                              ...
  374:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label183                                              Actions.mnd: do
  375:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  376:  sensor *tmp177 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  377:  op mul *tmp178 *tmp177 :depositItems:cap                     ...
  378:  sensor *tmp179 :depositItems:block :depositItems:item        ...
  379:  jump *label183 greaterThan *tmp178 *tmp179                   Actions.mnd: do
  380:  jump *label181 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label180                                              ...
  381:  sensor *tmp181 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  382:  jump *label188 equal *tmp181 null                            ...
        label *label410                                              ...
  383:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  384:  sensor *tmp181 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  385:  jump *label410 notEqual *tmp181 null                         ...
        label *label188                                              ...
        label *label181                                              Actions.mnd: if @unit.@firstItem == item then
  386:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  387:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  388:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label6                                                Actions.mnd: void locateOre(ore, out x, out y)
  389:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  390:  jump *label191 notEqual *tmp183 false                        ...
  391:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  392:  stop                                                         Actions.mnd: stopProcessor();
        label *label191                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  393:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label7                                                Actions.mnd: void mineOre(ore, amount, block)
  394:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  395:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  396:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  397:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  398:  setaddr :locateOre*retaddr *label196                         ...
  399:  call *label6 *invalid :locateOre*retval                      ...
        label *label196                                              ...
  400:  set :mineOre:x :locateOre:x                                  ...
  401:  set :mineOre:y :locateOre:y                                  ...
  402:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  403:  set :moveToEmpty:y :locateOre:y                              ...
  404:  setaddr :moveToEmpty*retaddr *label197                       ...
  405:  call *label3 *invalid :moveToEmpty*retval                    ...
        label *label197                                              ...
  406:  sensor *tmp188 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  407:  jump *label198 equal *tmp188 :mineOre:ore                    ...
  408:  sensor *tmp191 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  409:  jump *label203 equal *tmp191 null                            ...
        label *label411                                              ...
  410:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  411:  sensor *tmp191 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  412:  jump *label411 notEqual *tmp191 null                         ...
        label *label203                                              ...
        label *label198                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  413:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  414:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label205                                              Actions.mnd: do
  415:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  416:  op notEqual *tmp195 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  417:  op notEqual *tmp196 :mineOre:item :mineOre:ore               ...
  418:  op land *tmp197 *tmp195 *tmp196                              ...
  419:  jump *label207 notEqual *tmp197 false                        ...
  420:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  421:  jump *label207 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  422:  sensor *tmp201 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  423:  jump *label205 lessThan *tmp201 :mineOre:amount              Actions.mnd: do
        label *label207                                              ...
  424:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  425:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  426:  set :depositItems:item :mineOre:ore                          ...
  427:  setaddr :depositItems*retaddr *label212                      ...
  428:  call *label5 *invalid :depositItems*retval                   ...
        label *label212                                              ...
  429:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label8                                                Actions.mnd: void mineOre(ore)
  430:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  431:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  432:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  433:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  434:  set :mineOre:amount 30                                       ...
  435:  set :mineOre:block .core                                     ...
  436:  setaddr :mineOre*retaddr *label215                           ...
  437:  call *label7 *invalid :mineOre*retval                        ...
        label *label215                                              ...
  438:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label9                                                Actions.mnd: void fetchBlock(block, item)
  439:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  440:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  441:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  442:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  443:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  444:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  445:  sensor *tmp205 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  446:  sensor *tmp206 :fetchBlock:block @y                          ...
  447:  set :moveToEmpty:x *tmp205                                   ...
  448:  set :moveToEmpty:y *tmp206                                   ...
  449:  setaddr :moveToEmpty*retaddr *label219                       ...
  450:  call *label3 *invalid :moveToEmpty*retval                    ...
        label *label219                                              ...
  451:  sensor *tmp207 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  452:  jump *label223 equal *tmp207 null                            ...
        label *label412                                              ...
  453:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  454:  sensor *tmp207 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  455:  jump *label412 notEqual *tmp207 null                         ...
        label *label223                                              ...
        label *label224                                              Actions.mnd: do
  456:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  457:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  458:  op notEqual *tmp210 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  459:  op notEqual *tmp211 :fetchBlock:unitItem :fetchBlock:item    ...
  460:  op land *tmp212 *tmp210 *tmp211                              ...
  461:  jump *label227 equal *tmp212 false                           ...
  462:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label227                                              Actions.mnd: if unitItem != null and unitItem != item then
  463:  sensor *tmp214 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  464:  op lessThan *tmp215 *tmp214 30                               ...
  465:  sensor *tmp216 :fetchBlock:block :fetchBlock:item            ...
  466:  op land *tmp217 *tmp215 *tmp216                              ...
  467:  jump *label224 notEqual *tmp217 false                        Actions.mnd: do
  468:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  469:  set :depositItems:item :fetchBlock:item                      ...
  470:  setaddr :depositItems*retaddr *label229                      ...
  471:  call *label5 *invalid :depositItems*retval                   ...
        label *label229                                              ...
  472:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label10                                               CoreBuilder.mnd: void supplyBase0()
  473:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  474:  jump *label231 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  475:  sensor *tmp220 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  476:  jump *label233 greaterThanEq *tmp220 .targetGraphite         ...
  477:  sensor *tmp223 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  478:  jump *label235 greaterThanEq *tmp223 5                       ...
  479:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  480:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  481:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  482:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  483:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  484:  sensor *tmp227 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  485:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  486:  jump *label240 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  487:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  488:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  489:  set :mineOre:block .press                                    ...
  490:  setaddr :mineOre*retaddr *label242                           ...
  491:  call *label7 *invalid :mineOre*retval                        ...
        label *label242                                              ...
        label *label240                                              CoreBuilder.mnd: if missing > 0 then
  492:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label235                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label233                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  493:  sensor *tmp231 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  494:  jump *label243 greaterThanEq *tmp231 .targetSilicon          ...
  495:  sensor *tmp234 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  496:  jump *label245 greaterThanEq *tmp234 5                       ...
  497:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  498:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  499:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  500:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  501:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  502:  sensor *tmp238 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  503:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  504:  jump *label250 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  505:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  506:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  507:  set :mineOre:block .smelter                                  ...
  508:  setaddr :mineOre*retaddr *label252                           ...
  509:  call *label7 *invalid :mineOre*retval                        ...
        label *label252                                              ...
        label *label250                                              CoreBuilder.mnd: if missing > 0 then
  510:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  511:  jump *label246 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label245                                              ...
  512:  sensor *tmp242 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  513:  jump *label253 greaterThanEq *tmp242 5                       ...
  514:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  515:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  516:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  517:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  518:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  519:  sensor *tmp246 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  520:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  521:  jump *label258 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  522:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  523:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  524:  set :mineOre:block .smelter                                  ...
  525:  setaddr :mineOre*retaddr *label260                           ...
  526:  call *label7 *invalid :mineOre*retval                        ...
        label *label260                                              ...
        label *label258                                              CoreBuilder.mnd: if missing > 0 then
  527:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label253                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label246                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label243                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  528:  sensor *tmp250 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  529:  jump *label261 greaterThanEq *tmp250 .powerTarget            ...
  530:  sensor *tmp253 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  531:  jump *label263 greaterThanEq *tmp253 2                       ...
  532:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  533:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  534:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  535:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  536:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  537:  sensor *tmp257 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  538:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  539:  jump *label268 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  540:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  541:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  542:  set :mineOre:block .generator                                ...
  543:  setaddr :mineOre*retaddr *label270                           ...
  544:  call *label7 *invalid :mineOre*retval                        ...
        label *label270                                              ...
        label *label268                                              CoreBuilder.mnd: if missing > 0 then
  545:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label263                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label261                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label231                                              CoreBuilder.mnd: if unloader1 == null then
  546:  set *tmp263 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  547:  sensor *tmp261 .core @titanium                               ...
  548:  jump *label272 greaterThanEq *tmp261 .targetTitanium         ...
  549:  sensor *tmp264 .core @titanium                               ...
  550:  op sub *tmp265 .targetTitanium *tmp264                       ...
  551:  op min *tmp263 7 *tmp265                                     ...
        label *label272                                              ...
  552:  sensor *tmp267 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  553:  jump *label273 greaterThanEq *tmp267 *tmp263                 ...
  554:  jump *label274 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  555:  sensor *tmp272 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  556:  op mul *tmp273 .unloader1 .powerTarget                       ...
  557:  jump *label277 greaterThanEq *tmp272 *tmp273                 ...
  558:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  559:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  560:  setaddr :mineOre.1*retaddr *label280                         ...
  561:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label280                                              ...
  562:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label277                                              ...
  563:  sensor *tmp276 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  564:  jump *label281 greaterThanEq *tmp276 .targetSilicon          ...
  565:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  566:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  567:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  568:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  569:  jump *label285 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  570:  set :mineOre.1:ore @coal                                     ...
        label *label285                                              ...
  571:  setaddr :mineOre.1*retaddr *label286                         CoreBuilder.mnd: mineOre(ore);
  572:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label286                                              ...
  573:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label281                                              ...
  574:  sensor *tmp283 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  575:  jump *label287 greaterThanEq *tmp283 .targetCopper           ...
  576:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  577:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  578:  setaddr :mineOre.1*retaddr *label290                         ...
  579:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label290                                              ...
  580:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label287                                              ...
  581:  sensor *tmp286 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  582:  jump *label291 greaterThanEq *tmp286 .targetLead             ...
  583:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  584:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  585:  setaddr :mineOre.1*retaddr *label294                         ...
  586:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label294                                              ...
  587:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label291                                              ...
  588:  sensor *tmp289 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  589:  jump *label295 greaterThanEq *tmp289 .targetMetaglass        ...
  590:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  591:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  592:  setaddr :mineOre.1*retaddr *label298                         ...
  593:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label298                                              ...
  594:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label295                                              ...
  595:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  596:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  597:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  598:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  599:  jump *label301 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  600:  set :mineOre.1:ore @coal                                     ...
        label *label301                                              ...
  601:  setaddr :mineOre.1*retaddr *label302                         CoreBuilder.mnd: mineOre(ore);
  602:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label302                                              ...
  603:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label273                                              ...
  604:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  605:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  606:  set :fetchBlock:item @titanium                               ...
  607:  setaddr :fetchBlock*retaddr *label304                        ...
  608:  call *label9 *invalid :fetchBlock*retval                     ...
        label *label304                                              ...
        label *label274                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  609:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label11                                               CoreBuilder.mnd: void supplyBase1()
  610:  sensor *tmp296 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@coal then
  611:  sensor *tmp297 .core @coal                                   ...
  612:  jump *label306 greaterThanEq *tmp296 *tmp297                 ...
  613:  sensor *tmp300 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@lead then
  614:  sensor *tmp301 .core @lead                                   ...
  615:  jump *label308 greaterThanEq *tmp300 *tmp301                 ...
  616:  write "Phase 1: mining sand" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  617:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  618:  setaddr :mineOre.1*retaddr *label311                         ...
  619:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label311                                              ...
  620:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@lead then
        label *label308                                              ...
  621:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  622:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  623:  setaddr :mineOre.1*retaddr *label313                         ...
  624:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label313                                              ...
  625:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@coal then
        label *label306                                              ...
  626:  sensor *tmp304 .core @coal                                   CoreBuilder.mnd: if core.@coal < core.@lead then
  627:  sensor *tmp305 .core @lead                                   ...
  628:  jump *label314 greaterThanEq *tmp304 *tmp305                 ...
  629:  write "Phase 1: mining coal" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  630:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  631:  setaddr :mineOre.1*retaddr *label317                         ...
  632:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label317                                              ...
  633:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@coal < core.@lead then
        label *label314                                              ...
  634:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  635:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  636:  setaddr :mineOre.1*retaddr *label319                         ...
  637:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label319                                              ...
  638:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label12                                               CoreBuilder.mnd: void supplyBase()
  639:  jump *label322 notEqual .phase 0                             CoreBuilder.mnd: case phase
  640:  setaddr :supplyBase0*retaddr *label324                       CoreBuilder.mnd: when 0 then supplyBase0();
  641:  call *label10 *invalid :supplyBase0*retval                   ...
        label *label324                                              ...
  642:  return :supplyBase*retaddr                                   CoreBuilder.mnd: case phase
        label *label322                                              ...
  643:  jump *label325 notEqual .phase 1                             ...
  644:  setaddr :supplyBase1*retaddr *label327                       CoreBuilder.mnd: when 1 then supplyBase1();
  645:  call *label11 *invalid :supplyBase1*retval                   ...
        label *label327                                              ...
        label *label325                                              CoreBuilder.mnd: case phase
  646:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label13                                               CoreBuilder.mnd: def targetMet()
  647:  sensor *tmp310 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  648:  jump *label329 lessThan *tmp310 .targetCopper                ...
  649:  sensor *tmp313 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  650:  jump *label331 lessThan *tmp313 .targetLead                  ...
  651:  sensor *tmp316 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  652:  jump *label333 lessThan *tmp316 .targetGraphite              ...
  653:  sensor *tmp319 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  654:  jump *label335 lessThan *tmp319 .targetSilicon               ...
  655:  sensor *tmp322 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  656:  jump *label337 lessThan *tmp322 .targetTitanium              ...
  657:  sensor *tmp325 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  658:  jump *label339 lessThan *tmp325 .targetMetaglass             ...
  659:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  660:  return :targetMet*retaddr                                    ...
        label *label339                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label337                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label335                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label333                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label331                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label329                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  661:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  662:  return :targetMet*retaddr                                    ...
        label *label14                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  663:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  664:  op sign *tmp329 :meetTarget:lead 0                           ...
  665:  op add :meetTarget:count :meetTarget:count *tmp329           ...
  666:  op sign *tmp329 :meetTarget:graphite 0                       ...
  667:  op add :meetTarget:count :meetTarget:count *tmp329           ...
  668:  op sign *tmp329 :meetTarget:silicon 0                        ...
  669:  op add :meetTarget:count :meetTarget:count *tmp329           ...
  670:  op sign *tmp329 :meetTarget:titanium 0                       ...
  671:  op add :meetTarget:count :meetTarget:count *tmp329           ...
  672:  op sign *tmp329 :meetTarget:metaglass 0                      ...
  673:  op add :meetTarget:count :meetTarget:count *tmp329           ...
  674:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  675:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  676:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  677:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  678:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  679:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  680:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  681:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  682:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  683:  set .targetLead :meetTarget:lead                             CoreBuilder.mnd: targetLead = lead;
  684:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  685:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  686:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  687:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  688:  op add *tmp330 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  689:  write *tmp330 .controller ".pressTarget"                     ...
  690:  op add *tmp331 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  691:  write *tmp331 .controller ".smelterTarget"                   ...
  692:  op add *tmp332 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  693:  write *tmp332 .controller ".kilnTarget"                      ...
  694:  op sign *tmp333 :meetTarget:lead 0                           CoreBuilder.mnd: controller.leadReserve = lead + sign(lead) * 20;
  695:  op mul *tmp334 *tmp333 20                                    ...
  696:  op add *tmp335 :meetTarget:lead *tmp334                      ...
  697:  write *tmp335 .controller ".leadReserve"                     ...
  698:  op sign *tmp336 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  699:  op mul *tmp337 *tmp336 20                                    ...
  700:  op add *tmp338 :meetTarget:silicon *tmp337                   ...
  701:  write *tmp338 .controller ".siliconReserve"                  ...
  702:  setaddr :targetMet*retaddr *label354                         CoreBuilder.mnd: while !targetMet() do
  703:  call *label13 *invalid :targetMet*retval                     ...
        label *label354                                              ...
  704:  jump *label353 notEqual :targetMet*retval false              ...
        label *label413                                              ...
  705:  setaddr :supplyBase*retaddr *label355                        CoreBuilder.mnd: supplyBase();
  706:  call *label12 *invalid :supplyBase*retval                    ...
        label *label355                                              ...
  707:  setaddr :targetMet*retaddr *label414                         CoreBuilder.mnd: while !targetMet() do
  708:  call *label13 *invalid :targetMet*retval                     ...
        label *label414                                              ...
  709:  jump *label413 equal :targetMet*retval false                 ...
        label *label353                                              ...
  710:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label15                                               CoreBuilder.mnd: void log(encodedId)
  711:  read *tmp64 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(@second) * 1000;
  712:  op sub *tmp340 *tmp64 1                                      ...
  713:  write *tmp340 bank1 511                                      ...
  714:  op floor *tmp343 @second 0                                   ...
  715:  op mul *tmp344 *tmp343 1000                                  ...
  716:  op add *tmp345 :log:encodedId *tmp344                        ...
  717:  write *tmp345 bank1 *tmp340                                  ...
  718:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label16                                               CoreBuilder.mnd: void logBlock(block)
  719:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  720:  setaddr :log*retaddr *label358                               ...
  721:  call *label15 *invalid :log*retval                           ...
        label *label358                                              ...
  722:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label17                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  723:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  724:  set :moveTo.1:y :buildBlockAt:y                              ...
  725:  setaddr :moveTo.1*retaddr *label360                          ...
  726:  call *label2 *invalid :moveTo.1*retval                       ...
        label *label360                                              ...
  727:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  728:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  729:  jump *label362 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  730:  jump *label364 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  731:  set :buildBlockAt*retval :buildBlockAt:building              ...
  732:  return :buildBlockAt*retaddr                                 ...
        label *label364                                              ...
  733:  jump *label366 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  734:  set :buildBlockAt*retval null                                ...
  735:  return :buildBlockAt*retaddr                                 ...
        label *label366                                              ...
  736:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  737:  stop                                                         Actions.mnd: stopProcessor();
        label *label362                                              CoreBuilder.mnd: if building != null then
  738:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  739:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label369                                              CoreBuilder.mnd: do
  740:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  741:  jump *label372 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  742:  set :buildBlockAt*retval null                                ...
  743:  return :buildBlockAt*retaddr                                 ...
        label *label372                                              ...
  744:  jump *label369 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  745:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  746:  setaddr :logBlock*retaddr *label374                          ...
  747:  call *label16 *invalid :logBlock*retval                      ...
        label *label374                                              ...
  748:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  749:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label18                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  750:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  751:  set :meetTarget:copper :buildBlock:copper                    ...
  752:  set :meetTarget:lead :buildBlock:lead                        ...
  753:  set :meetTarget:graphite :buildBlock:graphite                ...
  754:  set :meetTarget:silicon :buildBlock:silicon                  ...
  755:  set :meetTarget:titanium :buildBlock:titanium                ...
  756:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  757:  setaddr :meetTarget*retaddr *label376                        ...
  758:  call *label14 *invalid :meetTarget*retval                    ...
        label *label376                                              ...
  759:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  760:  set :buildBlockAt:x :buildBlock:x                            ...
  761:  set :buildBlockAt:y :buildBlock:y                            ...
  762:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  763:  set :buildBlockAt:config :buildBlock:config                  ...
  764:  set :buildBlockAt:skipError false                            ...
  765:  setaddr :buildBlockAt*retaddr *label377                      ...
  766:  call *label17 *invalid :buildBlockAt*retval                  ...
        label *label377                                              ...
  767:  set :buildBlock*retval :buildBlockAt*retval                  ...
  768:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label19                                               CoreBuilder.mnd: def findUnits(type, out count)
  769:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  770:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  771:  set :findUnits:firstUnit @unit                               ...
  772:  jump *label379 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label381                                              CoreBuilder.mnd: do
  773:  op add :findUnits:count :findUnits:count 1                   ...
  774:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  775:  jump *label381 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label379                                              CoreBuilder.mnd: if firstUnit != null then
  776:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  777:  return :findUnits*retaddr                                    ...


Performance: parsed in 583 ms, compiled in 460 ms, optimized in 2,308 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (3 steps):
The program didn't generate any output.
Execution exception at instruction 23: read *tmp63 processor4 "*signature":
Variable 'processor4' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
