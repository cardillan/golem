  1843 instructions before optimizations.
    90 instructions eliminated by Temp Variables Elimination (2 iterations).
   125 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:31:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    65 instructions eliminated by Jump Optimization (5 iterations).
    66 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   459 instructions eliminated by Data Flow Optimization (3 passes, 28 iterations).
    22 loops improved by Loop Hoisting.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    13 instructions updated by JumpThreading.
    47 instructions eliminated by Unreachable Code Elimination (2 iterations).
   980 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:507:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:266:5            size    +2, benefit    13375.0, efficiency   6687.500
  * Unroll iteration loop at CoreBuilder.mnd:243:5               size   -11, benefit    12305.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:507:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:266:5            size    +2, benefit    13375.0, efficiency   6687.500

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:507:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:266:5            size    +2, benefit    13375.0, efficiency   6687.500

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:507:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   179745.9, efficiency 179745.898
  ! Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   166420.9, efficiency 166420.898
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   124155.3, efficiency 124155.273
  ! Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit    84531.3, efficiency  84531.250
  ! Replicate loop condition at CoreBuilder.mnd:266:5            size    +2, benefit    13375.0, efficiency   6687.500

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-89 instructions):
 
   166 setaddr :buildBlock*retaddr *label54 (h:*label54)
   167 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
   168 label *label54
-    * set *tmp110 :buildBlock*retval
   169 jump *label49 always
   170 label *label51
   171 multijump *tmp111 0 0 (m:marker2)
   172 multilabel *label53 (m:marker2)
   173 label *label52
-    * set *tmp110 null
   174 label *label49
   175 set :buildBlockFromCfg.3:block @combustion-generator
   176 set :buildBlockFromCfg.3:offsetX 0
 
   290 set .ERROR :error:error
   291 stop
   292 label *label73
-    * set *tmp136 null
   293 jump *label72 always
   294 label *label71
-    * set *tmp136 null
   295 label *label72
   296 write @pneumatic-drill .display ".nextBlock"
   297 set :buildBlockAt:block @pneumatic-drill
 
   430 setaddr :buildBlock*retaddr *label92 (h:*label92)
   431 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   432 label *label92
-    * set *tmp145 :buildBlock*retval
   433 jump *label87 always
   434 label *label89
   435 multijump *tmp146 0 0 (m:marker7)
   436 multilabel *label91 (m:marker7)
   437 label *label90
-    * set *tmp145 null
   438 label *label87
   439 set :buildBlockFromCfg.8:block @unloader
   440 set :buildBlockFromCfg.8:offsetX -2
 
   537 op lessThan *tmp158 *tmp157 300
   538 jump *label110 equal *tmp158 false
   539 jump *label108 always
-    * set *tmp159 null
   540 jump *label111 always
   541 label *label110
-    * set *tmp159 null
   542 label *label111
   543 label *label107
   544 read *tmp71 .controller ".monos"
 
   579 setaddr :buildBlock*retaddr *label117 (h:*label117)
   580 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   581 label *label117
-    * set *tmp161 :buildBlock*retval
   582 jump *label112 always
   583 label *label114
   584 multijump *tmp162 0 0 (m:marker10)
   585 multilabel *label116 (m:marker10)
   586 label *label115
-    * set *tmp161 null
   587 label *label112
   588 set :buildBlockFromCfg.11:block @junction
   589 set :buildBlockFromCfg.11:offsetX 2
 
   616 setaddr :buildBlock*retaddr *label123 (h:*label123)
   617 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   618 label *label123
-    * set *tmp165 :buildBlock*retval
   619 jump *label118 always
   620 label *label120
   621 multijump *tmp166 0 0 (m:marker11)
   622 multilabel *label122 (m:marker11)
   623 label *label121
-    * set *tmp165 null
   624 label *label118
   625 set :buildBlockFromCfg.12:block @inverted-sorter
   626 set :buildBlockFromCfg.12:offsetX 3
 
   653 setaddr :buildBlock*retaddr *label129 (h:*label129)
   654 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   655 label *label129
-    * set *tmp169 :buildBlock*retval
   656 jump *label124 always
   657 label *label126
   658 multijump *tmp170 0 0 (m:marker12)
   659 multilabel *label128 (m:marker12)
   660 label *label127
-    * set *tmp169 null
   661 label *label124
   662 set :buildBlockFromCfg.13:block @kiln
   663 set :buildBlockFromCfg.13:offsetX 3.5
 
   731 setaddr :buildBlock*retaddr *label141 (h:*label141)
   732 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   733 label *label141
-    * set *tmp177 :buildBlock*retval
   734 jump *label136 always
   735 label *label138
   736 multijump *tmp178 0 0 (m:marker14)
   737 multilabel *label140 (m:marker14)
   738 label *label139
-    * set *tmp177 null
   739 label *label136
   740 set :buildBlockFromCfg.15:block @overflow-gate
   741 set :buildBlockFromCfg.15:offsetX -3
 
   768 setaddr :buildBlock*retaddr *label147 (h:*label147)
   769 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   770 label *label147
-    * set *tmp181 :buildBlock*retval
   771 jump *label142 always
   772 label *label144
   773 multijump *tmp182 0 0 (m:marker15)
   774 multilabel *label146 (m:marker15)
   775 label *label145
-    * set *tmp181 null
   776 label *label142
   777 set :buildBlockFromCfg.16:block @steam-generator
   778 set :buildBlockFromCfg.16:offsetX -3.5
 
   886 setaddr :buildBlock*retaddr *label165 (h:*label165)
   887 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   888 label *label165
-    * set *tmp193 :buildBlock*retval
   889 jump *label160 always
   890 label *label162
   891 multijump *tmp194 0 0 (m:marker18)
   892 multilabel *label164 (m:marker18)
   893 label *label163
-    * set *tmp193 null
   894 label *label160
   895 set :buildBlockFromCfg.19:block @underflow-gate
   896 set :buildBlockFromCfg.19:offsetX 0
 
   923 setaddr :buildBlock*retaddr *label171 (h:*label171)
   924 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   925 label *label171
-    * set *tmp197 :buildBlock*retval
   926 jump *label166 always
   927 label *label168
   928 multijump *tmp198 0 0 (m:marker19)
   929 multilabel *label170 (m:marker19)
   930 label *label169
-    * set *tmp197 null
   931 label *label166
   932 set :buildBlockFromCfg.20:block @additive-reconstructor
   933 set :buildBlockFromCfg.20:offsetX 0
 
  1014 wait 1e-15
  1015 read *tmp217 .oreLocator ":findDrillLocation*finished"
  1016 jump *label187 equal *tmp217 false
-    * read *tmp218 .oreLocator ":findDrillLocation*retval"
  1017 ubind .builder
  1018 set :findFreeUnit:unit_type @flare
  1019 set :findFreeUnit:initial_flag 0
  1020 ubind :findFreeUnit:unit_type
  1021 op equal *tmp220 @unit null
  1022 jump *label189 equal *tmp220 false
-    * set *tmp219 null
  1023 jump *label188 always
-    * set *tmp221 null
  1024 jump *label190 always
  1025 label *label189
-    * set *tmp221 null
  1026 label *label190
  1027 set :findFreeUnit:first_unit @unit
  1028 label *label191
 
  1030 op equal *tmp223 *tmp222 0
  1031 jump *label194 equal *tmp223 false
  1032 ucontrol flag :findFreeUnit:initial_flag
-    * set *tmp219 @unit
  1033 jump *label188 always
-    * set *tmp224 null
  1034 jump *label195 always
  1035 label *label194
  1036 sensor *tmp225 :findFreeUnit:first_unit @dead
 
  1043 label *label196
  1044 set *tmp227 null
  1045 label *label197
-    * set *tmp224 *tmp227
  1046 label *label195
  1047 ubind :findFreeUnit:unit_type
  1048 label *label192
  1049 op notEqual *tmp229 :findFreeUnit:first_unit @unit
  1050 jump *label191 notEqual *tmp229 false
  1051 label *label193
-    * set *tmp219 null
  1052 jump *label188 always
-    * set *tmp219 null
  1053 label *label188
  1054 write .coreX .oreLocator ":layoutThoriumDrill:x"
  1055 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1090 set .ERROR :error.1:error
  1091 stop
  1092 label *label208
-    * set *tmp239 null
  1093 jump *label207 always
  1094 label *label206
-    * set *tmp239 null
  1095 label *label207
  1096 set :buildBlockAt:block @laser-drill
  1097 read *tmp41 .oreLocator ".drillX"
 
  1110 op lessThan *tmp241 *tmp43 0
  1111 jump *label210 equal *tmp241 false
  1112 jump *label202 always
-    * set *tmp242 null
  1113 jump *label211 always
  1114 label *label210
-    * set *tmp242 null
  1115 label *label211
  1116 set :meetTarget:block @water-extractor
  1117 set :meetTarget:copper 30
 
  1135 setaddr :buildBlockAt*retaddr *label214 (h:*label214)
  1136 call *label26 *invalid :buildBlockAt*retval (m:*label214) (h:*label214)
  1137 label *label214
-    * set *tmp243 :buildBlockAt*retval
  1138 read *tmp45 .oreLocator ".water2X"
  1139 op lessThan *tmp244 *tmp45 0
  1140 jump *label215 equal *tmp244 false
  1141 jump *label202 always
-    * set *tmp245 null
  1142 jump *label216 always
  1143 label *label215
-    * set *tmp245 null
  1144 label *label216
  1145 set :meetTarget:block @water-extractor
  1146 set :meetTarget:copper 30
 
  1164 setaddr :buildBlockAt*retaddr *label219 (h:*label219)
  1165 call *label26 *invalid :buildBlockAt*retval (m:*label219) (h:*label219)
  1166 label *label219
-    * set *tmp246 :buildBlockAt*retval
  1167 set :meetTarget:block @water-extractor
  1168 set :meetTarget:copper 30
  1169 set :meetTarget:lead 30
 
  1210 setaddr :buildBlockAt*retaddr *label225 (h:*label225)
  1211 call *label26 *invalid :buildBlockAt*retval (m:*label225) (h:*label225)
  1212 label *label225
-    * set *tmp248 :buildBlockAt*retval
  1213 set :meetTarget:block @solar-panel
  1214 set :meetTarget:copper 0
  1215 set :meetTarget:lead 10
 
  1232 setaddr :buildBlockAt*retaddr *label228 (h:*label228)
  1233 call *label26 *invalid :buildBlockAt*retval (m:*label228) (h:*label228)
  1234 label *label228
-    * set *tmp249 :buildBlockAt*retval
  1235 set :meetTarget:block @battery
  1236 set :meetTarget:copper 5
  1237 set :meetTarget:lead 20
 
  1254 setaddr :buildBlockAt*retaddr *label231 (h:*label231)
  1255 call *label26 *invalid :buildBlockAt*retval (m:*label231) (h:*label231)
  1256 label *label231
-    * set *tmp250 :buildBlockAt*retval
  1257 write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
  1258 write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
  1259 write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
 
  1328 op notEqual *tmp262 *tmp261 null
  1329 jump *label255 equal *tmp262 false
  1330 ucontrol itemDrop @air 1000
-    * set *tmp263 null
  1331 jump *label256 always
  1332 label *label255
-    * set *tmp263 null
  1333 label *label256
  1334 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1335 label *label253
 
  1375 op greaterThan *tmp275 *tmp273 *tmp274
  1376 jump *label264 notEqual *tmp275 false
  1377 label *label266
-    * set *tmp270 null
  1378 jump *label262 always
  1379 label *label261
  1380 label *label267
 
  1385 label *label268
  1386 jump *label267 always
  1387 label *label269
-    * set *tmp270 null
  1388 label *label262
  1389 set :transportStatus:target 0
  1390 set :transportStatus:item null
 
  1402 set .ERROR :error.3:error
  1403 stop
  1404 label *label274
-    * set *tmp281 null
  1405 jump *label273 always
  1406 label *label272
-    * set *tmp281 null
  1407 label *label273
  1408 label *label271
  1409 return :locateOre*retaddr
 
  1439 jump *label282 always
  1440 label *label284
  1441 label *label281
-    * set *tmp285 null
  1442 jump *label280 always
  1443 label *label279
-    * set *tmp285 null
  1444 label *label280
  1445 set :status3.3:text "Mining..."
  1446 write :status3.3:text .display ".status3"
 
  1455 op land *tmp292 *tmp290 *tmp291
  1456 jump *label289 equal *tmp292 false
  1457 jump *label288 always
-    * set *tmp293 null
  1458 jump *label290 always
  1459 label *label289
-    * set *tmp293 null
  1460 label *label290
  1461 ucontrol mine :mineOre:x :mineOre:y
  1462 op greaterThan *tmp294 @second :mineOre:stop
  1463 jump *label291 equal *tmp294 false
  1464 jump *label288 always
-    * set *tmp295 null
  1465 jump *label292 always
  1466 label *label291
-    * set *tmp295 null
  1467 label *label292
  1468 label *label287
  1469 sensor *tmp296 @unit @totalItems
 
  1536 op land *tmp307 *tmp305 *tmp306
  1537 jump *label308 equal *tmp307 false
  1538 ucontrol itemDrop @air 1000
-    * set *tmp308 null
  1539 jump *label309 always
  1540 label *label308
-    * set *tmp308 null
  1541 label *label309
  1542 label *label306
  1543 sensor *tmp309 @unit :fetchBlock:item
 
  1589 setaddr :mineOre*retaddr *label323 (h:*label323)
  1590 call *label12 *invalid :mineOre*retval (m:*label323) (h:*label323)
  1591 label *label323
-    * set *tmp325 null
  1592 jump *label322 always
  1593 label *label321
-    * set *tmp325 null
  1594 label *label322
  1595 label *label319
  1596 set :supplyBase0:supplied true
 
  1599 label *label316
  1600 set *tmp320 null
  1601 label *label317
-    * set *tmp317 *tmp320
  1602 jump *label315 always
  1603 label *label314
-    * set *tmp317 null
  1604 label *label315
  1605 sensor *tmp326 .core @silicon
  1606 op lessThan *tmp327 *tmp326 .targetSilicon
 
  1633 setaddr :mineOre*retaddr *label333 (h:*label333)
  1634 call *label12 *invalid :mineOre*retval (m:*label333) (h:*label333)
  1635 label *label333
-    * set *tmp336 null
  1636 jump *label332 always
  1637 label *label331
-    * set *tmp336 null
  1638 label *label332
  1639 label *label329
  1640 set :supplyBase0:supplied true
 
  1669 setaddr :mineOre*retaddr *label341 (h:*label341)
  1670 call *label12 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1671 label *label341
-    * set *tmp344 null
  1672 jump *label340 always
  1673 label *label339
-    * set *tmp344 null
  1674 label *label340
  1675 label *label337
  1676 set :supplyBase0:supplied true
 
  1681 label *label335
  1682 set *tmp331 *tmp339
  1683 label *label327
-    * set *tmp328 *tmp331
  1684 jump *label325 always
  1685 label *label324
-    * set *tmp328 null
  1686 label *label325
  1687 sensor *tmp345 .battery @totalPower
  1688 op lessThan *tmp346 *tmp345 .powerTarget
 
  1715 setaddr :mineOre*retaddr *label351 (h:*label351)
  1716 call *label12 *invalid :mineOre*retval (m:*label351) (h:*label351)
  1717 label *label351
-    * set *tmp355 null
  1718 jump *label350 always
  1719 label *label349
-    * set *tmp355 null
  1720 label *label350
  1721 label *label347
  1722 set :supplyBase0:supplied true
 
  1730 label *label342
  1731 set *tmp347 null
  1732 label *label343
-    * set *tmp314 *tmp347
  1733 jump *label313 always
  1734 label *label312
-    * set *tmp314 null
  1735 label *label313
  1736 sensor *tmp356 .core @titanium
  1737 op lessThan *tmp357 *tmp356 .targetTitanium
 
  1862 label *label356
  1863 set *tmp366 null
  1864 label *label357
-    * set *tmp364 *tmp366
  1865 jump *label355 always
  1866 label *label354
  1867 set :status1.10:text "Goal 11: Fetching titanium"
 
  1872 setaddr :fetchBlock*retaddr *label385 (h:*label385)
  1873 call *label14 *invalid :fetchBlock*retval (m:*label385) (h:*label385)
  1874 label *label385
-    * set *tmp364 null
  1875 label *label355
  1876 label *label311
  1877 return :supplyBase0*retaddr
 
  1903 label *label392
  1904 set *tmp394 null
  1905 label *label393
-    * set *tmp392 *tmp394
  1906 jump *label391 always
  1907 label *label390
-    * set *tmp392 null
  1908 label *label391
  1909 read *tmp71 .controller ".monos"
  1910 op greaterThan *tmp397 *tmp71 3
 
  1912 setaddr :supplyBase1*retaddr *label396 (h:*label396)
  1913 call *label20 *invalid :supplyBase1*retval (m:*label396) (h:*label396)
  1914 label *label396
-    * set *tmp398 null
  1915 jump *label395 always
  1916 label *label394
  1917 setaddr :supplyBase0*retaddr *label397 (h:*label397)
  1918 call *label19 *invalid :supplyBase0*retval (m:*label397) (h:*label397)
  1919 label *label397
-    * set *tmp398 null
  1920 label *label395
  1921 label *label389
  1922 return :supplyBase*retaddr
 
  1967 label *label401
  1968 set *tmp404 null
  1969 label *label402
-    * set *tmp401 *tmp404
  1970 jump *label400 always
  1971 label *label399
-    * set *tmp401 null
  1972 label *label400
  1973 set :targetMet*retval false
  1974 jump *label398 always
 
  2091 jump *label435 equal *tmp441 false
  2092 set :buildBlockAt*retval :buildBlockAt:building
  2093 jump *label430 always
-    * set *tmp442 null
  2094 jump *label436 always
  2095 label *label435
-    * set *tmp442 null
  2096 label *label436
  2097 jump *label437 equal :buildBlockAt:skipError false
  2098 set :buildBlockAt*retval null
  2099 jump *label430 always
-    * set *tmp443 null
  2100 jump *label438 always
  2101 label *label437
-    * set *tmp443 null
  2102 label *label438
  2103 set :error.4:error "Cannot build at ("
  2104 set .ERROR :error.4:error
  2105 stop
  2106 label *label439
-    * set *tmp440 null
  2107 jump *label434 always
  2108 label *label433
-    * set *tmp440 null
  2109 label *label434
  2110 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  2111 wait 0.25
 
  2116 jump *label443 equal *tmp446 false
  2117 set :buildBlockAt*retval null
  2118 jump *label430 always
-    * set *tmp447 null
  2119 jump *label444 always
  2120 label *label443
-    * set *tmp447 null
  2121 label *label444
  2122 label *label441
  2123 op notEqual *tmp448 :buildBlockAt:type :buildBlockAt:block
 
  2166 op notEqual *tmp449 :findUnits:firstUnit null
  2167 jump *label450 equal *tmp449 false
  2168 label *label452
-    * set *tmp451 :findUnits:count
  2169 op add :findUnits:count :findUnits:count 1
  2170 ubind :findUnits:type
  2171 label *label453
  2172 op notEqual *tmp452 @unit :findUnits:firstUnit
  2173 jump *label452 notEqual *tmp452 false
  2174 label *label454
-    * set *tmp450 null
  2175 jump *label451 always
  2176 label *label450
-    * set *tmp450 null
  2177 label *label451
  2178 set :findUnits*retval :findUnits:count
  2179 label *label449

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
  1038 jump *label196 equal *tmp226 false
  1039 set *tmp228 @unit
  1040 set :findFreeUnit:first_unit *tmp228
-    * set *tmp227 :findFreeUnit:first_unit
  1041 jump *label197 always
  1042 label *label196
-    * set *tmp227 null
  1043 label *label197
  1044 label *label195
  1045 ubind :findFreeUnit:unit_type
 
  1592 label *label322
  1593 label *label319
  1594 set :supplyBase0:supplied true
-    * set *tmp320 :supplyBase0:supplied
  1595 jump *label317 always
  1596 label *label316
-    * set *tmp320 null
  1597 label *label317
  1598 jump *label315 always
  1599 label *label314
 
  1634 label *label332
  1635 label *label329
  1636 set :supplyBase0:supplied true
-    * set *tmp331 :supplyBase0:supplied
  1637 jump *label327 always
  1638 label *label326
  1639 sensor *tmp337 .smelter @sand
 
  1674 label *label334
  1675 set *tmp339 null
  1676 label *label335
-    * set *tmp331 *tmp339
  1677 label *label327
  1678 jump *label325 always
  1679 label *label324
 
  1719 label *label344
  1720 set *tmp350 null
  1721 label *label345
-    * set *tmp347 *tmp350
  1722 jump *label343 always
  1723 label *label342
-    * set *tmp347 null
  1724 label *label343
  1725 jump *label313 always
  1726 label *label312
 
  1849 label *label363
  1850 set *tmp370 *tmp373
  1851 label *label359
-    * set *tmp366 *tmp370
  1852 jump *label357 always
  1853 label *label356
-    * set *tmp366 null
  1854 label *label357
  1855 jump *label355 always
  1856 label *label354
 
  1888 write .titaniumDrill .flareController ":start:drill"
  1889 write false .flareController ":start*finished"
  1890 write 3 .flareController "@counter"
-    * set *tmp394 null
  1891 jump *label393 always
  1892 label *label392
-    * set *tmp394 null
  1893 label *label393
  1894 jump *label391 always
  1895 label *label390
 
  1950 label *label403
  1951 set *tmp407 null
  1952 label *label404
-    * set *tmp404 *tmp407
  1953 jump *label402 always
  1954 label *label401
-    * set *tmp404 null
  1955 label *label402
  1956 jump *label400 always
  1957 label *label399

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1669 label *label340
  1670 label *label337
  1671 set :supplyBase0:supplied true
-    * set *tmp339 :supplyBase0:supplied
  1672 jump *label335 always
  1673 label *label334
-    * set *tmp339 null
  1674 label *label335
  1675 label *label327
  1676 jump *label325 always
 
  1712 label *label350
  1713 label *label347
  1714 set :supplyBase0:supplied true
-    * set *tmp350 :supplyBase0:supplied
  1715 jump *label345 always
  1716 label *label344
-    * set *tmp350 null
  1717 label *label345
  1718 jump *label343 always
  1719 label *label342
 
  1749 setaddr :mineOre.1*retaddr *label361 (h:*label361)
  1750 call *label13 *invalid :mineOre.1*retval (m:*label361) (h:*label361)
  1751 label *label361
-    * set *tmp370 null
  1752 jump *label359 always
  1753 label *label358
  1754 sensor *tmp371 .core @silicon
 
  1842 label *label369
  1843 set *tmp373 *tmp380
  1844 label *label363
-    * set *tmp370 *tmp373
  1845 label *label359
  1846 jump *label357 always
  1847 label *label356
 
  1939 label *label405
  1940 set *tmp410 null
  1941 label *label406
-    * set *tmp407 *tmp410
  1942 jump *label404 always
  1943 label *label403
-    * set *tmp407 null
  1944 label *label404
  1945 jump *label402 always
  1946 label *label401

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1773 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1774 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
  1775 label *label367
-    * set *tmp373 null
  1776 jump *label363 always
  1777 label *label362
  1778 sensor *tmp378 .core @copper
 
  1839 label *label373
  1840 set *tmp380 *tmp383
  1841 label *label369
-    * set *tmp373 *tmp380
  1842 label *label363
  1843 label *label359
  1844 jump *label357 always
 
  1932 label *label407
  1933 set *tmp413 null
  1934 label *label408
-    * set *tmp410 *tmp413
  1935 jump *label406 always
  1936 label *label405
-    * set *tmp410 null
  1937 label *label406
  1938 jump *label404 always
  1939 label *label403

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1785 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1786 call *label13 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1787 label *label371
-    * set *tmp380 null
  1788 jump *label369 always
  1789 label *label368
  1790 sensor *tmp381 .core @lead
 
  1836 label *label377
  1837 set *tmp383 *tmp386
  1838 label *label373
-    * set *tmp380 *tmp383
  1839 label *label369
  1840 label *label363
  1841 label *label359
 
  1925 label *label409
  1926 set *tmp416 null
  1927 label *label410
-    * set *tmp413 *tmp416
  1928 jump *label408 always
  1929 label *label407
-    * set *tmp413 null
  1930 label *label408
  1931 jump *label406 always
  1932 label *label405

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1797 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1798 call *label13 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
  1799 label *label375
-    * set *tmp383 null
  1800 jump *label373 always
  1801 label *label372
  1802 sensor *tmp384 .core @metaglass
 
  1833 label *label383
  1834 set *tmp386 null
  1835 label *label377
-    * set *tmp383 *tmp386
  1836 label *label373
  1837 label *label369
  1838 label *label363
 
  1918 jump *label409 equal *tmp415 false
  1919 set :targetMet*retval true
  1920 jump *label398 always
-    * set *tmp416 null
  1921 jump *label410 always
  1922 label *label409
-    * set *tmp416 null
  1923 label *label410
  1924 jump *label408 always
  1925 label *label407

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1809 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1810 call *label13 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
  1811 label *label379
-    * set *tmp386 null
  1812 jump *label377 always
  1813 label *label376
  1814 set :status1.9:text "Goal 10: supplying base"
 
  1830 setaddr :mineOre.1*retaddr *label383 (h:*label383)
  1831 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
  1832 label *label383
-    * set *tmp386 null
  1833 label *label377
  1834 label *label373
  1835 label *label369

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-90 instructions):
 
    14 write 511 bank1 511
    15 label *label30
    16 ubind @poly
-    * set *tmp89 @unit
-    * set .builder *tmp89
-    * ulocate building core false @copper .coreX .coreY *tmp91 *tmp90
-    * set .core *tmp90
+   17 set .builder @unit
+   18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label31
    20 op equal *tmp92 .core null
    21 jump *label30 notEqual *tmp92 false
 
    37 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    38 label *label34
    39 write :findUnits:count .display ".displayFlares"
-    * set *tmp97 :findUnits*retval
-    * set :flares *tmp97
+   40 set :flares :findUnits*retval
    41 set :findUnits:type @mono
    42 setaddr :findUnits*retaddr *label35 (h:*label35)
    43 call *label28 *invalid :findUnits*retval (m:*label35) (h:*label35)
    44 label *label35
    45 write :findUnits:count .display ".displayMonos"
-    * set *tmp99 :findUnits*retval
-    * set :monos *tmp99
+   46 set :monos :findUnits*retval
    47 set :findUnits:type @poly
    48 setaddr :findUnits*retaddr *label36 (h:*label36)
    49 call *label28 *invalid :findUnits*retval (m:*label36) (h:*label36)
    50 label *label36
    51 write :findUnits:count .display ".displayPolys"
-    * set *tmp101 :findUnits*retval
-    * set :polys *tmp101
+   52 set :polys :findUnits*retval
    53 set :buildBlockFromCfg:block @graphite-press
    54 set :buildBlockFromCfg:offsetX -1.5
    55 set :buildBlockFromCfg:offsetY 2.5
 
    63 set :buildBlockFromCfg:config null
    64 setaddr *tmp103 *label41
    65 label *label38
-    * op add *tmp104 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp104
-    * op add *tmp105 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp105
+   66 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   67 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    68 set :buildBlock:block :buildBlockFromCfg:block
    69 set :buildBlock:x :buildBlockFromCfg:x
    70 set :buildBlock:y :buildBlockFromCfg:y
 
   101 set :buildBlockFromCfg.1:config null
   102 setaddr *tmp107 *label47
   103 label *label44
-    * op add *tmp108 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp108
-    * op add *tmp109 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp109
+  104 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+  105 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
   106 set :buildBlock:block :buildBlockFromCfg.1:block
   107 set :buildBlock:x :buildBlockFromCfg.1:x
   108 set :buildBlock:y :buildBlockFromCfg.1:y
 
   139 set :buildBlockFromCfg.2:config null
   140 setaddr *tmp111 *label53
   141 label *label50
-    * op add *tmp112 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp112
-    * op add *tmp113 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp113
+  142 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  143 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   144 set :buildBlock:block :buildBlockFromCfg.2:block
   145 set :buildBlock:x :buildBlockFromCfg.2:x
   146 set :buildBlock:y :buildBlockFromCfg.2:y
 
   174 set :buildBlockFromCfg.3:config null
   175 setaddr *tmp115 *label59
   176 label *label56
-    * op add *tmp116 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp116
-    * op add *tmp117 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp117
+  177 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  178 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   179 set :buildBlock:block :buildBlockFromCfg.3:block
   180 set :buildBlock:x :buildBlockFromCfg.3:x
   181 set :buildBlock:y :buildBlockFromCfg.3:y
 
   213 set :buildBlockFromCfg.4:config null
   214 setaddr *tmp119 *label65
   215 label *label62
-    * op add *tmp120 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp120
-    * op add *tmp121 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp121
+  216 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  217 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   218 set :buildBlock:block :buildBlockFromCfg.4:block
   219 set :buildBlock:x :buildBlockFromCfg.4:x
   220 set :buildBlock:y :buildBlockFromCfg.4:y
 
   263 wait 1e-15
   264 read *tmp133 .oreLocator ":findDrillLocation*finished"
   265 jump *label70 equal *tmp133 false
-    * read *tmp130 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp130
-    * read *tmp131 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp131
-    * read *tmp134 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp134
+  266 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  267 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  268 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   269 op equal *tmp135 :buildTitaniumDrill:result false
   270 jump *label71 equal *tmp135 false
   271 set :error:error "Cannot locate spot for titanium drill"
 
   304 set :buildBlockFromCfg.5:config null
   305 setaddr *tmp138 *label79
   306 label *label76
-    * op add *tmp139 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp139
-    * op add *tmp140 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp140
+  307 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  308 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   309 set :buildBlock:block :buildBlockFromCfg.5:block
   310 set :buildBlock:x :buildBlockFromCfg.5:x
   311 set :buildBlock:y :buildBlockFromCfg.5:y
 
   342 set :buildBlockFromCfg.6:config processor2
   343 setaddr *tmp142 *label85
   344 label *label82
-    * op add *tmp143 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp143
-    * op add *tmp144 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp144
+  345 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  346 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   347 set :buildBlock:block :buildBlockFromCfg.6:block
   348 set :buildBlock:x :buildBlockFromCfg.6:x
   349 set :buildBlock:y :buildBlockFromCfg.6:y
 
   390 set :buildBlockFromCfg.7:config null
   391 setaddr *tmp146 *label91
   392 label *label88
-    * op add *tmp147 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp147
-    * op add *tmp148 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp148
+  393 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  394 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   395 set :buildBlock:block :buildBlockFromCfg.7:block
   396 set :buildBlock:x :buildBlockFromCfg.7:x
   397 set :buildBlock:y :buildBlockFromCfg.7:y
 
   425 set :buildBlockFromCfg.8:config null
   426 setaddr *tmp150 *label97
   427 label *label94
-    * op add *tmp151 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp151
-    * op add *tmp152 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp152
+  428 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  429 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   430 set :buildBlock:block :buildBlockFromCfg.8:block
   431 set :buildBlock:x :buildBlockFromCfg.8:x
   432 set :buildBlock:y :buildBlockFromCfg.8:y
 
   463 set :buildBlockFromCfg.9:config @mono
   464 setaddr *tmp154 *label103
   465 label *label100
-    * op add *tmp155 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp155
-    * op add *tmp156 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp156
+  466 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  467 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   468 set :buildBlock:block :buildBlockFromCfg.9:block
   469 set :buildBlock:x :buildBlockFromCfg.9:x
   470 set :buildBlock:y :buildBlockFromCfg.9:y
 
   533 set :buildBlockFromCfg.10:config null
   534 setaddr *tmp162 *label116
   535 label *label113
-    * op add *tmp163 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp163
-    * op add *tmp164 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp164
+  536 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  537 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   538 set :buildBlock:block :buildBlockFromCfg.10:block
   539 set :buildBlock:x :buildBlockFromCfg.10:x
   540 set :buildBlock:y :buildBlockFromCfg.10:y
 
   568 set :buildBlockFromCfg.11:config null
   569 setaddr *tmp166 *label122
   570 label *label119
-    * op add *tmp167 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp167
-    * op add *tmp168 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp168
+  571 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  572 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   573 set :buildBlock:block :buildBlockFromCfg.11:block
   574 set :buildBlock:x :buildBlockFromCfg.11:x
   575 set :buildBlock:y :buildBlockFromCfg.11:y
 
   603 set :buildBlockFromCfg.12:config @metaglass
   604 setaddr *tmp170 *label128
   605 label *label125
-    * op add *tmp171 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp171
-    * op add *tmp172 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp172
+  606 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  607 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   608 set :buildBlock:block :buildBlockFromCfg.12:block
   609 set :buildBlock:x :buildBlockFromCfg.12:x
   610 set :buildBlock:y :buildBlockFromCfg.12:y
 
   638 set :buildBlockFromCfg.13:config null
   639 setaddr *tmp174 *label134
   640 label *label131
-    * op add *tmp175 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp175
-    * op add *tmp176 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp176
+  641 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  642 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   643 set :buildBlock:block :buildBlockFromCfg.13:block
   644 set :buildBlock:x :buildBlockFromCfg.13:x
   645 set :buildBlock:y :buildBlockFromCfg.13:y
 
   677 set :buildBlockFromCfg.14:config null
   678 setaddr *tmp178 *label140
   679 label *label137
-    * op add *tmp179 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp179
-    * op add *tmp180 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp180
+  680 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  681 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   682 set :buildBlock:block :buildBlockFromCfg.14:block
   683 set :buildBlock:x :buildBlockFromCfg.14:x
   684 set :buildBlock:y :buildBlockFromCfg.14:y
 
   712 set :buildBlockFromCfg.15:config null
   713 setaddr *tmp182 *label146
   714 label *label143
-    * op add *tmp183 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp183
-    * op add *tmp184 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp184
+  715 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  716 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   717 set :buildBlock:block :buildBlockFromCfg.15:block
   718 set :buildBlock:x :buildBlockFromCfg.15:x
   719 set :buildBlock:y :buildBlockFromCfg.15:y
 
   747 set :buildBlockFromCfg.16:config null
   748 setaddr *tmp186 *label152
   749 label *label149
-    * op add *tmp187 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp187
-    * op add *tmp188 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp188
+  750 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  751 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   752 set :buildBlock:block :buildBlockFromCfg.16:block
   753 set :buildBlock:x :buildBlockFromCfg.16:x
   754 set :buildBlock:y :buildBlockFromCfg.16:y
 
   786 set :buildBlockFromCfg.17:config null
   787 setaddr *tmp190 *label158
   788 label *label155
-    * op add *tmp191 .coreX :buildBlockFromCfg.17:offsetX
-    * set :buildBlockFromCfg.17:x *tmp191
-    * op add *tmp192 .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlockFromCfg.17:y *tmp192
+  789 op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
+  790 op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
   791 set :buildBlock:block :buildBlockFromCfg.17:block
   792 set :buildBlock:x :buildBlockFromCfg.17:x
   793 set :buildBlock:y :buildBlockFromCfg.17:y
 
   824 set :buildBlockFromCfg.18:config null
   825 setaddr *tmp194 *label164
   826 label *label161
-    * op add *tmp195 .coreX :buildBlockFromCfg.18:offsetX
-    * set :buildBlockFromCfg.18:x *tmp195
-    * op add *tmp196 .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlockFromCfg.18:y *tmp196
+  827 op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
+  828 op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
   829 set :buildBlock:block :buildBlockFromCfg.18:block
   830 set :buildBlock:x :buildBlockFromCfg.18:x
   831 set :buildBlock:y :buildBlockFromCfg.18:y
 
   859 set :buildBlockFromCfg.19:config null
   860 setaddr *tmp198 *label170
   861 label *label167
-    * op add *tmp199 .coreX :buildBlockFromCfg.19:offsetX
-    * set :buildBlockFromCfg.19:x *tmp199
-    * op add *tmp200 .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlockFromCfg.19:y *tmp200
+  862 op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
+  863 op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
   864 set :buildBlock:block :buildBlockFromCfg.19:block
   865 set :buildBlock:x :buildBlockFromCfg.19:x
   866 set :buildBlock:y :buildBlockFromCfg.19:y
 
   894 set :buildBlockFromCfg.20:config null
   895 setaddr *tmp202 *label176
   896 label *label173
-    * op add *tmp203 .coreX :buildBlockFromCfg.20:offsetX
-    * set :buildBlockFromCfg.20:x *tmp203
-    * op add *tmp204 .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlockFromCfg.20:y *tmp204
+  897 op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
+  898 op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
   899 set :buildBlock:block :buildBlockFromCfg.20:block
   900 set :buildBlock:x :buildBlockFromCfg.20:x
   901 set :buildBlock:y :buildBlockFromCfg.20:y
 
   986 sensor *tmp225 :findFreeUnit:first_unit @dead
   987 op equal *tmp226 *tmp225 1
   988 jump *label196 equal *tmp226 false
-    * set *tmp228 @unit
-    * set :findFreeUnit:first_unit *tmp228
+  989 set :findFreeUnit:first_unit @unit
   990 jump *label197 always
   991 label *label196
   992 label *label197
 
  1029 wait 1e-15
  1030 read *tmp236 .oreLocator ":layoutThoriumDrill*finished"
  1031 jump *label205 equal *tmp236 false
-    * read *tmp237 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp237
+ 1032 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
  1033 op equal *tmp238 :buildThoriumDrill:result false
  1034 jump *label206 equal *tmp238 false
  1035 set :error.1:error "Cannot locate spot for thorium drill"
 
  1040 label *label206
  1041 label *label207
  1042 set :buildBlockAt:block @laser-drill
-    * read *tmp41 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp41
-    * read *tmp42 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp42
+ 1043 read :buildBlockAt:x .oreLocator ".drillX"
+ 1044 read :buildBlockAt:y .oreLocator ".drillY"
  1045 set :buildBlockAt:rotation null
  1046 set :buildBlockAt:config 0
  1047 set :buildBlockAt:skipError false
  1048 setaddr :buildBlockAt*retaddr *label209 (h:*label209)
  1049 call *label26 *invalid :buildBlockAt*retval (m:*label209) (h:*label209)
  1050 label *label209
-    * set *tmp240 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumDrill *tmp240
+ 1051 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1052 read *tmp43 .oreLocator ".water1X"
  1053 op lessThan *tmp241 *tmp43 0
  1054 jump *label210 equal *tmp241 false
 
  1070 set :buildBlockAt:block @water-extractor
  1071 read *tmp43 .oreLocator ".water1X"
  1072 set :buildBlockAt:x *tmp43
-    * read *tmp44 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp44
+ 1073 read :buildBlockAt:y .oreLocator ".water1Y"
  1074 set :buildBlockAt:rotation null
  1075 set :buildBlockAt:config 0
  1076 set :buildBlockAt:skipError false
 
  1098 set :buildBlockAt:block @water-extractor
  1099 read *tmp45 .oreLocator ".water2X"
  1100 set :buildBlockAt:x *tmp45
-    * read *tmp46 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp46
+ 1101 read :buildBlockAt:y .oreLocator ".water2Y"
  1102 set :buildBlockAt:rotation null
  1103 set :buildBlockAt:config 0
  1104 set :buildBlockAt:skipError false
 
  1117 label *label221
  1118 label *label220
  1119 set :buildBlockAt:block @steam-generator
-    * read *tmp47 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp47
-    * read *tmp48 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp48
+ 1120 read :buildBlockAt:x .oreLocator ".generatorX"
+ 1121 read :buildBlockAt:y .oreLocator ".generatorY"
  1122 set :buildBlockAt:rotation null
  1123 set :buildBlockAt:config 0
  1124 set :buildBlockAt:skipError false
  1125 setaddr :buildBlockAt*retaddr *label222 (h:*label222)
  1126 call *label26 *invalid :buildBlockAt*retval (m:*label222) (h:*label222)
  1127 label *label222
-    * set *tmp247 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumGenerator *tmp247
+ 1128 set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval
  1129 set :meetTarget:block @power-node
  1130 set :meetTarget:copper 2
  1131 set :meetTarget:lead 6
 
  1138 label *label224
  1139 label *label223
  1140 set :buildBlockAt:block @power-node
-    * read *tmp49 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp49
-    * read *tmp50 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp50
+ 1141 read :buildBlockAt:x .oreLocator ".nodeX"
+ 1142 read :buildBlockAt:y .oreLocator ".nodeY"
  1143 set :buildBlockAt:rotation null
  1144 set :buildBlockAt:config 0
  1145 set :buildBlockAt:skipError false
 
  1158 label *label227
  1159 label *label226
  1160 set :buildBlockAt:block @solar-panel
-    * read *tmp51 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp51
-    * read *tmp52 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp52
+ 1161 read :buildBlockAt:x .oreLocator ".panelX"
+ 1162 read :buildBlockAt:y .oreLocator ".panelY"
  1163 set :buildBlockAt:rotation null
  1164 set :buildBlockAt:config 0
  1165 set :buildBlockAt:skipError false
 
  1178 label *label230
  1179 label *label229
  1180 set :buildBlockAt:block @battery
-    * read *tmp53 .oreLocator ".batteryX"
-    * set :buildBlockAt:x *tmp53
-    * read *tmp54 .oreLocator ".batteryY"
-    * set :buildBlockAt:y *tmp54
+ 1181 read :buildBlockAt:x .oreLocator ".batteryX"
+ 1182 read :buildBlockAt:y .oreLocator ".batteryY"
  1183 set :buildBlockAt:rotation null
  1184 set :buildBlockAt:config 0
  1185 set :buildBlockAt:skipError false
 
  1296 setaddr :moveToBlock*retaddr *label263 (h:*label263)
  1297 call *label9 *invalid :moveToBlock*retval (m:*label263) (h:*label263)
  1298 label *label263
-    * sensor *tmp271 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp271
+ 1299 sensor :depositItems:cap :depositItems:block @itemCapacity
  1300 label *label264
  1301 ucontrol itemDrop :depositItems:block 30
  1302 label *label265
 
  1326 return :depositItems*retaddr
  1327 end
  1328 label *label11
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 *tmp279
+ 1329 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 0
  1330 op equal *tmp280 *tmp278 false
  1331 jump *label272 equal *tmp280 false
  1332 set :error.3:error "Cannot locate ore"
 
  1340 return :locateOre*retaddr
  1341 end
  1342 label *label12
-    * op min *tmp282 :mineOre:amount 30
-    * set :mineOre:amount *tmp282
+ 1343 op min :mineOre:amount :mineOre:amount 30
  1344 set :transportStatus.1:target :mineOre:amount
  1345 set :transportStatus.1:item :mineOre:ore
  1346 write :transportStatus.1:target .display ".transportTarget"
 
  1375 set :status3.3:text "Mining..."
  1376 write :status3.3:text .display ".status3"
  1377 label *label285
-    * op add *tmp288 @second 10
-    * set :mineOre:stop *tmp288
+ 1378 op add :mineOre:stop @second 10
  1379 label *label286
-    * sensor *tmp289 @unit @firstItem
-    * set :mineOre:item *tmp289
+ 1380 sensor :mineOre:item @unit @firstItem
  1381 op notEqual *tmp290 :mineOre:item null
  1382 op notEqual *tmp291 :mineOre:item :mineOre:ore
  1383 op land *tmp292 *tmp290 *tmp291
 
  1415 write :status2:item .display ".item2"
  1416 write :status2:block .display ".block2"
  1417 label *label295
-    * set *tmp298 :mineOre.1:ore
-    * set :mineOre:ore *tmp298
+ 1418 set :mineOre:ore :mineOre.1:ore
  1419 set :mineOre:amount 30
  1420 set :mineOre:block .core
  1421 setaddr :mineOre*retaddr *label296 (h:*label296)
 
  1425 return :mineOre.1*retaddr
  1426 end
  1427 label *label14
-    * sensor *tmp299 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp299
+ 1428 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1429 set :transportStatus.2:item :fetchBlock:item
  1430 write :transportStatus.2:target .display ".transportTarget"
  1431 write :transportStatus.2:item .display ".transportItem"
 
  1455 label *label301
  1456 label *label305
  1457 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp304 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp304
+ 1458 sensor :fetchBlock:unitItem @unit @firstItem
  1459 op notEqual *tmp305 :fetchBlock:unitItem null
  1460 op notEqual *tmp306 :fetchBlock:unitItem :fetchBlock:item
  1461 op land *tmp307 *tmp305 *tmp306
 
  1501 write :status2.2:item .display ".item2"
  1502 write :status2.2:block .display ".block2"
  1503 label *label320
-    * sensor *tmp321 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp321
+ 1504 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1505 sensor *tmp322 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp323 :supplyBlock:blockCapacity *tmp322
-    * set :supplyBlock:missing *tmp323
+ 1506 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp322
  1507 op greaterThan *tmp324 :supplyBlock:missing 0
  1508 jump *label321 equal *tmp324 false
  1509 set :mineOre:ore :supplyBlock:ore
 
  1541 write :status2.3:item .display ".item2"
  1542 write :status2.3:block .display ".block2"
  1543 label *label330
-    * sensor *tmp332 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp332
+ 1544 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1545 sensor *tmp333 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp334 :supplyBlock.1:blockCapacity *tmp333
-    * set :supplyBlock.1:missing *tmp334
+ 1546 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp333
  1547 op greaterThan *tmp335 :supplyBlock.1:missing 0
  1548 jump *label331 equal *tmp335 false
  1549 set :mineOre:ore :supplyBlock.1:ore
 
  1574 write :status2.4:item .display ".item2"
  1575 write :status2.4:block .display ".block2"
  1576 label *label338
-    * sensor *tmp340 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp340
+ 1577 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1578 sensor *tmp341 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp342 :supplyBlock.2:blockCapacity *tmp341
-    * set :supplyBlock.2:missing *tmp342
+ 1579 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp341
  1580 op greaterThan *tmp343 :supplyBlock.2:missing 0
  1581 jump *label339 equal *tmp343 false
  1582 set :mineOre:ore :supplyBlock.2:ore
 
  1615 write :status2.5:item .display ".item2"
  1616 write :status2.5:block .display ".block2"
  1617 label *label348
-    * sensor *tmp351 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp351
+ 1618 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1619 sensor *tmp352 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp353 :supplyBlock.3:blockCapacity *tmp352
-    * set :supplyBlock.3:missing *tmp353
+ 1620 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp352
  1621 op greaterThan *tmp354 :supplyBlock.3:missing 0
  1622 jump *label349 equal *tmp354 false
  1623 set :mineOre:ore :supplyBlock.3:ore
 
  1645 jump *label352 equal *tmp357 false
  1646 sensor *tmp359 .core @titanium
  1647 op sub *tmp360 .targetTitanium *tmp359
-    * op min *tmp361 7 *tmp360
-    * set *tmp358 *tmp361
+ 1648 op min *tmp358 7 *tmp360
  1649 jump *label353 always
  1650 label *label352
  1651 set *tmp358 100
 
  1675 set :status1.5:text "Goal 6: silicon requirement"
  1676 write :status1.5:text .display ".status1"
  1677 label *label364
-    * sensor *tmp374 .core @coal
-    * set :supplyBase0:coal *tmp374
-    * sensor *tmp375 .core @sand
-    * set :supplyBase0:sand *tmp375
+ 1678 sensor :supplyBase0:coal .core @coal
+ 1679 sensor :supplyBase0:sand .core @sand
  1680 op lessThan *tmp376 :supplyBase0:coal :supplyBase0:sand
  1681 jump *label365 equal *tmp376 false
  1682 set *tmp377 @coal
 
  1730 set :status1.9:text "Goal 10: supplying base"
  1731 write :status1.9:text .display ".status1"
  1732 label *label380
-    * sensor *tmp387 .core @coal
-    * set :supplyBase0:coal.1 *tmp387
-    * sensor *tmp388 .core @sand
-    * set :supplyBase0:sand.1 *tmp388
+ 1733 sensor :supplyBase0:coal.1 .core @coal
+ 1734 sensor :supplyBase0:sand.1 .core @sand
  1735 op lessThanEq *tmp389 :supplyBase0:coal.1 :supplyBase0:sand.1
  1736 jump *label381 equal *tmp389 false
  1737 set *tmp390 @coal
 
  1895 write :meetTarget:metaglass .display ".targetMetaglass"
  1896 set .targetCopper :meetTarget:copper
  1897 op add *tmp419 :meetTarget:lead .leadSurplus
-    * op add *tmp420 *tmp419 1
-    * set .targetLead *tmp420
+ 1898 op add .targetLead *tmp419 1
  1899 set .targetGraphite :meetTarget:graphite
  1900 set .targetSilicon :meetTarget:silicon
  1901 set .targetTitanium :meetTarget:titanium
 
  1943 return :log*retaddr
  1944 end
  1945 label *label25
-    * sensor *tmp436 :logBlock:block @id
-    * set :log:encodedId *tmp436
+ 1946 sensor :log:encodedId :logBlock:block @id
  1947 setaddr :log*retaddr *label429 (h:*label429)
  1948 call *label24 *invalid :log*retval (m:*label429) (h:*label429)
  1949 label *label429
 
  1959 set :status3.4:text "Building..."
  1960 write :status3.4:text .display ".status3"
  1961 label *label432
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp437 *tmp438
-    * set :buildBlockAt:building *tmp437
+ 1962 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1963 op notEqual *tmp439 :buildBlockAt:building null
  1964 jump *label433 equal *tmp439 false
  1965 op equal *tmp441 :buildBlockAt:type :buildBlockAt:block
 
  1985 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1986 wait 0.25
  1987 label *label440
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp444 *tmp445
-    * set :buildBlockAt:building *tmp444
+ 1988 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1989 op equal *tmp446 :buildBlockAt:building null
  1990 jump *label443 equal *tmp446 false
  1991 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1210 jump *label233 notEqual *tmp255 false
  1211 label *label235
  1212 label *label237
-    * jump *label239 equal true false
  1213 setaddr :supplyBase*retaddr *label240 (h:*label240)
  1214 call *label21 *invalid :supplyBase*retval (m:*label240) (h:*label240)
  1215 label *label240

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-65 instructions):
 
    17 set .builder @unit
    18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label31
-    * op equal *tmp92 .core null
-    * jump *label30 notEqual *tmp92 false
+   20 jump *label30 equal .core null
    21 label *label32
    22 set .display processor1
    23 set .flareController processor3
 
   265 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   266 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   267 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp135 :buildTitaniumDrill:result false
-    * jump *label71 equal *tmp135 false
+  268 jump *label71 notEqual :buildTitaniumDrill:result false
   269 set :error:error "Cannot locate spot for titanium drill"
   270 set .ERROR :error:error
   271 stop
 
   504 call *label21 *invalid :supplyBase*retval (m:*label109) (h:*label109)
   505 label *label109
   506 sensor *tmp157 .battery @totalPower
-    * op lessThan *tmp158 *tmp157 300
-    * jump *label110 equal *tmp158 false
+  507 jump *label110 greaterThanEq *tmp157 300
   508 jump *label108 always
   509 jump *label111 always
   510 label *label110
   511 label *label111
   512 label *label107
   513 read *tmp71 .controller ".monos"
-    * op lessThan *tmp160 *tmp71 3
-    * jump *label106 notEqual *tmp160 false
+  514 jump *label106 lessThan *tmp71 3
   515 label *label108
   516 set .graphiteSurplus 60
   517 set .siliconSurplus 100
 
   925 write 3 .controller ".polyTarget"
   926 label *label179
   927 read *tmp72 .controller ".polys"
-    * op lessThan *tmp205 *tmp72 3
-    * jump *label181 equal *tmp205 false
+  928 jump *label181 greaterThanEq *tmp72 3
   929 setaddr :supplyBase*retaddr *label182 (h:*label182)
   930 call *label21 *invalid :supplyBase*retval (m:*label182) (h:*label182)
   931 label *label182
 
   936 write 6 .controller ".polyTarget"
   937 label *label183
   938 read *tmp70 .controller ".flares"
-    * op lessThan *tmp206 *tmp70 2
-    * jump *label185 equal *tmp206 false
+  939 jump *label185 greaterThanEq *tmp70 2
   940 setaddr :supplyBase*retaddr *label186 (h:*label186)
   941 call *label21 *invalid :supplyBase*retval (m:*label186) (h:*label186)
   942 label *label186
 
   962 set :findFreeUnit:unit_type @flare
   963 set :findFreeUnit:initial_flag 0
   964 ubind :findFreeUnit:unit_type
-    * op equal *tmp220 @unit null
-    * jump *label189 equal *tmp220 false
+  965 jump *label189 notEqual @unit null
   966 jump *label188 always
   967 jump *label190 always
   968 label *label189
 
   970 set :findFreeUnit:first_unit @unit
   971 label *label191
   972 sensor *tmp222 @unit @controlled
-    * op equal *tmp223 *tmp222 0
-    * jump *label194 equal *tmp223 false
+  973 jump *label194 notEqual *tmp222 0
   974 ucontrol flag :findFreeUnit:initial_flag
   975 jump *label188 always
   976 jump *label195 always
   977 label *label194
   978 sensor *tmp225 :findFreeUnit:first_unit @dead
-    * op equal *tmp226 *tmp225 1
-    * jump *label196 equal *tmp226 false
+  979 jump *label196 notEqual *tmp225 1
   980 set :findFreeUnit:first_unit @unit
   981 jump *label197 always
   982 label *label196
 
   984 label *label195
   985 ubind :findFreeUnit:unit_type
   986 label *label192
-    * op notEqual *tmp229 :findFreeUnit:first_unit @unit
-    * jump *label191 notEqual *tmp229 false
+  987 jump *label191 notEqual :findFreeUnit:first_unit @unit
   988 label *label193
   989 jump *label188 always
   990 label *label188
 
  1001 label *label201
  1002 label *label199
  1003 read *tmp234 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp235 *tmp234 false
-    * jump *label198 notEqual *tmp235 false
+ 1004 jump *label198 equal *tmp234 false
  1005 label *label200
  1006 set :meetTarget:block @laser-drill
  1007 set :meetTarget:copper 35
 
  1019 read *tmp236 .oreLocator ":layoutThoriumDrill*finished"
  1020 jump *label205 equal *tmp236 false
  1021 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp238 :buildThoriumDrill:result false
-    * jump *label206 equal *tmp238 false
+ 1022 jump *label206 notEqual :buildThoriumDrill:result false
  1023 set :error.1:error "Cannot locate spot for thorium drill"
  1024 set .ERROR :error.1:error
  1025 stop
 
  1038 label *label209
  1039 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1040 read *tmp43 .oreLocator ".water1X"
-    * op lessThan *tmp241 *tmp43 0
-    * jump *label210 equal *tmp241 false
+ 1041 jump *label210 greaterThanEq *tmp43 0
  1042 jump *label202 always
  1043 jump *label211 always
  1044 label *label210
 
  1065 call *label26 *invalid :buildBlockAt*retval (m:*label214) (h:*label214)
  1066 label *label214
  1067 read *tmp45 .oreLocator ".water2X"
-    * op lessThan *tmp244 *tmp45 0
-    * jump *label215 equal *tmp244 false
+ 1068 jump *label215 greaterThanEq *tmp45 0
  1069 jump *label202 always
  1070 jump *label216 always
  1071 label *label215
 
  1192 read *tmp70 .controller ".flares"
  1193 read *tmp71 .controller ".monos"
  1194 op add *tmp254 *tmp70 *tmp71
-    * op lessThan *tmp255 *tmp254 16
-    * jump *label233 notEqual *tmp255 false
+ 1195 jump *label233 lessThan *tmp254 16
  1196 label *label235
  1197 label *label237
  1198 setaddr :supplyBase*retaddr *label240 (h:*label240)
 
  1213 label *label244
  1214 label *label245
  1215 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp256
-    * op equal *tmp257 *tmp256 false
-    * jump *label247 equal *tmp257 false
+ 1216 jump *label247 notEqual *tmp256 false
  1217 op sub *tmp258 :moveTo:radius 0.5
  1218 ucontrol approach :moveTo:x :moveTo:y *tmp258
  1219 label *label246
 
  1240 label *label251
  1241 label *label252
  1242 sensor *tmp261 @unit @firstItem
-    * op notEqual *tmp262 *tmp261 null
-    * jump *label255 equal *tmp262 false
+ 1243 jump *label255 equal *tmp261 null
  1244 ucontrol itemDrop @air 1000
  1245 jump *label256 always
  1246 label *label255
 
  1248 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1249 label *label253
  1250 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp264
-    * op equal *tmp265 *tmp264 false
-    * jump *label252 notEqual *tmp265 false
+ 1251 jump *label252 equal *tmp264 false
  1252 label *label254
  1253 label *label250
  1254 return :moveToEmpty*retaddr
 
  1270 write :status3.2:text .display ".status3"
  1271 label *label260
  1272 sensor *tmp268 @unit @firstItem
-    * op equal *tmp269 *tmp268 :depositItems:item
-    * jump *label261 equal *tmp269 false
+ 1273 jump *label261 notEqual *tmp268 :depositItems:item
  1274 set :moveToBlock:block :depositItems:block
  1275 set :moveToBlock:radius 6
  1276 setaddr :moveToBlock*retaddr *label263 (h:*label263)
 
  1283 sensor *tmp272 @unit @firstItem
  1284 op mul *tmp273 *tmp272 :depositItems:cap
  1285 sensor *tmp274 :depositItems:block :depositItems:item
-    * op greaterThan *tmp275 *tmp273 *tmp274
-    * jump *label264 notEqual *tmp275 false
+ 1286 jump *label264 greaterThan *tmp273 *tmp274
  1287 label *label266
  1288 jump *label262 always
  1289 label *label261
  1290 label *label267
  1291 sensor *tmp276 @unit @firstItem
-    * op notEqual *tmp277 *tmp276 null
-    * jump *label269 equal *tmp277 false
+ 1292 jump *label269 equal *tmp276 null
  1293 ucontrol itemDrop @air 1000
  1294 label *label268
  1295 jump *label267 always
 
  1305 end
  1306 label *label11
  1307 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 0
-    * op equal *tmp280 *tmp278 false
-    * jump *label272 equal *tmp280 false
+ 1308 jump *label272 notEqual *tmp278 false
  1309 set :error.3:error "Cannot locate ore"
  1310 set .ERROR :error.3:error
  1311 stop
 
  1335 call *label8 *invalid :moveToEmpty*retval (m:*label278) (h:*label278)
  1336 label *label278
  1337 sensor *tmp283 @unit @firstItem
-    * op notEqual *tmp284 *tmp283 :mineOre:ore
-    * jump *label279 equal *tmp284 false
+ 1338 jump *label279 equal *tmp283 :mineOre:ore
  1339 label *label282
  1340 sensor *tmp286 @unit @firstItem
-    * op notEqual *tmp287 *tmp286 null
-    * jump *label284 equal *tmp287 false
+ 1341 jump *label284 equal *tmp286 null
  1342 ucontrol itemDrop @air 1000
  1343 label *label283
  1344 jump *label282 always
 
  1362 label *label289
  1363 label *label290
  1364 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp294 @second :mineOre:stop
-    * jump *label291 equal *tmp294 false
+ 1365 jump *label291 lessThanEq @second :mineOre:stop
  1366 jump *label288 always
  1367 jump *label292 always
  1368 label *label291
  1369 label *label292
  1370 label *label287
  1371 sensor *tmp296 @unit @totalItems
-    * op lessThan *tmp297 *tmp296 :mineOre:amount
-    * jump *label286 notEqual *tmp297 false
+ 1372 jump *label286 lessThan *tmp296 :mineOre:amount
  1373 label *label288
  1374 ucontrol unbind
  1375 set :depositItems:block :mineOre:block
 
  1419 label *label300
  1420 label *label302
  1421 sensor *tmp302 @unit @firstItem
-    * op notEqual *tmp303 *tmp302 null
-    * jump *label304 equal *tmp303 false
+ 1422 jump *label304 equal *tmp302 null
  1423 ucontrol itemDrop @air 1000
  1424 label *label303
  1425 jump *label302 always
 
  1453 end
  1454 label *label19
  1455 set :supplyBase0:supplied false
-    * op equal *tmp313 .unloader1 null
-    * jump *label312 equal *tmp313 false
+ 1456 jump *label312 notEqual .unloader1 null
  1457 sensor *tmp315 .core @graphite
-    * op lessThan *tmp316 *tmp315 .targetGraphite
-    * jump *label314 equal *tmp316 false
+ 1458 jump *label314 greaterThanEq *tmp315 .targetGraphite
  1459 sensor *tmp318 .press @coal
-    * op lessThan *tmp319 *tmp318 5
-    * jump *label316 equal *tmp319 false
+ 1460 jump *label316 greaterThanEq *tmp318 5
  1461 set :status1:text "Goal 1: graphite requirement"
  1462 write :status1:text .display ".status1"
  1463 label *label318
 
  1473 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1474 sensor *tmp322 :supplyBlock:block :supplyBlock:ore
  1475 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp322
-    * op greaterThan *tmp324 :supplyBlock:missing 0
-    * jump *label321 equal *tmp324 false
+ 1476 jump *label321 lessThanEq :supplyBlock:missing 0
  1477 set :mineOre:ore :supplyBlock:ore
  1478 set :mineOre:amount :supplyBlock:blockCapacity
  1479 set :mineOre:block :supplyBlock:block
 
  1492 label *label314
  1493 label *label315
  1494 sensor *tmp326 .core @silicon
-    * op lessThan *tmp327 *tmp326 .targetSilicon
-    * jump *label324 equal *tmp327 false
+ 1495 jump *label324 greaterThanEq *tmp326 .targetSilicon
  1496 sensor *tmp329 .smelter @coal
-    * op lessThan *tmp330 *tmp329 5
-    * jump *label326 equal *tmp330 false
+ 1497 jump *label326 greaterThanEq *tmp329 5
  1498 set :status1.1:text "Goal 2: coal for silicon requirement"
  1499 write :status1.1:text .display ".status1"
  1500 label *label328
 
  1510 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1511 sensor *tmp333 :supplyBlock.1:block :supplyBlock.1:ore
  1512 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp333
-    * op greaterThan *tmp335 :supplyBlock.1:missing 0
-    * jump *label331 equal *tmp335 false
+ 1513 jump *label331 lessThanEq :supplyBlock.1:missing 0
  1514 set :mineOre:ore :supplyBlock.1:ore
  1515 set :mineOre:amount :supplyBlock.1:blockCapacity
  1516 set :mineOre:block :supplyBlock.1:block
 
  1525 jump *label327 always
  1526 label *label326
  1527 sensor *tmp337 .smelter @sand
-    * op lessThan *tmp338 *tmp337 5
-    * jump *label334 equal *tmp338 false
+ 1528 jump *label334 greaterThanEq *tmp337 5
  1529 set :status1.2:text "Goal 3: sand for silicon requirement"
  1530 write :status1.2:text .display ".status1"
  1531 label *label336
 
  1541 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1542 sensor *tmp341 :supplyBlock.2:block :supplyBlock.2:ore
  1543 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp341
-    * op greaterThan *tmp343 :supplyBlock.2:missing 0
-    * jump *label339 equal *tmp343 false
+ 1544 jump *label339 lessThanEq :supplyBlock.2:missing 0
  1545 set :mineOre:ore :supplyBlock.2:ore
  1546 set :mineOre:amount :supplyBlock.2:blockCapacity
  1547 set :mineOre:block :supplyBlock.2:block
 
  1561 label *label324
  1562 label *label325
  1563 sensor *tmp345 .battery @totalPower
-    * op lessThan *tmp346 *tmp345 .powerTarget
-    * jump *label342 equal *tmp346 false
+ 1564 jump *label342 greaterThanEq *tmp345 .powerTarget
  1565 sensor *tmp348 .generator @coal
-    * op lessThan *tmp349 *tmp348 2
-    * jump *label344 equal *tmp349 false
+ 1566 jump *label344 greaterThanEq *tmp348 2
  1567 set :status1.3:text "Goal 4: supplying generator"
  1568 write :status1.3:text .display ".status1"
  1569 label *label346
 
  1579 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1580 sensor *tmp352 :supplyBlock.3:block :supplyBlock.3:ore
  1581 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp352
-    * op greaterThan *tmp354 :supplyBlock.3:missing 0
-    * jump *label349 equal *tmp354 false
+ 1582 jump *label349 lessThanEq :supplyBlock.3:missing 0
  1583 set :mineOre:ore :supplyBlock.3:ore
  1584 set :mineOre:amount :supplyBlock.3:blockCapacity
  1585 set :mineOre:block :supplyBlock.3:block
 
  1601 label *label312
  1602 label *label313
  1603 sensor *tmp356 .core @titanium
-    * op lessThan *tmp357 *tmp356 .targetTitanium
-    * jump *label352 equal *tmp357 false
+ 1604 jump *label352 greaterThanEq *tmp356 .targetTitanium
  1605 sensor *tmp359 .core @titanium
  1606 op sub *tmp360 .targetTitanium *tmp359
  1607 op min *tmp358 7 *tmp360
 
  1611 label *label353
  1612 set :supplyBase0:titaniumTrigger *tmp358
  1613 sensor *tmp362 .titaniumDrill @titanium
-    * op lessThan *tmp363 *tmp362 :supplyBase0:titaniumTrigger
-    * jump *label354 equal *tmp363 false
-    * op equal *tmp365 :supplyBase0:supplied false
-    * jump *label356 equal *tmp365 false
+ 1614 jump *label354 greaterThanEq *tmp362 :supplyBase0:titaniumTrigger
+ 1615 jump *label356 notEqual :supplyBase0:supplied false
  1616 sensor *tmp367 .battery @totalPower
  1617 op mul *tmp368 .unloader1 .powerTarget
-    * op lessThan *tmp369 *tmp367 *tmp368
-    * jump *label358 equal *tmp369 false
+ 1618 jump *label358 greaterThanEq *tmp367 *tmp368
  1619 set :status1.4:text "Goal 5: supplying generator"
  1620 write :status1.4:text .display ".status1"
  1621 label *label360
 
  1626 jump *label359 always
  1627 label *label358
  1628 sensor *tmp371 .core @silicon
-    * op lessThan *tmp372 *tmp371 .targetSilicon
-    * jump *label362 equal *tmp372 false
+ 1629 jump *label362 greaterThanEq *tmp371 .targetSilicon
  1630 set :status1.5:text "Goal 6: silicon requirement"
  1631 write :status1.5:text .display ".status1"
  1632 label *label364
  1633 sensor :supplyBase0:coal .core @coal
  1634 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp376 :supplyBase0:coal :supplyBase0:sand
-    * jump *label365 equal *tmp376 false
+ 1635 jump *label365 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1636 set *tmp377 @coal
  1637 jump *label366 always
  1638 label *label365
 
  1646 jump *label363 always
  1647 label *label362
  1648 sensor *tmp378 .core @copper
-    * op lessThan *tmp379 *tmp378 .targetCopper
-    * jump *label368 equal *tmp379 false
+ 1649 jump *label368 greaterThanEq *tmp378 .targetCopper
  1650 set :status1.6:text "Goal 7: copper requirement"
  1651 write :status1.6:text .display ".status1"
  1652 label *label370
 
  1657 jump *label369 always
  1658 label *label368
  1659 sensor *tmp381 .core @lead
-    * op lessThan *tmp382 *tmp381 .targetLead
-    * jump *label372 equal *tmp382 false
+ 1660 jump *label372 greaterThanEq *tmp381 .targetLead
  1661 set :status1.7:text "Goal 8: lead requirement"
  1662 write :status1.7:text .display ".status1"
  1663 label *label374
 
  1668 jump *label373 always
  1669 label *label372
  1670 sensor *tmp384 .core @metaglass
-    * op lessThan *tmp385 *tmp384 .targetMetaglass
-    * jump *label376 equal *tmp385 false
+ 1671 jump *label376 greaterThanEq *tmp384 .targetMetaglass
  1672 set :status1.8:text "Goal 9: metaglass requirement"
  1673 write :status1.8:text .display ".status1"
  1674 label *label378
 
  1683 label *label380
  1684 sensor :supplyBase0:coal.1 .core @coal
  1685 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp389 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label381 equal *tmp389 false
+ 1686 jump *label381 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1687 set *tmp390 @coal
  1688 jump *label382 always
  1689 label *label381
 
  1728 return :supplyBase1*retaddr
  1729 end
  1730 label *label21
-    * op equal *tmp391 .flareControllerStarted false
-    * jump *label390 equal *tmp391 false
+ 1731 jump *label390 notEqual .flareControllerStarted false
  1732 read *tmp70 .controller ".flares"
-    * op greaterThan *tmp393 *tmp70 0
-    * jump *label392 equal *tmp393 false
+ 1733 jump *label392 lessThanEq *tmp70 0
  1734 set .flareControllerStarted true
  1735 write .core .flareController ":start:aCore"
  1736 write .titaniumDrill .flareController ":start:drill"
 
  1743 label *label390
  1744 label *label391
  1745 read *tmp71 .controller ".monos"
-    * op greaterThan *tmp397 *tmp71 3
-    * jump *label394 equal *tmp397 false
+ 1746 jump *label394 lessThanEq *tmp71 3
  1747 setaddr :supplyBase1*retaddr *label396 (h:*label396)
  1748 call *label20 *invalid :supplyBase1*retval (m:*label396) (h:*label396)
  1749 label *label396
 
  1758 end
  1759 label *label22
  1760 sensor *tmp399 .core @copper
-    * op greaterThanEq *tmp400 *tmp399 .targetCopper
-    * jump *label399 equal *tmp400 false
+ 1761 jump *label399 lessThan *tmp399 .targetCopper
  1762 sensor *tmp402 .core @lead
-    * op greaterThanEq *tmp403 *tmp402 .targetLead
-    * jump *label401 equal *tmp403 false
+ 1763 jump *label401 lessThan *tmp402 .targetLead
  1764 sensor *tmp405 .core @graphite
-    * op greaterThanEq *tmp406 *tmp405 .targetGraphite
-    * jump *label403 equal *tmp406 false
+ 1765 jump *label403 lessThan *tmp405 .targetGraphite
  1766 sensor *tmp408 .core @silicon
-    * op greaterThanEq *tmp409 *tmp408 .targetSilicon
-    * jump *label405 equal *tmp409 false
+ 1767 jump *label405 lessThan *tmp408 .targetSilicon
  1768 sensor *tmp411 .core @titanium
-    * op greaterThanEq *tmp412 *tmp411 .targetTitanium
-    * jump *label407 equal *tmp412 false
+ 1769 jump *label407 lessThan *tmp411 .targetTitanium
  1770 sensor *tmp414 .core @metaglass
-    * op greaterThanEq *tmp415 *tmp414 .targetMetaglass
-    * jump *label409 equal *tmp415 false
+ 1771 jump *label409 lessThan *tmp414 .targetMetaglass
  1772 set :targetMet*retval true
  1773 jump *label398 always
  1774 jump *label410 always
 
  1857 setaddr :targetMet*retaddr *label424 (h:*label424)
  1858 call *label22 *invalid :targetMet*retval (m:*label424) (h:*label424)
  1859 label *label424
-    * op equal *tmp428 :targetMet*retval false
-    * jump *label423 equal *tmp428 false
+ 1860 jump *label423 notEqual :targetMet*retval false
  1861 setaddr :supplyBase*retaddr *label425 (h:*label425)
  1862 call *label21 *invalid :supplyBase*retval (m:*label425) (h:*label425)
  1863 label *label425
 
  1900 write :status3.4:text .display ".status3"
  1901 label *label432
  1902 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp439 :buildBlockAt:building null
-    * jump *label433 equal *tmp439 false
-    * op equal *tmp441 :buildBlockAt:type :buildBlockAt:block
-    * jump *label435 equal *tmp441 false
+ 1903 jump *label433 equal :buildBlockAt:building null
+ 1904 jump *label435 notEqual :buildBlockAt:type :buildBlockAt:block
  1905 set :buildBlockAt*retval :buildBlockAt:building
  1906 jump *label430 always
  1907 jump *label436 always
 
  1924 wait 0.25
  1925 label *label440
  1926 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp446 :buildBlockAt:building null
-    * jump *label443 equal *tmp446 false
+ 1927 jump *label443 notEqual :buildBlockAt:building null
  1928 set :buildBlockAt*retval null
  1929 jump *label430 always
  1930 jump *label444 always
  1931 label *label443
  1932 label *label444
  1933 label *label441
-    * op notEqual *tmp448 :buildBlockAt:type :buildBlockAt:block
-    * jump *label440 notEqual *tmp448 false
+ 1934 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1935 label *label442
  1936 set :logBlock:block :buildBlockAt:block
  1937 setaddr :logBlock*retaddr *label445 (h:*label445)
 
  1973 set :findUnits:count 0
  1974 ubind :findUnits:type
  1975 set :findUnits:firstUnit @unit
-    * op notEqual *tmp449 :findUnits:firstUnit null
-    * jump *label450 equal *tmp449 false
+ 1976 jump *label450 equal :findUnits:firstUnit null
  1977 label *label452
  1978 op add :findUnits:count :findUnits:count 1
  1979 ubind :findUnits:type
  1980 label *label453
-    * op notEqual *tmp452 @unit :findUnits:firstUnit
-    * jump *label452 notEqual *tmp452 false
+ 1981 jump *label452 notEqual @unit :findUnits:firstUnit
  1982 label *label454
  1983 jump *label451 always
  1984 label *label450

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   270 set .ERROR :error:error
   271 stop
   272 label *label73
-    * jump *label72 always
   273 label *label71
   274 label *label72
   275 write @pneumatic-drill .display ".nextBlock"
 
   505 sensor *tmp157 .battery @totalPower
   506 jump *label110 greaterThanEq *tmp157 300
   507 jump *label108 always
-    * jump *label111 always
   508 label *label110
   509 label *label111
   510 label *label107
 
   962 ubind :findFreeUnit:unit_type
   963 jump *label189 notEqual @unit null
   964 jump *label188 always
-    * jump *label190 always
   965 label *label189
   966 label *label190
   967 set :findFreeUnit:first_unit @unit
 
   975 sensor *tmp225 :findFreeUnit:first_unit @dead
   976 jump *label196 notEqual *tmp225 1
   977 set :findFreeUnit:first_unit @unit
-    * jump *label197 always
   978 label *label196
   979 label *label197
   980 label *label195
 
   982 label *label192
   983 jump *label191 notEqual :findFreeUnit:first_unit @unit
   984 label *label193
-    * jump *label188 always
   985 label *label188
   986 write .coreX .oreLocator ":layoutThoriumDrill:x"
   987 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1019 set .ERROR :error.1:error
  1020 stop
  1021 label *label208
-    * jump *label207 always
  1022 label *label206
  1023 label *label207
  1024 set :buildBlockAt:block @laser-drill
 
  1034 read *tmp43 .oreLocator ".water1X"
  1035 jump *label210 greaterThanEq *tmp43 0
  1036 jump *label202 always
-    * jump *label211 always
  1037 label *label210
  1038 label *label211
  1039 set :meetTarget:block @water-extractor
 
  1060 read *tmp45 .oreLocator ".water2X"
  1061 jump *label215 greaterThanEq *tmp45 0
  1062 jump *label202 always
-    * jump *label216 always
  1063 label *label215
  1064 label *label216
  1065 set :meetTarget:block @water-extractor
 
  1234 sensor *tmp261 @unit @firstItem
  1235 jump *label255 equal *tmp261 null
  1236 ucontrol itemDrop @air 1000
-    * jump *label256 always
  1237 label *label255
  1238 label *label256
  1239 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1301 set .ERROR :error.3:error
  1302 stop
  1303 label *label274
-    * jump *label273 always
  1304 label *label272
  1305 label *label273
  1306 label *label271
 
  1334 jump *label282 always
  1335 label *label284
  1336 label *label281
-    * jump *label280 always
  1337 label *label279
  1338 label *label280
  1339 set :status3.3:text "Mining..."
 
  1347 op land *tmp292 *tmp290 *tmp291
  1348 jump *label289 equal *tmp292 false
  1349 jump *label288 always
-    * jump *label290 always
  1350 label *label289
  1351 label *label290
  1352 ucontrol mine :mineOre:x :mineOre:y
  1353 jump *label291 lessThanEq @second :mineOre:stop
  1354 jump *label288 always
-    * jump *label292 always
  1355 label *label291
  1356 label *label292
  1357 label *label287
 
  1420 op land *tmp307 *tmp305 *tmp306
  1421 jump *label308 equal *tmp307 false
  1422 ucontrol itemDrop @air 1000
-    * jump *label309 always
  1423 label *label308
  1424 label *label309
  1425 label *label306
 
  1466 setaddr :mineOre*retaddr *label323 (h:*label323)
  1467 call *label12 *invalid :mineOre*retval (m:*label323) (h:*label323)
  1468 label *label323
-    * jump *label322 always
  1469 label *label321
  1470 label *label322
  1471 label *label319
  1472 set :supplyBase0:supplied true
-    * jump *label317 always
  1473 label *label316
  1474 label *label317
-    * jump *label315 always
  1475 label *label314
  1476 label *label315
  1477 sensor *tmp326 .core @silicon
 
  1500 setaddr :mineOre*retaddr *label333 (h:*label333)
  1501 call *label12 *invalid :mineOre*retval (m:*label333) (h:*label333)
  1502 label *label333
-    * jump *label332 always
  1503 label *label331
  1504 label *label332
  1505 label *label329
 
  1530 setaddr :mineOre*retaddr *label341 (h:*label341)
  1531 call *label12 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1532 label *label341
-    * jump *label340 always
  1533 label *label339
  1534 label *label340
  1535 label *label337
  1536 set :supplyBase0:supplied true
-    * jump *label335 always
  1537 label *label334
  1538 label *label335
  1539 label *label327
-    * jump *label325 always
  1540 label *label324
  1541 label *label325
  1542 sensor *tmp345 .battery @totalPower
 
  1565 setaddr :mineOre*retaddr *label351 (h:*label351)
  1566 call *label12 *invalid :mineOre*retval (m:*label351) (h:*label351)
  1567 label *label351
-    * jump *label350 always
  1568 label *label349
  1569 label *label350
  1570 label *label347
  1571 set :supplyBase0:supplied true
-    * jump *label345 always
  1572 label *label344
  1573 label *label345
-    * jump *label343 always
  1574 label *label342
  1575 label *label343
-    * jump *label313 always
  1576 label *label312
  1577 label *label313
  1578 sensor *tmp356 .core @titanium
 
  1674 label *label369
  1675 label *label363
  1676 label *label359
-    * jump *label357 always
  1677 label *label356
  1678 label *label357
  1679 jump *label355 always
 
  1710 write .titaniumDrill .flareController ":start:drill"
  1711 write false .flareController ":start*finished"
  1712 write 3 .flareController "@counter"
-    * jump *label393 always
  1713 label *label392
  1714 label *label393
-    * jump *label391 always
  1715 label *label390
  1716 label *label391
  1717 read *tmp71 .controller ".monos"
 
  1743 jump *label409 lessThan *tmp414 .targetMetaglass
  1744 set :targetMet*retval true
  1745 jump *label398 always
-    * jump *label410 always
  1746 label *label409
  1747 label *label410
-    * jump *label408 always
  1748 label *label407
  1749 label *label408
-    * jump *label406 always
  1750 label *label405
  1751 label *label406
-    * jump *label404 always
  1752 label *label403
  1753 label *label404
-    * jump *label402 always
  1754 label *label401
  1755 label *label402
-    * jump *label400 always
  1756 label *label399
  1757 label *label400
  1758 set :targetMet*retval false
 
  1870 jump *label435 notEqual :buildBlockAt:type :buildBlockAt:block
  1871 set :buildBlockAt*retval :buildBlockAt:building
  1872 jump *label430 always
-    * jump *label436 always
  1873 label *label435
  1874 label *label436
  1875 jump *label437 equal :buildBlockAt:skipError false
  1876 set :buildBlockAt*retval null
  1877 jump *label430 always
-    * jump *label438 always
  1878 label *label437
  1879 label *label438
  1880 set :error.4:error "Cannot build at ("
  1881 set .ERROR :error.4:error
  1882 stop
  1883 label *label439
-    * jump *label434 always
  1884 label *label433
  1885 label *label434
  1886 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1890 jump *label443 notEqual :buildBlockAt:building null
  1891 set :buildBlockAt*retval null
  1892 jump *label430 always
-    * jump *label444 always
  1893 label *label443
  1894 label *label444
  1895 label *label441
 
  1942 label *label453
  1943 jump *label452 notEqual @unit :findUnits:firstUnit
  1944 label *label454
-    * jump *label451 always
  1945 label *label450
  1946 label *label451
  1947 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-39 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .kiln null
     8 set .leadSurplus 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    22 set .flareController processor3
    23 set .oreLocator processor4
    24 set .polyController processor5
-    * write .core .polyController ":startPolyController:aCore"
-    * write @unit .polyController ":startPolyController:aBuilder"
-    * write false .polyController ":startPolyController*finished"
-    * write 1 .polyController "@counter"
+   25 write .core processor5 ":startPolyController:aCore"
+   26 write @unit processor5 ":startPolyController:aBuilder"
+   27 write false processor5 ":startPolyController*finished"
+   28 write 1 processor5 "@counter"
    29 label *label33
    30 wait 1e-15
-    * read *tmp95 .polyController ":startPolyController*finished"
+   31 read *tmp95 processor5 ":startPolyController*finished"
    32 jump *label33 equal *tmp95 false
    33 set :findUnits:type @flare
    34 setaddr :findUnits*retaddr *label34 (h:*label34)
    35 call *label28 *invalid :findUnits*retval (m:*label34) (h:*label34)
    36 label *label34
-    * write :findUnits:count .display ".displayFlares"
+   37 write :findUnits:count processor1 ".displayFlares"
    38 set :flares :findUnits*retval
    39 set :findUnits:type @mono
    40 setaddr :findUnits*retaddr *label35 (h:*label35)
    41 call *label28 *invalid :findUnits*retval (m:*label35) (h:*label35)
    42 label *label35
-    * write :findUnits:count .display ".displayMonos"
+   43 write :findUnits:count processor1 ".displayMonos"
    44 set :monos :findUnits*retval
    45 set :findUnits:type @poly
    46 setaddr :findUnits*retaddr *label36 (h:*label36)
    47 call *label28 *invalid :findUnits*retval (m:*label36) (h:*label36)
    48 label *label36
-    * write :findUnits:count .display ".displayPolys"
+   49 write :findUnits:count processor1 ".displayPolys"
    50 set :polys :findUnits*retval
    51 set :buildBlockFromCfg:block @graphite-press
    52 set :buildBlockFromCfg:offsetX -1.5
 
    59 set :buildBlockFromCfg:metaglass 0
    60 set :buildBlockFromCfg:rotation 0
    61 set :buildBlockFromCfg:config null
-    * setaddr *tmp103 *label41
    62 label *label38
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   63 op add :buildBlockFromCfg:x .coreX -1.5
+   64 op add :buildBlockFromCfg:y .coreY 2.5
+   65 set :buildBlock:block @graphite-press
    66 set :buildBlock:x :buildBlockFromCfg:x
    67 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   68 set :buildBlock:copper 75
+   69 set :buildBlock:lead 30
+   70 set :buildBlock:graphite 0
+   71 set :buildBlock:silicon 0
+   72 set :buildBlock:titanium 0
+   73 set :buildBlock:metaglass 0
+   74 set :buildBlock:rotation 0
+   75 set :buildBlock:config null
    76 setaddr :buildBlock*retaddr *label42 (h:*label42)
    77 call *label27 *invalid :buildBlock*retval (m:*label42) (h:*label42)
    78 label *label42
 
    82 multijump *tmp103 0 0 (m:marker0)
    83 multilabel *label41 (m:marker0)
    84 label *label40
-    * set *tmp102 null
    85 label *label37
    86 set .press *tmp102
    87 set :buildBlockFromCfg.1:block @battery
 
    95 set :buildBlockFromCfg.1:metaglass 0
    96 set :buildBlockFromCfg.1:rotation 0
    97 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp107 *label47
    98 label *label44
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   99 op add :buildBlockFromCfg.1:x .coreX 0
+  100 op add :buildBlockFromCfg.1:y .coreY 4
+  101 set :buildBlock:block @battery
   102 set :buildBlock:x :buildBlockFromCfg.1:x
   103 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+  104 set :buildBlock:copper 5
+  105 set :buildBlock:lead 20
+  106 set :buildBlock:graphite 0
+  107 set :buildBlock:silicon 0
+  108 set :buildBlock:titanium 0
+  109 set :buildBlock:metaglass 0
+  110 set :buildBlock:rotation 0
+  111 set :buildBlock:config null
   112 setaddr :buildBlock*retaddr *label48 (h:*label48)
   113 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
   114 label *label48
 
   118 multijump *tmp107 0 0 (m:marker1)
   119 multilabel *label47 (m:marker1)
   120 label *label46
-    * set *tmp106 null
   121 label *label43
   122 set .battery *tmp106
   123 set :buildBlockFromCfg.2:block @battery
 
   131 set :buildBlockFromCfg.2:metaglass 0
   132 set :buildBlockFromCfg.2:rotation 0
   133 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp111 *label53
   134 label *label50
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  135 op add :buildBlockFromCfg.2:x .coreX -1
+  136 op add :buildBlockFromCfg.2:y .coreY 4
+  137 set :buildBlock:block @battery
   138 set :buildBlock:x :buildBlockFromCfg.2:x
   139 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  140 set :buildBlock:copper 5
+  141 set :buildBlock:lead 20
+  142 set :buildBlock:graphite 0
+  143 set :buildBlock:silicon 0
+  144 set :buildBlock:titanium 0
+  145 set :buildBlock:metaglass 0
+  146 set :buildBlock:rotation 0
+  147 set :buildBlock:config null
   148 setaddr :buildBlock*retaddr *label54 (h:*label54)
   149 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
   150 label *label54
 
   165 set :buildBlockFromCfg.3:metaglass 0
   166 set :buildBlockFromCfg.3:rotation 0
   167 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp115 *label59
   168 label *label56
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  169 op add :buildBlockFromCfg.3:x .coreX 0
+  170 op add :buildBlockFromCfg.3:y .coreY 3
+  171 set :buildBlock:block @combustion-generator
   172 set :buildBlock:x :buildBlockFromCfg.3:x
   173 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  174 set :buildBlock:copper 25
+  175 set :buildBlock:lead 15
+  176 set :buildBlock:graphite 0
+  177 set :buildBlock:silicon 0
+  178 set :buildBlock:titanium 0
+  179 set :buildBlock:metaglass 0
+  180 set :buildBlock:rotation 0
+  181 set :buildBlock:config null
   182 setaddr :buildBlock*retaddr *label60 (h:*label60)
   183 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
   184 label *label60
 
   188 multijump *tmp115 0 0 (m:marker3)
   189 multilabel *label59 (m:marker3)
   190 label *label58
-    * set *tmp114 null
   191 label *label55
   192 set .generator *tmp114
   193 set .powerTarget 400
 
   202 set :buildBlockFromCfg.4:metaglass 0
   203 set :buildBlockFromCfg.4:rotation 0
   204 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp119 *label65
   205 label *label62
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  206 op add :buildBlockFromCfg.4:x .coreX 1.5
+  207 op add :buildBlockFromCfg.4:y .coreY 2.5
+  208 set :buildBlock:block @silicon-smelter
   209 set :buildBlock:x :buildBlockFromCfg.4:x
   210 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  211 set :buildBlock:copper 30
+  212 set :buildBlock:lead 25
+  213 set :buildBlock:graphite 0
+  214 set :buildBlock:silicon 0
+  215 set :buildBlock:titanium 0
+  216 set :buildBlock:metaglass 0
+  217 set :buildBlock:rotation 0
+  218 set :buildBlock:config null
   219 setaddr :buildBlock*retaddr *label66 (h:*label66)
   220 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   221 label *label66
 
   225 multijump *tmp119 0 0 (m:marker4)
   226 multilabel *label65 (m:marker4)
   227 label *label64
-    * set *tmp118 null
   228 label *label61
   229 set .smelter *tmp118
   230 set :meetTarget:block @pneumatic-drill
 
   238 call *label23 *invalid :meetTarget*retval (m:*label69) (h:*label69)
   239 label *label69
   240 label *label68
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  241 write @titanium processor1 ".nextBlock"
+  242 write .coreX processor4 ":findDrillLocation:x"
+  243 write .coreY processor4 ":findDrillLocation:y"
+  244 write @unit processor4 ":findDrillLocation:unit"
+  245 write @titanium processor4 ":findDrillLocation:item"
+  246 write @ore-titanium processor4 ":findDrillLocation:ore"
+  247 write false processor4 ":findDrillLocation:large"
+  248 write 4 processor4 ":findDrillLocation:limit"
+  249 write false processor4 ":findDrillLocation*finished"
+  250 write 1 processor4 "@counter"
   251 label *label70
   252 wait 1e-15
-    * read *tmp133 .oreLocator ":findDrillLocation*finished"
+  253 read *tmp133 processor4 ":findDrillLocation*finished"
   254 jump *label70 equal *tmp133 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  255 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  256 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  257 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   258 jump *label71 notEqual :buildTitaniumDrill:result false
   259 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  260 set .ERROR "Cannot locate spot for titanium drill"
   261 stop
   262 label *label73
   263 label *label71
   264 label *label72
-    * write @pneumatic-drill .display ".nextBlock"
+  265 write @pneumatic-drill processor1 ".nextBlock"
   266 set :buildBlockAt:block @pneumatic-drill
   267 set :buildBlockAt:x :buildTitaniumDrill:dx
   268 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   274 label *label74
   275 set *tmp122 :buildBlockAt*retval
   276 jump *label67 always
-    * set *tmp122 null
   277 label *label67
-    * set .titaniumDrill *tmp122
-    * write .titaniumDrill .display ".titaniumDrill"
+  278 set .titaniumDrill :buildBlockAt*retval
+  279 write *tmp122 processor1 ".titaniumDrill"
   280 set :buildBlockFromCfg.5:block @unloader
   281 set :buildBlockFromCfg.5:offsetX 0
   282 set :buildBlockFromCfg.5:offsetY 2
 
   288 set :buildBlockFromCfg.5:metaglass 0
   289 set :buildBlockFromCfg.5:rotation 0
   290 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp138 *label79
   291 label *label76
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  292 op add :buildBlockFromCfg.5:x .coreX 0
+  293 op add :buildBlockFromCfg.5:y .coreY 2
+  294 set :buildBlock:block @unloader
   295 set :buildBlock:x :buildBlockFromCfg.5:x
   296 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  297 set :buildBlock:copper 0
+  298 set :buildBlock:lead 0
+  299 set :buildBlock:graphite 0
+  300 set :buildBlock:silicon 30
+  301 set :buildBlock:titanium 25
+  302 set :buildBlock:metaglass 0
+  303 set :buildBlock:rotation 0
+  304 set :buildBlock:config null
   305 setaddr :buildBlock*retaddr *label80 (h:*label80)
   306 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   307 label *label80
 
   311 multijump *tmp138 0 0 (m:marker5)
   312 multilabel *label79 (m:marker5)
   313 label *label78
-    * set *tmp137 null
   314 label *label75
   315 set .unloader1 *tmp137
   316 set :buildBlockFromCfg.6:block @micro-processor
 
   324 set :buildBlockFromCfg.6:metaglass 0
   325 set :buildBlockFromCfg.6:rotation 0
   326 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp142 *label85
   327 label *label82
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  328 op add :buildBlockFromCfg.6:x .coreX 1
+  329 op add :buildBlockFromCfg.6:y .coreY 4
+  330 set :buildBlock:block @micro-processor
   331 set :buildBlock:x :buildBlockFromCfg.6:x
   332 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  333 set :buildBlock:copper 90
+  334 set :buildBlock:lead 50
+  335 set :buildBlock:graphite 0
+  336 set :buildBlock:silicon 50
+  337 set :buildBlock:titanium 0
+  338 set :buildBlock:metaglass 0
+  339 set :buildBlock:rotation 0
+  340 set :buildBlock:config processor2
   341 setaddr :buildBlock*retaddr *label86 (h:*label86)
   342 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)
   343 label *label86
 
   347 multijump *tmp142 0 0 (m:marker6)
   348 multilabel *label85 (m:marker6)
   349 label *label84
-    * set *tmp141 null
   350 label *label81
   351 set .controller *tmp141
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  352 write processor1 *tmp141 ".display"
+  353 write .core *tmp141 ".core"
+  354 write bank1 *tmp141 ".bank"
+  355 write *tmp106 *tmp141 ".battery"
+  356 write *tmp114 *tmp141 ".generator"
+  357 write *tmp118 *tmp141 ".smelter"
+  358 write *tmp102 *tmp141 ".press"
+  359 write :monos *tmp141 ".monos"
+  360 write :flares *tmp141 ".flares"
+  361 write :polys *tmp141 ".polys"
   362 set :buildBlockFromCfg.7:block @power-node
   363 set :buildBlockFromCfg.7:offsetX -2
   364 set :buildBlockFromCfg.7:offsetY 1
 
   370 set :buildBlockFromCfg.7:metaglass 0
   371 set :buildBlockFromCfg.7:rotation 0
   372 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp146 *label91
   373 label *label88
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  374 op add :buildBlockFromCfg.7:x .coreX -2
+  375 op add :buildBlockFromCfg.7:y .coreY 1
+  376 set :buildBlock:block @power-node
   377 set :buildBlock:x :buildBlockFromCfg.7:x
   378 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  379 set :buildBlock:copper 2
+  380 set :buildBlock:lead 6
+  381 set :buildBlock:graphite 0
+  382 set :buildBlock:silicon 0
+  383 set :buildBlock:titanium 0
+  384 set :buildBlock:metaglass 0
+  385 set :buildBlock:rotation 0
+  386 set :buildBlock:config null
   387 setaddr :buildBlock*retaddr *label92 (h:*label92)
   388 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   389 label *label92
 
   404 set :buildBlockFromCfg.8:metaglass 0
   405 set :buildBlockFromCfg.8:rotation 0
   406 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp150 *label97
   407 label *label94
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  408 op add :buildBlockFromCfg.8:x .coreX -2
+  409 op add :buildBlockFromCfg.8:y .coreY 0
+  410 set :buildBlock:block @unloader
   411 set :buildBlock:x :buildBlockFromCfg.8:x
   412 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  413 set :buildBlock:copper 0
+  414 set :buildBlock:lead 0
+  415 set :buildBlock:graphite 0
+  416 set :buildBlock:silicon 30
+  417 set :buildBlock:titanium 25
+  418 set :buildBlock:metaglass 0
+  419 set :buildBlock:rotation 0
+  420 set :buildBlock:config null
   421 setaddr :buildBlock*retaddr *label98 (h:*label98)
   422 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   423 label *label98
 
   427 multijump *tmp150 0 0 (m:marker8)
   428 multilabel *label97 (m:marker8)
   429 label *label96
-    * set *tmp149 null
   430 label *label93
-    * write *tmp149 .controller ".unloader2"
+  431 write *tmp149 *tmp141 ".unloader2"
   432 set :buildBlockFromCfg.9:block @air-factory
   433 set :buildBlockFromCfg.9:offsetX -3
   434 set :buildBlockFromCfg.9:offsetY -2
 
   440 set :buildBlockFromCfg.9:metaglass 0
   441 set :buildBlockFromCfg.9:rotation 3
   442 set :buildBlockFromCfg.9:config @mono
-    * setaddr *tmp154 *label103
   443 label *label100
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  444 op add :buildBlockFromCfg.9:x .coreX -3
+  445 op add :buildBlockFromCfg.9:y .coreY -2
+  446 set :buildBlock:block @air-factory
   447 set :buildBlock:x :buildBlockFromCfg.9:x
   448 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  449 set :buildBlock:copper 60
+  450 set :buildBlock:lead 70
+  451 set :buildBlock:graphite 0
+  452 set :buildBlock:silicon 0
+  453 set :buildBlock:titanium 0
+  454 set :buildBlock:metaglass 0
+  455 set :buildBlock:rotation 3
+  456 set :buildBlock:config @mono
   457 setaddr :buildBlock*retaddr *label104 (h:*label104)
   458 call *label27 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   459 label *label104
 
   463 multijump *tmp154 0 0 (m:marker9)
   464 multilabel *label103 (m:marker9)
   465 label *label102
-    * set *tmp153 null
   466 label *label99
   467 set :factory *tmp153
-    * write :factory .controller ".factory"
-    * write :factory .display ".factory"
-    * write 1 .controller ".flareTarget"
-    * write 3 .controller ".monoTarget"
-    * write 0 .controller ".polyTarget"
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  468 write *tmp153 *tmp141 ".factory"
+  469 write *tmp153 processor1 ".factory"
+  470 write 1 *tmp141 ".flareTarget"
+  471 write 3 *tmp141 ".monoTarget"
+  472 write 0 *tmp141 ".polyTarget"
+  473 write 85 *tmp141 ".pressTarget"
+  474 write 150 *tmp141 ".smelterTarget"
+  475 write 30 *tmp141 ".kilnTarget"
   476 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  477 set .siliconSurplus 20
   478 setaddr :buildUnits*retaddr *label105 (h:*label105)
   479 call *label29 *invalid :buildUnits*retval (m:*label105) (h:*label105)
   480 label *label105
 
   482 setaddr :supplyBase*retaddr *label109 (h:*label109)
   483 call *label21 *invalid :supplyBase*retval (m:*label109) (h:*label109)
   484 label *label109
-    * sensor *tmp157 .battery @totalPower
+  485 sensor *tmp157 *tmp106 @totalPower
   486 jump *label110 greaterThanEq *tmp157 300
   487 jump *label108 always
   488 label *label110
   489 label *label111
   490 label *label107
-    * read *tmp71 .controller ".monos"
+  491 read *tmp71 *tmp141 ".monos"
   492 jump *label106 lessThan *tmp71 3
   493 label *label108
   494 set .graphiteSurplus 60
 
   505 set :buildBlockFromCfg.10:metaglass 0
   506 set :buildBlockFromCfg.10:rotation 0
   507 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp162 *label116
   508 label *label113
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  509 op add :buildBlockFromCfg.10:x .coreX 2
+  510 op add :buildBlockFromCfg.10:y .coreY 1
+  511 set :buildBlock:block @unloader
   512 set :buildBlock:x :buildBlockFromCfg.10:x
   513 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  514 set :buildBlock:copper 0
+  515 set :buildBlock:lead 0
+  516 set :buildBlock:graphite 0
+  517 set :buildBlock:silicon 30
+  518 set :buildBlock:titanium 25
+  519 set :buildBlock:metaglass 0
+  520 set :buildBlock:rotation 0
+  521 set :buildBlock:config null
   522 setaddr :buildBlock*retaddr *label117 (h:*label117)
   523 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   524 label *label117
 
   539 set :buildBlockFromCfg.11:metaglass 0
   540 set :buildBlockFromCfg.11:rotation 0
   541 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp166 *label122
   542 label *label119
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  543 op add :buildBlockFromCfg.11:x .coreX 2
+  544 op add :buildBlockFromCfg.11:y .coreY 0
+  545 set :buildBlock:block @junction
   546 set :buildBlock:x :buildBlockFromCfg.11:x
   547 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  548 set :buildBlock:copper 3
+  549 set :buildBlock:lead 0
+  550 set :buildBlock:graphite 0
+  551 set :buildBlock:silicon 0
+  552 set :buildBlock:titanium 0
+  553 set :buildBlock:metaglass 0
+  554 set :buildBlock:rotation 0
+  555 set :buildBlock:config null
   556 setaddr :buildBlock*retaddr *label123 (h:*label123)
   557 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   558 label *label123
 
   573 set :buildBlockFromCfg.12:metaglass 0
   574 set :buildBlockFromCfg.12:rotation 0
   575 set :buildBlockFromCfg.12:config @metaglass
-    * setaddr *tmp170 *label128
   576 label *label125
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  577 op add :buildBlockFromCfg.12:x .coreX 3
+  578 op add :buildBlockFromCfg.12:y .coreY 0
+  579 set :buildBlock:block @inverted-sorter
   580 set :buildBlock:x :buildBlockFromCfg.12:x
   581 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  582 set :buildBlock:copper 2
+  583 set :buildBlock:lead 2
+  584 set :buildBlock:graphite 0
+  585 set :buildBlock:silicon 0
+  586 set :buildBlock:titanium 0
+  587 set :buildBlock:metaglass 0
+  588 set :buildBlock:rotation 0
+  589 set :buildBlock:config @metaglass
   590 setaddr :buildBlock*retaddr *label129 (h:*label129)
   591 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   592 label *label129
 
   607 set :buildBlockFromCfg.13:metaglass 0
   608 set :buildBlockFromCfg.13:rotation 0
   609 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp174 *label134
   610 label *label131
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  611 op add :buildBlockFromCfg.13:x .coreX 3.5
+  612 op add :buildBlockFromCfg.13:y .coreY 1.5
+  613 set :buildBlock:block @kiln
   614 set :buildBlock:x :buildBlockFromCfg.13:x
   615 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  616 set :buildBlock:copper 60
+  617 set :buildBlock:lead 30
+  618 set :buildBlock:graphite 30
+  619 set :buildBlock:silicon 0
+  620 set :buildBlock:titanium 0
+  621 set :buildBlock:metaglass 0
+  622 set :buildBlock:rotation 0
+  623 set :buildBlock:config null
   624 setaddr :buildBlock*retaddr *label135 (h:*label135)
   625 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)
   626 label *label135
 
   630 multijump *tmp174 0 0 (m:marker13)
   631 multilabel *label134 (m:marker13)
   632 label *label133
-    * set *tmp173 null
   633 label *label130
   634 set .kiln *tmp173
-    * write .kiln .controller ".kiln"
+  635 write *tmp173 *tmp141 ".kiln"
   636 set :buildBlockFromCfg.14:block @water-extractor
   637 set :buildBlockFromCfg.14:offsetX -3.5
   638 set :buildBlockFromCfg.14:offsetY 3.5
 
   644 set :buildBlockFromCfg.14:metaglass 30
   645 set :buildBlockFromCfg.14:rotation 0
   646 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp178 *label140
   647 label *label137
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  648 op add :buildBlockFromCfg.14:x .coreX -3.5
+  649 op add :buildBlockFromCfg.14:y .coreY 3.5
+  650 set :buildBlock:block @water-extractor
   651 set :buildBlock:x :buildBlockFromCfg.14:x
   652 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  653 set :buildBlock:copper 30
+  654 set :buildBlock:lead 30
+  655 set :buildBlock:graphite 30
+  656 set :buildBlock:silicon 0
+  657 set :buildBlock:titanium 0
+  658 set :buildBlock:metaglass 30
+  659 set :buildBlock:rotation 0
+  660 set :buildBlock:config null
   661 setaddr :buildBlock*retaddr *label141 (h:*label141)
   662 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   663 label *label141
 
   678 set :buildBlockFromCfg.15:metaglass 0
   679 set :buildBlockFromCfg.15:rotation 0
   680 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp182 *label146
   681 label *label143
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  682 op add :buildBlockFromCfg.15:x .coreX -3
+  683 op add :buildBlockFromCfg.15:y .coreY 0
+  684 set :buildBlock:block @overflow-gate
   685 set :buildBlock:x :buildBlockFromCfg.15:x
   686 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  687 set :buildBlock:copper 4
+  688 set :buildBlock:lead 2
+  689 set :buildBlock:graphite 0
+  690 set :buildBlock:silicon 0
+  691 set :buildBlock:titanium 0
+  692 set :buildBlock:metaglass 0
+  693 set :buildBlock:rotation 0
+  694 set :buildBlock:config null
   695 setaddr :buildBlock*retaddr *label147 (h:*label147)
   696 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   697 label *label147
 
   712 set :buildBlockFromCfg.16:metaglass 0
   713 set :buildBlockFromCfg.16:rotation 0
   714 set :buildBlockFromCfg.16:config null
-    * setaddr *tmp186 *label152
   715 label *label149
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  716 op add :buildBlockFromCfg.16:x .coreX -3.5
+  717 op add :buildBlockFromCfg.16:y .coreY 1.5
+  718 set :buildBlock:block @steam-generator
   719 set :buildBlock:x :buildBlockFromCfg.16:x
   720 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  721 set :buildBlock:copper 35
+  722 set :buildBlock:lead 40
+  723 set :buildBlock:graphite 25
+  724 set :buildBlock:silicon 30
+  725 set :buildBlock:titanium 0
+  726 set :buildBlock:metaglass 0
+  727 set :buildBlock:rotation 0
+  728 set :buildBlock:config null
   729 setaddr :buildBlock*retaddr *label153 (h:*label153)
   730 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   731 label *label153
 
   735 multijump *tmp186 0 0 (m:marker16)
   736 multilabel *label152 (m:marker16)
   737 label *label151
-    * set *tmp185 null
   738 label *label148
-    * write *tmp185 .controller ".generator2"
+  739 write *tmp185 *tmp141 ".generator2"
   740 set .graphiteSurplus 200
   741 set :buildBlockFromCfg.17:block @payload-router
   742 set :buildBlockFromCfg.17:offsetX -3
 
   749 set :buildBlockFromCfg.17:metaglass 0
   750 set :buildBlockFromCfg.17:rotation 0
   751 set :buildBlockFromCfg.17:config null
-    * setaddr *tmp190 *label158
   752 label *label155
-    * op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
-    * op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.17:block
+  753 op add :buildBlockFromCfg.17:x .coreX -3
+  754 op add :buildBlockFromCfg.17:y .coreY -5
+  755 set :buildBlock:block @payload-router
   756 set :buildBlock:x :buildBlockFromCfg.17:x
   757 set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper :buildBlockFromCfg.17:copper
-    * set :buildBlock:lead :buildBlockFromCfg.17:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.17:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.17:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.17:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.17:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.17:rotation
-    * set :buildBlock:config :buildBlockFromCfg.17:config
+  758 set :buildBlock:copper 10
+  759 set :buildBlock:lead 0
+  760 set :buildBlock:graphite 15
+  761 set :buildBlock:silicon 0
+  762 set :buildBlock:titanium 0
+  763 set :buildBlock:metaglass 0
+  764 set :buildBlock:rotation 0
+  765 set :buildBlock:config null
   766 setaddr :buildBlock*retaddr *label159 (h:*label159)
   767 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   768 label *label159
 
   772 multijump *tmp190 0 0 (m:marker17)
   773 multilabel *label158 (m:marker17)
   774 label *label157
-    * set *tmp189 null
   775 label *label154
-    * write *tmp189 .controller ".payloadRouter"
+  776 write *tmp189 *tmp141 ".payloadRouter"
   777 set :buildBlockFromCfg.18:block @unloader
   778 set :buildBlockFromCfg.18:offsetX 0
   779 set :buildBlockFromCfg.18:offsetY -2
 
   785 set :buildBlockFromCfg.18:metaglass 0
   786 set :buildBlockFromCfg.18:rotation 0
   787 set :buildBlockFromCfg.18:config null
-    * setaddr *tmp194 *label164
   788 label *label161
-    * op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
-    * op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.18:block
+  789 op add :buildBlockFromCfg.18:x .coreX 0
+  790 op add :buildBlockFromCfg.18:y .coreY -2
+  791 set :buildBlock:block @unloader
   792 set :buildBlock:x :buildBlockFromCfg.18:x
   793 set :buildBlock:y :buildBlockFromCfg.18:y
-    * set :buildBlock:copper :buildBlockFromCfg.18:copper
-    * set :buildBlock:lead :buildBlockFromCfg.18:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.18:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.18:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.18:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.18:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.18:rotation
-    * set :buildBlock:config :buildBlockFromCfg.18:config
+  794 set :buildBlock:copper 0
+  795 set :buildBlock:lead 0
+  796 set :buildBlock:graphite 0
+  797 set :buildBlock:silicon 30
+  798 set :buildBlock:titanium 25
+  799 set :buildBlock:metaglass 0
+  800 set :buildBlock:rotation 0
+  801 set :buildBlock:config null
   802 setaddr :buildBlock*retaddr *label165 (h:*label165)
   803 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   804 label *label165
 
   819 set :buildBlockFromCfg.19:metaglass 0
   820 set :buildBlockFromCfg.19:rotation 0
   821 set :buildBlockFromCfg.19:config null
-    * setaddr *tmp198 *label170
   822 label *label167
-    * op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
-    * op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.19:block
+  823 op add :buildBlockFromCfg.19:x .coreX 0
+  824 op add :buildBlockFromCfg.19:y .coreY -3
+  825 set :buildBlock:block @underflow-gate
   826 set :buildBlock:x :buildBlockFromCfg.19:x
   827 set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper :buildBlockFromCfg.19:copper
-    * set :buildBlock:lead :buildBlockFromCfg.19:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.19:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.19:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.19:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.19:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.19:rotation
-    * set :buildBlock:config :buildBlockFromCfg.19:config
+  828 set :buildBlock:copper 4
+  829 set :buildBlock:lead 2
+  830 set :buildBlock:graphite 0
+  831 set :buildBlock:silicon 0
+  832 set :buildBlock:titanium 0
+  833 set :buildBlock:metaglass 0
+  834 set :buildBlock:rotation 0
+  835 set :buildBlock:config null
   836 setaddr :buildBlock*retaddr *label171 (h:*label171)
   837 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   838 label *label171
 
   853 set :buildBlockFromCfg.20:metaglass 0
   854 set :buildBlockFromCfg.20:rotation 0
   855 set :buildBlockFromCfg.20:config null
-    * setaddr *tmp202 *label176
   856 label *label173
-    * op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
-    * op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.20:block
+  857 op add :buildBlockFromCfg.20:x .coreX 0
+  858 op add :buildBlockFromCfg.20:y .coreY -5
+  859 set :buildBlock:block @additive-reconstructor
   860 set :buildBlock:x :buildBlockFromCfg.20:x
   861 set :buildBlock:y :buildBlockFromCfg.20:y
-    * set :buildBlock:copper :buildBlockFromCfg.20:copper
-    * set :buildBlock:lead :buildBlockFromCfg.20:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.20:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.20:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.20:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.20:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.20:rotation
-    * set :buildBlock:config :buildBlockFromCfg.20:config
+  862 set :buildBlock:copper 200
+  863 set :buildBlock:lead 120
+  864 set :buildBlock:graphite 0
+  865 set :buildBlock:silicon 90
+  866 set :buildBlock:titanium 0
+  867 set :buildBlock:metaglass 0
+  868 set :buildBlock:rotation 0
+  869 set :buildBlock:config null
   870 setaddr :buildBlock*retaddr *label177 (h:*label177)
   871 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   872 label *label177
 
   876 multijump *tmp202 0 0 (m:marker20)
   877 multilabel *label176 (m:marker20)
   878 label *label175
-    * set *tmp201 null
   879 label *label172
   880 set :reconstructor *tmp201
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  881 write *tmp201 *tmp141 ".reconstructor"
+  882 write *tmp201 processor1 ".reconstructor"
   883 setaddr :buildUnits*retaddr *label178 (h:*label178)
   884 call *label29 *invalid :buildUnits*retval (m:*label178) (h:*label178)
   885 label *label178
   886 set .siliconSurplus 1000
   887 set .metaglassSurplus 200
-    * write 3 .controller ".polyTarget"
+  888 write 3 *tmp141 ".polyTarget"
   889 label *label179
-    * read *tmp72 .controller ".polys"
+  890 read *tmp72 *tmp141 ".polys"
   891 jump *label181 greaterThanEq *tmp72 3
   892 setaddr :supplyBase*retaddr *label182 (h:*label182)
   893 call *label21 *invalid :supplyBase*retval (m:*label182) (h:*label182)
 
   895 label *label180
   896 jump *label179 always
   897 label *label181
-    * write 8 .controller ".flareTarget"
-    * write 6 .controller ".polyTarget"
+  898 write 8 *tmp141 ".flareTarget"
+  899 write 6 *tmp141 ".polyTarget"
   900 label *label183
-    * read *tmp70 .controller ".flares"
+  901 read *tmp70 *tmp141 ".flares"
   902 jump *label185 greaterThanEq *tmp70 2
   903 setaddr :supplyBase*retaddr *label186 (h:*label186)
   904 call *label21 *invalid :supplyBase*retval (m:*label186) (h:*label186)
 
   907 jump *label183 always
   908 label *label185
   909 ubind @flare
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  910 write @titanium processor1 ".nextBlock"
+  911 write .coreX processor4 ":findDrillLocation:x"
+  912 write .coreY processor4 ":findDrillLocation:y"
+  913 write @unit processor4 ":findDrillLocation:unit"
+  914 write @titanium processor4 ":findDrillLocation:item"
+  915 write @ore-titanium processor4 ":findDrillLocation:ore"
+  916 write false processor4 ":findDrillLocation:large"
+  917 write 1000000000 processor4 ":findDrillLocation:limit"
+  918 write false processor4 ":findDrillLocation*finished"
+  919 write 1 processor4 "@counter"
   920 label *label187
   921 wait 1e-15
-    * read *tmp217 .oreLocator ":findDrillLocation*finished"
+  922 read *tmp217 processor4 ":findDrillLocation*finished"
   923 jump *label187 equal *tmp217 false
   924 ubind .builder
   925 set :findFreeUnit:unit_type @flare
   926 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+  927 ubind @flare
   928 jump *label189 notEqual @unit null
   929 jump *label188 always
   930 label *label189
 
   933 label *label191
   934 sensor *tmp222 @unit @controlled
   935 jump *label194 notEqual *tmp222 0
-    * ucontrol flag :findFreeUnit:initial_flag
+  936 ucontrol flag 0
   937 jump *label188 always
   938 jump *label195 always
   939 label *label194
 
   943 label *label196
   944 label *label197
   945 label *label195
-    * ubind :findFreeUnit:unit_type
+  946 ubind @flare
   947 label *label192
   948 jump *label191 notEqual :findFreeUnit:first_unit @unit
   949 label *label193
   950 label *label188
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  951 write .coreX processor4 ":layoutThoriumDrill:x"
+  952 write .coreY processor4 ":layoutThoriumDrill:y"
+  953 write @unit processor4 ":layoutThoriumDrill:unit"
+  954 write 7 processor4 ":layoutThoriumDrill:limit"
+  955 write false processor4 ":layoutThoriumDrill*finished"
+  956 write 2 processor4 "@counter"
   957 ubind .builder
   958 label *label198
   959 setaddr :supplyBase*retaddr *label201 (h:*label201)
   960 call *label21 *invalid :supplyBase*retval (m:*label201) (h:*label201)
   961 label *label201
   962 label *label199
-    * read *tmp234 .oreLocator ":layoutThoriumDrill*finished"
+  963 read *tmp234 processor4 ":layoutThoriumDrill*finished"
   964 jump *label198 equal *tmp234 false
   965 label *label200
   966 set :meetTarget:block @laser-drill
 
   976 label *label203
   977 label *label205
   978 wait 1e-15
-    * read *tmp236 .oreLocator ":layoutThoriumDrill*finished"
+  979 read *tmp236 processor4 ":layoutThoriumDrill*finished"
   980 jump *label205 equal *tmp236 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  981 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   982 jump *label206 notEqual :buildThoriumDrill:result false
   983 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  984 set .ERROR "Cannot locate spot for thorium drill"
   985 stop
   986 label *label208
   987 label *label206
   988 label *label207
   989 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  990 read :buildBlockAt:x processor4 ".drillX"
+  991 read :buildBlockAt:y processor4 ".drillY"
   992 set :buildBlockAt:rotation null
   993 set :buildBlockAt:config 0
   994 set :buildBlockAt:skipError false
 
   996 call *label26 *invalid :buildBlockAt*retval (m:*label209) (h:*label209)
   997 label *label209
   998 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
-    * read *tmp43 .oreLocator ".water1X"
+  999 read *tmp43 processor4 ".water1X"
  1000 jump *label210 greaterThanEq *tmp43 0
  1001 jump *label202 always
  1002 label *label210
 
  1013 label *label213
  1014 label *label212
  1015 set :buildBlockAt:block @water-extractor
-    * read *tmp43 .oreLocator ".water1X"
+ 1016 read *tmp43 processor4 ".water1X"
  1017 set :buildBlockAt:x *tmp43
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+ 1018 read :buildBlockAt:y processor4 ".water1Y"
  1019 set :buildBlockAt:rotation null
  1020 set :buildBlockAt:config 0
  1021 set :buildBlockAt:skipError false
  1022 setaddr :buildBlockAt*retaddr *label214 (h:*label214)
  1023 call *label26 *invalid :buildBlockAt*retval (m:*label214) (h:*label214)
  1024 label *label214
-    * read *tmp45 .oreLocator ".water2X"
+ 1025 read *tmp45 processor4 ".water2X"
  1026 jump *label215 greaterThanEq *tmp45 0
  1027 jump *label202 always
  1028 label *label215
 
  1039 label *label218
  1040 label *label217
  1041 set :buildBlockAt:block @water-extractor
-    * read *tmp45 .oreLocator ".water2X"
+ 1042 read *tmp45 processor4 ".water2X"
  1043 set :buildBlockAt:x *tmp45
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+ 1044 read :buildBlockAt:y processor4 ".water2Y"
  1045 set :buildBlockAt:rotation null
  1046 set :buildBlockAt:config 0
  1047 set :buildBlockAt:skipError false
 
  1060 label *label221
  1061 label *label220
  1062 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+ 1063 read :buildBlockAt:x processor4 ".generatorX"
+ 1064 read :buildBlockAt:y processor4 ".generatorY"
  1065 set :buildBlockAt:rotation null
  1066 set :buildBlockAt:config 0
  1067 set :buildBlockAt:skipError false
 
  1081 label *label224
  1082 label *label223
  1083 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+ 1084 read :buildBlockAt:x processor4 ".nodeX"
+ 1085 read :buildBlockAt:y processor4 ".nodeY"
  1086 set :buildBlockAt:rotation null
  1087 set :buildBlockAt:config 0
  1088 set :buildBlockAt:skipError false
 
  1101 label *label227
  1102 label *label226
  1103 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+ 1104 read :buildBlockAt:x processor4 ".panelX"
+ 1105 read :buildBlockAt:y processor4 ".panelY"
  1106 set :buildBlockAt:rotation null
  1107 set :buildBlockAt:config 0
  1108 set :buildBlockAt:skipError false
 
  1121 label *label230
  1122 label *label229
  1123 set :buildBlockAt:block @battery
-    * read :buildBlockAt:x .oreLocator ".batteryX"
-    * read :buildBlockAt:y .oreLocator ".batteryY"
+ 1124 read :buildBlockAt:x processor4 ".batteryX"
+ 1125 read :buildBlockAt:y processor4 ".batteryY"
  1126 set :buildBlockAt:rotation null
  1127 set :buildBlockAt:config 0
  1128 set :buildBlockAt:skipError false
  1129 setaddr :buildBlockAt*retaddr *label231 (h:*label231)
  1130 call *label26 *invalid :buildBlockAt*retval (m:*label231) (h:*label231)
  1131 label *label231
-    * write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
-    * write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+ 1132 write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDrill"
+ 1133 write :buildThoriumDrill:thoriumDrill processor3 ":addThoriumDrill:drill"
+ 1134 write :buildThoriumDrill:thoriumGenerator processor3 ":addThoriumDrill:generator"
+ 1135 write false processor3 ":addThoriumDrill*finished"
+ 1136 write 1 processor3 "@counter"
  1137 label *label232
  1138 wait 1e-15
-    * read *tmp253 .flareController ":addThoriumDrill*finished"
+ 1139 read *tmp253 processor3 ":addThoriumDrill*finished"
  1140 jump *label232 equal *tmp253 false
  1141 label *label202
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+ 1142 write 0 processor1 ".totalTargets"
+ 1143 write null processor1 ".nextBlock"
  1144 label *label233
  1145 setaddr :supplyBase*retaddr *label236 (h:*label236)
  1146 call *label21 *invalid :supplyBase*retval (m:*label236) (h:*label236)
  1147 label *label236
  1148 label *label234
-    * read *tmp70 .controller ".flares"
-    * read *tmp71 .controller ".monos"
+ 1149 read *tmp70 *tmp141 ".flares"
+ 1150 read *tmp71 *tmp141 ".monos"
  1151 op add *tmp254 *tmp70 *tmp71
  1152 jump *label233 lessThan *tmp254 16
  1153 label *label235
 
  1159 jump *label237 always
  1160 label *label239
  1161 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+ 1162 set .ERROR "Done"
  1163 stop
  1164 label *label241
  1165 end
  1166 label *label6
  1167 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+ 1168 write "Moving..." .display ".status3"
  1169 label *label244
  1170 label *label245
  1171 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp256
 
  1181 label *label7
  1182 set *tmp259 :moveTo.1:x
  1183 set *tmp260 :moveTo.1:y
-    * set :moveTo:x *tmp259
-    * set :moveTo:y *tmp260
+ 1184 set :moveTo:x :moveTo.1:x
+ 1185 set :moveTo:y :moveTo.1:y
  1186 set :moveTo:radius 6
  1187 setaddr :moveTo*retaddr *label249 (h:*label249)
  1188 call *label6 *invalid :moveTo*retval (m:*label249) (h:*label249)
 
  1192 end
  1193 label *label8
  1194 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1195 write "Moving..." .display ".status3"
  1196 label *label251
  1197 label *label252
  1198 sensor *tmp261 @unit @firstItem
 
  1222 end
  1223 label *label10
  1224 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1225 write "Depositing..." .display ".status3"
  1226 label *label260
  1227 sensor *tmp268 @unit @firstItem
  1228 jump *label261 notEqual *tmp268 :depositItems:item
 
  1252 label *label262
  1253 set :transportStatus:target 0
  1254 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1255 write 0 .display ".transportTarget"
+ 1256 write null .display ".transportItem"
  1257 label *label270
  1258 label *label259
  1259 return :depositItems*retaddr
 
  1262 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 0
  1263 jump *label272 notEqual *tmp278 false
  1264 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1265 set .ERROR "Cannot locate ore"
  1266 stop
  1267 label *label274
  1268 label *label272
 
  1274 op min :mineOre:amount :mineOre:amount 30
  1275 set :transportStatus.1:target :mineOre:amount
  1276 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1277 write :mineOre:amount .display ".transportTarget"
+ 1278 write :mineOre:ore .display ".transportItem"
  1279 label *label276
  1280 set :locateOre:ore :mineOre:ore
  1281 setaddr :locateOre*retaddr *label277 (h:*label277)
 
  1283 label *label277
  1284 set :mineOre:x :locateOre:x
  1285 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1286 set :moveToEmpty:x :locateOre:x
+ 1287 set :moveToEmpty:y :locateOre:y
  1288 setaddr :moveToEmpty*retaddr *label278 (h:*label278)
  1289 call *label8 *invalid :moveToEmpty*retval (m:*label278) (h:*label278)
  1290 label *label278
 
  1301 label *label279
  1302 label *label280
  1303 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1304 write "Mining..." .display ".status3"
  1305 label *label285
  1306 op add :mineOre:stop @second 10
  1307 label *label286
 
  1335 set :status2:text "Mining "
  1336 set :status2:item :mineOre.1:ore
  1337 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1338 write "Mining " .display ".status2"
+ 1339 write :mineOre.1:ore .display ".item2"
+ 1340 write "core" .display ".block2"
  1341 label *label295
  1342 set :mineOre:ore :mineOre.1:ore
  1343 set :mineOre:amount 30
 
  1352 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1353 set :transportStatus.2:item :fetchBlock:item
  1354 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1355 write :fetchBlock:item .display ".transportItem"
  1356 label *label298
  1357 set :status2.1:text "Fetching "
  1358 set :status2.1:item :fetchBlock:item
  1359 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1360 write "Fetching " .display ".status2"
+ 1361 write :fetchBlock:item .display ".item2"
+ 1362 write :fetchBlock:block .display ".block2"
  1363 label *label299
  1364 sensor *tmp300 :fetchBlock:block @x
  1365 sensor *tmp301 :fetchBlock:block @y
 
  1409 sensor *tmp318 .press @coal
  1410 jump *label316 greaterThanEq *tmp318 5
  1411 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1412 write "Goal 1: graphite requirement" .display ".status1"
  1413 label *label318
  1414 set :supplyBlock:block .press
  1415 set :supplyBlock:ore @coal
  1416 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1417 set :status2.2:item @coal
+ 1418 set :status2.2:block .press
+ 1419 write "Supplying " .display ".status2"
+ 1420 write :supplyBlock:ore .display ".item2"
+ 1421 write :supplyBlock:block .display ".block2"
  1422 label *label320
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp322 :supplyBlock:block :supplyBlock:ore
+ 1423 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1424 sensor *tmp322 .press @coal
  1425 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp322
  1426 jump *label321 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1427 set :mineOre:ore @coal
  1428 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1429 set :mineOre:block .press
  1430 setaddr :mineOre*retaddr *label323 (h:*label323)
  1431 call *label12 *invalid :mineOre*retval (m:*label323) (h:*label323)
  1432 label *label323
 
  1443 sensor *tmp329 .smelter @coal
  1444 jump *label326 greaterThanEq *tmp329 5
  1445 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1446 write "Goal 2: coal for silicon requirement" .display ".status1"
  1447 label *label328
  1448 set :supplyBlock.1:block .smelter
  1449 set :supplyBlock.1:ore @coal
  1450 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1451 set :status2.3:item @coal
+ 1452 set :status2.3:block .smelter
+ 1453 write "Supplying " .display ".status2"
+ 1454 write :supplyBlock.1:ore .display ".item2"
+ 1455 write :supplyBlock.1:block .display ".block2"
  1456 label *label330
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp333 :supplyBlock.1:block :supplyBlock.1:ore
+ 1457 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1458 sensor *tmp333 .smelter @coal
  1459 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp333
  1460 jump *label331 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1461 set :mineOre:ore @coal
  1462 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1463 set :mineOre:block .smelter
  1464 setaddr :mineOre*retaddr *label333 (h:*label333)
  1465 call *label12 *invalid :mineOre*retval (m:*label333) (h:*label333)
  1466 label *label333
 
  1473 sensor *tmp337 .smelter @sand
  1474 jump *label334 greaterThanEq *tmp337 5
  1475 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1476 write "Goal 3: sand for silicon requirement" .display ".status1"
  1477 label *label336
  1478 set :supplyBlock.2:block .smelter
  1479 set :supplyBlock.2:ore @sand
  1480 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1481 set :status2.4:item @sand
+ 1482 set :status2.4:block .smelter
+ 1483 write "Supplying " .display ".status2"
+ 1484 write :supplyBlock.2:ore .display ".item2"
+ 1485 write :supplyBlock.2:block .display ".block2"
  1486 label *label338
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp341 :supplyBlock.2:block :supplyBlock.2:ore
+ 1487 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1488 sensor *tmp341 .smelter @sand
  1489 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp341
  1490 jump *label339 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1491 set :mineOre:ore @sand
  1492 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1493 set :mineOre:block .smelter
  1494 setaddr :mineOre*retaddr *label341 (h:*label341)
  1495 call *label12 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1496 label *label341
 
  1508 sensor *tmp348 .generator @coal
  1509 jump *label344 greaterThanEq *tmp348 2
  1510 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1511 write "Goal 4: supplying generator" .display ".status1"
  1512 label *label346
  1513 set :supplyBlock.3:block .generator
  1514 set :supplyBlock.3:ore @coal
  1515 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1516 set :status2.5:item @coal
+ 1517 set :status2.5:block .generator
+ 1518 write "Supplying " .display ".status2"
+ 1519 write :supplyBlock.3:ore .display ".item2"
+ 1520 write :supplyBlock.3:block .display ".block2"
  1521 label *label348
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp352 :supplyBlock.3:block :supplyBlock.3:ore
+ 1522 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1523 sensor *tmp352 .generator @coal
  1524 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp352
  1525 jump *label349 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1526 set :mineOre:ore @coal
  1527 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1528 set :mineOre:block .generator
  1529 setaddr :mineOre*retaddr *label351 (h:*label351)
  1530 call *label12 *invalid :mineOre*retval (m:*label351) (h:*label351)
  1531 label *label351
 
  1550 label *label353
  1551 set :supplyBase0:titaniumTrigger *tmp358
  1552 sensor *tmp362 .titaniumDrill @titanium
-    * jump *label354 greaterThanEq *tmp362 :supplyBase0:titaniumTrigger
+ 1553 jump *label354 greaterThanEq *tmp362 *tmp358
  1554 jump *label356 notEqual :supplyBase0:supplied false
  1555 sensor *tmp367 .battery @totalPower
  1556 op mul *tmp368 .unloader1 .powerTarget
  1557 jump *label358 greaterThanEq *tmp367 *tmp368
  1558 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1559 write "Goal 5: supplying generator" .display ".status1"
  1560 label *label360
  1561 set :mineOre.1:ore @coal
  1562 setaddr :mineOre.1*retaddr *label361 (h:*label361)
 
  1567 sensor *tmp371 .core @silicon
  1568 jump *label362 greaterThanEq *tmp371 .targetSilicon
  1569 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1570 write "Goal 6: silicon requirement" .display ".status1"
  1571 label *label364
  1572 sensor :supplyBase0:coal .core @coal
  1573 sensor :supplyBase0:sand .core @sand
 
  1578 set *tmp377 @sand
  1579 label *label366
  1580 set :supplyBase0:ore *tmp377
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1581 set :mineOre.1:ore *tmp377
  1582 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1583 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
  1584 label *label367
 
  1587 sensor *tmp378 .core @copper
  1588 jump *label368 greaterThanEq *tmp378 .targetCopper
  1589 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1590 write "Goal 7: copper requirement" .display ".status1"
  1591 label *label370
  1592 set :mineOre.1:ore @copper
  1593 setaddr :mineOre.1*retaddr *label371 (h:*label371)
 
  1598 sensor *tmp381 .core @lead
  1599 jump *label372 greaterThanEq *tmp381 .targetLead
  1600 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1601 write "Goal 8: lead requirement" .display ".status1"
  1602 label *label374
  1603 set :mineOre.1:ore @lead
  1604 setaddr :mineOre.1*retaddr *label375 (h:*label375)
 
  1609 sensor *tmp384 .core @metaglass
  1610 jump *label376 greaterThanEq *tmp384 .targetMetaglass
  1611 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1612 write "Goal 9: metaglass requirement" .display ".status1"
  1613 label *label378
  1614 set :mineOre.1:ore @sand
  1615 setaddr :mineOre.1*retaddr *label379 (h:*label379)
 
  1618 jump *label377 always
  1619 label *label376
  1620 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1621 write "Goal 10: supplying base" .display ".status1"
  1622 label *label380
  1623 sensor :supplyBase0:coal.1 .core @coal
  1624 sensor :supplyBase0:sand.1 .core @sand
 
  1629 set *tmp390 @sand
  1630 label *label382
  1631 set :supplyBase0:ore.1 *tmp390
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1632 set :mineOre.1:ore *tmp390
  1633 setaddr :mineOre.1*retaddr *label383 (h:*label383)
  1634 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
  1635 label *label383
 
  1643 jump *label355 always
  1644 label *label354
  1645 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1646 write "Goal 11: Fetching titanium" .display ".status1"
  1647 label *label384
  1648 set :fetchBlock:block .titaniumDrill
  1649 set :fetchBlock:item @titanium
 
  1656 end
  1657 label *label20
  1658 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1659 write "Phase 1: supplying base" .display ".status1"
  1660 label *label387
  1661 set :mineOre.1:ore @coal
  1662 setaddr :mineOre.1*retaddr *label388 (h:*label388)
 
  1721 label *label400
  1722 set :targetMet*retval false
  1723 jump *label398 always
-    * set :targetMet*retval null
  1724 label *label398
  1725 return :targetMet*retaddr
  1726 end
 
  1777 op add *tmp423 :meetTarget:metaglass .metaglassSurplus
  1778 write *tmp423 .controller ".kilnTarget"
  1779 op add *tmp424 :meetTarget:lead .leadSurplus
-    * write *tmp424 .controller ".leadReserve"
+ 1780 write *tmp419 .controller ".leadReserve"
  1781 op sign *tmp425 :meetTarget:silicon
  1782 op mul *tmp426 *tmp425 20
  1783 op add *tmp427 :meetTarget:silicon *tmp426
 
  1804 op mul :second:result @second TIME_COMPRESS
  1805 set *tmp432 :second:result
  1806 label *label427
-    * op floor *tmp433 *tmp432
+ 1807 op floor *tmp433 :second:result
  1808 op mul *tmp434 *tmp433 1000
  1809 op add *tmp435 :log:encodedId *tmp434
-    * write *tmp435 bank1 *tmp430
+ 1810 write *tmp435 bank1 *tmp429
  1811 label *label426
  1812 return :log*retaddr
  1813 end
 
  1826 call *label7 *invalid :moveTo.1*retval (m:*label431) (h:*label431)
  1827 label *label431
  1828 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1829 write "Building..." .display ".status3"
  1830 label *label432
  1831 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1832 jump *label433 equal :buildBlockAt:building null
 
  1841 label *label437
  1842 label *label438
  1843 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1844 set .ERROR "Cannot build at ("
  1845 stop
  1846 label *label439
  1847 label *label433
 
  1864 label *label445
  1865 set :buildBlockAt*retval :buildBlockAt:building
  1866 jump *label430 always
-    * set :buildBlockAt*retval null
  1867 label *label430
  1868 return :buildBlockAt*retaddr
  1869 end
 
  1889 label *label448
  1890 set :buildBlock*retval :buildBlockAt*retval
  1891 jump *label446 always
-    * set :buildBlock*retval null
  1892 label *label446
  1893 return :buildBlock*retaddr
  1894 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-299 instructions):
 
    20 label *label32
    21 set .display processor1
    22 set .flareController processor3
-    * set .oreLocator processor4
-    * set .polyController processor5
    23 write .core processor5 ":startPolyController:aCore"
    24 write @unit processor5 ":startPolyController:aBuilder"
    25 write false processor5 ":startPolyController*finished"
 
    46 label *label36
    47 write :findUnits:count processor1 ".displayPolys"
    48 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    49 label *label38
    50 op add :buildBlockFromCfg:x .coreX -1.5
    51 op add :buildBlockFromCfg:y .coreY 2.5
 
    71 label *label40
    72 label *label37
    73 set .press *tmp102
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    74 label *label44
    75 op add :buildBlockFromCfg.1:x .coreX 0
    76 op add :buildBlockFromCfg.1:y .coreY 4
 
    96 label *label46
    97 label *label43
    98 set .battery *tmp106
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    99 label *label50
   100 op add :buildBlockFromCfg.2:x .coreX -1
   101 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
   102 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
+  103 set :buildBlock:y :buildBlockFromCfg.1:y
   104 set :buildBlock:lead 20
   105 set :buildBlock:graphite 0
   106 set :buildBlock:silicon 0
 
   117 multilabel *label53 (m:marker2)
   118 label *label52
   119 label *label49
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   120 label *label56
   121 op add :buildBlockFromCfg.3:x .coreX 0
   122 op add :buildBlockFromCfg.3:y .coreY 3
   123 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  124 set :buildBlock:x :buildBlockFromCfg.1:x
   125 set :buildBlock:y :buildBlockFromCfg.3:y
   126 set :buildBlock:copper 25
   127 set :buildBlock:lead 15
 
   143 label *label55
   144 set .generator *tmp114
   145 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   146 label *label62
   147 op add :buildBlockFromCfg.4:x .coreX 1.5
   148 op add :buildBlockFromCfg.4:y .coreY 2.5
   149 set :buildBlock:block @silicon-smelter
   150 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  151 set :buildBlock:y :buildBlockFromCfg:y
   152 set :buildBlock:copper 30
   153 set :buildBlock:lead 25
   154 set :buildBlock:graphite 0
 
   197 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   198 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   199 jump *label71 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   200 set .ERROR "Cannot locate spot for titanium drill"
   201 stop
   202 label *label73
 
   216 jump *label67 always
   217 label *label67
   218 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp122 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  219 write :buildBlockAt*retval processor1 ".titaniumDrill"
   220 label *label76
   221 op add :buildBlockFromCfg.5:x .coreX 0
   222 op add :buildBlockFromCfg.5:y .coreY 2
   223 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  224 set :buildBlock:x :buildBlockFromCfg.1:x
   225 set :buildBlock:y :buildBlockFromCfg.5:y
   226 set :buildBlock:copper 0
   227 set :buildBlock:lead 0
 
   242 label *label78
   243 label *label75
   244 set .unloader1 *tmp137
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   245 label *label82
   246 op add :buildBlockFromCfg.6:x .coreX 1
   247 op add :buildBlockFromCfg.6:y .coreY 4
   248 set :buildBlock:block @micro-processor
   249 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  250 set :buildBlock:y :buildBlockFromCfg.1:y
   251 set :buildBlock:copper 90
   252 set :buildBlock:lead 50
   253 set :buildBlock:graphite 0
 
   277 write :monos *tmp141 ".monos"
   278 write :flares *tmp141 ".flares"
   279 write :polys *tmp141 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY 1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   280 label *label88
   281 op add :buildBlockFromCfg.7:x .coreX -2
   282 op add :buildBlockFromCfg.7:y .coreY 1
 
   300 multilabel *label91 (m:marker7)
   301 label *label90
   302 label *label87
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 0
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   303 label *label94
   304 op add :buildBlockFromCfg.8:x .coreX -2
   305 op add :buildBlockFromCfg.8:y .coreY 0
   306 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  307 set :buildBlock:x :buildBlockFromCfg.7:x
   308 set :buildBlock:y :buildBlockFromCfg.8:y
   309 set :buildBlock:copper 0
   310 set :buildBlock:lead 0
 
   325 label *label96
   326 label *label93
   327 write *tmp149 *tmp141 ".unloader2"
-    * set :buildBlockFromCfg.9:block @air-factory
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY -2
-    * set :buildBlockFromCfg.9:copper 60
-    * set :buildBlockFromCfg.9:lead 70
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 3
-    * set :buildBlockFromCfg.9:config @mono
   328 label *label100
   329 op add :buildBlockFromCfg.9:x .coreX -3
   330 op add :buildBlockFromCfg.9:y .coreY -2
 
   349 multilabel *label103 (m:marker9)
   350 label *label102
   351 label *label99
-    * set :factory *tmp153
   352 write *tmp153 *tmp141 ".factory"
   353 write *tmp153 processor1 ".factory"
   354 write 1 *tmp141 ".flareTarget"
 
   378 set .graphiteSurplus 60
   379 set .siliconSurplus 100
   380 set .metaglassSurplus 60
-    * set :buildBlockFromCfg.10:block @unloader
-    * set :buildBlockFromCfg.10:offsetX 2
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 0
-    * set :buildBlockFromCfg.10:lead 0
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 30
-    * set :buildBlockFromCfg.10:titanium 25
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   381 label *label113
   382 op add :buildBlockFromCfg.10:x .coreX 2
   383 op add :buildBlockFromCfg.10:y .coreY 1
   384 set :buildBlock:block @unloader
   385 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  386 set :buildBlock:y :buildBlockFromCfg.7:y
   387 set :buildBlock:copper 0
   388 set :buildBlock:lead 0
   389 set :buildBlock:graphite 0
 
   401 multilabel *label116 (m:marker10)
   402 label *label115
   403 label *label112
-    * set :buildBlockFromCfg.11:block @junction
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 3
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 0
-    * set :buildBlockFromCfg.11:titanium 0
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   404 label *label119
   405 op add :buildBlockFromCfg.11:x .coreX 2
   406 op add :buildBlockFromCfg.11:y .coreY 0
   407 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  408 set :buildBlock:x :buildBlockFromCfg.10:x
+  409 set :buildBlock:y :buildBlockFromCfg.8:y
   410 set :buildBlock:copper 3
   411 set :buildBlock:lead 0
   412 set :buildBlock:graphite 0
 
   424 multilabel *label122 (m:marker11)
   425 label *label121
   426 label *label118
-    * set :buildBlockFromCfg.12:block @inverted-sorter
-    * set :buildBlockFromCfg.12:offsetX 3
-    * set :buildBlockFromCfg.12:offsetY 0
-    * set :buildBlockFromCfg.12:copper 2
-    * set :buildBlockFromCfg.12:lead 2
-    * set :buildBlockFromCfg.12:graphite 0
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config @metaglass
   427 label *label125
   428 op add :buildBlockFromCfg.12:x .coreX 3
   429 op add :buildBlockFromCfg.12:y .coreY 0
   430 set :buildBlock:block @inverted-sorter
   431 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
+  432 set :buildBlock:y :buildBlockFromCfg.8:y
   433 set :buildBlock:copper 2
   434 set :buildBlock:lead 2
   435 set :buildBlock:graphite 0
 
   447 multilabel *label128 (m:marker12)
   448 label *label127
   449 label *label124
-    * set :buildBlockFromCfg.13:block @kiln
-    * set :buildBlockFromCfg.13:offsetX 3.5
-    * set :buildBlockFromCfg.13:offsetY 1.5
-    * set :buildBlockFromCfg.13:copper 60
-    * set :buildBlockFromCfg.13:lead 30
-    * set :buildBlockFromCfg.13:graphite 30
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   450 label *label131
   451 op add :buildBlockFromCfg.13:x .coreX 3.5
   452 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   471 multilabel *label134 (m:marker13)
   472 label *label133
   473 label *label130
-    * set .kiln *tmp173
   474 write *tmp173 *tmp141 ".kiln"
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 3.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   475 label *label137
   476 op add :buildBlockFromCfg.14:x .coreX -3.5
   477 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   495 multilabel *label140 (m:marker14)
   496 label *label139
   497 label *label136
-    * set :buildBlockFromCfg.15:block @overflow-gate
-    * set :buildBlockFromCfg.15:offsetX -3
-    * set :buildBlockFromCfg.15:offsetY 0
-    * set :buildBlockFromCfg.15:copper 4
-    * set :buildBlockFromCfg.15:lead 2
-    * set :buildBlockFromCfg.15:graphite 0
-    * set :buildBlockFromCfg.15:silicon 0
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   498 label *label143
   499 op add :buildBlockFromCfg.15:x .coreX -3
   500 op add :buildBlockFromCfg.15:y .coreY 0
   501 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  502 set :buildBlock:x :buildBlockFromCfg.9:x
+  503 set :buildBlock:y :buildBlockFromCfg.8:y
   504 set :buildBlock:copper 4
   505 set :buildBlock:lead 2
   506 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   507 set :buildBlock:titanium 0
   508 set :buildBlock:metaglass 0
   509 set :buildBlock:rotation 0
 
   517 multilabel *label146 (m:marker15)
   518 label *label145
   519 label *label142
-    * set :buildBlockFromCfg.16:block @steam-generator
-    * set :buildBlockFromCfg.16:offsetX -3.5
-    * set :buildBlockFromCfg.16:offsetY 1.5
-    * set :buildBlockFromCfg.16:copper 35
-    * set :buildBlockFromCfg.16:lead 40
-    * set :buildBlockFromCfg.16:graphite 25
-    * set :buildBlockFromCfg.16:silicon 30
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config null
   520 label *label149
   521 op add :buildBlockFromCfg.16:x .coreX -3.5
   522 op add :buildBlockFromCfg.16:y .coreY 1.5
   523 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  524 set :buildBlock:x :buildBlockFromCfg.14:x
+  525 set :buildBlock:y :buildBlockFromCfg.13:y
   526 set :buildBlock:copper 35
   527 set :buildBlock:lead 40
   528 set :buildBlock:graphite 25
 
   543 label *label148
   544 write *tmp185 *tmp141 ".generator2"
   545 set .graphiteSurplus 200
-    * set :buildBlockFromCfg.17:block @payload-router
-    * set :buildBlockFromCfg.17:offsetX -3
-    * set :buildBlockFromCfg.17:offsetY -5
-    * set :buildBlockFromCfg.17:copper 10
-    * set :buildBlockFromCfg.17:lead 0
-    * set :buildBlockFromCfg.17:graphite 15
-    * set :buildBlockFromCfg.17:silicon 0
-    * set :buildBlockFromCfg.17:titanium 0
-    * set :buildBlockFromCfg.17:metaglass 0
-    * set :buildBlockFromCfg.17:rotation 0
-    * set :buildBlockFromCfg.17:config null
   546 label *label155
   547 op add :buildBlockFromCfg.17:x .coreX -3
   548 op add :buildBlockFromCfg.17:y .coreY -5
   549 set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.17:x
+  550 set :buildBlock:x :buildBlockFromCfg.9:x
   551 set :buildBlock:y :buildBlockFromCfg.17:y
   552 set :buildBlock:copper 10
   553 set :buildBlock:lead 0
 
   568 label *label157
   569 label *label154
   570 write *tmp189 *tmp141 ".payloadRouter"
-    * set :buildBlockFromCfg.18:block @unloader
-    * set :buildBlockFromCfg.18:offsetX 0
-    * set :buildBlockFromCfg.18:offsetY -2
-    * set :buildBlockFromCfg.18:copper 0
-    * set :buildBlockFromCfg.18:lead 0
-    * set :buildBlockFromCfg.18:graphite 0
-    * set :buildBlockFromCfg.18:silicon 30
-    * set :buildBlockFromCfg.18:titanium 25
-    * set :buildBlockFromCfg.18:metaglass 0
-    * set :buildBlockFromCfg.18:rotation 0
-    * set :buildBlockFromCfg.18:config null
   571 label *label161
   572 op add :buildBlockFromCfg.18:x .coreX 0
   573 op add :buildBlockFromCfg.18:y .coreY -2
   574 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.18:y
+  575 set :buildBlock:x :buildBlockFromCfg.1:x
+  576 set :buildBlock:y :buildBlockFromCfg.9:y
   577 set :buildBlock:copper 0
-    * set :buildBlock:lead 0
   578 set :buildBlock:graphite 0
   579 set :buildBlock:silicon 30
   580 set :buildBlock:titanium 25
 
   590 multilabel *label164 (m:marker18)
   591 label *label163
   592 label *label160
-    * set :buildBlockFromCfg.19:block @underflow-gate
-    * set :buildBlockFromCfg.19:offsetX 0
-    * set :buildBlockFromCfg.19:offsetY -3
-    * set :buildBlockFromCfg.19:copper 4
-    * set :buildBlockFromCfg.19:lead 2
-    * set :buildBlockFromCfg.19:graphite 0
-    * set :buildBlockFromCfg.19:silicon 0
-    * set :buildBlockFromCfg.19:titanium 0
-    * set :buildBlockFromCfg.19:metaglass 0
-    * set :buildBlockFromCfg.19:rotation 0
-    * set :buildBlockFromCfg.19:config null
   593 label *label167
   594 op add :buildBlockFromCfg.19:x .coreX 0
   595 op add :buildBlockFromCfg.19:y .coreY -3
   596 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.19:x
+  597 set :buildBlock:x :buildBlockFromCfg.1:x
   598 set :buildBlock:y :buildBlockFromCfg.19:y
   599 set :buildBlock:copper 4
   600 set :buildBlock:lead 2
 
   613 multilabel *label170 (m:marker19)
   614 label *label169
   615 label *label166
-    * set :buildBlockFromCfg.20:block @additive-reconstructor
-    * set :buildBlockFromCfg.20:offsetX 0
-    * set :buildBlockFromCfg.20:offsetY -5
-    * set :buildBlockFromCfg.20:copper 200
-    * set :buildBlockFromCfg.20:lead 120
-    * set :buildBlockFromCfg.20:graphite 0
-    * set :buildBlockFromCfg.20:silicon 90
-    * set :buildBlockFromCfg.20:titanium 0
-    * set :buildBlockFromCfg.20:metaglass 0
-    * set :buildBlockFromCfg.20:rotation 0
-    * set :buildBlockFromCfg.20:config null
   616 label *label173
   617 op add :buildBlockFromCfg.20:x .coreX 0
   618 op add :buildBlockFromCfg.20:y .coreY -5
   619 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.20:x
-    * set :buildBlock:y :buildBlockFromCfg.20:y
+  620 set :buildBlock:x :buildBlockFromCfg.1:x
+  621 set :buildBlock:y :buildBlockFromCfg.17:y
   622 set :buildBlock:copper 200
   623 set :buildBlock:lead 120
-    * set :buildBlock:graphite 0
   624 set :buildBlock:silicon 90
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   625 setaddr :buildBlock*retaddr *label177 (h:*label177)
   626 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   627 label *label177
 
   632 multilabel *label176 (m:marker20)
   633 label *label175
   634 label *label172
-    * set :reconstructor *tmp201
   635 write *tmp201 *tmp141 ".reconstructor"
   636 write *tmp201 processor1 ".reconstructor"
   637 setaddr :buildUnits*retaddr *label178 (h:*label178)
 
   676 read *tmp217 processor4 ":findDrillLocation*finished"
   677 jump *label187 equal *tmp217 false
   678 ubind .builder
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   679 ubind @flare
   680 jump *label189 notEqual @unit null
   681 jump *label188 always
 
   732 jump *label205 equal *tmp236 false
   733 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   734 jump *label206 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   735 set .ERROR "Cannot locate spot for thorium drill"
   736 stop
   737 label *label208
 
   915 label *label241
   916 end
   917 label *label6
-    * set :status3:text "Moving..."
   918 write "Moving..." .display ".status3"
   919 label *label244
   920 label *label245
 
   929 return :moveTo*retaddr
   930 end
   931 label *label7
-    * set *tmp259 :moveTo.1:x
-    * set *tmp260 :moveTo.1:y
   932 set :moveTo:x :moveTo.1:x
   933 set :moveTo:y :moveTo.1:y
   934 set :moveTo:radius 6
 
   939 return :moveTo.1*retaddr
   940 end
   941 label *label8
-    * set :status3.1:text "Moving..."
   942 write "Moving..." .display ".status3"
   943 label *label251
   944 label *label252
 
   968 return :moveToBlock*retaddr
   969 end
   970 label *label10
-    * set :status3.2:text "Depositing..."
   971 write "Depositing..." .display ".status3"
   972 label *label260
   973 sensor *tmp268 @unit @firstItem
 
   996 jump *label267 always
   997 label *label269
   998 label *label262
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   999 write 0 .display ".transportTarget"
  1000 write null .display ".transportItem"
  1001 label *label270
 
  1005 label *label11
  1006 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 0
  1007 jump *label272 notEqual *tmp278 false
-    * set :error.3:error "Cannot locate ore"
  1008 set .ERROR "Cannot locate ore"
  1009 stop
  1010 label *label274
 
  1015 end
  1016 label *label12
  1017 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
  1018 write :mineOre:amount .display ".transportTarget"
  1019 write :mineOre:ore .display ".transportItem"
  1020 label *label276
 
  1041 label *label281
  1042 label *label279
  1043 label *label280
-    * set :status3.3:text "Mining..."
  1044 write "Mining..." .display ".status3"
  1045 label *label285
  1046 op add :mineOre:stop @second 10
 
  1072 return :mineOre*retaddr
  1073 end
  1074 label *label13
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
  1075 write "Mining " .display ".status2"
  1076 write :mineOre.1:ore .display ".item2"
  1077 write "core" .display ".block2"
 
  1087 end
  1088 label *label14
  1089 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
  1090 write :transportStatus.2:target .display ".transportTarget"
  1091 write :fetchBlock:item .display ".transportItem"
  1092 label *label298
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
  1093 write "Fetching " .display ".status2"
  1094 write :fetchBlock:item .display ".item2"
  1095 write :fetchBlock:block .display ".block2"
 
  1141 jump *label314 greaterThanEq *tmp315 .targetGraphite
  1142 sensor *tmp318 .press @coal
  1143 jump *label316 greaterThanEq *tmp318 5
-    * set :status1:text "Goal 1: graphite requirement"
  1144 write "Goal 1: graphite requirement" .display ".status1"
  1145 label *label318
  1146 set :supplyBlock:block .press
  1147 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1148 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1149 write @coal .display ".item2"
+ 1150 write .press .display ".block2"
  1151 label *label320
  1152 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1153 sensor *tmp322 .press @coal
 
  1171 jump *label324 greaterThanEq *tmp326 .targetSilicon
  1172 sensor *tmp329 .smelter @coal
  1173 jump *label326 greaterThanEq *tmp329 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1174 write "Goal 2: coal for silicon requirement" .display ".status1"
  1175 label *label328
  1176 set :supplyBlock.1:block .smelter
  1177 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1178 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1179 write @coal .display ".item2"
+ 1180 write .smelter .display ".block2"
  1181 label *label330
  1182 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1183 sensor *tmp333 .smelter @coal
 
  1197 label *label326
  1198 sensor *tmp337 .smelter @sand
  1199 jump *label334 greaterThanEq *tmp337 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1200 write "Goal 3: sand for silicon requirement" .display ".status1"
  1201 label *label336
  1202 set :supplyBlock.2:block .smelter
  1203 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1204 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1205 write @sand .display ".item2"
+ 1206 write .smelter .display ".block2"
  1207 label *label338
  1208 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1209 sensor *tmp341 .smelter @sand
 
  1228 jump *label342 greaterThanEq *tmp345 .powerTarget
  1229 sensor *tmp348 .generator @coal
  1230 jump *label344 greaterThanEq *tmp348 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1231 write "Goal 4: supplying generator" .display ".status1"
  1232 label *label346
  1233 set :supplyBlock.3:block .generator
  1234 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1235 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1236 write @coal .display ".item2"
+ 1237 write .generator .display ".block2"
  1238 label *label348
  1239 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1240 sensor *tmp352 .generator @coal
 
  1265 label *label352
  1266 set *tmp358 100
  1267 label *label353
-    * set :supplyBase0:titaniumTrigger *tmp358
  1268 sensor *tmp362 .titaniumDrill @titanium
  1269 jump *label354 greaterThanEq *tmp362 *tmp358
  1270 jump *label356 notEqual :supplyBase0:supplied false
  1271 sensor *tmp367 .battery @totalPower
  1272 op mul *tmp368 .unloader1 .powerTarget
  1273 jump *label358 greaterThanEq *tmp367 *tmp368
-    * set :status1.4:text "Goal 5: supplying generator"
  1274 write "Goal 5: supplying generator" .display ".status1"
  1275 label *label360
  1276 set :mineOre.1:ore @coal
 
  1281 label *label358
  1282 sensor *tmp371 .core @silicon
  1283 jump *label362 greaterThanEq *tmp371 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1284 write "Goal 6: silicon requirement" .display ".status1"
  1285 label *label364
  1286 sensor :supplyBase0:coal .core @coal
 
  1291 label *label365
  1292 set *tmp377 @sand
  1293 label *label366
-    * set :supplyBase0:ore *tmp377
  1294 set :mineOre.1:ore *tmp377
  1295 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1296 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
 
  1299 label *label362
  1300 sensor *tmp378 .core @copper
  1301 jump *label368 greaterThanEq *tmp378 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1302 write "Goal 7: copper requirement" .display ".status1"
  1303 label *label370
  1304 set :mineOre.1:ore @copper
 
  1309 label *label368
  1310 sensor *tmp381 .core @lead
  1311 jump *label372 greaterThanEq *tmp381 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1312 write "Goal 8: lead requirement" .display ".status1"
  1313 label *label374
  1314 set :mineOre.1:ore @lead
 
  1319 label *label372
  1320 sensor *tmp384 .core @metaglass
  1321 jump *label376 greaterThanEq *tmp384 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1322 write "Goal 9: metaglass requirement" .display ".status1"
  1323 label *label378
  1324 set :mineOre.1:ore @sand
 
  1327 label *label379
  1328 jump *label377 always
  1329 label *label376
-    * set :status1.9:text "Goal 10: supplying base"
  1330 write "Goal 10: supplying base" .display ".status1"
  1331 label *label380
  1332 sensor :supplyBase0:coal.1 .core @coal
 
  1337 label *label381
  1338 set *tmp390 @sand
  1339 label *label382
-    * set :supplyBase0:ore.1 *tmp390
  1340 set :mineOre.1:ore *tmp390
  1341 setaddr :mineOre.1*retaddr *label383 (h:*label383)
  1342 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
 
  1350 label *label357
  1351 jump *label355 always
  1352 label *label354
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1353 write "Goal 11: Fetching titanium" .display ".status1"
  1354 label *label384
  1355 set :fetchBlock:block .titaniumDrill
 
  1362 return :supplyBase0*retaddr
  1363 end
  1364 label *label20
-    * set :status1.11:text "Phase 1: supplying base"
  1365 write "Phase 1: supplying base" .display ".status1"
  1366 label *label387
  1367 set :mineOre.1:ore @coal
 
  1482 write *tmp422 .controller ".smelterTarget"
  1483 op add *tmp423 :meetTarget:metaglass .metaglassSurplus
  1484 write *tmp423 .controller ".kilnTarget"
-    * op add *tmp424 :meetTarget:lead .leadSurplus
  1485 write *tmp419 .controller ".leadReserve"
  1486 op sign *tmp425 :meetTarget:silicon
  1487 op mul *tmp426 *tmp425 20
 
  1505 read *tmp88 bank1 511
  1506 op sub *tmp429 *tmp88 1
  1507 write *tmp429 bank1 511
-    * set *tmp430 *tmp429
  1508 op mul :second:result @second TIME_COMPRESS
-    * set *tmp432 :second:result
  1509 label *label427
  1510 op floor *tmp433 :second:result
  1511 op mul *tmp434 *tmp433 1000
 
  1528 setaddr :moveTo.1*retaddr *label431 (h:*label431)
  1529 call *label7 *invalid :moveTo.1*retval (m:*label431) (h:*label431)
  1530 label *label431
-    * set :status3.4:text "Building..."
  1531 write "Building..." .display ".status3"
  1532 label *label432
  1533 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1542 jump *label430 always
  1543 label *label437
  1544 label *label438
-    * set :error.4:error "Cannot build at ("
  1545 set .ERROR "Cannot build at ("
  1546 stop
  1547 label *label439

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-36 instructions):
 
    98 set .battery *tmp106
    99 label *label50
   100 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
   101 set :buildBlock:x :buildBlockFromCfg.2:x
   102 set :buildBlock:y :buildBlockFromCfg.1:y
   103 set :buildBlock:lead 20
 
   117 label *label52
   118 label *label49
   119 label *label56
-    * op add :buildBlockFromCfg.3:x .coreX 0
   120 op add :buildBlockFromCfg.3:y .coreY 3
   121 set :buildBlock:block @combustion-generator
   122 set :buildBlock:x :buildBlockFromCfg.1:x
 
   143 set .powerTarget 400
   144 label *label62
   145 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   146 set :buildBlock:block @silicon-smelter
   147 set :buildBlock:x :buildBlockFromCfg.4:x
   148 set :buildBlock:y :buildBlockFromCfg:y
 
   209 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   210 call *label26 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   211 label *label74
-    * set *tmp122 :buildBlockAt*retval
   212 jump *label67 always
   213 label *label67
   214 set .titaniumDrill :buildBlockAt*retval
   215 write :buildBlockAt*retval processor1 ".titaniumDrill"
   216 label *label76
-    * op add :buildBlockFromCfg.5:x .coreX 0
   217 op add :buildBlockFromCfg.5:y .coreY 2
   218 set :buildBlock:block @unloader
   219 set :buildBlock:x :buildBlockFromCfg.1:x
 
   239 set .unloader1 *tmp137
   240 label *label82
   241 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   242 set :buildBlock:block @micro-processor
   243 set :buildBlock:x :buildBlockFromCfg.6:x
   244 set :buildBlock:y :buildBlockFromCfg.1:y
 
   295 label *label90
   296 label *label87
   297 label *label94
-    * op add :buildBlockFromCfg.8:x .coreX -2
   298 op add :buildBlockFromCfg.8:y .coreY 0
   299 set :buildBlock:block @unloader
   300 set :buildBlock:x :buildBlockFromCfg.7:x
 
   373 set .metaglassSurplus 60
   374 label *label113
   375 op add :buildBlockFromCfg.10:x .coreX 2
-    * op add :buildBlockFromCfg.10:y .coreY 1
   376 set :buildBlock:block @unloader
   377 set :buildBlock:x :buildBlockFromCfg.10:x
   378 set :buildBlock:y :buildBlockFromCfg.7:y
 
   394 label *label115
   395 label *label112
   396 label *label119
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
   397 set :buildBlock:block @junction
   398 set :buildBlock:x :buildBlockFromCfg.10:x
   399 set :buildBlock:y :buildBlockFromCfg.8:y
 
   416 label *label118
   417 label *label125
   418 op add :buildBlockFromCfg.12:x .coreX 3
-    * op add :buildBlockFromCfg.12:y .coreY 0
   419 set :buildBlock:block @inverted-sorter
   420 set :buildBlock:x :buildBlockFromCfg.12:x
   421 set :buildBlock:y :buildBlockFromCfg.8:y
 
   468 set :buildBlock:x :buildBlockFromCfg.14:x
   469 set :buildBlock:y :buildBlockFromCfg.14:y
   470 set :buildBlock:copper 30
-    * set :buildBlock:lead 30
   471 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   472 set :buildBlock:titanium 0
   473 set :buildBlock:metaglass 30
   474 set :buildBlock:rotation 0
 
   483 label *label139
   484 label *label136
   485 label *label143
-    * op add :buildBlockFromCfg.15:x .coreX -3
-    * op add :buildBlockFromCfg.15:y .coreY 0
   486 set :buildBlock:block @overflow-gate
   487 set :buildBlock:x :buildBlockFromCfg.9:x
   488 set :buildBlock:y :buildBlockFromCfg.8:y
 
   503 label *label145
   504 label *label142
   505 label *label149
-    * op add :buildBlockFromCfg.16:x .coreX -3.5
-    * op add :buildBlockFromCfg.16:y .coreY 1.5
   506 set :buildBlock:block @steam-generator
   507 set :buildBlock:x :buildBlockFromCfg.14:x
   508 set :buildBlock:y :buildBlockFromCfg.13:y
 
   527 write *tmp185 *tmp141 ".generator2"
   528 set .graphiteSurplus 200
   529 label *label155
-    * op add :buildBlockFromCfg.17:x .coreX -3
   530 op add :buildBlockFromCfg.17:y .coreY -5
   531 set :buildBlock:block @payload-router
   532 set :buildBlock:x :buildBlockFromCfg.9:x
 
   535 set :buildBlock:lead 0
   536 set :buildBlock:graphite 15
   537 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   538 set :buildBlock:metaglass 0
   539 set :buildBlock:rotation 0
   540 set :buildBlock:config null
 
   550 label *label154
   551 write *tmp189 *tmp141 ".payloadRouter"
   552 label *label161
-    * op add :buildBlockFromCfg.18:x .coreX 0
-    * op add :buildBlockFromCfg.18:y .coreY -2
   553 set :buildBlock:block @unloader
   554 set :buildBlock:x :buildBlockFromCfg.1:x
   555 set :buildBlock:y :buildBlockFromCfg.9:y
 
   570 label *label163
   571 label *label160
   572 label *label167
-    * op add :buildBlockFromCfg.19:x .coreX 0
   573 op add :buildBlockFromCfg.19:y .coreY -3
   574 set :buildBlock:block @underflow-gate
   575 set :buildBlock:x :buildBlockFromCfg.1:x
   576 set :buildBlock:y :buildBlockFromCfg.19:y
   577 set :buildBlock:copper 4
   578 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   579 set :buildBlock:silicon 0
   580 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   581 setaddr :buildBlock*retaddr *label171 (h:*label171)
   582 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   583 label *label171
 
   588 label *label169
   589 label *label166
   590 label *label173
-    * op add :buildBlockFromCfg.20:x .coreX 0
-    * op add :buildBlockFromCfg.20:y .coreY -5
   591 set :buildBlock:block @additive-reconstructor
   592 set :buildBlock:x :buildBlockFromCfg.1:x
   593 set :buildBlock:y :buildBlockFromCfg.17:y
 
  1115 jump *label316 greaterThanEq *tmp318 5
  1116 write "Goal 1: graphite requirement" .display ".status1"
  1117 label *label318
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1118 write "Supplying " .display ".status2"
  1119 write @coal .display ".item2"
  1120 write .press .display ".block2"
 
  1143 jump *label326 greaterThanEq *tmp329 5
  1144 write "Goal 2: coal for silicon requirement" .display ".status1"
  1145 label *label328
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1146 write "Supplying " .display ".status2"
  1147 write @coal .display ".item2"
  1148 write .smelter .display ".block2"
 
  1167 jump *label334 greaterThanEq *tmp337 5
  1168 write "Goal 3: sand for silicon requirement" .display ".status1"
  1169 label *label336
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1170 write "Supplying " .display ".status2"
  1171 write @sand .display ".item2"
  1172 write .smelter .display ".block2"
 
  1196 jump *label344 greaterThanEq *tmp348 2
  1197 write "Goal 4: supplying generator" .display ".status1"
  1198 label *label346
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1199 write "Supplying " .display ".status2"
  1200 write @coal .display ".item2"
  1201 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
   398 set :buildBlock:x :buildBlockFromCfg.10:x
   399 set :buildBlock:y :buildBlockFromCfg.8:y
   400 set :buildBlock:copper 3
-    * set :buildBlock:lead 0
   401 set :buildBlock:graphite 0
   402 set :buildBlock:silicon 0
   403 set :buildBlock:titanium 0
 
   444 set :buildBlock:copper 60
   445 set :buildBlock:lead 30
   446 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   447 set :buildBlock:titanium 0
   448 set :buildBlock:metaglass 0
   449 set :buildBlock:rotation 0
 
   466 set :buildBlock:x :buildBlockFromCfg.14:x
   467 set :buildBlock:y :buildBlockFromCfg.14:y
   468 set :buildBlock:copper 30
-    * set :buildBlock:graphite 30
   469 set :buildBlock:titanium 0
   470 set :buildBlock:metaglass 30
   471 set :buildBlock:rotation 0
 
   507 set :buildBlock:lead 40
   508 set :buildBlock:graphite 25
   509 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   510 set :buildBlock:metaglass 0
   511 set :buildBlock:rotation 0
   512 set :buildBlock:config null
 
   553 set :buildBlock:graphite 0
   554 set :buildBlock:silicon 30
   555 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   556 setaddr :buildBlock*retaddr *label165 (h:*label165)
   557 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   558 label *label165

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-7 instructions):
 
   100 op add :buildBlockFromCfg.2:x .coreX -1
   101 set :buildBlock:x :buildBlockFromCfg.2:x
   102 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:lead 20
   103 set :buildBlock:graphite 0
   104 set :buildBlock:silicon 0
   105 set :buildBlock:titanium 0
 
   419 set :buildBlock:y :buildBlockFromCfg.8:y
   420 set :buildBlock:copper 2
   421 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   422 set :buildBlock:titanium 0
   423 set :buildBlock:metaglass 0
   424 set :buildBlock:rotation 0
 
   483 set :buildBlock:copper 4
   484 set :buildBlock:lead 2
   485 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   486 set :buildBlock:metaglass 0
   487 set :buildBlock:rotation 0
   488 set :buildBlock:config null
 
   527 set :buildBlock:lead 0
   528 set :buildBlock:graphite 15
   529 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   530 setaddr :buildBlock*retaddr *label159 (h:*label159)
   531 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   532 label *label159

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   148 set :buildBlock:copper 30
   149 set :buildBlock:lead 25
   150 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   151 set :buildBlock:titanium 0
   152 set :buildBlock:metaglass 0
   153 set :buildBlock:rotation 0
 
   396 set :buildBlock:x :buildBlockFromCfg.10:x
   397 set :buildBlock:y :buildBlockFromCfg.8:y
   398 set :buildBlock:copper 3
-    * set :buildBlock:graphite 0
   399 set :buildBlock:silicon 0
   400 set :buildBlock:titanium 0
   401 set :buildBlock:metaglass 0
 
   461 set :buildBlock:x :buildBlockFromCfg.14:x
   462 set :buildBlock:y :buildBlockFromCfg.14:y
   463 set :buildBlock:copper 30
-    * set :buildBlock:titanium 0
   464 set :buildBlock:metaglass 30
   465 set :buildBlock:rotation 0
   466 set :buildBlock:config null
 
   500 set :buildBlock:lead 40
   501 set :buildBlock:graphite 25
   502 set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   503 setaddr :buildBlock*retaddr *label153 (h:*label153)
   504 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   505 label *label153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
   123 set :buildBlock:copper 25
   124 set :buildBlock:lead 15
   125 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   126 set :buildBlock:titanium 0
   127 set :buildBlock:metaglass 0
   128 set :buildBlock:rotation 0
 
   375 set :buildBlock:y :buildBlockFromCfg.7:y
   376 set :buildBlock:copper 0
   377 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   378 set :buildBlock:silicon 30
   379 set :buildBlock:titanium 25
   380 set :buildBlock:metaglass 0
 
   437 set :buildBlock:copper 60
   438 set :buildBlock:lead 30
   439 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   440 set :buildBlock:rotation 0
   441 set :buildBlock:config null
   442 setaddr :buildBlock*retaddr *label135 (h:*label135)
 
   477 set :buildBlock:lead 2
   478 set :buildBlock:graphite 0
   479 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   480 setaddr :buildBlock*retaddr *label147 (h:*label147)
   481 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   482 label *label147

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
   101 set :buildBlock:x :buildBlockFromCfg.2:x
   102 set :buildBlock:y :buildBlockFromCfg.1:y
   103 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   104 set :buildBlock:titanium 0
   105 set :buildBlock:metaglass 0
   106 set :buildBlock:rotation 0
 
   322 set :buildBlock:y :buildBlockFromCfg.9:y
   323 set :buildBlock:copper 60
   324 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   325 set :buildBlock:silicon 0
   326 set :buildBlock:titanium 0
   327 set :buildBlock:metaglass 0
 
   413 set :buildBlock:y :buildBlockFromCfg.8:y
   414 set :buildBlock:copper 2
   415 set :buildBlock:lead 2
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   416 set :buildBlock:rotation 0
   417 set :buildBlock:config @metaglass
   418 setaddr :buildBlock*retaddr *label129 (h:*label129)
 
   454 set :buildBlock:y :buildBlockFromCfg.14:y
   455 set :buildBlock:copper 30
   456 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   457 setaddr :buildBlock*retaddr *label141 (h:*label141)
   458 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   459 label *label141

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-6 instructions):
 
    80 set :buildBlock:copper 5
    81 set :buildBlock:lead 20
    82 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    83 set :buildBlock:titanium 0
    84 set :buildBlock:metaglass 0
    85 set :buildBlock:rotation 0
 
   276 set :buildBlock:lead 6
   277 set :buildBlock:graphite 0
   278 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   279 set :buildBlock:metaglass 0
   280 set :buildBlock:rotation 0
   281 set :buildBlock:config null
 
   295 set :buildBlock:y :buildBlockFromCfg.8:y
   296 set :buildBlock:copper 0
   297 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   298 set :buildBlock:silicon 30
   299 set :buildBlock:titanium 25
   300 set :buildBlock:metaglass 0
 
   391 set :buildBlock:copper 3
   392 set :buildBlock:silicon 0
   393 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   394 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   395 setaddr :buildBlock*retaddr *label123 (h:*label123)
   396 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   397 label *label123
 
   428 set :buildBlock:copper 60
   429 set :buildBlock:lead 30
   430 set :buildBlock:graphite 30
-    * set :buildBlock:rotation 0
   431 set :buildBlock:config null
   432 setaddr :buildBlock*retaddr *label135 (h:*label135)
   433 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
   145 set :buildBlock:copper 30
   146 set :buildBlock:lead 25
   147 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   148 set :buildBlock:metaglass 0
   149 set :buildBlock:rotation 0
   150 set :buildBlock:config null
 
   273 set :buildBlock:y :buildBlockFromCfg.7:y
   274 set :buildBlock:copper 2
   275 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   276 set :buildBlock:silicon 0
   277 set :buildBlock:metaglass 0
   278 set :buildBlock:rotation 0
 
   297 set :buildBlock:titanium 25
   298 set :buildBlock:metaglass 0
   299 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   300 setaddr :buildBlock*retaddr *label98 (h:*label98)
   301 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   302 label *label98
 
   369 set :buildBlock:lead 0
   370 set :buildBlock:silicon 30
   371 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   372 set :buildBlock:rotation 0
   373 set :buildBlock:config null
   374 setaddr :buildBlock*retaddr *label117 (h:*label117)
 
   404 set :buildBlock:y :buildBlockFromCfg.8:y
   405 set :buildBlock:copper 2
   406 set :buildBlock:lead 2
-    * set :buildBlock:rotation 0
   407 set :buildBlock:config @metaglass
   408 setaddr :buildBlock*retaddr *label129 (h:*label129)
   409 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
   121 set :buildBlock:copper 25
   122 set :buildBlock:lead 15
   123 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   124 set :buildBlock:metaglass 0
   125 set :buildBlock:rotation 0
   126 set :buildBlock:config null
 
   218 set :buildBlock:titanium 25
   219 set :buildBlock:metaglass 0
   220 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   221 setaddr :buildBlock*retaddr *label80 (h:*label80)
   222 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   223 label *label80
 
   236 set :buildBlock:y :buildBlockFromCfg.1:y
   237 set :buildBlock:copper 90
   238 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   239 set :buildBlock:silicon 50
   240 set :buildBlock:titanium 0
   241 set :buildBlock:metaglass 0
 
   315 set :buildBlock:lead 70
   316 set :buildBlock:silicon 0
   317 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   318 set :buildBlock:rotation 3
   319 set :buildBlock:config @mono
   320 setaddr :buildBlock*retaddr *label104 (h:*label104)
 
   383 set :buildBlock:copper 3
   384 set :buildBlock:silicon 0
   385 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   386 setaddr :buildBlock*retaddr *label123 (h:*label123)
   387 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   388 label *label123

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-5 instructions):
 
   100 set :buildBlock:x :buildBlockFromCfg.2:x
   101 set :buildBlock:y :buildBlockFromCfg.1:y
   102 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   103 set :buildBlock:metaglass 0
   104 set :buildBlock:rotation 0
   105 set :buildBlock:config null
 
   145 set :buildBlock:graphite 0
   146 set :buildBlock:metaglass 0
   147 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   148 setaddr :buildBlock*retaddr *label66 (h:*label66)
   149 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   150 label *label66
 
   211 set :buildBlock:y :buildBlockFromCfg.5:y
   212 set :buildBlock:copper 0
   213 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   214 set :buildBlock:silicon 30
   215 set :buildBlock:titanium 25
   216 set :buildBlock:metaglass 0
 
   289 set :buildBlock:lead 0
   290 set :buildBlock:silicon 30
   291 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   292 setaddr :buildBlock*retaddr *label98 (h:*label98)
   293 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   294 label *label98

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-5 instructions):
 
    80 set :buildBlock:copper 5
    81 set :buildBlock:lead 20
    82 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    83 set :buildBlock:metaglass 0
    84 set :buildBlock:rotation 0
    85 set :buildBlock:config null
 
   121 set :buildBlock:graphite 0
   122 set :buildBlock:metaglass 0
   123 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   124 setaddr :buildBlock*retaddr *label60 (h:*label60)
   125 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
   126 label *label60
 
   140 set :buildBlock:y :buildBlockFromCfg:y
   141 set :buildBlock:copper 30
   142 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   143 set :buildBlock:metaglass 0
   144 set :buildBlock:rotation 0
   145 setaddr :buildBlock*retaddr *label66 (h:*label66)
 
   265 set :buildBlock:copper 2
   266 set :buildBlock:lead 6
   267 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   268 set :buildBlock:config null
   269 setaddr :buildBlock*retaddr *label92 (h:*label92)
   270 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-4 instructions):
 
   101 set :buildBlock:graphite 0
   102 set :buildBlock:metaglass 0
   103 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   104 setaddr :buildBlock*retaddr *label54 (h:*label54)
   105 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
   106 label *label54
 
   117 set :buildBlock:y :buildBlockFromCfg.3:y
   118 set :buildBlock:copper 25
   119 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   120 set :buildBlock:metaglass 0
   121 set :buildBlock:rotation 0
   122 setaddr :buildBlock*retaddr *label60 (h:*label60)
 
   230 set :buildBlock:lead 50
   231 set :buildBlock:silicon 50
   232 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   233 set :buildBlock:config processor2
   234 setaddr :buildBlock*retaddr *label86 (h:*label86)
   235 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-4 instructions):
 
    82 set :buildBlock:graphite 0
    83 set :buildBlock:metaglass 0
    84 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    85 setaddr :buildBlock*retaddr *label48 (h:*label48)
    86 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    87 label *label48
 
    97 op add :buildBlockFromCfg.2:x .coreX -1
    98 set :buildBlock:x :buildBlockFromCfg.2:x
    99 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
   100 set :buildBlock:metaglass 0
   101 set :buildBlock:rotation 0
   102 setaddr :buildBlock*retaddr *label54 (h:*label54)
 
   206 set :buildBlock:lead 0
   207 set :buildBlock:silicon 30
   208 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   209 setaddr :buildBlock*retaddr *label80 (h:*label80)
   210 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   211 label *label80

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-3 instructions):
 
    79 set :buildBlock:y :buildBlockFromCfg.1:y
    80 set :buildBlock:copper 5
    81 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    82 set :buildBlock:metaglass 0
    83 set :buildBlock:rotation 0
    84 setaddr :buildBlock*retaddr *label48 (h:*label48)
 
   135 set :buildBlock:y :buildBlockFromCfg:y
   136 set :buildBlock:copper 30
   137 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   138 setaddr :buildBlock*retaddr *label66 (h:*label66)
   139 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   140 label *label66

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-2 instructions):
 
   114 set :buildBlock:y :buildBlockFromCfg.3:y
   115 set :buildBlock:copper 25
   116 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   117 setaddr :buildBlock*retaddr *label60 (h:*label60)
   118 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
   119 label *label60

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-2 instructions):
 
    96 op add :buildBlockFromCfg.2:x .coreX -1
    97 set :buildBlock:x :buildBlockFromCfg.2:x
    98 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    99 setaddr :buildBlock*retaddr *label54 (h:*label54)
   100 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
   101 label *label54

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-2 instructions):
 
    79 set :buildBlock:y :buildBlockFromCfg.1:y
    80 set :buildBlock:copper 5
    81 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    82 setaddr :buildBlock*retaddr *label48 (h:*label48)
    83 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    84 label *label48

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    46 label *label36
    47 write :findUnits:count processor1 ".displayPolys"
    48 set :polys :findUnits*retval
+   49 op add :buildBlockFromCfg:x .coreX -1.5
+   50 op add :buildBlockFromCfg:y .coreY 2.5
+   51 set :buildBlock:block @graphite-press
+   52 set :buildBlock:x :buildBlockFromCfg:x
+   53 set :buildBlock:y :buildBlockFromCfg:y
+   54 set :buildBlock:copper 75
+   55 set :buildBlock:lead 30
+   56 set :buildBlock:graphite 0
+   57 set :buildBlock:silicon 0
+   58 set :buildBlock:titanium 0
+   59 set :buildBlock:metaglass 0
+   60 set :buildBlock:rotation 0
+   61 set :buildBlock:config null
+   62 setaddr :buildBlock*retaddr *label42 (h:*label42)
    63 label *label38
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label42 (h:*label42)
    64 call *label27 *invalid :buildBlock*retval (m:*label42) (h:*label42)
    65 label *label42
    66 set *tmp102 :buildBlock*retval
 
    71 label *label40
    72 label *label37
    73 set .press *tmp102
+   74 op add :buildBlockFromCfg.1:x .coreX 0
+   75 op add :buildBlockFromCfg.1:y .coreY 4
+   76 set :buildBlock:block @battery
+   77 set :buildBlock:x :buildBlockFromCfg.1:x
+   78 set :buildBlock:y :buildBlockFromCfg.1:y
+   79 set :buildBlock:copper 5
+   80 set :buildBlock:lead 20
+   81 setaddr :buildBlock*retaddr *label48 (h:*label48)
    82 label *label44
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label48 (h:*label48)
    83 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    84 label *label48
    85 set *tmp106 :buildBlock*retval
 
    90 label *label46
    91 label *label43
    92 set .battery *tmp106
+   93 op add :buildBlockFromCfg.2:x .coreX -1
+   94 set :buildBlock:x :buildBlockFromCfg.2:x
+   95 set :buildBlock:y :buildBlockFromCfg.1:y
+   96 setaddr :buildBlock*retaddr *label54 (h:*label54)
    97 label *label50
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label54 (h:*label54)
    98 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
    99 label *label54
   100 jump *label49 always
 
   103 multilabel *label53 (m:marker2)
   104 label *label52
   105 label *label49
+  106 op add :buildBlockFromCfg.3:y .coreY 3
+  107 set :buildBlock:block @combustion-generator
+  108 set :buildBlock:x :buildBlockFromCfg.1:x
+  109 set :buildBlock:y :buildBlockFromCfg.3:y
+  110 set :buildBlock:copper 25
+  111 set :buildBlock:lead 15
+  112 setaddr :buildBlock*retaddr *label60 (h:*label60)
   113 label *label56
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label60 (h:*label60)
   114 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
   115 label *label60
   116 set *tmp114 :buildBlock*retval
 
   122 label *label55
   123 set .generator *tmp114
   124 set .powerTarget 400
+  125 op add :buildBlockFromCfg.4:x .coreX 1.5
+  126 set :buildBlock:block @silicon-smelter
+  127 set :buildBlock:x :buildBlockFromCfg.4:x
+  128 set :buildBlock:y :buildBlockFromCfg:y
+  129 set :buildBlock:copper 30
+  130 set :buildBlock:lead 25
+  131 setaddr :buildBlock*retaddr *label66 (h:*label66)
   132 label *label62
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label66 (h:*label66)
   133 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   134 label *label66
   135 set *tmp118 :buildBlock*retval
 
   188 label *label67
   189 set .titaniumDrill :buildBlockAt*retval
   190 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  191 op add :buildBlockFromCfg.5:y .coreY 2
+  192 set :buildBlock:block @unloader
+  193 set :buildBlock:x :buildBlockFromCfg.1:x
+  194 set :buildBlock:y :buildBlockFromCfg.5:y
+  195 set :buildBlock:copper 0
+  196 set :buildBlock:lead 0
+  197 set :buildBlock:silicon 30
+  198 set :buildBlock:titanium 25
+  199 setaddr :buildBlock*retaddr *label80 (h:*label80)
   200 label *label76
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label80 (h:*label80)
   201 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   202 label *label80
   203 set *tmp137 :buildBlock*retval
 
   208 label *label78
   209 label *label75
   210 set .unloader1 *tmp137
+  211 op add :buildBlockFromCfg.6:x .coreX 1
+  212 set :buildBlock:block @micro-processor
+  213 set :buildBlock:x :buildBlockFromCfg.6:x
+  214 set :buildBlock:y :buildBlockFromCfg.1:y
+  215 set :buildBlock:copper 90
+  216 set :buildBlock:lead 50
+  217 set :buildBlock:silicon 50
+  218 set :buildBlock:titanium 0
+  219 setaddr :buildBlock*retaddr *label86 (h:*label86)
   220 label *label82
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   221 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label86 (h:*label86)
   222 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)
   223 label *label86
   224 set *tmp141 :buildBlock*retval
 
   239 write :monos *tmp141 ".monos"
   240 write :flares *tmp141 ".flares"
   241 write :polys *tmp141 ".polys"
+  242 op add :buildBlockFromCfg.7:x .coreX -2
+  243 op add :buildBlockFromCfg.7:y .coreY 1
+  244 set :buildBlock:block @power-node
+  245 set :buildBlock:x :buildBlockFromCfg.7:x
+  246 set :buildBlock:y :buildBlockFromCfg.7:y
+  247 set :buildBlock:copper 2
+  248 set :buildBlock:lead 6
+  249 set :buildBlock:silicon 0
+  250 set :buildBlock:config null
+  251 setaddr :buildBlock*retaddr *label92 (h:*label92)
   252 label *label88
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY 1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label92 (h:*label92)
   253 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   254 label *label92
   255 jump *label87 always
 
   258 multilabel *label91 (m:marker7)
   259 label *label90
   260 label *label87
+  261 op add :buildBlockFromCfg.8:y .coreY 0
+  262 set :buildBlock:block @unloader
+  263 set :buildBlock:x :buildBlockFromCfg.7:x
+  264 set :buildBlock:y :buildBlockFromCfg.8:y
+  265 set :buildBlock:copper 0
+  266 set :buildBlock:lead 0
+  267 set :buildBlock:silicon 30
+  268 set :buildBlock:titanium 25
+  269 setaddr :buildBlock*retaddr *label98 (h:*label98)
   270 label *label94
-    * op add :buildBlockFromCfg.8:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label98 (h:*label98)
   271 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   272 label *label98
   273 set *tmp149 :buildBlock*retval
 
   278 label *label96
   279 label *label93
   280 write *tmp149 *tmp141 ".unloader2"
+  281 op add :buildBlockFromCfg.9:x .coreX -3
+  282 op add :buildBlockFromCfg.9:y .coreY -2
+  283 set :buildBlock:block @air-factory
+  284 set :buildBlock:x :buildBlockFromCfg.9:x
+  285 set :buildBlock:y :buildBlockFromCfg.9:y
+  286 set :buildBlock:copper 60
+  287 set :buildBlock:lead 70
+  288 set :buildBlock:silicon 0
+  289 set :buildBlock:titanium 0
+  290 set :buildBlock:rotation 3
+  291 set :buildBlock:config @mono
+  292 setaddr :buildBlock*retaddr *label104 (h:*label104)
   293 label *label100
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY -2
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label104 (h:*label104)
   294 call *label27 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   295 label *label104
   296 set *tmp153 :buildBlock*retval
 
   329 set .graphiteSurplus 60
   330 set .siliconSurplus 100
   331 set .metaglassSurplus 60
+  332 op add :buildBlockFromCfg.10:x .coreX 2
+  333 set :buildBlock:block @unloader
+  334 set :buildBlock:x :buildBlockFromCfg.10:x
+  335 set :buildBlock:y :buildBlockFromCfg.7:y
+  336 set :buildBlock:copper 0
+  337 set :buildBlock:lead 0
+  338 set :buildBlock:silicon 30
+  339 set :buildBlock:titanium 25
+  340 set :buildBlock:rotation 0
+  341 set :buildBlock:config null
+  342 setaddr :buildBlock*retaddr *label117 (h:*label117)
   343 label *label113
-    * op add :buildBlockFromCfg.10:x .coreX 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label117 (h:*label117)
   344 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   345 label *label117
   346 jump *label112 always
 
   349 multilabel *label116 (m:marker10)
   350 label *label115
   351 label *label112
+  352 set :buildBlock:block @junction
+  353 set :buildBlock:x :buildBlockFromCfg.10:x
+  354 set :buildBlock:y :buildBlockFromCfg.8:y
+  355 set :buildBlock:copper 3
+  356 set :buildBlock:silicon 0
+  357 set :buildBlock:titanium 0
+  358 setaddr :buildBlock*retaddr *label123 (h:*label123)
   359 label *label119
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label123 (h:*label123)
   360 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   361 label *label123
   362 jump *label118 always
 
   365 multilabel *label122 (m:marker11)
   366 label *label121
   367 label *label118
+  368 op add :buildBlockFromCfg.12:x .coreX 3
+  369 set :buildBlock:block @inverted-sorter
+  370 set :buildBlock:x :buildBlockFromCfg.12:x
+  371 set :buildBlock:y :buildBlockFromCfg.8:y
+  372 set :buildBlock:copper 2
+  373 set :buildBlock:lead 2
+  374 set :buildBlock:config @metaglass
+  375 setaddr :buildBlock*retaddr *label129 (h:*label129)
   376 label *label125
-    * op add :buildBlockFromCfg.12:x .coreX 3
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:config @metaglass
-    * setaddr :buildBlock*retaddr *label129 (h:*label129)
   377 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   378 label *label129
   379 jump *label124 always
 
   382 multilabel *label128 (m:marker12)
   383 label *label127
   384 label *label124
+  385 op add :buildBlockFromCfg.13:x .coreX 3.5
+  386 op add :buildBlockFromCfg.13:y .coreY 1.5
+  387 set :buildBlock:block @kiln
+  388 set :buildBlock:x :buildBlockFromCfg.13:x
+  389 set :buildBlock:y :buildBlockFromCfg.13:y
+  390 set :buildBlock:copper 60
+  391 set :buildBlock:lead 30
+  392 set :buildBlock:graphite 30
+  393 set :buildBlock:config null
+  394 setaddr :buildBlock*retaddr *label135 (h:*label135)
   395 label *label131
-    * op add :buildBlockFromCfg.13:x .coreX 3.5
-    * op add :buildBlockFromCfg.13:y .coreY 1.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label135 (h:*label135)
   396 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)
   397 label *label135
   398 set *tmp173 :buildBlock*retval
 
   403 label *label133
   404 label *label130
   405 write *tmp173 *tmp141 ".kiln"
+  406 op add :buildBlockFromCfg.14:x .coreX -3.5
+  407 op add :buildBlockFromCfg.14:y .coreY 3.5
+  408 set :buildBlock:block @water-extractor
+  409 set :buildBlock:x :buildBlockFromCfg.14:x
+  410 set :buildBlock:y :buildBlockFromCfg.14:y
+  411 set :buildBlock:copper 30
+  412 set :buildBlock:metaglass 30
+  413 setaddr :buildBlock*retaddr *label141 (h:*label141)
   414 label *label137
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 3.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label141 (h:*label141)
   415 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   416 label *label141
   417 jump *label136 always
 
   420 multilabel *label140 (m:marker14)
   421 label *label139
   422 label *label136
+  423 set :buildBlock:block @overflow-gate
+  424 set :buildBlock:x :buildBlockFromCfg.9:x
+  425 set :buildBlock:y :buildBlockFromCfg.8:y
+  426 set :buildBlock:copper 4
+  427 set :buildBlock:lead 2
+  428 set :buildBlock:graphite 0
+  429 set :buildBlock:metaglass 0
+  430 setaddr :buildBlock*retaddr *label147 (h:*label147)
   431 label *label143
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label147 (h:*label147)
   432 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   433 label *label147
   434 jump *label142 always
 
   437 multilabel *label146 (m:marker15)
   438 label *label145
   439 label *label142
+  440 set :buildBlock:block @steam-generator
+  441 set :buildBlock:x :buildBlockFromCfg.14:x
+  442 set :buildBlock:y :buildBlockFromCfg.13:y
+  443 set :buildBlock:copper 35
+  444 set :buildBlock:lead 40
+  445 set :buildBlock:graphite 25
+  446 set :buildBlock:silicon 30
+  447 setaddr :buildBlock*retaddr *label153 (h:*label153)
   448 label *label149
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * setaddr :buildBlock*retaddr *label153 (h:*label153)
   449 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   450 label *label153
   451 set *tmp185 :buildBlock*retval
 
   457 label *label148
   458 write *tmp185 *tmp141 ".generator2"
   459 set .graphiteSurplus 200
+  460 op add :buildBlockFromCfg.17:y .coreY -5
+  461 set :buildBlock:block @payload-router
+  462 set :buildBlock:x :buildBlockFromCfg.9:x
+  463 set :buildBlock:y :buildBlockFromCfg.17:y
+  464 set :buildBlock:copper 10
+  465 set :buildBlock:lead 0
+  466 set :buildBlock:graphite 15
+  467 set :buildBlock:silicon 0
+  468 setaddr :buildBlock*retaddr *label159 (h:*label159)
   469 label *label155
-    * op add :buildBlockFromCfg.17:y .coreY -5
-    * set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 10
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 15
-    * set :buildBlock:silicon 0
-    * setaddr :buildBlock*retaddr *label159 (h:*label159)
   470 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   471 label *label159
   472 set *tmp189 :buildBlock*retval
 
   477 label *label157
   478 label *label154
   479 write *tmp189 *tmp141 ".payloadRouter"
+  480 set :buildBlock:block @unloader
+  481 set :buildBlock:x :buildBlockFromCfg.1:x
+  482 set :buildBlock:y :buildBlockFromCfg.9:y
+  483 set :buildBlock:copper 0
+  484 set :buildBlock:graphite 0
+  485 set :buildBlock:silicon 30
+  486 set :buildBlock:titanium 25
+  487 setaddr :buildBlock*retaddr *label165 (h:*label165)
   488 label *label161
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label165 (h:*label165)
   489 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   490 label *label165
   491 jump *label160 always
 
   494 multilabel *label164 (m:marker18)
   495 label *label163
   496 label *label160
+  497 op add :buildBlockFromCfg.19:y .coreY -3
+  498 set :buildBlock:block @underflow-gate
+  499 set :buildBlock:x :buildBlockFromCfg.1:x
+  500 set :buildBlock:y :buildBlockFromCfg.19:y
+  501 set :buildBlock:copper 4
+  502 set :buildBlock:lead 2
+  503 set :buildBlock:silicon 0
+  504 set :buildBlock:titanium 0
+  505 setaddr :buildBlock*retaddr *label171 (h:*label171)
   506 label *label167
-    * op add :buildBlockFromCfg.19:y .coreY -3
-    * set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label171 (h:*label171)
   507 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   508 label *label171
   509 jump *label166 always
 
   512 multilabel *label170 (m:marker19)
   513 label *label169
   514 label *label166
+  515 set :buildBlock:block @additive-reconstructor
+  516 set :buildBlock:x :buildBlockFromCfg.1:x
+  517 set :buildBlock:y :buildBlockFromCfg.17:y
+  518 set :buildBlock:copper 200
+  519 set :buildBlock:lead 120
+  520 set :buildBlock:silicon 90
+  521 setaddr :buildBlock*retaddr *label177 (h:*label177)
   522 label *label173
-    * set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 200
-    * set :buildBlock:lead 120
-    * set :buildBlock:silicon 90
-    * setaddr :buildBlock*retaddr *label177 (h:*label177)
   523 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   524 label *label177
   525 set *tmp201 :buildBlock*retval
 
   814 label *label6
   815 write "Moving..." .display ".status3"
   816 label *label244
+  817 op sub *tmp258 :moveTo:radius 0.5
   818 label *label245
   819 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp256
   820 jump *label247 notEqual *tmp256 false
-    * op sub *tmp258 :moveTo:radius 0.5
   821 ucontrol approach :moveTo:x :moveTo:y *tmp258
   822 label *label246
   823 jump *label245 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1145 label *label343
  1146 label *label312
  1147 label *label313
+ 1148 set *tmp358 100
  1149 sensor *tmp356 .core @titanium
-    * jump *label352 greaterThanEq *tmp356 .targetTitanium
+ 1150 jump *label353 greaterThanEq *tmp356 .targetTitanium
  1151 sensor *tmp359 .core @titanium
  1152 op sub *tmp360 .targetTitanium *tmp359
  1153 op min *tmp358 7 *tmp360
  1154 jump *label353 always
-    * label *label352
-    * set *tmp358 100
  1155 label *label353
  1156 sensor *tmp362 .titaniumDrill @titanium
  1157 jump *label354 greaterThanEq *tmp362 *tmp358
 
  1173 label *label364
  1174 sensor :supplyBase0:coal .core @coal
  1175 sensor :supplyBase0:sand .core @sand
-    * jump *label365 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp377 @coal
+ 1176 set :mineOre.1:ore @sand
+ 1177 jump *label366 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1178 set :mineOre.1:ore @coal
  1179 jump *label366 always
-    * label *label365
-    * set *tmp377 @sand
  1180 label *label366
-    * set :mineOre.1:ore *tmp377
  1181 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1182 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
  1183 label *label367
 
  1217 label *label380
  1218 sensor :supplyBase0:coal.1 .core @coal
  1219 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label381 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp390 @coal
+ 1220 set :mineOre.1:ore @sand
+ 1221 jump *label382 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1222 set :mineOre.1:ore @coal
  1223 jump *label382 always
-    * label *label381
-    * set *tmp390 @sand
  1224 label *label382
-    * set :mineOre.1:ore *tmp390
  1225 setaddr :mineOre.1*retaddr *label383 (h:*label383)
  1226 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
  1227 label *label383

Modifications by Unroll iteration loop at CoreBuilder.mnd:243:5 (-2 instructions):
 
  1316 end
  1317 label *label23
  1318 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp417 *label415
-    * jump *label412 always
-    * multilabel *label415 (m:marker21)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp417 *label416
-    * jump *label412 always
-    * multilabel *label416 (m:marker21)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp417 *label417
-    * jump *label412 always
-    * multilabel *label417 (m:marker21)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp417 *label418
-    * jump *label412 always
-    * multilabel *label418 (m:marker21)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp417 *label419
-    * jump *label412 always
-    * multilabel *label419 (m:marker21)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp417 *label420
-    * label *label412
-    * op sign *tmp418 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label413
-    * multijump *tmp417 0 0 (m:marker21)
-    * multilabel *label420 (m:marker21)
-    * label *label414
+ 1319 set :meetTarget:t :meetTarget:copper
+ 1320 label *label457
+ 1321 op sign *tmp418 :meetTarget:t
+ 1322 op add :meetTarget:count :meetTarget:count *tmp418
+ 1323 label *label458
+ 1324 set :meetTarget:t :meetTarget:lead
+ 1325 label *label461
+ 1326 op sign *tmp418 :meetTarget:t
+ 1327 op add :meetTarget:count :meetTarget:count *tmp418
+ 1328 label *label462
+ 1329 set :meetTarget:t :meetTarget:graphite
+ 1330 label *label465
+ 1331 op sign *tmp418 :meetTarget:t
+ 1332 op add :meetTarget:count :meetTarget:count *tmp418
+ 1333 label *label466
+ 1334 set :meetTarget:t :meetTarget:silicon
+ 1335 label *label469
+ 1336 op sign *tmp418 :meetTarget:t
+ 1337 op add :meetTarget:count :meetTarget:count *tmp418
+ 1338 label *label470
+ 1339 set :meetTarget:t :meetTarget:titanium
+ 1340 label *label473
+ 1341 op sign *tmp418 :meetTarget:t
+ 1342 op add :meetTarget:count :meetTarget:count *tmp418
+ 1343 label *label474
+ 1344 set :meetTarget:t :meetTarget:metaglass
+ 1345 label *label477
+ 1346 op sign *tmp418 :meetTarget:t
+ 1347 op add :meetTarget:count :meetTarget:count *tmp418
+ 1348 label *label478
+ 1349 label *label414
  1350 write :meetTarget:count .display ".totalTargets"
  1351 write :meetTarget:block .display ".nextBlock"
  1352 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1318 set :meetTarget:count 0
  1319 set :meetTarget:t :meetTarget:copper
  1320 label *label457
-    * op sign *tmp418 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp418
+ 1321 op sign *tmp418 :meetTarget:copper
+ 1322 op add :meetTarget:count 0 *tmp418
  1323 label *label458
  1324 set :meetTarget:t :meetTarget:lead
  1325 label *label461
-    * op sign *tmp418 :meetTarget:t
+ 1326 op sign *tmp418 :meetTarget:lead
  1327 op add :meetTarget:count :meetTarget:count *tmp418
  1328 label *label462
  1329 set :meetTarget:t :meetTarget:graphite
  1330 label *label465
-    * op sign *tmp418 :meetTarget:t
+ 1331 op sign *tmp418 :meetTarget:graphite
  1332 op add :meetTarget:count :meetTarget:count *tmp418
  1333 label *label466
  1334 set :meetTarget:t :meetTarget:silicon
  1335 label *label469
-    * op sign *tmp418 :meetTarget:t
+ 1336 op sign *tmp418 :meetTarget:silicon
  1337 op add :meetTarget:count :meetTarget:count *tmp418
  1338 label *label470
  1339 set :meetTarget:t :meetTarget:titanium
  1340 label *label473
-    * op sign *tmp418 :meetTarget:t
+ 1341 op sign *tmp418 :meetTarget:titanium
  1342 op add :meetTarget:count :meetTarget:count *tmp418
  1343 label *label474
  1344 set :meetTarget:t :meetTarget:metaglass
  1345 label *label477
-    * op sign *tmp418 :meetTarget:t
+ 1346 op sign *tmp418 :meetTarget:metaglass
  1347 op add :meetTarget:count :meetTarget:count *tmp418
  1348 label *label478
  1349 label *label414

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1315 return :targetMet*retaddr
  1316 end
  1317 label *label23
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1318 label *label457
  1319 op sign *tmp418 :meetTarget:copper
  1320 op add :meetTarget:count 0 *tmp418
  1321 label *label458
-    * set :meetTarget:t :meetTarget:lead
  1322 label *label461
  1323 op sign *tmp418 :meetTarget:lead
  1324 op add :meetTarget:count :meetTarget:count *tmp418
  1325 label *label462
-    * set :meetTarget:t :meetTarget:graphite
  1326 label *label465
  1327 op sign *tmp418 :meetTarget:graphite
  1328 op add :meetTarget:count :meetTarget:count *tmp418
  1329 label *label466
-    * set :meetTarget:t :meetTarget:silicon
  1330 label *label469
  1331 op sign *tmp418 :meetTarget:silicon
  1332 op add :meetTarget:count :meetTarget:count *tmp418
  1333 label *label470
-    * set :meetTarget:t :meetTarget:titanium
  1334 label *label473
  1335 op sign *tmp418 :meetTarget:titanium
  1336 op add :meetTarget:count :meetTarget:count *tmp418
  1337 label *label474
-    * set :meetTarget:t :meetTarget:metaglass
  1338 label *label477
  1339 op sign *tmp418 :meetTarget:metaglass
  1340 op add :meetTarget:count :meetTarget:count *tmp418

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   184 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   185 call *label26 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   186 label *label74
-    * jump *label67 always
   187 label *label67
   188 set .titaniumDrill :buildBlockAt*retval
   189 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1150 sensor *tmp359 .core @titanium
  1151 op sub *tmp360 .targetTitanium *tmp359
  1152 op min *tmp358 7 *tmp360
-    * jump *label353 always
  1153 label *label353
  1154 sensor *tmp362 .titaniumDrill @titanium
  1155 jump *label354 greaterThanEq *tmp362 *tmp358
 
  1174 set :mineOre.1:ore @sand
  1175 jump *label366 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1176 set :mineOre.1:ore @coal
-    * jump *label366 always
  1177 label *label366
  1178 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1179 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
 
  1217 set :mineOre.1:ore @sand
  1218 jump *label382 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1219 set :mineOre.1:ore @coal
-    * jump *label382 always
  1220 label *label382
  1221 setaddr :mineOre.1*retaddr *label383 (h:*label383)
  1222 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
 
  1439 call *label25 *invalid :logBlock*retval (m:*label445) (h:*label445)
  1440 label *label445
  1441 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label430 always
  1442 label *label430
  1443 return :buildBlockAt*retaddr
  1444 end
 
  1463 call *label26 *invalid :buildBlockAt*retval (m:*label448) (h:*label448)
  1464 label *label448
  1465 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label446 always
  1466 label *label446
  1467 return :buildBlock*retaddr
  1468 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    71 label *label40
    72 label *label37
    73 set .press *tmp102
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   74 set :buildBlockFromCfg.1:x .coreX
    75 op add :buildBlockFromCfg.1:y .coreY 4
    76 set :buildBlock:block @battery
    77 set :buildBlock:x :buildBlockFromCfg.1:x
 
   257 multilabel *label91 (m:marker7)
   258 label *label90
   259 label *label87
-    * op add :buildBlockFromCfg.8:y .coreY 0
+  260 set :buildBlockFromCfg.8:y .coreY
   261 set :buildBlock:block @unloader
   262 set :buildBlock:x :buildBlockFromCfg.7:x
   263 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1313 label *label23
  1314 label *label457
  1315 op sign *tmp418 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp418
+ 1316 set :meetTarget:count *tmp418
  1317 label *label458
  1318 label *label461
  1319 op sign *tmp418 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1312 end
  1313 label *label23
  1314 label *label457
-    * op sign *tmp418 :meetTarget:copper
-    * set :meetTarget:count *tmp418
+ 1315 op sign :meetTarget:count :meetTarget:copper
  1316 label *label458
  1317 label *label461
  1318 op sign *tmp418 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    74 set :buildBlockFromCfg.1:x .coreX
    75 op add :buildBlockFromCfg.1:y .coreY 4
    76 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   77 set :buildBlock:x .coreX
    78 set :buildBlock:y :buildBlockFromCfg.1:y
    79 set :buildBlock:copper 5
    80 set :buildBlock:lead 20
 
   105 label *label49
   106 op add :buildBlockFromCfg.3:y .coreY 3
   107 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  108 set :buildBlock:x .coreX
   109 set :buildBlock:y :buildBlockFromCfg.3:y
   110 set :buildBlock:copper 25
   111 set :buildBlock:lead 15
 
   189 write :buildBlockAt*retval processor1 ".titaniumDrill"
   190 op add :buildBlockFromCfg.5:y .coreY 2
   191 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  192 set :buildBlock:x .coreX
   193 set :buildBlock:y :buildBlockFromCfg.5:y
   194 set :buildBlock:copper 0
   195 set :buildBlock:lead 0
 
   260 set :buildBlockFromCfg.8:y .coreY
   261 set :buildBlock:block @unloader
   262 set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  263 set :buildBlock:y .coreY
   264 set :buildBlock:copper 0
   265 set :buildBlock:lead 0
   266 set :buildBlock:silicon 30
 
   350 label *label112
   351 set :buildBlock:block @junction
   352 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  353 set :buildBlock:y .coreY
   354 set :buildBlock:copper 3
   355 set :buildBlock:silicon 0
   356 set :buildBlock:titanium 0
 
   367 op add :buildBlockFromCfg.12:x .coreX 3
   368 set :buildBlock:block @inverted-sorter
   369 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  370 set :buildBlock:y .coreY
   371 set :buildBlock:copper 2
   372 set :buildBlock:lead 2
   373 set :buildBlock:config @metaglass
 
   421 label *label136
   422 set :buildBlock:block @overflow-gate
   423 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  424 set :buildBlock:y .coreY
   425 set :buildBlock:copper 4
   426 set :buildBlock:lead 2
   427 set :buildBlock:graphite 0
 
   477 label *label154
   478 write *tmp189 *tmp141 ".payloadRouter"
   479 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  480 set :buildBlock:x .coreX
   481 set :buildBlock:y :buildBlockFromCfg.9:y
   482 set :buildBlock:copper 0
   483 set :buildBlock:graphite 0
 
   495 label *label160
   496 op add :buildBlockFromCfg.19:y .coreY -3
   497 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  498 set :buildBlock:x .coreX
   499 set :buildBlock:y :buildBlockFromCfg.19:y
   500 set :buildBlock:copper 4
   501 set :buildBlock:lead 2
 
   512 label *label169
   513 label *label166
   514 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  515 set :buildBlock:x .coreX
   516 set :buildBlock:y :buildBlockFromCfg.17:y
   517 set :buildBlock:copper 200
   518 set :buildBlock:lead 120

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    71 label *label40
    72 label *label37
    73 set .press *tmp102
-    * set :buildBlockFromCfg.1:x .coreX
    74 op add :buildBlockFromCfg.1:y .coreY 4
    75 set :buildBlock:block @battery
    76 set :buildBlock:x .coreX
 
   256 multilabel *label91 (m:marker7)
   257 label *label90
   258 label *label87
-    * set :buildBlockFromCfg.8:y .coreY
   259 set :buildBlock:block @unloader
   260 set :buildBlock:x :buildBlockFromCfg.7:x
   261 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    15 ubind @poly
    16 set .builder @unit
    17 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label31
    18 jump *label30 equal .core null
-    * label *label32
    19 set .display processor1
    20 set .flareController processor3
    21 write .core processor5 ":startPolyController:aCore"
 
    58 set :buildBlock:rotation 0
    59 set :buildBlock:config null
    60 setaddr :buildBlock*retaddr *label42 (h:*label42)
-    * label *label38
    61 call *label27 *invalid :buildBlock*retval (m:*label42) (h:*label42)
    62 label *label42
    63 set *tmp102 :buildBlock*retval
    64 jump *label37 always
-    * label *label39
    65 multijump *tmp103 0 0 (m:marker0)
    66 multilabel *label41 (m:marker0)
-    * label *label40
    67 label *label37
    68 set .press *tmp102
    69 op add :buildBlockFromCfg.1:y .coreY 4
 
    73 set :buildBlock:copper 5
    74 set :buildBlock:lead 20
    75 setaddr :buildBlock*retaddr *label48 (h:*label48)
-    * label *label44
    76 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    77 label *label48
    78 set *tmp106 :buildBlock*retval
    79 jump *label43 always
-    * label *label45
    80 multijump *tmp107 0 0 (m:marker1)
    81 multilabel *label47 (m:marker1)
-    * label *label46
    82 label *label43
    83 set .battery *tmp106
    84 op add :buildBlockFromCfg.2:x .coreX -1
    85 set :buildBlock:x :buildBlockFromCfg.2:x
    86 set :buildBlock:y :buildBlockFromCfg.1:y
    87 setaddr :buildBlock*retaddr *label54 (h:*label54)
-    * label *label50
    88 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
    89 label *label54
    90 jump *label49 always
-    * label *label51
    91 multijump *tmp111 0 0 (m:marker2)
    92 multilabel *label53 (m:marker2)
-    * label *label52
    93 label *label49
    94 op add :buildBlockFromCfg.3:y .coreY 3
    95 set :buildBlock:block @combustion-generator
 
    98 set :buildBlock:copper 25
    99 set :buildBlock:lead 15
   100 setaddr :buildBlock*retaddr *label60 (h:*label60)
-    * label *label56
   101 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
   102 label *label60
   103 set *tmp114 :buildBlock*retval
   104 jump *label55 always
-    * label *label57
   105 multijump *tmp115 0 0 (m:marker3)
   106 multilabel *label59 (m:marker3)
-    * label *label58
   107 label *label55
   108 set .generator *tmp114
   109 set .powerTarget 400
 
   114 set :buildBlock:copper 30
   115 set :buildBlock:lead 25
   116 setaddr :buildBlock*retaddr *label66 (h:*label66)
-    * label *label62
   117 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   118 label *label66
   119 set *tmp118 :buildBlock*retval
   120 jump *label61 always
-    * label *label63
   121 multijump *tmp119 0 0 (m:marker4)
   122 multilabel *label65 (m:marker4)
-    * label *label64
   123 label *label61
   124 set .smelter *tmp118
   125 set :meetTarget:block @pneumatic-drill
 
   132 setaddr :meetTarget*retaddr *label69 (h:*label69)
   133 call *label23 *invalid :meetTarget*retval (m:*label69) (h:*label69)
   134 label *label69
-    * label *label68
   135 write @titanium processor1 ".nextBlock"
   136 write .coreX processor4 ":findDrillLocation:x"
   137 write .coreY processor4 ":findDrillLocation:y"
 
   152 jump *label71 notEqual :buildTitaniumDrill:result false
   153 set .ERROR "Cannot locate spot for titanium drill"
   154 stop
-    * label *label73
   155 label *label71
-    * label *label72
   156 write @pneumatic-drill processor1 ".nextBlock"
   157 set :buildBlockAt:block @pneumatic-drill
   158 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   163 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   164 call *label26 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   165 label *label74
-    * label *label67
   166 set .titaniumDrill :buildBlockAt*retval
   167 write :buildBlockAt*retval processor1 ".titaniumDrill"
   168 op add :buildBlockFromCfg.5:y .coreY 2
 
   174 set :buildBlock:silicon 30
   175 set :buildBlock:titanium 25
   176 setaddr :buildBlock*retaddr *label80 (h:*label80)
-    * label *label76
   177 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   178 label *label80
   179 set *tmp137 :buildBlock*retval
   180 jump *label75 always
-    * label *label77
   181 multijump *tmp138 0 0 (m:marker5)
   182 multilabel *label79 (m:marker5)
-    * label *label78
   183 label *label75
   184 set .unloader1 *tmp137
   185 op add :buildBlockFromCfg.6:x .coreX 1
 
   191 set :buildBlock:silicon 50
   192 set :buildBlock:titanium 0
   193 setaddr :buildBlock*retaddr *label86 (h:*label86)
-    * label *label82
   194 set :buildBlock:config processor2
   195 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)
   196 label *label86
   197 set *tmp141 :buildBlock*retval
   198 jump *label81 always
-    * label *label83
   199 multijump *tmp142 0 0 (m:marker6)
   200 multilabel *label85 (m:marker6)
-    * label *label84
   201 label *label81
   202 set .controller *tmp141
   203 write processor1 *tmp141 ".display"
 
   220 set :buildBlock:silicon 0
   221 set :buildBlock:config null
   222 setaddr :buildBlock*retaddr *label92 (h:*label92)
-    * label *label88
   223 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   224 label *label92
   225 jump *label87 always
-    * label *label89
   226 multijump *tmp146 0 0 (m:marker7)
   227 multilabel *label91 (m:marker7)
-    * label *label90
   228 label *label87
   229 set :buildBlock:block @unloader
   230 set :buildBlock:x :buildBlockFromCfg.7:x
 
   234 set :buildBlock:silicon 30
   235 set :buildBlock:titanium 25
   236 setaddr :buildBlock*retaddr *label98 (h:*label98)
-    * label *label94
   237 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   238 label *label98
   239 set *tmp149 :buildBlock*retval
   240 jump *label93 always
-    * label *label95
   241 multijump *tmp150 0 0 (m:marker8)
   242 multilabel *label97 (m:marker8)
-    * label *label96
   243 label *label93
   244 write *tmp149 *tmp141 ".unloader2"
   245 op add :buildBlockFromCfg.9:x .coreX -3
 
   254 set :buildBlock:rotation 3
   255 set :buildBlock:config @mono
   256 setaddr :buildBlock*retaddr *label104 (h:*label104)
-    * label *label100
   257 call *label27 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   258 label *label104
   259 set *tmp153 :buildBlock*retval
   260 jump *label99 always
-    * label *label101
   261 multijump *tmp154 0 0 (m:marker9)
   262 multilabel *label103 (m:marker9)
-    * label *label102
   263 label *label99
   264 write *tmp153 *tmp141 ".factory"
   265 write *tmp153 processor1 ".factory"
 
   282 jump *label110 greaterThanEq *tmp157 300
   283 jump *label108 always
   284 label *label110
-    * label *label111
-    * label *label107
   285 read *tmp71 *tmp141 ".monos"
   286 jump *label106 lessThan *tmp71 3
   287 label *label108
 
   299 set :buildBlock:rotation 0
   300 set :buildBlock:config null
   301 setaddr :buildBlock*retaddr *label117 (h:*label117)
-    * label *label113
   302 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   303 label *label117
   304 jump *label112 always
-    * label *label114
   305 multijump *tmp162 0 0 (m:marker10)
   306 multilabel *label116 (m:marker10)
-    * label *label115
   307 label *label112
   308 set :buildBlock:block @junction
   309 set :buildBlock:x :buildBlockFromCfg.10:x
 
   312 set :buildBlock:silicon 0
   313 set :buildBlock:titanium 0
   314 setaddr :buildBlock*retaddr *label123 (h:*label123)
-    * label *label119
   315 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   316 label *label123
   317 jump *label118 always
-    * label *label120
   318 multijump *tmp166 0 0 (m:marker11)
   319 multilabel *label122 (m:marker11)
-    * label *label121
   320 label *label118
   321 op add :buildBlockFromCfg.12:x .coreX 3
   322 set :buildBlock:block @inverted-sorter
 
   326 set :buildBlock:lead 2
   327 set :buildBlock:config @metaglass
   328 setaddr :buildBlock*retaddr *label129 (h:*label129)
-    * label *label125
   329 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   330 label *label129
   331 jump *label124 always
-    * label *label126
   332 multijump *tmp170 0 0 (m:marker12)
   333 multilabel *label128 (m:marker12)
-    * label *label127
   334 label *label124
   335 op add :buildBlockFromCfg.13:x .coreX 3.5
   336 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   342 set :buildBlock:graphite 30
   343 set :buildBlock:config null
   344 setaddr :buildBlock*retaddr *label135 (h:*label135)
-    * label *label131
   345 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)
   346 label *label135
   347 set *tmp173 :buildBlock*retval
   348 jump *label130 always
-    * label *label132
   349 multijump *tmp174 0 0 (m:marker13)
   350 multilabel *label134 (m:marker13)
-    * label *label133
   351 label *label130
   352 write *tmp173 *tmp141 ".kiln"
   353 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   358 set :buildBlock:copper 30
   359 set :buildBlock:metaglass 30
   360 setaddr :buildBlock*retaddr *label141 (h:*label141)
-    * label *label137
   361 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   362 label *label141
   363 jump *label136 always
-    * label *label138
   364 multijump *tmp178 0 0 (m:marker14)
   365 multilabel *label140 (m:marker14)
-    * label *label139
   366 label *label136
   367 set :buildBlock:block @overflow-gate
   368 set :buildBlock:x :buildBlockFromCfg.9:x
 
   372 set :buildBlock:graphite 0
   373 set :buildBlock:metaglass 0
   374 setaddr :buildBlock*retaddr *label147 (h:*label147)
-    * label *label143
   375 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   376 label *label147
   377 jump *label142 always
-    * label *label144
   378 multijump *tmp182 0 0 (m:marker15)
   379 multilabel *label146 (m:marker15)
-    * label *label145
   380 label *label142
   381 set :buildBlock:block @steam-generator
   382 set :buildBlock:x :buildBlockFromCfg.14:x
 
   386 set :buildBlock:graphite 25
   387 set :buildBlock:silicon 30
   388 setaddr :buildBlock*retaddr *label153 (h:*label153)
-    * label *label149
   389 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   390 label *label153
   391 set *tmp185 :buildBlock*retval
   392 jump *label148 always
-    * label *label150
   393 multijump *tmp186 0 0 (m:marker16)
   394 multilabel *label152 (m:marker16)
-    * label *label151
   395 label *label148
   396 write *tmp185 *tmp141 ".generator2"
   397 set .graphiteSurplus 200
 
   404 set :buildBlock:graphite 15
   405 set :buildBlock:silicon 0
   406 setaddr :buildBlock*retaddr *label159 (h:*label159)
-    * label *label155
   407 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   408 label *label159
   409 set *tmp189 :buildBlock*retval
   410 jump *label154 always
-    * label *label156
   411 multijump *tmp190 0 0 (m:marker17)
   412 multilabel *label158 (m:marker17)
-    * label *label157
   413 label *label154
   414 write *tmp189 *tmp141 ".payloadRouter"
   415 set :buildBlock:block @unloader
 
   420 set :buildBlock:silicon 30
   421 set :buildBlock:titanium 25
   422 setaddr :buildBlock*retaddr *label165 (h:*label165)
-    * label *label161
   423 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   424 label *label165
   425 jump *label160 always
-    * label *label162
   426 multijump *tmp194 0 0 (m:marker18)
   427 multilabel *label164 (m:marker18)
-    * label *label163
   428 label *label160
   429 op add :buildBlockFromCfg.19:y .coreY -3
   430 set :buildBlock:block @underflow-gate
 
   435 set :buildBlock:silicon 0
   436 set :buildBlock:titanium 0
   437 setaddr :buildBlock*retaddr *label171 (h:*label171)
-    * label *label167
   438 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   439 label *label171
   440 jump *label166 always
-    * label *label168
   441 multijump *tmp198 0 0 (m:marker19)
   442 multilabel *label170 (m:marker19)
-    * label *label169
   443 label *label166
   444 set :buildBlock:block @additive-reconstructor
   445 set :buildBlock:x .coreX
 
   448 set :buildBlock:lead 120
   449 set :buildBlock:silicon 90
   450 setaddr :buildBlock*retaddr *label177 (h:*label177)
-    * label *label173
   451 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   452 label *label177
   453 set *tmp201 :buildBlock*retval
   454 jump *label172 always
-    * label *label174
   455 multijump *tmp202 0 0 (m:marker20)
   456 multilabel *label176 (m:marker20)
-    * label *label175
   457 label *label172
   458 write *tmp201 *tmp141 ".reconstructor"
   459 write *tmp201 processor1 ".reconstructor"
 
   469 setaddr :supplyBase*retaddr *label182 (h:*label182)
   470 call *label21 *invalid :supplyBase*retval (m:*label182) (h:*label182)
   471 label *label182
-    * label *label180
   472 jump *label179 always
   473 label *label181
   474 write 8 *tmp141 ".flareTarget"
 
   479 setaddr :supplyBase*retaddr *label186 (h:*label186)
   480 call *label21 *invalid :supplyBase*retval (m:*label186) (h:*label186)
   481 label *label186
-    * label *label184
   482 jump *label183 always
   483 label *label185
   484 ubind @flare
 
   501 jump *label189 notEqual @unit null
   502 jump *label188 always
   503 label *label189
-    * label *label190
   504 set :findFreeUnit:first_unit @unit
   505 label *label191
   506 sensor *tmp222 @unit @controlled
 
   513 jump *label196 notEqual *tmp225 1
   514 set :findFreeUnit:first_unit @unit
   515 label *label196
-    * label *label197
   516 label *label195
   517 ubind @flare
-    * label *label192
   518 jump *label191 notEqual :findFreeUnit:first_unit @unit
-    * label *label193
   519 label *label188
   520 write .coreX processor4 ":layoutThoriumDrill:x"
   521 write .coreY processor4 ":layoutThoriumDrill:y"
 
   528 setaddr :supplyBase*retaddr *label201 (h:*label201)
   529 call *label21 *invalid :supplyBase*retval (m:*label201) (h:*label201)
   530 label *label201
-    * label *label199
   531 read *tmp234 processor4 ":layoutThoriumDrill*finished"
   532 jump *label198 equal *tmp234 false
-    * label *label200
   533 set :meetTarget:block @laser-drill
   534 set :meetTarget:copper 35
   535 set :meetTarget:lead 0
 
   540 setaddr :meetTarget*retaddr *label204 (h:*label204)
   541 call *label23 *invalid :meetTarget*retval (m:*label204) (h:*label204)
   542 label *label204
-    * label *label203
   543 label *label205
   544 wait 1e-15
   545 read *tmp236 processor4 ":layoutThoriumDrill*finished"
 
   548 jump *label206 notEqual :buildThoriumDrill:result false
   549 set .ERROR "Cannot locate spot for thorium drill"
   550 stop
-    * label *label208
   551 label *label206
-    * label *label207
   552 set :buildBlockAt:block @laser-drill
   553 read :buildBlockAt:x processor4 ".drillX"
   554 read :buildBlockAt:y processor4 ".drillY"
 
   563 jump *label210 greaterThanEq *tmp43 0
   564 jump *label202 always
   565 label *label210
-    * label *label211
   566 set :meetTarget:block @water-extractor
   567 set :meetTarget:copper 30
   568 set :meetTarget:lead 30
 
   573 setaddr :meetTarget*retaddr *label213 (h:*label213)
   574 call *label23 *invalid :meetTarget*retval (m:*label213) (h:*label213)
   575 label *label213
-    * label *label212
   576 set :buildBlockAt:block @water-extractor
   577 read *tmp43 processor4 ".water1X"
   578 set :buildBlockAt:x *tmp43
 
   587 jump *label215 greaterThanEq *tmp45 0
   588 jump *label202 always
   589 label *label215
-    * label *label216
   590 set :meetTarget:block @water-extractor
   591 set :meetTarget:copper 30
   592 set :meetTarget:lead 30
 
   597 setaddr :meetTarget*retaddr *label218 (h:*label218)
   598 call *label23 *invalid :meetTarget*retval (m:*label218) (h:*label218)
   599 label *label218
-    * label *label217
   600 set :buildBlockAt:block @water-extractor
   601 read *tmp45 processor4 ".water2X"
   602 set :buildBlockAt:x *tmp45
 
   617 setaddr :meetTarget*retaddr *label221 (h:*label221)
   618 call *label23 *invalid :meetTarget*retval (m:*label221) (h:*label221)
   619 label *label221
-    * label *label220
   620 set :buildBlockAt:block @steam-generator
   621 read :buildBlockAt:x processor4 ".generatorX"
   622 read :buildBlockAt:y processor4 ".generatorY"
 
   637 setaddr :meetTarget*retaddr *label224 (h:*label224)
   638 call *label23 *invalid :meetTarget*retval (m:*label224) (h:*label224)
   639 label *label224
-    * label *label223
   640 set :buildBlockAt:block @power-node
   641 read :buildBlockAt:x processor4 ".nodeX"
   642 read :buildBlockAt:y processor4 ".nodeY"
 
   656 setaddr :meetTarget*retaddr *label227 (h:*label227)
   657 call *label23 *invalid :meetTarget*retval (m:*label227) (h:*label227)
   658 label *label227
-    * label *label226
   659 set :buildBlockAt:block @solar-panel
   660 read :buildBlockAt:x processor4 ".panelX"
   661 read :buildBlockAt:y processor4 ".panelY"
 
   675 setaddr :meetTarget*retaddr *label230 (h:*label230)
   676 call *label23 *invalid :meetTarget*retval (m:*label230) (h:*label230)
   677 label *label230
-    * label *label229
   678 set :buildBlockAt:block @battery
   679 read :buildBlockAt:x processor4 ".batteryX"
   680 read :buildBlockAt:y processor4 ".batteryY"
 
   700 setaddr :supplyBase*retaddr *label236 (h:*label236)
   701 call *label21 *invalid :supplyBase*retval (m:*label236) (h:*label236)
   702 label *label236
-    * label *label234
   703 read *tmp70 *tmp141 ".flares"
   704 read *tmp71 *tmp141 ".monos"
   705 op add *tmp254 *tmp70 *tmp71
   706 jump *label233 lessThan *tmp254 16
-    * label *label235
   707 label *label237
   708 setaddr :supplyBase*retaddr *label240 (h:*label240)
   709 call *label21 *invalid :supplyBase*retval (m:*label240) (h:*label240)
   710 label *label240
-    * label *label238
   711 jump *label237 always
-    * label *label239
   712 ucontrol stop
   713 set .ERROR "Done"
   714 stop
-    * label *label241
   715 end
   716 label *label6
   717 write "Moving..." .display ".status3"
-    * label *label244
   718 op sub *tmp258 :moveTo:radius 0.5
   719 label *label245
   720 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp256
   721 jump *label247 notEqual *tmp256 false
   722 ucontrol approach :moveTo:x :moveTo:y *tmp258
-    * label *label246
   723 jump *label245 always
   724 label *label247
-    * label *label243
   725 return :moveTo*retaddr
   726 end
   727 label *label7
 
   731 setaddr :moveTo*retaddr *label249 (h:*label249)
   732 call *label6 *invalid :moveTo*retval (m:*label249) (h:*label249)
   733 label *label249
-    * label *label248
   734 return :moveTo.1*retaddr
   735 end
   736 label *label8
   737 write "Moving..." .display ".status3"
-    * label *label251
   738 label *label252
   739 sensor *tmp261 @unit @firstItem
   740 jump *label255 equal *tmp261 null
   741 ucontrol itemDrop @air 1000
   742 label *label255
-    * label *label256
   743 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label253
   744 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp264
   745 jump *label252 equal *tmp264 false
-    * label *label254
-    * label *label250
   746 return :moveToEmpty*retaddr
   747 end
   748 label *label9
 
   754 setaddr :moveTo*retaddr *label258 (h:*label258)
   755 call *label6 *invalid :moveTo*retval (m:*label258) (h:*label258)
   756 label *label258
-    * label *label257
   757 return :moveToBlock*retaddr
   758 end
   759 label *label10
   760 write "Depositing..." .display ".status3"
-    * label *label260
   761 sensor *tmp268 @unit @firstItem
   762 jump *label261 notEqual *tmp268 :depositItems:item
   763 set :moveToBlock:block :depositItems:block
 
   768 sensor :depositItems:cap :depositItems:block @itemCapacity
   769 label *label264
   770 ucontrol itemDrop :depositItems:block 30
-    * label *label265
   771 sensor *tmp272 @unit @firstItem
   772 op mul *tmp273 *tmp272 :depositItems:cap
   773 sensor *tmp274 :depositItems:block :depositItems:item
   774 jump *label264 greaterThan *tmp273 *tmp274
-    * label *label266
   775 jump *label262 always
   776 label *label261
   777 label *label267
   778 sensor *tmp276 @unit @firstItem
   779 jump *label269 equal *tmp276 null
   780 ucontrol itemDrop @air 1000
-    * label *label268
   781 jump *label267 always
   782 label *label269
   783 label *label262
   784 write 0 .display ".transportTarget"
   785 write null .display ".transportItem"
-    * label *label270
-    * label *label259
   786 return :depositItems*retaddr
   787 end
   788 label *label11
 
   790 jump *label272 notEqual *tmp278 false
   791 set .ERROR "Cannot locate ore"
   792 stop
-    * label *label274
   793 label *label272
-    * label *label273
-    * label *label271
   794 return :locateOre*retaddr
   795 end
   796 label *label12
   797 op min :mineOre:amount :mineOre:amount 30
   798 write :mineOre:amount .display ".transportTarget"
   799 write :mineOre:ore .display ".transportItem"
-    * label *label276
   800 set :locateOre:ore :mineOre:ore
   801 setaddr :locateOre*retaddr *label277 (h:*label277)
   802 call *label11 *invalid :locateOre*retval (m:*label277) (h:*label277)
 
   814 sensor *tmp286 @unit @firstItem
   815 jump *label284 equal *tmp286 null
   816 ucontrol itemDrop @air 1000
-    * label *label283
   817 jump *label282 always
   818 label *label284
-    * label *label281
   819 label *label279
-    * label *label280
   820 write "Mining..." .display ".status3"
-    * label *label285
   821 op add :mineOre:stop @second 10
   822 label *label286
   823 sensor :mineOre:item @unit @firstItem
 
   827 jump *label289 equal *tmp292 false
   828 jump *label288 always
   829 label *label289
-    * label *label290
   830 ucontrol mine :mineOre:x :mineOre:y
   831 jump *label291 lessThanEq @second :mineOre:stop
   832 jump *label288 always
   833 label *label291
-    * label *label292
-    * label *label287
   834 sensor *tmp296 @unit @totalItems
   835 jump *label286 lessThan *tmp296 :mineOre:amount
   836 label *label288
 
   840 setaddr :depositItems*retaddr *label293 (h:*label293)
   841 call *label10 *invalid :depositItems*retval (m:*label293) (h:*label293)
   842 label *label293
-    * label *label275
   843 return :mineOre*retaddr
   844 end
   845 label *label13
   846 write "Mining " .display ".status2"
   847 write :mineOre.1:ore .display ".item2"
   848 write "core" .display ".block2"
-    * label *label295
   849 set :mineOre:ore :mineOre.1:ore
   850 set :mineOre:amount 30
   851 set :mineOre:block .core
   852 setaddr :mineOre*retaddr *label296 (h:*label296)
   853 call *label12 *invalid :mineOre*retval (m:*label296) (h:*label296)
   854 label *label296
-    * label *label294
   855 return :mineOre.1*retaddr
   856 end
   857 label *label14
   858 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   859 write :transportStatus.2:target .display ".transportTarget"
   860 write :fetchBlock:item .display ".transportItem"
-    * label *label298
   861 write "Fetching " .display ".status2"
   862 write :fetchBlock:item .display ".item2"
   863 write :fetchBlock:block .display ".block2"
-    * label *label299
   864 sensor *tmp300 :fetchBlock:block @x
   865 sensor *tmp301 :fetchBlock:block @y
   866 set :moveToEmpty:x *tmp300
 
   872 sensor *tmp302 @unit @firstItem
   873 jump *label304 equal *tmp302 null
   874 ucontrol itemDrop @air 1000
-    * label *label303
   875 jump *label302 always
   876 label *label304
-    * label *label301
   877 label *label305
   878 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   879 sensor :fetchBlock:unitItem @unit @firstItem
 
   883 jump *label308 equal *tmp307 false
   884 ucontrol itemDrop @air 1000
   885 label *label308
-    * label *label309
-    * label *label306
   886 sensor *tmp309 @unit :fetchBlock:item
   887 op lessThan *tmp310 *tmp309 30
   888 sensor *tmp311 :fetchBlock:block :fetchBlock:item
   889 op land *tmp312 *tmp310 *tmp311
   890 jump *label305 notEqual *tmp312 false
-    * label *label307
   891 set :depositItems:block .core
   892 set :depositItems:item :fetchBlock:item
   893 setaddr :depositItems*retaddr *label310 (h:*label310)
   894 call *label10 *invalid :depositItems*retval (m:*label310) (h:*label310)
   895 label *label310
-    * label *label297
   896 return :fetchBlock*retaddr
   897 end
   898 label *label19
 
   903 sensor *tmp318 .press @coal
   904 jump *label316 greaterThanEq *tmp318 5
   905 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label318
   906 write "Supplying " .display ".status2"
   907 write @coal .display ".item2"
   908 write .press .display ".block2"
-    * label *label320
   909 sensor :supplyBlock:blockCapacity .press @itemCapacity
   910 sensor *tmp322 .press @coal
   911 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp322
 
   917 call *label12 *invalid :mineOre*retval (m:*label323) (h:*label323)
   918 label *label323
   919 label *label321
-    * label *label322
-    * label *label319
   920 set :supplyBase0:supplied true
   921 label *label316
-    * label *label317
   922 label *label314
-    * label *label315
   923 sensor *tmp326 .core @silicon
   924 jump *label324 greaterThanEq *tmp326 .targetSilicon
   925 sensor *tmp329 .smelter @coal
   926 jump *label326 greaterThanEq *tmp329 5
   927 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label328
   928 write "Supplying " .display ".status2"
   929 write @coal .display ".item2"
   930 write .smelter .display ".block2"
-    * label *label330
   931 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   932 sensor *tmp333 .smelter @coal
   933 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp333
 
   939 call *label12 *invalid :mineOre*retval (m:*label333) (h:*label333)
   940 label *label333
   941 label *label331
-    * label *label332
-    * label *label329
   942 set :supplyBase0:supplied true
   943 jump *label327 always
   944 label *label326
   945 sensor *tmp337 .smelter @sand
   946 jump *label334 greaterThanEq *tmp337 5
   947 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label336
   948 write "Supplying " .display ".status2"
   949 write @sand .display ".item2"
   950 write .smelter .display ".block2"
-    * label *label338
   951 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   952 sensor *tmp341 .smelter @sand
   953 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp341
 
   959 call *label12 *invalid :mineOre*retval (m:*label341) (h:*label341)
   960 label *label341
   961 label *label339
-    * label *label340
-    * label *label337
   962 set :supplyBase0:supplied true
   963 label *label334
-    * label *label335
   964 label *label327
   965 label *label324
-    * label *label325
   966 sensor *tmp345 .battery @totalPower
   967 jump *label342 greaterThanEq *tmp345 .powerTarget
   968 sensor *tmp348 .generator @coal
   969 jump *label344 greaterThanEq *tmp348 2
   970 write "Goal 4: supplying generator" .display ".status1"
-    * label *label346
   971 write "Supplying " .display ".status2"
   972 write @coal .display ".item2"
   973 write .generator .display ".block2"
-    * label *label348
   974 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   975 sensor *tmp352 .generator @coal
   976 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp352
 
   982 call *label12 *invalid :mineOre*retval (m:*label351) (h:*label351)
   983 label *label351
   984 label *label349
-    * label *label350
-    * label *label347
   985 set :supplyBase0:supplied true
   986 label *label344
-    * label *label345
   987 label *label342
-    * label *label343
   988 label *label312
-    * label *label313
   989 set *tmp358 100
   990 sensor *tmp356 .core @titanium
   991 jump *label353 greaterThanEq *tmp356 .targetTitanium
 
  1000 op mul *tmp368 .unloader1 .powerTarget
  1001 jump *label358 greaterThanEq *tmp367 *tmp368
  1002 write "Goal 5: supplying generator" .display ".status1"
-    * label *label360
  1003 set :mineOre.1:ore @coal
  1004 setaddr :mineOre.1*retaddr *label361 (h:*label361)
  1005 call *label13 *invalid :mineOre.1*retval (m:*label361) (h:*label361)
 
  1009 sensor *tmp371 .core @silicon
  1010 jump *label362 greaterThanEq *tmp371 .targetSilicon
  1011 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label364
  1012 sensor :supplyBase0:coal .core @coal
  1013 sensor :supplyBase0:sand .core @sand
  1014 set :mineOre.1:ore @sand
 
  1023 sensor *tmp378 .core @copper
  1024 jump *label368 greaterThanEq *tmp378 .targetCopper
  1025 write "Goal 7: copper requirement" .display ".status1"
-    * label *label370
  1026 set :mineOre.1:ore @copper
  1027 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1028 call *label13 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
 
  1032 sensor *tmp381 .core @lead
  1033 jump *label372 greaterThanEq *tmp381 .targetLead
  1034 write "Goal 8: lead requirement" .display ".status1"
-    * label *label374
  1035 set :mineOre.1:ore @lead
  1036 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1037 call *label13 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
 
  1041 sensor *tmp384 .core @metaglass
  1042 jump *label376 greaterThanEq *tmp384 .targetMetaglass
  1043 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label378
  1044 set :mineOre.1:ore @sand
  1045 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1046 call *label13 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
 
  1048 jump *label377 always
  1049 label *label376
  1050 write "Goal 10: supplying base" .display ".status1"
-    * label *label380
  1051 sensor :supplyBase0:coal.1 .core @coal
  1052 sensor :supplyBase0:sand.1 .core @sand
  1053 set :mineOre.1:ore @sand
 
  1063 label *label363
  1064 label *label359
  1065 label *label356
-    * label *label357
  1066 jump *label355 always
  1067 label *label354
  1068 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label384
  1069 set :fetchBlock:block .titaniumDrill
  1070 set :fetchBlock:item @titanium
  1071 setaddr :fetchBlock*retaddr *label385 (h:*label385)
  1072 call *label14 *invalid :fetchBlock*retval (m:*label385) (h:*label385)
  1073 label *label385
  1074 label *label355
-    * label *label311
  1075 return :supplyBase0*retaddr
  1076 end
  1077 label *label20
  1078 write "Phase 1: supplying base" .display ".status1"
-    * label *label387
  1079 set :mineOre.1:ore @coal
  1080 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1081 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
  1082 label *label388
-    * label *label386
  1083 return :supplyBase1*retaddr
  1084 end
  1085 label *label21
 
  1092 write false .flareController ":start*finished"
  1093 write 3 .flareController "@counter"
  1094 label *label392
-    * label *label393
  1095 label *label390
-    * label *label391
  1096 read *tmp71 .controller ".monos"
  1097 jump *label394 lessThanEq *tmp71 3
  1098 setaddr :supplyBase1*retaddr *label396 (h:*label396)
 
  1104 call *label19 *invalid :supplyBase0*retval (m:*label397) (h:*label397)
  1105 label *label397
  1106 label *label395
-    * label *label389
  1107 return :supplyBase*retaddr
  1108 end
  1109 label *label22
 
  1122 set :targetMet*retval true
  1123 jump *label398 always
  1124 label *label409
-    * label *label410
  1125 label *label407
-    * label *label408
  1126 label *label405
-    * label *label406
  1127 label *label403
-    * label *label404
  1128 label *label401
-    * label *label402
  1129 label *label399
-    * label *label400
  1130 set :targetMet*retval false
  1131 jump *label398 always
  1132 label *label398
  1133 return :targetMet*retaddr
  1134 end
  1135 label *label23
-    * label *label457
  1136 op sign :meetTarget:count :meetTarget:copper
-    * label *label458
-    * label *label461
  1137 op sign *tmp418 :meetTarget:lead
  1138 op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label462
-    * label *label465
  1139 op sign *tmp418 :meetTarget:graphite
  1140 op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label466
-    * label *label469
  1141 op sign *tmp418 :meetTarget:silicon
  1142 op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label470
-    * label *label473
  1143 op sign *tmp418 :meetTarget:titanium
  1144 op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label474
-    * label *label477
  1145 op sign *tmp418 :meetTarget:metaglass
  1146 op add :meetTarget:count :meetTarget:count *tmp418
-    * label *label478
-    * label *label414
  1147 write :meetTarget:count .display ".totalTargets"
  1148 write :meetTarget:block .display ".nextBlock"
  1149 write :meetTarget:copper .display ".targetCopper"
 
  1178 setaddr :supplyBase*retaddr *label425 (h:*label425)
  1179 call *label21 *invalid :supplyBase*retval (m:*label425) (h:*label425)
  1180 label *label425
-    * label *label422
  1181 jump *label421 always
  1182 label *label423
-    * label *label411
  1183 return :meetTarget*retaddr
  1184 end
  1185 label *label24
 
  1187 op sub *tmp429 *tmp88 1
  1188 write *tmp429 bank1 511
  1189 op mul :second:result @second TIME_COMPRESS
-    * label *label427
  1190 op floor *tmp433 :second:result
  1191 op mul *tmp434 *tmp433 1000
  1192 op add *tmp435 :log:encodedId *tmp434
  1193 write *tmp435 bank1 *tmp429
-    * label *label426
  1194 return :log*retaddr
  1195 end
  1196 label *label25
 
  1198 setaddr :log*retaddr *label429 (h:*label429)
  1199 call *label24 *invalid :log*retval (m:*label429) (h:*label429)
  1200 label *label429
-    * label *label428
  1201 return :logBlock*retaddr
  1202 end
  1203 label *label26
 
  1207 call *label7 *invalid :moveTo.1*retval (m:*label431) (h:*label431)
  1208 label *label431
  1209 write "Building..." .display ".status3"
-    * label *label432
  1210 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1211 jump *label433 equal :buildBlockAt:building null
  1212 jump *label435 notEqual :buildBlockAt:type :buildBlockAt:block
  1213 set :buildBlockAt*retval :buildBlockAt:building
  1214 jump *label430 always
  1215 label *label435
-    * label *label436
  1216 jump *label437 equal :buildBlockAt:skipError false
  1217 set :buildBlockAt*retval null
  1218 jump *label430 always
  1219 label *label437
-    * label *label438
  1220 set .ERROR "Cannot build at ("
  1221 stop
-    * label *label439
  1222 label *label433
-    * label *label434
  1223 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1224 wait 0.25
  1225 label *label440
 
  1228 set :buildBlockAt*retval null
  1229 jump *label430 always
  1230 label *label443
-    * label *label444
-    * label *label441
  1231 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label442
  1232 set :logBlock:block :buildBlockAt:block
  1233 setaddr :logBlock*retaddr *label445 (h:*label445)
  1234 call *label25 *invalid :logBlock*retval (m:*label445) (h:*label445)
 
  1258 call *label26 *invalid :buildBlockAt*retval (m:*label448) (h:*label448)
  1259 label *label448
  1260 set :buildBlock*retval :buildBlockAt*retval
-    * label *label446
  1261 return :buildBlock*retaddr
  1262 end
  1263 label *label28
 
  1268 label *label452
  1269 op add :findUnits:count :findUnits:count 1
  1270 ubind :findUnits:type
-    * label *label453
  1271 jump *label452 notEqual @unit :findUnits:firstUnit
-    * label *label454
  1272 label *label450
-    * label *label451
  1273 set :findUnits*retval :findUnits:count
-    * label *label449
  1274 return :findUnits*retaddr
  1275 end
  1276 label *label29
 
  1288 write null .display ".nextBlock"
  1289 write 0 .controller ".leadReserve"
  1290 write 0 .controller ".siliconReserve"
-    * label *label455
  1291 return :buildUnits*retaddr
  1292 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   279 call *label21 *invalid :supplyBase*retval (m:*label109) (h:*label109)
   280 label *label109
   281 sensor *tmp157 *tmp106 @totalPower
-    * jump *label110 greaterThanEq *tmp157 300
-    * jump *label108 always
+  282 jump *label108 lessThan *tmp157 300
   283 label *label110
   284 read *tmp71 *tmp141 ".monos"
   285 jump *label106 lessThan *tmp71 3
 
   497 jump *label187 equal *tmp217 false
   498 ubind .builder
   499 ubind @flare
-    * jump *label189 notEqual @unit null
-    * jump *label188 always
+  500 jump *label188 equal @unit null
   501 label *label189
   502 set :findFreeUnit:first_unit @unit
   503 label *label191
 
   558 label *label209
   559 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   560 read *tmp43 processor4 ".water1X"
-    * jump *label210 greaterThanEq *tmp43 0
-    * jump *label202 always
+  561 jump *label202 lessThan *tmp43 0
   562 label *label210
   563 set :meetTarget:block @water-extractor
   564 set :meetTarget:copper 30
 
   581 call *label26 *invalid :buildBlockAt*retval (m:*label214) (h:*label214)
   582 label *label214
   583 read *tmp45 processor4 ".water2X"
-    * jump *label215 greaterThanEq *tmp45 0
-    * jump *label202 always
+  584 jump *label202 lessThan *tmp45 0
   585 label *label215
   586 set :meetTarget:block @water-extractor
   587 set :meetTarget:copper 30
 
   820 op notEqual *tmp290 :mineOre:item null
   821 op notEqual *tmp291 :mineOre:item :mineOre:ore
   822 op land *tmp292 *tmp290 *tmp291
-    * jump *label289 equal *tmp292 false
-    * jump *label288 always
+  823 jump *label288 notEqual *tmp292 false
   824 label *label289
   825 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label291 lessThanEq @second :mineOre:stop
-    * jump *label288 always
+  826 jump *label288 greaterThan @second :mineOre:stop
   827 label *label291
   828 sensor *tmp296 @unit @totalItems
   829 jump *label286 lessThan *tmp296 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   280 label *label109
   281 sensor *tmp157 *tmp106 @totalPower
   282 jump *label108 lessThan *tmp157 300
-    * label *label110
   283 read *tmp71 *tmp141 ".monos"
   284 jump *label106 lessThan *tmp71 3
   285 label *label108
 
   497 ubind .builder
   498 ubind @flare
   499 jump *label188 equal @unit null
-    * label *label189
   500 set :findFreeUnit:first_unit @unit
   501 label *label191
   502 sensor *tmp222 @unit @controlled
 
   557 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   558 read *tmp43 processor4 ".water1X"
   559 jump *label202 lessThan *tmp43 0
-    * label *label210
   560 set :meetTarget:block @water-extractor
   561 set :meetTarget:copper 30
   562 set :meetTarget:lead 30
 
   579 label *label214
   580 read *tmp45 processor4 ".water2X"
   581 jump *label202 lessThan *tmp45 0
-    * label *label215
   582 set :meetTarget:block @water-extractor
   583 set :meetTarget:copper 30
   584 set :meetTarget:lead 30
 
   817 op notEqual *tmp291 :mineOre:item :mineOre:ore
   818 op land *tmp292 *tmp290 *tmp291
   819 jump *label288 notEqual *tmp292 false
-    * label *label289
   820 ucontrol mine :mineOre:x :mineOre:y
   821 jump *label288 greaterThan @second :mineOre:stop
-    * label *label291
   822 sensor *tmp296 @unit @totalItems
   823 jump *label286 lessThan *tmp296 :mineOre:amount
   824 label *label288

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   983 label *label353
   984 sensor *tmp362 .titaniumDrill @titanium
   985 jump *label354 greaterThanEq *tmp362 *tmp358
-    * jump *label356 notEqual :supplyBase0:supplied false
+  986 jump *label355 notEqual :supplyBase0:supplied false
   987 sensor *tmp367 .battery @totalPower
   988 op mul *tmp368 .unloader1 .powerTarget
   989 jump *label358 greaterThanEq *tmp367 *tmp368
 
   992 setaddr :mineOre.1*retaddr *label361 (h:*label361)
   993 call *label13 *invalid :mineOre.1*retval (m:*label361) (h:*label361)
   994 label *label361
-    * jump *label359 always
+  995 return :supplyBase0*retaddr
   996 label *label358
   997 sensor *tmp371 .core @silicon
   998 jump *label362 greaterThanEq *tmp371 .targetSilicon
 
  1006 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1007 call *label13 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
  1008 label *label367
-    * jump *label363 always
+ 1009 return :supplyBase0*retaddr
  1010 label *label362
  1011 sensor *tmp378 .core @copper
  1012 jump *label368 greaterThanEq *tmp378 .targetCopper
 
  1015 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1016 call *label13 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1017 label *label371
-    * jump *label369 always
+ 1018 return :supplyBase0*retaddr
  1019 label *label368
  1020 sensor *tmp381 .core @lead
  1021 jump *label372 greaterThanEq *tmp381 .targetLead
 
  1024 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1025 call *label13 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
  1026 label *label375
-    * jump *label373 always
+ 1027 return :supplyBase0*retaddr
  1028 label *label372
  1029 sensor *tmp384 .core @metaglass
  1030 jump *label376 greaterThanEq *tmp384 .targetMetaglass
 
  1033 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1034 call *label13 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
  1035 label *label379
-    * jump *label377 always
+ 1036 return :supplyBase0*retaddr
  1037 label *label376
  1038 write "Goal 10: supplying base" .display ".status1"
  1039 sensor :supplyBase0:coal.1 .core @coal
 
  1051 label *label363
  1052 label *label359
  1053 label *label356
-    * jump *label355 always
+ 1054 return :supplyBase0*retaddr
  1055 label *label354
  1056 write "Goal 11: Fetching titanium" .display ".status1"
  1057 set :fetchBlock:block .titaniumDrill
 
  1086 setaddr :supplyBase1*retaddr *label396 (h:*label396)
  1087 call *label20 *invalid :supplyBase1*retval (m:*label396) (h:*label396)
  1088 label *label396
-    * jump *label395 always
+ 1089 return :supplyBase*retaddr
  1090 label *label394
  1091 setaddr :supplyBase0*retaddr *label397 (h:*label397)
  1092 call *label19 *invalid :supplyBase0*retval (m:*label397) (h:*label397)
 
  1108 sensor *tmp414 .core @metaglass
  1109 jump *label409 lessThan *tmp414 .targetMetaglass
  1110 set :targetMet*retval true
-    * jump *label398 always
+ 1111 return :targetMet*retaddr
  1112 label *label409
  1113 label *label407
  1114 label *label405
 
  1116 label *label401
  1117 label *label399
  1118 set :targetMet*retval false
-    * jump *label398 always
+ 1119 return :targetMet*retaddr
  1120 label *label398
  1121 return :targetMet*retaddr
  1122 end
 
  1199 jump *label433 equal :buildBlockAt:building null
  1200 jump *label435 notEqual :buildBlockAt:type :buildBlockAt:block
  1201 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label430 always
+ 1202 return :buildBlockAt*retaddr
  1203 label *label435
  1204 jump *label437 equal :buildBlockAt:skipError false
  1205 set :buildBlockAt*retval null
-    * jump *label430 always
+ 1206 return :buildBlockAt*retaddr
  1207 label *label437
  1208 set .ERROR "Cannot build at ("
  1209 stop
 
  1214 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1215 jump *label443 notEqual :buildBlockAt:building null
  1216 set :buildBlockAt*retval null
-    * jump *label430 always
+ 1217 return :buildBlockAt*retaddr
  1218 label *label443
  1219 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1220 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-47 instructions):
 
    62 label *label42
    63 set *tmp102 :buildBlock*retval
    64 jump *label37 always
-    * multijump *tmp103 0 0 (m:marker0)
-    * multilabel *label41 (m:marker0)
    65 label *label37
    66 set .press *tmp102
    67 op add :buildBlockFromCfg.1:y .coreY 4
 
    75 label *label48
    76 set *tmp106 :buildBlock*retval
    77 jump *label43 always
-    * multijump *tmp107 0 0 (m:marker1)
-    * multilabel *label47 (m:marker1)
    78 label *label43
    79 set .battery *tmp106
    80 op add :buildBlockFromCfg.2:x .coreX -1
 
    84 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
    85 label *label54
    86 jump *label49 always
-    * multijump *tmp111 0 0 (m:marker2)
-    * multilabel *label53 (m:marker2)
    87 label *label49
    88 op add :buildBlockFromCfg.3:y .coreY 3
    89 set :buildBlock:block @combustion-generator
 
    96 label *label60
    97 set *tmp114 :buildBlock*retval
    98 jump *label55 always
-    * multijump *tmp115 0 0 (m:marker3)
-    * multilabel *label59 (m:marker3)
    99 label *label55
   100 set .generator *tmp114
   101 set .powerTarget 400
 
   110 label *label66
   111 set *tmp118 :buildBlock*retval
   112 jump *label61 always
-    * multijump *tmp119 0 0 (m:marker4)
-    * multilabel *label65 (m:marker4)
   113 label *label61
   114 set .smelter *tmp118
   115 set :meetTarget:block @pneumatic-drill
 
   168 label *label80
   169 set *tmp137 :buildBlock*retval
   170 jump *label75 always
-    * multijump *tmp138 0 0 (m:marker5)
-    * multilabel *label79 (m:marker5)
   171 label *label75
   172 set .unloader1 *tmp137
   173 op add :buildBlockFromCfg.6:x .coreX 1
 
   184 label *label86
   185 set *tmp141 :buildBlock*retval
   186 jump *label81 always
-    * multijump *tmp142 0 0 (m:marker6)
-    * multilabel *label85 (m:marker6)
   187 label *label81
   188 set .controller *tmp141
   189 write processor1 *tmp141 ".display"
 
   209 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   210 label *label92
   211 jump *label87 always
-    * multijump *tmp146 0 0 (m:marker7)
-    * multilabel *label91 (m:marker7)
   212 label *label87
   213 set :buildBlock:block @unloader
   214 set :buildBlock:x :buildBlockFromCfg.7:x
 
   222 label *label98
   223 set *tmp149 :buildBlock*retval
   224 jump *label93 always
-    * multijump *tmp150 0 0 (m:marker8)
-    * multilabel *label97 (m:marker8)
   225 label *label93
   226 write *tmp149 *tmp141 ".unloader2"
   227 op add :buildBlockFromCfg.9:x .coreX -3
 
   240 label *label104
   241 set *tmp153 :buildBlock*retval
   242 jump *label99 always
-    * multijump *tmp154 0 0 (m:marker9)
-    * multilabel *label103 (m:marker9)
   243 label *label99
   244 write *tmp153 *tmp141 ".factory"
   245 write *tmp153 processor1 ".factory"
 
   280 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   281 label *label117
   282 jump *label112 always
-    * multijump *tmp162 0 0 (m:marker10)
-    * multilabel *label116 (m:marker10)
   283 label *label112
   284 set :buildBlock:block @junction
   285 set :buildBlock:x :buildBlockFromCfg.10:x
 
   291 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   292 label *label123
   293 jump *label118 always
-    * multijump *tmp166 0 0 (m:marker11)
-    * multilabel *label122 (m:marker11)
   294 label *label118
   295 op add :buildBlockFromCfg.12:x .coreX 3
   296 set :buildBlock:block @inverted-sorter
 
   303 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   304 label *label129
   305 jump *label124 always
-    * multijump *tmp170 0 0 (m:marker12)
-    * multilabel *label128 (m:marker12)
   306 label *label124
   307 op add :buildBlockFromCfg.13:x .coreX 3.5
   308 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   318 label *label135
   319 set *tmp173 :buildBlock*retval
   320 jump *label130 always
-    * multijump *tmp174 0 0 (m:marker13)
-    * multilabel *label134 (m:marker13)
   321 label *label130
   322 write *tmp173 *tmp141 ".kiln"
   323 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   331 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   332 label *label141
   333 jump *label136 always
-    * multijump *tmp178 0 0 (m:marker14)
-    * multilabel *label140 (m:marker14)
   334 label *label136
   335 set :buildBlock:block @overflow-gate
   336 set :buildBlock:x :buildBlockFromCfg.9:x
 
   343 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   344 label *label147
   345 jump *label142 always
-    * multijump *tmp182 0 0 (m:marker15)
-    * multilabel *label146 (m:marker15)
   346 label *label142
   347 set :buildBlock:block @steam-generator
   348 set :buildBlock:x :buildBlockFromCfg.14:x
 
   356 label *label153
   357 set *tmp185 :buildBlock*retval
   358 jump *label148 always
-    * multijump *tmp186 0 0 (m:marker16)
-    * multilabel *label152 (m:marker16)
   359 label *label148
   360 write *tmp185 *tmp141 ".generator2"
   361 set .graphiteSurplus 200
 
   372 label *label159
   373 set *tmp189 :buildBlock*retval
   374 jump *label154 always
-    * multijump *tmp190 0 0 (m:marker17)
-    * multilabel *label158 (m:marker17)
   375 label *label154
   376 write *tmp189 *tmp141 ".payloadRouter"
   377 set :buildBlock:block @unloader
 
   385 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   386 label *label165
   387 jump *label160 always
-    * multijump *tmp194 0 0 (m:marker18)
-    * multilabel *label164 (m:marker18)
   388 label *label160
   389 op add :buildBlockFromCfg.19:y .coreY -3
   390 set :buildBlock:block @underflow-gate
 
   398 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   399 label *label171
   400 jump *label166 always
-    * multijump *tmp198 0 0 (m:marker19)
-    * multilabel *label170 (m:marker19)
   401 label *label166
   402 set :buildBlock:block @additive-reconstructor
   403 set :buildBlock:x .coreX
 
   410 label *label177
   411 set *tmp201 :buildBlock*retval
   412 jump *label172 always
-    * multijump *tmp202 0 0 (m:marker20)
-    * multilabel *label176 (m:marker20)
   413 label *label172
   414 write *tmp201 *tmp141 ".reconstructor"
   415 write *tmp201 processor1 ".reconstructor"
 
   461 jump *label194 notEqual *tmp222 0
   462 ucontrol flag 0
   463 jump *label188 always
-    * jump *label195 always
   464 label *label194
   465 sensor *tmp225 :findFreeUnit:first_unit @dead
   466 jump *label196 notEqual *tmp225 1
 
   658 call *label21 *invalid :supplyBase*retval (m:*label240) (h:*label240)
   659 label *label240
   660 jump *label237 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   661 label *label6
   662 write "Moving..." .display ".status3"
   663 op sub *tmp258 :moveTo:radius 0.5
 
   668 jump *label245 always
   669 label *label247
   670 return :moveTo*retaddr
-    * end
   671 label *label7
   672 set :moveTo:x :moveTo.1:x
   673 set :moveTo:y :moveTo.1:y
 
   676 call *label6 *invalid :moveTo*retval (m:*label249) (h:*label249)
   677 label *label249
   678 return :moveTo.1*retaddr
-    * end
   679 label *label8
   680 write "Moving..." .display ".status3"
   681 label *label252
 
   687 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp264
   688 jump *label252 equal *tmp264 false
   689 return :moveToEmpty*retaddr
-    * end
   690 label *label9
   691 sensor *tmp266 :moveToBlock:block @x
   692 sensor *tmp267 :moveToBlock:block @y
 
   697 call *label6 *invalid :moveTo*retval (m:*label258) (h:*label258)
   698 label *label258
   699 return :moveToBlock*retaddr
-    * end
   700 label *label10
   701 write "Depositing..." .display ".status3"
   702 sensor *tmp268 @unit @firstItem
 
   725 write 0 .display ".transportTarget"
   726 write null .display ".transportItem"
   727 return :depositItems*retaddr
-    * end
   728 label *label11
   729 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp278 0
   730 jump *label272 notEqual *tmp278 false
 
   732 stop
   733 label *label272
   734 return :locateOre*retaddr
-    * end
   735 label *label12
   736 op min :mineOre:amount :mineOre:amount 30
   737 write :mineOre:amount .display ".transportTarget"
 
   776 call *label10 *invalid :depositItems*retval (m:*label293) (h:*label293)
   777 label *label293
   778 return :mineOre*retaddr
-    * end
   779 label *label13
   780 write "Mining " .display ".status2"
   781 write :mineOre.1:ore .display ".item2"
 
   787 call *label12 *invalid :mineOre*retval (m:*label296) (h:*label296)
   788 label *label296
   789 return :mineOre.1*retaddr
-    * end
   790 label *label14
   791 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   792 write :transportStatus.2:target .display ".transportTarget"
 
   827 call *label10 *invalid :depositItems*retval (m:*label310) (h:*label310)
   828 label *label310
   829 return :fetchBlock*retaddr
-    * end
   830 label *label19
   831 set :supplyBase0:supplied false
   832 jump *label312 notEqual .unloader1 null
 
   989 setaddr :mineOre.1*retaddr *label383 (h:*label383)
   990 call *label13 *invalid :mineOre.1*retval (m:*label383) (h:*label383)
   991 label *label383
-    * label *label377
-    * label *label373
-    * label *label369
-    * label *label363
-    * label *label359
-    * label *label356
   992 return :supplyBase0*retaddr
   993 label *label354
   994 write "Goal 11: Fetching titanium" .display ".status1"
 
   999 label *label385
  1000 label *label355
  1001 return :supplyBase0*retaddr
-    * end
  1002 label *label20
  1003 write "Phase 1: supplying base" .display ".status1"
  1004 set :mineOre.1:ore @coal
 
  1006 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
  1007 label *label388
  1008 return :supplyBase1*retaddr
-    * end
  1009 label *label21
  1010 jump *label390 notEqual .flareControllerStarted false
  1011 read *tmp70 .controller ".flares"
 
  1027 setaddr :supplyBase0*retaddr *label397 (h:*label397)
  1028 call *label19 *invalid :supplyBase0*retval (m:*label397) (h:*label397)
  1029 label *label397
-    * label *label395
  1030 return :supplyBase*retaddr
-    * end
  1031 label *label22
  1032 sensor *tmp399 .core @copper
  1033 jump *label399 lessThan *tmp399 .targetCopper
 
  1051 label *label399
  1052 set :targetMet*retval false
  1053 return :targetMet*retaddr
-    * label *label398
-    * return :targetMet*retaddr
-    * end
  1054 label *label23
  1055 op sign :meetTarget:count :meetTarget:copper
  1056 op sign *tmp418 :meetTarget:lead
 
  1100 jump *label421 always
  1101 label *label423
  1102 return :meetTarget*retaddr
-    * end
  1103 label *label24
  1104 read *tmp88 bank1 511
  1105 op sub *tmp429 *tmp88 1
 
  1110 op add *tmp435 :log:encodedId *tmp434
  1111 write *tmp435 bank1 *tmp429
  1112 return :log*retaddr
-    * end
  1113 label *label25
  1114 sensor :log:encodedId :logBlock:block @id
  1115 setaddr :log*retaddr *label429 (h:*label429)
  1116 call *label24 *invalid :log*retval (m:*label429) (h:*label429)
  1117 label *label429
  1118 return :logBlock*retaddr
-    * end
  1119 label *label26
  1120 set :moveTo.1:x :buildBlockAt:x
  1121 set :moveTo.1:y :buildBlockAt:y
 
  1150 call *label25 *invalid :logBlock*retval (m:*label445) (h:*label445)
  1151 label *label445
  1152 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label430
  1153 return :buildBlockAt*retaddr
-    * end
  1154 label *label27
  1155 set :meetTarget:block :buildBlock:block
  1156 set :meetTarget:copper :buildBlock:copper
 
  1173 label *label448
  1174 set :buildBlock*retval :buildBlockAt*retval
  1175 return :buildBlock*retaddr
-    * end
  1176 label *label28
  1177 set :findUnits:count 0
  1178 ubind :findUnits:type
 
  1185 label *label450
  1186 set :findUnits*retval :findUnits:count
  1187 return :findUnits*retaddr
-    * end
  1188 label *label29
  1189 set :meetTarget:block 0
  1190 set :meetTarget:copper 0
 
  1201 write 0 .controller ".leadReserve"
  1202 write 0 .controller ".siliconReserve"
  1203 return :buildUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   466 jump *label196 notEqual *tmp225 1
   467 set :findFreeUnit:first_unit @unit
   468 label *label196
-    * label *label195
   469 ubind @flare
   470 jump *label191 notEqual :findFreeUnit:first_unit @unit
   471 label *label188

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-21 instructions):
 
    61 call *label27 *invalid :buildBlock*retval (m:*label42) (h:*label42)
    62 label *label42
    63 set *tmp102 :buildBlock*retval
-    * jump *label37 always
    64 label *label37
    65 set .press *tmp102
    66 op add :buildBlockFromCfg.1:y .coreY 4
 
    73 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    74 label *label48
    75 set *tmp106 :buildBlock*retval
-    * jump *label43 always
    76 label *label43
    77 set .battery *tmp106
    78 op add :buildBlockFromCfg.2:x .coreX -1
 
    81 setaddr :buildBlock*retaddr *label54 (h:*label54)
    82 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
    83 label *label54
-    * jump *label49 always
    84 label *label49
    85 op add :buildBlockFromCfg.3:y .coreY 3
    86 set :buildBlock:block @combustion-generator
 
    92 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
    93 label *label60
    94 set *tmp114 :buildBlock*retval
-    * jump *label55 always
    95 label *label55
    96 set .generator *tmp114
    97 set .powerTarget 400
 
   105 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   106 label *label66
   107 set *tmp118 :buildBlock*retval
-    * jump *label61 always
   108 label *label61
   109 set .smelter *tmp118
   110 set :meetTarget:block @pneumatic-drill
 
   162 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   163 label *label80
   164 set *tmp137 :buildBlock*retval
-    * jump *label75 always
   165 label *label75
   166 set .unloader1 *tmp137
   167 op add :buildBlockFromCfg.6:x .coreX 1
 
   177 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)
   178 label *label86
   179 set *tmp141 :buildBlock*retval
-    * jump *label81 always
   180 label *label81
   181 set .controller *tmp141
   182 write processor1 *tmp141 ".display"
 
   201 setaddr :buildBlock*retaddr *label92 (h:*label92)
   202 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   203 label *label92
-    * jump *label87 always
   204 label *label87
   205 set :buildBlock:block @unloader
   206 set :buildBlock:x :buildBlockFromCfg.7:x
 
   213 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   214 label *label98
   215 set *tmp149 :buildBlock*retval
-    * jump *label93 always
   216 label *label93
   217 write *tmp149 *tmp141 ".unloader2"
   218 op add :buildBlockFromCfg.9:x .coreX -3
 
   230 call *label27 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   231 label *label104
   232 set *tmp153 :buildBlock*retval
-    * jump *label99 always
   233 label *label99
   234 write *tmp153 *tmp141 ".factory"
   235 write *tmp153 processor1 ".factory"
 
   269 setaddr :buildBlock*retaddr *label117 (h:*label117)
   270 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   271 label *label117
-    * jump *label112 always
   272 label *label112
   273 set :buildBlock:block @junction
   274 set :buildBlock:x :buildBlockFromCfg.10:x
 
   279 setaddr :buildBlock*retaddr *label123 (h:*label123)
   280 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   281 label *label123
-    * jump *label118 always
   282 label *label118
   283 op add :buildBlockFromCfg.12:x .coreX 3
   284 set :buildBlock:block @inverted-sorter
 
   290 setaddr :buildBlock*retaddr *label129 (h:*label129)
   291 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   292 label *label129
-    * jump *label124 always
   293 label *label124
   294 op add :buildBlockFromCfg.13:x .coreX 3.5
   295 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   304 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)
   305 label *label135
   306 set *tmp173 :buildBlock*retval
-    * jump *label130 always
   307 label *label130
   308 write *tmp173 *tmp141 ".kiln"
   309 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   316 setaddr :buildBlock*retaddr *label141 (h:*label141)
   317 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   318 label *label141
-    * jump *label136 always
   319 label *label136
   320 set :buildBlock:block @overflow-gate
   321 set :buildBlock:x :buildBlockFromCfg.9:x
 
   327 setaddr :buildBlock*retaddr *label147 (h:*label147)
   328 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   329 label *label147
-    * jump *label142 always
   330 label *label142
   331 set :buildBlock:block @steam-generator
   332 set :buildBlock:x :buildBlockFromCfg.14:x
 
   339 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   340 label *label153
   341 set *tmp185 :buildBlock*retval
-    * jump *label148 always
   342 label *label148
   343 write *tmp185 *tmp141 ".generator2"
   344 set .graphiteSurplus 200
 
   354 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   355 label *label159
   356 set *tmp189 :buildBlock*retval
-    * jump *label154 always
   357 label *label154
   358 write *tmp189 *tmp141 ".payloadRouter"
   359 set :buildBlock:block @unloader
 
   366 setaddr :buildBlock*retaddr *label165 (h:*label165)
   367 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   368 label *label165
-    * jump *label160 always
   369 label *label160
   370 op add :buildBlockFromCfg.19:y .coreY -3
   371 set :buildBlock:block @underflow-gate
 
   378 setaddr :buildBlock*retaddr *label171 (h:*label171)
   379 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   380 label *label171
-    * jump *label166 always
   381 label *label166
   382 set :buildBlock:block @additive-reconstructor
   383 set :buildBlock:x .coreX
 
   389 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   390 label *label177
   391 set *tmp201 :buildBlock*retval
-    * jump *label172 always
   392 label *label172
   393 write *tmp201 *tmp141 ".reconstructor"
   394 write *tmp201 processor1 ".reconstructor"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    61 call *label27 *invalid :buildBlock*retval (m:*label42) (h:*label42)
    62 label *label42
    63 set *tmp102 :buildBlock*retval
-    * label *label37
    64 set .press *tmp102
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
 
    72 call *label27 *invalid :buildBlock*retval (m:*label48) (h:*label48)
    73 label *label48
    74 set *tmp106 :buildBlock*retval
-    * label *label43
    75 set .battery *tmp106
    76 op add :buildBlockFromCfg.2:x .coreX -1
    77 set :buildBlock:x :buildBlockFromCfg.2:x
 
    79 setaddr :buildBlock*retaddr *label54 (h:*label54)
    80 call *label27 *invalid :buildBlock*retval (m:*label54) (h:*label54)
    81 label *label54
-    * label *label49
    82 op add :buildBlockFromCfg.3:y .coreY 3
    83 set :buildBlock:block @combustion-generator
    84 set :buildBlock:x .coreX
 
    89 call *label27 *invalid :buildBlock*retval (m:*label60) (h:*label60)
    90 label *label60
    91 set *tmp114 :buildBlock*retval
-    * label *label55
    92 set .generator *tmp114
    93 set .powerTarget 400
    94 op add :buildBlockFromCfg.4:x .coreX 1.5
 
   101 call *label27 *invalid :buildBlock*retval (m:*label66) (h:*label66)
   102 label *label66
   103 set *tmp118 :buildBlock*retval
-    * label *label61
   104 set .smelter *tmp118
   105 set :meetTarget:block @pneumatic-drill
   106 set :meetTarget:copper 18
 
   157 call *label27 *invalid :buildBlock*retval (m:*label80) (h:*label80)
   158 label *label80
   159 set *tmp137 :buildBlock*retval
-    * label *label75
   160 set .unloader1 *tmp137
   161 op add :buildBlockFromCfg.6:x .coreX 1
   162 set :buildBlock:block @micro-processor
 
   171 call *label27 *invalid :buildBlock*retval (m:*label86) (h:*label86)
   172 label *label86
   173 set *tmp141 :buildBlock*retval
-    * label *label81
   174 set .controller *tmp141
   175 write processor1 *tmp141 ".display"
   176 write .core *tmp141 ".core"
 
   194 setaddr :buildBlock*retaddr *label92 (h:*label92)
   195 call *label27 *invalid :buildBlock*retval (m:*label92) (h:*label92)
   196 label *label92
-    * label *label87
   197 set :buildBlock:block @unloader
   198 set :buildBlock:x :buildBlockFromCfg.7:x
   199 set :buildBlock:y .coreY
 
   205 call *label27 *invalid :buildBlock*retval (m:*label98) (h:*label98)
   206 label *label98
   207 set *tmp149 :buildBlock*retval
-    * label *label93
   208 write *tmp149 *tmp141 ".unloader2"
   209 op add :buildBlockFromCfg.9:x .coreX -3
   210 op add :buildBlockFromCfg.9:y .coreY -2
 
   221 call *label27 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   222 label *label104
   223 set *tmp153 :buildBlock*retval
-    * label *label99
   224 write *tmp153 *tmp141 ".factory"
   225 write *tmp153 processor1 ".factory"
   226 write 1 *tmp141 ".flareTarget"
 
   259 setaddr :buildBlock*retaddr *label117 (h:*label117)
   260 call *label27 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   261 label *label117
-    * label *label112
   262 set :buildBlock:block @junction
   263 set :buildBlock:x :buildBlockFromCfg.10:x
   264 set :buildBlock:y .coreY
 
   268 setaddr :buildBlock*retaddr *label123 (h:*label123)
   269 call *label27 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   270 label *label123
-    * label *label118
   271 op add :buildBlockFromCfg.12:x .coreX 3
   272 set :buildBlock:block @inverted-sorter
   273 set :buildBlock:x :buildBlockFromCfg.12:x
 
   278 setaddr :buildBlock*retaddr *label129 (h:*label129)
   279 call *label27 *invalid :buildBlock*retval (m:*label129) (h:*label129)
   280 label *label129
-    * label *label124
   281 op add :buildBlockFromCfg.13:x .coreX 3.5
   282 op add :buildBlockFromCfg.13:y .coreY 1.5
   283 set :buildBlock:block @kiln
 
   291 call *label27 *invalid :buildBlock*retval (m:*label135) (h:*label135)
   292 label *label135
   293 set *tmp173 :buildBlock*retval
-    * label *label130
   294 write *tmp173 *tmp141 ".kiln"
   295 op add :buildBlockFromCfg.14:x .coreX -3.5
   296 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   302 setaddr :buildBlock*retaddr *label141 (h:*label141)
   303 call *label27 *invalid :buildBlock*retval (m:*label141) (h:*label141)
   304 label *label141
-    * label *label136
   305 set :buildBlock:block @overflow-gate
   306 set :buildBlock:x :buildBlockFromCfg.9:x
   307 set :buildBlock:y .coreY
 
   312 setaddr :buildBlock*retaddr *label147 (h:*label147)
   313 call *label27 *invalid :buildBlock*retval (m:*label147) (h:*label147)
   314 label *label147
-    * label *label142
   315 set :buildBlock:block @steam-generator
   316 set :buildBlock:x :buildBlockFromCfg.14:x
   317 set :buildBlock:y :buildBlockFromCfg.13:y
 
   323 call *label27 *invalid :buildBlock*retval (m:*label153) (h:*label153)
   324 label *label153
   325 set *tmp185 :buildBlock*retval
-    * label *label148
   326 write *tmp185 *tmp141 ".generator2"
   327 set .graphiteSurplus 200
   328 op add :buildBlockFromCfg.17:y .coreY -5
 
   337 call *label27 *invalid :buildBlock*retval (m:*label159) (h:*label159)
   338 label *label159
   339 set *tmp189 :buildBlock*retval
-    * label *label154
   340 write *tmp189 *tmp141 ".payloadRouter"
   341 set :buildBlock:block @unloader
   342 set :buildBlock:x .coreX
 
   348 setaddr :buildBlock*retaddr *label165 (h:*label165)
   349 call *label27 *invalid :buildBlock*retval (m:*label165) (h:*label165)
   350 label *label165
-    * label *label160
   351 op add :buildBlockFromCfg.19:y .coreY -3
   352 set :buildBlock:block @underflow-gate
   353 set :buildBlock:x .coreX
 
   359 setaddr :buildBlock*retaddr *label171 (h:*label171)
   360 call *label27 *invalid :buildBlock*retval (m:*label171) (h:*label171)
   361 label *label171
-    * label *label166
   362 set :buildBlock:block @additive-reconstructor
   363 set :buildBlock:x .coreX
   364 set :buildBlock:y :buildBlockFromCfg.17:y
 
   369 call *label27 *invalid :buildBlock*retval (m:*label177) (h:*label177)
   370 label *label177
   371 set *tmp201 :buildBlock*retval
-    * label *label172
   372 write *tmp201 *tmp141 ".reconstructor"
   373 write *tmp201 processor1 ".reconstructor"
   374 setaddr :buildUnits*retaddr *label178 (h:*label178)

Final code before resolving virtual instructions:

    0:  jump *label482 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 processor5
    2:  draw triangle TIME_COMPRESS .ERROR .battery .builder .controller .core
    3:  draw triangle .coreX .coreY .display .flareController .flareControllerStarted .generator
    4:  draw triangle .graphiteSurplus .leadSurplus .metaglassSurplus .powerTarget .press .siliconSurplus
    5:  draw triangle .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass .targetSilicon
    6:  draw triangle .targetTitanium .titaniumDrill .unloader1 :flares :monos :polys
    7:  draw triangle :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass
    8:  draw triangle :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockAt:block
    9:  draw triangle :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x
   10:  draw triangle :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x :buildBlockFromCfg.9:x :buildBlockFromCfg.13:x
   11:  draw triangle :buildBlockFromCfg.4:x :buildBlockFromCfg.12:x :buildBlockFromCfg.7:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y
   12:  draw triangle :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg.9:y :buildBlockFromCfg:y :buildBlockFromCfg.13:y :buildBlockFromCfg.17:y
   13:  draw triangle :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y :buildBlockFromCfg.19:y :buildThoriumDrill:result :buildThoriumDrill:thoriumDrill :buildThoriumDrill:thoriumGenerator
   14:  draw triangle :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item
   15:  draw triangle :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem :findFreeUnit:first_unit :findUnits:count :findUnits:firstUnit
   16:  draw triangle :findUnits:type :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block
   17:  draw triangle :meetTarget:block :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass
   18:  draw triangle :meetTarget:silicon :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore
        label *label482
   19:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   20:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   21:  set .press null                                              CoreBuilder.mnd: var
   22:  set .generator null                                          ...
   23:  set .battery null                                            ...
   24:  set .smelter null                                            ...
   25:  set .titaniumDrill null                                      ...
   26:  set .unloader1 null                                          ...
   27:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   28:  set .graphiteSurplus 20                                      ...
   29:  set .siliconSurplus 20                                       ...
   30:  set .metaglassSurplus 20                                     ...
   31:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   32:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label30                                               CoreBuilder.mnd: do
   33:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   34:  set .builder @unit                                           ...
   35:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   36:  jump *label30 equal .core null                               CoreBuilder.mnd: do
   37:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   38:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   39:  write .core processor5 ":startPolyController:aCore"          CoreBuilder.mnd: polyController.startPolyController(core, @unit);
   40:  write @unit processor5 ":startPolyController:aBuilder"       ...
   41:  write false processor5 ":startPolyController*finished"       ...
   42:  write 1 processor5 "@counter"                                ...
        label *label33                                               ...
   43:  wait 1e-15                                                   ...
   44:  read *tmp95 processor5 ":startPolyController*finished"       ...
   45:  jump *label33 equal *tmp95 false                             ...
   46:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.displayFlares);
   47:  setaddr :findUnits*retaddr *label34                          ...
   48:  call *label28 *invalid :findUnits*retval                     ...
        label *label34                                               ...
   49:  write :findUnits:count processor1 ".displayFlares"           ...
   50:  set :flares :findUnits*retval                                ...
   51:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.displayMonos);
   52:  setaddr :findUnits*retaddr *label35                          ...
   53:  call *label28 *invalid :findUnits*retval                     ...
        label *label35                                               ...
   54:  write :findUnits:count processor1 ".displayMonos"            ...
   55:  set :monos :findUnits*retval                                 ...
   56:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.displayPolys);
   57:  setaddr :findUnits*retaddr *label36                          ...
   58:  call *label28 *invalid :findUnits*retval                     ...
        label *label36                                               ...
   59:  write :findUnits:count processor1 ".displayPolys"            ...
   60:  set :polys :findUnits*retval                                 ...
   61:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   62:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   63:  set :buildBlock:block @graphite-press                        ...
   64:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   65:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   66:  set :buildBlock:copper 75                                    ...
   67:  set :buildBlock:lead 30                                      ...
   68:  set :buildBlock:graphite 0                                   ...
   69:  set :buildBlock:silicon 0                                    ...
   70:  set :buildBlock:titanium 0                                   ...
   71:  set :buildBlock:metaglass 0                                  ...
   72:  set :buildBlock:rotation 0                                   ...
   73:  set :buildBlock:config null                                  ...
   74:  setaddr :buildBlock*retaddr *label42                         ...
   75:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label42                                               ...
   76:  set *tmp102 :buildBlock*retval                               ...
   77:  set .press *tmp102                                           CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   78:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   79:  set :buildBlock:block @battery                               ...
   80:  set :buildBlock:x .coreX                                     ...
   81:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   82:  set :buildBlock:copper 5                                     ...
   83:  set :buildBlock:lead 20                                      ...
   84:  setaddr :buildBlock*retaddr *label48                         ...
   85:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label48                                               ...
   86:  set *tmp106 :buildBlock*retval                               ...
   87:  set .battery *tmp106                                         CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   88:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   89:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   90:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   91:  setaddr :buildBlock*retaddr *label54                         ...
   92:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label54                                               ...
   93:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   94:  set :buildBlock:block @combustion-generator                  ...
   95:  set :buildBlock:x .coreX                                     ...
   96:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   97:  set :buildBlock:copper 25                                    ...
   98:  set :buildBlock:lead 15                                      ...
   99:  setaddr :buildBlock*retaddr *label60                         ...
  100:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label60                                               ...
  101:  set *tmp114 :buildBlock*retval                               ...
  102:  set .generator *tmp114                                       CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
  103:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
  104:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  105:  set :buildBlock:block @silicon-smelter                       ...
  106:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  107:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  108:  set :buildBlock:copper 30                                    ...
  109:  set :buildBlock:lead 25                                      ...
  110:  setaddr :buildBlock*retaddr *label66                         ...
  111:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label66                                               ...
  112:  set *tmp118 :buildBlock*retval                               ...
  113:  set .smelter *tmp118                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  114:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  115:  set :meetTarget:copper 18                                    ...
  116:  set :meetTarget:lead 0                                       ...
  117:  set :meetTarget:graphite 10                                  ...
  118:  set :meetTarget:silicon 0                                    ...
  119:  set :meetTarget:titanium 0                                   ...
  120:  set :meetTarget:metaglass 0                                  ...
  121:  setaddr :meetTarget*retaddr *label69                         ...
  122:  call *label23 *invalid :meetTarget*retval                    ...
        label *label69                                               ...
  123:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  124:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  125:  write .coreY processor4 ":findDrillLocation:y"               ...
  126:  write @unit processor4 ":findDrillLocation:unit"             ...
  127:  write @titanium processor4 ":findDrillLocation:item"         ...
  128:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  129:  write false processor4 ":findDrillLocation:large"            ...
  130:  write 4 processor4 ":findDrillLocation:limit"                ...
  131:  write false processor4 ":findDrillLocation*finished"         ...
  132:  write 1 processor4 "@counter"                                ...
        label *label70                                               ...
  133:  wait 1e-15                                                   ...
  134:  read *tmp133 processor4 ":findDrillLocation*finished"        ...
  135:  jump *label70 equal *tmp133 false                            ...
  136:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  137:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  138:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  139:  jump *label71 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  140:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  141:  stop                                                         Actions.mnd: stopProcessor();
        label *label71                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  142:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  143:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  144:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  145:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  146:  set :buildBlockAt:rotation null                              ...
  147:  set :buildBlockAt:config 0                                   ...
  148:  set :buildBlockAt:skipError false                            ...
  149:  setaddr :buildBlockAt*retaddr *label74                       ...
  150:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label74                                               ...
  151:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  152:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  153:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  154:  set :buildBlock:block @unloader                              ...
  155:  set :buildBlock:x .coreX                                     ...
  156:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  157:  set :buildBlock:copper 0                                     ...
  158:  set :buildBlock:lead 0                                       ...
  159:  set :buildBlock:silicon 30                                   ...
  160:  set :buildBlock:titanium 25                                  ...
  161:  setaddr :buildBlock*retaddr *label80                         ...
  162:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label80                                               ...
  163:  set *tmp137 :buildBlock*retval                               ...
  164:  set .unloader1 *tmp137                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  165:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  166:  set :buildBlock:block @micro-processor                       ...
  167:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  168:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  169:  set :buildBlock:copper 90                                    ...
  170:  set :buildBlock:lead 50                                      ...
  171:  set :buildBlock:silicon 50                                   ...
  172:  set :buildBlock:titanium 0                                   ...
  173:  setaddr :buildBlock*retaddr *label86                         ...
  174:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  175:  call *label27 *invalid :buildBlock*retval                    ...
        label *label86                                               ...
  176:  set *tmp141 :buildBlock*retval                               ...
  177:  set .controller *tmp141                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  178:  write processor1 *tmp141 ".display"                          CoreBuilder.mnd: controller.display = display;
  179:  write .core *tmp141 ".core"                                  CoreBuilder.mnd: controller.core = core;
  180:  write bank1 *tmp141 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  181:  write *tmp106 *tmp141 ".battery"                             CoreBuilder.mnd: controller.battery = battery;
  182:  write *tmp114 *tmp141 ".generator"                           CoreBuilder.mnd: controller.generator = generator;
  183:  write *tmp118 *tmp141 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  184:  write *tmp102 *tmp141 ".press"                               CoreBuilder.mnd: controller.press = press;
  185:  write :monos *tmp141 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  186:  write :flares *tmp141 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  187:  write :polys *tmp141 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  188:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  189:  op add :buildBlockFromCfg.7:y .coreY 1                       ...
  190:  set :buildBlock:block @power-node                            ...
  191:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  192:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  193:  set :buildBlock:copper 2                                     ...
  194:  set :buildBlock:lead 6                                       ...
  195:  set :buildBlock:silicon 0                                    ...
  196:  set :buildBlock:config null                                  ...
  197:  setaddr :buildBlock*retaddr *label92                         ...
  198:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label92                                               ...
  199:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  200:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  201:  set :buildBlock:y .coreY                                     ...
  202:  set :buildBlock:copper 0                                     ...
  203:  set :buildBlock:lead 0                                       ...
  204:  set :buildBlock:silicon 30                                   ...
  205:  set :buildBlock:titanium 25                                  ...
  206:  setaddr :buildBlock*retaddr *label98                         ...
  207:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label98                                               ...
  208:  set *tmp149 :buildBlock*retval                               ...
  209:  write *tmp149 *tmp141 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(ref UNLOADER2);
  210:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  211:  op add :buildBlockFromCfg.9:y .coreY -2                      ...
  212:  set :buildBlock:block @air-factory                           ...
  213:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  214:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  215:  set :buildBlock:copper 60                                    ...
  216:  set :buildBlock:lead 70                                      ...
  217:  set :buildBlock:silicon 0                                    ...
  218:  set :buildBlock:titanium 0                                   ...
  219:  set :buildBlock:rotation 3                                   ...
  220:  set :buildBlock:config @mono                                 ...
  221:  setaddr :buildBlock*retaddr *label104                        ...
  222:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label104                                              ...
  223:  set *tmp153 :buildBlock*retval                               ...
  224:  write *tmp153 *tmp141 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  225:  write *tmp153 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  226:  write 1 *tmp141 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 1;
  227:  write 3 *tmp141 ".monoTarget"                                CoreBuilder.mnd: controller.monoTarget = 3;
  228:  write 0 *tmp141 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 0;
  229:  write 85 *tmp141 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  230:  write 150 *tmp141 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  231:  write 30 *tmp141 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  232:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  233:  set .siliconSurplus 20                                       ...
  234:  setaddr :buildUnits*retaddr *label105                        CoreBuilder.mnd: buildUnits();
  235:  call *label29 *invalid :buildUnits*retval                    ...
        label *label105                                              ...
        label *label106                                              CoreBuilder.mnd: do
  236:  setaddr :supplyBase*retaddr *label109                        CoreBuilder.mnd: supplyBase();
  237:  call *label21 *invalid :supplyBase*retval                    ...
        label *label109                                              ...
  238:  sensor *tmp157 *tmp106 @totalPower                           CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  239:  jump *label108 lessThan *tmp157 300                          ...
  240:  read *tmp71 *tmp141 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  241:  jump *label106 lessThan *tmp71 3                             CoreBuilder.mnd: do
        label *label108                                              ...
  242:  set .graphiteSurplus 60                                      CoreBuilder.mnd: graphiteSurplus = 60;
  243:  set .siliconSurplus 100                                      CoreBuilder.mnd: siliconSurplus = 100;
  244:  set .metaglassSurplus 60                                     CoreBuilder.mnd: metaglassSurplus = 60;
  245:  op add :buildBlockFromCfg.10:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  246:  set :buildBlock:block @unloader                              ...
  247:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  248:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  249:  set :buildBlock:copper 0                                     ...
  250:  set :buildBlock:lead 0                                       ...
  251:  set :buildBlock:silicon 30                                   ...
  252:  set :buildBlock:titanium 25                                  ...
  253:  set :buildBlock:rotation 0                                   ...
  254:  set :buildBlock:config null                                  ...
  255:  setaddr :buildBlock*retaddr *label117                        ...
  256:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label117                                              ...
  257:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  258:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  259:  set :buildBlock:y .coreY                                     ...
  260:  set :buildBlock:copper 3                                     ...
  261:  set :buildBlock:silicon 0                                    ...
  262:  set :buildBlock:titanium 0                                   ...
  263:  setaddr :buildBlock*retaddr *label123                        ...
  264:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label123                                              ...
  265:  op add :buildBlockFromCfg.12:x .coreX 3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  266:  set :buildBlock:block @inverted-sorter                       ...
  267:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  268:  set :buildBlock:y .coreY                                     ...
  269:  set :buildBlock:copper 2                                     ...
  270:  set :buildBlock:lead 2                                       ...
  271:  set :buildBlock:config @metaglass                            ...
  272:  setaddr :buildBlock*retaddr *label129                        ...
  273:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label129                                              ...
  274:  op add :buildBlockFromCfg.13:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  275:  op add :buildBlockFromCfg.13:y .coreY 1.5                    ...
  276:  set :buildBlock:block @kiln                                  ...
  277:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  278:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  279:  set :buildBlock:copper 60                                    ...
  280:  set :buildBlock:lead 30                                      ...
  281:  set :buildBlock:graphite 30                                  ...
  282:  set :buildBlock:config null                                  ...
  283:  setaddr :buildBlock*retaddr *label135                        ...
  284:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label135                                              ...
  285:  set *tmp173 :buildBlock*retval                               ...
  286:  write *tmp173 *tmp141 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  287:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  288:  op add :buildBlockFromCfg.14:y .coreY 3.5                    ...
  289:  set :buildBlock:block @water-extractor                       ...
  290:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  291:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  292:  set :buildBlock:copper 30                                    ...
  293:  set :buildBlock:metaglass 30                                 ...
  294:  setaddr :buildBlock*retaddr *label141                        ...
  295:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label141                                              ...
  296:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  297:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  298:  set :buildBlock:y .coreY                                     ...
  299:  set :buildBlock:copper 4                                     ...
  300:  set :buildBlock:lead 2                                       ...
  301:  set :buildBlock:graphite 0                                   ...
  302:  set :buildBlock:metaglass 0                                  ...
  303:  setaddr :buildBlock*retaddr *label147                        ...
  304:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label147                                              ...
  305:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  306:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  307:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  308:  set :buildBlock:copper 35                                    ...
  309:  set :buildBlock:lead 40                                      ...
  310:  set :buildBlock:graphite 25                                  ...
  311:  set :buildBlock:silicon 30                                   ...
  312:  setaddr :buildBlock*retaddr *label153                        ...
  313:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label153                                              ...
  314:  set *tmp185 :buildBlock*retval                               ...
  315:  write *tmp185 *tmp141 ".generator2"                          CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(ref STEAM_GEN);
  316:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  317:  op add :buildBlockFromCfg.17:y .coreY -5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  318:  set :buildBlock:block @payload-router                        ...
  319:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  320:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  321:  set :buildBlock:copper 10                                    ...
  322:  set :buildBlock:lead 0                                       ...
  323:  set :buildBlock:graphite 15                                  ...
  324:  set :buildBlock:silicon 0                                    ...
  325:  setaddr :buildBlock*retaddr *label159                        ...
  326:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label159                                              ...
  327:  set *tmp189 :buildBlock*retval                               ...
  328:  write *tmp189 *tmp141 ".payloadRouter"                       CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(ref PAYLOAD_ROUTER);
  329:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  330:  set :buildBlock:x .coreX                                     ...
  331:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  332:  set :buildBlock:copper 0                                     ...
  333:  set :buildBlock:graphite 0                                   ...
  334:  set :buildBlock:silicon 30                                   ...
  335:  set :buildBlock:titanium 25                                  ...
  336:  setaddr :buildBlock*retaddr *label165                        ...
  337:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label165                                              ...
  338:  op add :buildBlockFromCfg.19:y .coreY -3                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  339:  set :buildBlock:block @underflow-gate                        ...
  340:  set :buildBlock:x .coreX                                     ...
  341:  set :buildBlock:y :buildBlockFromCfg.19:y                    ...
  342:  set :buildBlock:copper 4                                     ...
  343:  set :buildBlock:lead 2                                       ...
  344:  set :buildBlock:silicon 0                                    ...
  345:  set :buildBlock:titanium 0                                   ...
  346:  setaddr :buildBlock*retaddr *label171                        ...
  347:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label171                                              ...
  348:  set :buildBlock:block @additive-reconstructor                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  349:  set :buildBlock:x .coreX                                     ...
  350:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  351:  set :buildBlock:copper 200                                   ...
  352:  set :buildBlock:lead 120                                     ...
  353:  set :buildBlock:silicon 90                                   ...
  354:  setaddr :buildBlock*retaddr *label177                        ...
  355:  call *label27 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label177                                              ...
  356:  set *tmp201 :buildBlock*retval                               ...
  357:  write *tmp201 *tmp141 ".reconstructor"                       CoreBuilder.mnd: controller.reconstructor = reconstructor;
  358:  write *tmp201 processor1 ".reconstructor"                    CoreBuilder.mnd: display.reconstructor = reconstructor;
  359:  setaddr :buildUnits*retaddr *label178                        CoreBuilder.mnd: buildUnits();
  360:  call *label29 *invalid :buildUnits*retval                    ...
        label *label178                                              ...
  361:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  362:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  363:  write 3 *tmp141 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 3;
        label *label179                                              CoreBuilder.mnd: while controller.polys < 3 do
  364:  read *tmp72 *tmp141 ".polys"                                 ...
  365:  jump *label181 greaterThanEq *tmp72 3                        ...
  366:  setaddr :supplyBase*retaddr *label182                        CoreBuilder.mnd: supplyBase();
  367:  call *label21 *invalid :supplyBase*retval                    ...
        label *label182                                              ...
  368:  jump *label179 always 0 0                                    CoreBuilder.mnd: while controller.polys < 3 do
        label *label181                                              ...
  369:  write 8 *tmp141 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 8;
  370:  write 6 *tmp141 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 6;
        label *label183                                              CoreBuilder.mnd: while controller.flares < 2 do
  371:  read *tmp70 *tmp141 ".flares"                                ...
  372:  jump *label185 greaterThanEq *tmp70 2                        ...
  373:  setaddr :supplyBase*retaddr *label186                        CoreBuilder.mnd: supplyBase();
  374:  call *label21 *invalid :supplyBase*retval                    ...
        label *label186                                              ...
  375:  jump *label183 always 0 0                                    CoreBuilder.mnd: while controller.flares < 2 do
        label *label185                                              ...
  376:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  377:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  378:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 1e9);
  379:  write .coreY processor4 ":findDrillLocation:y"               ...
  380:  write @unit processor4 ":findDrillLocation:unit"             ...
  381:  write @titanium processor4 ":findDrillLocation:item"         ...
  382:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  383:  write false processor4 ":findDrillLocation:large"            ...
  384:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  385:  write false processor4 ":findDrillLocation*finished"         ...
  386:  write 1 processor4 "@counter"                                ...
        label *label187                                              ...
  387:  wait 1e-15                                                   ...
  388:  read *tmp217 processor4 ":findDrillLocation*finished"        ...
  389:  jump *label187 equal *tmp217 false                           ...
  390:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  391:  ubind @flare                                                 *units: ubind(unit_type);
  392:  jump *label188 equal @unit null                              *units: if @unit == null then return null; end;
  393:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label191                                              *units: do
  394:  sensor *tmp222 @unit @controlled                             *units: if @unit.@controlled == 0 then
  395:  jump *label194 notEqual *tmp222 0                            ...
  396:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  397:  jump *label188 always 0 0                                    *units: return @unit;
        label *label194                                              *units: if @unit.@controlled == 0 then
  398:  sensor *tmp225 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  399:  jump *label196 notEqual *tmp225 1                            ...
  400:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label196                                              *units: elsif first_unit.@dead == 1 then
  401:  ubind @flare                                                 *units: ubind(unit_type);
  402:  jump *label191 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label188                                              CoreBuilder.mnd: findFreeUnit(@flare, 0);
  403:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  404:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  405:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  406:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  407:  write false processor4 ":layoutThoriumDrill*finished"        ...
  408:  write 2 processor4 "@counter"                                ...
  409:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label198                                              CoreBuilder.mnd: do
  410:  setaddr :supplyBase*retaddr *label201                        CoreBuilder.mnd: supplyBase();
  411:  call *label21 *invalid :supplyBase*retval                    ...
        label *label201                                              ...
  412:  read *tmp234 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  413:  jump *label198 equal *tmp234 false                           CoreBuilder.mnd: do
  414:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  415:  set :meetTarget:copper 35                                    ...
  416:  set :meetTarget:lead 0                                       ...
  417:  set :meetTarget:graphite 30                                  ...
  418:  set :meetTarget:silicon 30                                   ...
  419:  set :meetTarget:titanium 20                                  ...
  420:  set :meetTarget:metaglass 0                                  ...
  421:  setaddr :meetTarget*retaddr *label204                        ...
  422:  call *label23 *invalid :meetTarget*retval                    ...
        label *label204                                              ...
        label *label205                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  423:  wait 1e-15                                                   ...
  424:  read *tmp236 processor4 ":layoutThoriumDrill*finished"       ...
  425:  jump *label205 equal *tmp236 false                           ...
  426:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  427:  jump *label206 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  428:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  429:  stop                                                         Actions.mnd: stopProcessor();
        label *label206                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  430:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: var thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  431:  read :buildBlockAt:x processor4 ".drillX"                    ...
  432:  read :buildBlockAt:y processor4 ".drillY"                    ...
  433:  set :buildBlockAt:rotation null                              ...
  434:  set :buildBlockAt:config 0                                   ...
  435:  set :buildBlockAt:skipError false                            ...
  436:  setaddr :buildBlockAt*retaddr *label209                      ...
  437:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label209                                              ...
  438:  set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval     ...
  439:  read *tmp43 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  440:  jump *label202 lessThan *tmp43 0                             ...
  441:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  442:  set :meetTarget:copper 30                                    ...
  443:  set :meetTarget:lead 30                                      ...
  444:  set :meetTarget:graphite 30                                  ...
  445:  set :meetTarget:silicon 0                                    ...
  446:  set :meetTarget:titanium 0                                   ...
  447:  set :meetTarget:metaglass 30                                 ...
  448:  setaddr :meetTarget*retaddr *label213                        ...
  449:  call *label23 *invalid :meetTarget*retval                    ...
        label *label213                                              ...
  450:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  451:  read *tmp43 processor4 ".water1X"                            ...
  452:  set :buildBlockAt:x *tmp43                                   ...
  453:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  454:  set :buildBlockAt:rotation null                              ...
  455:  set :buildBlockAt:config 0                                   ...
  456:  set :buildBlockAt:skipError false                            ...
  457:  setaddr :buildBlockAt*retaddr *label214                      ...
  458:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label214                                              ...
  459:  read *tmp45 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  460:  jump *label202 lessThan *tmp45 0                             ...
  461:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  462:  set :meetTarget:copper 30                                    ...
  463:  set :meetTarget:lead 30                                      ...
  464:  set :meetTarget:graphite 30                                  ...
  465:  set :meetTarget:silicon 0                                    ...
  466:  set :meetTarget:titanium 0                                   ...
  467:  set :meetTarget:metaglass 30                                 ...
  468:  setaddr :meetTarget*retaddr *label218                        ...
  469:  call *label23 *invalid :meetTarget*retval                    ...
        label *label218                                              ...
  470:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  471:  read *tmp45 processor4 ".water2X"                            ...
  472:  set :buildBlockAt:x *tmp45                                   ...
  473:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  474:  set :buildBlockAt:rotation null                              ...
  475:  set :buildBlockAt:config 0                                   ...
  476:  set :buildBlockAt:skipError false                            ...
  477:  setaddr :buildBlockAt*retaddr *label219                      ...
  478:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label219                                              ...
  479:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  480:  set :meetTarget:copper 30                                    ...
  481:  set :meetTarget:lead 30                                      ...
  482:  set :meetTarget:graphite 30                                  ...
  483:  set :meetTarget:silicon 0                                    ...
  484:  set :meetTarget:titanium 0                                   ...
  485:  set :meetTarget:metaglass 30                                 ...
  486:  setaddr :meetTarget*retaddr *label221                        ...
  487:  call *label23 *invalid :meetTarget*retval                    ...
        label *label221                                              ...
  488:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: var thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  489:  read :buildBlockAt:x processor4 ".generatorX"                ...
  490:  read :buildBlockAt:y processor4 ".generatorY"                ...
  491:  set :buildBlockAt:rotation null                              ...
  492:  set :buildBlockAt:config 0                                   ...
  493:  set :buildBlockAt:skipError false                            ...
  494:  setaddr :buildBlockAt*retaddr *label222                      ...
  495:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label222                                              ...
  496:  set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval ...
  497:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  498:  set :meetTarget:copper 2                                     ...
  499:  set :meetTarget:lead 6                                       ...
  500:  set :meetTarget:graphite 0                                   ...
  501:  set :meetTarget:silicon 0                                    ...
  502:  set :meetTarget:titanium 0                                   ...
  503:  set :meetTarget:metaglass 0                                  ...
  504:  setaddr :meetTarget*retaddr *label224                        ...
  505:  call *label23 *invalid :meetTarget*retval                    ...
        label *label224                                              ...
  506:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  507:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  508:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  509:  set :buildBlockAt:rotation null                              ...
  510:  set :buildBlockAt:config 0                                   ...
  511:  set :buildBlockAt:skipError false                            ...
  512:  setaddr :buildBlockAt*retaddr *label225                      ...
  513:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label225                                              ...
  514:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  515:  set :meetTarget:copper 0                                     ...
  516:  set :meetTarget:lead 10                                      ...
  517:  set :meetTarget:graphite 0                                   ...
  518:  set :meetTarget:silicon 8                                    ...
  519:  set :meetTarget:titanium 0                                   ...
  520:  set :meetTarget:metaglass 0                                  ...
  521:  setaddr :meetTarget*retaddr *label227                        ...
  522:  call *label23 *invalid :meetTarget*retval                    ...
        label *label227                                              ...
  523:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  524:  read :buildBlockAt:x processor4 ".panelX"                    ...
  525:  read :buildBlockAt:y processor4 ".panelY"                    ...
  526:  set :buildBlockAt:rotation null                              ...
  527:  set :buildBlockAt:config 0                                   ...
  528:  set :buildBlockAt:skipError false                            ...
  529:  setaddr :buildBlockAt*retaddr *label228                      ...
  530:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label228                                              ...
  531:  set :meetTarget:block @battery                               CoreBuilder.mnd: meetTarget(
  532:  set :meetTarget:copper 5                                     ...
  533:  set :meetTarget:lead 20                                      ...
  534:  set :meetTarget:graphite 0                                   ...
  535:  set :meetTarget:silicon 0                                    ...
  536:  set :meetTarget:titanium 0                                   ...
  537:  set :meetTarget:metaglass 0                                  ...
  538:  setaddr :meetTarget*retaddr *label230                        ...
  539:  call *label23 *invalid :meetTarget*retval                    ...
        label *label230                                              ...
  540:  set :buildBlockAt:block @battery                             CoreBuilder.mnd: buildBlockAt(@battery, oreLocator.batteryX, oreLocator.batteryY, null, 0, false);
  541:  read :buildBlockAt:x processor4 ".batteryX"                  ...
  542:  read :buildBlockAt:y processor4 ".batteryY"                  ...
  543:  set :buildBlockAt:rotation null                              ...
  544:  set :buildBlockAt:config 0                                   ...
  545:  set :buildBlockAt:skipError false                            ...
  546:  setaddr :buildBlockAt*retaddr *label231                      ...
  547:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label231                                              ...
  548:  write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDr CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  549:  write :buildThoriumDrill:thoriumDrill processor3 ":addThoriu CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  550:  write :buildThoriumDrill:thoriumGenerator processor3 ":addTh ...
  551:  write false processor3 ":addThoriumDrill*finished"           ...
  552:  write 1 processor3 "@counter"                                ...
        label *label232                                              ...
  553:  wait 1e-15                                                   ...
  554:  read *tmp253 processor3 ":addThoriumDrill*finished"          ...
  555:  jump *label232 equal *tmp253 false                           ...
        label *label202                                              CoreBuilder.mnd: buildThoriumDrill();
  556:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  557:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label233                                              CoreBuilder.mnd: do
  558:  setaddr :supplyBase*retaddr *label236                        CoreBuilder.mnd: supplyBase();
  559:  call *label21 *invalid :supplyBase*retval                    ...
        label *label236                                              ...
  560:  read *tmp70 *tmp141 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  561:  read *tmp71 *tmp141 ".monos"                                 ...
  562:  op add *tmp254 *tmp70 *tmp71                                 ...
  563:  jump *label233 lessThan *tmp254 16                           CoreBuilder.mnd: do
        label *label237                                              CoreBuilder.mnd: while true do
  564:  setaddr :supplyBase*retaddr *label240                        CoreBuilder.mnd: supplyBase();
  565:  call *label21 *invalid :supplyBase*retval                    ...
        label *label240                                              ...
  566:  jump *label237 always 0 0                                    CoreBuilder.mnd: while true do
        label *label6                                                Actions.mnd: void moveTo(x, y, radius)
  567:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  568:  op sub *tmp258 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label245                                              ...
  569:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp256 0 ...
  570:  jump *label247 notEqual *tmp256 false                        ...
  571:  ucontrol approach :moveTo:x :moveTo:y *tmp258 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  572:  jump *label245 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label247                                              ...
  573:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label7                                                Actions.mnd: void moveTo(x, y)
  574:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  575:  set :moveTo:y :moveTo.1:y                                    ...
  576:  set :moveTo:radius 6                                         ...
  577:  setaddr :moveTo*retaddr *label249                            ...
  578:  call *label6 *invalid :moveTo*retval                         ...
        label *label249                                              ...
  579:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label8                                                Actions.mnd: void moveToEmpty(x, y)
  580:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label252                                              Actions.mnd: do
  581:  sensor *tmp261 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  582:  jump *label255 equal *tmp261 null                            ...
  583:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label255                                              ...
  584:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  585:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp264 0    Actions.mnd: while !within(x, y, RADIUS);
  586:  jump *label252 equal *tmp264 false                           Actions.mnd: do
  587:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label9                                                Actions.mnd: void moveToBlock(block, radius)
  588:  sensor *tmp266 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  589:  sensor *tmp267 :moveToBlock:block @y                         ...
  590:  set :moveTo:x *tmp266                                        ...
  591:  set :moveTo:y *tmp267                                        ...
  592:  set :moveTo:radius :moveToBlock:radius                       ...
  593:  setaddr :moveTo*retaddr *label258                            ...
  594:  call *label6 *invalid :moveTo*retval                         ...
        label *label258                                              ...
  595:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label10                                               Actions.mnd: void depositItems(block, item)
  596:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  597:  sensor *tmp268 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  598:  jump *label261 notEqual *tmp268 :depositItems:item           ...
  599:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  600:  set :moveToBlock:radius 6                                    ...
  601:  setaddr :moveToBlock*retaddr *label263                       ...
  602:  call *label9 *invalid :moveToBlock*retval                    ...
        label *label263                                              ...
  603:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label264                                              Actions.mnd: do
  604:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  605:  sensor *tmp272 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  606:  op mul *tmp273 *tmp272 :depositItems:cap                     ...
  607:  sensor *tmp274 :depositItems:block :depositItems:item        ...
  608:  jump *label264 greaterThan *tmp273 *tmp274                   Actions.mnd: do
  609:  jump *label262 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label261                                              ...
        label *label267                                              Actions.mnd: while @unit.@firstItem != null do
  610:  sensor *tmp276 @unit @firstItem                              ...
  611:  jump *label269 equal *tmp276 null                            ...
  612:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  613:  jump *label267 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label269                                              ...
        label *label262                                              Actions.mnd: if @unit.@firstItem == item then
  614:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  615:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  616:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label11                                               Actions.mnd: void locateOre(ore, out x, out y)
  617:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  618:  jump *label272 notEqual *tmp278 false                        ...
  619:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  620:  stop                                                         Actions.mnd: stopProcessor();
        label *label272                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  621:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label12                                               Actions.mnd: void mineOre(ore, amount, block)
  622:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  623:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  624:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  625:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  626:  setaddr :locateOre*retaddr *label277                         ...
  627:  call *label11 *invalid :locateOre*retval                     ...
        label *label277                                              ...
  628:  set :mineOre:x :locateOre:x                                  ...
  629:  set :mineOre:y :locateOre:y                                  ...
  630:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  631:  set :moveToEmpty:y :locateOre:y                              ...
  632:  setaddr :moveToEmpty*retaddr *label278                       ...
  633:  call *label8 *invalid :moveToEmpty*retval                    ...
        label *label278                                              ...
  634:  sensor *tmp283 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  635:  jump *label279 equal *tmp283 :mineOre:ore                    ...
        label *label282                                              Actions.mnd: while @unit.@firstItem != null do
  636:  sensor *tmp286 @unit @firstItem                              ...
  637:  jump *label284 equal *tmp286 null                            ...
  638:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  639:  jump *label282 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label284                                              ...
        label *label279                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  640:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  641:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label286                                              Actions.mnd: do
  642:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  643:  op notEqual *tmp290 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  644:  op notEqual *tmp291 :mineOre:item :mineOre:ore               ...
  645:  op land *tmp292 *tmp290 *tmp291                              ...
  646:  jump *label288 notEqual *tmp292 false                        ...
  647:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  648:  jump *label288 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  649:  sensor *tmp296 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  650:  jump *label286 lessThan *tmp296 :mineOre:amount              Actions.mnd: do
        label *label288                                              ...
  651:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  652:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  653:  set :depositItems:item :mineOre:ore                          ...
  654:  setaddr :depositItems*retaddr *label293                      ...
  655:  call *label10 *invalid :depositItems*retval                  ...
        label *label293                                              ...
  656:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label13                                               Actions.mnd: void mineOre(ore)
  657:  write "Mining " .display ".status2"                          Actions.mnd: display.status2  = text;
  658:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2  = item;
  659:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  660:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  661:  set :mineOre:amount 30                                       ...
  662:  set :mineOre:block .core                                     ...
  663:  setaddr :mineOre*retaddr *label296                           ...
  664:  call *label12 *invalid :mineOre*retval                       ...
        label *label296                                              ...
  665:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label14                                               Actions.mnd: void fetchBlock(block, item)
  666:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  667:  write :transportStatus.2:target .display ".transportTarget"  Actions.mnd: display.transportTarget = target;
  668:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  669:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2  = text;
  670:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2  = item;
  671:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  672:  sensor *tmp300 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  673:  sensor *tmp301 :fetchBlock:block @y                          ...
  674:  set :moveToEmpty:x *tmp300                                   ...
  675:  set :moveToEmpty:y *tmp301                                   ...
  676:  setaddr :moveToEmpty*retaddr *label300                       ...
  677:  call *label8 *invalid :moveToEmpty*retval                    ...
        label *label300                                              ...
        label *label302                                              Actions.mnd: while @unit.@firstItem != null do
  678:  sensor *tmp302 @unit @firstItem                              ...
  679:  jump *label304 equal *tmp302 null                            ...
  680:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  681:  jump *label302 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label304                                              ...
        label *label305                                              Actions.mnd: do
  682:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  683:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  684:  op notEqual *tmp305 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  685:  op notEqual *tmp306 :fetchBlock:unitItem :fetchBlock:item    ...
  686:  op land *tmp307 *tmp305 *tmp306                              ...
  687:  jump *label308 equal *tmp307 false                           ...
  688:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label308                                              Actions.mnd: if unitItem != null and unitItem != item then
  689:  sensor *tmp309 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  690:  op lessThan *tmp310 *tmp309 30                               ...
  691:  sensor *tmp311 :fetchBlock:block :fetchBlock:item            ...
  692:  op land *tmp312 *tmp310 *tmp311                              ...
  693:  jump *label305 notEqual *tmp312 false                        Actions.mnd: do
  694:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  695:  set :depositItems:item :fetchBlock:item                      ...
  696:  setaddr :depositItems*retaddr *label310                      ...
  697:  call *label10 *invalid :depositItems*retval                  ...
        label *label310                                              ...
  698:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label19                                               CoreBuilder.mnd: void supplyBase0()
  699:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  700:  jump *label312 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  701:  sensor *tmp315 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  702:  jump *label314 greaterThanEq *tmp315 .targetGraphite         ...
  703:  sensor *tmp318 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  704:  jump *label316 greaterThanEq *tmp318 5                       ...
  705:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  706:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  707:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  708:  write .press .display ".block2"                              Actions.mnd: display.block2 = block;
  709:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  710:  sensor *tmp322 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  711:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  712:  jump *label321 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  713:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  714:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  715:  set :mineOre:block .press                                    ...
  716:  setaddr :mineOre*retaddr *label323                           ...
  717:  call *label12 *invalid :mineOre*retval                       ...
        label *label323                                              ...
        label *label321                                              CoreBuilder.mnd: if missing > 0 then
  718:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label316                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label314                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  719:  sensor *tmp326 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  720:  jump *label324 greaterThanEq *tmp326 .targetSilicon          ...
  721:  sensor *tmp329 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  722:  jump *label326 greaterThanEq *tmp329 5                       ...
  723:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  724:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  725:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  726:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  727:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  728:  sensor *tmp333 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  729:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  730:  jump *label331 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  731:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  732:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  733:  set :mineOre:block .smelter                                  ...
  734:  setaddr :mineOre*retaddr *label333                           ...
  735:  call *label12 *invalid :mineOre*retval                       ...
        label *label333                                              ...
        label *label331                                              CoreBuilder.mnd: if missing > 0 then
  736:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  737:  jump *label327 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label326                                              ...
  738:  sensor *tmp337 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  739:  jump *label334 greaterThanEq *tmp337 5                       ...
  740:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  741:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  742:  write @sand .display ".item2"                                Actions.mnd: display.item2  = item;
  743:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  744:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  745:  sensor *tmp341 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  746:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  747:  jump *label339 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  748:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  749:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  750:  set :mineOre:block .smelter                                  ...
  751:  setaddr :mineOre*retaddr *label341                           ...
  752:  call *label12 *invalid :mineOre*retval                       ...
        label *label341                                              ...
        label *label339                                              CoreBuilder.mnd: if missing > 0 then
  753:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label334                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label327                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label324                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  754:  sensor *tmp345 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  755:  jump *label342 greaterThanEq *tmp345 .powerTarget            ...
  756:  sensor *tmp348 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  757:  jump *label344 greaterThanEq *tmp348 2                       ...
  758:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  759:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  760:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  761:  write .generator .display ".block2"                          Actions.mnd: display.block2 = block;
  762:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  763:  sensor *tmp352 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  764:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  765:  jump *label349 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  766:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  767:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  768:  set :mineOre:block .generator                                ...
  769:  setaddr :mineOre*retaddr *label351                           ...
  770:  call *label12 *invalid :mineOre*retval                       ...
        label *label351                                              ...
        label *label349                                              CoreBuilder.mnd: if missing > 0 then
  771:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label344                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label342                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label312                                              CoreBuilder.mnd: if unloader1 == null then
  772:  set *tmp358 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  773:  sensor *tmp356 .core @titanium                               ...
  774:  jump *label353 greaterThanEq *tmp356 .targetTitanium         ...
  775:  sensor *tmp359 .core @titanium                               ...
  776:  op sub *tmp360 .targetTitanium *tmp359                       ...
  777:  op min *tmp358 7 *tmp360                                     ...
        label *label353                                              ...
  778:  sensor *tmp362 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  779:  jump *label354 greaterThanEq *tmp362 *tmp358                 ...
  780:  jump *label355 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  781:  sensor *tmp367 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  782:  op mul *tmp368 .unloader1 .powerTarget                       ...
  783:  jump *label358 greaterThanEq *tmp367 *tmp368                 ...
  784:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  785:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  786:  setaddr :mineOre.1*retaddr *label361                         ...
  787:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label361                                              ...
  788:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label358                                              ...
  789:  sensor *tmp371 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  790:  jump *label362 greaterThanEq *tmp371 .targetSilicon          ...
  791:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  792:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  793:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  794:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  795:  jump *label366 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  796:  set :mineOre.1:ore @coal                                     ...
        label *label366                                              ...
  797:  setaddr :mineOre.1*retaddr *label367                         CoreBuilder.mnd: mineOre(ore);
  798:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label367                                              ...
  799:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label362                                              ...
  800:  sensor *tmp378 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  801:  jump *label368 greaterThanEq *tmp378 .targetCopper           ...
  802:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  803:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  804:  setaddr :mineOre.1*retaddr *label371                         ...
  805:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label371                                              ...
  806:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label368                                              ...
  807:  sensor *tmp381 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  808:  jump *label372 greaterThanEq *tmp381 .targetLead             ...
  809:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  810:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  811:  setaddr :mineOre.1*retaddr *label375                         ...
  812:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label375                                              ...
  813:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label372                                              ...
  814:  sensor *tmp384 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  815:  jump *label376 greaterThanEq *tmp384 .targetMetaglass        ...
  816:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  817:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  818:  setaddr :mineOre.1*retaddr *label379                         ...
  819:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label379                                              ...
  820:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label376                                              ...
  821:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  822:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  823:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  824:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  825:  jump *label382 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  826:  set :mineOre.1:ore @coal                                     ...
        label *label382                                              ...
  827:  setaddr :mineOre.1*retaddr *label383                         CoreBuilder.mnd: mineOre(ore);
  828:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label383                                              ...
  829:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label354                                              ...
  830:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  831:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  832:  set :fetchBlock:item @titanium                               ...
  833:  setaddr :fetchBlock*retaddr *label385                        ...
  834:  call *label14 *invalid :fetchBlock*retval                    ...
        label *label385                                              ...
        label *label355                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  835:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label20                                               CoreBuilder.mnd: void supplyBase1()
  836:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  837:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  838:  setaddr :mineOre.1*retaddr *label388                         ...
  839:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label388                                              ...
  840:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label21                                               CoreBuilder.mnd: void supplyBase()
  841:  jump *label390 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  842:  read *tmp70 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  843:  jump *label392 lessThanEq *tmp70 0                           ...
  844:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  845:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  846:  write .titaniumDrill .flareController ":start:drill"         ...
  847:  write false .flareController ":start*finished"               ...
  848:  write 3 .flareController "@counter"                          ...
        label *label392                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label390                                              CoreBuilder.mnd: if !flareControllerStarted then
  849:  read *tmp71 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  850:  jump *label394 lessThanEq *tmp71 3                           ...
  851:  setaddr :supplyBase1*retaddr *label396                       CoreBuilder.mnd: supplyBase1();
  852:  call *label20 *invalid :supplyBase1*retval                   ...
        label *label396                                              ...
  853:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label394                                              ...
  854:  setaddr :supplyBase0*retaddr *label397                       CoreBuilder.mnd: supplyBase0();
  855:  call *label19 *invalid :supplyBase0*retval                   ...
        label *label397                                              ...
  856:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label22                                               CoreBuilder.mnd: def targetMet()
  857:  sensor *tmp399 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  858:  jump *label399 lessThan *tmp399 .targetCopper                ...
  859:  sensor *tmp402 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  860:  jump *label401 lessThan *tmp402 .targetLead                  ...
  861:  sensor *tmp405 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  862:  jump *label403 lessThan *tmp405 .targetGraphite              ...
  863:  sensor *tmp408 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  864:  jump *label405 lessThan *tmp408 .targetSilicon               ...
  865:  sensor *tmp411 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  866:  jump *label407 lessThan *tmp411 .targetTitanium              ...
  867:  sensor *tmp414 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  868:  jump *label409 lessThan *tmp414 .targetMetaglass             ...
  869:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  870:  return :targetMet*retaddr                                    ...
        label *label409                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label407                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label405                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label403                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label401                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label399                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  871:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  872:  return :targetMet*retaddr                                    ...
        label *label23                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  873:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  874:  op sign *tmp418 :meetTarget:lead 0                           ...
  875:  op add :meetTarget:count :meetTarget:count *tmp418           ...
  876:  op sign *tmp418 :meetTarget:graphite 0                       ...
  877:  op add :meetTarget:count :meetTarget:count *tmp418           ...
  878:  op sign *tmp418 :meetTarget:silicon 0                        ...
  879:  op add :meetTarget:count :meetTarget:count *tmp418           ...
  880:  op sign *tmp418 :meetTarget:titanium 0                       ...
  881:  op add :meetTarget:count :meetTarget:count *tmp418           ...
  882:  op sign *tmp418 :meetTarget:metaglass 0                      ...
  883:  op add :meetTarget:count :meetTarget:count *tmp418           ...
  884:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  885:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  886:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  887:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  888:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  889:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  890:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  891:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  892:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  893:  op add *tmp419 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  894:  op add .targetLead *tmp419 1                                 ...
  895:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  896:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  897:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  898:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  899:  op add *tmp421 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  900:  write *tmp421 .controller ".pressTarget"                     ...
  901:  op add *tmp422 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  902:  write *tmp422 .controller ".smelterTarget"                   ...
  903:  op add *tmp423 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  904:  write *tmp423 .controller ".kilnTarget"                      ...
  905:  write *tmp419 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  906:  op sign *tmp425 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  907:  op mul *tmp426 *tmp425 20                                    ...
  908:  op add *tmp427 :meetTarget:silicon *tmp426                   ...
  909:  write *tmp427 .controller ".siliconReserve"                  ...
        label *label421                                              CoreBuilder.mnd: while !targetMet() do
  910:  setaddr :targetMet*retaddr *label424                         ...
  911:  call *label22 *invalid :targetMet*retval                     ...
        label *label424                                              ...
  912:  jump *label423 notEqual :targetMet*retval false              ...
  913:  setaddr :supplyBase*retaddr *label425                        CoreBuilder.mnd: supplyBase();
  914:  call *label21 *invalid :supplyBase*retval                    ...
        label *label425                                              ...
  915:  jump *label421 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label423                                              ...
  916:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label24                                               CoreBuilder.mnd: void log(encodedId)
  917:  read *tmp88 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  918:  op sub *tmp429 *tmp88 1                                      ...
  919:  write *tmp429 bank1 511                                      ...
  920:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  921:  op floor *tmp433 :second:result 0                            CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  922:  op mul *tmp434 *tmp433 1000                                  ...
  923:  op add *tmp435 :log:encodedId *tmp434                        ...
  924:  write *tmp435 bank1 *tmp429                                  ...
  925:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label25                                               CoreBuilder.mnd: void logBlock(block)
  926:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  927:  setaddr :log*retaddr *label429                               ...
  928:  call *label24 *invalid :log*retval                           ...
        label *label429                                              ...
  929:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label26                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  930:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  931:  set :moveTo.1:y :buildBlockAt:y                              ...
  932:  setaddr :moveTo.1*retaddr *label431                          ...
  933:  call *label7 *invalid :moveTo.1*retval                       ...
        label *label431                                              ...
  934:  write "Building..." .display ".status3"                      Actions.mnd: display.status3 = text;
  935:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  936:  jump *label433 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  937:  jump *label435 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  938:  set :buildBlockAt*retval :buildBlockAt:building              ...
  939:  return :buildBlockAt*retaddr                                 ...
        label *label435                                              ...
  940:  jump *label437 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  941:  set :buildBlockAt*retval null                                ...
  942:  return :buildBlockAt*retaddr                                 ...
        label *label437                                              ...
  943:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  944:  stop                                                         Actions.mnd: stopProcessor();
        label *label433                                              CoreBuilder.mnd: if building != null then
  945:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  946:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label440                                              CoreBuilder.mnd: do
  947:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  948:  jump *label443 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  949:  set :buildBlockAt*retval null                                ...
  950:  return :buildBlockAt*retaddr                                 ...
        label *label443                                              ...
  951:  jump *label440 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  952:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  953:  setaddr :logBlock*retaddr *label445                          ...
  954:  call *label25 *invalid :logBlock*retval                      ...
        label *label445                                              ...
  955:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  956:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label27                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  957:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  958:  set :meetTarget:copper :buildBlock:copper                    ...
  959:  set :meetTarget:lead :buildBlock:lead                        ...
  960:  set :meetTarget:graphite :buildBlock:graphite                ...
  961:  set :meetTarget:silicon :buildBlock:silicon                  ...
  962:  set :meetTarget:titanium :buildBlock:titanium                ...
  963:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  964:  setaddr :meetTarget*retaddr *label447                        ...
  965:  call *label23 *invalid :meetTarget*retval                    ...
        label *label447                                              ...
  966:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  967:  set :buildBlockAt:x :buildBlock:x                            ...
  968:  set :buildBlockAt:y :buildBlock:y                            ...
  969:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  970:  set :buildBlockAt:config :buildBlock:config                  ...
  971:  set :buildBlockAt:skipError false                            ...
  972:  setaddr :buildBlockAt*retaddr *label448                      ...
  973:  call *label26 *invalid :buildBlockAt*retval                  ...
        label *label448                                              ...
  974:  set :buildBlock*retval :buildBlockAt*retval                  ...
  975:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label28                                               CoreBuilder.mnd: def findUnits(type, out count)
  976:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  977:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  978:  set :findUnits:firstUnit @unit                               ...
  979:  jump *label450 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label452                                              CoreBuilder.mnd: do
  980:  op add :findUnits:count :findUnits:count 1                   ...
  981:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  982:  jump *label452 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label450                                              CoreBuilder.mnd: if firstUnit != null then
  983:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  984:  return :findUnits*retaddr                                    ...
        label *label29                                               CoreBuilder.mnd: void buildUnits()
  985:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  986:  set :meetTarget:copper 0                                     ...
  987:  set :meetTarget:lead 0                                       ...
  988:  set :meetTarget:graphite 0                                   ...
  989:  set :meetTarget:silicon 0                                    ...
  990:  set :meetTarget:titanium 0                                   ...
  991:  set :meetTarget:metaglass 0                                  ...
  992:  setaddr :meetTarget*retaddr *label456                        ...
  993:  call *label23 *invalid :meetTarget*retval                    ...
        label *label456                                              ...
  994:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  995:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  996:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  997:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  998:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()


Performance: parsed in 819 ms, compiled in 414 ms, optimized in 3,486 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (16 steps):
The program didn't generate any output.
Execution exception at instruction 33: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
