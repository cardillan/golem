C:\Home\golem\jam-202507\CoreBuilder.mnd:2:1 Unknown compiler directive 'targeting'. Did you mean 'target'?
  1834 instructions before optimizations.
    85 instructions eliminated by Temp Variables Elimination (2 iterations).
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:31:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    63 instructions eliminated by Jump Optimization (5 iterations).
    68 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   554 instructions eliminated by Data Flow Optimization (3 passes, 40 iterations).
    27 loops improved by Loop Hoisting.
     8 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (11 iterations).
     1 loops unrolled by Loop Unrolling.
     4 instructions eliminated by Jump Straightening (5 iterations).
    13 instructions updated by JumpThreading.
    52 instructions eliminated by Unreachable Code Elimination (2 iterations).
   889 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 19):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   219302.3, efficiency 219302.344
    Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   203027.3, efficiency 203027.344
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   151464.8, efficiency 151464.844
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   103125.0, efficiency 103125.000
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500
  * Unroll iteration loop at CoreBuilder.mnd:254:5               size   -11, benefit    15019.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 28):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:46:5                 size    +1, benefit   219302.3, efficiency 219302.344 (+1 instructions)
    Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   203027.3, efficiency 203027.344
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   151464.8, efficiency 151464.844
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   103125.0, efficiency 103125.000
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500

Pass 1: speed optimization selection (cost limit 27):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:91:9                 size    +1, benefit   203027.3, efficiency 203027.344 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   151464.8, efficiency 151464.844
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   103125.0, efficiency 103125.000
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500

Pass 1: speed optimization selection (cost limit 26):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   151464.8, efficiency 151464.844 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   103125.0, efficiency 103125.000
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500

Pass 1: speed optimization selection (cost limit 25):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:68:5                 size    +1, benefit   103125.0, efficiency 103125.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500

Pass 1: speed optimization selection (cost limit 24):
    Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    16325.0, efficiency   8162.500 (+2 instructions)

Pass 1: speed optimization selection (cost limit 22):
  * Replicate loop condition at CoreBuilder.mnd:523:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000

Pass 1: speed optimization selection (cost limit 21):
  * Replicate loop condition at CoreBuilder.mnd:529:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-86 instructions):
 
   162 setaddr :buildBlock*retaddr *label55 (h:*label55)
   163 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
   164 label *label55
-    * set *tmp111 :buildBlock*retval
   165 jump *label50 always
   166 label *label52
   167 multijump *tmp112 0 0 (m:marker2)
   168 multilabel *label54 (m:marker2)
   169 label *label53
-    * set *tmp111 null
   170 label *label50
   171 set :buildBlockFromCfg.3:block @combustion-generator
   172 set :buildBlockFromCfg.3:offsetX 0
 
   280 setaddr :buildBlock*retaddr *label73 (h:*label73)
   281 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   282 label *label73
-    * set *tmp123 :buildBlock*retval
   283 jump *label68 always
   284 label *label70
   285 multijump *tmp124 0 0 (m:marker5)
   286 multilabel *label72 (m:marker5)
   287 label *label71
-    * set *tmp123 null
   288 label *label68
   289 set :meetTarget:block @pneumatic-drill
   290 set :meetTarget:copper 18
 
   323 set .ERROR :error:error
   324 stop
   325 label *label80
-    * set *tmp141 null
   326 jump *label79 always
   327 label *label78
-    * set *tmp141 null
   328 label *label79
   329 write @pneumatic-drill .display ".nextBlock"
   330 set :buildBlockAt:block @pneumatic-drill
 
   413 setaddr :buildBlock*retaddr *label93 (h:*label93)
   414 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   415 label *label93
-    * set *tmp146 :buildBlock*retval
   416 jump *label88 always
   417 label *label90
   418 multijump *tmp147 0 0 (m:marker7)
   419 multilabel *label92 (m:marker7)
   420 label *label91
-    * set *tmp146 null
   421 label *label88
   422 set :buildBlockFromCfg.8:block @overflow-gate
   423 set :buildBlockFromCfg.8:offsetX 0
 
   450 setaddr :buildBlock*retaddr *label99 (h:*label99)
   451 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   452 label *label99
-    * set *tmp150 :buildBlock*retval
   453 jump *label94 always
   454 label *label96
   455 multijump *tmp151 0 0 (m:marker8)
   456 multilabel *label98 (m:marker8)
   457 label *label97
-    * set *tmp150 null
   458 label *label94
   459 set :buildBlockFromCfg.9:block @micro-processor
   460 set :buildBlockFromCfg.9:offsetX 3
 
   537 setaddr :buildBlock*retaddr *label111 (h:*label111)
   538 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   539 label *label111
-    * set *tmp158 :buildBlock*retval
   540 jump *label106 always
   541 label *label108
   542 multijump *tmp159 0 0 (m:marker10)
   543 multilabel *label110 (m:marker10)
   544 label *label109
-    * set *tmp158 null
   545 label *label106
   546 set :buildBlockFromCfg.11:block @unloader
   547 set :buildBlockFromCfg.11:offsetX -2
 
   644 op lessThan *tmp171 *tmp170 300
   645 jump *label129 equal *tmp171 false
   646 jump *label127 always
-    * set *tmp172 null
   647 jump *label130 always
   648 label *label129
-    * set *tmp172 null
   649 label *label130
   650 label *label126
   651 read *tmp73 .controller ".monos"
 
   685 setaddr :buildBlock*retaddr *label136 (h:*label136)
   686 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   687 label *label136
-    * set *tmp174 :buildBlock*retval
   688 jump *label131 always
   689 label *label133
   690 multijump *tmp175 0 0 (m:marker13)
   691 multilabel *label135 (m:marker13)
   692 label *label134
-    * set *tmp174 null
   693 label *label131
   694 set :buildBlockFromCfg.14:block @inverted-sorter
   695 set :buildBlockFromCfg.14:offsetX 2
 
   722 setaddr :buildBlock*retaddr *label142 (h:*label142)
   723 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   724 label *label142
-    * set *tmp178 :buildBlock*retval
   725 jump *label137 always
   726 label *label139
   727 multijump *tmp179 0 0 (m:marker14)
   728 multilabel *label141 (m:marker14)
   729 label *label140
-    * set *tmp178 null
   730 label *label137
   731 set :buildBlockFromCfg.15:block @kiln
   732 set :buildBlockFromCfg.15:offsetX 2.5
 
   800 setaddr :buildBlock*retaddr *label154 (h:*label154)
   801 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   802 label *label154
-    * set *tmp186 :buildBlock*retval
   803 jump *label149 always
   804 label *label151
   805 multijump *tmp187 0 0 (m:marker16)
   806 multilabel *label153 (m:marker16)
   807 label *label152
-    * set *tmp186 null
   808 label *label149
   809 set :buildBlockFromCfg.17:block @overflow-gate
   810 set :buildBlockFromCfg.17:offsetX -3
 
   837 setaddr :buildBlock*retaddr *label160 (h:*label160)
   838 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   839 label *label160
-    * set *tmp190 :buildBlock*retval
   840 jump *label155 always
   841 label *label157
   842 multijump *tmp191 0 0 (m:marker17)
   843 multilabel *label159 (m:marker17)
   844 label *label158
-    * set *tmp190 null
   845 label *label155
   846 set :buildBlockFromCfg.18:block @overflow-gate
   847 set :buildBlockFromCfg.18:offsetX -4
 
   874 setaddr :buildBlock*retaddr *label166 (h:*label166)
   875 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   876 label *label166
-    * set *tmp194 :buildBlock*retval
   877 jump *label161 always
   878 label *label163
   879 multijump *tmp195 0 0 (m:marker18)
   880 multilabel *label165 (m:marker18)
   881 label *label164
-    * set *tmp194 null
   882 label *label161
   883 set :buildBlockFromCfg.19:block @steam-generator
   884 set :buildBlockFromCfg.19:offsetX -4.5
 
   991 setaddr :buildBlock*retaddr *label184 (h:*label184)
   992 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   993 label *label184
-    * set *tmp206 :buildBlock*retval
   994 jump *label179 always
   995 label *label181
   996 multijump *tmp207 0 0 (m:marker21)
   997 multilabel *label183 (m:marker21)
   998 label *label182
-    * set *tmp206 null
   999 label *label179
  1000 set .graphiteSurplus 200
  1001 set :buildBlockFromCfg.22:block @payload-router
 
  1069 setaddr :buildBlock*retaddr *label196 (h:*label196)
  1070 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
  1071 label *label196
-    * set *tmp214 :buildBlock*retval
  1072 jump *label191 always
  1073 label *label193
  1074 multijump *tmp215 0 0 (m:marker23)
  1075 multilabel *label195 (m:marker23)
  1076 label *label194
-    * set *tmp214 null
  1077 label *label191
  1078 set :buildBlockFromCfg.24:block @underflow-gate
  1079 set :buildBlockFromCfg.24:offsetX 0
 
  1106 setaddr :buildBlock*retaddr *label202 (h:*label202)
  1107 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
  1108 label *label202
-    * set *tmp218 :buildBlock*retval
  1109 jump *label197 always
  1110 label *label199
  1111 multijump *tmp219 0 0 (m:marker24)
  1112 multilabel *label201 (m:marker24)
  1113 label *label200
-    * set *tmp218 null
  1114 label *label197
  1115 set :buildBlockFromCfg.25:block @additive-reconstructor
  1116 set :buildBlockFromCfg.25:offsetX 0
 
  1197 wait 1e-15
  1198 read *tmp238 .oreLocator ":findDrillLocation*finished"
  1199 jump *label218 equal *tmp238 false
-    * read *tmp239 .oreLocator ":findDrillLocation*retval"
  1200 ubind .builder
  1201 label *label219
  1202 setaddr :supplyBase*retaddr *label222 (h:*label222)
 
  1213 ubind :findFreeUnit:unit_type
  1214 op equal *tmp243 @unit null
  1215 jump *label224 equal *tmp243 false
-    * set *tmp242 null
  1216 jump *label223 always
-    * set *tmp244 null
  1217 jump *label225 always
  1218 label *label224
-    * set *tmp244 null
  1219 label *label225
  1220 set :findFreeUnit:first_unit @unit
  1221 label *label226
 
  1223 op equal *tmp246 *tmp245 0
  1224 jump *label229 equal *tmp246 false
  1225 ucontrol flag :findFreeUnit:initial_flag
-    * set *tmp242 @unit
  1226 jump *label223 always
-    * set *tmp247 null
  1227 jump *label230 always
  1228 label *label229
  1229 sensor *tmp248 :findFreeUnit:first_unit @dead
 
  1236 label *label231
  1237 set *tmp250 null
  1238 label *label232
-    * set *tmp247 *tmp250
  1239 label *label230
  1240 ubind :findFreeUnit:unit_type
  1241 label *label227
  1242 op notEqual *tmp252 :findFreeUnit:first_unit @unit
  1243 jump *label226 notEqual *tmp252 false
  1244 label *label228
-    * set *tmp242 null
  1245 jump *label223 always
-    * set *tmp242 null
  1246 label *label223
  1247 write .coreX .oreLocator ":layoutThoriumDrill:x"
  1248 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1324 op notEqual *tmp267 *tmp266 null
  1325 jump *label259 equal *tmp267 false
  1326 ucontrol itemDrop @air 1000
-    * set *tmp268 null
  1327 jump *label260 always
  1328 label *label259
-    * set *tmp268 null
  1329 label *label260
  1330 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1331 label *label257
 
  1371 op greaterThan *tmp280 *tmp278 *tmp279
  1372 jump *label268 notEqual *tmp280 false
  1373 label *label270
-    * set *tmp275 null
  1374 jump *label266 always
  1375 label *label265
  1376 label *label271
 
  1381 label *label272
  1382 jump *label271 always
  1383 label *label273
-    * set *tmp275 null
  1384 label *label266
  1385 set :transportStatus:target 0
  1386 set :transportStatus:item null
 
  1398 set .ERROR :error.2:error
  1399 stop
  1400 label *label278
-    * set *tmp286 null
  1401 jump *label277 always
  1402 label *label276
-    * set *tmp286 null
  1403 label *label277
  1404 label *label275
  1405 return :locateOre*retaddr
 
  1435 jump *label286 always
  1436 label *label288
  1437 label *label285
-    * set *tmp290 null
  1438 jump *label284 always
  1439 label *label283
-    * set *tmp290 null
  1440 label *label284
  1441 set :status3.3:text "Mining..."
  1442 write :status3.3:text .display ".status3"
 
  1451 op land *tmp297 *tmp295 *tmp296
  1452 jump *label293 equal *tmp297 false
  1453 jump *label292 always
-    * set *tmp298 null
  1454 jump *label294 always
  1455 label *label293
-    * set *tmp298 null
  1456 label *label294
  1457 ucontrol mine :mineOre:x :mineOre:y
  1458 op greaterThan *tmp299 @second :mineOre:stop
  1459 jump *label295 equal *tmp299 false
  1460 jump *label292 always
-    * set *tmp300 null
  1461 jump *label296 always
  1462 label *label295
-    * set *tmp300 null
  1463 label *label296
  1464 label *label291
  1465 sensor *tmp301 @unit @totalItems
 
  1532 op land *tmp312 *tmp310 *tmp311
  1533 jump *label312 equal *tmp312 false
  1534 ucontrol itemDrop @air 1000
-    * set *tmp313 null
  1535 jump *label313 always
  1536 label *label312
-    * set *tmp313 null
  1537 label *label313
  1538 label *label310
  1539 sensor *tmp314 @unit :fetchBlock:item
 
  1585 setaddr :mineOre*retaddr *label328 (h:*label328)
  1586 call *label12 *invalid :mineOre*retval (m:*label328) (h:*label328)
  1587 label *label328
-    * set *tmp330 null
  1588 jump *label327 always
  1589 label *label326
-    * set *tmp330 null
  1590 label *label327
  1591 label *label324
  1592 set :supplyBase0:supplied true
 
  1595 label *label321
  1596 set *tmp325 null
  1597 label *label322
-    * set *tmp322 *tmp325
  1598 jump *label320 always
  1599 label *label319
-    * set *tmp322 null
  1600 label *label320
  1601 sensor *tmp331 .core @silicon
  1602 op lessThan *tmp332 *tmp331 .targetSilicon
 
  1629 setaddr :mineOre*retaddr *label338 (h:*label338)
  1630 call *label12 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1631 label *label338
-    * set *tmp341 null
  1632 jump *label337 always
  1633 label *label336
-    * set *tmp341 null
  1634 label *label337
  1635 label *label334
  1636 set :supplyBase0:supplied true
 
  1665 setaddr :mineOre*retaddr *label346 (h:*label346)
  1666 call *label12 *invalid :mineOre*retval (m:*label346) (h:*label346)
  1667 label *label346
-    * set *tmp349 null
  1668 jump *label345 always
  1669 label *label344
-    * set *tmp349 null
  1670 label *label345
  1671 label *label342
  1672 set :supplyBase0:supplied true
 
  1677 label *label340
  1678 set *tmp336 *tmp344
  1679 label *label332
-    * set *tmp333 *tmp336
  1680 jump *label330 always
  1681 label *label329
-    * set *tmp333 null
  1682 label *label330
  1683 sensor *tmp350 .battery @totalPower
  1684 op lessThan *tmp351 *tmp350 .powerTarget
 
  1711 setaddr :mineOre*retaddr *label356 (h:*label356)
  1712 call *label12 *invalid :mineOre*retval (m:*label356) (h:*label356)
  1713 label *label356
-    * set *tmp360 null
  1714 jump *label355 always
  1715 label *label354
-    * set *tmp360 null
  1716 label *label355
  1717 label *label352
  1718 set :supplyBase0:supplied true
 
  1726 label *label347
  1727 set *tmp352 null
  1728 label *label348
-    * set *tmp319 *tmp352
  1729 jump *label318 always
  1730 label *label317
-    * set *tmp319 null
  1731 label *label318
  1732 sensor *tmp361 .core @titanium
  1733 op lessThan *tmp362 *tmp361 .targetTitanium
 
  1858 label *label361
  1859 set *tmp371 null
  1860 label *label362
-    * set *tmp369 *tmp371
  1861 jump *label360 always
  1862 label *label359
  1863 set :status1.10:text "Goal 11: Fetching titanium"
 
  1868 setaddr :fetchBlock*retaddr *label390 (h:*label390)
  1869 call *label14 *invalid :fetchBlock*retval (m:*label390) (h:*label390)
  1870 label *label390
-    * set *tmp369 null
  1871 label *label360
  1872 label *label316
  1873 return :supplyBase0*retaddr
 
  1899 label *label397
  1900 set *tmp399 null
  1901 label *label398
-    * set *tmp397 *tmp399
  1902 jump *label396 always
  1903 label *label395
-    * set *tmp397 null
  1904 label *label396
  1905 read *tmp73 .controller ".monos"
  1906 op greaterThan *tmp402 *tmp73 3
 
  1908 setaddr :supplyBase1*retaddr *label401 (h:*label401)
  1909 call *label21 *invalid :supplyBase1*retval (m:*label401) (h:*label401)
  1910 label *label401
-    * set *tmp403 null
  1911 jump *label400 always
  1912 label *label399
  1913 setaddr :supplyBase0*retaddr *label402 (h:*label402)
  1914 call *label20 *invalid :supplyBase0*retval (m:*label402) (h:*label402)
  1915 label *label402
-    * set *tmp403 null
  1916 label *label400
  1917 label *label394
  1918 return :supplyBase*retaddr
 
  1963 label *label406
  1964 set *tmp409 null
  1965 label *label407
-    * set *tmp406 *tmp409
  1966 jump *label405 always
  1967 label *label404
-    * set *tmp406 null
  1968 label *label405
  1969 set :targetMet*retval false
  1970 jump *label403 always
 
  2087 jump *label440 equal *tmp446 false
  2088 set :buildBlockAt*retval :buildBlockAt:building
  2089 jump *label435 always
-    * set *tmp447 null
  2090 jump *label441 always
  2091 label *label440
-    * set *tmp447 null
  2092 label *label441
  2093 jump *label442 equal :buildBlockAt:skipError false
  2094 set :buildBlockAt*retval null
  2095 jump *label435 always
-    * set *tmp448 null
  2096 jump *label443 always
  2097 label *label442
-    * set *tmp448 null
  2098 label *label443
  2099 set :error.3:error "Cannot build at ("
  2100 set .ERROR :error.3:error
  2101 stop
  2102 label *label444
-    * set *tmp445 null
  2103 jump *label439 always
  2104 label *label438
-    * set *tmp445 null
  2105 label *label439
  2106 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  2107 wait 0.25
 
  2112 jump *label448 equal *tmp451 false
  2113 set :buildBlockAt*retval null
  2114 jump *label435 always
-    * set *tmp452 null
  2115 jump *label449 always
  2116 label *label448
-    * set *tmp452 null
  2117 label *label449
  2118 label *label446
  2119 op notEqual *tmp453 :buildBlockAt:type :buildBlockAt:block
 
  2162 op notEqual *tmp472 :findUnits:firstUnit null
  2163 jump *label486 equal *tmp472 false
  2164 label *label488
-    * set *tmp474 :findUnits:count
  2165 op add :findUnits:count :findUnits:count 1
  2166 ubind :findUnits:type
  2167 label *label489
  2168 op notEqual *tmp475 @unit :findUnits:firstUnit
  2169 jump *label488 notEqual *tmp475 false
  2170 label *label490
-    * set *tmp473 null
  2171 jump *label487 always
  2172 label *label486
-    * set *tmp473 null
  2173 label *label487
  2174 set :findUnits*retval :findUnits:count
  2175 label *label485

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
  1231 jump *label231 equal *tmp249 false
  1232 set *tmp251 @unit
  1233 set :findFreeUnit:first_unit *tmp251
-    * set *tmp250 :findFreeUnit:first_unit
  1234 jump *label232 always
  1235 label *label231
-    * set *tmp250 null
  1236 label *label232
  1237 label *label230
  1238 ubind :findFreeUnit:unit_type
 
  1588 label *label327
  1589 label *label324
  1590 set :supplyBase0:supplied true
-    * set *tmp325 :supplyBase0:supplied
  1591 jump *label322 always
  1592 label *label321
-    * set *tmp325 null
  1593 label *label322
  1594 jump *label320 always
  1595 label *label319
 
  1630 label *label337
  1631 label *label334
  1632 set :supplyBase0:supplied true
-    * set *tmp336 :supplyBase0:supplied
  1633 jump *label332 always
  1634 label *label331
  1635 sensor *tmp342 .smelter @sand
 
  1670 label *label339
  1671 set *tmp344 null
  1672 label *label340
-    * set *tmp336 *tmp344
  1673 label *label332
  1674 jump *label330 always
  1675 label *label329
 
  1715 label *label349
  1716 set *tmp355 null
  1717 label *label350
-    * set *tmp352 *tmp355
  1718 jump *label348 always
  1719 label *label347
-    * set *tmp352 null
  1720 label *label348
  1721 jump *label318 always
  1722 label *label317
 
  1845 label *label368
  1846 set *tmp375 *tmp378
  1847 label *label364
-    * set *tmp371 *tmp375
  1848 jump *label362 always
  1849 label *label361
-    * set *tmp371 null
  1850 label *label362
  1851 jump *label360 always
  1852 label *label359
 
  1884 write .titaniumDrill .flareController ":start:drill"
  1885 write false .flareController ":start*finished"
  1886 write 3 .flareController "@counter"
-    * set *tmp399 null
  1887 jump *label398 always
  1888 label *label397
-    * set *tmp399 null
  1889 label *label398
  1890 jump *label396 always
  1891 label *label395
 
  1946 label *label408
  1947 set *tmp412 null
  1948 label *label409
-    * set *tmp409 *tmp412
  1949 jump *label407 always
  1950 label *label406
-    * set *tmp409 null
  1951 label *label407
  1952 jump *label405 always
  1953 label *label404

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1665 label *label345
  1666 label *label342
  1667 set :supplyBase0:supplied true
-    * set *tmp344 :supplyBase0:supplied
  1668 jump *label340 always
  1669 label *label339
-    * set *tmp344 null
  1670 label *label340
  1671 label *label332
  1672 jump *label330 always
 
  1708 label *label355
  1709 label *label352
  1710 set :supplyBase0:supplied true
-    * set *tmp355 :supplyBase0:supplied
  1711 jump *label350 always
  1712 label *label349
-    * set *tmp355 null
  1713 label *label350
  1714 jump *label348 always
  1715 label *label347
 
  1745 setaddr :mineOre.1*retaddr *label366 (h:*label366)
  1746 call *label13 *invalid :mineOre.1*retval (m:*label366) (h:*label366)
  1747 label *label366
-    * set *tmp375 null
  1748 jump *label364 always
  1749 label *label363
  1750 sensor *tmp376 .core @silicon
 
  1838 label *label374
  1839 set *tmp378 *tmp385
  1840 label *label368
-    * set *tmp375 *tmp378
  1841 label *label364
  1842 jump *label362 always
  1843 label *label361
 
  1935 label *label410
  1936 set *tmp415 null
  1937 label *label411
-    * set *tmp412 *tmp415
  1938 jump *label409 always
  1939 label *label408
-    * set *tmp412 null
  1940 label *label409
  1941 jump *label407 always
  1942 label *label406

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1769 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1770 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
  1771 label *label372
-    * set *tmp378 null
  1772 jump *label368 always
  1773 label *label367
  1774 sensor *tmp383 .core @copper
 
  1835 label *label378
  1836 set *tmp385 *tmp388
  1837 label *label374
-    * set *tmp378 *tmp385
  1838 label *label368
  1839 label *label364
  1840 jump *label362 always
 
  1928 label *label412
  1929 set *tmp418 null
  1930 label *label413
-    * set *tmp415 *tmp418
  1931 jump *label411 always
  1932 label *label410
-    * set *tmp415 null
  1933 label *label411
  1934 jump *label409 always
  1935 label *label408

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1781 setaddr :mineOre.1*retaddr *label376 (h:*label376)
  1782 call *label13 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
  1783 label *label376
-    * set *tmp385 null
  1784 jump *label374 always
  1785 label *label373
  1786 sensor *tmp386 .core @lead
 
  1832 label *label382
  1833 set *tmp388 *tmp391
  1834 label *label378
-    * set *tmp385 *tmp388
  1835 label *label374
  1836 label *label368
  1837 label *label364
 
  1921 label *label414
  1922 set *tmp421 null
  1923 label *label415
-    * set *tmp418 *tmp421
  1924 jump *label413 always
  1925 label *label412
-    * set *tmp418 null
  1926 label *label413
  1927 jump *label411 always
  1928 label *label410

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1793 setaddr :mineOre.1*retaddr *label380 (h:*label380)
  1794 call *label13 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
  1795 label *label380
-    * set *tmp388 null
  1796 jump *label378 always
  1797 label *label377
  1798 sensor *tmp389 .core @metaglass
 
  1829 label *label388
  1830 set *tmp391 null
  1831 label *label382
-    * set *tmp388 *tmp391
  1832 label *label378
  1833 label *label374
  1834 label *label368
 
  1914 jump *label414 equal *tmp420 false
  1915 set :targetMet*retval true
  1916 jump *label403 always
-    * set *tmp421 null
  1917 jump *label415 always
  1918 label *label414
-    * set *tmp421 null
  1919 label *label415
  1920 jump *label413 always
  1921 label *label412

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1805 setaddr :mineOre.1*retaddr *label384 (h:*label384)
  1806 call *label13 *invalid :mineOre.1*retval (m:*label384) (h:*label384)
  1807 label *label384
-    * set *tmp391 null
  1808 jump *label382 always
  1809 label *label381
  1810 set :status1.9:text "Goal 10: supplying base"
 
  1826 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1827 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
  1828 label *label388
-    * set *tmp391 null
  1829 label *label382
  1830 label *label378
  1831 label *label374

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-85 instructions):
 
    14 write 511 bank1 511
    15 label *label32
    16 ubind @poly
-    * set *tmp91 @unit
-    * set .builder *tmp91
-    * ulocate building core false @copper .coreX .coreY *tmp93 *tmp92
-    * set .core *tmp92
+   17 set .builder @unit
+   18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label33
    20 op equal *tmp94 .core null
    21 jump *label32 notEqual *tmp94 false
 
    33 call *label30 *invalid :findUnits*retval (m:*label35) (h:*label35)
    34 label *label35
    35 write :findUnits:count .display ".displayFlares"
-    * set *tmp98 :findUnits*retval
-    * set :flares *tmp98
+   36 set :flares :findUnits*retval
    37 set :findUnits:type @mono
    38 setaddr :findUnits*retaddr *label36 (h:*label36)
    39 call *label30 *invalid :findUnits*retval (m:*label36) (h:*label36)
    40 label *label36
    41 write :findUnits:count .display ".displayMonos"
-    * set *tmp100 :findUnits*retval
-    * set :monos *tmp100
+   42 set :monos :findUnits*retval
    43 set :findUnits:type @poly
    44 setaddr :findUnits*retaddr *label37 (h:*label37)
    45 call *label30 *invalid :findUnits*retval (m:*label37) (h:*label37)
    46 label *label37
    47 write :findUnits:count .display ".displayPolys"
-    * set *tmp102 :findUnits*retval
-    * set :polys *tmp102
+   48 set :polys :findUnits*retval
    49 set :buildBlockFromCfg:block @graphite-press
    50 set :buildBlockFromCfg:offsetX -2.5
    51 set :buildBlockFromCfg:offsetY 1.5
 
    59 set :buildBlockFromCfg:config null
    60 setaddr *tmp104 *label42
    61 label *label39
-    * op add *tmp105 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp105
-    * op add *tmp106 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp106
+   62 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   63 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    64 set :buildBlock:block :buildBlockFromCfg:block
    65 set :buildBlock:x :buildBlockFromCfg:x
    66 set :buildBlock:y :buildBlockFromCfg:y
 
    97 set :buildBlockFromCfg.1:config null
    98 setaddr *tmp108 *label48
    99 label *label45
-    * op add *tmp109 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp109
-    * op add *tmp110 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp110
+  100 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+  101 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
   102 set :buildBlock:block :buildBlockFromCfg.1:block
   103 set :buildBlock:x :buildBlockFromCfg.1:x
   104 set :buildBlock:y :buildBlockFromCfg.1:y
 
   135 set :buildBlockFromCfg.2:config null
   136 setaddr *tmp112 *label54
   137 label *label51
-    * op add *tmp113 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp113
-    * op add *tmp114 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp114
+  138 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  139 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   140 set :buildBlock:block :buildBlockFromCfg.2:block
   141 set :buildBlock:x :buildBlockFromCfg.2:x
   142 set :buildBlock:y :buildBlockFromCfg.2:y
 
   170 set :buildBlockFromCfg.3:config null
   171 setaddr *tmp116 *label60
   172 label *label57
-    * op add *tmp117 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp117
-    * op add *tmp118 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp118
+  173 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  174 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   175 set :buildBlock:block :buildBlockFromCfg.3:block
   176 set :buildBlock:x :buildBlockFromCfg.3:x
   177 set :buildBlock:y :buildBlockFromCfg.3:y
 
   209 set :buildBlockFromCfg.4:config null
   210 setaddr *tmp120 *label66
   211 label *label63
-    * op add *tmp121 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp121
-    * op add *tmp122 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp122
+  212 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  213 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   214 set :buildBlock:block :buildBlockFromCfg.4:block
   215 set :buildBlock:x :buildBlockFromCfg.4:x
   216 set :buildBlock:y :buildBlockFromCfg.4:y
 
   247 set :buildBlockFromCfg.5:config null
   248 setaddr *tmp124 *label72
   249 label *label69
-    * op add *tmp125 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp125
-    * op add *tmp126 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp126
+  250 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  251 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   252 set :buildBlock:block :buildBlockFromCfg.5:block
   253 set :buildBlock:x :buildBlockFromCfg.5:x
   254 set :buildBlock:y :buildBlockFromCfg.5:y
 
   294 wait 1e-15
   295 read *tmp138 .oreLocator ":findDrillLocation*finished"
   296 jump *label77 equal *tmp138 false
-    * read *tmp135 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp135
-    * read *tmp136 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp136
-    * read *tmp139 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp139
+  297 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  298 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  299 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   300 op equal *tmp140 :buildTitaniumDrill:result false
   301 jump *label78 equal *tmp140 false
   302 set :error:error "Cannot locate spot for titanium drill"
 
   335 set :buildBlockFromCfg.6:config null
   336 setaddr *tmp143 *label86
   337 label *label83
-    * op add *tmp144 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp144
-    * op add *tmp145 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp145
+  338 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  339 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   340 set :buildBlock:block :buildBlockFromCfg.6:block
   341 set :buildBlock:x :buildBlockFromCfg.6:x
   342 set :buildBlock:y :buildBlockFromCfg.6:y
 
   373 set :buildBlockFromCfg.7:config null
   374 setaddr *tmp147 *label92
   375 label *label89
-    * op add *tmp148 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp148
-    * op add *tmp149 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp149
+  376 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  377 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   378 set :buildBlock:block :buildBlockFromCfg.7:block
   379 set :buildBlock:x :buildBlockFromCfg.7:x
   380 set :buildBlock:y :buildBlockFromCfg.7:y
 
   408 set :buildBlockFromCfg.8:config null
   409 setaddr *tmp151 *label98
   410 label *label95
-    * op add *tmp152 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp152
-    * op add *tmp153 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp153
+  411 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  412 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   413 set :buildBlock:block :buildBlockFromCfg.8:block
   414 set :buildBlock:x :buildBlockFromCfg.8:x
   415 set :buildBlock:y :buildBlockFromCfg.8:y
 
   443 set :buildBlockFromCfg.9:config processor2
   444 setaddr *tmp155 *label104
   445 label *label101
-    * op add *tmp156 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp156
-    * op add *tmp157 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp157
+  446 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  447 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   448 set :buildBlock:block :buildBlockFromCfg.9:block
   449 set :buildBlock:x :buildBlockFromCfg.9:x
   450 set :buildBlock:y :buildBlockFromCfg.9:y
 
   491 set :buildBlockFromCfg.10:config null
   492 setaddr *tmp159 *label110
   493 label *label107
-    * op add *tmp160 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp160
-    * op add *tmp161 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp161
+  494 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  495 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   496 set :buildBlock:block :buildBlockFromCfg.10:block
   497 set :buildBlock:x :buildBlockFromCfg.10:x
   498 set :buildBlock:y :buildBlockFromCfg.10:y
 
   526 set :buildBlockFromCfg.11:config null
   527 setaddr *tmp163 *label116
   528 label *label113
-    * op add *tmp164 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp164
-    * op add *tmp165 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp165
+  529 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  530 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   531 set :buildBlock:block :buildBlockFromCfg.11:block
   532 set :buildBlock:x :buildBlockFromCfg.11:x
   533 set :buildBlock:y :buildBlockFromCfg.11:y
 
   564 set :buildBlockFromCfg.12:config @mono
   565 setaddr *tmp167 *label122
   566 label *label119
-    * op add *tmp168 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp168
-    * op add *tmp169 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp169
+  567 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  568 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   569 set :buildBlock:block :buildBlockFromCfg.12:block
   570 set :buildBlock:x :buildBlockFromCfg.12:x
   571 set :buildBlock:y :buildBlockFromCfg.12:y
 
   633 set :buildBlockFromCfg.13:config null
   634 setaddr *tmp175 *label135
   635 label *label132
-    * op add *tmp176 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp176
-    * op add *tmp177 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp177
+  636 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  637 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   638 set :buildBlock:block :buildBlockFromCfg.13:block
   639 set :buildBlock:x :buildBlockFromCfg.13:x
   640 set :buildBlock:y :buildBlockFromCfg.13:y
 
   668 set :buildBlockFromCfg.14:config null
   669 setaddr *tmp179 *label141
   670 label *label138
-    * op add *tmp180 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp180
-    * op add *tmp181 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp181
+  671 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  672 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   673 set :buildBlock:block :buildBlockFromCfg.14:block
   674 set :buildBlock:x :buildBlockFromCfg.14:x
   675 set :buildBlock:y :buildBlockFromCfg.14:y
 
   703 set :buildBlockFromCfg.15:config null
   704 setaddr *tmp183 *label147
   705 label *label144
-    * op add *tmp184 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp184
-    * op add *tmp185 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp185
+  706 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  707 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   708 set :buildBlock:block :buildBlockFromCfg.15:block
   709 set :buildBlock:x :buildBlockFromCfg.15:x
   710 set :buildBlock:y :buildBlockFromCfg.15:y
 
   742 set :buildBlockFromCfg.16:config null
   743 setaddr *tmp187 *label153
   744 label *label150
-    * op add *tmp188 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp188
-    * op add *tmp189 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp189
+  745 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  746 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   747 set :buildBlock:block :buildBlockFromCfg.16:block
   748 set :buildBlock:x :buildBlockFromCfg.16:x
   749 set :buildBlock:y :buildBlockFromCfg.16:y
 
   777 set :buildBlockFromCfg.17:config null
   778 setaddr *tmp191 *label159
   779 label *label156
-    * op add *tmp192 .coreX :buildBlockFromCfg.17:offsetX
-    * set :buildBlockFromCfg.17:x *tmp192
-    * op add *tmp193 .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlockFromCfg.17:y *tmp193
+  780 op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
+  781 op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
   782 set :buildBlock:block :buildBlockFromCfg.17:block
   783 set :buildBlock:x :buildBlockFromCfg.17:x
   784 set :buildBlock:y :buildBlockFromCfg.17:y
 
   812 set :buildBlockFromCfg.18:config null
   813 setaddr *tmp195 *label165
   814 label *label162
-    * op add *tmp196 .coreX :buildBlockFromCfg.18:offsetX
-    * set :buildBlockFromCfg.18:x *tmp196
-    * op add *tmp197 .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlockFromCfg.18:y *tmp197
+  815 op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
+  816 op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
   817 set :buildBlock:block :buildBlockFromCfg.18:block
   818 set :buildBlock:x :buildBlockFromCfg.18:x
   819 set :buildBlock:y :buildBlockFromCfg.18:y
 
   847 set :buildBlockFromCfg.19:config null
   848 setaddr *tmp199 *label171
   849 label *label168
-    * op add *tmp200 .coreX :buildBlockFromCfg.19:offsetX
-    * set :buildBlockFromCfg.19:x *tmp200
-    * op add *tmp201 .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlockFromCfg.19:y *tmp201
+  850 op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
+  851 op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
   852 set :buildBlock:block :buildBlockFromCfg.19:block
   853 set :buildBlock:x :buildBlockFromCfg.19:x
   854 set :buildBlock:y :buildBlockFromCfg.19:y
 
   885 set :buildBlockFromCfg.20:config null
   886 setaddr *tmp203 *label177
   887 label *label174
-    * op add *tmp204 .coreX :buildBlockFromCfg.20:offsetX
-    * set :buildBlockFromCfg.20:x *tmp204
-    * op add *tmp205 .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlockFromCfg.20:y *tmp205
+  888 op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
+  889 op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
   890 set :buildBlock:block :buildBlockFromCfg.20:block
   891 set :buildBlock:x :buildBlockFromCfg.20:x
   892 set :buildBlock:y :buildBlockFromCfg.20:y
 
   923 set :buildBlockFromCfg.21:config null
   924 setaddr *tmp207 *label183
   925 label *label180
-    * op add *tmp208 .coreX :buildBlockFromCfg.21:offsetX
-    * set :buildBlockFromCfg.21:x *tmp208
-    * op add *tmp209 .coreY :buildBlockFromCfg.21:offsetY
-    * set :buildBlockFromCfg.21:y *tmp209
+  926 op add :buildBlockFromCfg.21:x .coreX :buildBlockFromCfg.21:offsetX
+  927 op add :buildBlockFromCfg.21:y .coreY :buildBlockFromCfg.21:offsetY
   928 set :buildBlock:block :buildBlockFromCfg.21:block
   929 set :buildBlock:x :buildBlockFromCfg.21:x
   930 set :buildBlock:y :buildBlockFromCfg.21:y
 
   959 set :buildBlockFromCfg.22:config null
   960 setaddr *tmp211 *label189
   961 label *label186
-    * op add *tmp212 .coreX :buildBlockFromCfg.22:offsetX
-    * set :buildBlockFromCfg.22:x *tmp212
-    * op add *tmp213 .coreY :buildBlockFromCfg.22:offsetY
-    * set :buildBlockFromCfg.22:y *tmp213
+  962 op add :buildBlockFromCfg.22:x .coreX :buildBlockFromCfg.22:offsetX
+  963 op add :buildBlockFromCfg.22:y .coreY :buildBlockFromCfg.22:offsetY
   964 set :buildBlock:block :buildBlockFromCfg.22:block
   965 set :buildBlock:x :buildBlockFromCfg.22:x
   966 set :buildBlock:y :buildBlockFromCfg.22:y
 
   997 set :buildBlockFromCfg.23:config null
   998 setaddr *tmp215 *label195
   999 label *label192
-    * op add *tmp216 .coreX :buildBlockFromCfg.23:offsetX
-    * set :buildBlockFromCfg.23:x *tmp216
-    * op add *tmp217 .coreY :buildBlockFromCfg.23:offsetY
-    * set :buildBlockFromCfg.23:y *tmp217
+ 1000 op add :buildBlockFromCfg.23:x .coreX :buildBlockFromCfg.23:offsetX
+ 1001 op add :buildBlockFromCfg.23:y .coreY :buildBlockFromCfg.23:offsetY
  1002 set :buildBlock:block :buildBlockFromCfg.23:block
  1003 set :buildBlock:x :buildBlockFromCfg.23:x
  1004 set :buildBlock:y :buildBlockFromCfg.23:y
 
  1032 set :buildBlockFromCfg.24:config null
  1033 setaddr *tmp219 *label201
  1034 label *label198
-    * op add *tmp220 .coreX :buildBlockFromCfg.24:offsetX
-    * set :buildBlockFromCfg.24:x *tmp220
-    * op add *tmp221 .coreY :buildBlockFromCfg.24:offsetY
-    * set :buildBlockFromCfg.24:y *tmp221
+ 1035 op add :buildBlockFromCfg.24:x .coreX :buildBlockFromCfg.24:offsetX
+ 1036 op add :buildBlockFromCfg.24:y .coreY :buildBlockFromCfg.24:offsetY
  1037 set :buildBlock:block :buildBlockFromCfg.24:block
  1038 set :buildBlock:x :buildBlockFromCfg.24:x
  1039 set :buildBlock:y :buildBlockFromCfg.24:y
 
  1067 set :buildBlockFromCfg.25:config null
  1068 setaddr *tmp223 *label207
  1069 label *label204
-    * op add *tmp224 .coreX :buildBlockFromCfg.25:offsetX
-    * set :buildBlockFromCfg.25:x *tmp224
-    * op add *tmp225 .coreY :buildBlockFromCfg.25:offsetY
-    * set :buildBlockFromCfg.25:y *tmp225
+ 1070 op add :buildBlockFromCfg.25:x .coreX :buildBlockFromCfg.25:offsetX
+ 1071 op add :buildBlockFromCfg.25:y .coreY :buildBlockFromCfg.25:offsetY
  1072 set :buildBlock:block :buildBlockFromCfg.25:block
  1073 set :buildBlock:x :buildBlockFromCfg.25:x
  1074 set :buildBlock:y :buildBlockFromCfg.25:y
 
  1169 sensor *tmp248 :findFreeUnit:first_unit @dead
  1170 op equal *tmp249 *tmp248 1
  1171 jump *label231 equal *tmp249 false
-    * set *tmp251 @unit
-    * set :findFreeUnit:first_unit *tmp251
+ 1172 set :findFreeUnit:first_unit @unit
  1173 jump *label232 always
  1174 label *label231
  1175 label *label232
 
  1297 setaddr :moveToBlock*retaddr *label267 (h:*label267)
  1298 call *label9 *invalid :moveToBlock*retval (m:*label267) (h:*label267)
  1299 label *label267
-    * sensor *tmp276 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp276
+ 1300 sensor :depositItems:cap :depositItems:block @itemCapacity
  1301 label *label268
  1302 ucontrol itemDrop :depositItems:block 30
  1303 label *label269
 
  1327 return :depositItems*retaddr
  1328 end
  1329 label *label11
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 *tmp284
+ 1330 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 0
  1331 op equal *tmp285 *tmp283 false
  1332 jump *label276 equal *tmp285 false
  1333 set :error.2:error "Cannot locate ore"
 
  1341 return :locateOre*retaddr
  1342 end
  1343 label *label12
-    * op min *tmp287 :mineOre:amount 30
-    * set :mineOre:amount *tmp287
+ 1344 op min :mineOre:amount :mineOre:amount 30
  1345 set :transportStatus.1:target :mineOre:amount
  1346 set :transportStatus.1:item :mineOre:ore
  1347 write :transportStatus.1:target .display ".transportTarget"
 
  1376 set :status3.3:text "Mining..."
  1377 write :status3.3:text .display ".status3"
  1378 label *label289
-    * op add *tmp293 @second 10
-    * set :mineOre:stop *tmp293
+ 1379 op add :mineOre:stop @second 10
  1380 label *label290
-    * sensor *tmp294 @unit @firstItem
-    * set :mineOre:item *tmp294
+ 1381 sensor :mineOre:item @unit @firstItem
  1382 op notEqual *tmp295 :mineOre:item null
  1383 op notEqual *tmp296 :mineOre:item :mineOre:ore
  1384 op land *tmp297 *tmp295 *tmp296
 
  1416 write :status2:item .display ".item2"
  1417 write :status2:block .display ".block2"
  1418 label *label299
-    * set *tmp303 :mineOre.1:ore
-    * set :mineOre:ore *tmp303
+ 1419 set :mineOre:ore :mineOre.1:ore
  1420 set :mineOre:amount 30
  1421 set :mineOre:block .core
  1422 setaddr :mineOre*retaddr *label300 (h:*label300)
 
  1426 return :mineOre.1*retaddr
  1427 end
  1428 label *label14
-    * sensor *tmp304 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp304
+ 1429 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1430 set :transportStatus.2:item :fetchBlock:item
  1431 write :transportStatus.2:target .display ".transportTarget"
  1432 write :transportStatus.2:item .display ".transportItem"
 
  1456 label *label305
  1457 label *label309
  1458 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp309 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp309
+ 1459 sensor :fetchBlock:unitItem @unit @firstItem
  1460 op notEqual *tmp310 :fetchBlock:unitItem null
  1461 op notEqual *tmp311 :fetchBlock:unitItem :fetchBlock:item
  1462 op land *tmp312 *tmp310 *tmp311
 
  1502 write :status2.2:item .display ".item2"
  1503 write :status2.2:block .display ".block2"
  1504 label *label325
-    * sensor *tmp326 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp326
+ 1505 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1506 sensor *tmp327 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp328 :supplyBlock:blockCapacity *tmp327
-    * set :supplyBlock:missing *tmp328
+ 1507 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp327
  1508 op greaterThan *tmp329 :supplyBlock:missing 0
  1509 jump *label326 equal *tmp329 false
  1510 set :mineOre:ore :supplyBlock:ore
 
  1542 write :status2.3:item .display ".item2"
  1543 write :status2.3:block .display ".block2"
  1544 label *label335
-    * sensor *tmp337 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp337
+ 1545 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1546 sensor *tmp338 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp339 :supplyBlock.1:blockCapacity *tmp338
-    * set :supplyBlock.1:missing *tmp339
+ 1547 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp338
  1548 op greaterThan *tmp340 :supplyBlock.1:missing 0
  1549 jump *label336 equal *tmp340 false
  1550 set :mineOre:ore :supplyBlock.1:ore
 
  1575 write :status2.4:item .display ".item2"
  1576 write :status2.4:block .display ".block2"
  1577 label *label343
-    * sensor *tmp345 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp345
+ 1578 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1579 sensor *tmp346 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp347 :supplyBlock.2:blockCapacity *tmp346
-    * set :supplyBlock.2:missing *tmp347
+ 1580 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp346
  1581 op greaterThan *tmp348 :supplyBlock.2:missing 0
  1582 jump *label344 equal *tmp348 false
  1583 set :mineOre:ore :supplyBlock.2:ore
 
  1616 write :status2.5:item .display ".item2"
  1617 write :status2.5:block .display ".block2"
  1618 label *label353
-    * sensor *tmp356 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp356
+ 1619 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1620 sensor *tmp357 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp358 :supplyBlock.3:blockCapacity *tmp357
-    * set :supplyBlock.3:missing *tmp358
+ 1621 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp357
  1622 op greaterThan *tmp359 :supplyBlock.3:missing 0
  1623 jump *label354 equal *tmp359 false
  1624 set :mineOre:ore :supplyBlock.3:ore
 
  1646 jump *label357 equal *tmp362 false
  1647 sensor *tmp364 .core @titanium
  1648 op sub *tmp365 .targetTitanium *tmp364
-    * op min *tmp366 7 *tmp365
-    * set *tmp363 *tmp366
+ 1649 op min *tmp363 7 *tmp365
  1650 jump *label358 always
  1651 label *label357
  1652 set *tmp363 100
 
  1676 set :status1.5:text "Goal 6: silicon requirement"
  1677 write :status1.5:text .display ".status1"
  1678 label *label369
-    * sensor *tmp379 .core @coal
-    * set :supplyBase0:coal *tmp379
-    * sensor *tmp380 .core @sand
-    * set :supplyBase0:sand *tmp380
+ 1679 sensor :supplyBase0:coal .core @coal
+ 1680 sensor :supplyBase0:sand .core @sand
  1681 op lessThan *tmp381 :supplyBase0:coal :supplyBase0:sand
  1682 jump *label370 equal *tmp381 false
  1683 set *tmp382 @coal
 
  1731 set :status1.9:text "Goal 10: supplying base"
  1732 write :status1.9:text .display ".status1"
  1733 label *label385
-    * sensor *tmp392 .core @coal
-    * set :supplyBase0:coal.1 *tmp392
-    * sensor *tmp393 .core @sand
-    * set :supplyBase0:sand.1 *tmp393
+ 1734 sensor :supplyBase0:coal.1 .core @coal
+ 1735 sensor :supplyBase0:sand.1 .core @sand
  1736 op lessThanEq *tmp394 :supplyBase0:coal.1 :supplyBase0:sand.1
  1737 jump *label386 equal *tmp394 false
  1738 set *tmp395 @coal
 
  1896 write :meetTarget:metaglass .display ".targetMetaglass"
  1897 set .targetCopper :meetTarget:copper
  1898 op add *tmp424 :meetTarget:lead .leadSurplus
-    * op add *tmp425 *tmp424 1
-    * set .targetLead *tmp425
+ 1899 op add .targetLead *tmp424 1
  1900 set .targetGraphite :meetTarget:graphite
  1901 set .targetSilicon :meetTarget:silicon
  1902 set .targetTitanium :meetTarget:titanium
 
  1944 return :log*retaddr
  1945 end
  1946 label *label26
-    * sensor *tmp441 :logBlock:block @id
-    * set :log:encodedId *tmp441
+ 1947 sensor :log:encodedId :logBlock:block @id
  1948 setaddr :log*retaddr *label434 (h:*label434)
  1949 call *label25 *invalid :log*retval (m:*label434) (h:*label434)
  1950 label *label434
 
  1960 set :status3.4:text "Building..."
  1961 write :status3.4:text .display ".status3"
  1962 label *label437
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp442 *tmp443
-    * set :buildBlockAt:building *tmp442
+ 1963 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1964 op notEqual *tmp444 :buildBlockAt:building null
  1965 jump *label438 equal *tmp444 false
  1966 op equal *tmp446 :buildBlockAt:type :buildBlockAt:block
 
  1986 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1987 wait 0.25
  1988 label *label445
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp449 *tmp450
-    * set :buildBlockAt:building *tmp449
+ 1989 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1990 op equal *tmp451 :buildBlockAt:building null
  1991 jump *label448 equal *tmp451 false
  1992 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1211 jump *label237 notEqual *tmp260 false
  1212 label *label239
  1213 label *label241
-    * jump *label243 equal true false
  1214 setaddr :supplyBase*retaddr *label244 (h:*label244)
  1215 call *label22 *invalid :supplyBase*retval (m:*label244) (h:*label244)
  1216 label *label244

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-63 instructions):
 
    17 set .builder @unit
    18 ulocate building core false @copper .coreX .coreY 0 .core
    19 label *label33
-    * op equal *tmp94 .core null
-    * jump *label32 notEqual *tmp94 false
+   20 jump *label32 equal .core null
    21 label *label34
    22 set .display processor1
    23 set .flareController processor3
 
   296 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   297 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   298 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp140 :buildTitaniumDrill:result false
-    * jump *label78 equal *tmp140 false
+  299 jump *label78 notEqual :buildTitaniumDrill:result false
   300 set :error:error "Cannot locate spot for titanium drill"
   301 set .ERROR :error:error
   302 stop
 
   605 call *label22 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   606 label *label128
   607 sensor *tmp170 .battery @totalPower
-    * op lessThan *tmp171 *tmp170 300
-    * jump *label129 equal *tmp171 false
+  608 jump *label129 greaterThanEq *tmp170 300
   609 jump *label127 always
   610 jump *label130 always
   611 label *label129
   612 label *label130
   613 label *label126
   614 read *tmp73 .controller ".monos"
-    * op lessThan *tmp173 *tmp73 3
-    * jump *label125 notEqual *tmp173 false
+  615 jump *label125 lessThan *tmp73 3
   616 label *label127
   617 set .graphiteSurplus 60
   618 set .siliconSurplus 100
 
  1098 write 3 .controller ".polyTarget"
  1099 label *label210
  1100 read *tmp74 .controller ".polys"
-    * op lessThan *tmp226 *tmp74 3
-    * jump *label212 equal *tmp226 false
+ 1101 jump *label212 greaterThanEq *tmp74 3
  1102 setaddr :supplyBase*retaddr *label213 (h:*label213)
  1103 call *label22 *invalid :supplyBase*retval (m:*label213) (h:*label213)
  1104 label *label213
 
  1109 write 6 .controller ".polyTarget"
  1110 label *label214
  1111 read *tmp72 .controller ".flares"
-    * op lessThan *tmp227 *tmp72 2
-    * jump *label216 equal *tmp227 false
+ 1112 jump *label216 greaterThanEq *tmp72 2
  1113 setaddr :supplyBase*retaddr *label217 (h:*label217)
  1114 call *label22 *invalid :supplyBase*retval (m:*label217) (h:*label217)
  1115 label *label217
 
  1138 label *label222
  1139 label *label220
  1140 read *tmp240 .oreLocator ":findDrillLocation*finished"
-    * op equal *tmp241 *tmp240 false
-    * jump *label219 notEqual *tmp241 false
+ 1141 jump *label219 equal *tmp240 false
  1142 label *label221
  1143 write null .display ".nextBlock"
  1144 set :findFreeUnit:unit_type @flare
  1145 set :findFreeUnit:initial_flag 0
  1146 ubind :findFreeUnit:unit_type
-    * op equal *tmp243 @unit null
-    * jump *label224 equal *tmp243 false
+ 1147 jump *label224 notEqual @unit null
  1148 jump *label223 always
  1149 jump *label225 always
  1150 label *label224
 
  1152 set :findFreeUnit:first_unit @unit
  1153 label *label226
  1154 sensor *tmp245 @unit @controlled
-    * op equal *tmp246 *tmp245 0
-    * jump *label229 equal *tmp246 false
+ 1155 jump *label229 notEqual *tmp245 0
  1156 ucontrol flag :findFreeUnit:initial_flag
  1157 jump *label223 always
  1158 jump *label230 always
  1159 label *label229
  1160 sensor *tmp248 :findFreeUnit:first_unit @dead
-    * op equal *tmp249 *tmp248 1
-    * jump *label231 equal *tmp249 false
+ 1161 jump *label231 notEqual *tmp248 1
  1162 set :findFreeUnit:first_unit @unit
  1163 jump *label232 always
  1164 label *label231
 
  1166 label *label230
  1167 ubind :findFreeUnit:unit_type
  1168 label *label227
-    * op notEqual *tmp252 :findFreeUnit:first_unit @unit
-    * jump *label226 notEqual *tmp252 false
+ 1169 jump *label226 notEqual :findFreeUnit:first_unit @unit
  1170 label *label228
  1171 jump *label223 always
  1172 label *label223
 
  1183 label *label236
  1184 label *label234
  1185 read *tmp257 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp258 *tmp257 false
-    * jump *label233 notEqual *tmp258 false
+ 1186 jump *label233 equal *tmp257 false
  1187 label *label235
  1188 write 0 .display ".totalTargets"
  1189 write null .display ".nextBlock"
 
  1195 read *tmp72 .controller ".flares"
  1196 read *tmp73 .controller ".monos"
  1197 op add *tmp259 *tmp72 *tmp73
-    * op lessThan *tmp260 *tmp259 16
-    * jump *label237 notEqual *tmp260 false
+ 1198 jump *label237 lessThan *tmp259 16
  1199 label *label239
  1200 label *label241
  1201 setaddr :supplyBase*retaddr *label244 (h:*label244)
 
  1216 label *label248
  1217 label *label249
  1218 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
-    * op equal *tmp262 *tmp261 false
-    * jump *label251 equal *tmp262 false
+ 1219 jump *label251 notEqual *tmp261 false
  1220 op sub *tmp263 :moveTo:radius 0.5
  1221 ucontrol approach :moveTo:x :moveTo:y *tmp263
  1222 label *label250
 
  1243 label *label255
  1244 label *label256
  1245 sensor *tmp266 @unit @firstItem
-    * op notEqual *tmp267 *tmp266 null
-    * jump *label259 equal *tmp267 false
+ 1246 jump *label259 equal *tmp266 null
  1247 ucontrol itemDrop @air 1000
  1248 jump *label260 always
  1249 label *label259
 
  1251 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1252 label *label257
  1253 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp269
-    * op equal *tmp270 *tmp269 false
-    * jump *label256 notEqual *tmp270 false
+ 1254 jump *label256 equal *tmp269 false
  1255 label *label258
  1256 label *label254
  1257 return :moveToEmpty*retaddr
 
  1273 write :status3.2:text .display ".status3"
  1274 label *label264
  1275 sensor *tmp273 @unit @firstItem
-    * op equal *tmp274 *tmp273 :depositItems:item
-    * jump *label265 equal *tmp274 false
+ 1276 jump *label265 notEqual *tmp273 :depositItems:item
  1277 set :moveToBlock:block :depositItems:block
  1278 set :moveToBlock:radius 6
  1279 setaddr :moveToBlock*retaddr *label267 (h:*label267)
 
  1286 sensor *tmp277 @unit @firstItem
  1287 op mul *tmp278 *tmp277 :depositItems:cap
  1288 sensor *tmp279 :depositItems:block :depositItems:item
-    * op greaterThan *tmp280 *tmp278 *tmp279
-    * jump *label268 notEqual *tmp280 false
+ 1289 jump *label268 greaterThan *tmp278 *tmp279
  1290 label *label270
  1291 jump *label266 always
  1292 label *label265
  1293 label *label271
  1294 sensor *tmp281 @unit @firstItem
-    * op notEqual *tmp282 *tmp281 null
-    * jump *label273 equal *tmp282 false
+ 1295 jump *label273 equal *tmp281 null
  1296 ucontrol itemDrop @air 1000
  1297 label *label272
  1298 jump *label271 always
 
  1308 end
  1309 label *label11
  1310 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 0
-    * op equal *tmp285 *tmp283 false
-    * jump *label276 equal *tmp285 false
+ 1311 jump *label276 notEqual *tmp283 false
  1312 set :error.2:error "Cannot locate ore"
  1313 set .ERROR :error.2:error
  1314 stop
 
  1338 call *label8 *invalid :moveToEmpty*retval (m:*label282) (h:*label282)
  1339 label *label282
  1340 sensor *tmp288 @unit @firstItem
-    * op notEqual *tmp289 *tmp288 :mineOre:ore
-    * jump *label283 equal *tmp289 false
+ 1341 jump *label283 equal *tmp288 :mineOre:ore
  1342 label *label286
  1343 sensor *tmp291 @unit @firstItem
-    * op notEqual *tmp292 *tmp291 null
-    * jump *label288 equal *tmp292 false
+ 1344 jump *label288 equal *tmp291 null
  1345 ucontrol itemDrop @air 1000
  1346 label *label287
  1347 jump *label286 always
 
  1365 label *label293
  1366 label *label294
  1367 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp299 @second :mineOre:stop
-    * jump *label295 equal *tmp299 false
+ 1368 jump *label295 lessThanEq @second :mineOre:stop
  1369 jump *label292 always
  1370 jump *label296 always
  1371 label *label295
  1372 label *label296
  1373 label *label291
  1374 sensor *tmp301 @unit @totalItems
-    * op lessThan *tmp302 *tmp301 :mineOre:amount
-    * jump *label290 notEqual *tmp302 false
+ 1375 jump *label290 lessThan *tmp301 :mineOre:amount
  1376 label *label292
  1377 ucontrol unbind
  1378 set :depositItems:block :mineOre:block
 
  1422 label *label304
  1423 label *label306
  1424 sensor *tmp307 @unit @firstItem
-    * op notEqual *tmp308 *tmp307 null
-    * jump *label308 equal *tmp308 false
+ 1425 jump *label308 equal *tmp307 null
  1426 ucontrol itemDrop @air 1000
  1427 label *label307
  1428 jump *label306 always
 
  1456 end
  1457 label *label20
  1458 set :supplyBase0:supplied false
-    * op equal *tmp318 .unloader1 null
-    * jump *label317 equal *tmp318 false
+ 1459 jump *label317 notEqual .unloader1 null
  1460 sensor *tmp320 .core @graphite
-    * op lessThan *tmp321 *tmp320 .targetGraphite
-    * jump *label319 equal *tmp321 false
+ 1461 jump *label319 greaterThanEq *tmp320 .targetGraphite
  1462 sensor *tmp323 .press @coal
-    * op lessThan *tmp324 *tmp323 5
-    * jump *label321 equal *tmp324 false
+ 1463 jump *label321 greaterThanEq *tmp323 5
  1464 set :status1:text "Goal 1: graphite requirement"
  1465 write :status1:text .display ".status1"
  1466 label *label323
 
  1476 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1477 sensor *tmp327 :supplyBlock:block :supplyBlock:ore
  1478 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp327
-    * op greaterThan *tmp329 :supplyBlock:missing 0
-    * jump *label326 equal *tmp329 false
+ 1479 jump *label326 lessThanEq :supplyBlock:missing 0
  1480 set :mineOre:ore :supplyBlock:ore
  1481 set :mineOre:amount :supplyBlock:blockCapacity
  1482 set :mineOre:block :supplyBlock:block
 
  1495 label *label319
  1496 label *label320
  1497 sensor *tmp331 .core @silicon
-    * op lessThan *tmp332 *tmp331 .targetSilicon
-    * jump *label329 equal *tmp332 false
+ 1498 jump *label329 greaterThanEq *tmp331 .targetSilicon
  1499 sensor *tmp334 .smelter @coal
-    * op lessThan *tmp335 *tmp334 5
-    * jump *label331 equal *tmp335 false
+ 1500 jump *label331 greaterThanEq *tmp334 5
  1501 set :status1.1:text "Goal 2: coal for silicon requirement"
  1502 write :status1.1:text .display ".status1"
  1503 label *label333
 
  1513 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1514 sensor *tmp338 :supplyBlock.1:block :supplyBlock.1:ore
  1515 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp338
-    * op greaterThan *tmp340 :supplyBlock.1:missing 0
-    * jump *label336 equal *tmp340 false
+ 1516 jump *label336 lessThanEq :supplyBlock.1:missing 0
  1517 set :mineOre:ore :supplyBlock.1:ore
  1518 set :mineOre:amount :supplyBlock.1:blockCapacity
  1519 set :mineOre:block :supplyBlock.1:block
 
  1528 jump *label332 always
  1529 label *label331
  1530 sensor *tmp342 .smelter @sand
-    * op lessThan *tmp343 *tmp342 5
-    * jump *label339 equal *tmp343 false
+ 1531 jump *label339 greaterThanEq *tmp342 5
  1532 set :status1.2:text "Goal 3: sand for silicon requirement"
  1533 write :status1.2:text .display ".status1"
  1534 label *label341
 
  1544 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1545 sensor *tmp346 :supplyBlock.2:block :supplyBlock.2:ore
  1546 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp346
-    * op greaterThan *tmp348 :supplyBlock.2:missing 0
-    * jump *label344 equal *tmp348 false
+ 1547 jump *label344 lessThanEq :supplyBlock.2:missing 0
  1548 set :mineOre:ore :supplyBlock.2:ore
  1549 set :mineOre:amount :supplyBlock.2:blockCapacity
  1550 set :mineOre:block :supplyBlock.2:block
 
  1564 label *label329
  1565 label *label330
  1566 sensor *tmp350 .battery @totalPower
-    * op lessThan *tmp351 *tmp350 .powerTarget
-    * jump *label347 equal *tmp351 false
+ 1567 jump *label347 greaterThanEq *tmp350 .powerTarget
  1568 sensor *tmp353 .generator @coal
-    * op lessThan *tmp354 *tmp353 2
-    * jump *label349 equal *tmp354 false
+ 1569 jump *label349 greaterThanEq *tmp353 2
  1570 set :status1.3:text "Goal 4: supplying generator"
  1571 write :status1.3:text .display ".status1"
  1572 label *label351
 
  1582 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1583 sensor *tmp357 :supplyBlock.3:block :supplyBlock.3:ore
  1584 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp357
-    * op greaterThan *tmp359 :supplyBlock.3:missing 0
-    * jump *label354 equal *tmp359 false
+ 1585 jump *label354 lessThanEq :supplyBlock.3:missing 0
  1586 set :mineOre:ore :supplyBlock.3:ore
  1587 set :mineOre:amount :supplyBlock.3:blockCapacity
  1588 set :mineOre:block :supplyBlock.3:block
 
  1604 label *label317
  1605 label *label318
  1606 sensor *tmp361 .core @titanium
-    * op lessThan *tmp362 *tmp361 .targetTitanium
-    * jump *label357 equal *tmp362 false
+ 1607 jump *label357 greaterThanEq *tmp361 .targetTitanium
  1608 sensor *tmp364 .core @titanium
  1609 op sub *tmp365 .targetTitanium *tmp364
  1610 op min *tmp363 7 *tmp365
 
  1614 label *label358
  1615 set :supplyBase0:titaniumTrigger *tmp363
  1616 sensor *tmp367 .titaniumDrill @titanium
-    * op lessThan *tmp368 *tmp367 :supplyBase0:titaniumTrigger
-    * jump *label359 equal *tmp368 false
-    * op equal *tmp370 :supplyBase0:supplied false
-    * jump *label361 equal *tmp370 false
+ 1617 jump *label359 greaterThanEq *tmp367 :supplyBase0:titaniumTrigger
+ 1618 jump *label361 notEqual :supplyBase0:supplied false
  1619 sensor *tmp372 .battery @totalPower
  1620 op mul *tmp373 .unloader1 .powerTarget
-    * op lessThan *tmp374 *tmp372 *tmp373
-    * jump *label363 equal *tmp374 false
+ 1621 jump *label363 greaterThanEq *tmp372 *tmp373
  1622 set :status1.4:text "Goal 5: supplying generator"
  1623 write :status1.4:text .display ".status1"
  1624 label *label365
 
  1629 jump *label364 always
  1630 label *label363
  1631 sensor *tmp376 .core @silicon
-    * op lessThan *tmp377 *tmp376 .targetSilicon
-    * jump *label367 equal *tmp377 false
+ 1632 jump *label367 greaterThanEq *tmp376 .targetSilicon
  1633 set :status1.5:text "Goal 6: silicon requirement"
  1634 write :status1.5:text .display ".status1"
  1635 label *label369
  1636 sensor :supplyBase0:coal .core @coal
  1637 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp381 :supplyBase0:coal :supplyBase0:sand
-    * jump *label370 equal *tmp381 false
+ 1638 jump *label370 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1639 set *tmp382 @coal
  1640 jump *label371 always
  1641 label *label370
 
  1649 jump *label368 always
  1650 label *label367
  1651 sensor *tmp383 .core @copper
-    * op lessThan *tmp384 *tmp383 .targetCopper
-    * jump *label373 equal *tmp384 false
+ 1652 jump *label373 greaterThanEq *tmp383 .targetCopper
  1653 set :status1.6:text "Goal 7: copper requirement"
  1654 write :status1.6:text .display ".status1"
  1655 label *label375
 
  1660 jump *label374 always
  1661 label *label373
  1662 sensor *tmp386 .core @lead
-    * op lessThan *tmp387 *tmp386 .targetLead
-    * jump *label377 equal *tmp387 false
+ 1663 jump *label377 greaterThanEq *tmp386 .targetLead
  1664 set :status1.7:text "Goal 8: lead requirement"
  1665 write :status1.7:text .display ".status1"
  1666 label *label379
 
  1671 jump *label378 always
  1672 label *label377
  1673 sensor *tmp389 .core @metaglass
-    * op lessThan *tmp390 *tmp389 .targetMetaglass
-    * jump *label381 equal *tmp390 false
+ 1674 jump *label381 greaterThanEq *tmp389 .targetMetaglass
  1675 set :status1.8:text "Goal 9: metaglass requirement"
  1676 write :status1.8:text .display ".status1"
  1677 label *label383
 
  1686 label *label385
  1687 sensor :supplyBase0:coal.1 .core @coal
  1688 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp394 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label386 equal *tmp394 false
+ 1689 jump *label386 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1690 set *tmp395 @coal
  1691 jump *label387 always
  1692 label *label386
 
  1731 return :supplyBase1*retaddr
  1732 end
  1733 label *label22
-    * op equal *tmp396 .flareControllerStarted false
-    * jump *label395 equal *tmp396 false
+ 1734 jump *label395 notEqual .flareControllerStarted false
  1735 read *tmp72 .controller ".flares"
-    * op greaterThan *tmp398 *tmp72 0
-    * jump *label397 equal *tmp398 false
+ 1736 jump *label397 lessThanEq *tmp72 0
  1737 set .flareControllerStarted true
  1738 write .core .flareController ":start:aCore"
  1739 write .titaniumDrill .flareController ":start:drill"
 
  1746 label *label395
  1747 label *label396
  1748 read *tmp73 .controller ".monos"
-    * op greaterThan *tmp402 *tmp73 3
-    * jump *label399 equal *tmp402 false
+ 1749 jump *label399 lessThanEq *tmp73 3
  1750 setaddr :supplyBase1*retaddr *label401 (h:*label401)
  1751 call *label21 *invalid :supplyBase1*retval (m:*label401) (h:*label401)
  1752 label *label401
 
  1761 end
  1762 label *label23
  1763 sensor *tmp404 .core @copper
-    * op greaterThanEq *tmp405 *tmp404 .targetCopper
-    * jump *label404 equal *tmp405 false
+ 1764 jump *label404 lessThan *tmp404 .targetCopper
  1765 sensor *tmp407 .core @lead
-    * op greaterThanEq *tmp408 *tmp407 .targetLead
-    * jump *label406 equal *tmp408 false
+ 1766 jump *label406 lessThan *tmp407 .targetLead
  1767 sensor *tmp410 .core @graphite
-    * op greaterThanEq *tmp411 *tmp410 .targetGraphite
-    * jump *label408 equal *tmp411 false
+ 1768 jump *label408 lessThan *tmp410 .targetGraphite
  1769 sensor *tmp413 .core @silicon
-    * op greaterThanEq *tmp414 *tmp413 .targetSilicon
-    * jump *label410 equal *tmp414 false
+ 1770 jump *label410 lessThan *tmp413 .targetSilicon
  1771 sensor *tmp416 .core @titanium
-    * op greaterThanEq *tmp417 *tmp416 .targetTitanium
-    * jump *label412 equal *tmp417 false
+ 1772 jump *label412 lessThan *tmp416 .targetTitanium
  1773 sensor *tmp419 .core @metaglass
-    * op greaterThanEq *tmp420 *tmp419 .targetMetaglass
-    * jump *label414 equal *tmp420 false
+ 1774 jump *label414 lessThan *tmp419 .targetMetaglass
  1775 set :targetMet*retval true
  1776 jump *label403 always
  1777 jump *label415 always
 
  1860 setaddr :targetMet*retaddr *label429 (h:*label429)
  1861 call *label23 *invalid :targetMet*retval (m:*label429) (h:*label429)
  1862 label *label429
-    * op equal *tmp433 :targetMet*retval false
-    * jump *label428 equal *tmp433 false
+ 1863 jump *label428 notEqual :targetMet*retval false
  1864 setaddr :supplyBase*retaddr *label430 (h:*label430)
  1865 call *label22 *invalid :supplyBase*retval (m:*label430) (h:*label430)
  1866 label *label430
 
  1903 write :status3.4:text .display ".status3"
  1904 label *label437
  1905 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp444 :buildBlockAt:building null
-    * jump *label438 equal *tmp444 false
-    * op equal *tmp446 :buildBlockAt:type :buildBlockAt:block
-    * jump *label440 equal *tmp446 false
+ 1906 jump *label438 equal :buildBlockAt:building null
+ 1907 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1908 set :buildBlockAt*retval :buildBlockAt:building
  1909 jump *label435 always
  1910 jump *label441 always
 
  1927 wait 0.25
  1928 label *label445
  1929 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp451 :buildBlockAt:building null
-    * jump *label448 equal *tmp451 false
+ 1930 jump *label448 notEqual :buildBlockAt:building null
  1931 set :buildBlockAt*retval null
  1932 jump *label435 always
  1933 jump *label449 always
  1934 label *label448
  1935 label *label449
  1936 label *label446
-    * op notEqual *tmp453 :buildBlockAt:type :buildBlockAt:block
-    * jump *label445 notEqual *tmp453 false
+ 1937 jump *label445 notEqual :buildBlockAt:type :buildBlockAt:block
  1938 label *label447
  1939 set :logBlock:block :buildBlockAt:block
  1940 setaddr :logBlock*retaddr *label450 (h:*label450)
 
  1976 set :findUnits:count 0
  1977 ubind :findUnits:type
  1978 set :findUnits:firstUnit @unit
-    * op notEqual *tmp472 :findUnits:firstUnit null
-    * jump *label486 equal *tmp472 false
+ 1979 jump *label486 equal :findUnits:firstUnit null
  1980 label *label488
  1981 op add :findUnits:count :findUnits:count 1
  1982 ubind :findUnits:type
  1983 label *label489
-    * op notEqual *tmp475 @unit :findUnits:firstUnit
-    * jump *label488 notEqual *tmp475 false
+ 1984 jump *label488 notEqual @unit :findUnits:firstUnit
  1985 label *label490
  1986 jump *label487 always
  1987 label *label486

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-36 instructions):
 
   301 set .ERROR :error:error
   302 stop
   303 label *label80
-    * jump *label79 always
   304 label *label78
   305 label *label79
   306 write @pneumatic-drill .display ".nextBlock"
 
   606 sensor *tmp170 .battery @totalPower
   607 jump *label129 greaterThanEq *tmp170 300
   608 jump *label127 always
-    * jump *label130 always
   609 label *label129
   610 label *label130
   611 label *label126
 
  1144 ubind :findFreeUnit:unit_type
  1145 jump *label224 notEqual @unit null
  1146 jump *label223 always
-    * jump *label225 always
  1147 label *label224
  1148 label *label225
  1149 set :findFreeUnit:first_unit @unit
 
  1157 sensor *tmp248 :findFreeUnit:first_unit @dead
  1158 jump *label231 notEqual *tmp248 1
  1159 set :findFreeUnit:first_unit @unit
-    * jump *label232 always
  1160 label *label231
  1161 label *label232
  1162 label *label230
 
  1164 label *label227
  1165 jump *label226 notEqual :findFreeUnit:first_unit @unit
  1166 label *label228
-    * jump *label223 always
  1167 label *label223
  1168 write .coreX .oreLocator ":layoutThoriumDrill:x"
  1169 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1240 sensor *tmp266 @unit @firstItem
  1241 jump *label259 equal *tmp266 null
  1242 ucontrol itemDrop @air 1000
-    * jump *label260 always
  1243 label *label259
  1244 label *label260
  1245 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1307 set .ERROR :error.2:error
  1308 stop
  1309 label *label278
-    * jump *label277 always
  1310 label *label276
  1311 label *label277
  1312 label *label275
 
  1340 jump *label286 always
  1341 label *label288
  1342 label *label285
-    * jump *label284 always
  1343 label *label283
  1344 label *label284
  1345 set :status3.3:text "Mining..."
 
  1353 op land *tmp297 *tmp295 *tmp296
  1354 jump *label293 equal *tmp297 false
  1355 jump *label292 always
-    * jump *label294 always
  1356 label *label293
  1357 label *label294
  1358 ucontrol mine :mineOre:x :mineOre:y
  1359 jump *label295 lessThanEq @second :mineOre:stop
  1360 jump *label292 always
-    * jump *label296 always
  1361 label *label295
  1362 label *label296
  1363 label *label291
 
  1426 op land *tmp312 *tmp310 *tmp311
  1427 jump *label312 equal *tmp312 false
  1428 ucontrol itemDrop @air 1000
-    * jump *label313 always
  1429 label *label312
  1430 label *label313
  1431 label *label310
 
  1472 setaddr :mineOre*retaddr *label328 (h:*label328)
  1473 call *label12 *invalid :mineOre*retval (m:*label328) (h:*label328)
  1474 label *label328
-    * jump *label327 always
  1475 label *label326
  1476 label *label327
  1477 label *label324
  1478 set :supplyBase0:supplied true
-    * jump *label322 always
  1479 label *label321
  1480 label *label322
-    * jump *label320 always
  1481 label *label319
  1482 label *label320
  1483 sensor *tmp331 .core @silicon
 
  1506 setaddr :mineOre*retaddr *label338 (h:*label338)
  1507 call *label12 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1508 label *label338
-    * jump *label337 always
  1509 label *label336
  1510 label *label337
  1511 label *label334
 
  1536 setaddr :mineOre*retaddr *label346 (h:*label346)
  1537 call *label12 *invalid :mineOre*retval (m:*label346) (h:*label346)
  1538 label *label346
-    * jump *label345 always
  1539 label *label344
  1540 label *label345
  1541 label *label342
  1542 set :supplyBase0:supplied true
-    * jump *label340 always
  1543 label *label339
  1544 label *label340
  1545 label *label332
-    * jump *label330 always
  1546 label *label329
  1547 label *label330
  1548 sensor *tmp350 .battery @totalPower
 
  1571 setaddr :mineOre*retaddr *label356 (h:*label356)
  1572 call *label12 *invalid :mineOre*retval (m:*label356) (h:*label356)
  1573 label *label356
-    * jump *label355 always
  1574 label *label354
  1575 label *label355
  1576 label *label352
  1577 set :supplyBase0:supplied true
-    * jump *label350 always
  1578 label *label349
  1579 label *label350
-    * jump *label348 always
  1580 label *label347
  1581 label *label348
-    * jump *label318 always
  1582 label *label317
  1583 label *label318
  1584 sensor *tmp361 .core @titanium
 
  1680 label *label374
  1681 label *label368
  1682 label *label364
-    * jump *label362 always
  1683 label *label361
  1684 label *label362
  1685 jump *label360 always
 
  1716 write .titaniumDrill .flareController ":start:drill"
  1717 write false .flareController ":start*finished"
  1718 write 3 .flareController "@counter"
-    * jump *label398 always
  1719 label *label397
  1720 label *label398
-    * jump *label396 always
  1721 label *label395
  1722 label *label396
  1723 read *tmp73 .controller ".monos"
 
  1749 jump *label414 lessThan *tmp419 .targetMetaglass
  1750 set :targetMet*retval true
  1751 jump *label403 always
-    * jump *label415 always
  1752 label *label414
  1753 label *label415
-    * jump *label413 always
  1754 label *label412
  1755 label *label413
-    * jump *label411 always
  1756 label *label410
  1757 label *label411
-    * jump *label409 always
  1758 label *label408
  1759 label *label409
-    * jump *label407 always
  1760 label *label406
  1761 label *label407
-    * jump *label405 always
  1762 label *label404
  1763 label *label405
  1764 set :targetMet*retval false
 
  1876 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1877 set :buildBlockAt*retval :buildBlockAt:building
  1878 jump *label435 always
-    * jump *label441 always
  1879 label *label440
  1880 label *label441
  1881 jump *label442 equal :buildBlockAt:skipError false
  1882 set :buildBlockAt*retval null
  1883 jump *label435 always
-    * jump *label443 always
  1884 label *label442
  1885 label *label443
  1886 set :error.3:error "Cannot build at ("
  1887 set .ERROR :error.3:error
  1888 stop
  1889 label *label444
-    * jump *label439 always
  1890 label *label438
  1891 label *label439
  1892 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1896 jump *label448 notEqual :buildBlockAt:building null
  1897 set :buildBlockAt*retval null
  1898 jump *label435 always
-    * jump *label449 always
  1899 label *label448
  1900 label *label449
  1901 label *label446
 
  1948 label *label489
  1949 jump *label488 notEqual @unit :findUnits:firstUnit
  1950 label *label490
-    * jump *label487 always
  1951 label *label486
  1952 label *label487
  1953 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-45 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .kiln null
     8 set .leadSurplus 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    22 set .flareController processor3
    23 set .oreLocator processor4
    24 set .polyController processor5
-    * write .core .polyController ":startPolyController:aCore"
-    * write @unit .polyController ":startPolyController:aBuilder"
-    * write false .polyController ":startPolyController*finished"
-    * write 1 .polyController "@counter"
+   25 write .core processor5 ":startPolyController:aCore"
+   26 write @unit processor5 ":startPolyController:aBuilder"
+   27 write false processor5 ":startPolyController*finished"
+   28 write 1 processor5 "@counter"
    29 set :findUnits:type @flare
    30 setaddr :findUnits*retaddr *label35 (h:*label35)
    31 call *label30 *invalid :findUnits*retval (m:*label35) (h:*label35)
    32 label *label35
-    * write :findUnits:count .display ".displayFlares"
+   33 write :findUnits:count processor1 ".displayFlares"
    34 set :flares :findUnits*retval
    35 set :findUnits:type @mono
    36 setaddr :findUnits*retaddr *label36 (h:*label36)
    37 call *label30 *invalid :findUnits*retval (m:*label36) (h:*label36)
    38 label *label36
-    * write :findUnits:count .display ".displayMonos"
+   39 write :findUnits:count processor1 ".displayMonos"
    40 set :monos :findUnits*retval
    41 set :findUnits:type @poly
    42 setaddr :findUnits*retaddr *label37 (h:*label37)
    43 call *label30 *invalid :findUnits*retval (m:*label37) (h:*label37)
    44 label *label37
-    * write :findUnits:count .display ".displayPolys"
+   45 write :findUnits:count processor1 ".displayPolys"
    46 set :polys :findUnits*retval
    47 set :buildBlockFromCfg:block @graphite-press
    48 set :buildBlockFromCfg:offsetX -2.5
 
    55 set :buildBlockFromCfg:metaglass 0
    56 set :buildBlockFromCfg:rotation 0
    57 set :buildBlockFromCfg:config null
-    * setaddr *tmp104 *label42
    58 label *label39
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   59 op add :buildBlockFromCfg:x .coreX -2.5
+   60 op add :buildBlockFromCfg:y .coreY 1.5
+   61 set :buildBlock:block @graphite-press
    62 set :buildBlock:x :buildBlockFromCfg:x
    63 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   64 set :buildBlock:copper 75
+   65 set :buildBlock:lead 30
+   66 set :buildBlock:graphite 0
+   67 set :buildBlock:silicon 0
+   68 set :buildBlock:titanium 0
+   69 set :buildBlock:metaglass 0
+   70 set :buildBlock:rotation 0
+   71 set :buildBlock:config null
    72 setaddr :buildBlock*retaddr *label43 (h:*label43)
    73 call *label28 *invalid :buildBlock*retval (m:*label43) (h:*label43)
    74 label *label43
 
    78 multijump *tmp104 0 0 (m:marker0)
    79 multilabel *label42 (m:marker0)
    80 label *label41
-    * set *tmp103 null
    81 label *label38
    82 set .press *tmp103
    83 set :buildBlockFromCfg.1:block @battery
 
    91 set :buildBlockFromCfg.1:metaglass 0
    92 set :buildBlockFromCfg.1:rotation 0
    93 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp108 *label48
    94 label *label45
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   95 op add :buildBlockFromCfg.1:x .coreX 0
+   96 op add :buildBlockFromCfg.1:y .coreY 5
+   97 set :buildBlock:block @battery
    98 set :buildBlock:x :buildBlockFromCfg.1:x
    99 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+  100 set :buildBlock:copper 5
+  101 set :buildBlock:lead 20
+  102 set :buildBlock:graphite 0
+  103 set :buildBlock:silicon 0
+  104 set :buildBlock:titanium 0
+  105 set :buildBlock:metaglass 0
+  106 set :buildBlock:rotation 0
+  107 set :buildBlock:config null
   108 setaddr :buildBlock*retaddr *label49 (h:*label49)
   109 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
   110 label *label49
 
   114 multijump *tmp108 0 0 (m:marker1)
   115 multilabel *label48 (m:marker1)
   116 label *label47
-    * set *tmp107 null
   117 label *label44
   118 set .battery *tmp107
   119 set :buildBlockFromCfg.2:block @battery
 
   127 set :buildBlockFromCfg.2:metaglass 0
   128 set :buildBlockFromCfg.2:rotation 0
   129 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp112 *label54
   130 label *label51
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  131 op add :buildBlockFromCfg.2:x .coreX 1
+  132 op add :buildBlockFromCfg.2:y .coreY 5
+  133 set :buildBlock:block @battery
   134 set :buildBlock:x :buildBlockFromCfg.2:x
   135 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  136 set :buildBlock:copper 5
+  137 set :buildBlock:lead 20
+  138 set :buildBlock:graphite 0
+  139 set :buildBlock:silicon 0
+  140 set :buildBlock:titanium 0
+  141 set :buildBlock:metaglass 0
+  142 set :buildBlock:rotation 0
+  143 set :buildBlock:config null
   144 setaddr :buildBlock*retaddr *label55 (h:*label55)
   145 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
   146 label *label55
 
   161 set :buildBlockFromCfg.3:metaglass 0
   162 set :buildBlockFromCfg.3:rotation 0
   163 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp116 *label60
   164 label *label57
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  165 op add :buildBlockFromCfg.3:x .coreX 0
+  166 op add :buildBlockFromCfg.3:y .coreY 4
+  167 set :buildBlock:block @combustion-generator
   168 set :buildBlock:x :buildBlockFromCfg.3:x
   169 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  170 set :buildBlock:copper 25
+  171 set :buildBlock:lead 15
+  172 set :buildBlock:graphite 0
+  173 set :buildBlock:silicon 0
+  174 set :buildBlock:titanium 0
+  175 set :buildBlock:metaglass 0
+  176 set :buildBlock:rotation 0
+  177 set :buildBlock:config null
   178 setaddr :buildBlock*retaddr *label61 (h:*label61)
   179 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
   180 label *label61
 
   184 multijump *tmp116 0 0 (m:marker3)
   185 multilabel *label60 (m:marker3)
   186 label *label59
-    * set *tmp115 null
   187 label *label56
   188 set .generator *tmp115
   189 set .powerTarget 400
 
   198 set :buildBlockFromCfg.4:metaglass 0
   199 set :buildBlockFromCfg.4:rotation 0
   200 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp120 *label66
   201 label *label63
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  202 op add :buildBlockFromCfg.4:x .coreX 1.5
+  203 op add :buildBlockFromCfg.4:y .coreY 3.5
+  204 set :buildBlock:block @silicon-smelter
   205 set :buildBlock:x :buildBlockFromCfg.4:x
   206 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  207 set :buildBlock:copper 30
+  208 set :buildBlock:lead 25
+  209 set :buildBlock:graphite 0
+  210 set :buildBlock:silicon 0
+  211 set :buildBlock:titanium 0
+  212 set :buildBlock:metaglass 0
+  213 set :buildBlock:rotation 0
+  214 set :buildBlock:config null
   215 setaddr :buildBlock*retaddr *label67 (h:*label67)
   216 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   217 label *label67
 
   221 multijump *tmp120 0 0 (m:marker4)
   222 multilabel *label66 (m:marker4)
   223 label *label65
-    * set *tmp119 null
   224 label *label62
   225 set .smelter *tmp119
   226 set :buildBlockFromCfg.5:block @inverted-sorter
 
   234 set :buildBlockFromCfg.5:metaglass 0
   235 set :buildBlockFromCfg.5:rotation 0
   236 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp124 *label72
   237 label *label69
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  238 op add :buildBlockFromCfg.5:x .coreX 1
+  239 op add :buildBlockFromCfg.5:y .coreY 2
+  240 set :buildBlock:block @inverted-sorter
   241 set :buildBlock:x :buildBlockFromCfg.5:x
   242 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  243 set :buildBlock:copper 2
+  244 set :buildBlock:lead 2
+  245 set :buildBlock:graphite 0
+  246 set :buildBlock:silicon 0
+  247 set :buildBlock:titanium 0
+  248 set :buildBlock:metaglass 0
+  249 set :buildBlock:rotation 0
+  250 set :buildBlock:config null
   251 setaddr :buildBlock*retaddr *label73 (h:*label73)
   252 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   253 label *label73
 
   268 call *label24 *invalid :meetTarget*retval (m:*label76) (h:*label76)
   269 label *label76
   270 label *label75
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  271 write @titanium processor1 ".nextBlock"
+  272 write .coreX processor4 ":findDrillLocation:x"
+  273 write .coreY processor4 ":findDrillLocation:y"
+  274 write @unit processor4 ":findDrillLocation:unit"
+  275 write @titanium processor4 ":findDrillLocation:item"
+  276 write @ore-titanium processor4 ":findDrillLocation:ore"
+  277 write false processor4 ":findDrillLocation:large"
+  278 write 4 processor4 ":findDrillLocation:limit"
+  279 write false processor4 ":findDrillLocation*finished"
+  280 write 1 processor4 "@counter"
   281 label *label77
   282 wait 1e-15
-    * read *tmp138 .oreLocator ":findDrillLocation*finished"
+  283 read *tmp138 processor4 ":findDrillLocation*finished"
   284 jump *label77 equal *tmp138 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  285 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  286 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  287 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   288 jump *label78 notEqual :buildTitaniumDrill:result false
   289 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  290 set .ERROR "Cannot locate spot for titanium drill"
   291 stop
   292 label *label80
   293 label *label78
   294 label *label79
-    * write @pneumatic-drill .display ".nextBlock"
+  295 write @pneumatic-drill processor1 ".nextBlock"
   296 set :buildBlockAt:block @pneumatic-drill
   297 set :buildBlockAt:x :buildTitaniumDrill:dx
   298 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   304 label *label81
   305 set *tmp127 :buildBlockAt*retval
   306 jump *label74 always
-    * set *tmp127 null
   307 label *label74
-    * set .titaniumDrill *tmp127
-    * write .titaniumDrill .display ".titaniumDrill"
+  308 set .titaniumDrill :buildBlockAt*retval
+  309 write *tmp127 processor1 ".titaniumDrill"
   310 set :buildBlockFromCfg.6:block @unloader
   311 set :buildBlockFromCfg.6:offsetX 0
   312 set :buildBlockFromCfg.6:offsetY 2
 
   318 set :buildBlockFromCfg.6:metaglass 0
   319 set :buildBlockFromCfg.6:rotation 0
   320 set :buildBlockFromCfg.6:config null
-    * setaddr *tmp143 *label86
   321 label *label83
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  322 op add :buildBlockFromCfg.6:x .coreX 0
+  323 op add :buildBlockFromCfg.6:y .coreY 2
+  324 set :buildBlock:block @unloader
   325 set :buildBlock:x :buildBlockFromCfg.6:x
   326 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  327 set :buildBlock:copper 0
+  328 set :buildBlock:lead 0
+  329 set :buildBlock:graphite 0
+  330 set :buildBlock:silicon 30
+  331 set :buildBlock:titanium 25
+  332 set :buildBlock:metaglass 0
+  333 set :buildBlock:rotation 0
+  334 set :buildBlock:config null
   335 setaddr :buildBlock*retaddr *label87 (h:*label87)
   336 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   337 label *label87
 
   341 multijump *tmp143 0 0 (m:marker6)
   342 multilabel *label86 (m:marker6)
   343 label *label85
-    * set *tmp142 null
   344 label *label82
   345 set .unloader1 *tmp142
   346 set :buildBlockFromCfg.7:block @inverted-sorter
 
   354 set :buildBlockFromCfg.7:metaglass 0
   355 set :buildBlockFromCfg.7:rotation 0
   356 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp147 *label92
   357 label *label89
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  358 op add :buildBlockFromCfg.7:x .coreX -1
+  359 op add :buildBlockFromCfg.7:y .coreY 2
+  360 set :buildBlock:block @inverted-sorter
   361 set :buildBlock:x :buildBlockFromCfg.7:x
   362 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  363 set :buildBlock:copper 2
+  364 set :buildBlock:lead 2
+  365 set :buildBlock:graphite 0
+  366 set :buildBlock:silicon 0
+  367 set :buildBlock:titanium 0
+  368 set :buildBlock:metaglass 0
+  369 set :buildBlock:rotation 0
+  370 set :buildBlock:config null
   371 setaddr :buildBlock*retaddr *label93 (h:*label93)
   372 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   373 label *label93
 
   388 set :buildBlockFromCfg.8:metaglass 0
   389 set :buildBlockFromCfg.8:rotation 0
   390 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp151 *label98
   391 label *label95
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  392 op add :buildBlockFromCfg.8:x .coreX 0
+  393 op add :buildBlockFromCfg.8:y .coreY 3
+  394 set :buildBlock:block @overflow-gate
   395 set :buildBlock:x :buildBlockFromCfg.8:x
   396 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  397 set :buildBlock:copper 4
+  398 set :buildBlock:lead 2
+  399 set :buildBlock:graphite 0
+  400 set :buildBlock:silicon 0
+  401 set :buildBlock:titanium 0
+  402 set :buildBlock:metaglass 0
+  403 set :buildBlock:rotation 0
+  404 set :buildBlock:config null
   405 setaddr :buildBlock*retaddr *label99 (h:*label99)
   406 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   407 label *label99
 
   422 set :buildBlockFromCfg.9:metaglass 0
   423 set :buildBlockFromCfg.9:rotation 0
   424 set :buildBlockFromCfg.9:config processor2
-    * setaddr *tmp155 *label104
   425 label *label101
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  426 op add :buildBlockFromCfg.9:x .coreX 3
+  427 op add :buildBlockFromCfg.9:y .coreY 4
+  428 set :buildBlock:block @micro-processor
   429 set :buildBlock:x :buildBlockFromCfg.9:x
   430 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  431 set :buildBlock:copper 90
+  432 set :buildBlock:lead 50
+  433 set :buildBlock:graphite 0
+  434 set :buildBlock:silicon 50
+  435 set :buildBlock:titanium 0
+  436 set :buildBlock:metaglass 0
+  437 set :buildBlock:rotation 0
+  438 set :buildBlock:config processor2
   439 setaddr :buildBlock*retaddr *label105 (h:*label105)
   440 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)
   441 label *label105
 
   445 multijump *tmp155 0 0 (m:marker9)
   446 multilabel *label104 (m:marker9)
   447 label *label103
-    * set *tmp154 null
   448 label *label100
   449 set .controller *tmp154
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  450 write processor1 *tmp154 ".display"
+  451 write .core *tmp154 ".core"
+  452 write bank1 *tmp154 ".bank"
+  453 write *tmp107 *tmp154 ".battery"
+  454 write *tmp115 *tmp154 ".generator"
+  455 write *tmp119 *tmp154 ".smelter"
+  456 write *tmp103 *tmp154 ".press"
+  457 write :monos *tmp154 ".monos"
+  458 write :flares *tmp154 ".flares"
+  459 write :polys *tmp154 ".polys"
   460 set :buildBlockFromCfg.10:block @power-node
   461 set :buildBlockFromCfg.10:offsetX -1
   462 set :buildBlockFromCfg.10:offsetY -3
 
   468 set :buildBlockFromCfg.10:metaglass 0
   469 set :buildBlockFromCfg.10:rotation 0
   470 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp159 *label110
   471 label *label107
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  472 op add :buildBlockFromCfg.10:x .coreX -1
+  473 op add :buildBlockFromCfg.10:y .coreY -3
+  474 set :buildBlock:block @power-node
   475 set :buildBlock:x :buildBlockFromCfg.10:x
   476 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  477 set :buildBlock:copper 2
+  478 set :buildBlock:lead 6
+  479 set :buildBlock:graphite 0
+  480 set :buildBlock:silicon 0
+  481 set :buildBlock:titanium 0
+  482 set :buildBlock:metaglass 0
+  483 set :buildBlock:rotation 0
+  484 set :buildBlock:config null
   485 setaddr :buildBlock*retaddr *label111 (h:*label111)
   486 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   487 label *label111
 
   502 set :buildBlockFromCfg.11:metaglass 0
   503 set :buildBlockFromCfg.11:rotation 0
   504 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp163 *label116
   505 label *label113
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  506 op add :buildBlockFromCfg.11:x .coreX -2
+  507 op add :buildBlockFromCfg.11:y .coreY 0
+  508 set :buildBlock:block @unloader
   509 set :buildBlock:x :buildBlockFromCfg.11:x
   510 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  511 set :buildBlock:copper 0
+  512 set :buildBlock:lead 0
+  513 set :buildBlock:graphite 0
+  514 set :buildBlock:silicon 30
+  515 set :buildBlock:titanium 25
+  516 set :buildBlock:metaglass 0
+  517 set :buildBlock:rotation 0
+  518 set :buildBlock:config null
   519 setaddr :buildBlock*retaddr *label117 (h:*label117)
   520 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   521 label *label117
 
   525 multijump *tmp163 0 0 (m:marker11)
   526 multilabel *label116 (m:marker11)
   527 label *label115
-    * set *tmp162 null
   528 label *label112
-    * write *tmp162 .controller ".unloader2"
+  529 write *tmp162 *tmp154 ".unloader2"
   530 set :buildBlockFromCfg.12:block @air-factory
   531 set :buildBlockFromCfg.12:offsetX -3
   532 set :buildBlockFromCfg.12:offsetY -2
 
   538 set :buildBlockFromCfg.12:metaglass 0
   539 set :buildBlockFromCfg.12:rotation 3
   540 set :buildBlockFromCfg.12:config @mono
-    * setaddr *tmp167 *label122
   541 label *label119
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  542 op add :buildBlockFromCfg.12:x .coreX -3
+  543 op add :buildBlockFromCfg.12:y .coreY -2
+  544 set :buildBlock:block @air-factory
   545 set :buildBlock:x :buildBlockFromCfg.12:x
   546 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  547 set :buildBlock:copper 60
+  548 set :buildBlock:lead 70
+  549 set :buildBlock:graphite 0
+  550 set :buildBlock:silicon 0
+  551 set :buildBlock:titanium 0
+  552 set :buildBlock:metaglass 0
+  553 set :buildBlock:rotation 3
+  554 set :buildBlock:config @mono
   555 setaddr :buildBlock*retaddr *label123 (h:*label123)
   556 call *label28 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   557 label *label123
 
   561 multijump *tmp167 0 0 (m:marker12)
   562 multilabel *label122 (m:marker12)
   563 label *label121
-    * set *tmp166 null
   564 label *label118
   565 set :factory *tmp166
-    * write :factory .controller ".factory"
-    * write :factory .display ".factory"
-    * write 1 .controller ".flareTarget"
-    * write 3 .controller ".monoTarget"
-    * write 0 .controller ".polyTarget"
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  566 write *tmp166 *tmp154 ".factory"
+  567 write *tmp166 processor1 ".factory"
+  568 write 1 *tmp154 ".flareTarget"
+  569 write 3 *tmp154 ".monoTarget"
+  570 write 0 *tmp154 ".polyTarget"
+  571 write 85 *tmp154 ".pressTarget"
+  572 write 150 *tmp154 ".smelterTarget"
+  573 write 30 *tmp154 ".kilnTarget"
   574 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  575 set .siliconSurplus 20
   576 setaddr :buildUnits*retaddr *label124 (h:*label124)
   577 call *label31 *invalid :buildUnits*retval (m:*label124) (h:*label124)
   578 label *label124
 
   580 setaddr :supplyBase*retaddr *label128 (h:*label128)
   581 call *label22 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   582 label *label128
-    * sensor *tmp170 .battery @totalPower
+  583 sensor *tmp170 *tmp107 @totalPower
   584 jump *label129 greaterThanEq *tmp170 300
   585 jump *label127 always
   586 label *label129
   587 label *label130
   588 label *label126
-    * read *tmp73 .controller ".monos"
+  589 read *tmp73 *tmp154 ".monos"
   590 jump *label125 lessThan *tmp73 3
   591 label *label127
   592 set .graphiteSurplus 60
 
   602 set :buildBlockFromCfg.13:metaglass 0
   603 set :buildBlockFromCfg.13:rotation 0
   604 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp175 *label135
   605 label *label132
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  606 op add :buildBlockFromCfg.13:x .coreX 2
+  607 op add :buildBlockFromCfg.13:y .coreY -1
+  608 set :buildBlock:block @unloader
   609 set :buildBlock:x :buildBlockFromCfg.13:x
   610 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  611 set :buildBlock:copper 0
+  612 set :buildBlock:lead 0
+  613 set :buildBlock:graphite 0
+  614 set :buildBlock:silicon 30
+  615 set :buildBlock:titanium 25
+  616 set :buildBlock:metaglass 0
+  617 set :buildBlock:rotation 0
+  618 set :buildBlock:config null
   619 setaddr :buildBlock*retaddr *label136 (h:*label136)
   620 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   621 label *label136
 
   636 set :buildBlockFromCfg.14:metaglass 0
   637 set :buildBlockFromCfg.14:rotation 0
   638 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp179 *label141
   639 label *label138
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  640 op add :buildBlockFromCfg.14:x .coreX 2
+  641 op add :buildBlockFromCfg.14:y .coreY 0
+  642 set :buildBlock:block @inverted-sorter
   643 set :buildBlock:x :buildBlockFromCfg.14:x
   644 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  645 set :buildBlock:copper 2
+  646 set :buildBlock:lead 2
+  647 set :buildBlock:graphite 0
+  648 set :buildBlock:silicon 0
+  649 set :buildBlock:titanium 0
+  650 set :buildBlock:metaglass 0
+  651 set :buildBlock:rotation 0
+  652 set :buildBlock:config null
   653 setaddr :buildBlock*retaddr *label142 (h:*label142)
   654 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   655 label *label142
 
   670 set :buildBlockFromCfg.15:metaglass 0
   671 set :buildBlockFromCfg.15:rotation 0
   672 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp183 *label147
   673 label *label144
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  674 op add :buildBlockFromCfg.15:x .coreX 2.5
+  675 op add :buildBlockFromCfg.15:y .coreY 1.5
+  676 set :buildBlock:block @kiln
   677 set :buildBlock:x :buildBlockFromCfg.15:x
   678 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  679 set :buildBlock:copper 60
+  680 set :buildBlock:lead 30
+  681 set :buildBlock:graphite 30
+  682 set :buildBlock:silicon 0
+  683 set :buildBlock:titanium 0
+  684 set :buildBlock:metaglass 0
+  685 set :buildBlock:rotation 0
+  686 set :buildBlock:config null
   687 setaddr :buildBlock*retaddr *label148 (h:*label148)
   688 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   689 label *label148
 
   693 multijump *tmp183 0 0 (m:marker15)
   694 multilabel *label147 (m:marker15)
   695 label *label146
-    * set *tmp182 null
   696 label *label143
   697 set .kiln *tmp182
-    * write .kiln .controller ".kiln"
+  698 write *tmp182 *tmp154 ".kiln"
   699 set :buildBlockFromCfg.16:block @water-extractor
   700 set :buildBlockFromCfg.16:offsetX -4.5
   701 set :buildBlockFromCfg.16:offsetY 3.5
 
   707 set :buildBlockFromCfg.16:metaglass 30
   708 set :buildBlockFromCfg.16:rotation 0
   709 set :buildBlockFromCfg.16:config null
-    * setaddr *tmp187 *label153
   710 label *label150
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  711 op add :buildBlockFromCfg.16:x .coreX -4.5
+  712 op add :buildBlockFromCfg.16:y .coreY 3.5
+  713 set :buildBlock:block @water-extractor
   714 set :buildBlock:x :buildBlockFromCfg.16:x
   715 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  716 set :buildBlock:copper 30
+  717 set :buildBlock:lead 30
+  718 set :buildBlock:graphite 30
+  719 set :buildBlock:silicon 0
+  720 set :buildBlock:titanium 0
+  721 set :buildBlock:metaglass 30
+  722 set :buildBlock:rotation 0
+  723 set :buildBlock:config null
   724 setaddr :buildBlock*retaddr *label154 (h:*label154)
   725 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   726 label *label154
 
   741 set :buildBlockFromCfg.17:metaglass 0
   742 set :buildBlockFromCfg.17:rotation 0
   743 set :buildBlockFromCfg.17:config null
-    * setaddr *tmp191 *label159
   744 label *label156
-    * op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
-    * op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.17:block
+  745 op add :buildBlockFromCfg.17:x .coreX -3
+  746 op add :buildBlockFromCfg.17:y .coreY 0
+  747 set :buildBlock:block @overflow-gate
   748 set :buildBlock:x :buildBlockFromCfg.17:x
   749 set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper :buildBlockFromCfg.17:copper
-    * set :buildBlock:lead :buildBlockFromCfg.17:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.17:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.17:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.17:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.17:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.17:rotation
-    * set :buildBlock:config :buildBlockFromCfg.17:config
+  750 set :buildBlock:copper 4
+  751 set :buildBlock:lead 2
+  752 set :buildBlock:graphite 0
+  753 set :buildBlock:silicon 0
+  754 set :buildBlock:titanium 0
+  755 set :buildBlock:metaglass 0
+  756 set :buildBlock:rotation 0
+  757 set :buildBlock:config null
   758 setaddr :buildBlock*retaddr *label160 (h:*label160)
   759 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   760 label *label160
 
   775 set :buildBlockFromCfg.18:metaglass 0
   776 set :buildBlockFromCfg.18:rotation 0
   777 set :buildBlockFromCfg.18:config null
-    * setaddr *tmp195 *label165
   778 label *label162
-    * op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
-    * op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.18:block
+  779 op add :buildBlockFromCfg.18:x .coreX -4
+  780 op add :buildBlockFromCfg.18:y .coreY 0
+  781 set :buildBlock:block @overflow-gate
   782 set :buildBlock:x :buildBlockFromCfg.18:x
   783 set :buildBlock:y :buildBlockFromCfg.18:y
-    * set :buildBlock:copper :buildBlockFromCfg.18:copper
-    * set :buildBlock:lead :buildBlockFromCfg.18:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.18:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.18:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.18:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.18:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.18:rotation
-    * set :buildBlock:config :buildBlockFromCfg.18:config
+  784 set :buildBlock:copper 4
+  785 set :buildBlock:lead 2
+  786 set :buildBlock:graphite 0
+  787 set :buildBlock:silicon 0
+  788 set :buildBlock:titanium 0
+  789 set :buildBlock:metaglass 0
+  790 set :buildBlock:rotation 0
+  791 set :buildBlock:config null
   792 setaddr :buildBlock*retaddr *label166 (h:*label166)
   793 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   794 label *label166
 
   809 set :buildBlockFromCfg.19:metaglass 0
   810 set :buildBlockFromCfg.19:rotation 0
   811 set :buildBlockFromCfg.19:config null
-    * setaddr *tmp199 *label171
   812 label *label168
-    * op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
-    * op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.19:block
+  813 op add :buildBlockFromCfg.19:x .coreX -4.5
+  814 op add :buildBlockFromCfg.19:y .coreY 1.5
+  815 set :buildBlock:block @steam-generator
   816 set :buildBlock:x :buildBlockFromCfg.19:x
   817 set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper :buildBlockFromCfg.19:copper
-    * set :buildBlock:lead :buildBlockFromCfg.19:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.19:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.19:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.19:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.19:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.19:rotation
-    * set :buildBlock:config :buildBlockFromCfg.19:config
+  818 set :buildBlock:copper 35
+  819 set :buildBlock:lead 40
+  820 set :buildBlock:graphite 25
+  821 set :buildBlock:silicon 30
+  822 set :buildBlock:titanium 0
+  823 set :buildBlock:metaglass 0
+  824 set :buildBlock:rotation 0
+  825 set :buildBlock:config null
   826 setaddr :buildBlock*retaddr *label172 (h:*label172)
   827 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   828 label *label172
 
   832 multijump *tmp199 0 0 (m:marker19)
   833 multilabel *label171 (m:marker19)
   834 label *label170
-    * set *tmp198 null
   835 label *label167
-    * write *tmp198 .controller ".generator2"
+  836 write *tmp198 *tmp154 ".generator2"
   837 set :buildBlockFromCfg.20:block @multi-press
   838 set :buildBlockFromCfg.20:offsetX -2
   839 set :buildBlockFromCfg.20:offsetY 4
 
   845 set :buildBlockFromCfg.20:metaglass 0
   846 set :buildBlockFromCfg.20:rotation 0
   847 set :buildBlockFromCfg.20:config null
-    * setaddr *tmp203 *label177
   848 label *label174
-    * op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
-    * op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.20:block
+  849 op add :buildBlockFromCfg.20:x .coreX -2
+  850 op add :buildBlockFromCfg.20:y .coreY 4
+  851 set :buildBlock:block @multi-press
   852 set :buildBlock:x :buildBlockFromCfg.20:x
   853 set :buildBlock:y :buildBlockFromCfg.20:y
-    * set :buildBlock:copper :buildBlockFromCfg.20:copper
-    * set :buildBlock:lead :buildBlockFromCfg.20:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.20:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.20:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.20:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.20:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.20:rotation
-    * set :buildBlock:config :buildBlockFromCfg.20:config
+  854 set :buildBlock:copper 0
+  855 set :buildBlock:lead 100
+  856 set :buildBlock:graphite 50
+  857 set :buildBlock:silicon 25
+  858 set :buildBlock:titanium 100
+  859 set :buildBlock:metaglass 0
+  860 set :buildBlock:rotation 0
+  861 set :buildBlock:config null
   862 setaddr :buildBlock*retaddr *label178 (h:*label178)
   863 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   864 label *label178
 
   868 multijump *tmp203 0 0 (m:marker20)
   869 multilabel *label177 (m:marker20)
   870 label *label176
-    * set *tmp202 null
   871 label *label173
-    * write *tmp202 .controller ".multipress"
+  872 write *tmp202 *tmp154 ".multipress"
   873 set :buildBlockFromCfg.21:block @water-extractor
   874 set :buildBlockFromCfg.21:offsetX -4.5
   875 set :buildBlockFromCfg.21:offsetY 5.5
 
   881 set :buildBlockFromCfg.21:metaglass 30
   882 set :buildBlockFromCfg.21:rotation 0
   883 set :buildBlockFromCfg.21:config null
-    * setaddr *tmp207 *label183
   884 label *label180
-    * op add :buildBlockFromCfg.21:x .coreX :buildBlockFromCfg.21:offsetX
-    * op add :buildBlockFromCfg.21:y .coreY :buildBlockFromCfg.21:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.21:block
+  885 op add :buildBlockFromCfg.21:x .coreX -4.5
+  886 op add :buildBlockFromCfg.21:y .coreY 5.5
+  887 set :buildBlock:block @water-extractor
   888 set :buildBlock:x :buildBlockFromCfg.21:x
   889 set :buildBlock:y :buildBlockFromCfg.21:y
-    * set :buildBlock:copper :buildBlockFromCfg.21:copper
-    * set :buildBlock:lead :buildBlockFromCfg.21:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.21:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.21:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.21:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.21:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.21:rotation
-    * set :buildBlock:config :buildBlockFromCfg.21:config
+  890 set :buildBlock:copper 30
+  891 set :buildBlock:lead 30
+  892 set :buildBlock:graphite 30
+  893 set :buildBlock:silicon 0
+  894 set :buildBlock:titanium 0
+  895 set :buildBlock:metaglass 30
+  896 set :buildBlock:rotation 0
+  897 set :buildBlock:config null
   898 setaddr :buildBlock*retaddr *label184 (h:*label184)
   899 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   900 label *label184
 
   916 set :buildBlockFromCfg.22:metaglass 0
   917 set :buildBlockFromCfg.22:rotation 0
   918 set :buildBlockFromCfg.22:config null
-    * setaddr *tmp211 *label189
   919 label *label186
-    * op add :buildBlockFromCfg.22:x .coreX :buildBlockFromCfg.22:offsetX
-    * op add :buildBlockFromCfg.22:y .coreY :buildBlockFromCfg.22:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.22:block
+  920 op add :buildBlockFromCfg.22:x .coreX -3
+  921 op add :buildBlockFromCfg.22:y .coreY -5
+  922 set :buildBlock:block @payload-router
   923 set :buildBlock:x :buildBlockFromCfg.22:x
   924 set :buildBlock:y :buildBlockFromCfg.22:y
-    * set :buildBlock:copper :buildBlockFromCfg.22:copper
-    * set :buildBlock:lead :buildBlockFromCfg.22:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.22:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.22:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.22:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.22:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.22:rotation
-    * set :buildBlock:config :buildBlockFromCfg.22:config
+  925 set :buildBlock:copper 10
+  926 set :buildBlock:lead 0
+  927 set :buildBlock:graphite 15
+  928 set :buildBlock:silicon 0
+  929 set :buildBlock:titanium 0
+  930 set :buildBlock:metaglass 0
+  931 set :buildBlock:rotation 0
+  932 set :buildBlock:config null
   933 setaddr :buildBlock*retaddr *label190 (h:*label190)
   934 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   935 label *label190
 
   939 multijump *tmp211 0 0 (m:marker22)
   940 multilabel *label189 (m:marker22)
   941 label *label188
-    * set *tmp210 null
   942 label *label185
-    * write *tmp210 .controller ".payloadRouter"
+  943 write *tmp210 *tmp154 ".payloadRouter"
   944 set :buildBlockFromCfg.23:block @unloader
   945 set :buildBlockFromCfg.23:offsetX 0
   946 set :buildBlockFromCfg.23:offsetY -2
 
   952 set :buildBlockFromCfg.23:metaglass 0
   953 set :buildBlockFromCfg.23:rotation 0
   954 set :buildBlockFromCfg.23:config null
-    * setaddr *tmp215 *label195
   955 label *label192
-    * op add :buildBlockFromCfg.23:x .coreX :buildBlockFromCfg.23:offsetX
-    * op add :buildBlockFromCfg.23:y .coreY :buildBlockFromCfg.23:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.23:block
+  956 op add :buildBlockFromCfg.23:x .coreX 0
+  957 op add :buildBlockFromCfg.23:y .coreY -2
+  958 set :buildBlock:block @unloader
   959 set :buildBlock:x :buildBlockFromCfg.23:x
   960 set :buildBlock:y :buildBlockFromCfg.23:y
-    * set :buildBlock:copper :buildBlockFromCfg.23:copper
-    * set :buildBlock:lead :buildBlockFromCfg.23:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.23:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.23:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.23:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.23:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.23:rotation
-    * set :buildBlock:config :buildBlockFromCfg.23:config
+  961 set :buildBlock:copper 0
+  962 set :buildBlock:lead 0
+  963 set :buildBlock:graphite 0
+  964 set :buildBlock:silicon 30
+  965 set :buildBlock:titanium 25
+  966 set :buildBlock:metaglass 0
+  967 set :buildBlock:rotation 0
+  968 set :buildBlock:config null
   969 setaddr :buildBlock*retaddr *label196 (h:*label196)
   970 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   971 label *label196
 
   986 set :buildBlockFromCfg.24:metaglass 0
   987 set :buildBlockFromCfg.24:rotation 0
   988 set :buildBlockFromCfg.24:config null
-    * setaddr *tmp219 *label201
   989 label *label198
-    * op add :buildBlockFromCfg.24:x .coreX :buildBlockFromCfg.24:offsetX
-    * op add :buildBlockFromCfg.24:y .coreY :buildBlockFromCfg.24:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.24:block
+  990 op add :buildBlockFromCfg.24:x .coreX 0
+  991 op add :buildBlockFromCfg.24:y .coreY -3
+  992 set :buildBlock:block @underflow-gate
   993 set :buildBlock:x :buildBlockFromCfg.24:x
   994 set :buildBlock:y :buildBlockFromCfg.24:y
-    * set :buildBlock:copper :buildBlockFromCfg.24:copper
-    * set :buildBlock:lead :buildBlockFromCfg.24:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.24:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.24:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.24:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.24:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.24:rotation
-    * set :buildBlock:config :buildBlockFromCfg.24:config
+  995 set :buildBlock:copper 4
+  996 set :buildBlock:lead 2
+  997 set :buildBlock:graphite 0
+  998 set :buildBlock:silicon 0
+  999 set :buildBlock:titanium 0
+ 1000 set :buildBlock:metaglass 0
+ 1001 set :buildBlock:rotation 0
+ 1002 set :buildBlock:config null
  1003 setaddr :buildBlock*retaddr *label202 (h:*label202)
  1004 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
  1005 label *label202
 
  1020 set :buildBlockFromCfg.25:metaglass 0
  1021 set :buildBlockFromCfg.25:rotation 0
  1022 set :buildBlockFromCfg.25:config null
-    * setaddr *tmp223 *label207
  1023 label *label204
-    * op add :buildBlockFromCfg.25:x .coreX :buildBlockFromCfg.25:offsetX
-    * op add :buildBlockFromCfg.25:y .coreY :buildBlockFromCfg.25:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.25:block
+ 1024 op add :buildBlockFromCfg.25:x .coreX 0
+ 1025 op add :buildBlockFromCfg.25:y .coreY -5
+ 1026 set :buildBlock:block @additive-reconstructor
  1027 set :buildBlock:x :buildBlockFromCfg.25:x
  1028 set :buildBlock:y :buildBlockFromCfg.25:y
-    * set :buildBlock:copper :buildBlockFromCfg.25:copper
-    * set :buildBlock:lead :buildBlockFromCfg.25:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.25:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.25:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.25:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.25:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.25:rotation
-    * set :buildBlock:config :buildBlockFromCfg.25:config
+ 1029 set :buildBlock:copper 200
+ 1030 set :buildBlock:lead 120
+ 1031 set :buildBlock:graphite 0
+ 1032 set :buildBlock:silicon 90
+ 1033 set :buildBlock:titanium 0
+ 1034 set :buildBlock:metaglass 0
+ 1035 set :buildBlock:rotation 0
+ 1036 set :buildBlock:config null
  1037 setaddr :buildBlock*retaddr *label208 (h:*label208)
  1038 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
  1039 label *label208
 
  1043 multijump *tmp223 0 0 (m:marker25)
  1044 multilabel *label207 (m:marker25)
  1045 label *label206
-    * set *tmp222 null
  1046 label *label203
  1047 set :reconstructor *tmp222
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+ 1048 write *tmp222 *tmp154 ".reconstructor"
+ 1049 write *tmp222 processor1 ".reconstructor"
  1050 setaddr :buildUnits*retaddr *label209 (h:*label209)
  1051 call *label31 *invalid :buildUnits*retval (m:*label209) (h:*label209)
  1052 label *label209
  1053 set .siliconSurplus 1000
  1054 set .metaglassSurplus 200
-    * write 3 .controller ".polyTarget"
+ 1055 write 3 *tmp154 ".polyTarget"
  1056 label *label210
-    * read *tmp74 .controller ".polys"
+ 1057 read *tmp74 *tmp154 ".polys"
  1058 jump *label212 greaterThanEq *tmp74 3
  1059 setaddr :supplyBase*retaddr *label213 (h:*label213)
  1060 call *label22 *invalid :supplyBase*retval (m:*label213) (h:*label213)
 
  1062 label *label211
  1063 jump *label210 always
  1064 label *label212
-    * write 8 .controller ".flareTarget"
-    * write 6 .controller ".polyTarget"
+ 1065 write 8 *tmp154 ".flareTarget"
+ 1066 write 6 *tmp154 ".polyTarget"
  1067 label *label214
-    * read *tmp72 .controller ".flares"
+ 1068 read *tmp72 *tmp154 ".flares"
  1069 jump *label216 greaterThanEq *tmp72 2
  1070 setaddr :supplyBase*retaddr *label217 (h:*label217)
  1071 call *label22 *invalid :supplyBase*retval (m:*label217) (h:*label217)
 
  1074 jump *label214 always
  1075 label *label216
  1076 ubind @flare
-    * write @ore-titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+ 1077 write @ore-titanium processor1 ".nextBlock"
+ 1078 write .coreX processor4 ":findDrillLocation:x"
+ 1079 write .coreY processor4 ":findDrillLocation:y"
+ 1080 write @unit processor4 ":findDrillLocation:unit"
+ 1081 write @titanium processor4 ":findDrillLocation:item"
+ 1082 write @ore-titanium processor4 ":findDrillLocation:ore"
+ 1083 write false processor4 ":findDrillLocation:large"
+ 1084 write 1000000000 processor4 ":findDrillLocation:limit"
+ 1085 write false processor4 ":findDrillLocation*finished"
+ 1086 write 1 processor4 "@counter"
  1087 label *label218
  1088 wait 1e-15
-    * read *tmp238 .oreLocator ":findDrillLocation*finished"
+ 1089 read *tmp238 processor4 ":findDrillLocation*finished"
  1090 jump *label218 equal *tmp238 false
  1091 ubind .builder
  1092 label *label219
 
  1094 call *label22 *invalid :supplyBase*retval (m:*label222) (h:*label222)
  1095 label *label222
  1096 label *label220
-    * read *tmp240 .oreLocator ":findDrillLocation*finished"
+ 1097 read *tmp240 processor4 ":findDrillLocation*finished"
  1098 jump *label219 equal *tmp240 false
  1099 label *label221
-    * write null .display ".nextBlock"
+ 1100 write null processor1 ".nextBlock"
  1101 set :findFreeUnit:unit_type @flare
  1102 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+ 1103 ubind @flare
  1104 jump *label224 notEqual @unit null
  1105 jump *label223 always
  1106 label *label224
 
  1109 label *label226
  1110 sensor *tmp245 @unit @controlled
  1111 jump *label229 notEqual *tmp245 0
-    * ucontrol flag :findFreeUnit:initial_flag
+ 1112 ucontrol flag 0
  1113 jump *label223 always
  1114 jump *label230 always
  1115 label *label229
 
  1119 label *label231
  1120 label *label232
  1121 label *label230
-    * ubind :findFreeUnit:unit_type
+ 1122 ubind @flare
  1123 label *label227
  1124 jump *label226 notEqual :findFreeUnit:first_unit @unit
  1125 label *label228
  1126 label *label223
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+ 1127 write .coreX processor4 ":layoutThoriumDrill:x"
+ 1128 write .coreY processor4 ":layoutThoriumDrill:y"
+ 1129 write @unit processor4 ":layoutThoriumDrill:unit"
+ 1130 write 7 processor4 ":layoutThoriumDrill:limit"
+ 1131 write false processor4 ":layoutThoriumDrill*finished"
+ 1132 write 2 processor4 "@counter"
  1133 ubind .builder
  1134 label *label233
  1135 setaddr :supplyBase*retaddr *label236 (h:*label236)
  1136 call *label22 *invalid :supplyBase*retval (m:*label236) (h:*label236)
  1137 label *label236
  1138 label *label234
-    * read *tmp257 .oreLocator ":layoutThoriumDrill*finished"
+ 1139 read *tmp257 processor4 ":layoutThoriumDrill*finished"
  1140 jump *label233 equal *tmp257 false
  1141 label *label235
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+ 1142 write 0 processor1 ".totalTargets"
+ 1143 write null processor1 ".nextBlock"
  1144 label *label237
  1145 setaddr :supplyBase*retaddr *label240 (h:*label240)
  1146 call *label22 *invalid :supplyBase*retval (m:*label240) (h:*label240)
  1147 label *label240
  1148 label *label238
-    * read *tmp72 .controller ".flares"
-    * read *tmp73 .controller ".monos"
+ 1149 read *tmp72 *tmp154 ".flares"
+ 1150 read *tmp73 *tmp154 ".monos"
  1151 op add *tmp259 *tmp72 *tmp73
  1152 jump *label237 lessThan *tmp259 16
  1153 label *label239
 
  1159 jump *label241 always
  1160 label *label243
  1161 ucontrol stop
-    * set :error.1:error "Done"
-    * set .ERROR :error.1:error
+ 1162 set .ERROR "Done"
  1163 stop
  1164 label *label245
  1165 end
  1166 label *label6
  1167 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+ 1168 write "Moving..." .display ".status3"
  1169 label *label248
  1170 label *label249
  1171 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
 
  1181 label *label7
  1182 set *tmp264 :moveTo.1:x
  1183 set *tmp265 :moveTo.1:y
-    * set :moveTo:x *tmp264
-    * set :moveTo:y *tmp265
+ 1184 set :moveTo:x :moveTo.1:x
+ 1185 set :moveTo:y :moveTo.1:y
  1186 set :moveTo:radius 6
  1187 setaddr :moveTo*retaddr *label253 (h:*label253)
  1188 call *label6 *invalid :moveTo*retval (m:*label253) (h:*label253)
 
  1192 end
  1193 label *label8
  1194 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1195 write "Moving..." .display ".status3"
  1196 label *label255
  1197 label *label256
  1198 sensor *tmp266 @unit @firstItem
 
  1222 end
  1223 label *label10
  1224 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1225 write "Depositing..." .display ".status3"
  1226 label *label264
  1227 sensor *tmp273 @unit @firstItem
  1228 jump *label265 notEqual *tmp273 :depositItems:item
 
  1252 label *label266
  1253 set :transportStatus:target 0
  1254 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1255 write 0 .display ".transportTarget"
+ 1256 write null .display ".transportItem"
  1257 label *label274
  1258 label *label263
  1259 return :depositItems*retaddr
 
  1262 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 0
  1263 jump *label276 notEqual *tmp283 false
  1264 set :error.2:error "Cannot locate ore"
-    * set .ERROR :error.2:error
+ 1265 set .ERROR "Cannot locate ore"
  1266 stop
  1267 label *label278
  1268 label *label276
 
  1274 op min :mineOre:amount :mineOre:amount 30
  1275 set :transportStatus.1:target :mineOre:amount
  1276 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1277 write :mineOre:amount .display ".transportTarget"
+ 1278 write :mineOre:ore .display ".transportItem"
  1279 label *label280
  1280 set :locateOre:ore :mineOre:ore
  1281 setaddr :locateOre*retaddr *label281 (h:*label281)
 
  1283 label *label281
  1284 set :mineOre:x :locateOre:x
  1285 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1286 set :moveToEmpty:x :locateOre:x
+ 1287 set :moveToEmpty:y :locateOre:y
  1288 setaddr :moveToEmpty*retaddr *label282 (h:*label282)
  1289 call *label8 *invalid :moveToEmpty*retval (m:*label282) (h:*label282)
  1290 label *label282
 
  1301 label *label283
  1302 label *label284
  1303 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1304 write "Mining..." .display ".status3"
  1305 label *label289
  1306 op add :mineOre:stop @second 10
  1307 label *label290
 
  1335 set :status2:text "Mining "
  1336 set :status2:item :mineOre.1:ore
  1337 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1338 write "Mining " .display ".status2"
+ 1339 write :mineOre.1:ore .display ".item2"
+ 1340 write "core" .display ".block2"
  1341 label *label299
  1342 set :mineOre:ore :mineOre.1:ore
  1343 set :mineOre:amount 30
 
  1352 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1353 set :transportStatus.2:item :fetchBlock:item
  1354 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1355 write :fetchBlock:item .display ".transportItem"
  1356 label *label302
  1357 set :status2.1:text "Fetching "
  1358 set :status2.1:item :fetchBlock:item
  1359 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1360 write "Fetching " .display ".status2"
+ 1361 write :fetchBlock:item .display ".item2"
+ 1362 write :fetchBlock:block .display ".block2"
  1363 label *label303
  1364 sensor *tmp305 :fetchBlock:block @x
  1365 sensor *tmp306 :fetchBlock:block @y
 
  1409 sensor *tmp323 .press @coal
  1410 jump *label321 greaterThanEq *tmp323 5
  1411 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1412 write "Goal 1: graphite requirement" .display ".status1"
  1413 label *label323
  1414 set :supplyBlock:block .press
  1415 set :supplyBlock:ore @coal
  1416 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1417 set :status2.2:item @coal
+ 1418 set :status2.2:block .press
+ 1419 write "Supplying " .display ".status2"
+ 1420 write :supplyBlock:ore .display ".item2"
+ 1421 write :supplyBlock:block .display ".block2"
  1422 label *label325
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp327 :supplyBlock:block :supplyBlock:ore
+ 1423 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1424 sensor *tmp327 .press @coal
  1425 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp327
  1426 jump *label326 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1427 set :mineOre:ore @coal
  1428 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1429 set :mineOre:block .press
  1430 setaddr :mineOre*retaddr *label328 (h:*label328)
  1431 call *label12 *invalid :mineOre*retval (m:*label328) (h:*label328)
  1432 label *label328
 
  1443 sensor *tmp334 .smelter @coal
  1444 jump *label331 greaterThanEq *tmp334 5
  1445 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1446 write "Goal 2: coal for silicon requirement" .display ".status1"
  1447 label *label333
  1448 set :supplyBlock.1:block .smelter
  1449 set :supplyBlock.1:ore @coal
  1450 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1451 set :status2.3:item @coal
+ 1452 set :status2.3:block .smelter
+ 1453 write "Supplying " .display ".status2"
+ 1454 write :supplyBlock.1:ore .display ".item2"
+ 1455 write :supplyBlock.1:block .display ".block2"
  1456 label *label335
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp338 :supplyBlock.1:block :supplyBlock.1:ore
+ 1457 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1458 sensor *tmp338 .smelter @coal
  1459 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp338
  1460 jump *label336 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1461 set :mineOre:ore @coal
  1462 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1463 set :mineOre:block .smelter
  1464 setaddr :mineOre*retaddr *label338 (h:*label338)
  1465 call *label12 *invalid :mineOre*retval (m:*label338) (h:*label338)
  1466 label *label338
 
  1473 sensor *tmp342 .smelter @sand
  1474 jump *label339 greaterThanEq *tmp342 5
  1475 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1476 write "Goal 3: sand for silicon requirement" .display ".status1"
  1477 label *label341
  1478 set :supplyBlock.2:block .smelter
  1479 set :supplyBlock.2:ore @sand
  1480 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1481 set :status2.4:item @sand
+ 1482 set :status2.4:block .smelter
+ 1483 write "Supplying " .display ".status2"
+ 1484 write :supplyBlock.2:ore .display ".item2"
+ 1485 write :supplyBlock.2:block .display ".block2"
  1486 label *label343
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp346 :supplyBlock.2:block :supplyBlock.2:ore
+ 1487 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1488 sensor *tmp346 .smelter @sand
  1489 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp346
  1490 jump *label344 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1491 set :mineOre:ore @sand
  1492 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1493 set :mineOre:block .smelter
  1494 setaddr :mineOre*retaddr *label346 (h:*label346)
  1495 call *label12 *invalid :mineOre*retval (m:*label346) (h:*label346)
  1496 label *label346
 
  1508 sensor *tmp353 .generator @coal
  1509 jump *label349 greaterThanEq *tmp353 2
  1510 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1511 write "Goal 4: supplying generator" .display ".status1"
  1512 label *label351
  1513 set :supplyBlock.3:block .generator
  1514 set :supplyBlock.3:ore @coal
  1515 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1516 set :status2.5:item @coal
+ 1517 set :status2.5:block .generator
+ 1518 write "Supplying " .display ".status2"
+ 1519 write :supplyBlock.3:ore .display ".item2"
+ 1520 write :supplyBlock.3:block .display ".block2"
  1521 label *label353
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp357 :supplyBlock.3:block :supplyBlock.3:ore
+ 1522 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1523 sensor *tmp357 .generator @coal
  1524 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp357
  1525 jump *label354 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1526 set :mineOre:ore @coal
  1527 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1528 set :mineOre:block .generator
  1529 setaddr :mineOre*retaddr *label356 (h:*label356)
  1530 call *label12 *invalid :mineOre*retval (m:*label356) (h:*label356)
  1531 label *label356
 
  1550 label *label358
  1551 set :supplyBase0:titaniumTrigger *tmp363
  1552 sensor *tmp367 .titaniumDrill @titanium
-    * jump *label359 greaterThanEq *tmp367 :supplyBase0:titaniumTrigger
+ 1553 jump *label359 greaterThanEq *tmp367 *tmp363
  1554 jump *label361 notEqual :supplyBase0:supplied false
  1555 sensor *tmp372 .battery @totalPower
  1556 op mul *tmp373 .unloader1 .powerTarget
  1557 jump *label363 greaterThanEq *tmp372 *tmp373
  1558 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1559 write "Goal 5: supplying generator" .display ".status1"
  1560 label *label365
  1561 set :mineOre.1:ore @coal
  1562 setaddr :mineOre.1*retaddr *label366 (h:*label366)
 
  1567 sensor *tmp376 .core @silicon
  1568 jump *label367 greaterThanEq *tmp376 .targetSilicon
  1569 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1570 write "Goal 6: silicon requirement" .display ".status1"
  1571 label *label369
  1572 sensor :supplyBase0:coal .core @coal
  1573 sensor :supplyBase0:sand .core @sand
 
  1578 set *tmp382 @sand
  1579 label *label371
  1580 set :supplyBase0:ore *tmp382
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1581 set :mineOre.1:ore *tmp382
  1582 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1583 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
  1584 label *label372
 
  1587 sensor *tmp383 .core @copper
  1588 jump *label373 greaterThanEq *tmp383 .targetCopper
  1589 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1590 write "Goal 7: copper requirement" .display ".status1"
  1591 label *label375
  1592 set :mineOre.1:ore @copper
  1593 setaddr :mineOre.1*retaddr *label376 (h:*label376)
 
  1598 sensor *tmp386 .core @lead
  1599 jump *label377 greaterThanEq *tmp386 .targetLead
  1600 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1601 write "Goal 8: lead requirement" .display ".status1"
  1602 label *label379
  1603 set :mineOre.1:ore @lead
  1604 setaddr :mineOre.1*retaddr *label380 (h:*label380)
 
  1609 sensor *tmp389 .core @metaglass
  1610 jump *label381 greaterThanEq *tmp389 .targetMetaglass
  1611 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1612 write "Goal 9: metaglass requirement" .display ".status1"
  1613 label *label383
  1614 set :mineOre.1:ore @sand
  1615 setaddr :mineOre.1*retaddr *label384 (h:*label384)
 
  1618 jump *label382 always
  1619 label *label381
  1620 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1621 write "Goal 10: supplying base" .display ".status1"
  1622 label *label385
  1623 sensor :supplyBase0:coal.1 .core @coal
  1624 sensor :supplyBase0:sand.1 .core @sand
 
  1629 set *tmp395 @sand
  1630 label *label387
  1631 set :supplyBase0:ore.1 *tmp395
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1632 set :mineOre.1:ore *tmp395
  1633 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1634 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
  1635 label *label388
 
  1643 jump *label360 always
  1644 label *label359
  1645 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1646 write "Goal 11: Fetching titanium" .display ".status1"
  1647 label *label389
  1648 set :fetchBlock:block .titaniumDrill
  1649 set :fetchBlock:item @titanium
 
  1656 end
  1657 label *label21
  1658 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1659 write "Phase 1: supplying base" .display ".status1"
  1660 label *label392
  1661 set :mineOre.1:ore @coal
  1662 setaddr :mineOre.1*retaddr *label393 (h:*label393)
 
  1721 label *label405
  1722 set :targetMet*retval false
  1723 jump *label403 always
-    * set :targetMet*retval null
  1724 label *label403
  1725 return :targetMet*retaddr
  1726 end
 
  1777 op add *tmp428 :meetTarget:metaglass .metaglassSurplus
  1778 write *tmp428 .controller ".kilnTarget"
  1779 op add *tmp429 :meetTarget:lead .leadSurplus
-    * write *tmp429 .controller ".leadReserve"
+ 1780 write *tmp424 .controller ".leadReserve"
  1781 op sign *tmp430 :meetTarget:silicon
  1782 op mul *tmp431 *tmp430 20
  1783 op add *tmp432 :meetTarget:silicon *tmp431
 
  1804 op mul :second:result @second TIME_COMPRESS
  1805 set *tmp437 :second:result
  1806 label *label432
-    * op floor *tmp438 *tmp437
+ 1807 op floor *tmp438 :second:result
  1808 op mul *tmp439 *tmp438 1000
  1809 op add *tmp440 :log:encodedId *tmp439
-    * write *tmp440 bank1 *tmp435
+ 1810 write *tmp440 bank1 *tmp434
  1811 label *label431
  1812 return :log*retaddr
  1813 end
 
  1826 call *label7 *invalid :moveTo.1*retval (m:*label436) (h:*label436)
  1827 label *label436
  1828 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1829 write "Building..." .display ".status3"
  1830 label *label437
  1831 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1832 jump *label438 equal :buildBlockAt:building null
 
  1841 label *label442
  1842 label *label443
  1843 set :error.3:error "Cannot build at ("
-    * set .ERROR :error.3:error
+ 1844 set .ERROR "Cannot build at ("
  1845 stop
  1846 label *label444
  1847 label *label438
 
  1864 label *label450
  1865 set :buildBlockAt*retval :buildBlockAt:building
  1866 jump *label435 always
-    * set :buildBlockAt*retval null
  1867 label *label435
  1868 return :buildBlockAt*retaddr
  1869 end
 
  1889 label *label453
  1890 set :buildBlock*retval :buildBlockAt*retval
  1891 jump *label451 always
-    * set :buildBlock*retval null
  1892 label *label451
  1893 return :buildBlock*retaddr
  1894 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-353 instructions):
 
    20 label *label34
    21 set .display processor1
    22 set .flareController processor3
-    * set .oreLocator processor4
-    * set .polyController processor5
    23 write .core processor5 ":startPolyController:aCore"
    24 write @unit processor5 ":startPolyController:aBuilder"
    25 write false processor5 ":startPolyController*finished"
 
    42 label *label37
    43 write :findUnits:count processor1 ".displayPolys"
    44 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -2.5
-    * set :buildBlockFromCfg:offsetY 1.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    45 label *label39
    46 op add :buildBlockFromCfg:x .coreX -2.5
    47 op add :buildBlockFromCfg:y .coreY 1.5
 
    67 label *label41
    68 label *label38
    69 set .press *tmp103
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 5
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    70 label *label45
    71 op add :buildBlockFromCfg.1:x .coreX 0
    72 op add :buildBlockFromCfg.1:y .coreY 5
 
    92 label *label47
    93 label *label44
    94 set .battery *tmp107
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX 1
-    * set :buildBlockFromCfg.2:offsetY 5
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    95 label *label51
    96 op add :buildBlockFromCfg.2:x .coreX 1
    97 op add :buildBlockFromCfg.2:y .coreY 5
    98 set :buildBlock:block @battery
    99 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
+  100 set :buildBlock:y :buildBlockFromCfg.1:y
   101 set :buildBlock:copper 5
   102 set :buildBlock:lead 20
   103 set :buildBlock:graphite 0
 
   115 multilabel *label54 (m:marker2)
   116 label *label53
   117 label *label50
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 4
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   118 label *label57
   119 op add :buildBlockFromCfg.3:x .coreX 0
   120 op add :buildBlockFromCfg.3:y .coreY 4
   121 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  122 set :buildBlock:x :buildBlockFromCfg.1:x
   123 set :buildBlock:y :buildBlockFromCfg.3:y
   124 set :buildBlock:copper 25
   125 set :buildBlock:lead 15
 
   141 label *label56
   142 set .generator *tmp115
   143 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 3.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   144 label *label63
   145 op add :buildBlockFromCfg.4:x .coreX 1.5
   146 op add :buildBlockFromCfg.4:y .coreY 3.5
 
   166 label *label65
   167 label *label62
   168 set .smelter *tmp119
-    * set :buildBlockFromCfg.5:block @inverted-sorter
-    * set :buildBlockFromCfg.5:offsetX 1
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 2
-    * set :buildBlockFromCfg.5:lead 2
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 0
-    * set :buildBlockFromCfg.5:titanium 0
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
   169 label *label69
   170 op add :buildBlockFromCfg.5:x .coreX 1
   171 op add :buildBlockFromCfg.5:y .coreY 2
   172 set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  173 set :buildBlock:x :buildBlockFromCfg.2:x
   174 set :buildBlock:y :buildBlockFromCfg.5:y
   175 set :buildBlock:copper 2
   176 set :buildBlock:lead 2
 
   218 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   219 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   220 jump *label78 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   221 set .ERROR "Cannot locate spot for titanium drill"
   222 stop
   223 label *label80
 
   237 jump *label74 always
   238 label *label74
   239 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp127 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.6:block @unloader
-    * set :buildBlockFromCfg.6:offsetX 0
-    * set :buildBlockFromCfg.6:offsetY 2
-    * set :buildBlockFromCfg.6:copper 0
-    * set :buildBlockFromCfg.6:lead 0
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 30
-    * set :buildBlockFromCfg.6:titanium 25
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config null
+  240 write :buildBlockAt*retval processor1 ".titaniumDrill"
   241 label *label83
   242 op add :buildBlockFromCfg.6:x .coreX 0
   243 op add :buildBlockFromCfg.6:y .coreY 2
   244 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  245 set :buildBlock:x :buildBlockFromCfg.1:x
+  246 set :buildBlock:y :buildBlockFromCfg.5:y
   247 set :buildBlock:copper 0
   248 set :buildBlock:lead 0
   249 set :buildBlock:graphite 0
 
   263 label *label85
   264 label *label82
   265 set .unloader1 *tmp142
-    * set :buildBlockFromCfg.7:block @inverted-sorter
-    * set :buildBlockFromCfg.7:offsetX -1
-    * set :buildBlockFromCfg.7:offsetY 2
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 2
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   266 label *label89
   267 op add :buildBlockFromCfg.7:x .coreX -1
   268 op add :buildBlockFromCfg.7:y .coreY 2
   269 set :buildBlock:block @inverted-sorter
   270 set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
+  271 set :buildBlock:y :buildBlockFromCfg.5:y
   272 set :buildBlock:copper 2
   273 set :buildBlock:lead 2
   274 set :buildBlock:graphite 0
 
   286 multilabel *label92 (m:marker7)
   287 label *label91
   288 label *label88
-    * set :buildBlockFromCfg.8:block @overflow-gate
-    * set :buildBlockFromCfg.8:offsetX 0
-    * set :buildBlockFromCfg.8:offsetY 3
-    * set :buildBlockFromCfg.8:copper 4
-    * set :buildBlockFromCfg.8:lead 2
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   289 label *label95
   290 op add :buildBlockFromCfg.8:x .coreX 0
   291 op add :buildBlockFromCfg.8:y .coreY 3
   292 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  293 set :buildBlock:x :buildBlockFromCfg.1:x
   294 set :buildBlock:y :buildBlockFromCfg.8:y
   295 set :buildBlock:copper 4
   296 set :buildBlock:lead 2
 
   309 multilabel *label98 (m:marker8)
   310 label *label97
   311 label *label94
-    * set :buildBlockFromCfg.9:block @micro-processor
-    * set :buildBlockFromCfg.9:offsetX 3
-    * set :buildBlockFromCfg.9:offsetY 4
-    * set :buildBlockFromCfg.9:copper 90
-    * set :buildBlockFromCfg.9:lead 50
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 50
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config processor2
   312 label *label101
   313 op add :buildBlockFromCfg.9:x .coreX 3
   314 op add :buildBlockFromCfg.9:y .coreY 4
   315 set :buildBlock:block @micro-processor
   316 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  317 set :buildBlock:y :buildBlockFromCfg.3:y
   318 set :buildBlock:copper 90
   319 set :buildBlock:lead 50
   320 set :buildBlock:graphite 0
 
   344 write :monos *tmp154 ".monos"
   345 write :flares *tmp154 ".flares"
   346 write :polys *tmp154 ".polys"
-    * set :buildBlockFromCfg.10:block @power-node
-    * set :buildBlockFromCfg.10:offsetX -1
-    * set :buildBlockFromCfg.10:offsetY -3
-    * set :buildBlockFromCfg.10:copper 2
-    * set :buildBlockFromCfg.10:lead 6
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   347 label *label107
   348 op add :buildBlockFromCfg.10:x .coreX -1
   349 op add :buildBlockFromCfg.10:y .coreY -3
   350 set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.10:x
+  351 set :buildBlock:x :buildBlockFromCfg.7:x
   352 set :buildBlock:y :buildBlockFromCfg.10:y
   353 set :buildBlock:copper 2
   354 set :buildBlock:lead 6
 
   367 multilabel *label110 (m:marker10)
   368 label *label109
   369 label *label106
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX -2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   370 label *label113
   371 op add :buildBlockFromCfg.11:x .coreX -2
   372 op add :buildBlockFromCfg.11:y .coreY 0
 
   392 label *label115
   393 label *label112
   394 write *tmp162 *tmp154 ".unloader2"
-    * set :buildBlockFromCfg.12:block @air-factory
-    * set :buildBlockFromCfg.12:offsetX -3
-    * set :buildBlockFromCfg.12:offsetY -2
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 70
-    * set :buildBlockFromCfg.12:graphite 0
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 3
-    * set :buildBlockFromCfg.12:config @mono
   395 label *label119
   396 op add :buildBlockFromCfg.12:x .coreX -3
   397 op add :buildBlockFromCfg.12:y .coreY -2
 
   416 multilabel *label122 (m:marker12)
   417 label *label121
   418 label *label118
-    * set :factory *tmp166
   419 write *tmp166 *tmp154 ".factory"
   420 write *tmp166 processor1 ".factory"
   421 write 1 *tmp154 ".flareTarget"
 
   444 label *label127
   445 set .graphiteSurplus 60
   446 set .siliconSurplus 100
-    * set :buildBlockFromCfg.13:block @unloader
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY -1
-    * set :buildBlockFromCfg.13:copper 0
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 30
-    * set :buildBlockFromCfg.13:titanium 25
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   447 label *label132
   448 op add :buildBlockFromCfg.13:x .coreX 2
   449 op add :buildBlockFromCfg.13:y .coreY -1
 
   467 multilabel *label135 (m:marker13)
   468 label *label134
   469 label *label131
-    * set :buildBlockFromCfg.14:block @inverted-sorter
-    * set :buildBlockFromCfg.14:offsetX 2
-    * set :buildBlockFromCfg.14:offsetY 0
-    * set :buildBlockFromCfg.14:copper 2
-    * set :buildBlockFromCfg.14:lead 2
-    * set :buildBlockFromCfg.14:graphite 0
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 0
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   470 label *label138
   471 op add :buildBlockFromCfg.14:x .coreX 2
   472 op add :buildBlockFromCfg.14:y .coreY 0
   473 set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
+  474 set :buildBlock:x :buildBlockFromCfg.13:x
+  475 set :buildBlock:y :buildBlockFromCfg.11:y
   476 set :buildBlock:copper 2
   477 set :buildBlock:lead 2
   478 set :buildBlock:graphite 0
 
   490 multilabel *label141 (m:marker14)
   491 label *label140
   492 label *label137
-    * set :buildBlockFromCfg.15:block @kiln
-    * set :buildBlockFromCfg.15:offsetX 2.5
-    * set :buildBlockFromCfg.15:offsetY 1.5
-    * set :buildBlockFromCfg.15:copper 60
-    * set :buildBlockFromCfg.15:lead 30
-    * set :buildBlockFromCfg.15:graphite 30
-    * set :buildBlockFromCfg.15:silicon 0
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   493 label *label144
   494 op add :buildBlockFromCfg.15:x .coreX 2.5
   495 op add :buildBlockFromCfg.15:y .coreY 1.5
   496 set :buildBlock:block @kiln
   497 set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  498 set :buildBlock:y :buildBlockFromCfg:y
   499 set :buildBlock:copper 60
   500 set :buildBlock:lead 30
   501 set :buildBlock:graphite 30
 
   514 multilabel *label147 (m:marker15)
   515 label *label146
   516 label *label143
-    * set .kiln *tmp182
   517 write *tmp182 *tmp154 ".kiln"
-    * set :buildBlockFromCfg.16:block @water-extractor
-    * set :buildBlockFromCfg.16:offsetX -4.5
-    * set :buildBlockFromCfg.16:offsetY 3.5
-    * set :buildBlockFromCfg.16:copper 30
-    * set :buildBlockFromCfg.16:lead 30
-    * set :buildBlockFromCfg.16:graphite 30
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 30
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config null
   518 label *label150
   519 op add :buildBlockFromCfg.16:x .coreX -4.5
   520 op add :buildBlockFromCfg.16:y .coreY 3.5
   521 set :buildBlock:block @water-extractor
   522 set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  523 set :buildBlock:y :buildBlockFromCfg.4:y
   524 set :buildBlock:copper 30
   525 set :buildBlock:lead 30
   526 set :buildBlock:graphite 30
 
   538 multilabel *label153 (m:marker16)
   539 label *label152
   540 label *label149
-    * set :buildBlockFromCfg.17:block @overflow-gate
-    * set :buildBlockFromCfg.17:offsetX -3
-    * set :buildBlockFromCfg.17:offsetY 0
-    * set :buildBlockFromCfg.17:copper 4
-    * set :buildBlockFromCfg.17:lead 2
-    * set :buildBlockFromCfg.17:graphite 0
-    * set :buildBlockFromCfg.17:silicon 0
-    * set :buildBlockFromCfg.17:titanium 0
-    * set :buildBlockFromCfg.17:metaglass 0
-    * set :buildBlockFromCfg.17:rotation 0
-    * set :buildBlockFromCfg.17:config null
   541 label *label156
   542 op add :buildBlockFromCfg.17:x .coreX -3
   543 op add :buildBlockFromCfg.17:y .coreY 0
   544 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.17:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
+  545 set :buildBlock:x :buildBlockFromCfg.12:x
+  546 set :buildBlock:y :buildBlockFromCfg.11:y
   547 set :buildBlock:copper 4
   548 set :buildBlock:lead 2
   549 set :buildBlock:graphite 0
 
   561 multilabel *label159 (m:marker17)
   562 label *label158
   563 label *label155
-    * set :buildBlockFromCfg.18:block @overflow-gate
-    * set :buildBlockFromCfg.18:offsetX -4
-    * set :buildBlockFromCfg.18:offsetY 0
-    * set :buildBlockFromCfg.18:copper 4
-    * set :buildBlockFromCfg.18:lead 2
-    * set :buildBlockFromCfg.18:graphite 0
-    * set :buildBlockFromCfg.18:silicon 0
-    * set :buildBlockFromCfg.18:titanium 0
-    * set :buildBlockFromCfg.18:metaglass 0
-    * set :buildBlockFromCfg.18:rotation 0
-    * set :buildBlockFromCfg.18:config null
   564 label *label162
   565 op add :buildBlockFromCfg.18:x .coreX -4
   566 op add :buildBlockFromCfg.18:y .coreY 0
-    * set :buildBlock:block @overflow-gate
   567 set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.18:y
-    * set :buildBlock:copper 4
+  568 set :buildBlock:y :buildBlockFromCfg.11:y
   569 set :buildBlock:lead 2
   570 set :buildBlock:graphite 0
   571 set :buildBlock:silicon 0
 
   582 multilabel *label165 (m:marker18)
   583 label *label164
   584 label *label161
-    * set :buildBlockFromCfg.19:block @steam-generator
-    * set :buildBlockFromCfg.19:offsetX -4.5
-    * set :buildBlockFromCfg.19:offsetY 1.5
-    * set :buildBlockFromCfg.19:copper 35
-    * set :buildBlockFromCfg.19:lead 40
-    * set :buildBlockFromCfg.19:graphite 25
-    * set :buildBlockFromCfg.19:silicon 30
-    * set :buildBlockFromCfg.19:titanium 0
-    * set :buildBlockFromCfg.19:metaglass 0
-    * set :buildBlockFromCfg.19:rotation 0
-    * set :buildBlockFromCfg.19:config null
   585 label *label168
   586 op add :buildBlockFromCfg.19:x .coreX -4.5
   587 op add :buildBlockFromCfg.19:y .coreY 1.5
   588 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.19:x
-    * set :buildBlock:y :buildBlockFromCfg.19:y
+  589 set :buildBlock:x :buildBlockFromCfg.16:x
+  590 set :buildBlock:y :buildBlockFromCfg:y
   591 set :buildBlock:copper 35
   592 set :buildBlock:lead 40
   593 set :buildBlock:graphite 25
 
   607 label *label170
   608 label *label167
   609 write *tmp198 *tmp154 ".generator2"
-    * set :buildBlockFromCfg.20:block @multi-press
-    * set :buildBlockFromCfg.20:offsetX -2
-    * set :buildBlockFromCfg.20:offsetY 4
-    * set :buildBlockFromCfg.20:copper 0
-    * set :buildBlockFromCfg.20:lead 100
-    * set :buildBlockFromCfg.20:graphite 50
-    * set :buildBlockFromCfg.20:silicon 25
-    * set :buildBlockFromCfg.20:titanium 100
-    * set :buildBlockFromCfg.20:metaglass 0
-    * set :buildBlockFromCfg.20:rotation 0
-    * set :buildBlockFromCfg.20:config null
   610 label *label174
   611 op add :buildBlockFromCfg.20:x .coreX -2
   612 op add :buildBlockFromCfg.20:y .coreY 4
   613 set :buildBlock:block @multi-press
-    * set :buildBlock:x :buildBlockFromCfg.20:x
-    * set :buildBlock:y :buildBlockFromCfg.20:y
+  614 set :buildBlock:x :buildBlockFromCfg.11:x
+  615 set :buildBlock:y :buildBlockFromCfg.3:y
   616 set :buildBlock:copper 0
   617 set :buildBlock:lead 100
   618 set :buildBlock:graphite 50
 
   632 label *label176
   633 label *label173
   634 write *tmp202 *tmp154 ".multipress"
-    * set :buildBlockFromCfg.21:block @water-extractor
-    * set :buildBlockFromCfg.21:offsetX -4.5
-    * set :buildBlockFromCfg.21:offsetY 5.5
-    * set :buildBlockFromCfg.21:copper 30
-    * set :buildBlockFromCfg.21:lead 30
-    * set :buildBlockFromCfg.21:graphite 30
-    * set :buildBlockFromCfg.21:silicon 0
-    * set :buildBlockFromCfg.21:titanium 0
-    * set :buildBlockFromCfg.21:metaglass 30
-    * set :buildBlockFromCfg.21:rotation 0
-    * set :buildBlockFromCfg.21:config null
   635 label *label180
   636 op add :buildBlockFromCfg.21:x .coreX -4.5
   637 op add :buildBlockFromCfg.21:y .coreY 5.5
   638 set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.21:x
+  639 set :buildBlock:x :buildBlockFromCfg.16:x
   640 set :buildBlock:y :buildBlockFromCfg.21:y
   641 set :buildBlock:copper 30
   642 set :buildBlock:lead 30
 
   656 label *label182
   657 label *label179
   658 set .graphiteSurplus 200
-    * set :buildBlockFromCfg.22:block @payload-router
-    * set :buildBlockFromCfg.22:offsetX -3
-    * set :buildBlockFromCfg.22:offsetY -5
-    * set :buildBlockFromCfg.22:copper 10
-    * set :buildBlockFromCfg.22:lead 0
-    * set :buildBlockFromCfg.22:graphite 15
-    * set :buildBlockFromCfg.22:silicon 0
-    * set :buildBlockFromCfg.22:titanium 0
-    * set :buildBlockFromCfg.22:metaglass 0
-    * set :buildBlockFromCfg.22:rotation 0
-    * set :buildBlockFromCfg.22:config null
   659 label *label186
   660 op add :buildBlockFromCfg.22:x .coreX -3
   661 op add :buildBlockFromCfg.22:y .coreY -5
   662 set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.22:x
+  663 set :buildBlock:x :buildBlockFromCfg.12:x
   664 set :buildBlock:y :buildBlockFromCfg.22:y
   665 set :buildBlock:copper 10
   666 set :buildBlock:lead 0
   667 set :buildBlock:graphite 15
-    * set :buildBlock:silicon 0
   668 set :buildBlock:titanium 0
   669 set :buildBlock:metaglass 0
   670 set :buildBlock:rotation 0
 
   680 label *label188
   681 label *label185
   682 write *tmp210 *tmp154 ".payloadRouter"
-    * set :buildBlockFromCfg.23:block @unloader
-    * set :buildBlockFromCfg.23:offsetX 0
-    * set :buildBlockFromCfg.23:offsetY -2
-    * set :buildBlockFromCfg.23:copper 0
-    * set :buildBlockFromCfg.23:lead 0
-    * set :buildBlockFromCfg.23:graphite 0
-    * set :buildBlockFromCfg.23:silicon 30
-    * set :buildBlockFromCfg.23:titanium 25
-    * set :buildBlockFromCfg.23:metaglass 0
-    * set :buildBlockFromCfg.23:rotation 0
-    * set :buildBlockFromCfg.23:config null
   683 label *label192
   684 op add :buildBlockFromCfg.23:x .coreX 0
   685 op add :buildBlockFromCfg.23:y .coreY -2
   686 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.23:x
-    * set :buildBlock:y :buildBlockFromCfg.23:y
+  687 set :buildBlock:x :buildBlockFromCfg.1:x
+  688 set :buildBlock:y :buildBlockFromCfg.12:y
   689 set :buildBlock:copper 0
-    * set :buildBlock:lead 0
   690 set :buildBlock:graphite 0
   691 set :buildBlock:silicon 30
   692 set :buildBlock:titanium 25
 
   702 multilabel *label195 (m:marker23)
   703 label *label194
   704 label *label191
-    * set :buildBlockFromCfg.24:block @underflow-gate
-    * set :buildBlockFromCfg.24:offsetX 0
-    * set :buildBlockFromCfg.24:offsetY -3
-    * set :buildBlockFromCfg.24:copper 4
-    * set :buildBlockFromCfg.24:lead 2
-    * set :buildBlockFromCfg.24:graphite 0
-    * set :buildBlockFromCfg.24:silicon 0
-    * set :buildBlockFromCfg.24:titanium 0
-    * set :buildBlockFromCfg.24:metaglass 0
-    * set :buildBlockFromCfg.24:rotation 0
-    * set :buildBlockFromCfg.24:config null
   705 label *label198
   706 op add :buildBlockFromCfg.24:x .coreX 0
   707 op add :buildBlockFromCfg.24:y .coreY -3
   708 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.24:x
-    * set :buildBlock:y :buildBlockFromCfg.24:y
+  709 set :buildBlock:x :buildBlockFromCfg.1:x
+  710 set :buildBlock:y :buildBlockFromCfg.10:y
   711 set :buildBlock:copper 4
   712 set :buildBlock:lead 2
   713 set :buildBlock:graphite 0
 
   725 multilabel *label201 (m:marker24)
   726 label *label200
   727 label *label197
-    * set :buildBlockFromCfg.25:block @additive-reconstructor
-    * set :buildBlockFromCfg.25:offsetX 0
-    * set :buildBlockFromCfg.25:offsetY -5
-    * set :buildBlockFromCfg.25:copper 200
-    * set :buildBlockFromCfg.25:lead 120
-    * set :buildBlockFromCfg.25:graphite 0
-    * set :buildBlockFromCfg.25:silicon 90
-    * set :buildBlockFromCfg.25:titanium 0
-    * set :buildBlockFromCfg.25:metaglass 0
-    * set :buildBlockFromCfg.25:rotation 0
-    * set :buildBlockFromCfg.25:config null
   728 label *label204
   729 op add :buildBlockFromCfg.25:x .coreX 0
   730 op add :buildBlockFromCfg.25:y .coreY -5
   731 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.25:x
-    * set :buildBlock:y :buildBlockFromCfg.25:y
+  732 set :buildBlock:x :buildBlockFromCfg.1:x
+  733 set :buildBlock:y :buildBlockFromCfg.22:y
   734 set :buildBlock:copper 200
   735 set :buildBlock:lead 120
-    * set :buildBlock:graphite 0
   736 set :buildBlock:silicon 90
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   737 setaddr :buildBlock*retaddr *label208 (h:*label208)
   738 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
   739 label *label208
 
   744 multilabel *label207 (m:marker25)
   745 label *label206
   746 label *label203
-    * set :reconstructor *tmp222
   747 write *tmp222 *tmp154 ".reconstructor"
   748 write *tmp222 processor1 ".reconstructor"
   749 setaddr :buildUnits*retaddr *label209 (h:*label209)
 
   797 jump *label219 equal *tmp240 false
   798 label *label221
   799 write null processor1 ".nextBlock"
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   800 ubind @flare
   801 jump *label224 notEqual @unit null
   802 jump *label223 always
 
   861 label *label245
   862 end
   863 label *label6
-    * set :status3:text "Moving..."
   864 write "Moving..." .display ".status3"
   865 label *label248
   866 label *label249
 
   875 return :moveTo*retaddr
   876 end
   877 label *label7
-    * set *tmp264 :moveTo.1:x
-    * set *tmp265 :moveTo.1:y
   878 set :moveTo:x :moveTo.1:x
   879 set :moveTo:y :moveTo.1:y
   880 set :moveTo:radius 6
 
   885 return :moveTo.1*retaddr
   886 end
   887 label *label8
-    * set :status3.1:text "Moving..."
   888 write "Moving..." .display ".status3"
   889 label *label255
   890 label *label256
 
   914 return :moveToBlock*retaddr
   915 end
   916 label *label10
-    * set :status3.2:text "Depositing..."
   917 write "Depositing..." .display ".status3"
   918 label *label264
   919 sensor *tmp273 @unit @firstItem
 
   942 jump *label271 always
   943 label *label273
   944 label *label266
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   945 write 0 .display ".transportTarget"
   946 write null .display ".transportItem"
   947 label *label274
 
   951 label *label11
   952 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 0
   953 jump *label276 notEqual *tmp283 false
-    * set :error.2:error "Cannot locate ore"
   954 set .ERROR "Cannot locate ore"
   955 stop
   956 label *label278
 
   961 end
   962 label *label12
   963 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   964 write :mineOre:amount .display ".transportTarget"
   965 write :mineOre:ore .display ".transportItem"
   966 label *label280
 
   987 label *label285
   988 label *label283
   989 label *label284
-    * set :status3.3:text "Mining..."
   990 write "Mining..." .display ".status3"
   991 label *label289
   992 op add :mineOre:stop @second 10
 
  1018 return :mineOre*retaddr
  1019 end
  1020 label *label13
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
  1021 write "Mining " .display ".status2"
  1022 write :mineOre.1:ore .display ".item2"
  1023 write "core" .display ".block2"
 
  1033 end
  1034 label *label14
  1035 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
  1036 write :transportStatus.2:target .display ".transportTarget"
  1037 write :fetchBlock:item .display ".transportItem"
  1038 label *label302
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
  1039 write "Fetching " .display ".status2"
  1040 write :fetchBlock:item .display ".item2"
  1041 write :fetchBlock:block .display ".block2"
 
  1087 jump *label319 greaterThanEq *tmp320 .targetGraphite
  1088 sensor *tmp323 .press @coal
  1089 jump *label321 greaterThanEq *tmp323 5
-    * set :status1:text "Goal 1: graphite requirement"
  1090 write "Goal 1: graphite requirement" .display ".status1"
  1091 label *label323
  1092 set :supplyBlock:block .press
  1093 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1094 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1095 write @coal .display ".item2"
+ 1096 write .press .display ".block2"
  1097 label *label325
  1098 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1099 sensor *tmp327 .press @coal
 
  1117 jump *label329 greaterThanEq *tmp331 .targetSilicon
  1118 sensor *tmp334 .smelter @coal
  1119 jump *label331 greaterThanEq *tmp334 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1120 write "Goal 2: coal for silicon requirement" .display ".status1"
  1121 label *label333
  1122 set :supplyBlock.1:block .smelter
  1123 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1124 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1125 write @coal .display ".item2"
+ 1126 write .smelter .display ".block2"
  1127 label *label335
  1128 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1129 sensor *tmp338 .smelter @coal
 
  1143 label *label331
  1144 sensor *tmp342 .smelter @sand
  1145 jump *label339 greaterThanEq *tmp342 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1146 write "Goal 3: sand for silicon requirement" .display ".status1"
  1147 label *label341
  1148 set :supplyBlock.2:block .smelter
  1149 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1150 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1151 write @sand .display ".item2"
+ 1152 write .smelter .display ".block2"
  1153 label *label343
  1154 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1155 sensor *tmp346 .smelter @sand
 
  1174 jump *label347 greaterThanEq *tmp350 .powerTarget
  1175 sensor *tmp353 .generator @coal
  1176 jump *label349 greaterThanEq *tmp353 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1177 write "Goal 4: supplying generator" .display ".status1"
  1178 label *label351
  1179 set :supplyBlock.3:block .generator
  1180 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1181 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1182 write @coal .display ".item2"
+ 1183 write .generator .display ".block2"
  1184 label *label353
  1185 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1186 sensor *tmp357 .generator @coal
 
  1211 label *label357
  1212 set *tmp363 100
  1213 label *label358
-    * set :supplyBase0:titaniumTrigger *tmp363
  1214 sensor *tmp367 .titaniumDrill @titanium
  1215 jump *label359 greaterThanEq *tmp367 *tmp363
  1216 jump *label361 notEqual :supplyBase0:supplied false
  1217 sensor *tmp372 .battery @totalPower
  1218 op mul *tmp373 .unloader1 .powerTarget
  1219 jump *label363 greaterThanEq *tmp372 *tmp373
-    * set :status1.4:text "Goal 5: supplying generator"
  1220 write "Goal 5: supplying generator" .display ".status1"
  1221 label *label365
  1222 set :mineOre.1:ore @coal
 
  1227 label *label363
  1228 sensor *tmp376 .core @silicon
  1229 jump *label367 greaterThanEq *tmp376 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1230 write "Goal 6: silicon requirement" .display ".status1"
  1231 label *label369
  1232 sensor :supplyBase0:coal .core @coal
 
  1237 label *label370
  1238 set *tmp382 @sand
  1239 label *label371
-    * set :supplyBase0:ore *tmp382
  1240 set :mineOre.1:ore *tmp382
  1241 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1242 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
 
  1245 label *label367
  1246 sensor *tmp383 .core @copper
  1247 jump *label373 greaterThanEq *tmp383 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1248 write "Goal 7: copper requirement" .display ".status1"
  1249 label *label375
  1250 set :mineOre.1:ore @copper
 
  1255 label *label373
  1256 sensor *tmp386 .core @lead
  1257 jump *label377 greaterThanEq *tmp386 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1258 write "Goal 8: lead requirement" .display ".status1"
  1259 label *label379
  1260 set :mineOre.1:ore @lead
 
  1265 label *label377
  1266 sensor *tmp389 .core @metaglass
  1267 jump *label381 greaterThanEq *tmp389 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1268 write "Goal 9: metaglass requirement" .display ".status1"
  1269 label *label383
  1270 set :mineOre.1:ore @sand
 
  1273 label *label384
  1274 jump *label382 always
  1275 label *label381
-    * set :status1.9:text "Goal 10: supplying base"
  1276 write "Goal 10: supplying base" .display ".status1"
  1277 label *label385
  1278 sensor :supplyBase0:coal.1 .core @coal
 
  1283 label *label386
  1284 set *tmp395 @sand
  1285 label *label387
-    * set :supplyBase0:ore.1 *tmp395
  1286 set :mineOre.1:ore *tmp395
  1287 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1288 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
 
  1296 label *label362
  1297 jump *label360 always
  1298 label *label359
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1299 write "Goal 11: Fetching titanium" .display ".status1"
  1300 label *label389
  1301 set :fetchBlock:block .titaniumDrill
 
  1308 return :supplyBase0*retaddr
  1309 end
  1310 label *label21
-    * set :status1.11:text "Phase 1: supplying base"
  1311 write "Phase 1: supplying base" .display ".status1"
  1312 label *label392
  1313 set :mineOre.1:ore @coal
 
  1428 write *tmp427 .controller ".smelterTarget"
  1429 op add *tmp428 :meetTarget:metaglass .metaglassSurplus
  1430 write *tmp428 .controller ".kilnTarget"
-    * op add *tmp429 :meetTarget:lead .leadSurplus
  1431 write *tmp424 .controller ".leadReserve"
  1432 op sign *tmp430 :meetTarget:silicon
  1433 op mul *tmp431 *tmp430 20
 
  1451 read *tmp90 bank1 511
  1452 op sub *tmp434 *tmp90 1
  1453 write *tmp434 bank1 511
-    * set *tmp435 *tmp434
  1454 op mul :second:result @second TIME_COMPRESS
-    * set *tmp437 :second:result
  1455 label *label432
  1456 op floor *tmp438 :second:result
  1457 op mul *tmp439 *tmp438 1000
 
  1474 setaddr :moveTo.1*retaddr *label436 (h:*label436)
  1475 call *label7 *invalid :moveTo.1*retval (m:*label436) (h:*label436)
  1476 label *label436
-    * set :status3.4:text "Building..."
  1477 write "Building..." .display ".status3"
  1478 label *label437
  1479 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1488 jump *label435 always
  1489 label *label442
  1490 label *label443
-    * set :error.3:error "Cannot build at ("
  1491 set .ERROR "Cannot build at ("
  1492 stop
  1493 label *label444

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-46 instructions):
 
    94 set .battery *tmp107
    95 label *label51
    96 op add :buildBlockFromCfg.2:x .coreX 1
-    * op add :buildBlockFromCfg.2:y .coreY 5
-    * set :buildBlock:block @battery
    97 set :buildBlock:x :buildBlockFromCfg.2:x
    98 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
    99 set :buildBlock:lead 20
   100 set :buildBlock:graphite 0
   101 set :buildBlock:silicon 0
 
   113 label *label53
   114 label *label50
   115 label *label57
-    * op add :buildBlockFromCfg.3:x .coreX 0
   116 op add :buildBlockFromCfg.3:y .coreY 4
   117 set :buildBlock:block @combustion-generator
   118 set :buildBlock:x :buildBlockFromCfg.1:x
 
   163 label *label62
   164 set .smelter *tmp119
   165 label *label69
-    * op add :buildBlockFromCfg.5:x .coreX 1
   166 op add :buildBlockFromCfg.5:y .coreY 2
   167 set :buildBlock:block @inverted-sorter
   168 set :buildBlock:x :buildBlockFromCfg.2:x
 
   228 setaddr :buildBlockAt*retaddr *label81 (h:*label81)
   229 call *label27 *invalid :buildBlockAt*retval (m:*label81) (h:*label81)
   230 label *label81
-    * set *tmp127 :buildBlockAt*retval
   231 jump *label74 always
   232 label *label74
   233 set .titaniumDrill :buildBlockAt*retval
   234 write :buildBlockAt*retval processor1 ".titaniumDrill"
   235 label *label83
-    * op add :buildBlockFromCfg.6:x .coreX 0
-    * op add :buildBlockFromCfg.6:y .coreY 2
   236 set :buildBlock:block @unloader
   237 set :buildBlock:x :buildBlockFromCfg.1:x
   238 set :buildBlock:y :buildBlockFromCfg.5:y
 
   257 set .unloader1 *tmp142
   258 label *label89
   259 op add :buildBlockFromCfg.7:x .coreX -1
-    * op add :buildBlockFromCfg.7:y .coreY 2
   260 set :buildBlock:block @inverted-sorter
   261 set :buildBlock:x :buildBlockFromCfg.7:x
   262 set :buildBlock:y :buildBlockFromCfg.5:y
 
   278 label *label91
   279 label *label88
   280 label *label95
-    * op add :buildBlockFromCfg.8:x .coreX 0
   281 op add :buildBlockFromCfg.8:y .coreY 3
   282 set :buildBlock:block @overflow-gate
   283 set :buildBlock:x :buildBlockFromCfg.1:x
 
   301 label *label94
   302 label *label101
   303 op add :buildBlockFromCfg.9:x .coreX 3
-    * op add :buildBlockFromCfg.9:y .coreY 4
   304 set :buildBlock:block @micro-processor
   305 set :buildBlock:x :buildBlockFromCfg.9:x
   306 set :buildBlock:y :buildBlockFromCfg.3:y
 
   334 write :flares *tmp154 ".flares"
   335 write :polys *tmp154 ".polys"
   336 label *label107
-    * op add :buildBlockFromCfg.10:x .coreX -1
   337 op add :buildBlockFromCfg.10:y .coreY -3
   338 set :buildBlock:block @power-node
   339 set :buildBlock:x :buildBlockFromCfg.7:x
 
   456 label *label134
   457 label *label131
   458 label *label138
-    * op add :buildBlockFromCfg.14:x .coreX 2
-    * op add :buildBlockFromCfg.14:y .coreY 0
   459 set :buildBlock:block @inverted-sorter
   460 set :buildBlock:x :buildBlockFromCfg.13:x
   461 set :buildBlock:y :buildBlockFromCfg.11:y
 
   478 label *label137
   479 label *label144
   480 op add :buildBlockFromCfg.15:x .coreX 2.5
-    * op add :buildBlockFromCfg.15:y .coreY 1.5
   481 set :buildBlock:block @kiln
   482 set :buildBlock:x :buildBlockFromCfg.15:x
   483 set :buildBlock:y :buildBlockFromCfg:y
 
   502 write *tmp182 *tmp154 ".kiln"
   503 label *label150
   504 op add :buildBlockFromCfg.16:x .coreX -4.5
-    * op add :buildBlockFromCfg.16:y .coreY 3.5
   505 set :buildBlock:block @water-extractor
   506 set :buildBlock:x :buildBlockFromCfg.16:x
   507 set :buildBlock:y :buildBlockFromCfg.4:y
 
   523 label *label152
   524 label *label149
   525 label *label156
-    * op add :buildBlockFromCfg.17:x .coreX -3
-    * op add :buildBlockFromCfg.17:y .coreY 0
   526 set :buildBlock:block @overflow-gate
   527 set :buildBlock:x :buildBlockFromCfg.12:x
   528 set :buildBlock:y :buildBlockFromCfg.11:y
 
   545 label *label155
   546 label *label162
   547 op add :buildBlockFromCfg.18:x .coreX -4
-    * op add :buildBlockFromCfg.18:y .coreY 0
   548 set :buildBlock:x :buildBlockFromCfg.18:x
   549 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:lead 2
   550 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   551 set :buildBlock:titanium 0
   552 set :buildBlock:metaglass 0
   553 set :buildBlock:rotation 0
 
   562 label *label164
   563 label *label161
   564 label *label168
-    * op add :buildBlockFromCfg.19:x .coreX -4.5
-    * op add :buildBlockFromCfg.19:y .coreY 1.5
   565 set :buildBlock:block @steam-generator
   566 set :buildBlock:x :buildBlockFromCfg.16:x
   567 set :buildBlock:y :buildBlockFromCfg:y
 
   585 label *label167
   586 write *tmp198 *tmp154 ".generator2"
   587 label *label174
-    * op add :buildBlockFromCfg.20:x .coreX -2
-    * op add :buildBlockFromCfg.20:y .coreY 4
   588 set :buildBlock:block @multi-press
   589 set :buildBlock:x :buildBlockFromCfg.11:x
   590 set :buildBlock:y :buildBlockFromCfg.3:y
 
   608 label *label173
   609 write *tmp202 *tmp154 ".multipress"
   610 label *label180
-    * op add :buildBlockFromCfg.21:x .coreX -4.5
   611 op add :buildBlockFromCfg.21:y .coreY 5.5
   612 set :buildBlock:block @water-extractor
   613 set :buildBlock:x :buildBlockFromCfg.16:x
 
   631 label *label179
   632 set .graphiteSurplus 200
   633 label *label186
-    * op add :buildBlockFromCfg.22:x .coreX -3
   634 op add :buildBlockFromCfg.22:y .coreY -5
   635 set :buildBlock:block @payload-router
   636 set :buildBlock:x :buildBlockFromCfg.12:x
 
   638 set :buildBlock:copper 10
   639 set :buildBlock:lead 0
   640 set :buildBlock:graphite 15
-    * set :buildBlock:titanium 0
   641 set :buildBlock:metaglass 0
   642 set :buildBlock:rotation 0
   643 set :buildBlock:config null
 
   653 label *label185
   654 write *tmp210 *tmp154 ".payloadRouter"
   655 label *label192
-    * op add :buildBlockFromCfg.23:x .coreX 0
-    * op add :buildBlockFromCfg.23:y .coreY -2
   656 set :buildBlock:block @unloader
   657 set :buildBlock:x :buildBlockFromCfg.1:x
   658 set :buildBlock:y :buildBlockFromCfg.12:y
 
   673 label *label194
   674 label *label191
   675 label *label198
-    * op add :buildBlockFromCfg.24:x .coreX 0
-    * op add :buildBlockFromCfg.24:y .coreY -3
   676 set :buildBlock:block @underflow-gate
   677 set :buildBlock:x :buildBlockFromCfg.1:x
   678 set :buildBlock:y :buildBlockFromCfg.10:y
   679 set :buildBlock:copper 4
   680 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   681 set :buildBlock:silicon 0
   682 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   683 setaddr :buildBlock*retaddr *label202 (h:*label202)
   684 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   685 label *label202
 
   690 label *label200
   691 label *label197
   692 label *label204
-    * op add :buildBlockFromCfg.25:x .coreX 0
-    * op add :buildBlockFromCfg.25:y .coreY -5
   693 set :buildBlock:block @additive-reconstructor
   694 set :buildBlock:x :buildBlockFromCfg.1:x
   695 set :buildBlock:y :buildBlockFromCfg.22:y
 
  1051 jump *label321 greaterThanEq *tmp323 5
  1052 write "Goal 1: graphite requirement" .display ".status1"
  1053 label *label323
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1054 write "Supplying " .display ".status2"
  1055 write @coal .display ".item2"
  1056 write .press .display ".block2"
 
  1079 jump *label331 greaterThanEq *tmp334 5
  1080 write "Goal 2: coal for silicon requirement" .display ".status1"
  1081 label *label333
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1082 write "Supplying " .display ".status2"
  1083 write @coal .display ".item2"
  1084 write .smelter .display ".block2"
 
  1103 jump *label339 greaterThanEq *tmp342 5
  1104 write "Goal 3: sand for silicon requirement" .display ".status1"
  1105 label *label341
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1106 write "Supplying " .display ".status2"
  1107 write @sand .display ".item2"
  1108 write .smelter .display ".block2"
 
  1132 jump *label349 greaterThanEq *tmp353 2
  1133 write "Goal 4: supplying generator" .display ".status1"
  1134 label *label351
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1135 write "Supplying " .display ".status2"
  1136 write @coal .display ".item2"
  1137 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
   506 set :buildBlock:x :buildBlockFromCfg.16:x
   507 set :buildBlock:y :buildBlockFromCfg.4:y
   508 set :buildBlock:copper 30
-    * set :buildBlock:lead 30
   509 set :buildBlock:graphite 30
   510 set :buildBlock:silicon 0
   511 set :buildBlock:titanium 0
 
   528 set :buildBlock:copper 4
   529 set :buildBlock:lead 2
   530 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   531 set :buildBlock:titanium 0
   532 set :buildBlock:metaglass 0
   533 set :buildBlock:rotation 0
 
   545 op add :buildBlockFromCfg.18:x .coreX -4
   546 set :buildBlock:x :buildBlockFromCfg.18:x
   547 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:graphite 0
   548 set :buildBlock:titanium 0
   549 set :buildBlock:metaglass 0
   550 set :buildBlock:rotation 0
 
   566 set :buildBlock:lead 40
   567 set :buildBlock:graphite 25
   568 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   569 set :buildBlock:metaglass 0
   570 set :buildBlock:rotation 0
   571 set :buildBlock:config null
 
   656 set :buildBlock:graphite 0
   657 set :buildBlock:silicon 30
   658 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   659 setaddr :buildBlock*retaddr *label196 (h:*label196)
   660 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   661 label *label196

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-7 instructions):
 
   283 set :buildBlock:x :buildBlockFromCfg.1:x
   284 set :buildBlock:y :buildBlockFromCfg.8:y
   285 set :buildBlock:copper 4
-    * set :buildBlock:lead 2
   286 set :buildBlock:graphite 0
   287 set :buildBlock:silicon 0
   288 set :buildBlock:titanium 0
 
   505 set :buildBlock:x :buildBlockFromCfg.16:x
   506 set :buildBlock:y :buildBlockFromCfg.4:y
   507 set :buildBlock:copper 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   508 set :buildBlock:titanium 0
   509 set :buildBlock:metaglass 30
   510 set :buildBlock:rotation 0
 
   542 op add :buildBlockFromCfg.18:x .coreX -4
   543 set :buildBlock:x :buildBlockFromCfg.18:x
   544 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:titanium 0
   545 set :buildBlock:metaglass 0
   546 set :buildBlock:rotation 0
   547 set :buildBlock:config null
 
   585 set :buildBlock:graphite 50
   586 set :buildBlock:silicon 25
   587 set :buildBlock:titanium 100
-    * set :buildBlock:metaglass 0
   588 set :buildBlock:rotation 0
   589 set :buildBlock:config null
   590 setaddr :buildBlock*retaddr *label178 (h:*label178)
 
   630 set :buildBlock:lead 0
   631 set :buildBlock:graphite 15
   632 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   633 setaddr :buildBlock*retaddr *label190 (h:*label190)
   634 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   635 label *label190

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-7 instructions):
 
    96 op add :buildBlockFromCfg.2:x .coreX 1
    97 set :buildBlock:x :buildBlockFromCfg.2:x
    98 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:lead 20
    99 set :buildBlock:graphite 0
   100 set :buildBlock:silicon 0
   101 set :buildBlock:titanium 0
 
   459 set :buildBlock:y :buildBlockFromCfg.11:y
   460 set :buildBlock:copper 2
   461 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   462 set :buildBlock:silicon 0
   463 set :buildBlock:titanium 0
   464 set :buildBlock:metaglass 0
 
   481 set :buildBlock:copper 60
   482 set :buildBlock:lead 30
   483 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   484 set :buildBlock:titanium 0
   485 set :buildBlock:metaglass 0
   486 set :buildBlock:rotation 0
 
   522 set :buildBlock:copper 4
   523 set :buildBlock:lead 2
   524 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   525 set :buildBlock:metaglass 0
   526 set :buildBlock:rotation 0
   527 set :buildBlock:config null
 
   558 set :buildBlock:lead 40
   559 set :buildBlock:graphite 25
   560 set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
   561 set :buildBlock:rotation 0
   562 set :buildBlock:config null
   563 setaddr :buildBlock*retaddr *label172 (h:*label172)
 
   604 set :buildBlock:silicon 0
   605 set :buildBlock:titanium 0
   606 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   607 setaddr :buildBlock*retaddr *label184 (h:*label184)
   608 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   609 label *label184

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
   283 set :buildBlock:y :buildBlockFromCfg.8:y
   284 set :buildBlock:copper 4
   285 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   286 set :buildBlock:titanium 0
   287 set :buildBlock:metaglass 0
   288 set :buildBlock:rotation 0
 
   437 set :buildBlock:y :buildBlockFromCfg.13:y
   438 set :buildBlock:copper 0
   439 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   440 set :buildBlock:silicon 30
   441 set :buildBlock:titanium 25
   442 set :buildBlock:metaglass 0
 
   500 set :buildBlock:x :buildBlockFromCfg.16:x
   501 set :buildBlock:y :buildBlockFromCfg.4:y
   502 set :buildBlock:copper 30
-    * set :buildBlock:titanium 0
   503 set :buildBlock:metaglass 30
   504 set :buildBlock:rotation 0
   505 set :buildBlock:config null
 
   535 op add :buildBlockFromCfg.18:x .coreX -4
   536 set :buildBlock:x :buildBlockFromCfg.18:x
   537 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:metaglass 0
   538 set :buildBlock:rotation 0
   539 set :buildBlock:config null
   540 setaddr :buildBlock*retaddr *label166 (h:*label166)
 
   576 set :buildBlock:graphite 50
   577 set :buildBlock:silicon 25
   578 set :buildBlock:titanium 100
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   579 setaddr :buildBlock*retaddr *label178 (h:*label178)
   580 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   581 label *label178

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
   169 set :buildBlock:copper 2
   170 set :buildBlock:lead 2
   171 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   172 set :buildBlock:titanium 0
   173 set :buildBlock:metaglass 0
   174 set :buildBlock:rotation 0
 
   384 set :buildBlock:y :buildBlockFromCfg.12:y
   385 set :buildBlock:copper 60
   386 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   387 set :buildBlock:silicon 0
   388 set :buildBlock:titanium 0
   389 set :buildBlock:metaglass 0
 
   477 set :buildBlock:copper 60
   478 set :buildBlock:lead 30
   479 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   480 set :buildBlock:rotation 0
   481 set :buildBlock:config null
   482 setaddr :buildBlock*retaddr *label148 (h:*label148)
 
   550 set :buildBlock:lead 40
   551 set :buildBlock:graphite 25
   552 set :buildBlock:silicon 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   553 setaddr :buildBlock*retaddr *label172 (h:*label172)
   554 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   555 label *label172

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-6 instructions):
 
   145 set :buildBlock:copper 30
   146 set :buildBlock:lead 25
   147 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   148 set :buildBlock:titanium 0
   149 set :buildBlock:metaglass 0
   150 set :buildBlock:rotation 0
 
   337 set :buildBlock:lead 6
   338 set :buildBlock:graphite 0
   339 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   340 set :buildBlock:metaglass 0
   341 set :buildBlock:rotation 0
   342 set :buildBlock:config null
 
   357 set :buildBlock:y :buildBlockFromCfg.11:y
   358 set :buildBlock:copper 0
   359 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   360 set :buildBlock:silicon 30
   361 set :buildBlock:titanium 25
   362 set :buildBlock:metaglass 0
 
   454 set :buildBlock:lead 2
   455 set :buildBlock:silicon 0
   456 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   457 set :buildBlock:rotation 0
   458 set :buildBlock:config null
   459 setaddr :buildBlock*retaddr *label142 (h:*label142)
 
   527 op add :buildBlockFromCfg.18:x .coreX -4
   528 set :buildBlock:x :buildBlockFromCfg.18:x
   529 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   530 setaddr :buildBlock*retaddr *label166 (h:*label166)
   531 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   532 label *label166

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-6 instructions):
 
   119 set :buildBlock:copper 25
   120 set :buildBlock:lead 15
   121 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   122 set :buildBlock:titanium 0
   123 set :buildBlock:metaglass 0
   124 set :buildBlock:rotation 0
 
   302 set :buildBlock:lead 50
   303 set :buildBlock:graphite 0
   304 set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   305 set :buildBlock:metaglass 0
   306 set :buildBlock:rotation 0
   307 set :buildBlock:config processor2
 
   333 set :buildBlock:y :buildBlockFromCfg.10:y
   334 set :buildBlock:copper 2
   335 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   336 set :buildBlock:silicon 0
   337 set :buildBlock:metaglass 0
   338 set :buildBlock:rotation 0
 
   431 set :buildBlock:lead 0
   432 set :buildBlock:silicon 30
   433 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   434 set :buildBlock:rotation 0
   435 set :buildBlock:config null
   436 setaddr :buildBlock*retaddr *label136 (h:*label136)
 
   508 set :buildBlock:lead 2
   509 set :buildBlock:graphite 0
   510 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   511 setaddr :buildBlock*retaddr *label160 (h:*label160)
   512 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   513 label *label160

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-6 instructions):
 
    97 set :buildBlock:x :buildBlockFromCfg.2:x
    98 set :buildBlock:y :buildBlockFromCfg.1:y
    99 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   100 set :buildBlock:titanium 0
   101 set :buildBlock:metaglass 0
   102 set :buildBlock:rotation 0
 
   279 set :buildBlock:y :buildBlockFromCfg.8:y
   280 set :buildBlock:copper 4
   281 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   282 set :buildBlock:metaglass 0
   283 set :buildBlock:rotation 0
   284 set :buildBlock:config null
 
   298 set :buildBlock:y :buildBlockFromCfg.3:y
   299 set :buildBlock:copper 90
   300 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   301 set :buildBlock:silicon 50
   302 set :buildBlock:metaglass 0
   303 set :buildBlock:rotation 0
 
   377 set :buildBlock:lead 70
   378 set :buildBlock:silicon 0
   379 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   380 set :buildBlock:rotation 3
   381 set :buildBlock:config @mono
   382 setaddr :buildBlock*retaddr *label123 (h:*label123)
 
   485 set :buildBlock:y :buildBlockFromCfg.4:y
   486 set :buildBlock:copper 30
   487 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   488 setaddr :buildBlock*retaddr *label154 (h:*label154)
   489 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   490 label *label154

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-6 instructions):
 
    76 set :buildBlock:copper 5
    77 set :buildBlock:lead 20
    78 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    79 set :buildBlock:titanium 0
    80 set :buildBlock:metaglass 0
    81 set :buildBlock:rotation 0
 
   165 set :buildBlock:copper 2
   166 set :buildBlock:lead 2
   167 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   168 set :buildBlock:metaglass 0
   169 set :buildBlock:rotation 0
   170 set :buildBlock:config null
 
   276 set :buildBlock:x :buildBlockFromCfg.1:x
   277 set :buildBlock:y :buildBlockFromCfg.8:y
   278 set :buildBlock:copper 4
-    * set :buildBlock:graphite 0
   279 set :buildBlock:metaglass 0
   280 set :buildBlock:rotation 0
   281 set :buildBlock:config null
 
   350 set :buildBlock:lead 0
   351 set :buildBlock:silicon 30
   352 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   353 set :buildBlock:rotation 0
   354 set :buildBlock:config null
   355 setaddr :buildBlock*retaddr *label117 (h:*label117)
 
   461 set :buildBlock:copper 60
   462 set :buildBlock:lead 30
   463 set :buildBlock:graphite 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   464 setaddr :buildBlock*retaddr *label148 (h:*label148)
   465 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   466 label *label148

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-5 instructions):
 
   142 set :buildBlock:copper 30
   143 set :buildBlock:lead 25
   144 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   145 set :buildBlock:metaglass 0
   146 set :buildBlock:rotation 0
   147 set :buildBlock:config null
 
   254 set :buildBlock:y :buildBlockFromCfg.5:y
   255 set :buildBlock:copper 2
   256 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   257 set :buildBlock:silicon 0
   258 set :buildBlock:titanium 0
   259 set :buildBlock:metaglass 0
 
   326 set :buildBlock:copper 2
   327 set :buildBlock:lead 6
   328 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
   329 set :buildBlock:rotation 0
   330 set :buildBlock:config null
   331 setaddr :buildBlock*retaddr *label111 (h:*label111)
 
   439 set :buildBlock:lead 2
   440 set :buildBlock:silicon 0
   441 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   442 setaddr :buildBlock*retaddr *label142 (h:*label142)
   443 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   444 label *label142

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-5 instructions):
 
   117 set :buildBlock:copper 25
   118 set :buildBlock:lead 15
   119 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   120 set :buildBlock:metaglass 0
   121 set :buildBlock:rotation 0
   122 set :buildBlock:config null
 
   229 set :buildBlock:y :buildBlockFromCfg.5:y
   230 set :buildBlock:copper 0
   231 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   232 set :buildBlock:silicon 30
   233 set :buildBlock:titanium 25
   234 set :buildBlock:metaglass 0
 
   292 set :buildBlock:copper 90
   293 set :buildBlock:lead 50
   294 set :buildBlock:silicon 50
-    * set :buildBlock:metaglass 0
   295 set :buildBlock:rotation 0
   296 set :buildBlock:config processor2
   297 setaddr :buildBlock*retaddr *label105 (h:*label105)
 
   344 set :buildBlock:lead 0
   345 set :buildBlock:silicon 30
   346 set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   347 setaddr :buildBlock*retaddr *label117 (h:*label117)
   348 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   349 label *label117

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-5 instructions):
 
    96 set :buildBlock:x :buildBlockFromCfg.2:x
    97 set :buildBlock:y :buildBlockFromCfg.1:y
    98 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    99 set :buildBlock:metaglass 0
   100 set :buildBlock:rotation 0
   101 set :buildBlock:config null
 
   161 set :buildBlock:y :buildBlockFromCfg.5:y
   162 set :buildBlock:copper 2
   163 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   164 set :buildBlock:metaglass 0
   165 set :buildBlock:rotation 0
   166 set :buildBlock:config null
 
   270 set :buildBlock:x :buildBlockFromCfg.1:x
   271 set :buildBlock:y :buildBlockFromCfg.8:y
   272 set :buildBlock:copper 4
-    * set :buildBlock:metaglass 0
   273 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   274 setaddr :buildBlock*retaddr *label99 (h:*label99)
   275 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   276 label *label99
 
   319 set :buildBlock:copper 2
   320 set :buildBlock:lead 6
   321 set :buildBlock:silicon 0
-    * set :buildBlock:rotation 0
   322 set :buildBlock:config null
   323 setaddr :buildBlock*retaddr *label111 (h:*label111)
   324 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-5 instructions):
 
    76 set :buildBlock:copper 5
    77 set :buildBlock:lead 20
    78 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    79 set :buildBlock:metaglass 0
    80 set :buildBlock:rotation 0
    81 set :buildBlock:config null
 
   138 set :buildBlock:y :buildBlockFromCfg.4:y
   139 set :buildBlock:copper 30
   140 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   141 set :buildBlock:metaglass 0
   142 set :buildBlock:rotation 0
   143 set :buildBlock:config null
 
   250 set :buildBlock:lead 2
   251 set :buildBlock:silicon 0
   252 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   253 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   254 setaddr :buildBlock*retaddr *label93 (h:*label93)
   255 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   256 label *label93
 
   284 set :buildBlock:copper 90
   285 set :buildBlock:lead 50
   286 set :buildBlock:silicon 50
-    * set :buildBlock:rotation 0
   287 set :buildBlock:config processor2
   288 setaddr :buildBlock*retaddr *label105 (h:*label105)
   289 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-4 instructions):
 
   114 set :buildBlock:y :buildBlockFromCfg.3:y
   115 set :buildBlock:copper 25
   116 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   117 set :buildBlock:metaglass 0
   118 set :buildBlock:rotation 0
   119 set :buildBlock:config null
 
   226 set :buildBlock:lead 0
   227 set :buildBlock:silicon 30
   228 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   229 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   230 setaddr :buildBlock*retaddr *label87 (h:*label87)
   231 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   232 label *label87
 
   263 set :buildBlock:x :buildBlockFromCfg.1:x
   264 set :buildBlock:y :buildBlockFromCfg.8:y
   265 set :buildBlock:copper 4
-    * set :buildBlock:rotation 0
   266 setaddr :buildBlock*retaddr *label99 (h:*label99)
   267 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   268 label *label99

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-4 instructions):
 
    94 op add :buildBlockFromCfg.2:x .coreX 1
    95 set :buildBlock:x :buildBlockFromCfg.2:x
    96 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    97 set :buildBlock:metaglass 0
    98 set :buildBlock:rotation 0
    99 set :buildBlock:config null
 
   157 set :buildBlock:y :buildBlockFromCfg.5:y
   158 set :buildBlock:copper 2
   159 set :buildBlock:lead 2
-    * set :buildBlock:metaglass 0
   160 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   161 setaddr :buildBlock*retaddr *label73 (h:*label73)
   162 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   163 label *label73
 
   244 set :buildBlock:lead 2
   245 set :buildBlock:silicon 0
   246 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   247 setaddr :buildBlock*retaddr *label93 (h:*label93)
   248 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   249 label *label93

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-4 instructions):
 
    75 set :buildBlock:y :buildBlockFromCfg.1:y
    76 set :buildBlock:copper 5
    77 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    78 set :buildBlock:metaglass 0
    79 set :buildBlock:rotation 0
    80 set :buildBlock:config null
 
   135 set :buildBlock:y :buildBlockFromCfg.4:y
   136 set :buildBlock:copper 30
   137 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
   138 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   139 setaddr :buildBlock*retaddr *label67 (h:*label67)
   140 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   141 label *label67
 
   220 set :buildBlock:lead 0
   221 set :buildBlock:silicon 30
   222 set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
   223 setaddr :buildBlock*retaddr *label87 (h:*label87)
   224 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   225 label *label87

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 20 (-3 instructions):
 
   112 set :buildBlock:y :buildBlockFromCfg.3:y
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
   115 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   116 setaddr :buildBlock*retaddr *label61 (h:*label61)
   117 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
   118 label *label61
 
   152 set :buildBlock:y :buildBlockFromCfg.5:y
   153 set :buildBlock:copper 2
   154 set :buildBlock:lead 2
-    * set :buildBlock:rotation 0
   155 setaddr :buildBlock*retaddr *label73 (h:*label73)
   156 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   157 label *label73

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 21 (-3 instructions):
 
    93 op add :buildBlockFromCfg.2:x .coreX 1
    94 set :buildBlock:x :buildBlockFromCfg.2:x
    95 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
    96 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    97 setaddr :buildBlock*retaddr *label55 (h:*label55)
    98 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    99 label *label55
 
   131 set :buildBlock:y :buildBlockFromCfg.4:y
   132 set :buildBlock:copper 30
   133 set :buildBlock:lead 25
-    * set :buildBlock:rotation 0
   134 setaddr :buildBlock*retaddr *label67 (h:*label67)
   135 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   136 label *label67

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 22 (-3 instructions):
 
    75 set :buildBlock:y :buildBlockFromCfg.1:y
    76 set :buildBlock:copper 5
    77 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
    78 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    79 setaddr :buildBlock*retaddr *label49 (h:*label49)
    80 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    81 label *label49
 
   108 set :buildBlock:y :buildBlockFromCfg.3:y
   109 set :buildBlock:copper 25
   110 set :buildBlock:lead 15
-    * set :buildBlock:rotation 0
   111 setaddr :buildBlock*retaddr *label61 (h:*label61)
   112 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
   113 label *label61

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 23 (-1 instructions):
 
    91 op add :buildBlockFromCfg.2:x .coreX 1
    92 set :buildBlock:x :buildBlockFromCfg.2:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:rotation 0
    94 setaddr :buildBlock*retaddr *label55 (h:*label55)
    95 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    96 label *label55

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 24 (-1 instructions):
 
    75 set :buildBlock:y :buildBlockFromCfg.1:y
    76 set :buildBlock:copper 5
    77 set :buildBlock:lead 20
-    * set :buildBlock:rotation 0
    78 setaddr :buildBlock*retaddr *label49 (h:*label49)
    79 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    80 label *label49

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    42 label *label37
    43 write :findUnits:count processor1 ".displayPolys"
    44 set :polys :findUnits*retval
+   45 op add :buildBlockFromCfg:x .coreX -2.5
+   46 op add :buildBlockFromCfg:y .coreY 1.5
+   47 set :buildBlock:block @graphite-press
+   48 set :buildBlock:x :buildBlockFromCfg:x
+   49 set :buildBlock:y :buildBlockFromCfg:y
+   50 set :buildBlock:copper 75
+   51 set :buildBlock:lead 30
+   52 set :buildBlock:graphite 0
+   53 set :buildBlock:silicon 0
+   54 set :buildBlock:titanium 0
+   55 set :buildBlock:metaglass 0
+   56 set :buildBlock:rotation 0
+   57 set :buildBlock:config null
+   58 setaddr :buildBlock*retaddr *label43 (h:*label43)
    59 label *label39
-    * op add :buildBlockFromCfg:x .coreX -2.5
-    * op add :buildBlockFromCfg:y .coreY 1.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label43 (h:*label43)
    60 call *label28 *invalid :buildBlock*retval (m:*label43) (h:*label43)
    61 label *label43
    62 set *tmp103 :buildBlock*retval
 
    67 label *label41
    68 label *label38
    69 set .press *tmp103
+   70 op add :buildBlockFromCfg.1:x .coreX 0
+   71 op add :buildBlockFromCfg.1:y .coreY 5
+   72 set :buildBlock:block @battery
+   73 set :buildBlock:x :buildBlockFromCfg.1:x
+   74 set :buildBlock:y :buildBlockFromCfg.1:y
+   75 set :buildBlock:copper 5
+   76 set :buildBlock:lead 20
+   77 setaddr :buildBlock*retaddr *label49 (h:*label49)
    78 label *label45
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 5
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label49 (h:*label49)
    79 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    80 label *label49
    81 set *tmp107 :buildBlock*retval
 
    86 label *label47
    87 label *label44
    88 set .battery *tmp107
+   89 op add :buildBlockFromCfg.2:x .coreX 1
+   90 set :buildBlock:x :buildBlockFromCfg.2:x
+   91 set :buildBlock:y :buildBlockFromCfg.1:y
+   92 setaddr :buildBlock*retaddr *label55 (h:*label55)
    93 label *label51
-    * op add :buildBlockFromCfg.2:x .coreX 1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label55 (h:*label55)
    94 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    95 label *label55
    96 jump *label50 always
 
    99 multilabel *label54 (m:marker2)
   100 label *label53
   101 label *label50
+  102 op add :buildBlockFromCfg.3:y .coreY 4
+  103 set :buildBlock:block @combustion-generator
+  104 set :buildBlock:x :buildBlockFromCfg.1:x
+  105 set :buildBlock:y :buildBlockFromCfg.3:y
+  106 set :buildBlock:copper 25
+  107 set :buildBlock:lead 15
+  108 setaddr :buildBlock*retaddr *label61 (h:*label61)
   109 label *label57
-    * op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label61 (h:*label61)
   110 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
   111 label *label61
   112 set *tmp115 :buildBlock*retval
 
   118 label *label56
   119 set .generator *tmp115
   120 set .powerTarget 400
+  121 op add :buildBlockFromCfg.4:x .coreX 1.5
+  122 op add :buildBlockFromCfg.4:y .coreY 3.5
+  123 set :buildBlock:block @silicon-smelter
+  124 set :buildBlock:x :buildBlockFromCfg.4:x
+  125 set :buildBlock:y :buildBlockFromCfg.4:y
+  126 set :buildBlock:copper 30
+  127 set :buildBlock:lead 25
+  128 setaddr :buildBlock*retaddr *label67 (h:*label67)
   129 label *label63
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 3.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label67 (h:*label67)
   130 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   131 label *label67
   132 set *tmp119 :buildBlock*retval
 
   137 label *label65
   138 label *label62
   139 set .smelter *tmp119
+  140 op add :buildBlockFromCfg.5:y .coreY 2
+  141 set :buildBlock:block @inverted-sorter
+  142 set :buildBlock:x :buildBlockFromCfg.2:x
+  143 set :buildBlock:y :buildBlockFromCfg.5:y
+  144 set :buildBlock:copper 2
+  145 set :buildBlock:lead 2
+  146 setaddr :buildBlock*retaddr *label73 (h:*label73)
   147 label *label69
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * setaddr :buildBlock*retaddr *label73 (h:*label73)
   148 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   149 label *label73
   150 jump *label68 always
 
   201 label *label74
   202 set .titaniumDrill :buildBlockAt*retval
   203 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  204 set :buildBlock:block @unloader
+  205 set :buildBlock:x :buildBlockFromCfg.1:x
+  206 set :buildBlock:y :buildBlockFromCfg.5:y
+  207 set :buildBlock:copper 0
+  208 set :buildBlock:lead 0
+  209 set :buildBlock:silicon 30
+  210 set :buildBlock:titanium 25
+  211 setaddr :buildBlock*retaddr *label87 (h:*label87)
   212 label *label83
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label87 (h:*label87)
   213 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   214 label *label87
   215 set *tmp142 :buildBlock*retval
 
   220 label *label85
   221 label *label82
   222 set .unloader1 *tmp142
+  223 op add :buildBlockFromCfg.7:x .coreX -1
+  224 set :buildBlock:block @inverted-sorter
+  225 set :buildBlock:x :buildBlockFromCfg.7:x
+  226 set :buildBlock:y :buildBlockFromCfg.5:y
+  227 set :buildBlock:copper 2
+  228 set :buildBlock:lead 2
+  229 set :buildBlock:silicon 0
+  230 set :buildBlock:titanium 0
+  231 setaddr :buildBlock*retaddr *label93 (h:*label93)
   232 label *label89
-    * op add :buildBlockFromCfg.7:x .coreX -1
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label93 (h:*label93)
   233 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   234 label *label93
   235 jump *label88 always
 
   238 multilabel *label92 (m:marker7)
   239 label *label91
   240 label *label88
+  241 op add :buildBlockFromCfg.8:y .coreY 3
+  242 set :buildBlock:block @overflow-gate
+  243 set :buildBlock:x :buildBlockFromCfg.1:x
+  244 set :buildBlock:y :buildBlockFromCfg.8:y
+  245 set :buildBlock:copper 4
+  246 setaddr :buildBlock*retaddr *label99 (h:*label99)
   247 label *label95
-    * op add :buildBlockFromCfg.8:y .coreY 3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * setaddr :buildBlock*retaddr *label99 (h:*label99)
   248 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   249 label *label99
   250 jump *label94 always
 
   253 multilabel *label98 (m:marker8)
   254 label *label97
   255 label *label94
+  256 op add :buildBlockFromCfg.9:x .coreX 3
+  257 set :buildBlock:block @micro-processor
+  258 set :buildBlock:x :buildBlockFromCfg.9:x
+  259 set :buildBlock:y :buildBlockFromCfg.3:y
+  260 set :buildBlock:copper 90
+  261 set :buildBlock:lead 50
+  262 set :buildBlock:silicon 50
+  263 setaddr :buildBlock*retaddr *label105 (h:*label105)
   264 label *label101
-    * op add :buildBlockFromCfg.9:x .coreX 3
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
   265 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label105 (h:*label105)
   266 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)
   267 label *label105
   268 set *tmp154 :buildBlock*retval
 
   283 write :monos *tmp154 ".monos"
   284 write :flares *tmp154 ".flares"
   285 write :polys *tmp154 ".polys"
+  286 op add :buildBlockFromCfg.10:y .coreY -3
+  287 set :buildBlock:block @power-node
+  288 set :buildBlock:x :buildBlockFromCfg.7:x
+  289 set :buildBlock:y :buildBlockFromCfg.10:y
+  290 set :buildBlock:copper 2
+  291 set :buildBlock:lead 6
+  292 set :buildBlock:silicon 0
+  293 set :buildBlock:config null
+  294 setaddr :buildBlock*retaddr *label111 (h:*label111)
   295 label *label107
-    * op add :buildBlockFromCfg.10:y .coreY -3
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label111 (h:*label111)
   296 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   297 label *label111
   298 jump *label106 always
 
   301 multilabel *label110 (m:marker10)
   302 label *label109
   303 label *label106
+  304 op add :buildBlockFromCfg.11:x .coreX -2
+  305 op add :buildBlockFromCfg.11:y .coreY 0
+  306 set :buildBlock:block @unloader
+  307 set :buildBlock:x :buildBlockFromCfg.11:x
+  308 set :buildBlock:y :buildBlockFromCfg.11:y
+  309 set :buildBlock:copper 0
+  310 set :buildBlock:lead 0
+  311 set :buildBlock:silicon 30
+  312 set :buildBlock:titanium 25
+  313 setaddr :buildBlock*retaddr *label117 (h:*label117)
   314 label *label113
-    * op add :buildBlockFromCfg.11:x .coreX -2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label117 (h:*label117)
   315 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   316 label *label117
   317 set *tmp162 :buildBlock*retval
 
   322 label *label115
   323 label *label112
   324 write *tmp162 *tmp154 ".unloader2"
+  325 op add :buildBlockFromCfg.12:x .coreX -3
+  326 op add :buildBlockFromCfg.12:y .coreY -2
+  327 set :buildBlock:block @air-factory
+  328 set :buildBlock:x :buildBlockFromCfg.12:x
+  329 set :buildBlock:y :buildBlockFromCfg.12:y
+  330 set :buildBlock:copper 60
+  331 set :buildBlock:lead 70
+  332 set :buildBlock:silicon 0
+  333 set :buildBlock:titanium 0
+  334 set :buildBlock:rotation 3
+  335 set :buildBlock:config @mono
+  336 setaddr :buildBlock*retaddr *label123 (h:*label123)
   337 label *label119
-    * op add :buildBlockFromCfg.12:x .coreX -3
-    * op add :buildBlockFromCfg.12:y .coreY -2
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label123 (h:*label123)
   338 call *label28 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   339 label *label123
   340 set *tmp166 :buildBlock*retval
 
   372 label *label127
   373 set .graphiteSurplus 60
   374 set .siliconSurplus 100
+  375 op add :buildBlockFromCfg.13:x .coreX 2
+  376 op add :buildBlockFromCfg.13:y .coreY -1
+  377 set :buildBlock:block @unloader
+  378 set :buildBlock:x :buildBlockFromCfg.13:x
+  379 set :buildBlock:y :buildBlockFromCfg.13:y
+  380 set :buildBlock:copper 0
+  381 set :buildBlock:lead 0
+  382 set :buildBlock:silicon 30
+  383 set :buildBlock:titanium 25
+  384 set :buildBlock:rotation 0
+  385 set :buildBlock:config null
+  386 setaddr :buildBlock*retaddr *label136 (h:*label136)
   387 label *label132
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY -1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label136 (h:*label136)
   388 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   389 label *label136
   390 jump *label131 always
 
   393 multilabel *label135 (m:marker13)
   394 label *label134
   395 label *label131
+  396 set :buildBlock:block @inverted-sorter
+  397 set :buildBlock:x :buildBlockFromCfg.13:x
+  398 set :buildBlock:y :buildBlockFromCfg.11:y
+  399 set :buildBlock:copper 2
+  400 set :buildBlock:lead 2
+  401 set :buildBlock:silicon 0
+  402 set :buildBlock:titanium 0
+  403 setaddr :buildBlock*retaddr *label142 (h:*label142)
   404 label *label138
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label142 (h:*label142)
   405 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   406 label *label142
   407 jump *label137 always
 
   410 multilabel *label141 (m:marker14)
   411 label *label140
   412 label *label137
+  413 op add :buildBlockFromCfg.15:x .coreX 2.5
+  414 set :buildBlock:block @kiln
+  415 set :buildBlock:x :buildBlockFromCfg.15:x
+  416 set :buildBlock:y :buildBlockFromCfg:y
+  417 set :buildBlock:copper 60
+  418 set :buildBlock:lead 30
+  419 set :buildBlock:graphite 30
+  420 setaddr :buildBlock*retaddr *label148 (h:*label148)
   421 label *label144
-    * op add :buildBlockFromCfg.15:x .coreX 2.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * setaddr :buildBlock*retaddr *label148 (h:*label148)
   422 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   423 label *label148
   424 set *tmp182 :buildBlock*retval
 
   429 label *label146
   430 label *label143
   431 write *tmp182 *tmp154 ".kiln"
+  432 op add :buildBlockFromCfg.16:x .coreX -4.5
+  433 set :buildBlock:block @water-extractor
+  434 set :buildBlock:x :buildBlockFromCfg.16:x
+  435 set :buildBlock:y :buildBlockFromCfg.4:y
+  436 set :buildBlock:copper 30
+  437 set :buildBlock:metaglass 30
+  438 setaddr :buildBlock*retaddr *label154 (h:*label154)
   439 label *label150
-    * op add :buildBlockFromCfg.16:x .coreX -4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label154 (h:*label154)
   440 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   441 label *label154
   442 jump *label149 always
 
   445 multilabel *label153 (m:marker16)
   446 label *label152
   447 label *label149
+  448 set :buildBlock:block @overflow-gate
+  449 set :buildBlock:x :buildBlockFromCfg.12:x
+  450 set :buildBlock:y :buildBlockFromCfg.11:y
+  451 set :buildBlock:copper 4
+  452 set :buildBlock:lead 2
+  453 set :buildBlock:graphite 0
+  454 set :buildBlock:metaglass 0
+  455 setaddr :buildBlock*retaddr *label160 (h:*label160)
   456 label *label156
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label160 (h:*label160)
   457 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   458 label *label160
   459 jump *label155 always
 
   462 multilabel *label159 (m:marker17)
   463 label *label158
   464 label *label155
+  465 op add :buildBlockFromCfg.18:x .coreX -4
+  466 set :buildBlock:x :buildBlockFromCfg.18:x
+  467 set :buildBlock:y :buildBlockFromCfg.11:y
+  468 setaddr :buildBlock*retaddr *label166 (h:*label166)
   469 label *label162
-    * op add :buildBlockFromCfg.18:x .coreX -4
-    * set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * setaddr :buildBlock*retaddr *label166 (h:*label166)
   470 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   471 label *label166
   472 jump *label161 always
 
   475 multilabel *label165 (m:marker18)
   476 label *label164
   477 label *label161
+  478 set :buildBlock:block @steam-generator
+  479 set :buildBlock:x :buildBlockFromCfg.16:x
+  480 set :buildBlock:y :buildBlockFromCfg:y
+  481 set :buildBlock:copper 35
+  482 set :buildBlock:lead 40
+  483 set :buildBlock:graphite 25
+  484 set :buildBlock:silicon 30
+  485 setaddr :buildBlock*retaddr *label172 (h:*label172)
   486 label *label168
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * setaddr :buildBlock*retaddr *label172 (h:*label172)
   487 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   488 label *label172
   489 set *tmp198 :buildBlock*retval
 
   494 label *label170
   495 label *label167
   496 write *tmp198 *tmp154 ".generator2"
+  497 set :buildBlock:block @multi-press
+  498 set :buildBlock:x :buildBlockFromCfg.11:x
+  499 set :buildBlock:y :buildBlockFromCfg.3:y
+  500 set :buildBlock:copper 0
+  501 set :buildBlock:lead 100
+  502 set :buildBlock:graphite 50
+  503 set :buildBlock:silicon 25
+  504 set :buildBlock:titanium 100
+  505 setaddr :buildBlock*retaddr *label178 (h:*label178)
   506 label *label174
-    * set :buildBlock:block @multi-press
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 100
-    * set :buildBlock:graphite 50
-    * set :buildBlock:silicon 25
-    * set :buildBlock:titanium 100
-    * setaddr :buildBlock*retaddr *label178 (h:*label178)
   507 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   508 label *label178
   509 set *tmp202 :buildBlock*retval
 
   514 label *label176
   515 label *label173
   516 write *tmp202 *tmp154 ".multipress"
+  517 op add :buildBlockFromCfg.21:y .coreY 5.5
+  518 set :buildBlock:block @water-extractor
+  519 set :buildBlock:x :buildBlockFromCfg.16:x
+  520 set :buildBlock:y :buildBlockFromCfg.21:y
+  521 set :buildBlock:copper 30
+  522 set :buildBlock:lead 30
+  523 set :buildBlock:graphite 30
+  524 set :buildBlock:silicon 0
+  525 set :buildBlock:titanium 0
+  526 set :buildBlock:metaglass 30
+  527 setaddr :buildBlock*retaddr *label184 (h:*label184)
   528 label *label180
-    * op add :buildBlockFromCfg.21:y .coreY 5.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.21:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label184 (h:*label184)
   529 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   530 label *label184
   531 jump *label179 always
 
   535 label *label182
   536 label *label179
   537 set .graphiteSurplus 200
+  538 op add :buildBlockFromCfg.22:y .coreY -5
+  539 set :buildBlock:block @payload-router
+  540 set :buildBlock:x :buildBlockFromCfg.12:x
+  541 set :buildBlock:y :buildBlockFromCfg.22:y
+  542 set :buildBlock:copper 10
+  543 set :buildBlock:lead 0
+  544 set :buildBlock:graphite 15
+  545 set :buildBlock:metaglass 0
+  546 setaddr :buildBlock*retaddr *label190 (h:*label190)
   547 label *label186
-    * op add :buildBlockFromCfg.22:y .coreY -5
-    * set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.22:y
-    * set :buildBlock:copper 10
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 15
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label190 (h:*label190)
   548 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   549 label *label190
   550 set *tmp210 :buildBlock*retval
 
   555 label *label188
   556 label *label185
   557 write *tmp210 *tmp154 ".payloadRouter"
+  558 set :buildBlock:block @unloader
+  559 set :buildBlock:x :buildBlockFromCfg.1:x
+  560 set :buildBlock:y :buildBlockFromCfg.12:y
+  561 set :buildBlock:copper 0
+  562 set :buildBlock:graphite 0
+  563 set :buildBlock:silicon 30
+  564 set :buildBlock:titanium 25
+  565 setaddr :buildBlock*retaddr *label196 (h:*label196)
   566 label *label192
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label196 (h:*label196)
   567 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   568 label *label196
   569 jump *label191 always
 
   572 multilabel *label195 (m:marker23)
   573 label *label194
   574 label *label191
+  575 set :buildBlock:block @underflow-gate
+  576 set :buildBlock:x :buildBlockFromCfg.1:x
+  577 set :buildBlock:y :buildBlockFromCfg.10:y
+  578 set :buildBlock:copper 4
+  579 set :buildBlock:lead 2
+  580 set :buildBlock:silicon 0
+  581 set :buildBlock:titanium 0
+  582 setaddr :buildBlock*retaddr *label202 (h:*label202)
   583 label *label198
-    * set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label202 (h:*label202)
   584 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   585 label *label202
   586 jump *label197 always
 
   589 multilabel *label201 (m:marker24)
   590 label *label200
   591 label *label197
+  592 set :buildBlock:block @additive-reconstructor
+  593 set :buildBlock:x :buildBlockFromCfg.1:x
+  594 set :buildBlock:y :buildBlockFromCfg.22:y
+  595 set :buildBlock:copper 200
+  596 set :buildBlock:lead 120
+  597 set :buildBlock:silicon 90
+  598 setaddr :buildBlock*retaddr *label208 (h:*label208)
   599 label *label204
-    * set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.22:y
-    * set :buildBlock:copper 200
-    * set :buildBlock:lead 120
-    * set :buildBlock:silicon 90
-    * setaddr :buildBlock*retaddr *label208 (h:*label208)
   600 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
   601 label *label208
   602 set *tmp222 :buildBlock*retval
 
   725 label *label6
   726 write "Moving..." .display ".status3"
   727 label *label248
+  728 op sub *tmp263 :moveTo:radius 0.5
   729 label *label249
   730 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
   731 jump *label251 notEqual *tmp261 false
-    * op sub *tmp263 :moveTo:radius 0.5
   732 ucontrol approach :moveTo:x :moveTo:y *tmp263
   733 label *label250
   734 jump *label249 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1056 label *label348
  1057 label *label317
  1058 label *label318
+ 1059 set *tmp363 100
  1060 sensor *tmp361 .core @titanium
-    * jump *label357 greaterThanEq *tmp361 .targetTitanium
+ 1061 jump *label358 greaterThanEq *tmp361 .targetTitanium
  1062 sensor *tmp364 .core @titanium
  1063 op sub *tmp365 .targetTitanium *tmp364
  1064 op min *tmp363 7 *tmp365
  1065 jump *label358 always
-    * label *label357
-    * set *tmp363 100
  1066 label *label358
  1067 sensor *tmp367 .titaniumDrill @titanium
  1068 jump *label359 greaterThanEq *tmp367 *tmp363
 
  1084 label *label369
  1085 sensor :supplyBase0:coal .core @coal
  1086 sensor :supplyBase0:sand .core @sand
-    * jump *label370 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp382 @coal
+ 1087 set :mineOre.1:ore @sand
+ 1088 jump *label371 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1089 set :mineOre.1:ore @coal
  1090 jump *label371 always
-    * label *label370
-    * set *tmp382 @sand
  1091 label *label371
-    * set :mineOre.1:ore *tmp382
  1092 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1093 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
  1094 label *label372
 
  1128 label *label385
  1129 sensor :supplyBase0:coal.1 .core @coal
  1130 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label386 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp395 @coal
+ 1131 set :mineOre.1:ore @sand
+ 1132 jump *label387 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1133 set :mineOre.1:ore @coal
  1134 jump *label387 always
-    * label *label386
-    * set *tmp395 @sand
  1135 label *label387
-    * set :mineOre.1:ore *tmp395
  1136 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1137 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
  1138 label *label388

Modifications by Unroll iteration loop at CoreBuilder.mnd:254:5 (-2 instructions):
 
  1227 end
  1228 label *label24
  1229 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp422 *label420
-    * jump *label417 always
-    * multilabel *label420 (m:marker26)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp422 *label421
-    * jump *label417 always
-    * multilabel *label421 (m:marker26)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp422 *label422
-    * jump *label417 always
-    * multilabel *label422 (m:marker26)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp422 *label423
-    * jump *label417 always
-    * multilabel *label423 (m:marker26)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp422 *label424
-    * jump *label417 always
-    * multilabel *label424 (m:marker26)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp422 *label425
-    * label *label417
-    * op sign *tmp423 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label418
-    * multijump *tmp422 0 0 (m:marker26)
-    * multilabel *label425 (m:marker26)
-    * label *label419
+ 1230 set :meetTarget:t :meetTarget:copper
+ 1231 label *label493
+ 1232 op sign *tmp423 :meetTarget:t
+ 1233 op add :meetTarget:count :meetTarget:count *tmp423
+ 1234 label *label494
+ 1235 set :meetTarget:t :meetTarget:lead
+ 1236 label *label497
+ 1237 op sign *tmp423 :meetTarget:t
+ 1238 op add :meetTarget:count :meetTarget:count *tmp423
+ 1239 label *label498
+ 1240 set :meetTarget:t :meetTarget:graphite
+ 1241 label *label501
+ 1242 op sign *tmp423 :meetTarget:t
+ 1243 op add :meetTarget:count :meetTarget:count *tmp423
+ 1244 label *label502
+ 1245 set :meetTarget:t :meetTarget:silicon
+ 1246 label *label505
+ 1247 op sign *tmp423 :meetTarget:t
+ 1248 op add :meetTarget:count :meetTarget:count *tmp423
+ 1249 label *label506
+ 1250 set :meetTarget:t :meetTarget:titanium
+ 1251 label *label509
+ 1252 op sign *tmp423 :meetTarget:t
+ 1253 op add :meetTarget:count :meetTarget:count *tmp423
+ 1254 label *label510
+ 1255 set :meetTarget:t :meetTarget:metaglass
+ 1256 label *label513
+ 1257 op sign *tmp423 :meetTarget:t
+ 1258 op add :meetTarget:count :meetTarget:count *tmp423
+ 1259 label *label514
+ 1260 label *label419
  1261 write :meetTarget:count .display ".totalTargets"
  1262 write :meetTarget:block .display ".nextBlock"
  1263 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1229 set :meetTarget:count 0
  1230 set :meetTarget:t :meetTarget:copper
  1231 label *label493
-    * op sign *tmp423 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp423
+ 1232 op sign *tmp423 :meetTarget:copper
+ 1233 op add :meetTarget:count 0 *tmp423
  1234 label *label494
  1235 set :meetTarget:t :meetTarget:lead
  1236 label *label497
-    * op sign *tmp423 :meetTarget:t
+ 1237 op sign *tmp423 :meetTarget:lead
  1238 op add :meetTarget:count :meetTarget:count *tmp423
  1239 label *label498
  1240 set :meetTarget:t :meetTarget:graphite
  1241 label *label501
-    * op sign *tmp423 :meetTarget:t
+ 1242 op sign *tmp423 :meetTarget:graphite
  1243 op add :meetTarget:count :meetTarget:count *tmp423
  1244 label *label502
  1245 set :meetTarget:t :meetTarget:silicon
  1246 label *label505
-    * op sign *tmp423 :meetTarget:t
+ 1247 op sign *tmp423 :meetTarget:silicon
  1248 op add :meetTarget:count :meetTarget:count *tmp423
  1249 label *label506
  1250 set :meetTarget:t :meetTarget:titanium
  1251 label *label509
-    * op sign *tmp423 :meetTarget:t
+ 1252 op sign *tmp423 :meetTarget:titanium
  1253 op add :meetTarget:count :meetTarget:count *tmp423
  1254 label *label510
  1255 set :meetTarget:t :meetTarget:metaglass
  1256 label *label513
-    * op sign *tmp423 :meetTarget:t
+ 1257 op sign *tmp423 :meetTarget:metaglass
  1258 op add :meetTarget:count :meetTarget:count *tmp423
  1259 label *label514
  1260 label *label419

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1226 return :targetMet*retaddr
  1227 end
  1228 label *label24
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1229 label *label493
  1230 op sign *tmp423 :meetTarget:copper
  1231 op add :meetTarget:count 0 *tmp423
  1232 label *label494
-    * set :meetTarget:t :meetTarget:lead
  1233 label *label497
  1234 op sign *tmp423 :meetTarget:lead
  1235 op add :meetTarget:count :meetTarget:count *tmp423
  1236 label *label498
-    * set :meetTarget:t :meetTarget:graphite
  1237 label *label501
  1238 op sign *tmp423 :meetTarget:graphite
  1239 op add :meetTarget:count :meetTarget:count *tmp423
  1240 label *label502
-    * set :meetTarget:t :meetTarget:silicon
  1241 label *label505
  1242 op sign *tmp423 :meetTarget:silicon
  1243 op add :meetTarget:count :meetTarget:count *tmp423
  1244 label *label506
-    * set :meetTarget:t :meetTarget:titanium
  1245 label *label509
  1246 op sign *tmp423 :meetTarget:titanium
  1247 op add :meetTarget:count :meetTarget:count *tmp423
  1248 label *label510
-    * set :meetTarget:t :meetTarget:metaglass
  1249 label *label513
  1250 op sign *tmp423 :meetTarget:metaglass
  1251 op add :meetTarget:count :meetTarget:count *tmp423

Modifications by Replicate loop condition at Actions.mnd:46:5 (+1 instructions):
 
   729 label *label249
   730 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
   731 jump *label251 notEqual *tmp261 false
+  732 label *label518
   733 ucontrol approach :moveTo:x :moveTo:y *tmp263
   734 label *label250
-    * jump *label249 always
+  735 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
+  736 jump *label518 equal *tmp261 false
   737 label *label251
   738 label *label247
   739 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:91:9 (+1 instructions):
 
   801 label *label271
   802 sensor *tmp281 @unit @firstItem
   803 jump *label273 equal *tmp281 null
+  804 label *label519
   805 ucontrol itemDrop @air 1000
   806 label *label272
-    * jump *label271 always
+  807 sensor *tmp281 @unit @firstItem
+  808 jump *label519 notEqual *tmp281 null
   809 label *label273
   810 label *label266
   811 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at Actions.mnd:68:5 (+1 instructions):
 
   846 label *label286
   847 sensor *tmp291 @unit @firstItem
   848 jump *label288 equal *tmp291 null
+  849 label *label520
   850 ucontrol itemDrop @air 1000
   851 label *label287
-    * jump *label286 always
+  852 sensor *tmp291 @unit @firstItem
+  853 jump *label520 notEqual *tmp291 null
   854 label *label288
   855 label *label285
   856 label *label283

Modifications by Replicate loop condition at Actions.mnd:68:5 (+1 instructions):
 
   918 label *label306
   919 sensor *tmp307 @unit @firstItem
   920 jump *label308 equal *tmp307 null
+  921 label *label521
   922 ucontrol itemDrop @air 1000
   923 label *label307
-    * jump *label306 always
+  924 sensor *tmp307 @unit @firstItem
+  925 jump *label521 notEqual *tmp307 null
   926 label *label308
   927 label *label305
   928 label *label309

Modifications by Replicate loop condition at CoreBuilder.mnd:277:5 (+2 instructions):
 
  1290 call *label23 *invalid :targetMet*retval (m:*label429) (h:*label429)
  1291 label *label429
  1292 jump *label428 notEqual :targetMet*retval false
+ 1293 label *label522
  1294 setaddr :supplyBase*retaddr *label430 (h:*label430)
  1295 call *label22 *invalid :supplyBase*retval (m:*label430) (h:*label430)
  1296 label *label430
  1297 label *label427
-    * jump *label426 always
+ 1298 setaddr :targetMet*retaddr *label523 (h:*label523)
+ 1299 call *label23 *invalid :targetMet*retval (m:*label523) (h:*label523)
+ 1300 label *label523
+ 1301 jump *label522 equal :targetMet*retval false
  1302 label *label428
  1303 label *label416
  1304 return :meetTarget*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:523:5 (+1 instructions):
 
   617 label *label210
   618 read *tmp74 *tmp154 ".polys"
   619 jump *label212 greaterThanEq *tmp74 3
+  620 label *label524
   621 setaddr :supplyBase*retaddr *label213 (h:*label213)
   622 call *label22 *invalid :supplyBase*retval (m:*label213) (h:*label213)
   623 label *label213
   624 label *label211
-    * jump *label210 always
+  625 read *tmp74 *tmp154 ".polys"
+  626 jump *label524 lessThan *tmp74 3
   627 label *label212
   628 write 8 *tmp154 ".flareTarget"
   629 write 6 *tmp154 ".polyTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:529:5 (+1 instructions):
 
   630 label *label214
   631 read *tmp72 *tmp154 ".flares"
   632 jump *label216 greaterThanEq *tmp72 2
+  633 label *label525
   634 setaddr :supplyBase*retaddr *label217 (h:*label217)
   635 call *label22 *invalid :supplyBase*retval (m:*label217) (h:*label217)
   636 label *label217
   637 label *label215
-    * jump *label214 always
+  638 read *tmp72 *tmp154 ".flares"
+  639 jump *label525 lessThan *tmp72 2
   640 label *label216
   641 ubind @flare
   642 write @ore-titanium processor1 ".nextBlock"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   197 setaddr :buildBlockAt*retaddr *label81 (h:*label81)
   198 call *label27 *invalid :buildBlockAt*retval (m:*label81) (h:*label81)
   199 label *label81
-    * jump *label74 always
   200 label *label74
   201 set .titaniumDrill :buildBlockAt*retval
   202 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1073 sensor *tmp364 .core @titanium
  1074 op sub *tmp365 .targetTitanium *tmp364
  1075 op min *tmp363 7 *tmp365
-    * jump *label358 always
  1076 label *label358
  1077 sensor *tmp367 .titaniumDrill @titanium
  1078 jump *label359 greaterThanEq *tmp367 *tmp363
 
  1097 set :mineOre.1:ore @sand
  1098 jump *label371 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1099 set :mineOre.1:ore @coal
-    * jump *label371 always
  1100 label *label371
  1101 setaddr :mineOre.1*retaddr *label372 (h:*label372)
  1102 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
 
  1140 set :mineOre.1:ore @sand
  1141 jump *label387 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1142 set :mineOre.1:ore @coal
-    * jump *label387 always
  1143 label *label387
  1144 setaddr :mineOre.1*retaddr *label388 (h:*label388)
  1145 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
 
  1366 call *label26 *invalid :logBlock*retval (m:*label450) (h:*label450)
  1367 label *label450
  1368 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label435 always
  1369 label *label435
  1370 return :buildBlockAt*retaddr
  1371 end
 
  1390 call *label27 *invalid :buildBlockAt*retval (m:*label453) (h:*label453)
  1391 label *label453
  1392 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label451 always
  1393 label *label451
  1394 return :buildBlock*retaddr
  1395 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    67 label *label41
    68 label *label38
    69 set .press *tmp103
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   70 set :buildBlockFromCfg.1:x .coreX
    71 op add :buildBlockFromCfg.1:y .coreY 5
    72 set :buildBlock:block @battery
    73 set :buildBlock:x :buildBlockFromCfg.1:x
 
   301 label *label109
   302 label *label106
   303 op add :buildBlockFromCfg.11:x .coreX -2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  304 set :buildBlockFromCfg.11:y .coreY
   305 set :buildBlock:block @unloader
   306 set :buildBlock:x :buildBlockFromCfg.11:x
   307 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1236 label *label24
  1237 label *label493
  1238 op sign *tmp423 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp423
+ 1239 set :meetTarget:count *tmp423
  1240 label *label494
  1241 label *label497
  1242 op sign *tmp423 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1235 end
  1236 label *label24
  1237 label *label493
-    * op sign *tmp423 :meetTarget:copper
-    * set :meetTarget:count *tmp423
+ 1238 op sign :meetTarget:count :meetTarget:copper
  1239 label *label494
  1240 label *label497
  1241 op sign *tmp423 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    70 set :buildBlockFromCfg.1:x .coreX
    71 op add :buildBlockFromCfg.1:y .coreY 5
    72 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   73 set :buildBlock:x .coreX
    74 set :buildBlock:y :buildBlockFromCfg.1:y
    75 set :buildBlock:copper 5
    76 set :buildBlock:lead 20
 
   101 label *label50
   102 op add :buildBlockFromCfg.3:y .coreY 4
   103 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  104 set :buildBlock:x .coreX
   105 set :buildBlock:y :buildBlockFromCfg.3:y
   106 set :buildBlock:copper 25
   107 set :buildBlock:lead 15
 
   201 set .titaniumDrill :buildBlockAt*retval
   202 write :buildBlockAt*retval processor1 ".titaniumDrill"
   203 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  204 set :buildBlock:x .coreX
   205 set :buildBlock:y :buildBlockFromCfg.5:y
   206 set :buildBlock:copper 0
   207 set :buildBlock:lead 0
 
   239 label *label88
   240 op add :buildBlockFromCfg.8:y .coreY 3
   241 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  242 set :buildBlock:x .coreX
   243 set :buildBlock:y :buildBlockFromCfg.8:y
   244 set :buildBlock:copper 4
   245 setaddr :buildBlock*retaddr *label99 (h:*label99)
 
   304 set :buildBlockFromCfg.11:y .coreY
   305 set :buildBlock:block @unloader
   306 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  307 set :buildBlock:y .coreY
   308 set :buildBlock:copper 0
   309 set :buildBlock:lead 0
   310 set :buildBlock:silicon 30
 
   394 label *label131
   395 set :buildBlock:block @inverted-sorter
   396 set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  397 set :buildBlock:y .coreY
   398 set :buildBlock:copper 2
   399 set :buildBlock:lead 2
   400 set :buildBlock:silicon 0
 
   446 label *label149
   447 set :buildBlock:block @overflow-gate
   448 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  449 set :buildBlock:y .coreY
   450 set :buildBlock:copper 4
   451 set :buildBlock:lead 2
   452 set :buildBlock:graphite 0
 
   463 label *label155
   464 op add :buildBlockFromCfg.18:x .coreX -4
   465 set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  466 set :buildBlock:y .coreY
   467 setaddr :buildBlock*retaddr *label166 (h:*label166)
   468 label *label162
   469 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
 
   555 label *label185
   556 write *tmp210 *tmp154 ".payloadRouter"
   557 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  558 set :buildBlock:x .coreX
   559 set :buildBlock:y :buildBlockFromCfg.12:y
   560 set :buildBlock:copper 0
   561 set :buildBlock:graphite 0
 
   572 label *label194
   573 label *label191
   574 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  575 set :buildBlock:x .coreX
   576 set :buildBlock:y :buildBlockFromCfg.10:y
   577 set :buildBlock:copper 4
   578 set :buildBlock:lead 2
 
   589 label *label200
   590 label *label197
   591 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  592 set :buildBlock:x .coreX
   593 set :buildBlock:y :buildBlockFromCfg.22:y
   594 set :buildBlock:copper 200
   595 set :buildBlock:lead 120

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    67 label *label41
    68 label *label38
    69 set .press *tmp103
-    * set :buildBlockFromCfg.1:x .coreX
    70 op add :buildBlockFromCfg.1:y .coreY 5
    71 set :buildBlock:block @battery
    72 set :buildBlock:x .coreX
 
   300 label *label109
   301 label *label106
   302 op add :buildBlockFromCfg.11:x .coreX -2
-    * set :buildBlockFromCfg.11:y .coreY
   303 set :buildBlock:block @unloader
   304 set :buildBlock:x :buildBlockFromCfg.11:x
   305 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    15 ubind @poly
    16 set .builder @unit
    17 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label33
    18 jump *label32 equal .core null
-    * label *label34
    19 set .display processor1
    20 set .flareController processor3
    21 write .core processor5 ":startPolyController:aCore"
 
    54 set :buildBlock:rotation 0
    55 set :buildBlock:config null
    56 setaddr :buildBlock*retaddr *label43 (h:*label43)
-    * label *label39
    57 call *label28 *invalid :buildBlock*retval (m:*label43) (h:*label43)
    58 label *label43
    59 set *tmp103 :buildBlock*retval
    60 jump *label38 always
-    * label *label40
    61 multijump *tmp104 0 0 (m:marker0)
    62 multilabel *label42 (m:marker0)
-    * label *label41
    63 label *label38
    64 set .press *tmp103
    65 op add :buildBlockFromCfg.1:y .coreY 5
 
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
    71 setaddr :buildBlock*retaddr *label49 (h:*label49)
-    * label *label45
    72 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    73 label *label49
    74 set *tmp107 :buildBlock*retval
    75 jump *label44 always
-    * label *label46
    76 multijump *tmp108 0 0 (m:marker1)
    77 multilabel *label48 (m:marker1)
-    * label *label47
    78 label *label44
    79 set .battery *tmp107
    80 op add :buildBlockFromCfg.2:x .coreX 1
    81 set :buildBlock:x :buildBlockFromCfg.2:x
    82 set :buildBlock:y :buildBlockFromCfg.1:y
    83 setaddr :buildBlock*retaddr *label55 (h:*label55)
-    * label *label51
    84 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    85 label *label55
    86 jump *label50 always
-    * label *label52
    87 multijump *tmp112 0 0 (m:marker2)
    88 multilabel *label54 (m:marker2)
-    * label *label53
    89 label *label50
    90 op add :buildBlockFromCfg.3:y .coreY 4
    91 set :buildBlock:block @combustion-generator
 
    94 set :buildBlock:copper 25
    95 set :buildBlock:lead 15
    96 setaddr :buildBlock*retaddr *label61 (h:*label61)
-    * label *label57
    97 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
    98 label *label61
    99 set *tmp115 :buildBlock*retval
   100 jump *label56 always
-    * label *label58
   101 multijump *tmp116 0 0 (m:marker3)
   102 multilabel *label60 (m:marker3)
-    * label *label59
   103 label *label56
   104 set .generator *tmp115
   105 set .powerTarget 400
 
   111 set :buildBlock:copper 30
   112 set :buildBlock:lead 25
   113 setaddr :buildBlock*retaddr *label67 (h:*label67)
-    * label *label63
   114 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   115 label *label67
   116 set *tmp119 :buildBlock*retval
   117 jump *label62 always
-    * label *label64
   118 multijump *tmp120 0 0 (m:marker4)
   119 multilabel *label66 (m:marker4)
-    * label *label65
   120 label *label62
   121 set .smelter *tmp119
   122 op add :buildBlockFromCfg.5:y .coreY 2
 
   126 set :buildBlock:copper 2
   127 set :buildBlock:lead 2
   128 setaddr :buildBlock*retaddr *label73 (h:*label73)
-    * label *label69
   129 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   130 label *label73
   131 jump *label68 always
-    * label *label70
   132 multijump *tmp124 0 0 (m:marker5)
   133 multilabel *label72 (m:marker5)
-    * label *label71
   134 label *label68
   135 set :meetTarget:block @pneumatic-drill
   136 set :meetTarget:copper 18
 
   142 setaddr :meetTarget*retaddr *label76 (h:*label76)
   143 call *label24 *invalid :meetTarget*retval (m:*label76) (h:*label76)
   144 label *label76
-    * label *label75
   145 write @titanium processor1 ".nextBlock"
   146 write .coreX processor4 ":findDrillLocation:x"
   147 write .coreY processor4 ":findDrillLocation:y"
 
   162 jump *label78 notEqual :buildTitaniumDrill:result false
   163 set .ERROR "Cannot locate spot for titanium drill"
   164 stop
-    * label *label80
   165 label *label78
-    * label *label79
   166 write @pneumatic-drill processor1 ".nextBlock"
   167 set :buildBlockAt:block @pneumatic-drill
   168 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   173 setaddr :buildBlockAt*retaddr *label81 (h:*label81)
   174 call *label27 *invalid :buildBlockAt*retval (m:*label81) (h:*label81)
   175 label *label81
-    * label *label74
   176 set .titaniumDrill :buildBlockAt*retval
   177 write :buildBlockAt*retval processor1 ".titaniumDrill"
   178 set :buildBlock:block @unloader
 
   183 set :buildBlock:silicon 30
   184 set :buildBlock:titanium 25
   185 setaddr :buildBlock*retaddr *label87 (h:*label87)
-    * label *label83
   186 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   187 label *label87
   188 set *tmp142 :buildBlock*retval
   189 jump *label82 always
-    * label *label84
   190 multijump *tmp143 0 0 (m:marker6)
   191 multilabel *label86 (m:marker6)
-    * label *label85
   192 label *label82
   193 set .unloader1 *tmp142
   194 op add :buildBlockFromCfg.7:x .coreX -1
 
   200 set :buildBlock:silicon 0
   201 set :buildBlock:titanium 0
   202 setaddr :buildBlock*retaddr *label93 (h:*label93)
-    * label *label89
   203 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   204 label *label93
   205 jump *label88 always
-    * label *label90
   206 multijump *tmp147 0 0 (m:marker7)
   207 multilabel *label92 (m:marker7)
-    * label *label91
   208 label *label88
   209 op add :buildBlockFromCfg.8:y .coreY 3
   210 set :buildBlock:block @overflow-gate
 
   212 set :buildBlock:y :buildBlockFromCfg.8:y
   213 set :buildBlock:copper 4
   214 setaddr :buildBlock*retaddr *label99 (h:*label99)
-    * label *label95
   215 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   216 label *label99
   217 jump *label94 always
-    * label *label96
   218 multijump *tmp151 0 0 (m:marker8)
   219 multilabel *label98 (m:marker8)
-    * label *label97
   220 label *label94
   221 op add :buildBlockFromCfg.9:x .coreX 3
   222 set :buildBlock:block @micro-processor
 
   226 set :buildBlock:lead 50
   227 set :buildBlock:silicon 50
   228 setaddr :buildBlock*retaddr *label105 (h:*label105)
-    * label *label101
   229 set :buildBlock:config processor2
   230 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)
   231 label *label105
   232 set *tmp154 :buildBlock*retval
   233 jump *label100 always
-    * label *label102
   234 multijump *tmp155 0 0 (m:marker9)
   235 multilabel *label104 (m:marker9)
-    * label *label103
   236 label *label100
   237 set .controller *tmp154
   238 write processor1 *tmp154 ".display"
 
   254 set :buildBlock:silicon 0
   255 set :buildBlock:config null
   256 setaddr :buildBlock*retaddr *label111 (h:*label111)
-    * label *label107
   257 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   258 label *label111
   259 jump *label106 always
-    * label *label108
   260 multijump *tmp159 0 0 (m:marker10)
   261 multilabel *label110 (m:marker10)
-    * label *label109
   262 label *label106
   263 op add :buildBlockFromCfg.11:x .coreX -2
   264 set :buildBlock:block @unloader
 
   269 set :buildBlock:silicon 30
   270 set :buildBlock:titanium 25
   271 setaddr :buildBlock*retaddr *label117 (h:*label117)
-    * label *label113
   272 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   273 label *label117
   274 set *tmp162 :buildBlock*retval
   275 jump *label112 always
-    * label *label114
   276 multijump *tmp163 0 0 (m:marker11)
   277 multilabel *label116 (m:marker11)
-    * label *label115
   278 label *label112
   279 write *tmp162 *tmp154 ".unloader2"
   280 op add :buildBlockFromCfg.12:x .coreX -3
 
   289 set :buildBlock:rotation 3
   290 set :buildBlock:config @mono
   291 setaddr :buildBlock*retaddr *label123 (h:*label123)
-    * label *label119
   292 call *label28 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   293 label *label123
   294 set *tmp166 :buildBlock*retval
   295 jump *label118 always
-    * label *label120
   296 multijump *tmp167 0 0 (m:marker12)
   297 multilabel *label122 (m:marker12)
-    * label *label121
   298 label *label118
   299 write *tmp166 *tmp154 ".factory"
   300 write *tmp166 processor1 ".factory"
 
   317 jump *label129 greaterThanEq *tmp170 300
   318 jump *label127 always
   319 label *label129
-    * label *label130
-    * label *label126
   320 read *tmp73 *tmp154 ".monos"
   321 jump *label125 lessThan *tmp73 3
   322 label *label127
 
   334 set :buildBlock:rotation 0
   335 set :buildBlock:config null
   336 setaddr :buildBlock*retaddr *label136 (h:*label136)
-    * label *label132
   337 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   338 label *label136
   339 jump *label131 always
-    * label *label133
   340 multijump *tmp175 0 0 (m:marker13)
   341 multilabel *label135 (m:marker13)
-    * label *label134
   342 label *label131
   343 set :buildBlock:block @inverted-sorter
   344 set :buildBlock:x :buildBlockFromCfg.13:x
 
   348 set :buildBlock:silicon 0
   349 set :buildBlock:titanium 0
   350 setaddr :buildBlock*retaddr *label142 (h:*label142)
-    * label *label138
   351 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   352 label *label142
   353 jump *label137 always
-    * label *label139
   354 multijump *tmp179 0 0 (m:marker14)
   355 multilabel *label141 (m:marker14)
-    * label *label140
   356 label *label137
   357 op add :buildBlockFromCfg.15:x .coreX 2.5
   358 set :buildBlock:block @kiln
 
   362 set :buildBlock:lead 30
   363 set :buildBlock:graphite 30
   364 setaddr :buildBlock*retaddr *label148 (h:*label148)
-    * label *label144
   365 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   366 label *label148
   367 set *tmp182 :buildBlock*retval
   368 jump *label143 always
-    * label *label145
   369 multijump *tmp183 0 0 (m:marker15)
   370 multilabel *label147 (m:marker15)
-    * label *label146
   371 label *label143
   372 write *tmp182 *tmp154 ".kiln"
   373 op add :buildBlockFromCfg.16:x .coreX -4.5
 
   377 set :buildBlock:copper 30
   378 set :buildBlock:metaglass 30
   379 setaddr :buildBlock*retaddr *label154 (h:*label154)
-    * label *label150
   380 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   381 label *label154
   382 jump *label149 always
-    * label *label151
   383 multijump *tmp187 0 0 (m:marker16)
   384 multilabel *label153 (m:marker16)
-    * label *label152
   385 label *label149
   386 set :buildBlock:block @overflow-gate
   387 set :buildBlock:x :buildBlockFromCfg.12:x
 
   391 set :buildBlock:graphite 0
   392 set :buildBlock:metaglass 0
   393 setaddr :buildBlock*retaddr *label160 (h:*label160)
-    * label *label156
   394 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   395 label *label160
   396 jump *label155 always
-    * label *label157
   397 multijump *tmp191 0 0 (m:marker17)
   398 multilabel *label159 (m:marker17)
-    * label *label158
   399 label *label155
   400 op add :buildBlockFromCfg.18:x .coreX -4
   401 set :buildBlock:x :buildBlockFromCfg.18:x
   402 set :buildBlock:y .coreY
   403 setaddr :buildBlock*retaddr *label166 (h:*label166)
-    * label *label162
   404 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   405 label *label166
   406 jump *label161 always
-    * label *label163
   407 multijump *tmp195 0 0 (m:marker18)
   408 multilabel *label165 (m:marker18)
-    * label *label164
   409 label *label161
   410 set :buildBlock:block @steam-generator
   411 set :buildBlock:x :buildBlockFromCfg.16:x
 
   415 set :buildBlock:graphite 25
   416 set :buildBlock:silicon 30
   417 setaddr :buildBlock*retaddr *label172 (h:*label172)
-    * label *label168
   418 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   419 label *label172
   420 set *tmp198 :buildBlock*retval
   421 jump *label167 always
-    * label *label169
   422 multijump *tmp199 0 0 (m:marker19)
   423 multilabel *label171 (m:marker19)
-    * label *label170
   424 label *label167
   425 write *tmp198 *tmp154 ".generator2"
   426 set :buildBlock:block @multi-press
 
   432 set :buildBlock:silicon 25
   433 set :buildBlock:titanium 100
   434 setaddr :buildBlock*retaddr *label178 (h:*label178)
-    * label *label174
   435 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   436 label *label178
   437 set *tmp202 :buildBlock*retval
   438 jump *label173 always
-    * label *label175
   439 multijump *tmp203 0 0 (m:marker20)
   440 multilabel *label177 (m:marker20)
-    * label *label176
   441 label *label173
   442 write *tmp202 *tmp154 ".multipress"
   443 op add :buildBlockFromCfg.21:y .coreY 5.5
 
   451 set :buildBlock:titanium 0
   452 set :buildBlock:metaglass 30
   453 setaddr :buildBlock*retaddr *label184 (h:*label184)
-    * label *label180
   454 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   455 label *label184
   456 jump *label179 always
-    * label *label181
   457 multijump *tmp207 0 0 (m:marker21)
   458 multilabel *label183 (m:marker21)
-    * label *label182
   459 label *label179
   460 set .graphiteSurplus 200
   461 op add :buildBlockFromCfg.22:y .coreY -5
 
   467 set :buildBlock:graphite 15
   468 set :buildBlock:metaglass 0
   469 setaddr :buildBlock*retaddr *label190 (h:*label190)
-    * label *label186
   470 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   471 label *label190
   472 set *tmp210 :buildBlock*retval
   473 jump *label185 always
-    * label *label187
   474 multijump *tmp211 0 0 (m:marker22)
   475 multilabel *label189 (m:marker22)
-    * label *label188
   476 label *label185
   477 write *tmp210 *tmp154 ".payloadRouter"
   478 set :buildBlock:block @unloader
 
   483 set :buildBlock:silicon 30
   484 set :buildBlock:titanium 25
   485 setaddr :buildBlock*retaddr *label196 (h:*label196)
-    * label *label192
   486 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   487 label *label196
   488 jump *label191 always
-    * label *label193
   489 multijump *tmp215 0 0 (m:marker23)
   490 multilabel *label195 (m:marker23)
-    * label *label194
   491 label *label191
   492 set :buildBlock:block @underflow-gate
   493 set :buildBlock:x .coreX
 
   497 set :buildBlock:silicon 0
   498 set :buildBlock:titanium 0
   499 setaddr :buildBlock*retaddr *label202 (h:*label202)
-    * label *label198
   500 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   501 label *label202
   502 jump *label197 always
-    * label *label199
   503 multijump *tmp219 0 0 (m:marker24)
   504 multilabel *label201 (m:marker24)
-    * label *label200
   505 label *label197
   506 set :buildBlock:block @additive-reconstructor
   507 set :buildBlock:x .coreX
 
   510 set :buildBlock:lead 120
   511 set :buildBlock:silicon 90
   512 setaddr :buildBlock*retaddr *label208 (h:*label208)
-    * label *label204
   513 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
   514 label *label208
   515 set *tmp222 :buildBlock*retval
   516 jump *label203 always
-    * label *label205
   517 multijump *tmp223 0 0 (m:marker25)
   518 multilabel *label207 (m:marker25)
-    * label *label206
   519 label *label203
   520 write *tmp222 *tmp154 ".reconstructor"
   521 write *tmp222 processor1 ".reconstructor"
 
   525 set .siliconSurplus 1000
   526 set .metaglassSurplus 200
   527 write 3 *tmp154 ".polyTarget"
-    * label *label210
   528 read *tmp74 *tmp154 ".polys"
   529 jump *label212 greaterThanEq *tmp74 3
   530 label *label524
   531 setaddr :supplyBase*retaddr *label213 (h:*label213)
   532 call *label22 *invalid :supplyBase*retval (m:*label213) (h:*label213)
   533 label *label213
-    * label *label211
   534 read *tmp74 *tmp154 ".polys"
   535 jump *label524 lessThan *tmp74 3
   536 label *label212
   537 write 8 *tmp154 ".flareTarget"
   538 write 6 *tmp154 ".polyTarget"
-    * label *label214
   539 read *tmp72 *tmp154 ".flares"
   540 jump *label216 greaterThanEq *tmp72 2
   541 label *label525
   542 setaddr :supplyBase*retaddr *label217 (h:*label217)
   543 call *label22 *invalid :supplyBase*retval (m:*label217) (h:*label217)
   544 label *label217
-    * label *label215
   545 read *tmp72 *tmp154 ".flares"
   546 jump *label525 lessThan *tmp72 2
   547 label *label216
 
   565 setaddr :supplyBase*retaddr *label222 (h:*label222)
   566 call *label22 *invalid :supplyBase*retval (m:*label222) (h:*label222)
   567 label *label222
-    * label *label220
   568 read *tmp240 processor4 ":findDrillLocation*finished"
   569 jump *label219 equal *tmp240 false
-    * label *label221
   570 write null processor1 ".nextBlock"
   571 ubind @flare
   572 jump *label224 notEqual @unit null
   573 jump *label223 always
   574 label *label224
-    * label *label225
   575 set :findFreeUnit:first_unit @unit
   576 label *label226
   577 sensor *tmp245 @unit @controlled
 
   584 jump *label231 notEqual *tmp248 1
   585 set :findFreeUnit:first_unit @unit
   586 label *label231
-    * label *label232
   587 label *label230
   588 ubind @flare
-    * label *label227
   589 jump *label226 notEqual :findFreeUnit:first_unit @unit
-    * label *label228
   590 label *label223
   591 write .coreX processor4 ":layoutThoriumDrill:x"
   592 write .coreY processor4 ":layoutThoriumDrill:y"
 
   599 setaddr :supplyBase*retaddr *label236 (h:*label236)
   600 call *label22 *invalid :supplyBase*retval (m:*label236) (h:*label236)
   601 label *label236
-    * label *label234
   602 read *tmp257 processor4 ":layoutThoriumDrill*finished"
   603 jump *label233 equal *tmp257 false
-    * label *label235
   604 write 0 processor1 ".totalTargets"
   605 write null processor1 ".nextBlock"
   606 label *label237
   607 setaddr :supplyBase*retaddr *label240 (h:*label240)
   608 call *label22 *invalid :supplyBase*retval (m:*label240) (h:*label240)
   609 label *label240
-    * label *label238
   610 read *tmp72 *tmp154 ".flares"
   611 read *tmp73 *tmp154 ".monos"
   612 op add *tmp259 *tmp72 *tmp73
   613 jump *label237 lessThan *tmp259 16
-    * label *label239
   614 label *label241
   615 setaddr :supplyBase*retaddr *label244 (h:*label244)
   616 call *label22 *invalid :supplyBase*retval (m:*label244) (h:*label244)
   617 label *label244
-    * label *label242
   618 jump *label241 always
-    * label *label243
   619 ucontrol stop
   620 set .ERROR "Done"
   621 stop
-    * label *label245
   622 end
   623 label *label6
   624 write "Moving..." .display ".status3"
-    * label *label248
   625 op sub *tmp263 :moveTo:radius 0.5
-    * label *label249
   626 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
   627 jump *label251 notEqual *tmp261 false
   628 label *label518
   629 ucontrol approach :moveTo:x :moveTo:y *tmp263
-    * label *label250
   630 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261
   631 jump *label518 equal *tmp261 false
   632 label *label251
-    * label *label247
   633 return :moveTo*retaddr
   634 end
   635 label *label7
 
   639 setaddr :moveTo*retaddr *label253 (h:*label253)
   640 call *label6 *invalid :moveTo*retval (m:*label253) (h:*label253)
   641 label *label253
-    * label *label252
   642 return :moveTo.1*retaddr
   643 end
   644 label *label8
   645 write "Moving..." .display ".status3"
-    * label *label255
   646 label *label256
   647 sensor *tmp266 @unit @firstItem
   648 jump *label259 equal *tmp266 null
   649 ucontrol itemDrop @air 1000
   650 label *label259
-    * label *label260
   651 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label257
   652 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp269
   653 jump *label256 equal *tmp269 false
-    * label *label258
-    * label *label254
   654 return :moveToEmpty*retaddr
   655 end
   656 label *label9
 
   662 setaddr :moveTo*retaddr *label262 (h:*label262)
   663 call *label6 *invalid :moveTo*retval (m:*label262) (h:*label262)
   664 label *label262
-    * label *label261
   665 return :moveToBlock*retaddr
   666 end
   667 label *label10
   668 write "Depositing..." .display ".status3"
-    * label *label264
   669 sensor *tmp273 @unit @firstItem
   670 jump *label265 notEqual *tmp273 :depositItems:item
   671 set :moveToBlock:block :depositItems:block
 
   676 sensor :depositItems:cap :depositItems:block @itemCapacity
   677 label *label268
   678 ucontrol itemDrop :depositItems:block 30
-    * label *label269
   679 sensor *tmp277 @unit @firstItem
   680 op mul *tmp278 *tmp277 :depositItems:cap
   681 sensor *tmp279 :depositItems:block :depositItems:item
   682 jump *label268 greaterThan *tmp278 *tmp279
-    * label *label270
   683 jump *label266 always
   684 label *label265
-    * label *label271
   685 sensor *tmp281 @unit @firstItem
   686 jump *label273 equal *tmp281 null
   687 label *label519
   688 ucontrol itemDrop @air 1000
-    * label *label272
   689 sensor *tmp281 @unit @firstItem
   690 jump *label519 notEqual *tmp281 null
   691 label *label273
   692 label *label266
   693 write 0 .display ".transportTarget"
   694 write null .display ".transportItem"
-    * label *label274
-    * label *label263
   695 return :depositItems*retaddr
   696 end
   697 label *label11
 
   699 jump *label276 notEqual *tmp283 false
   700 set .ERROR "Cannot locate ore"
   701 stop
-    * label *label278
   702 label *label276
-    * label *label277
-    * label *label275
   703 return :locateOre*retaddr
   704 end
   705 label *label12
   706 op min :mineOre:amount :mineOre:amount 30
   707 write :mineOre:amount .display ".transportTarget"
   708 write :mineOre:ore .display ".transportItem"
-    * label *label280
   709 set :locateOre:ore :mineOre:ore
   710 setaddr :locateOre*retaddr *label281 (h:*label281)
   711 call *label11 *invalid :locateOre*retval (m:*label281) (h:*label281)
 
   719 label *label282
   720 sensor *tmp288 @unit @firstItem
   721 jump *label283 equal *tmp288 :mineOre:ore
-    * label *label286
   722 sensor *tmp291 @unit @firstItem
   723 jump *label288 equal *tmp291 null
   724 label *label520
   725 ucontrol itemDrop @air 1000
-    * label *label287
   726 sensor *tmp291 @unit @firstItem
   727 jump *label520 notEqual *tmp291 null
   728 label *label288
-    * label *label285
   729 label *label283
-    * label *label284
   730 write "Mining..." .display ".status3"
-    * label *label289
   731 op add :mineOre:stop @second 10
   732 label *label290
   733 sensor :mineOre:item @unit @firstItem
 
   737 jump *label293 equal *tmp297 false
   738 jump *label292 always
   739 label *label293
-    * label *label294
   740 ucontrol mine :mineOre:x :mineOre:y
   741 jump *label295 lessThanEq @second :mineOre:stop
   742 jump *label292 always
   743 label *label295
-    * label *label296
-    * label *label291
   744 sensor *tmp301 @unit @totalItems
   745 jump *label290 lessThan *tmp301 :mineOre:amount
   746 label *label292
 
   750 setaddr :depositItems*retaddr *label297 (h:*label297)
   751 call *label10 *invalid :depositItems*retval (m:*label297) (h:*label297)
   752 label *label297
-    * label *label279
   753 return :mineOre*retaddr
   754 end
   755 label *label13
   756 write "Mining " .display ".status2"
   757 write :mineOre.1:ore .display ".item2"
   758 write "core" .display ".block2"
-    * label *label299
   759 set :mineOre:ore :mineOre.1:ore
   760 set :mineOre:amount 30
   761 set :mineOre:block .core
   762 setaddr :mineOre*retaddr *label300 (h:*label300)
   763 call *label12 *invalid :mineOre*retval (m:*label300) (h:*label300)
   764 label *label300
-    * label *label298
   765 return :mineOre.1*retaddr
   766 end
   767 label *label14
   768 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   769 write :transportStatus.2:target .display ".transportTarget"
   770 write :fetchBlock:item .display ".transportItem"
-    * label *label302
   771 write "Fetching " .display ".status2"
   772 write :fetchBlock:item .display ".item2"
   773 write :fetchBlock:block .display ".block2"
-    * label *label303
   774 sensor *tmp305 :fetchBlock:block @x
   775 sensor *tmp306 :fetchBlock:block @y
   776 set :moveToEmpty:x *tmp305
 
   778 setaddr :moveToEmpty*retaddr *label304 (h:*label304)
   779 call *label8 *invalid :moveToEmpty*retval (m:*label304) (h:*label304)
   780 label *label304
-    * label *label306
   781 sensor *tmp307 @unit @firstItem
   782 jump *label308 equal *tmp307 null
   783 label *label521
   784 ucontrol itemDrop @air 1000
-    * label *label307
   785 sensor *tmp307 @unit @firstItem
   786 jump *label521 notEqual *tmp307 null
   787 label *label308
-    * label *label305
   788 label *label309
   789 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   790 sensor :fetchBlock:unitItem @unit @firstItem
 
   794 jump *label312 equal *tmp312 false
   795 ucontrol itemDrop @air 1000
   796 label *label312
-    * label *label313
-    * label *label310
   797 sensor *tmp314 @unit :fetchBlock:item
   798 op lessThan *tmp315 *tmp314 30
   799 sensor *tmp316 :fetchBlock:block :fetchBlock:item
   800 op land *tmp317 *tmp315 *tmp316
   801 jump *label309 notEqual *tmp317 false
-    * label *label311
   802 set :depositItems:block .core
   803 set :depositItems:item :fetchBlock:item
   804 setaddr :depositItems*retaddr *label314 (h:*label314)
   805 call *label10 *invalid :depositItems*retval (m:*label314) (h:*label314)
   806 label *label314
-    * label *label301
   807 return :fetchBlock*retaddr
   808 end
   809 label *label20
 
   814 sensor *tmp323 .press @coal
   815 jump *label321 greaterThanEq *tmp323 5
   816 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label323
   817 write "Supplying " .display ".status2"
   818 write @coal .display ".item2"
   819 write .press .display ".block2"
-    * label *label325
   820 sensor :supplyBlock:blockCapacity .press @itemCapacity
   821 sensor *tmp327 .press @coal
   822 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp327
 
   828 call *label12 *invalid :mineOre*retval (m:*label328) (h:*label328)
   829 label *label328
   830 label *label326
-    * label *label327
-    * label *label324
   831 set :supplyBase0:supplied true
   832 label *label321
-    * label *label322
   833 label *label319
-    * label *label320
   834 sensor *tmp331 .core @silicon
   835 jump *label329 greaterThanEq *tmp331 .targetSilicon
   836 sensor *tmp334 .smelter @coal
   837 jump *label331 greaterThanEq *tmp334 5
   838 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label333
   839 write "Supplying " .display ".status2"
   840 write @coal .display ".item2"
   841 write .smelter .display ".block2"
-    * label *label335
   842 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   843 sensor *tmp338 .smelter @coal
   844 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp338
 
   850 call *label12 *invalid :mineOre*retval (m:*label338) (h:*label338)
   851 label *label338
   852 label *label336
-    * label *label337
-    * label *label334
   853 set :supplyBase0:supplied true
   854 jump *label332 always
   855 label *label331
   856 sensor *tmp342 .smelter @sand
   857 jump *label339 greaterThanEq *tmp342 5
   858 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label341
   859 write "Supplying " .display ".status2"
   860 write @sand .display ".item2"
   861 write .smelter .display ".block2"
-    * label *label343
   862 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   863 sensor *tmp346 .smelter @sand
   864 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp346
 
   870 call *label12 *invalid :mineOre*retval (m:*label346) (h:*label346)
   871 label *label346
   872 label *label344
-    * label *label345
-    * label *label342
   873 set :supplyBase0:supplied true
   874 label *label339
-    * label *label340
   875 label *label332
   876 label *label329
-    * label *label330
   877 sensor *tmp350 .battery @totalPower
   878 jump *label347 greaterThanEq *tmp350 .powerTarget
   879 sensor *tmp353 .generator @coal
   880 jump *label349 greaterThanEq *tmp353 2
   881 write "Goal 4: supplying generator" .display ".status1"
-    * label *label351
   882 write "Supplying " .display ".status2"
   883 write @coal .display ".item2"
   884 write .generator .display ".block2"
-    * label *label353
   885 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   886 sensor *tmp357 .generator @coal
   887 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp357
 
   893 call *label12 *invalid :mineOre*retval (m:*label356) (h:*label356)
   894 label *label356
   895 label *label354
-    * label *label355
-    * label *label352
   896 set :supplyBase0:supplied true
   897 label *label349
-    * label *label350
   898 label *label347
-    * label *label348
   899 label *label317
-    * label *label318
   900 set *tmp363 100
   901 sensor *tmp361 .core @titanium
   902 jump *label358 greaterThanEq *tmp361 .targetTitanium
 
   911 op mul *tmp373 .unloader1 .powerTarget
   912 jump *label363 greaterThanEq *tmp372 *tmp373
   913 write "Goal 5: supplying generator" .display ".status1"
-    * label *label365
   914 set :mineOre.1:ore @coal
   915 setaddr :mineOre.1*retaddr *label366 (h:*label366)
   916 call *label13 *invalid :mineOre.1*retval (m:*label366) (h:*label366)
 
   920 sensor *tmp376 .core @silicon
   921 jump *label367 greaterThanEq *tmp376 .targetSilicon
   922 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label369
   923 sensor :supplyBase0:coal .core @coal
   924 sensor :supplyBase0:sand .core @sand
   925 set :mineOre.1:ore @sand
 
   934 sensor *tmp383 .core @copper
   935 jump *label373 greaterThanEq *tmp383 .targetCopper
   936 write "Goal 7: copper requirement" .display ".status1"
-    * label *label375
   937 set :mineOre.1:ore @copper
   938 setaddr :mineOre.1*retaddr *label376 (h:*label376)
   939 call *label13 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
 
   943 sensor *tmp386 .core @lead
   944 jump *label377 greaterThanEq *tmp386 .targetLead
   945 write "Goal 8: lead requirement" .display ".status1"
-    * label *label379
   946 set :mineOre.1:ore @lead
   947 setaddr :mineOre.1*retaddr *label380 (h:*label380)
   948 call *label13 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
 
   952 sensor *tmp389 .core @metaglass
   953 jump *label381 greaterThanEq *tmp389 .targetMetaglass
   954 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label383
   955 set :mineOre.1:ore @sand
   956 setaddr :mineOre.1*retaddr *label384 (h:*label384)
   957 call *label13 *invalid :mineOre.1*retval (m:*label384) (h:*label384)
 
   959 jump *label382 always
   960 label *label381
   961 write "Goal 10: supplying base" .display ".status1"
-    * label *label385
   962 sensor :supplyBase0:coal.1 .core @coal
   963 sensor :supplyBase0:sand.1 .core @sand
   964 set :mineOre.1:ore @sand
 
   974 label *label368
   975 label *label364
   976 label *label361
-    * label *label362
   977 jump *label360 always
   978 label *label359
   979 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label389
   980 set :fetchBlock:block .titaniumDrill
   981 set :fetchBlock:item @titanium
   982 setaddr :fetchBlock*retaddr *label390 (h:*label390)
   983 call *label14 *invalid :fetchBlock*retval (m:*label390) (h:*label390)
   984 label *label390
   985 label *label360
-    * label *label316
   986 return :supplyBase0*retaddr
   987 end
   988 label *label21
   989 write "Phase 1: supplying base" .display ".status1"
-    * label *label392
   990 set :mineOre.1:ore @coal
   991 setaddr :mineOre.1*retaddr *label393 (h:*label393)
   992 call *label13 *invalid :mineOre.1*retval (m:*label393) (h:*label393)
   993 label *label393
-    * label *label391
   994 return :supplyBase1*retaddr
   995 end
   996 label *label22
 
  1003 write false .flareController ":start*finished"
  1004 write 3 .flareController "@counter"
  1005 label *label397
-    * label *label398
  1006 label *label395
-    * label *label396
  1007 read *tmp73 .controller ".monos"
  1008 jump *label399 lessThanEq *tmp73 3
  1009 setaddr :supplyBase1*retaddr *label401 (h:*label401)
 
  1015 call *label20 *invalid :supplyBase0*retval (m:*label402) (h:*label402)
  1016 label *label402
  1017 label *label400
-    * label *label394
  1018 return :supplyBase*retaddr
  1019 end
  1020 label *label23
 
  1033 set :targetMet*retval true
  1034 jump *label403 always
  1035 label *label414
-    * label *label415
  1036 label *label412
-    * label *label413
  1037 label *label410
-    * label *label411
  1038 label *label408
-    * label *label409
  1039 label *label406
-    * label *label407
  1040 label *label404
-    * label *label405
  1041 set :targetMet*retval false
  1042 jump *label403 always
  1043 label *label403
  1044 return :targetMet*retaddr
  1045 end
  1046 label *label24
-    * label *label493
  1047 op sign :meetTarget:count :meetTarget:copper
-    * label *label494
-    * label *label497
  1048 op sign *tmp423 :meetTarget:lead
  1049 op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label498
-    * label *label501
  1050 op sign *tmp423 :meetTarget:graphite
  1051 op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label502
-    * label *label505
  1052 op sign *tmp423 :meetTarget:silicon
  1053 op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label506
-    * label *label509
  1054 op sign *tmp423 :meetTarget:titanium
  1055 op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label510
-    * label *label513
  1056 op sign *tmp423 :meetTarget:metaglass
  1057 op add :meetTarget:count :meetTarget:count *tmp423
-    * label *label514
-    * label *label419
  1058 write :meetTarget:count .display ".totalTargets"
  1059 write :meetTarget:block .display ".nextBlock"
  1060 write :meetTarget:copper .display ".targetCopper"
 
  1081 op mul *tmp431 *tmp430 20
  1082 op add *tmp432 :meetTarget:silicon *tmp431
  1083 write *tmp432 .controller ".siliconReserve"
-    * label *label426
  1084 setaddr :targetMet*retaddr *label429 (h:*label429)
  1085 call *label23 *invalid :targetMet*retval (m:*label429) (h:*label429)
  1086 label *label429
 
  1089 setaddr :supplyBase*retaddr *label430 (h:*label430)
  1090 call *label22 *invalid :supplyBase*retval (m:*label430) (h:*label430)
  1091 label *label430
-    * label *label427
  1092 setaddr :targetMet*retaddr *label523 (h:*label523)
  1093 call *label23 *invalid :targetMet*retval (m:*label523) (h:*label523)
  1094 label *label523
  1095 jump *label522 equal :targetMet*retval false
  1096 label *label428
-    * label *label416
  1097 return :meetTarget*retaddr
  1098 end
  1099 label *label25
 
  1101 op sub *tmp434 *tmp90 1
  1102 write *tmp434 bank1 511
  1103 op mul :second:result @second TIME_COMPRESS
-    * label *label432
  1104 op floor *tmp438 :second:result
  1105 op mul *tmp439 *tmp438 1000
  1106 op add *tmp440 :log:encodedId *tmp439
  1107 write *tmp440 bank1 *tmp434
-    * label *label431
  1108 return :log*retaddr
  1109 end
  1110 label *label26
 
  1112 setaddr :log*retaddr *label434 (h:*label434)
  1113 call *label25 *invalid :log*retval (m:*label434) (h:*label434)
  1114 label *label434
-    * label *label433
  1115 return :logBlock*retaddr
  1116 end
  1117 label *label27
 
  1121 call *label7 *invalid :moveTo.1*retval (m:*label436) (h:*label436)
  1122 label *label436
  1123 write "Building..." .display ".status3"
-    * label *label437
  1124 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1125 jump *label438 equal :buildBlockAt:building null
  1126 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1127 set :buildBlockAt*retval :buildBlockAt:building
  1128 jump *label435 always
  1129 label *label440
-    * label *label441
  1130 jump *label442 equal :buildBlockAt:skipError false
  1131 set :buildBlockAt*retval null
  1132 jump *label435 always
  1133 label *label442
-    * label *label443
  1134 set .ERROR "Cannot build at ("
  1135 stop
-    * label *label444
  1136 label *label438
-    * label *label439
  1137 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1138 wait 0.25
  1139 label *label445
 
  1142 set :buildBlockAt*retval null
  1143 jump *label435 always
  1144 label *label448
-    * label *label449
-    * label *label446
  1145 jump *label445 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label447
  1146 set :logBlock:block :buildBlockAt:block
  1147 setaddr :logBlock*retaddr *label450 (h:*label450)
  1148 call *label26 *invalid :logBlock*retval (m:*label450) (h:*label450)
 
  1172 call *label27 *invalid :buildBlockAt*retval (m:*label453) (h:*label453)
  1173 label *label453
  1174 set :buildBlock*retval :buildBlockAt*retval
-    * label *label451
  1175 return :buildBlock*retaddr
  1176 end
  1177 label *label30
 
  1182 label *label488
  1183 op add :findUnits:count :findUnits:count 1
  1184 ubind :findUnits:type
-    * label *label489
  1185 jump *label488 notEqual @unit :findUnits:firstUnit
-    * label *label490
  1186 label *label486
-    * label *label487
  1187 set :findUnits*retval :findUnits:count
-    * label *label485
  1188 return :findUnits*retaddr
  1189 end
  1190 label *label31
 
  1202 write null .display ".nextBlock"
  1203 write 0 .controller ".leadReserve"
  1204 write 0 .controller ".siliconReserve"
-    * label *label491
  1205 return :buildUnits*retaddr
  1206 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   314 call *label22 *invalid :supplyBase*retval (m:*label128) (h:*label128)
   315 label *label128
   316 sensor *tmp170 *tmp107 @totalPower
-    * jump *label129 greaterThanEq *tmp170 300
-    * jump *label127 always
+  317 jump *label127 lessThan *tmp170 300
   318 label *label129
   319 read *tmp73 *tmp154 ".monos"
   320 jump *label125 lessThan *tmp73 3
 
   568 jump *label219 equal *tmp240 false
   569 write null processor1 ".nextBlock"
   570 ubind @flare
-    * jump *label224 notEqual @unit null
-    * jump *label223 always
+  571 jump *label223 equal @unit null
   572 label *label224
   573 set :findFreeUnit:first_unit @unit
   574 label *label226
 
   732 op notEqual *tmp295 :mineOre:item null
   733 op notEqual *tmp296 :mineOre:item :mineOre:ore
   734 op land *tmp297 *tmp295 *tmp296
-    * jump *label293 equal *tmp297 false
-    * jump *label292 always
+  735 jump *label292 notEqual *tmp297 false
   736 label *label293
   737 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label295 lessThanEq @second :mineOre:stop
-    * jump *label292 always
+  738 jump *label292 greaterThan @second :mineOre:stop
   739 label *label295
   740 sensor *tmp301 @unit @totalItems
   741 jump *label290 lessThan *tmp301 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   315 label *label128
   316 sensor *tmp170 *tmp107 @totalPower
   317 jump *label127 lessThan *tmp170 300
-    * label *label129
   318 read *tmp73 *tmp154 ".monos"
   319 jump *label125 lessThan *tmp73 3
   320 label *label127
 
   568 write null processor1 ".nextBlock"
   569 ubind @flare
   570 jump *label223 equal @unit null
-    * label *label224
   571 set :findFreeUnit:first_unit @unit
   572 label *label226
   573 sensor *tmp245 @unit @controlled
 
   731 op notEqual *tmp296 :mineOre:item :mineOre:ore
   732 op land *tmp297 *tmp295 *tmp296
   733 jump *label292 notEqual *tmp297 false
-    * label *label293
   734 ucontrol mine :mineOre:x :mineOre:y
   735 jump *label292 greaterThan @second :mineOre:stop
-    * label *label295
   736 sensor *tmp301 @unit @totalItems
   737 jump *label290 lessThan *tmp301 :mineOre:amount
   738 label *label292

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   898 label *label358
   899 sensor *tmp367 .titaniumDrill @titanium
   900 jump *label359 greaterThanEq *tmp367 *tmp363
-    * jump *label361 notEqual :supplyBase0:supplied false
+  901 jump *label360 notEqual :supplyBase0:supplied false
   902 sensor *tmp372 .battery @totalPower
   903 op mul *tmp373 .unloader1 .powerTarget
   904 jump *label363 greaterThanEq *tmp372 *tmp373
 
   907 setaddr :mineOre.1*retaddr *label366 (h:*label366)
   908 call *label13 *invalid :mineOre.1*retval (m:*label366) (h:*label366)
   909 label *label366
-    * jump *label364 always
+  910 return :supplyBase0*retaddr
   911 label *label363
   912 sensor *tmp376 .core @silicon
   913 jump *label367 greaterThanEq *tmp376 .targetSilicon
 
   921 setaddr :mineOre.1*retaddr *label372 (h:*label372)
   922 call *label13 *invalid :mineOre.1*retval (m:*label372) (h:*label372)
   923 label *label372
-    * jump *label368 always
+  924 return :supplyBase0*retaddr
   925 label *label367
   926 sensor *tmp383 .core @copper
   927 jump *label373 greaterThanEq *tmp383 .targetCopper
 
   930 setaddr :mineOre.1*retaddr *label376 (h:*label376)
   931 call *label13 *invalid :mineOre.1*retval (m:*label376) (h:*label376)
   932 label *label376
-    * jump *label374 always
+  933 return :supplyBase0*retaddr
   934 label *label373
   935 sensor *tmp386 .core @lead
   936 jump *label377 greaterThanEq *tmp386 .targetLead
 
   939 setaddr :mineOre.1*retaddr *label380 (h:*label380)
   940 call *label13 *invalid :mineOre.1*retval (m:*label380) (h:*label380)
   941 label *label380
-    * jump *label378 always
+  942 return :supplyBase0*retaddr
   943 label *label377
   944 sensor *tmp389 .core @metaglass
   945 jump *label381 greaterThanEq *tmp389 .targetMetaglass
 
   948 setaddr :mineOre.1*retaddr *label384 (h:*label384)
   949 call *label13 *invalid :mineOre.1*retval (m:*label384) (h:*label384)
   950 label *label384
-    * jump *label382 always
+  951 return :supplyBase0*retaddr
   952 label *label381
   953 write "Goal 10: supplying base" .display ".status1"
   954 sensor :supplyBase0:coal.1 .core @coal
 
   966 label *label368
   967 label *label364
   968 label *label361
-    * jump *label360 always
+  969 return :supplyBase0*retaddr
   970 label *label359
   971 write "Goal 11: Fetching titanium" .display ".status1"
   972 set :fetchBlock:block .titaniumDrill
 
  1001 setaddr :supplyBase1*retaddr *label401 (h:*label401)
  1002 call *label21 *invalid :supplyBase1*retval (m:*label401) (h:*label401)
  1003 label *label401
-    * jump *label400 always
+ 1004 return :supplyBase*retaddr
  1005 label *label399
  1006 setaddr :supplyBase0*retaddr *label402 (h:*label402)
  1007 call *label20 *invalid :supplyBase0*retval (m:*label402) (h:*label402)
 
  1023 sensor *tmp419 .core @metaglass
  1024 jump *label414 lessThan *tmp419 .targetMetaglass
  1025 set :targetMet*retval true
-    * jump *label403 always
+ 1026 return :targetMet*retaddr
  1027 label *label414
  1028 label *label412
  1029 label *label410
 
  1031 label *label406
  1032 label *label404
  1033 set :targetMet*retval false
-    * jump *label403 always
+ 1034 return :targetMet*retaddr
  1035 label *label403
  1036 return :targetMet*retaddr
  1037 end
 
  1117 jump *label438 equal :buildBlockAt:building null
  1118 jump *label440 notEqual :buildBlockAt:type :buildBlockAt:block
  1119 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label435 always
+ 1120 return :buildBlockAt*retaddr
  1121 label *label440
  1122 jump *label442 equal :buildBlockAt:skipError false
  1123 set :buildBlockAt*retval null
-    * jump *label435 always
+ 1124 return :buildBlockAt*retaddr
  1125 label *label442
  1126 set .ERROR "Cannot build at ("
  1127 stop
 
  1132 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1133 jump *label448 notEqual :buildBlockAt:building null
  1134 set :buildBlockAt*retval null
-    * jump *label435 always
+ 1135 return :buildBlockAt*retaddr
  1136 label *label448
  1137 jump *label445 notEqual :buildBlockAt:type :buildBlockAt:block
  1138 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-52 instructions):
 
    58 label *label43
    59 set *tmp103 :buildBlock*retval
    60 jump *label38 always
-    * multijump *tmp104 0 0 (m:marker0)
-    * multilabel *label42 (m:marker0)
    61 label *label38
    62 set .press *tmp103
    63 op add :buildBlockFromCfg.1:y .coreY 5
 
    71 label *label49
    72 set *tmp107 :buildBlock*retval
    73 jump *label44 always
-    * multijump *tmp108 0 0 (m:marker1)
-    * multilabel *label48 (m:marker1)
    74 label *label44
    75 set .battery *tmp107
    76 op add :buildBlockFromCfg.2:x .coreX 1
 
    80 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    81 label *label55
    82 jump *label50 always
-    * multijump *tmp112 0 0 (m:marker2)
-    * multilabel *label54 (m:marker2)
    83 label *label50
    84 op add :buildBlockFromCfg.3:y .coreY 4
    85 set :buildBlock:block @combustion-generator
 
    92 label *label61
    93 set *tmp115 :buildBlock*retval
    94 jump *label56 always
-    * multijump *tmp116 0 0 (m:marker3)
-    * multilabel *label60 (m:marker3)
    95 label *label56
    96 set .generator *tmp115
    97 set .powerTarget 400
 
   107 label *label67
   108 set *tmp119 :buildBlock*retval
   109 jump *label62 always
-    * multijump *tmp120 0 0 (m:marker4)
-    * multilabel *label66 (m:marker4)
   110 label *label62
   111 set .smelter *tmp119
   112 op add :buildBlockFromCfg.5:y .coreY 2
 
   119 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   120 label *label73
   121 jump *label68 always
-    * multijump *tmp124 0 0 (m:marker5)
-    * multilabel *label72 (m:marker5)
   122 label *label68
   123 set :meetTarget:block @pneumatic-drill
   124 set :meetTarget:copper 18
 
   175 label *label87
   176 set *tmp142 :buildBlock*retval
   177 jump *label82 always
-    * multijump *tmp143 0 0 (m:marker6)
-    * multilabel *label86 (m:marker6)
   178 label *label82
   179 set .unloader1 *tmp142
   180 op add :buildBlockFromCfg.7:x .coreX -1
 
   189 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   190 label *label93
   191 jump *label88 always
-    * multijump *tmp147 0 0 (m:marker7)
-    * multilabel *label92 (m:marker7)
   192 label *label88
   193 op add :buildBlockFromCfg.8:y .coreY 3
   194 set :buildBlock:block @overflow-gate
 
   199 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   200 label *label99
   201 jump *label94 always
-    * multijump *tmp151 0 0 (m:marker8)
-    * multilabel *label98 (m:marker8)
   202 label *label94
   203 op add :buildBlockFromCfg.9:x .coreX 3
   204 set :buildBlock:block @micro-processor
 
   213 label *label105
   214 set *tmp154 :buildBlock*retval
   215 jump *label100 always
-    * multijump *tmp155 0 0 (m:marker9)
-    * multilabel *label104 (m:marker9)
   216 label *label100
   217 set .controller *tmp154
   218 write processor1 *tmp154 ".display"
 
   237 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   238 label *label111
   239 jump *label106 always
-    * multijump *tmp159 0 0 (m:marker10)
-    * multilabel *label110 (m:marker10)
   240 label *label106
   241 op add :buildBlockFromCfg.11:x .coreX -2
   242 set :buildBlock:block @unloader
 
   251 label *label117
   252 set *tmp162 :buildBlock*retval
   253 jump *label112 always
-    * multijump *tmp163 0 0 (m:marker11)
-    * multilabel *label116 (m:marker11)
   254 label *label112
   255 write *tmp162 *tmp154 ".unloader2"
   256 op add :buildBlockFromCfg.12:x .coreX -3
 
   269 label *label123
   270 set *tmp166 :buildBlock*retval
   271 jump *label118 always
-    * multijump *tmp167 0 0 (m:marker12)
-    * multilabel *label122 (m:marker12)
   272 label *label118
   273 write *tmp166 *tmp154 ".factory"
   274 write *tmp166 processor1 ".factory"
 
   309 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   310 label *label136
   311 jump *label131 always
-    * multijump *tmp175 0 0 (m:marker13)
-    * multilabel *label135 (m:marker13)
   312 label *label131
   313 set :buildBlock:block @inverted-sorter
   314 set :buildBlock:x :buildBlockFromCfg.13:x
 
   321 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   322 label *label142
   323 jump *label137 always
-    * multijump *tmp179 0 0 (m:marker14)
-    * multilabel *label141 (m:marker14)
   324 label *label137
   325 op add :buildBlockFromCfg.15:x .coreX 2.5
   326 set :buildBlock:block @kiln
 
   334 label *label148
   335 set *tmp182 :buildBlock*retval
   336 jump *label143 always
-    * multijump *tmp183 0 0 (m:marker15)
-    * multilabel *label147 (m:marker15)
   337 label *label143
   338 write *tmp182 *tmp154 ".kiln"
   339 op add :buildBlockFromCfg.16:x .coreX -4.5
 
   346 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   347 label *label154
   348 jump *label149 always
-    * multijump *tmp187 0 0 (m:marker16)
-    * multilabel *label153 (m:marker16)
   349 label *label149
   350 set :buildBlock:block @overflow-gate
   351 set :buildBlock:x :buildBlockFromCfg.12:x
 
   358 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   359 label *label160
   360 jump *label155 always
-    * multijump *tmp191 0 0 (m:marker17)
-    * multilabel *label159 (m:marker17)
   361 label *label155
   362 op add :buildBlockFromCfg.18:x .coreX -4
   363 set :buildBlock:x :buildBlockFromCfg.18:x
 
   366 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   367 label *label166
   368 jump *label161 always
-    * multijump *tmp195 0 0 (m:marker18)
-    * multilabel *label165 (m:marker18)
   369 label *label161
   370 set :buildBlock:block @steam-generator
   371 set :buildBlock:x :buildBlockFromCfg.16:x
 
   379 label *label172
   380 set *tmp198 :buildBlock*retval
   381 jump *label167 always
-    * multijump *tmp199 0 0 (m:marker19)
-    * multilabel *label171 (m:marker19)
   382 label *label167
   383 write *tmp198 *tmp154 ".generator2"
   384 set :buildBlock:block @multi-press
 
   394 label *label178
   395 set *tmp202 :buildBlock*retval
   396 jump *label173 always
-    * multijump *tmp203 0 0 (m:marker20)
-    * multilabel *label177 (m:marker20)
   397 label *label173
   398 write *tmp202 *tmp154 ".multipress"
   399 op add :buildBlockFromCfg.21:y .coreY 5.5
 
   410 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   411 label *label184
   412 jump *label179 always
-    * multijump *tmp207 0 0 (m:marker21)
-    * multilabel *label183 (m:marker21)
   413 label *label179
   414 set .graphiteSurplus 200
   415 op add :buildBlockFromCfg.22:y .coreY -5
 
   425 label *label190
   426 set *tmp210 :buildBlock*retval
   427 jump *label185 always
-    * multijump *tmp211 0 0 (m:marker22)
-    * multilabel *label189 (m:marker22)
   428 label *label185
   429 write *tmp210 *tmp154 ".payloadRouter"
   430 set :buildBlock:block @unloader
 
   438 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   439 label *label196
   440 jump *label191 always
-    * multijump *tmp215 0 0 (m:marker23)
-    * multilabel *label195 (m:marker23)
   441 label *label191
   442 set :buildBlock:block @underflow-gate
   443 set :buildBlock:x .coreX
 
   450 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   451 label *label202
   452 jump *label197 always
-    * multijump *tmp219 0 0 (m:marker24)
-    * multilabel *label201 (m:marker24)
   453 label *label197
   454 set :buildBlock:block @additive-reconstructor
   455 set :buildBlock:x .coreX
 
   462 label *label208
   463 set *tmp222 :buildBlock*retval
   464 jump *label203 always
-    * multijump *tmp223 0 0 (m:marker25)
-    * multilabel *label207 (m:marker25)
   465 label *label203
   466 write *tmp222 *tmp154 ".reconstructor"
   467 write *tmp222 processor1 ".reconstructor"
 
   522 jump *label229 notEqual *tmp245 0
   523 ucontrol flag 0
   524 jump *label223 always
-    * jump *label230 always
   525 label *label229
   526 sensor *tmp248 :findFreeUnit:first_unit @dead
   527 jump *label231 notEqual *tmp248 1
 
   559 call *label22 *invalid :supplyBase*retval (m:*label244) (h:*label244)
   560 label *label244
   561 jump *label241 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   562 label *label6
   563 write "Moving..." .display ".status3"
   564 op sub *tmp263 :moveTo:radius 0.5
 
   570 jump *label518 equal *tmp261 false
   571 label *label251
   572 return :moveTo*retaddr
-    * end
   573 label *label7
   574 set :moveTo:x :moveTo.1:x
   575 set :moveTo:y :moveTo.1:y
 
   578 call *label6 *invalid :moveTo*retval (m:*label253) (h:*label253)
   579 label *label253
   580 return :moveTo.1*retaddr
-    * end
   581 label *label8
   582 write "Moving..." .display ".status3"
   583 label *label256
 
   589 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp269
   590 jump *label256 equal *tmp269 false
   591 return :moveToEmpty*retaddr
-    * end
   592 label *label9
   593 sensor *tmp271 :moveToBlock:block @x
   594 sensor *tmp272 :moveToBlock:block @y
 
   599 call *label6 *invalid :moveTo*retval (m:*label262) (h:*label262)
   600 label *label262
   601 return :moveToBlock*retaddr
-    * end
   602 label *label10
   603 write "Depositing..." .display ".status3"
   604 sensor *tmp273 @unit @firstItem
 
   628 write 0 .display ".transportTarget"
   629 write null .display ".transportItem"
   630 return :depositItems*retaddr
-    * end
   631 label *label11
   632 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp283 0
   633 jump *label276 notEqual *tmp283 false
 
   635 stop
   636 label *label276
   637 return :locateOre*retaddr
-    * end
   638 label *label12
   639 op min :mineOre:amount :mineOre:amount 30
   640 write :mineOre:amount .display ".transportTarget"
 
   680 call *label10 *invalid :depositItems*retval (m:*label297) (h:*label297)
   681 label *label297
   682 return :mineOre*retaddr
-    * end
   683 label *label13
   684 write "Mining " .display ".status2"
   685 write :mineOre.1:ore .display ".item2"
 
   691 call *label12 *invalid :mineOre*retval (m:*label300) (h:*label300)
   692 label *label300
   693 return :mineOre.1*retaddr
-    * end
   694 label *label14
   695 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   696 write :transportStatus.2:target .display ".transportTarget"
 
   732 call *label10 *invalid :depositItems*retval (m:*label314) (h:*label314)
   733 label *label314
   734 return :fetchBlock*retaddr
-    * end
   735 label *label20
   736 set :supplyBase0:supplied false
   737 jump *label317 notEqual .unloader1 null
 
   894 setaddr :mineOre.1*retaddr *label388 (h:*label388)
   895 call *label13 *invalid :mineOre.1*retval (m:*label388) (h:*label388)
   896 label *label388
-    * label *label382
-    * label *label378
-    * label *label374
-    * label *label368
-    * label *label364
-    * label *label361
   897 return :supplyBase0*retaddr
   898 label *label359
   899 write "Goal 11: Fetching titanium" .display ".status1"
 
   904 label *label390
   905 label *label360
   906 return :supplyBase0*retaddr
-    * end
   907 label *label21
   908 write "Phase 1: supplying base" .display ".status1"
   909 set :mineOre.1:ore @coal
 
   911 call *label13 *invalid :mineOre.1*retval (m:*label393) (h:*label393)
   912 label *label393
   913 return :supplyBase1*retaddr
-    * end
   914 label *label22
   915 jump *label395 notEqual .flareControllerStarted false
   916 read *tmp72 .controller ".flares"
 
   932 setaddr :supplyBase0*retaddr *label402 (h:*label402)
   933 call *label20 *invalid :supplyBase0*retval (m:*label402) (h:*label402)
   934 label *label402
-    * label *label400
   935 return :supplyBase*retaddr
-    * end
   936 label *label23
   937 sensor *tmp404 .core @copper
   938 jump *label404 lessThan *tmp404 .targetCopper
 
   956 label *label404
   957 set :targetMet*retval false
   958 return :targetMet*retaddr
-    * label *label403
-    * return :targetMet*retaddr
-    * end
   959 label *label24
   960 op sign :meetTarget:count :meetTarget:copper
   961 op sign *tmp423 :meetTarget:lead
 
  1008 jump *label522 equal :targetMet*retval false
  1009 label *label428
  1010 return :meetTarget*retaddr
-    * end
  1011 label *label25
  1012 read *tmp90 bank1 511
  1013 op sub *tmp434 *tmp90 1
 
  1018 op add *tmp440 :log:encodedId *tmp439
  1019 write *tmp440 bank1 *tmp434
  1020 return :log*retaddr
-    * end
  1021 label *label26
  1022 sensor :log:encodedId :logBlock:block @id
  1023 setaddr :log*retaddr *label434 (h:*label434)
  1024 call *label25 *invalid :log*retval (m:*label434) (h:*label434)
  1025 label *label434
  1026 return :logBlock*retaddr
-    * end
  1027 label *label27
  1028 set :moveTo.1:x :buildBlockAt:x
  1029 set :moveTo.1:y :buildBlockAt:y
 
  1058 call *label26 *invalid :logBlock*retval (m:*label450) (h:*label450)
  1059 label *label450
  1060 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label435
  1061 return :buildBlockAt*retaddr
-    * end
  1062 label *label28
  1063 set :meetTarget:block :buildBlock:block
  1064 set :meetTarget:copper :buildBlock:copper
 
  1081 label *label453
  1082 set :buildBlock*retval :buildBlockAt*retval
  1083 return :buildBlock*retaddr
-    * end
  1084 label *label30
  1085 set :findUnits:count 0
  1086 ubind :findUnits:type
 
  1093 label *label486
  1094 set :findUnits*retval :findUnits:count
  1095 return :findUnits*retaddr
-    * end
  1096 label *label31
  1097 set :meetTarget:block 0
  1098 set :meetTarget:copper 0
 
  1109 write 0 .controller ".leadReserve"
  1110 write 0 .controller ".siliconReserve"
  1111 return :buildUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   527 jump *label231 notEqual *tmp248 1
   528 set :findFreeUnit:first_unit @unit
   529 label *label231
-    * label *label230
   530 ubind @flare
   531 jump *label226 notEqual :findFreeUnit:first_unit @unit
   532 label *label223

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-26 instructions):
 
    57 call *label28 *invalid :buildBlock*retval (m:*label43) (h:*label43)
    58 label *label43
    59 set *tmp103 :buildBlock*retval
-    * jump *label38 always
    60 label *label38
    61 set .press *tmp103
    62 op add :buildBlockFromCfg.1:y .coreY 5
 
    69 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    70 label *label49
    71 set *tmp107 :buildBlock*retval
-    * jump *label44 always
    72 label *label44
    73 set .battery *tmp107
    74 op add :buildBlockFromCfg.2:x .coreX 1
 
    77 setaddr :buildBlock*retaddr *label55 (h:*label55)
    78 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    79 label *label55
-    * jump *label50 always
    80 label *label50
    81 op add :buildBlockFromCfg.3:y .coreY 4
    82 set :buildBlock:block @combustion-generator
 
    88 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
    89 label *label61
    90 set *tmp115 :buildBlock*retval
-    * jump *label56 always
    91 label *label56
    92 set .generator *tmp115
    93 set .powerTarget 400
 
   102 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
   103 label *label67
   104 set *tmp119 :buildBlock*retval
-    * jump *label62 always
   105 label *label62
   106 set .smelter *tmp119
   107 op add :buildBlockFromCfg.5:y .coreY 2
 
   113 setaddr :buildBlock*retaddr *label73 (h:*label73)
   114 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   115 label *label73
-    * jump *label68 always
   116 label *label68
   117 set :meetTarget:block @pneumatic-drill
   118 set :meetTarget:copper 18
 
   168 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   169 label *label87
   170 set *tmp142 :buildBlock*retval
-    * jump *label82 always
   171 label *label82
   172 set .unloader1 *tmp142
   173 op add :buildBlockFromCfg.7:x .coreX -1
 
   181 setaddr :buildBlock*retaddr *label93 (h:*label93)
   182 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   183 label *label93
-    * jump *label88 always
   184 label *label88
   185 op add :buildBlockFromCfg.8:y .coreY 3
   186 set :buildBlock:block @overflow-gate
 
   190 setaddr :buildBlock*retaddr *label99 (h:*label99)
   191 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   192 label *label99
-    * jump *label94 always
   193 label *label94
   194 op add :buildBlockFromCfg.9:x .coreX 3
   195 set :buildBlock:block @micro-processor
 
   203 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)
   204 label *label105
   205 set *tmp154 :buildBlock*retval
-    * jump *label100 always
   206 label *label100
   207 set .controller *tmp154
   208 write processor1 *tmp154 ".display"
 
   226 setaddr :buildBlock*retaddr *label111 (h:*label111)
   227 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   228 label *label111
-    * jump *label106 always
   229 label *label106
   230 op add :buildBlockFromCfg.11:x .coreX -2
   231 set :buildBlock:block @unloader
 
   239 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   240 label *label117
   241 set *tmp162 :buildBlock*retval
-    * jump *label112 always
   242 label *label112
   243 write *tmp162 *tmp154 ".unloader2"
   244 op add :buildBlockFromCfg.12:x .coreX -3
 
   256 call *label28 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   257 label *label123
   258 set *tmp166 :buildBlock*retval
-    * jump *label118 always
   259 label *label118
   260 write *tmp166 *tmp154 ".factory"
   261 write *tmp166 processor1 ".factory"
 
   295 setaddr :buildBlock*retaddr *label136 (h:*label136)
   296 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   297 label *label136
-    * jump *label131 always
   298 label *label131
   299 set :buildBlock:block @inverted-sorter
   300 set :buildBlock:x :buildBlockFromCfg.13:x
 
   306 setaddr :buildBlock*retaddr *label142 (h:*label142)
   307 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   308 label *label142
-    * jump *label137 always
   309 label *label137
   310 op add :buildBlockFromCfg.15:x .coreX 2.5
   311 set :buildBlock:block @kiln
 
   318 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   319 label *label148
   320 set *tmp182 :buildBlock*retval
-    * jump *label143 always
   321 label *label143
   322 write *tmp182 *tmp154 ".kiln"
   323 op add :buildBlockFromCfg.16:x .coreX -4.5
 
   329 setaddr :buildBlock*retaddr *label154 (h:*label154)
   330 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   331 label *label154
-    * jump *label149 always
   332 label *label149
   333 set :buildBlock:block @overflow-gate
   334 set :buildBlock:x :buildBlockFromCfg.12:x
 
   340 setaddr :buildBlock*retaddr *label160 (h:*label160)
   341 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   342 label *label160
-    * jump *label155 always
   343 label *label155
   344 op add :buildBlockFromCfg.18:x .coreX -4
   345 set :buildBlock:x :buildBlockFromCfg.18:x
 
   347 setaddr :buildBlock*retaddr *label166 (h:*label166)
   348 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   349 label *label166
-    * jump *label161 always
   350 label *label161
   351 set :buildBlock:block @steam-generator
   352 set :buildBlock:x :buildBlockFromCfg.16:x
 
   359 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   360 label *label172
   361 set *tmp198 :buildBlock*retval
-    * jump *label167 always
   362 label *label167
   363 write *tmp198 *tmp154 ".generator2"
   364 set :buildBlock:block @multi-press
 
   373 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   374 label *label178
   375 set *tmp202 :buildBlock*retval
-    * jump *label173 always
   376 label *label173
   377 write *tmp202 *tmp154 ".multipress"
   378 op add :buildBlockFromCfg.21:y .coreY 5.5
 
   388 setaddr :buildBlock*retaddr *label184 (h:*label184)
   389 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   390 label *label184
-    * jump *label179 always
   391 label *label179
   392 set .graphiteSurplus 200
   393 op add :buildBlockFromCfg.22:y .coreY -5
 
   402 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   403 label *label190
   404 set *tmp210 :buildBlock*retval
-    * jump *label185 always
   405 label *label185
   406 write *tmp210 *tmp154 ".payloadRouter"
   407 set :buildBlock:block @unloader
 
   414 setaddr :buildBlock*retaddr *label196 (h:*label196)
   415 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   416 label *label196
-    * jump *label191 always
   417 label *label191
   418 set :buildBlock:block @underflow-gate
   419 set :buildBlock:x .coreX
 
   425 setaddr :buildBlock*retaddr *label202 (h:*label202)
   426 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   427 label *label202
-    * jump *label197 always
   428 label *label197
   429 set :buildBlock:block @additive-reconstructor
   430 set :buildBlock:x .coreX
 
   436 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
   437 label *label208
   438 set *tmp222 :buildBlock*retval
-    * jump *label203 always
   439 label *label203
   440 write *tmp222 *tmp154 ".reconstructor"
   441 write *tmp222 processor1 ".reconstructor"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    57 call *label28 *invalid :buildBlock*retval (m:*label43) (h:*label43)
    58 label *label43
    59 set *tmp103 :buildBlock*retval
-    * label *label38
    60 set .press *tmp103
    61 op add :buildBlockFromCfg.1:y .coreY 5
    62 set :buildBlock:block @battery
 
    68 call *label28 *invalid :buildBlock*retval (m:*label49) (h:*label49)
    69 label *label49
    70 set *tmp107 :buildBlock*retval
-    * label *label44
    71 set .battery *tmp107
    72 op add :buildBlockFromCfg.2:x .coreX 1
    73 set :buildBlock:x :buildBlockFromCfg.2:x
 
    75 setaddr :buildBlock*retaddr *label55 (h:*label55)
    76 call *label28 *invalid :buildBlock*retval (m:*label55) (h:*label55)
    77 label *label55
-    * label *label50
    78 op add :buildBlockFromCfg.3:y .coreY 4
    79 set :buildBlock:block @combustion-generator
    80 set :buildBlock:x .coreX
 
    85 call *label28 *invalid :buildBlock*retval (m:*label61) (h:*label61)
    86 label *label61
    87 set *tmp115 :buildBlock*retval
-    * label *label56
    88 set .generator *tmp115
    89 set .powerTarget 400
    90 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    98 call *label28 *invalid :buildBlock*retval (m:*label67) (h:*label67)
    99 label *label67
   100 set *tmp119 :buildBlock*retval
-    * label *label62
   101 set .smelter *tmp119
   102 op add :buildBlockFromCfg.5:y .coreY 2
   103 set :buildBlock:block @inverted-sorter
 
   108 setaddr :buildBlock*retaddr *label73 (h:*label73)
   109 call *label28 *invalid :buildBlock*retval (m:*label73) (h:*label73)
   110 label *label73
-    * label *label68
   111 set :meetTarget:block @pneumatic-drill
   112 set :meetTarget:copper 18
   113 set :meetTarget:lead 0
 
   162 call *label28 *invalid :buildBlock*retval (m:*label87) (h:*label87)
   163 label *label87
   164 set *tmp142 :buildBlock*retval
-    * label *label82
   165 set .unloader1 *tmp142
   166 op add :buildBlockFromCfg.7:x .coreX -1
   167 set :buildBlock:block @inverted-sorter
 
   174 setaddr :buildBlock*retaddr *label93 (h:*label93)
   175 call *label28 *invalid :buildBlock*retval (m:*label93) (h:*label93)
   176 label *label93
-    * label *label88
   177 op add :buildBlockFromCfg.8:y .coreY 3
   178 set :buildBlock:block @overflow-gate
   179 set :buildBlock:x .coreX
 
   182 setaddr :buildBlock*retaddr *label99 (h:*label99)
   183 call *label28 *invalid :buildBlock*retval (m:*label99) (h:*label99)
   184 label *label99
-    * label *label94
   185 op add :buildBlockFromCfg.9:x .coreX 3
   186 set :buildBlock:block @micro-processor
   187 set :buildBlock:x :buildBlockFromCfg.9:x
 
   194 call *label28 *invalid :buildBlock*retval (m:*label105) (h:*label105)
   195 label *label105
   196 set *tmp154 :buildBlock*retval
-    * label *label100
   197 set .controller *tmp154
   198 write processor1 *tmp154 ".display"
   199 write .core *tmp154 ".core"
 
   216 setaddr :buildBlock*retaddr *label111 (h:*label111)
   217 call *label28 *invalid :buildBlock*retval (m:*label111) (h:*label111)
   218 label *label111
-    * label *label106
   219 op add :buildBlockFromCfg.11:x .coreX -2
   220 set :buildBlock:block @unloader
   221 set :buildBlock:x :buildBlockFromCfg.11:x
 
   228 call *label28 *invalid :buildBlock*retval (m:*label117) (h:*label117)
   229 label *label117
   230 set *tmp162 :buildBlock*retval
-    * label *label112
   231 write *tmp162 *tmp154 ".unloader2"
   232 op add :buildBlockFromCfg.12:x .coreX -3
   233 op add :buildBlockFromCfg.12:y .coreY -2
 
   244 call *label28 *invalid :buildBlock*retval (m:*label123) (h:*label123)
   245 label *label123
   246 set *tmp166 :buildBlock*retval
-    * label *label118
   247 write *tmp166 *tmp154 ".factory"
   248 write *tmp166 processor1 ".factory"
   249 write 1 *tmp154 ".flareTarget"
 
   282 setaddr :buildBlock*retaddr *label136 (h:*label136)
   283 call *label28 *invalid :buildBlock*retval (m:*label136) (h:*label136)
   284 label *label136
-    * label *label131
   285 set :buildBlock:block @inverted-sorter
   286 set :buildBlock:x :buildBlockFromCfg.13:x
   287 set :buildBlock:y .coreY
 
   292 setaddr :buildBlock*retaddr *label142 (h:*label142)
   293 call *label28 *invalid :buildBlock*retval (m:*label142) (h:*label142)
   294 label *label142
-    * label *label137
   295 op add :buildBlockFromCfg.15:x .coreX 2.5
   296 set :buildBlock:block @kiln
   297 set :buildBlock:x :buildBlockFromCfg.15:x
 
   303 call *label28 *invalid :buildBlock*retval (m:*label148) (h:*label148)
   304 label *label148
   305 set *tmp182 :buildBlock*retval
-    * label *label143
   306 write *tmp182 *tmp154 ".kiln"
   307 op add :buildBlockFromCfg.16:x .coreX -4.5
   308 set :buildBlock:block @water-extractor
 
   313 setaddr :buildBlock*retaddr *label154 (h:*label154)
   314 call *label28 *invalid :buildBlock*retval (m:*label154) (h:*label154)
   315 label *label154
-    * label *label149
   316 set :buildBlock:block @overflow-gate
   317 set :buildBlock:x :buildBlockFromCfg.12:x
   318 set :buildBlock:y .coreY
 
   323 setaddr :buildBlock*retaddr *label160 (h:*label160)
   324 call *label28 *invalid :buildBlock*retval (m:*label160) (h:*label160)
   325 label *label160
-    * label *label155
   326 op add :buildBlockFromCfg.18:x .coreX -4
   327 set :buildBlock:x :buildBlockFromCfg.18:x
   328 set :buildBlock:y .coreY
   329 setaddr :buildBlock*retaddr *label166 (h:*label166)
   330 call *label28 *invalid :buildBlock*retval (m:*label166) (h:*label166)
   331 label *label166
-    * label *label161
   332 set :buildBlock:block @steam-generator
   333 set :buildBlock:x :buildBlockFromCfg.16:x
   334 set :buildBlock:y :buildBlockFromCfg:y
 
   340 call *label28 *invalid :buildBlock*retval (m:*label172) (h:*label172)
   341 label *label172
   342 set *tmp198 :buildBlock*retval
-    * label *label167
   343 write *tmp198 *tmp154 ".generator2"
   344 set :buildBlock:block @multi-press
   345 set :buildBlock:x :buildBlockFromCfg.11:x
 
   353 call *label28 *invalid :buildBlock*retval (m:*label178) (h:*label178)
   354 label *label178
   355 set *tmp202 :buildBlock*retval
-    * label *label173
   356 write *tmp202 *tmp154 ".multipress"
   357 op add :buildBlockFromCfg.21:y .coreY 5.5
   358 set :buildBlock:block @water-extractor
 
   367 setaddr :buildBlock*retaddr *label184 (h:*label184)
   368 call *label28 *invalid :buildBlock*retval (m:*label184) (h:*label184)
   369 label *label184
-    * label *label179
   370 set .graphiteSurplus 200
   371 op add :buildBlockFromCfg.22:y .coreY -5
   372 set :buildBlock:block @payload-router
 
   380 call *label28 *invalid :buildBlock*retval (m:*label190) (h:*label190)
   381 label *label190
   382 set *tmp210 :buildBlock*retval
-    * label *label185
   383 write *tmp210 *tmp154 ".payloadRouter"
   384 set :buildBlock:block @unloader
   385 set :buildBlock:x .coreX
 
   391 setaddr :buildBlock*retaddr *label196 (h:*label196)
   392 call *label28 *invalid :buildBlock*retval (m:*label196) (h:*label196)
   393 label *label196
-    * label *label191
   394 set :buildBlock:block @underflow-gate
   395 set :buildBlock:x .coreX
   396 set :buildBlock:y :buildBlockFromCfg.10:y
 
   401 setaddr :buildBlock*retaddr *label202 (h:*label202)
   402 call *label28 *invalid :buildBlock*retval (m:*label202) (h:*label202)
   403 label *label202
-    * label *label197
   404 set :buildBlock:block @additive-reconstructor
   405 set :buildBlock:x .coreX
   406 set :buildBlock:y :buildBlockFromCfg.22:y
 
   411 call *label28 *invalid :buildBlock*retval (m:*label208) (h:*label208)
   412 label *label208
   413 set *tmp222 :buildBlock*retval
-    * label *label203
   414 write *tmp222 *tmp154 ".reconstructor"
   415 write *tmp222 processor1 ".reconstructor"
   416 setaddr :buildUnits*retaddr *label209 (h:*label209)

Final code before resolving virtual instructions:

    0:  jump *label526 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 processor5
    2:  draw triangle TIME_COMPRESS .ERROR .battery .builder .controller .core
    3:  draw triangle .coreX .coreY .display .flareController .flareControllerStarted .generator
    4:  draw triangle .graphiteSurplus .leadSurplus .metaglassSurplus .powerTarget .press .siliconSurplus
    5:  draw triangle .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass .targetSilicon
    6:  draw triangle .targetTitanium .titaniumDrill .unloader1 :flares :monos :polys
    7:  draw triangle :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass
    8:  draw triangle :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockAt:block
    9:  draw triangle :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x
   10:  draw triangle :buildBlockAt:y :buildBlockFromCfg:x :buildBlockFromCfg.18:x :buildBlockFromCfg.9:x :buildBlockFromCfg.13:x :buildBlockFromCfg.4:x
   11:  draw triangle :buildBlockFromCfg.12:x :buildBlockFromCfg.16:x :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.15:x :buildBlockFromCfg.2:x
   12:  draw triangle :buildBlockFromCfg.10:y :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg.21:y :buildBlockFromCfg:y :buildBlockFromCfg.13:y
   13:  draw triangle :buildBlockFromCfg.4:y :buildBlockFromCfg.8:y :buildBlockFromCfg.12:y :buildBlockFromCfg.3:y :buildBlockFromCfg.22:y :buildTitaniumDrill:dx
   14:  draw triangle :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item :fetchBlock:block
   15:  draw triangle :fetchBlock:item :fetchBlock:unitItem :findFreeUnit:first_unit :findUnits:count :findUnits:firstUnit :findUnits:type
   16:  draw triangle :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block :meetTarget:block
   17:  draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
   18:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore
   19:  draw triangle :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x
   20:  draw triangle :moveTo.1:y :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y
   21:  draw triangle :second:result :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied
   22:  draw triangle :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing
   23:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing :transportStatus.2:target 0 0 0
        label *label526
   24:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   25:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   33:  set .graphiteSurplus 20                                      ...
   34:  set .siliconSurplus 20                                       ...
   35:  set .metaglassSurplus 20                                     ...
   36:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   37:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label32                                               CoreBuilder.mnd: do
   38:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   39:  set .builder @unit                                           ...
   40:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   41:  jump *label32 equal .core null                               CoreBuilder.mnd: do
   42:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   43:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   44:  write .core processor5 ":startPolyController:aCore"          CoreBuilder.mnd: async(polyController.startPolyController(core, @unit));
   45:  write @unit processor5 ":startPolyController:aBuilder"       ...
   46:  write false processor5 ":startPolyController*finished"       ...
   47:  write 1 processor5 "@counter"                                ...
   48:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.displayFlares);
   49:  setaddr :findUnits*retaddr *label35                          ...
   50:  call *label30 *invalid :findUnits*retval                     ...
        label *label35                                               ...
   51:  write :findUnits:count processor1 ".displayFlares"           ...
   52:  set :flares :findUnits*retval                                ...
   53:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.displayMonos);
   54:  setaddr :findUnits*retaddr *label36                          ...
   55:  call *label30 *invalid :findUnits*retval                     ...
        label *label36                                               ...
   56:  write :findUnits:count processor1 ".displayMonos"            ...
   57:  set :monos :findUnits*retval                                 ...
   58:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.displayPolys);
   59:  setaddr :findUnits*retaddr *label37                          ...
   60:  call *label30 *invalid :findUnits*retval                     ...
        label *label37                                               ...
   61:  write :findUnits:count processor1 ".displayPolys"            ...
   62:  set :polys :findUnits*retval                                 ...
   63:  op add :buildBlockFromCfg:x .coreX -2.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   64:  op add :buildBlockFromCfg:y .coreY 1.5                       ...
   65:  set :buildBlock:block @graphite-press                        ...
   66:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   67:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   68:  set :buildBlock:copper 75                                    ...
   69:  set :buildBlock:lead 30                                      ...
   70:  set :buildBlock:graphite 0                                   ...
   71:  set :buildBlock:silicon 0                                    ...
   72:  set :buildBlock:titanium 0                                   ...
   73:  set :buildBlock:metaglass 0                                  ...
   74:  set :buildBlock:rotation 0                                   ...
   75:  set :buildBlock:config null                                  ...
   76:  setaddr :buildBlock*retaddr *label43                         ...
   77:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label43                                               ...
   78:  set *tmp103 :buildBlock*retval                               ...
   79:  set .press *tmp103                                           CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   80:  op add :buildBlockFromCfg.1:y .coreY 5                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   81:  set :buildBlock:block @battery                               ...
   82:  set :buildBlock:x .coreX                                     ...
   83:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   84:  set :buildBlock:copper 5                                     ...
   85:  set :buildBlock:lead 20                                      ...
   86:  setaddr :buildBlock*retaddr *label49                         ...
   87:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label49                                               ...
   88:  set *tmp107 :buildBlock*retval                               ...
   89:  set .battery *tmp107                                         CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   90:  op add :buildBlockFromCfg.2:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   91:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   92:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   93:  setaddr :buildBlock*retaddr *label55                         ...
   94:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label55                                               ...
   95:  op add :buildBlockFromCfg.3:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   96:  set :buildBlock:block @combustion-generator                  ...
   97:  set :buildBlock:x .coreX                                     ...
   98:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   99:  set :buildBlock:copper 25                                    ...
  100:  set :buildBlock:lead 15                                      ...
  101:  setaddr :buildBlock*retaddr *label61                         ...
  102:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label61                                               ...
  103:  set *tmp115 :buildBlock*retval                               ...
  104:  set .generator *tmp115                                       CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
  105:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
  106:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  107:  op add :buildBlockFromCfg.4:y .coreY 3.5                     ...
  108:  set :buildBlock:block @silicon-smelter                       ...
  109:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  110:  set :buildBlock:y :buildBlockFromCfg.4:y                     ...
  111:  set :buildBlock:copper 30                                    ...
  112:  set :buildBlock:lead 25                                      ...
  113:  setaddr :buildBlock*retaddr *label67                         ...
  114:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label67                                               ...
  115:  set *tmp119 :buildBlock*retval                               ...
  116:  set .smelter *tmp119                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  117:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  118:  set :buildBlock:block @inverted-sorter                       ...
  119:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
  120:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  121:  set :buildBlock:copper 2                                     ...
  122:  set :buildBlock:lead 2                                       ...
  123:  setaddr :buildBlock*retaddr *label73                         ...
  124:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label73                                               ...
  125:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  126:  set :meetTarget:copper 18                                    ...
  127:  set :meetTarget:lead 0                                       ...
  128:  set :meetTarget:graphite 10                                  ...
  129:  set :meetTarget:silicon 0                                    ...
  130:  set :meetTarget:titanium 0                                   ...
  131:  set :meetTarget:metaglass 0                                  ...
  132:  setaddr :meetTarget*retaddr *label76                         ...
  133:  call *label24 *invalid :meetTarget*retval                    ...
        label *label76                                               ...
  134:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  135:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  136:  write .coreY processor4 ":findDrillLocation:y"               ...
  137:  write @unit processor4 ":findDrillLocation:unit"             ...
  138:  write @titanium processor4 ":findDrillLocation:item"         ...
  139:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  140:  write false processor4 ":findDrillLocation:large"            ...
  141:  write 4 processor4 ":findDrillLocation:limit"                ...
  142:  write false processor4 ":findDrillLocation*finished"         ...
  143:  write 1 processor4 "@counter"                                ...
        label *label77                                               ...
  144:  wait 1e-15                                                   ...
  145:  read *tmp138 processor4 ":findDrillLocation*finished"        ...
  146:  jump *label77 equal *tmp138 false                            ...
  147:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  148:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  149:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  150:  jump *label78 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  151:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  152:  stop                                                         Actions.mnd: stopProcessor();
        label *label78                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  153:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  154:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  155:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  156:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  157:  set :buildBlockAt:rotation null                              ...
  158:  set :buildBlockAt:config 0                                   ...
  159:  set :buildBlockAt:skipError false                            ...
  160:  setaddr :buildBlockAt*retaddr *label81                       ...
  161:  call *label27 *invalid :buildBlockAt*retval                  ...
        label *label81                                               ...
  162:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  163:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  164:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  165:  set :buildBlock:x .coreX                                     ...
  166:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  167:  set :buildBlock:copper 0                                     ...
  168:  set :buildBlock:lead 0                                       ...
  169:  set :buildBlock:silicon 30                                   ...
  170:  set :buildBlock:titanium 25                                  ...
  171:  setaddr :buildBlock*retaddr *label87                         ...
  172:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label87                                               ...
  173:  set *tmp142 :buildBlock*retval                               ...
  174:  set .unloader1 *tmp142                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  175:  op add :buildBlockFromCfg.7:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  176:  set :buildBlock:block @inverted-sorter                       ...
  177:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  178:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  179:  set :buildBlock:copper 2                                     ...
  180:  set :buildBlock:lead 2                                       ...
  181:  set :buildBlock:silicon 0                                    ...
  182:  set :buildBlock:titanium 0                                   ...
  183:  setaddr :buildBlock*retaddr *label93                         ...
  184:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label93                                               ...
  185:  op add :buildBlockFromCfg.8:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  186:  set :buildBlock:block @overflow-gate                         ...
  187:  set :buildBlock:x .coreX                                     ...
  188:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  189:  set :buildBlock:copper 4                                     ...
  190:  setaddr :buildBlock*retaddr *label99                         ...
  191:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label99                                               ...
  192:  op add :buildBlockFromCfg.9:x .coreX 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  193:  set :buildBlock:block @micro-processor                       ...
  194:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  195:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
  196:  set :buildBlock:copper 90                                    ...
  197:  set :buildBlock:lead 50                                      ...
  198:  set :buildBlock:silicon 50                                   ...
  199:  setaddr :buildBlock*retaddr *label105                        ...
  200:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  201:  call *label28 *invalid :buildBlock*retval                    ...
        label *label105                                              ...
  202:  set *tmp154 :buildBlock*retval                               ...
  203:  set .controller *tmp154                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  204:  write processor1 *tmp154 ".display"                          CoreBuilder.mnd: controller.display = display;
  205:  write .core *tmp154 ".core"                                  CoreBuilder.mnd: controller.core = core;
  206:  write bank1 *tmp154 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  207:  write *tmp107 *tmp154 ".battery"                             CoreBuilder.mnd: controller.battery = battery;
  208:  write *tmp115 *tmp154 ".generator"                           CoreBuilder.mnd: controller.generator = generator;
  209:  write *tmp119 *tmp154 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  210:  write *tmp103 *tmp154 ".press"                               CoreBuilder.mnd: controller.press = press;
  211:  write :monos *tmp154 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  212:  write :flares *tmp154 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  213:  write :polys *tmp154 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  214:  op add :buildBlockFromCfg.10:y .coreY -3                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  215:  set :buildBlock:block @power-node                            ...
  216:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  217:  set :buildBlock:y :buildBlockFromCfg.10:y                    ...
  218:  set :buildBlock:copper 2                                     ...
  219:  set :buildBlock:lead 6                                       ...
  220:  set :buildBlock:silicon 0                                    ...
  221:  set :buildBlock:config null                                  ...
  222:  setaddr :buildBlock*retaddr *label111                        ...
  223:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label111                                              ...
  224:  op add :buildBlockFromCfg.11:x .coreX -2                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  225:  set :buildBlock:block @unloader                              ...
  226:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  227:  set :buildBlock:y .coreY                                     ...
  228:  set :buildBlock:copper 0                                     ...
  229:  set :buildBlock:lead 0                                       ...
  230:  set :buildBlock:silicon 30                                   ...
  231:  set :buildBlock:titanium 25                                  ...
  232:  setaddr :buildBlock*retaddr *label117                        ...
  233:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label117                                              ...
  234:  set *tmp162 :buildBlock*retval                               ...
  235:  write *tmp162 *tmp154 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(ref UNLOADER2);
  236:  op add :buildBlockFromCfg.12:x .coreX -3                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  237:  op add :buildBlockFromCfg.12:y .coreY -2                     ...
  238:  set :buildBlock:block @air-factory                           ...
  239:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  240:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  241:  set :buildBlock:copper 60                                    ...
  242:  set :buildBlock:lead 70                                      ...
  243:  set :buildBlock:silicon 0                                    ...
  244:  set :buildBlock:titanium 0                                   ...
  245:  set :buildBlock:rotation 3                                   ...
  246:  set :buildBlock:config @mono                                 ...
  247:  setaddr :buildBlock*retaddr *label123                        ...
  248:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label123                                              ...
  249:  set *tmp166 :buildBlock*retval                               ...
  250:  write *tmp166 *tmp154 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  251:  write *tmp166 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  252:  write 1 *tmp154 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 1;
  253:  write 3 *tmp154 ".monoTarget"                                CoreBuilder.mnd: controller.monoTarget = 3;
  254:  write 0 *tmp154 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 0;
  255:  write 85 *tmp154 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  256:  write 150 *tmp154 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  257:  write 30 *tmp154 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  258:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  259:  set .siliconSurplus 20                                       ...
  260:  setaddr :buildUnits*retaddr *label124                        CoreBuilder.mnd: buildUnits();
  261:  call *label31 *invalid :buildUnits*retval                    ...
        label *label124                                              ...
        label *label125                                              CoreBuilder.mnd: do
  262:  setaddr :supplyBase*retaddr *label128                        CoreBuilder.mnd: supplyBase();
  263:  call *label22 *invalid :supplyBase*retval                    ...
        label *label128                                              ...
  264:  sensor *tmp170 *tmp107 @totalPower                           CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  265:  jump *label127 lessThan *tmp170 300                          ...
  266:  read *tmp73 *tmp154 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  267:  jump *label125 lessThan *tmp73 3                             CoreBuilder.mnd: do
        label *label127                                              ...
  268:  set .graphiteSurplus 60                                      CoreBuilder.mnd: graphiteSurplus = 60;
  269:  set .siliconSurplus 100                                      CoreBuilder.mnd: siliconSurplus = 100;
  270:  op add :buildBlockFromCfg.13:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  271:  op add :buildBlockFromCfg.13:y .coreY -1                     ...
  272:  set :buildBlock:block @unloader                              ...
  273:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  274:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  275:  set :buildBlock:copper 0                                     ...
  276:  set :buildBlock:lead 0                                       ...
  277:  set :buildBlock:silicon 30                                   ...
  278:  set :buildBlock:titanium 25                                  ...
  279:  set :buildBlock:rotation 0                                   ...
  280:  set :buildBlock:config null                                  ...
  281:  setaddr :buildBlock*retaddr *label136                        ...
  282:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label136                                              ...
  283:  set :buildBlock:block @inverted-sorter                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  284:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  285:  set :buildBlock:y .coreY                                     ...
  286:  set :buildBlock:copper 2                                     ...
  287:  set :buildBlock:lead 2                                       ...
  288:  set :buildBlock:silicon 0                                    ...
  289:  set :buildBlock:titanium 0                                   ...
  290:  setaddr :buildBlock*retaddr *label142                        ...
  291:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label142                                              ...
  292:  op add :buildBlockFromCfg.15:x .coreX 2.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  293:  set :buildBlock:block @kiln                                  ...
  294:  set :buildBlock:x :buildBlockFromCfg.15:x                    ...
  295:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  296:  set :buildBlock:copper 60                                    ...
  297:  set :buildBlock:lead 30                                      ...
  298:  set :buildBlock:graphite 30                                  ...
  299:  setaddr :buildBlock*retaddr *label148                        ...
  300:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label148                                              ...
  301:  set *tmp182 :buildBlock*retval                               ...
  302:  write *tmp182 *tmp154 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  303:  op add :buildBlockFromCfg.16:x .coreX -4.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  304:  set :buildBlock:block @water-extractor                       ...
  305:  set :buildBlock:x :buildBlockFromCfg.16:x                    ...
  306:  set :buildBlock:y :buildBlockFromCfg.4:y                     ...
  307:  set :buildBlock:copper 30                                    ...
  308:  set :buildBlock:metaglass 30                                 ...
  309:  setaddr :buildBlock*retaddr *label154                        ...
  310:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label154                                              ...
  311:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  312:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  313:  set :buildBlock:y .coreY                                     ...
  314:  set :buildBlock:copper 4                                     ...
  315:  set :buildBlock:lead 2                                       ...
  316:  set :buildBlock:graphite 0                                   ...
  317:  set :buildBlock:metaglass 0                                  ...
  318:  setaddr :buildBlock*retaddr *label160                        ...
  319:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label160                                              ...
  320:  op add :buildBlockFromCfg.18:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  321:  set :buildBlock:x :buildBlockFromCfg.18:x                    ...
  322:  set :buildBlock:y .coreY                                     ...
  323:  setaddr :buildBlock*retaddr *label166                        ...
  324:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label166                                              ...
  325:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  326:  set :buildBlock:x :buildBlockFromCfg.16:x                    ...
  327:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  328:  set :buildBlock:copper 35                                    ...
  329:  set :buildBlock:lead 40                                      ...
  330:  set :buildBlock:graphite 25                                  ...
  331:  set :buildBlock:silicon 30                                   ...
  332:  setaddr :buildBlock*retaddr *label172                        ...
  333:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label172                                              ...
  334:  set *tmp198 :buildBlock*retval                               ...
  335:  write *tmp198 *tmp154 ".generator2"                          CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(ref STEAM_GEN);
  336:  set :buildBlock:block @multi-press                           CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  337:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  338:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
  339:  set :buildBlock:copper 0                                     ...
  340:  set :buildBlock:lead 100                                     ...
  341:  set :buildBlock:graphite 50                                  ...
  342:  set :buildBlock:silicon 25                                   ...
  343:  set :buildBlock:titanium 100                                 ...
  344:  setaddr :buildBlock*retaddr *label178                        ...
  345:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label178                                              ...
  346:  set *tmp202 :buildBlock*retval                               ...
  347:  write *tmp202 *tmp154 ".multipress"                          CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(ref MULTIPRESS);
  348:  op add :buildBlockFromCfg.21:y .coreY 5.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  349:  set :buildBlock:block @water-extractor                       ...
  350:  set :buildBlock:x :buildBlockFromCfg.16:x                    ...
  351:  set :buildBlock:y :buildBlockFromCfg.21:y                    ...
  352:  set :buildBlock:copper 30                                    ...
  353:  set :buildBlock:lead 30                                      ...
  354:  set :buildBlock:graphite 30                                  ...
  355:  set :buildBlock:silicon 0                                    ...
  356:  set :buildBlock:titanium 0                                   ...
  357:  set :buildBlock:metaglass 30                                 ...
  358:  setaddr :buildBlock*retaddr *label184                        ...
  359:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label184                                              ...
  360:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  361:  op add :buildBlockFromCfg.22:y .coreY -5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  362:  set :buildBlock:block @payload-router                        ...
  363:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  364:  set :buildBlock:y :buildBlockFromCfg.22:y                    ...
  365:  set :buildBlock:copper 10                                    ...
  366:  set :buildBlock:lead 0                                       ...
  367:  set :buildBlock:graphite 15                                  ...
  368:  set :buildBlock:metaglass 0                                  ...
  369:  setaddr :buildBlock*retaddr *label190                        ...
  370:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label190                                              ...
  371:  set *tmp210 :buildBlock*retval                               ...
  372:  write *tmp210 *tmp154 ".payloadRouter"                       CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(ref PAYLOAD_ROUTER);
  373:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  374:  set :buildBlock:x .coreX                                     ...
  375:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  376:  set :buildBlock:copper 0                                     ...
  377:  set :buildBlock:graphite 0                                   ...
  378:  set :buildBlock:silicon 30                                   ...
  379:  set :buildBlock:titanium 25                                  ...
  380:  setaddr :buildBlock*retaddr *label196                        ...
  381:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label196                                              ...
  382:  set :buildBlock:block @underflow-gate                        CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  383:  set :buildBlock:x .coreX                                     ...
  384:  set :buildBlock:y :buildBlockFromCfg.10:y                    ...
  385:  set :buildBlock:copper 4                                     ...
  386:  set :buildBlock:lead 2                                       ...
  387:  set :buildBlock:silicon 0                                    ...
  388:  set :buildBlock:titanium 0                                   ...
  389:  setaddr :buildBlock*retaddr *label202                        ...
  390:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label202                                              ...
  391:  set :buildBlock:block @additive-reconstructor                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  392:  set :buildBlock:x .coreX                                     ...
  393:  set :buildBlock:y :buildBlockFromCfg.22:y                    ...
  394:  set :buildBlock:copper 200                                   ...
  395:  set :buildBlock:lead 120                                     ...
  396:  set :buildBlock:silicon 90                                   ...
  397:  setaddr :buildBlock*retaddr *label208                        ...
  398:  call *label28 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label208                                              ...
  399:  set *tmp222 :buildBlock*retval                               ...
  400:  write *tmp222 *tmp154 ".reconstructor"                       CoreBuilder.mnd: controller.reconstructor = reconstructor;
  401:  write *tmp222 processor1 ".reconstructor"                    CoreBuilder.mnd: display.reconstructor = reconstructor;
  402:  setaddr :buildUnits*retaddr *label209                        CoreBuilder.mnd: buildUnits();
  403:  call *label31 *invalid :buildUnits*retval                    ...
        label *label209                                              ...
  404:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  405:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  406:  write 3 *tmp154 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 3;
  407:  read *tmp74 *tmp154 ".polys"                                 CoreBuilder.mnd: while controller.polys < 3 do
  408:  jump *label212 greaterThanEq *tmp74 3                        ...
        label *label524                                              ...
  409:  setaddr :supplyBase*retaddr *label213                        CoreBuilder.mnd: supplyBase();
  410:  call *label22 *invalid :supplyBase*retval                    ...
        label *label213                                              ...
  411:  read *tmp74 *tmp154 ".polys"                                 CoreBuilder.mnd: while controller.polys < 3 do
  412:  jump *label524 lessThan *tmp74 3                             ...
        label *label212                                              ...
  413:  write 8 *tmp154 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 8;
  414:  write 6 *tmp154 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 6;
  415:  read *tmp72 *tmp154 ".flares"                                CoreBuilder.mnd: while controller.flares < 2 do
  416:  jump *label216 greaterThanEq *tmp72 2                        ...
        label *label525                                              ...
  417:  setaddr :supplyBase*retaddr *label217                        CoreBuilder.mnd: supplyBase();
  418:  call *label22 *invalid :supplyBase*retval                    ...
        label *label217                                              ...
  419:  read *tmp72 *tmp154 ".flares"                                CoreBuilder.mnd: while controller.flares < 2 do
  420:  jump *label525 lessThan *tmp72 2                             ...
        label *label216                                              ...
  421:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  422:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  423:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 1e9);
  424:  write .coreY processor4 ":findDrillLocation:y"               ...
  425:  write @unit processor4 ":findDrillLocation:unit"             ...
  426:  write @titanium processor4 ":findDrillLocation:item"         ...
  427:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  428:  write false processor4 ":findDrillLocation:large"            ...
  429:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  430:  write false processor4 ":findDrillLocation*finished"         ...
  431:  write 1 processor4 "@counter"                                ...
        label *label218                                              ...
  432:  wait 1e-15                                                   ...
  433:  read *tmp238 processor4 ":findDrillLocation*finished"        ...
  434:  jump *label218 equal *tmp238 false                           ...
  435:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label219                                              CoreBuilder.mnd: do
  436:  setaddr :supplyBase*retaddr *label222                        CoreBuilder.mnd: supplyBase();
  437:  call *label22 *invalid :supplyBase*retval                    ...
        label *label222                                              ...
  438:  read *tmp240 processor4 ":findDrillLocation*finished"        CoreBuilder.mnd: while !finished(oreLocator.findDrillLocation);
  439:  jump *label219 equal *tmp240 false                           CoreBuilder.mnd: do
  440:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  441:  ubind @flare                                                 *units: ubind(unit_type);
  442:  jump *label223 equal @unit null                              *units: if @unit == null then return null; end;
  443:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label226                                              *units: do
  444:  sensor *tmp245 @unit @controlled                             *units: if @unit.@controlled == 0 then
  445:  jump *label229 notEqual *tmp245 0                            ...
  446:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  447:  jump *label223 always 0 0                                    *units: return @unit;
        label *label229                                              *units: if @unit.@controlled == 0 then
  448:  sensor *tmp248 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  449:  jump *label231 notEqual *tmp248 1                            ...
  450:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label231                                              *units: elsif first_unit.@dead == 1 then
  451:  ubind @flare                                                 *units: ubind(unit_type);
  452:  jump *label226 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label223                                              CoreBuilder.mnd: findFreeUnit(@flare, 0);
  453:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  454:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  455:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  456:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  457:  write false processor4 ":layoutThoriumDrill*finished"        ...
  458:  write 2 processor4 "@counter"                                ...
  459:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label233                                              CoreBuilder.mnd: do
  460:  setaddr :supplyBase*retaddr *label236                        CoreBuilder.mnd: supplyBase();
  461:  call *label22 *invalid :supplyBase*retval                    ...
        label *label236                                              ...
  462:  read *tmp257 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  463:  jump *label233 equal *tmp257 false                           CoreBuilder.mnd: do
  464:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  465:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label237                                              CoreBuilder.mnd: do
  466:  setaddr :supplyBase*retaddr *label240                        CoreBuilder.mnd: supplyBase();
  467:  call *label22 *invalid :supplyBase*retval                    ...
        label *label240                                              ...
  468:  read *tmp72 *tmp154 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  469:  read *tmp73 *tmp154 ".monos"                                 ...
  470:  op add *tmp259 *tmp72 *tmp73                                 ...
  471:  jump *label237 lessThan *tmp259 16                           CoreBuilder.mnd: do
        label *label241                                              CoreBuilder.mnd: while true do
  472:  setaddr :supplyBase*retaddr *label244                        CoreBuilder.mnd: supplyBase();
  473:  call *label22 *invalid :supplyBase*retval                    ...
        label *label244                                              ...
  474:  jump *label241 always 0 0                                    CoreBuilder.mnd: while true do
        label *label6                                                Actions.mnd: void moveTo(x, y, radius)
  475:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  476:  op sub *tmp263 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  477:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261 0 ...
  478:  jump *label251 notEqual *tmp261 false                        ...
        label *label518                                              ...
  479:  ucontrol approach :moveTo:x :moveTo:y *tmp263 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  480:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp261 0 Actions.mnd: while !within(x, y, radius) do
  481:  jump *label518 equal *tmp261 false                           ...
        label *label251                                              ...
  482:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label7                                                Actions.mnd: void moveTo(x, y)
  483:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  484:  set :moveTo:y :moveTo.1:y                                    ...
  485:  set :moveTo:radius 6                                         ...
  486:  setaddr :moveTo*retaddr *label253                            ...
  487:  call *label6 *invalid :moveTo*retval                         ...
        label *label253                                              ...
  488:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label8                                                Actions.mnd: void moveToEmpty(x, y)
  489:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label256                                              Actions.mnd: do
  490:  sensor *tmp266 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  491:  jump *label259 equal *tmp266 null                            ...
  492:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label259                                              ...
  493:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  494:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp269 0    Actions.mnd: while !within(x, y, RADIUS);
  495:  jump *label256 equal *tmp269 false                           Actions.mnd: do
  496:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label9                                                Actions.mnd: void moveToBlock(block, radius)
  497:  sensor *tmp271 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  498:  sensor *tmp272 :moveToBlock:block @y                         ...
  499:  set :moveTo:x *tmp271                                        ...
  500:  set :moveTo:y *tmp272                                        ...
  501:  set :moveTo:radius :moveToBlock:radius                       ...
  502:  setaddr :moveTo*retaddr *label262                            ...
  503:  call *label6 *invalid :moveTo*retval                         ...
        label *label262                                              ...
  504:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label10                                               Actions.mnd: void depositItems(block, item)
  505:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  506:  sensor *tmp273 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  507:  jump *label265 notEqual *tmp273 :depositItems:item           ...
  508:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  509:  set :moveToBlock:radius 6                                    ...
  510:  setaddr :moveToBlock*retaddr *label267                       ...
  511:  call *label9 *invalid :moveToBlock*retval                    ...
        label *label267                                              ...
  512:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label268                                              Actions.mnd: do
  513:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  514:  sensor *tmp277 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  515:  op mul *tmp278 *tmp277 :depositItems:cap                     ...
  516:  sensor *tmp279 :depositItems:block :depositItems:item        ...
  517:  jump *label268 greaterThan *tmp278 *tmp279                   Actions.mnd: do
  518:  jump *label266 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label265                                              ...
  519:  sensor *tmp281 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  520:  jump *label273 equal *tmp281 null                            ...
        label *label519                                              ...
  521:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  522:  sensor *tmp281 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  523:  jump *label519 notEqual *tmp281 null                         ...
        label *label273                                              ...
        label *label266                                              Actions.mnd: if @unit.@firstItem == item then
  524:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  525:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  526:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label11                                               Actions.mnd: void locateOre(ore, out x, out y)
  527:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  528:  jump *label276 notEqual *tmp283 false                        ...
  529:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  530:  stop                                                         Actions.mnd: stopProcessor();
        label *label276                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  531:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label12                                               Actions.mnd: void mineOre(ore, amount, block)
  532:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  533:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  534:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  535:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  536:  setaddr :locateOre*retaddr *label281                         ...
  537:  call *label11 *invalid :locateOre*retval                     ...
        label *label281                                              ...
  538:  set :mineOre:x :locateOre:x                                  ...
  539:  set :mineOre:y :locateOre:y                                  ...
  540:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  541:  set :moveToEmpty:y :locateOre:y                              ...
  542:  setaddr :moveToEmpty*retaddr *label282                       ...
  543:  call *label8 *invalid :moveToEmpty*retval                    ...
        label *label282                                              ...
  544:  sensor *tmp288 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  545:  jump *label283 equal *tmp288 :mineOre:ore                    ...
  546:  sensor *tmp291 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  547:  jump *label288 equal *tmp291 null                            ...
        label *label520                                              ...
  548:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  549:  sensor *tmp291 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  550:  jump *label520 notEqual *tmp291 null                         ...
        label *label288                                              ...
        label *label283                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  551:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  552:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label290                                              Actions.mnd: do
  553:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  554:  op notEqual *tmp295 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  555:  op notEqual *tmp296 :mineOre:item :mineOre:ore               ...
  556:  op land *tmp297 *tmp295 *tmp296                              ...
  557:  jump *label292 notEqual *tmp297 false                        ...
  558:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  559:  jump *label292 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  560:  sensor *tmp301 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  561:  jump *label290 lessThan *tmp301 :mineOre:amount              Actions.mnd: do
        label *label292                                              ...
  562:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  563:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  564:  set :depositItems:item :mineOre:ore                          ...
  565:  setaddr :depositItems*retaddr *label297                      ...
  566:  call *label10 *invalid :depositItems*retval                  ...
        label *label297                                              ...
  567:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label13                                               Actions.mnd: void mineOre(ore)
  568:  write "Mining " .display ".status2"                          Actions.mnd: display.status2  = text;
  569:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2  = item;
  570:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  571:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  572:  set :mineOre:amount 30                                       ...
  573:  set :mineOre:block .core                                     ...
  574:  setaddr :mineOre*retaddr *label300                           ...
  575:  call *label12 *invalid :mineOre*retval                       ...
        label *label300                                              ...
  576:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label14                                               Actions.mnd: void fetchBlock(block, item)
  577:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  578:  write :transportStatus.2:target .display ".transportTarget"  Actions.mnd: display.transportTarget = target;
  579:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  580:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2  = text;
  581:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2  = item;
  582:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  583:  sensor *tmp305 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  584:  sensor *tmp306 :fetchBlock:block @y                          ...
  585:  set :moveToEmpty:x *tmp305                                   ...
  586:  set :moveToEmpty:y *tmp306                                   ...
  587:  setaddr :moveToEmpty*retaddr *label304                       ...
  588:  call *label8 *invalid :moveToEmpty*retval                    ...
        label *label304                                              ...
  589:  sensor *tmp307 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  590:  jump *label308 equal *tmp307 null                            ...
        label *label521                                              ...
  591:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  592:  sensor *tmp307 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  593:  jump *label521 notEqual *tmp307 null                         ...
        label *label308                                              ...
        label *label309                                              Actions.mnd: do
  594:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  595:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  596:  op notEqual *tmp310 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  597:  op notEqual *tmp311 :fetchBlock:unitItem :fetchBlock:item    ...
  598:  op land *tmp312 *tmp310 *tmp311                              ...
  599:  jump *label312 equal *tmp312 false                           ...
  600:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label312                                              Actions.mnd: if unitItem != null and unitItem != item then
  601:  sensor *tmp314 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  602:  op lessThan *tmp315 *tmp314 30                               ...
  603:  sensor *tmp316 :fetchBlock:block :fetchBlock:item            ...
  604:  op land *tmp317 *tmp315 *tmp316                              ...
  605:  jump *label309 notEqual *tmp317 false                        Actions.mnd: do
  606:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  607:  set :depositItems:item :fetchBlock:item                      ...
  608:  setaddr :depositItems*retaddr *label314                      ...
  609:  call *label10 *invalid :depositItems*retval                  ...
        label *label314                                              ...
  610:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label20                                               CoreBuilder.mnd: void supplyBase0()
  611:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  612:  jump *label317 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  613:  sensor *tmp320 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  614:  jump *label319 greaterThanEq *tmp320 .targetGraphite         ...
  615:  sensor *tmp323 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  616:  jump *label321 greaterThanEq *tmp323 5                       ...
  617:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  618:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  619:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  620:  write .press .display ".block2"                              Actions.mnd: display.block2 = block;
  621:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  622:  sensor *tmp327 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  623:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  624:  jump *label326 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  625:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  626:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  627:  set :mineOre:block .press                                    ...
  628:  setaddr :mineOre*retaddr *label328                           ...
  629:  call *label12 *invalid :mineOre*retval                       ...
        label *label328                                              ...
        label *label326                                              CoreBuilder.mnd: if missing > 0 then
  630:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label321                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label319                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  631:  sensor *tmp331 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  632:  jump *label329 greaterThanEq *tmp331 .targetSilicon          ...
  633:  sensor *tmp334 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  634:  jump *label331 greaterThanEq *tmp334 5                       ...
  635:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  636:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  637:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  638:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  639:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  640:  sensor *tmp338 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  641:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  642:  jump *label336 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  643:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  644:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  645:  set :mineOre:block .smelter                                  ...
  646:  setaddr :mineOre*retaddr *label338                           ...
  647:  call *label12 *invalid :mineOre*retval                       ...
        label *label338                                              ...
        label *label336                                              CoreBuilder.mnd: if missing > 0 then
  648:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  649:  jump *label332 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label331                                              ...
  650:  sensor *tmp342 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  651:  jump *label339 greaterThanEq *tmp342 5                       ...
  652:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  653:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  654:  write @sand .display ".item2"                                Actions.mnd: display.item2  = item;
  655:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  656:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  657:  sensor *tmp346 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  658:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  659:  jump *label344 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  660:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  661:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  662:  set :mineOre:block .smelter                                  ...
  663:  setaddr :mineOre*retaddr *label346                           ...
  664:  call *label12 *invalid :mineOre*retval                       ...
        label *label346                                              ...
        label *label344                                              CoreBuilder.mnd: if missing > 0 then
  665:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label339                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label332                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label329                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  666:  sensor *tmp350 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  667:  jump *label347 greaterThanEq *tmp350 .powerTarget            ...
  668:  sensor *tmp353 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  669:  jump *label349 greaterThanEq *tmp353 2                       ...
  670:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  671:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  672:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  673:  write .generator .display ".block2"                          Actions.mnd: display.block2 = block;
  674:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  675:  sensor *tmp357 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  676:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  677:  jump *label354 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  678:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  679:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  680:  set :mineOre:block .generator                                ...
  681:  setaddr :mineOre*retaddr *label356                           ...
  682:  call *label12 *invalid :mineOre*retval                       ...
        label *label356                                              ...
        label *label354                                              CoreBuilder.mnd: if missing > 0 then
  683:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label349                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label347                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label317                                              CoreBuilder.mnd: if unloader1 == null then
  684:  set *tmp363 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  685:  sensor *tmp361 .core @titanium                               ...
  686:  jump *label358 greaterThanEq *tmp361 .targetTitanium         ...
  687:  sensor *tmp364 .core @titanium                               ...
  688:  op sub *tmp365 .targetTitanium *tmp364                       ...
  689:  op min *tmp363 7 *tmp365                                     ...
        label *label358                                              ...
  690:  sensor *tmp367 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  691:  jump *label359 greaterThanEq *tmp367 *tmp363                 ...
  692:  jump *label360 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  693:  sensor *tmp372 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  694:  op mul *tmp373 .unloader1 .powerTarget                       ...
  695:  jump *label363 greaterThanEq *tmp372 *tmp373                 ...
  696:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  697:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  698:  setaddr :mineOre.1*retaddr *label366                         ...
  699:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label366                                              ...
  700:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label363                                              ...
  701:  sensor *tmp376 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  702:  jump *label367 greaterThanEq *tmp376 .targetSilicon          ...
  703:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  704:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  705:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  706:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  707:  jump *label371 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  708:  set :mineOre.1:ore @coal                                     ...
        label *label371                                              ...
  709:  setaddr :mineOre.1*retaddr *label372                         CoreBuilder.mnd: mineOre(ore);
  710:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label372                                              ...
  711:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label367                                              ...
  712:  sensor *tmp383 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  713:  jump *label373 greaterThanEq *tmp383 .targetCopper           ...
  714:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  715:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  716:  setaddr :mineOre.1*retaddr *label376                         ...
  717:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label376                                              ...
  718:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label373                                              ...
  719:  sensor *tmp386 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  720:  jump *label377 greaterThanEq *tmp386 .targetLead             ...
  721:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  722:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  723:  setaddr :mineOre.1*retaddr *label380                         ...
  724:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label380                                              ...
  725:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label377                                              ...
  726:  sensor *tmp389 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  727:  jump *label381 greaterThanEq *tmp389 .targetMetaglass        ...
  728:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  729:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  730:  setaddr :mineOre.1*retaddr *label384                         ...
  731:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label384                                              ...
  732:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label381                                              ...
  733:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  734:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  735:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  736:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  737:  jump *label387 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  738:  set :mineOre.1:ore @coal                                     ...
        label *label387                                              ...
  739:  setaddr :mineOre.1*retaddr *label388                         CoreBuilder.mnd: mineOre(ore);
  740:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label388                                              ...
  741:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label359                                              ...
  742:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  743:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  744:  set :fetchBlock:item @titanium                               ...
  745:  setaddr :fetchBlock*retaddr *label390                        ...
  746:  call *label14 *invalid :fetchBlock*retval                    ...
        label *label390                                              ...
        label *label360                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  747:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label21                                               CoreBuilder.mnd: void supplyBase1()
  748:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  749:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  750:  setaddr :mineOre.1*retaddr *label393                         ...
  751:  call *label13 *invalid :mineOre.1*retval                     ...
        label *label393                                              ...
  752:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label22                                               CoreBuilder.mnd: void supplyBase()
  753:  jump *label395 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  754:  read *tmp72 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  755:  jump *label397 lessThanEq *tmp72 0                           ...
  756:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  757:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  758:  write .titaniumDrill .flareController ":start:drill"         ...
  759:  write false .flareController ":start*finished"               ...
  760:  write 3 .flareController "@counter"                          ...
        label *label397                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label395                                              CoreBuilder.mnd: if !flareControllerStarted then
  761:  read *tmp73 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  762:  jump *label399 lessThanEq *tmp73 3                           ...
  763:  setaddr :supplyBase1*retaddr *label401                       CoreBuilder.mnd: supplyBase1();
  764:  call *label21 *invalid :supplyBase1*retval                   ...
        label *label401                                              ...
  765:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label399                                              ...
  766:  setaddr :supplyBase0*retaddr *label402                       CoreBuilder.mnd: supplyBase0();
  767:  call *label20 *invalid :supplyBase0*retval                   ...
        label *label402                                              ...
  768:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label23                                               CoreBuilder.mnd: def targetMet()
  769:  sensor *tmp404 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  770:  jump *label404 lessThan *tmp404 .targetCopper                ...
  771:  sensor *tmp407 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  772:  jump *label406 lessThan *tmp407 .targetLead                  ...
  773:  sensor *tmp410 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  774:  jump *label408 lessThan *tmp410 .targetGraphite              ...
  775:  sensor *tmp413 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  776:  jump *label410 lessThan *tmp413 .targetSilicon               ...
  777:  sensor *tmp416 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  778:  jump *label412 lessThan *tmp416 .targetTitanium              ...
  779:  sensor *tmp419 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  780:  jump *label414 lessThan *tmp419 .targetMetaglass             ...
  781:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  782:  return :targetMet*retaddr                                    ...
        label *label414                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label412                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label410                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label408                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label406                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label404                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  783:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  784:  return :targetMet*retaddr                                    ...
        label *label24                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  785:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  786:  op sign *tmp423 :meetTarget:lead 0                           ...
  787:  op add :meetTarget:count :meetTarget:count *tmp423           ...
  788:  op sign *tmp423 :meetTarget:graphite 0                       ...
  789:  op add :meetTarget:count :meetTarget:count *tmp423           ...
  790:  op sign *tmp423 :meetTarget:silicon 0                        ...
  791:  op add :meetTarget:count :meetTarget:count *tmp423           ...
  792:  op sign *tmp423 :meetTarget:titanium 0                       ...
  793:  op add :meetTarget:count :meetTarget:count *tmp423           ...
  794:  op sign *tmp423 :meetTarget:metaglass 0                      ...
  795:  op add :meetTarget:count :meetTarget:count *tmp423           ...
  796:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  797:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  798:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  799:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  800:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  801:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  802:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  803:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  804:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  805:  op add *tmp424 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  806:  op add .targetLead *tmp424 1                                 ...
  807:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  808:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  809:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  810:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  811:  op add *tmp426 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  812:  write *tmp426 .controller ".pressTarget"                     ...
  813:  op add *tmp427 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  814:  write *tmp427 .controller ".smelterTarget"                   ...
  815:  op add *tmp428 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  816:  write *tmp428 .controller ".kilnTarget"                      ...
  817:  write *tmp424 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  818:  op sign *tmp430 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  819:  op mul *tmp431 *tmp430 20                                    ...
  820:  op add *tmp432 :meetTarget:silicon *tmp431                   ...
  821:  write *tmp432 .controller ".siliconReserve"                  ...
  822:  setaddr :targetMet*retaddr *label429                         CoreBuilder.mnd: while !targetMet() do
  823:  call *label23 *invalid :targetMet*retval                     ...
        label *label429                                              ...
  824:  jump *label428 notEqual :targetMet*retval false              ...
        label *label522                                              ...
  825:  setaddr :supplyBase*retaddr *label430                        CoreBuilder.mnd: supplyBase();
  826:  call *label22 *invalid :supplyBase*retval                    ...
        label *label430                                              ...
  827:  setaddr :targetMet*retaddr *label523                         CoreBuilder.mnd: while !targetMet() do
  828:  call *label23 *invalid :targetMet*retval                     ...
        label *label523                                              ...
  829:  jump *label522 equal :targetMet*retval false                 ...
        label *label428                                              ...
  830:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label25                                               CoreBuilder.mnd: void log(encodedId)
  831:  read *tmp90 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  832:  op sub *tmp434 *tmp90 1                                      ...
  833:  write *tmp434 bank1 511                                      ...
  834:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  835:  op floor *tmp438 :second:result 0                            CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  836:  op mul *tmp439 *tmp438 1000                                  ...
  837:  op add *tmp440 :log:encodedId *tmp439                        ...
  838:  write *tmp440 bank1 *tmp434                                  ...
  839:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label26                                               CoreBuilder.mnd: void logBlock(block)
  840:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  841:  setaddr :log*retaddr *label434                               ...
  842:  call *label25 *invalid :log*retval                           ...
        label *label434                                              ...
  843:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label27                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  844:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  845:  set :moveTo.1:y :buildBlockAt:y                              ...
  846:  setaddr :moveTo.1*retaddr *label436                          ...
  847:  call *label7 *invalid :moveTo.1*retval                       ...
        label *label436                                              ...
  848:  write "Building..." .display ".status3"                      Actions.mnd: display.status3 = text;
  849:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  850:  jump *label438 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  851:  jump *label440 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  852:  set :buildBlockAt*retval :buildBlockAt:building              ...
  853:  return :buildBlockAt*retaddr                                 ...
        label *label440                                              ...
  854:  jump *label442 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  855:  set :buildBlockAt*retval null                                ...
  856:  return :buildBlockAt*retaddr                                 ...
        label *label442                                              ...
  857:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  858:  stop                                                         Actions.mnd: stopProcessor();
        label *label438                                              CoreBuilder.mnd: if building != null then
  859:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  860:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label445                                              CoreBuilder.mnd: do
  861:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  862:  jump *label448 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  863:  set :buildBlockAt*retval null                                ...
  864:  return :buildBlockAt*retaddr                                 ...
        label *label448                                              ...
  865:  jump *label445 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  866:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  867:  setaddr :logBlock*retaddr *label450                          ...
  868:  call *label26 *invalid :logBlock*retval                      ...
        label *label450                                              ...
  869:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  870:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label28                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  871:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  872:  set :meetTarget:copper :buildBlock:copper                    ...
  873:  set :meetTarget:lead :buildBlock:lead                        ...
  874:  set :meetTarget:graphite :buildBlock:graphite                ...
  875:  set :meetTarget:silicon :buildBlock:silicon                  ...
  876:  set :meetTarget:titanium :buildBlock:titanium                ...
  877:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  878:  setaddr :meetTarget*retaddr *label452                        ...
  879:  call *label24 *invalid :meetTarget*retval                    ...
        label *label452                                              ...
  880:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  881:  set :buildBlockAt:x :buildBlock:x                            ...
  882:  set :buildBlockAt:y :buildBlock:y                            ...
  883:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  884:  set :buildBlockAt:config :buildBlock:config                  ...
  885:  set :buildBlockAt:skipError false                            ...
  886:  setaddr :buildBlockAt*retaddr *label453                      ...
  887:  call *label27 *invalid :buildBlockAt*retval                  ...
        label *label453                                              ...
  888:  set :buildBlock*retval :buildBlockAt*retval                  ...
  889:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label30                                               CoreBuilder.mnd: def findUnits(type, out count)
  890:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  891:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  892:  set :findUnits:firstUnit @unit                               ...
  893:  jump *label486 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label488                                              CoreBuilder.mnd: do
  894:  op add :findUnits:count :findUnits:count 1                   ...
  895:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  896:  jump *label488 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label486                                              CoreBuilder.mnd: if firstUnit != null then
  897:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  898:  return :findUnits*retaddr                                    ...
        label *label31                                               CoreBuilder.mnd: void buildUnits()
  899:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  900:  set :meetTarget:copper 0                                     ...
  901:  set :meetTarget:lead 0                                       ...
  902:  set :meetTarget:graphite 0                                   ...
  903:  set :meetTarget:silicon 0                                    ...
  904:  set :meetTarget:titanium 0                                   ...
  905:  set :meetTarget:metaglass 0                                  ...
  906:  setaddr :meetTarget*retaddr *label492                        ...
  907:  call *label24 *invalid :meetTarget*retval                    ...
        label *label492                                              ...
  908:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  909:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  910:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  911:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  912:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()


Performance: parsed in 951 ms, compiled in 463 ms, optimized in 4,437 ms, run in 3 ms.
