  1442 instructions before optimizations.
    66 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   119 instructions eliminated by Dead Code Elimination (10 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    35 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   167 instructions eliminated by Data Flow Optimization (22 passes, 72 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     4 instructions eliminated by Loop Unrolling (31 iterations).
     2 loops unrolled by Loop Unrolling.
     3 instructions added by Function Inlining (31 iterations).
    43 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     3 calls threaded by Jump Threading.
    21 instructions eliminated by Unreachable Code Elimination (2 iterations).
   975 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  * Unroll iteration loop at CoreBuilder.mnd:344:5               size   -67, benefit      135.0, efficiency   Infinity (-37 instructions)
    Unroll iteration loop at CoreBuilder.mnd:176:5               size   -13, benefit     1080.0, efficiency   Infinity
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +181, benefit      280.0, efficiency      1.547
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:415:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:301:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +91, benefit      238.0, efficiency      2.615
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  * Unroll iteration loop at CoreBuilder.mnd:176:5               size   -13, benefit     1080.0, efficiency   Infinity (-10 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +181, benefit      280.0, efficiency      1.547
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:415:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:301:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +91, benefit      238.0, efficiency      2.615
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity (-29 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:415:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity (-6 instructions)
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:415:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +133, benefit     3000.0, efficiency     22.556
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     5308.6, efficiency    129.478
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +21, benefit      562.5, efficiency     26.786
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +21, benefit     2812.5, efficiency    133.929
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
  ! Inline function call at Actions.mnd:124:5                    size   +21, benefit     1933.6, efficiency     92.076
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 3):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity (-8 instructions)
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 11):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 10):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 9):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     5308.6, efficiency    108.339
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +25, benefit      562.5, efficiency     22.500
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +25, benefit     2812.5, efficiency    112.500
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +25, benefit     1933.6, efficiency     77.344

Pass 1: speed optimization selection (cost limit 8):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     5308.6, efficiency    104.090
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +26, benefit      562.5, efficiency     21.635
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +26, benefit     2812.5, efficiency    108.173
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +26, benefit     1933.6, efficiency     74.369

Pass 1: speed optimization selection (cost limit 10):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     5308.6, efficiency   5308.594 (-7 instructions)
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 17):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2812.5, efficiency     90.726
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:415:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +32, benefit     2250.0, efficiency     70.313
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +32, benefit      562.5, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 19):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     3401.4, efficiency   1133.789 (-11 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:415:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
  ! Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 30):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447 (-8 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:415:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
  ! Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:415:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
  * Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344 (+3 instructions)
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 35):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:415:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 35):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324 (-3 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:415:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2175.3, efficiency     58.792
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:415:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
  * Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625 (+5 instructions)
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +164, benefit     3000.0, efficiency     18.293
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 33):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:415:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  * Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188 (+21 instructions)
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +169, benefit     3000.0, efficiency     17.751
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 12):
    Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:415:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136 (+10 instructions)
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +169, benefit     3000.0, efficiency     17.751
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 2):
  * Replicate loop condition at CoreBuilder.mnd:409:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:415:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +179, benefit     3000.0, efficiency     16.760
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 1):
  * Replicate loop condition at CoreBuilder.mnd:414:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:415:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +179, benefit     3000.0, efficiency     16.760
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:415:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:437:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +179, benefit     3000.0, efficiency     16.760
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 2: speed optimization selection (cost limit 7):
  * Replicate loop condition at CoreBuilder.mnd:433:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +91, benefit      120.0, efficiency      1.319
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 2: speed optimization selection (cost limit 6):
  * Replicate loop condition at CoreBuilder.mnd:443:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +91, benefit      120.0, efficiency      1.319
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 2: speed optimization selection (cost limit 5):
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +91, benefit      120.0, efficiency      1.319
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  * Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 2: speed optimization selection (cost limit 3):
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size  +114, benefit      124.0, efficiency      1.088
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  * Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 2: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size  +137, benefit      128.0, efficiency      0.934
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +68, benefit       84.0, efficiency      1.235
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 3: speed optimization selection (cost limit 1):
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size  +137, benefit      128.0, efficiency      0.934
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +68, benefit       84.0, efficiency      1.235
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:490:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:504:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +159, benefit      280.0, efficiency      1.761
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +113, benefit     3757.3, efficiency     33.251
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:350:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:352:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:365:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:378:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:382:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:383:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:394:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:396:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:407:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:410:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:415:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:434:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:437:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:444:9                size  +176, benefit       75.0, efficiency      0.426
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:480:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:486:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      316.4, efficiency      8.326
  ! Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:301:5                size   +80, benefit       28.0, efficiency      0.350
  ! Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  ! Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +176, benefit     3000.0, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:213:5                size   +80, benefit      238.0, efficiency      2.975
  ! Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-91 instructions):
 
    29 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    30 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    31 label *label47
-    * set *tmp117 :buildBlockFromCfg.1*retval
    32 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    33 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    34 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    35 label *label48
-    * set *tmp118 :buildBlockFromCfg.1*retval
    36 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    37 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    38 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    39 label *label49
-    * set *tmp119 :buildBlockFromCfg.1*retval
    40 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    41 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    42 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    43 label *label50
-    * set *tmp120 :buildBlockFromCfg.1*retval
    44 set .powerTarget 400
    45 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
    46 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    47 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    48 label *label51
-    * set *tmp121 :buildBlockFromCfg.1*retval
    49 set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"
    50 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    51 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    52 label *label52
-    * set *tmp122 :buildBlockFromCfg.1*retval
    53 set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
    54 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    55 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
 
    81 setaddr :error*retaddr *label58 (h:*label58)
    82 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    83 label *label58
-    * set *tmp137 null
    84 jump *label57 always
    85 label *label56
-    * set *tmp137 null
    86 label *label57
    87 write @pneumatic-drill .display ".nextBlock"
    88 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   104 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   105 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   106 label *label60
-    * set *tmp142 :buildBlockFromCfg.1*retval
   107 set :buildBlockFromCfg.1:cfg "A{HNJR-inverted-sorter8"
   108 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   109 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   110 label *label61
-    * set *tmp143 :buildBlockFromCfg.1*retval
   111 set :buildBlockFromCfg.1:cfg "A~JPJS-overflow-gate9"
   112 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   113 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
   114 label *label62
-    * set *tmp144 :buildBlockFromCfg.1*retval
   115 set .graphiteSurplus 100
   116 set :buildBlockFromCfg:cfg "AÕFFJT-micro-processor10"
   117 set :buildBlockFromCfg:config processor2
 
   269 setaddr :buildBlockFromCfg.1*retaddr *label101 (h:*label101)
   270 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label101) (h:*label101)
   271 label *label101
-    * set *tmp148 :buildBlockFromCfg.1*retval
   272 set :buildBlockFromCfg.1:cfg "A©FHJV-unloader12"
   273 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
   274 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label102) (h:*label102)
   275 label *label102
-    * set *tmp149 :buildBlockFromCfg.1*retval
   276 set :buildBlockFromCfg.1:cfg "A¾BHMW-air-factory13"
   277 setaddr :buildBlockFromCfg.1*retaddr *label103 (h:*label103)
   278 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   279 label *label103
-    * set *tmp150 :buildBlockFromCfg.1*retval
   280 set :setFlareTarget:target 1
   281 write :setFlareTarget:target .controller ".flareTarget"
   282 write :setFlareTarget:target .display ".flareTarget"
 
   301 op lessThan *tmp152 *tmp151 300
   302 jump *label111 equal *tmp152 false
   303 jump *label109 always
-    * set *tmp153 null
   304 jump *label112 always
   305 label *label111
-    * set *tmp153 null
   306 label *label112
   307 label *label108
   308 read *tmp82 .controller ".monos"
 
   314 setaddr :buildBlockFromCfg.1*retaddr *label113 (h:*label113)
   315 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label113) (h:*label113)
   316 label *label113
-    * set *tmp155 :buildBlockFromCfg.1*retval
   317 set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"
   318 setaddr :buildBlockFromCfg.1*retaddr *label114 (h:*label114)
   319 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label114) (h:*label114)
   320 label *label114
-    * set *tmp156 :buildBlockFromCfg.1*retval
   321 set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"
   322 setaddr :buildBlockFromCfg.1*retaddr *label115 (h:*label115)
   323 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label115) (h:*label115)
   324 label *label115
-    * set *tmp157 :buildBlockFromCfg.1*retval
   325 set :buildBlockFromCfg.1:cfg "A¡ASJ[-water-extractor17"
   326 setaddr :buildBlockFromCfg.1*retaddr *label116 (h:*label116)
   327 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label116) (h:*label116)
   328 label *label116
-    * set *tmp158 :buildBlockFromCfg.1*retval
   329 set :buildBlockFromCfg:cfg "A©BLJ\-unloader18"
   330 set :buildBlockFromCfg:config @coal
   331 setaddr :buildBlockFromCfg*retaddr *label117 (h:*label117)
   332 call *label37 *invalid :buildBlockFromCfg*retval (m:*label117) (h:*label117)
   333 label *label117
-    * set *tmp159 :buildBlockFromCfg*retval
   334 set :buildBlockFromCfg.1:cfg "AAOJ]-steam-generator19"
   335 setaddr :buildBlockFromCfg.1*retaddr *label118 (h:*label118)
   336 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label118) (h:*label118)
   337 label *label118
-    * set *tmp160 :buildBlockFromCfg.1*retval
   338 set :buildBlockFromCfg.1:cfg "AKFRJ^-multi-press20"
   339 setaddr :buildBlockFromCfg.1*retaddr *label119 (h:*label119)
   340 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label119) (h:*label119)
   341 label *label119
-    * set *tmp161 :buildBlockFromCfg.1*retval
   342 set .graphiteSurplus 150
   343 set :buildBlockFromCfg.1:cfg "AÇBBJ_-payload-router21"
   344 setaddr :buildBlockFromCfg.1*retaddr *label120 (h:*label120)
   345 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label120) (h:*label120)
   346 label *label120
-    * set *tmp162 :buildBlockFromCfg.1*retval
   347 set :buildBlockFromCfg.1:cfg "A©HFJ`-unloader22"
   348 setaddr :buildBlockFromCfg.1*retaddr *label121 (h:*label121)
   349 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label121) (h:*label121)
   350 label *label121
-    * set *tmp163 :buildBlockFromCfg.1*retval
   351 set :buildBlockFromCfg.1:cfg "AÀHBJa-additive-reconstructor23"
   352 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   353 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
   354 label *label122
-    * set *tmp164 :buildBlockFromCfg.1*retval
   355 set :buildBlockFromCfg.1:cfg "ATNJb-battery-large24"
   356 setaddr :buildBlockFromCfg.1*retaddr *label123 (h:*label123)
   357 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label123) (h:*label123)
   358 label *label123
-    * set *tmp165 :buildBlockFromCfg.1*retval
   359 setaddr :buildUnits*retaddr *label124 (h:*label124)
   360 call *label40 *invalid :buildUnits*retval (m:*label124) (h:*label124)
   361 label *label124
 
   369 setaddr :buildBlockFromCfg.1*retaddr *label126 (h:*label126)
   370 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label126) (h:*label126)
   371 label *label126
-    * set *tmp166 :buildBlockFromCfg.1*retval
   372 set :buildBlockFromCfg.1:cfg "A{PJJg-inverted-sorter29"
   373 setaddr :buildBlockFromCfg.1*retaddr *label127 (h:*label127)
   374 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label127) (h:*label127)
   375 label *label127
-    * set *tmp167 :buildBlockFromCfg.1*retval
   376 set :buildBlockFromCfg.1:cfg "A{PHJh-inverted-sorter30"
   377 setaddr :buildBlockFromCfg.1*retaddr *label128 (h:*label128)
   378 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label128) (h:*label128)
   379 label *label128
-    * set *tmp168 :buildBlockFromCfg.1*retval
   380 set :buildBlockFromCfg:cfg "A©PPJi-unloader31"
   381 set :buildBlockFromCfg:config @sand
   382 setaddr :buildBlockFromCfg*retaddr *label129 (h:*label129)
   383 call *label37 *invalid :buildBlockFromCfg*retval (m:*label129) (h:*label129)
   384 label *label129
-    * set *tmp169 :buildBlockFromCfg*retval
   385 setaddr :buildUnits*retaddr *label130 (h:*label130)
   386 call *label40 *invalid :buildUnits*retval (m:*label130) (h:*label130)
   387 label *label130
 
   466 setaddr :error*retaddr *label149 (h:*label149)
   467 call *label13 *invalid :error*retval (m:*label149) (h:*label149)
   468 label *label149
-    * set *tmp194 null
   469 jump *label148 always
   470 label *label147
-    * set *tmp194 null
   471 label *label148
   472 write @laser-drill .blockBuilder ":buildBlockAt:block"
   473 read *tmp53 .oreLocator ".drillX"
 
   493 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   494 call *label36 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   495 label *label151
-    * set *tmp203 :buildRemoteBlock*retval
   496 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
   497 read *tmp59 .oreLocator ".water2X"
   498 set :buildRemoteBlock:x *tmp59
 
   501 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
   502 call *label36 *invalid :buildRemoteBlock*retval (m:*label152) (h:*label152)
   503 label *label152
-    * set *tmp204 :buildRemoteBlock*retval
   504 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
   505 read *tmp61 .oreLocator ".generatorX"
   506 set :buildRemoteBlock:x *tmp61
 
   519 setaddr :buildRemoteBlock*retaddr *label154 (h:*label154)
   520 call *label36 *invalid :buildRemoteBlock*retval (m:*label154) (h:*label154)
   521 label *label154
-    * set *tmp206 :buildRemoteBlock*retval
   522 set :buildRemoteBlock:cfg "AFJJU-power-node11"
   523 read *tmp65 .oreLocator ".node2X"
   524 set :buildRemoteBlock:x *tmp65
 
   527 setaddr :buildRemoteBlock*retaddr *label155 (h:*label155)
   528 call *label36 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   529 label *label155
-    * set *tmp207 :buildRemoteBlock*retval
   530 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
   531 read *tmp67 .oreLocator ".panelX"
   532 set :buildRemoteBlock:x *tmp67
 
   535 setaddr :buildRemoteBlock*retaddr *label156 (h:*label156)
   536 call *label36 *invalid :buildRemoteBlock*retval (m:*label156) (h:*label156)
   537 label *label156
-    * set *tmp208 :buildRemoteBlock*retval
   538 set :buildRemoteBlock:cfg "AJTJK-battery1"
   539 read *tmp69 .oreLocator ".batteryX"
   540 set :buildRemoteBlock:x *tmp69
 
   558 op equal *tmp211 .thoriumContainer null
   559 jump *label159 equal *tmp211 false
   560 set .thoriumContainer .thoriumDrill
-    * set *tmp212 .thoriumContainer
   561 jump *label160 always
   562 label *label159
-    * set *tmp212 null
   563 label *label160
   564 write .thoriumDrill .display ".thoriumDrill"
   565 write .thoriumContainer .display ".thoriumContainer"
 
   591 setaddr :buildBlockFromCfg*retaddr *label167 (h:*label167)
   592 call *label37 *invalid :buildBlockFromCfg*retval (m:*label167) (h:*label167)
   593 label *label167
-    * set *tmp216 :buildBlockFromCfg*retval
   594 set :buildBlockFromCfg.1:cfg "AÁPBJk-multiplicative-reconstructor33"
   595 setaddr :buildBlockFromCfg.1*retaddr *label168 (h:*label168)
   596 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label168) (h:*label168)
   597 label *label168
-    * set *tmp217 :buildBlockFromCfg.1*retval
   598 set .metaglassSurplus 50
   599 setaddr :buildUnits*retaddr *label169 (h:*label169)
   600 call *label40 *invalid :buildUnits*retval (m:*label169) (h:*label169)
 
   698 label *label197
   699 set *tmp237 null
   700 label *label195
-    * set *tmp234 *tmp237
   701 jump *label193 always
   702 label *label192
-    * set *tmp234 null
   703 label *label193
   704 set :fetchBlock:block .thoriumContainer
   705 set :fetchBlock:item @thorium
 
   707 call *label23 *invalid :fetchBlock*retval (m:*label198) (h:*label198)
   708 label *label198
   709 label *label190
-    * set *tmp231 null
   710 jump *label189 always
   711 label *label188
   712 read *tmp82 .controller ".monos"
 
   748 label *label209
   749 set *tmp247 null
   750 label *label210
-    * set *tmp244 *tmp247
   751 jump *label208 always
   752 label *label207
-    * set *tmp244 null
   753 label *label208
   754 sensor *tmp248 .core @silicon
   755 op lessThan *tmp249 *tmp248 .targetSilicon
 
   790 label *label220
   791 set *tmp253 *tmp256
   792 label *label216
-    * set *tmp250 *tmp253
   793 jump *label214 always
   794 label *label213
-    * set *tmp250 null
   795 label *label214
   796 sensor *tmp257 AJTJK-battery1 @totalPower
   797 op lessThan *tmp258 *tmp257 .powerTarget
 
   819 label *label223
   820 set *tmp259 null
   821 label *label224
-    * set *tmp241 *tmp259
   822 jump *label206 always
   823 label *label205
-    * set *tmp241 null
   824 label *label206
   825 sensor *tmp263 .core @titanium
   826 op lessThan *tmp264 *tmp263 .targetTitanium
 
   957 label *label233
   958 set *tmp273 null
   959 label *label234
-    * set *tmp271 *tmp273
   960 jump *label232 always
   961 label *label231
   962 set :status1:text "Goal 11: Fetching titanium"
 
   968 setaddr :fetchBlock*retaddr *label262 (h:*label262)
   969 call *label23 *invalid :fetchBlock*retval (m:*label262) (h:*label262)
   970 label *label262
-    * set *tmp271 null
   971 label *label232
   972 label *label204
   973 set *tmp239 null
   974 label *label200
-    * set *tmp231 *tmp239
   975 label *label189
   976 label *label187
   977 return :supplyBase*retaddr
 
  1012 label *label267
  1013 set :buildRemoteBlock*retval :buildBlock*retval
  1014 jump *label263 always
-    * set *tmp300 null
  1015 jump *label265 always
  1016 label *label264
-    * set *tmp300 null
  1017 label *label265
  1018 set :buildRemoteBlock*retval false
  1019 jump *label263 always
 
  1156 sensor *tmp308 @unit @mining
  1157 jump *label289 equal *tmp308 false
  1158 ucontrol stop
-    * set *tmp309 null
  1159 jump *label290 always
  1160 label *label289
-    * set *tmp309 null
  1161 label *label290
  1162 ubind :lineUpUnits:unit
  1163 label *label287
 
  1222 op land *tmp319 *tmp317 *tmp318
  1223 jump *label303 equal *tmp319 false
  1224 ucontrol itemDrop @air 1000
-    * set *tmp320 null
  1225 jump *label304 always
  1226 label *label303
-    * set *tmp320 null
  1227 label *label304
  1228 label *label301
  1229 sensor *tmp321 @unit :fetchBlock:item
 
  1260 setaddr :mineOre*retaddr *label310 (h:*label310)
  1261 call *label21 *invalid :mineOre*retval (m:*label310) (h:*label310)
  1262 label *label310
-    * set *tmp329 null
  1263 jump *label309 always
  1264 label *label308
-    * set *tmp329 null
  1265 label *label309
  1266 label *label306
  1267 return :supplyBlock*retaddr
 
  1297 op land *tmp335 *tmp333 *tmp334
  1298 jump *label319 equal *tmp335 false
  1299 ucontrol itemDrop @air 1000
-    * set *tmp336 null
  1300 jump *label320 always
  1301 label *label319
-    * set *tmp336 null
  1302 label *label320
  1303 label *label317
  1304 sensor *tmp337 @unit :supplyBlockFromCore:item
 
  1360 sensor *tmp365 :unpackCfg:type @thorium
  1361 set :unpackCfg:th *tmp365
  1362 sensor *tmp366 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp366
  1363 label *label322
  1364 return :unpackCfg*retaddr
  1365 end
 
  1440 jump *label338 equal *tmp383 false
  1441 set *tmp381 false
  1442 jump *label337 always
-    * set *tmp384 null
  1443 jump *label339 always
  1444 label *label338
-    * set *tmp384 null
  1445 label *label339
  1446 sensor *tmp385 .core @lead
  1447 op lessThan *tmp386 *tmp385 .targetLead
  1448 jump *label340 equal *tmp386 false
  1449 set *tmp381 false
  1450 jump *label337 always
-    * set *tmp387 null
  1451 jump *label341 always
  1452 label *label340
-    * set *tmp387 null
  1453 label *label341
  1454 sensor *tmp388 .core @graphite
  1455 op lessThan *tmp389 *tmp388 .targetGraphite
  1456 jump *label342 equal *tmp389 false
  1457 set *tmp381 false
  1458 jump *label337 always
-    * set *tmp390 null
  1459 jump *label343 always
  1460 label *label342
-    * set *tmp390 null
  1461 label *label343
  1462 sensor *tmp391 .core @silicon
  1463 op lessThan *tmp392 *tmp391 .targetSilicon
  1464 jump *label344 equal *tmp392 false
  1465 set *tmp381 false
  1466 jump *label337 always
-    * set *tmp393 null
  1467 jump *label345 always
  1468 label *label344
-    * set *tmp393 null
  1469 label *label345
  1470 sensor *tmp394 .core @titanium
  1471 op lessThan *tmp395 *tmp394 .targetTitanium
  1472 jump *label346 equal *tmp395 false
  1473 set *tmp381 false
  1474 jump *label337 always
-    * set *tmp396 null
  1475 jump *label347 always
  1476 label *label346
-    * set *tmp396 null
  1477 label *label347
  1478 sensor *tmp397 .core @metaglass
  1479 op lessThan *tmp398 *tmp397 .targetMetaglass
  1480 jump *label348 equal *tmp398 false
  1481 set *tmp381 false
  1482 jump *label337 always
-    * set *tmp399 null
  1483 jump *label349 always
  1484 label *label348
-    * set *tmp399 null
  1485 label *label349
  1486 sensor *tmp400 .core @thorium
  1487 op lessThan *tmp401 *tmp400 .targetThorium
  1488 jump *label350 equal *tmp401 false
  1489 set *tmp381 false
  1490 jump *label337 always
-    * set *tmp402 null
  1491 jump *label351 always
  1492 label *label350
-    * set *tmp402 null
  1493 label *label351
  1494 set *tmp381 true
  1495 jump *label337 always
 
  1560 op notEqual *tmp413 *tmp412 null
  1561 jump *label363 equal *tmp413 false
  1562 ucontrol itemDrop @air 1000
-    * set *tmp414 null
  1563 jump *label364 always
  1564 label *label363
-    * set *tmp414 null
  1565 label *label364
  1566 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1567 label *label361
 
  1608 op greaterThan *tmp426 *tmp424 *tmp425
  1609 jump *label374 notEqual *tmp426 false
  1610 label *label376
-    * set *tmp421 null
  1611 jump *label372 always
  1612 label *label371
  1613 label *label377
 
  1618 label *label378
  1619 jump *label377 always
  1620 label *label379
-    * set *tmp421 null
  1621 label *label372
  1622 set :transportStatus:target 0
  1623 set :transportStatus:item null
 
  1652 setaddr :dropAll*retaddr *label387 (h:*label387)
  1653 call *label17 *invalid :dropAll*retval (m:*label387) (h:*label387)
  1654 label *label387
-    * set *tmp432 null
  1655 jump *label386 always
  1656 label *label385
-    * set *tmp432 null
  1657 label *label386
  1658 set :status3:text "Mining..."
  1659 setaddr :status3*retaddr *label388 (h:*label388)
 
  1669 op land *tmp437 *tmp435 *tmp436
  1670 jump *label392 equal *tmp437 false
  1671 jump *label391 always
-    * set *tmp438 null
  1672 jump *label393 always
  1673 label *label392
-    * set *tmp438 null
  1674 label *label393
  1675 ucontrol mine :mineOre:x :mineOre:y
  1676 op greaterThan *tmp439 @second :mineOre:stop
  1677 jump *label394 equal *tmp439 false
  1678 jump *label391 always
-    * set *tmp440 null
  1679 jump *label395 always
  1680 label *label394
-    * set *tmp440 null
  1681 label *label395
  1682 label *label390
  1683 sensor *tmp441 @unit @totalItems
 
  1718 setaddr :error*retaddr *label403 (h:*label403)
  1719 call *label13 *invalid :error*retval (m:*label403) (h:*label403)
  1720 label *label403
-    * set *tmp448 null
  1721 jump *label402 always
  1722 label *label401
-    * set *tmp448 null
  1723 label *label402
  1724 label *label400
  1725 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
   688 setaddr :supplyBlock*retaddr *label196 (h:*label196)
   689 call *label24 *invalid :supplyBlock*retval (m:*label196) (h:*label196)
   690 label *label196
-    * set *tmp237 null
   691 jump *label195 always
   692 label *label194
   693 set :supplyBlockFromCore:target .thoriumGenerator
 
   695 setaddr :supplyBlockFromCore*retaddr *label197 (h:*label197)
   696 call *label25 *invalid :supplyBlockFromCore*retval (m:*label197) (h:*label197)
   697 label *label197
-    * set *tmp237 null
   698 label *label195
   699 jump *label193 always
   700 label *label192
 
   719 call *label22 *invalid :mineOre.1*retval (m:*label203) (h:*label203)
   720 label *label203
   721 label *label201
-    * set *tmp239 null
   722 jump *label200 always
   723 label *label199
   724 set :supplyBase0:supplied false
 
   740 call *label24 *invalid :supplyBlock*retval (m:*label212) (h:*label212)
   741 label *label212
   742 set :supplyBase0:supplied true
-    * set *tmp247 :supplyBase0:supplied
   743 jump *label210 always
   744 label *label209
-    * set *tmp247 null
   745 label *label210
   746 jump *label208 always
   747 label *label207
 
   762 call *label24 *invalid :supplyBlock*retval (m:*label218) (h:*label218)
   763 label *label218
   764 set :supplyBase0:supplied true
-    * set *tmp253 :supplyBase0:supplied
   765 jump *label216 always
   766 label *label215
   767 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
 
   782 label *label219
   783 set *tmp256 null
   784 label *label220
-    * set *tmp253 *tmp256
   785 label *label216
   786 jump *label214 always
   787 label *label213
 
   807 label *label225
   808 set *tmp262 null
   809 label *label226
-    * set *tmp259 *tmp262
   810 jump *label224 always
   811 label *label223
-    * set *tmp259 null
   812 label *label224
   813 jump *label206 always
   814 label *label205
 
   943 label *label240
   944 set *tmp277 *tmp280
   945 label *label236
-    * set *tmp273 *tmp277
   946 jump *label234 always
   947 label *label233
-    * set *tmp273 null
   948 label *label234
   949 jump *label232 always
   950 label *label231
 
   959 label *label262
   960 label *label232
   961 label *label204
-    * set *tmp239 null
   962 label *label200
   963 label *label189
   964 label *label187
 
  1061 setaddr :buildBlockFromCfg*retaddr *label272 (h:*label272)
  1062 call *label37 *invalid :buildBlockFromCfg*retval (m:*label272) (h:*label272)
  1063 label *label272
-    * set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1064 label *label271
  1065 return :buildBlockFromCfg.1*retaddr
  1066 end
 
  1346 set :unpackCfg:mg *tmp364
  1347 sensor *tmp365 :unpackCfg:type @thorium
  1348 set :unpackCfg:th *tmp365
-    * sensor *tmp366 :unpackCfg:type @size
  1349 label *label322
  1350 return :unpackCfg*retaddr
  1351 end

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
   777 call *label24 *invalid :supplyBlock*retval (m:*label222) (h:*label222)
   778 label *label222
   779 set :supplyBase0:supplied true
-    * set *tmp256 :supplyBase0:supplied
   780 jump *label220 always
   781 label *label219
-    * set *tmp256 null
   782 label *label220
   783 label *label216
   784 jump *label214 always
 
   800 call *label24 *invalid :supplyBlock*retval (m:*label228) (h:*label228)
   801 label *label228
   802 set :supplyBase0:supplied true
-    * set *tmp262 :supplyBase0:supplied
   803 jump *label226 always
   804 label *label225
-    * set *tmp262 null
   805 label *label226
   806 jump *label224 always
   807 label *label223
 
   838 setaddr :mineOre.1*retaddr *label238 (h:*label238)
   839 call *label22 *invalid :mineOre.1*retval (m:*label238) (h:*label238)
   840 label *label238
-    * set *tmp277 null
   841 jump *label236 always
   842 label *label235
   843 sensor *tmp278 .core @silicon
 
   936 label *label246
   937 set *tmp280 *tmp287
   938 label *label240
-    * set *tmp277 *tmp280
   939 label *label236
   940 jump *label234 always
   941 label *label233

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   863 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   864 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
   865 label *label244
-    * set *tmp280 null
   866 jump *label240 always
   867 label *label239
   868 sensor *tmp285 .core @copper
 
   933 label *label250
   934 set *tmp287 *tmp290
   935 label *label246
-    * set *tmp280 *tmp287
   936 label *label240
   937 label *label236
   938 jump *label234 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   876 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   877 call *label22 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   878 label *label248
-    * set *tmp287 null
   879 jump *label246 always
   880 label *label245
   881 sensor *tmp288 .core @lead
 
   930 label *label254
   931 set *tmp290 *tmp293
   932 label *label250
-    * set *tmp287 *tmp290
   933 label *label246
   934 label *label240
   935 label *label236

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   889 setaddr :mineOre.1*retaddr *label252 (h:*label252)
   890 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
   891 label *label252
-    * set *tmp290 null
   892 jump *label250 always
   893 label *label249
   894 sensor *tmp291 .core @metaglass
 
   927 label *label260
   928 set *tmp293 null
   929 label *label254
-    * set *tmp290 *tmp293
   930 label *label250
   931 label *label246
   932 label *label240

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   902 setaddr :mineOre.1*retaddr *label256 (h:*label256)
   903 call *label22 *invalid :mineOre.1*retval (m:*label256) (h:*label256)
   904 label *label256
-    * set *tmp293 null
   905 jump *label254 always
   906 label *label253
   907 set :status1:text "Goal 10: supplying base"
 
   924 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   925 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)
   926 label *label260
-    * set *tmp293 null
   927 label *label254
   928 label *label250
   929 label *label246

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-66 instructions):
 
    17 write 511 bank1 511
    18 label *label44
    19 ubind @poly
-    * set *tmp113 @unit
-    * set .builder *tmp113
-    * ulocate building core false @copper .coreX .coreY *tmp115 *tmp114
-    * set .core *tmp114
+   20 set .builder @unit
+   21 ulocate building core false @copper .coreX .coreY *tmp115 .core
    22 label *label45
    23 op equal *tmp116 .core null
    24 jump *label44 notEqual *tmp116 false
 
    67 wait 1e-15
    68 read *tmp134 .oreLocator ":findDrillLocation*finished"
    69 jump *label55 equal *tmp134 false
-    * read *tmp131 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp131
-    * read *tmp132 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp132
-    * read *tmp135 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp135
+   70 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   71 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   72 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    73 op equal *tmp136 :buildFirstTitaniumDrill:result false
    74 jump *label56 equal *tmp136 false
    75 set :error:error "Cannot locate spot for titanium drill"
 
    88 wait 1e-15
    89 read *tmp140 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
    90 jump *label59 equal *tmp140 false
-    * read *tmp141 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp123 *tmp141
+   91 read *tmp123 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
    92 jump *label53 always
    93 set *tmp123 null
    94 label *label53
 
   112 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   113 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   114 label *label63
-    * set *tmp145 :buildBlockFromCfg*retval
-    * set .controller *tmp145
+  115 set .controller :buildBlockFromCfg*retval
   116 write processor6 .controller ".timer"
   117 write .display .controller ".display"
   118 write .core .controller ".core"
 
   409 label *label140
   410 write @ore-titanium .display ".nextBlock"
   411 ubind @flare
-    * read *tmp51 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp51
+  412 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   413 write .coreX .oreLocator ":findDrillLocation:x"
   414 write .coreY .oreLocator ":findDrillLocation:y"
   415 write @unit .oreLocator ":findDrillLocation:unit"
 
   450 wait 1e-15
   451 read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
   452 jump *label146 equal *tmp191 false
-    * read *tmp192 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp192
+  453 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   454 op equal *tmp193 :buildThoriumDrill:result false
   455 jump *label147 equal *tmp193 false
   456 set :error:error "Cannot locate spot for thorium drill"
 
   474 wait 1e-15
   475 read *tmp201 .blockBuilder ":buildBlockAt*finished"
   476 jump *label150 equal *tmp201 false
-    * read *tmp202 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp202
+  477 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   478 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read *tmp55 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp55
-    * read *tmp56 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp56
+  479 read :buildRemoteBlock:x .oreLocator ".water1X"
+  480 read :buildRemoteBlock:y .oreLocator ".water1Y"
   481 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   482 call *label36 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   483 label *label151
   484 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read *tmp59 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp59
-    * read *tmp60 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp60
+  485 read :buildRemoteBlock:x .oreLocator ".water2X"
+  486 read :buildRemoteBlock:y .oreLocator ".water2Y"
   487 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
   488 call *label36 *invalid :buildRemoteBlock*retval (m:*label152) (h:*label152)
   489 label *label152
   490 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
-    * read *tmp61 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp61
-    * read *tmp62 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp62
+  491 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  492 read :buildRemoteBlock:y .oreLocator ".generatorY"
   493 setaddr :buildRemoteBlock*retaddr *label153 (h:*label153)
   494 call *label36 *invalid :buildRemoteBlock*retval (m:*label153) (h:*label153)
   495 label *label153
-    * set *tmp205 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp205
+  496 set .thoriumGenerator :buildRemoteBlock*retval
   497 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read *tmp63 .oreLocator ".node1X"
-    * set :buildRemoteBlock:x *tmp63
-    * read *tmp64 .oreLocator ".node1Y"
-    * set :buildRemoteBlock:y *tmp64
+  498 read :buildRemoteBlock:x .oreLocator ".node1X"
+  499 read :buildRemoteBlock:y .oreLocator ".node1Y"
   500 setaddr :buildRemoteBlock*retaddr *label154 (h:*label154)
   501 call *label36 *invalid :buildRemoteBlock*retval (m:*label154) (h:*label154)
   502 label *label154
   503 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read *tmp65 .oreLocator ".node2X"
-    * set :buildRemoteBlock:x *tmp65
-    * read *tmp66 .oreLocator ".node2Y"
-    * set :buildRemoteBlock:y *tmp66
+  504 read :buildRemoteBlock:x .oreLocator ".node2X"
+  505 read :buildRemoteBlock:y .oreLocator ".node2Y"
   506 setaddr :buildRemoteBlock*retaddr *label155 (h:*label155)
   507 call *label36 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   508 label *label155
   509 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
-    * read *tmp67 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp67
-    * read *tmp68 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp68
+  510 read :buildRemoteBlock:x .oreLocator ".panelX"
+  511 read :buildRemoteBlock:y .oreLocator ".panelY"
   512 setaddr :buildRemoteBlock*retaddr *label156 (h:*label156)
   513 call *label36 *invalid :buildRemoteBlock*retval (m:*label156) (h:*label156)
   514 label *label156
   515 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read *tmp69 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp69
-    * read *tmp70 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp70
+  516 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  517 read :buildRemoteBlock:y .oreLocator ".batteryY"
   518 setaddr :buildRemoteBlock*retaddr *label157 (h:*label157)
   519 call *label36 *invalid :buildRemoteBlock*retval (m:*label157) (h:*label157)
   520 label *label157
-    * set *tmp209 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp209
+  521 set .thoriumBattery :buildRemoteBlock*retval
   522 set :buildRemoteBlock:cfg "A¨JJJe-container27"
-    * read *tmp57 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp57
-    * read *tmp58 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp58
+  523 read :buildRemoteBlock:x .oreLocator ".containerX"
+  524 read :buildRemoteBlock:y .oreLocator ".containerY"
   525 setaddr :buildRemoteBlock*retaddr *label158 (h:*label158)
   526 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   527 label *label158
-    * set *tmp210 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp210
+  528 set .thoriumContainer :buildRemoteBlock*retval
   529 op equal *tmp211 .thoriumContainer null
   530 jump *label159 equal *tmp211 false
   531 set .thoriumContainer .thoriumDrill
 
   603 label *label178
   604 label *label179
   605 jump *label181 equal true false
-    * op sub *tmp224 @thisy 6
-    * set :lineUpUnits:y *tmp224
+  606 op sub :lineUpUnits:y @thisy 6
   607 set :lineUpUnits:unit @mega
   608 setaddr :lineUpUnits*retaddr *label182 (h:*label182)
   609 call *label42 *invalid :lineUpUnits*retval (m:*label182) (h:*label182)
   610 label *label182
-    * op sub *tmp225 @thisy 10
-    * set :lineUpUnits:y *tmp225
+  611 op sub :lineUpUnits:y @thisy 10
   612 set :lineUpUnits:unit @poly
   613 setaddr :lineUpUnits*retaddr *label183 (h:*label183)
   614 call *label42 *invalid :lineUpUnits*retval (m:*label183) (h:*label183)
   615 label *label183
-    * op sub *tmp226 @thisy 14
-    * set :lineUpUnits:y *tmp226
+  616 op sub :lineUpUnits:y @thisy 14
   617 set :lineUpUnits:unit @mono
   618 setaddr :lineUpUnits*retaddr *label184 (h:*label184)
   619 call *label42 *invalid :lineUpUnits*retval (m:*label184) (h:*label184)
   620 label *label184
-    * op sub *tmp227 @thisy 18
-    * set :lineUpUnits:y *tmp227
+  621 op sub :lineUpUnits:y @thisy 18
   622 set :lineUpUnits:unit @flare
   623 setaddr :lineUpUnits*retaddr *label185 (h:*label185)
   624 call *label42 *invalid :lineUpUnits*retval (m:*label185) (h:*label185)
 
   781 jump *label229 equal *tmp264 false
   782 sensor *tmp266 .core @titanium
   783 op sub *tmp267 .targetTitanium *tmp266
-    * op min *tmp268 7 *tmp267
-    * set *tmp265 *tmp268
+  784 op min *tmp265 7 *tmp267
   785 jump *label230 always
   786 label *label229
   787 set *tmp265 100
 
   813 setaddr :status1*retaddr *label241 (h:*label241)
   814 call *label9 *invalid :status1*retval (m:*label241) (h:*label241)
   815 label *label241
-    * sensor *tmp281 .core @coal
-    * set :supplyBase0:coal *tmp281
-    * sensor *tmp282 .core @sand
-    * set :supplyBase0:sand *tmp282
+  816 sensor :supplyBase0:coal .core @coal
+  817 sensor :supplyBase0:sand .core @sand
   818 op lessThan *tmp283 :supplyBase0:coal :supplyBase0:sand
   819 jump *label242 equal *tmp283 false
   820 set *tmp284 @coal
 
   872 setaddr :status1*retaddr *label257 (h:*label257)
   873 call *label9 *invalid :status1*retval (m:*label257) (h:*label257)
   874 label *label257
-    * sensor *tmp294 .core @coal
-    * set :supplyBase0:coal.1 *tmp294
-    * sensor *tmp295 .core @sand
-    * set :supplyBase0:sand.1 *tmp295
+  875 sensor :supplyBase0:coal.1 .core @coal
+  876 sensor :supplyBase0:sand.1 .core @sand
   877 op lessThanEq *tmp296 :supplyBase0:coal.1 :supplyBase0:sand.1
   878 jump *label258 equal *tmp296 false
   879 set *tmp297 @coal
 
  1003 return :buildBlockFromCfg*retaddr
  1004 end
  1005 label *label38
-    * set *tmp303 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp303
+ 1006 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1007 set :buildBlockFromCfg:config null
  1008 setaddr :buildBlockFromCfg*retaddr *label272 (h:*label272)
  1009 call *label37 *invalid :buildBlockFromCfg*retval (m:*label272) (h:*label272)
 
  1061 label *label41
  1062 label *label279
  1063 ubind :flagUnits:unit
-    * set *tmp304 @unit
-    * set :flagUnits:firstUnit *tmp304
+ 1064 set :flagUnits:firstUnit @unit
  1065 label *label280
  1066 op equal *tmp305 :flagUnits:firstUnit null
  1067 jump *label279 notEqual *tmp305 false
 
  1082 ubind :lineUpUnits:unit
  1083 set :lineUpUnits:firstUnit @unit
  1084 label *label286
-    * sensor *tmp307 @unit @flag
-    * set :lineUpUnits:x *tmp307
+ 1085 sensor :lineUpUnits:x @unit @flag
  1086 ucontrol itemDrop @air 1000
  1087 ucontrol move :lineUpUnits:x :lineUpUnits:y
  1088 sensor *tmp308 @unit @mining
 
  1111 setaddr :status2*retaddr *label293 (h:*label293)
  1112 call *label10 *invalid :status2*retval (m:*label293) (h:*label293)
  1113 label *label293
-    * set *tmp311 :mineOre.1:ore
-    * set :mineOre:ore *tmp311
+ 1114 set :mineOre:ore :mineOre.1:ore
  1115 set :mineOre:amount 30
  1116 set :mineOre:block .core
  1117 setaddr :mineOre*retaddr *label294 (h:*label294)
 
  1122 end
  1123 label *label23
  1124 sensor *tmp312 :fetchBlock:block @itemCapacity
-    * op min *tmp313 *tmp312 30
-    * set :transportStatus:target *tmp313
+ 1125 op min :transportStatus:target *tmp312 30
  1126 set :transportStatus:item :fetchBlock:item
  1127 setaddr :transportStatus*retaddr *label296 (h:*label296)
  1128 call *label12 *invalid :transportStatus*retval (m:*label296) (h:*label296)
 
  1145 label *label299
  1146 label *label300
  1147 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp316 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp316
+ 1148 sensor :fetchBlock:unitItem @unit @firstItem
  1149 op notEqual *tmp317 :fetchBlock:unitItem null
  1150 op notEqual *tmp318 :fetchBlock:unitItem :fetchBlock:item
  1151 op land *tmp319 *tmp317 *tmp318
 
  1176 setaddr :status2*retaddr *label307 (h:*label307)
  1177 call *label10 *invalid :status2*retval (m:*label307) (h:*label307)
  1178 label *label307
-    * sensor *tmp325 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp325
+ 1179 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1180 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp327 :supplyBlock:blockCapacity *tmp326
-    * set :supplyBlock:missing *tmp327
+ 1181 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
  1182 op greaterThan *tmp328 :supplyBlock:missing 0
  1183 jump *label308 equal *tmp328 false
  1184 set :mineOre:ore :supplyBlock:ore
 
  1195 end
  1196 label *label25
  1197 sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp331 *tmp330 30
-    * set :transportStatus:target *tmp331
+ 1198 op min :transportStatus:target *tmp330 30
  1199 set :transportStatus:item :supplyBlockFromCore:item
  1200 setaddr :transportStatus*retaddr *label312 (h:*label312)
  1201 call *label12 *invalid :transportStatus*retval (m:*label312) (h:*label312)
 
  1216 label *label315
  1217 label *label316
  1218 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp332 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp332
+ 1219 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1220 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
  1221 op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1222 op land *tmp335 *tmp333 *tmp334
 
  1246 op add :unpackCfg:index :unpackCfg:index 1
  1247 read *tmp342 :unpackCfg:cfg *tmp341
  1248 op sub *tmp343 *tmp342 74
-    * lookup block *tmp344 *tmp343
-    * set :unpackCfg:type *tmp344
+ 1249 lookup block :unpackCfg:type *tmp343
  1250 set *tmp345 :unpackCfg:index
  1251 op add :unpackCfg:index :unpackCfg:index 1
  1252 read *tmp346 :unpackCfg:cfg *tmp345
  1253 op sub *tmp347 *tmp346 74
-    * op div *tmp348 *tmp347 2
-    * set :unpackCfg:x *tmp348
+ 1254 op div :unpackCfg:x *tmp347 2
  1255 set *tmp349 :unpackCfg:index
  1256 op add :unpackCfg:index :unpackCfg:index 1
  1257 read *tmp350 :unpackCfg:cfg *tmp349
  1258 op sub *tmp351 *tmp350 74
-    * op div *tmp352 *tmp351 2
-    * set :unpackCfg:y *tmp352
+ 1259 op div :unpackCfg:y *tmp351 2
  1260 set *tmp353 :unpackCfg:index
  1261 op add :unpackCfg:index :unpackCfg:index 1
  1262 read *tmp354 :unpackCfg:cfg *tmp353
-    * op sub *tmp355 *tmp354 74
-    * set :unpackCfg:rotation *tmp355
+ 1263 op sub :unpackCfg:rotation *tmp354 74
  1264 set *tmp356 :unpackCfg:index
  1265 op add :unpackCfg:index :unpackCfg:index 1
  1266 read *tmp357 :unpackCfg:cfg *tmp356
-    * op sub *tmp358 *tmp357 74
-    * set :unpackCfg:ind *tmp358
-    * sensor *tmp359 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp359
-    * sensor *tmp360 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp360
-    * sensor *tmp361 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp361
-    * sensor *tmp362 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp362
-    * sensor *tmp363 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp363
-    * sensor *tmp364 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp364
-    * sensor *tmp365 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp365
+ 1267 op sub :unpackCfg:ind *tmp357 74
+ 1268 sensor :unpackCfg:cu :unpackCfg:type @copper
+ 1269 sensor :unpackCfg:pb :unpackCfg:type @lead
+ 1270 sensor :unpackCfg:gr :unpackCfg:type @graphite
+ 1271 sensor :unpackCfg:si :unpackCfg:type @silicon
+ 1272 sensor :unpackCfg:ti :unpackCfg:type @titanium
+ 1273 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+ 1274 sensor :unpackCfg:th :unpackCfg:type @thorium
  1275 label *label322
  1276 return :unpackCfg*retaddr
  1277 end
 
  1321 write :meetTarget:thorium .display ".targetThorium"
  1322 set .targetCopper :meetTarget:copper
  1323 op add *tmp369 :meetTarget:lead .leadSurplus
-    * op add *tmp370 *tmp369 1
-    * set .targetLead *tmp370
+ 1324 op add .targetLead *tmp369 1
  1325 set .targetGraphite :meetTarget:graphite
  1326 set .targetSilicon :meetTarget:silicon
  1327 set .targetTitanium :meetTarget:titanium
 
  1441 wait 1e-15
  1442 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1443 jump *label355 equal *tmp410 false
-    * read *tmp411 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp411
+ 1444 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1445 jump *label353 always
  1446 set :buildBlock*retval null
  1447 label *label353
 
  1507 setaddr :moveToBlock*retaddr *label373 (h:*label373)
  1508 call *label18 *invalid :moveToBlock*retval (m:*label373) (h:*label373)
  1509 label *label373
-    * sensor *tmp422 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp422
+ 1510 sensor :depositItems:cap :depositItems:block @itemCapacity
  1511 label *label374
  1512 ucontrol itemDrop :depositItems:block 30
  1513 label *label375
 
  1537 return :depositItems*retaddr
  1538 end
  1539 label *label21
-    * op min *tmp429 :mineOre:amount 30
-    * set :mineOre:amount *tmp429
+ 1540 op min :mineOre:amount :mineOre:amount 30
  1541 set :transportStatus:target :mineOre:amount
  1542 set :transportStatus:item :mineOre:ore
  1543 setaddr :transportStatus*retaddr *label382 (h:*label382)
 
  1567 setaddr :status3*retaddr *label388 (h:*label388)
  1568 call *label11 *invalid :status3*retval (m:*label388) (h:*label388)
  1569 label *label388
-    * op add *tmp433 @second 10
-    * set :mineOre:stop *tmp433
+ 1570 op add :mineOre:stop @second 10
  1571 label *label389
-    * sensor *tmp434 @unit @firstItem
-    * set :mineOre:item *tmp434
+ 1572 sensor :mineOre:item @unit @firstItem
  1573 op notEqual *tmp435 :mineOre:item null
  1574 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1575 op land *tmp437 *tmp435 *tmp436

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   602 call *label41 *invalid :flagUnits*retval (m:*label178) (h:*label178)
   603 label *label178
   604 label *label179
-    * jump *label181 equal true false
   605 op sub :lineUpUnits:y @thisy 6
   606 set :lineUpUnits:unit @mega
   607 setaddr :lineUpUnits*retaddr *label182 (h:*label182)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    20 set .builder @unit
    21 ulocate building core false @copper .coreX .coreY *tmp115 .core
    22 label *label45
-    * op equal *tmp116 .core null
-    * jump *label44 notEqual *tmp116 false
+   23 jump *label44 equal .core null
    24 label *label46
    25 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
    69 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    70 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    71 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp136 :buildFirstTitaniumDrill:result false
-    * jump *label56 equal *tmp136 false
+   72 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    73 set :error:error "Cannot locate spot for titanium drill"
    74 setaddr :error*retaddr *label58 (h:*label58)
    75 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
 
   289 call *label33 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   290 label *label110
   291 sensor *tmp151 AJTJK-battery1 @totalPower
-    * op lessThan *tmp152 *tmp151 300
-    * jump *label111 equal *tmp152 false
+  292 jump *label111 greaterThanEq *tmp151 300
   293 jump *label109 always
   294 jump *label112 always
   295 label *label111
   296 label *label112
   297 label *label108
   298 read *tmp82 .controller ".monos"
-    * op lessThan *tmp154 *tmp82 3
-    * jump *label107 notEqual *tmp154 false
+  299 jump *label107 lessThan *tmp82 3
   300 label *label109
   301 set .siliconSurplus 65
   302 set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"
 
   376 label *label130
   377 label *label131
   378 read *tmp83 .controller ".polys"
-    * op lessThan *tmp170 *tmp83 3
-    * jump *label133 equal *tmp170 false
+  379 jump *label133 greaterThanEq *tmp83 3
   380 setaddr :supplyBase*retaddr *label134 (h:*label134)
   381 call *label33 *invalid :supplyBase*retval (m:*label134) (h:*label134)
   382 label *label134
 
   389 label *label135
   390 label *label136
   391 read *tmp81 .controller ".flares"
-    * op lessThan *tmp171 *tmp81 2
-    * jump *label138 equal *tmp171 false
+  392 jump *label138 greaterThanEq *tmp81 2
   393 setaddr :supplyBase*retaddr *label139 (h:*label139)
   394 call *label33 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   395 label *label139
 
   445 read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
   446 jump *label146 equal *tmp191 false
   447 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp193 :buildThoriumDrill:result false
-    * jump *label147 equal *tmp193 false
+  448 jump *label147 notEqual :buildThoriumDrill:result false
   449 set :error:error "Cannot locate spot for thorium drill"
   450 setaddr :error*retaddr *label149 (h:*label149)
   451 call *label13 *invalid :error*retval (m:*label149) (h:*label149)
 
   519 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   520 label *label158
   521 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp211 .thoriumContainer null
-    * jump *label159 equal *tmp211 false
+  522 jump *label159 notEqual .thoriumContainer null
   523 set .thoriumContainer .thoriumDrill
   524 jump *label160 always
   525 label *label159
 
   541 label *label162
   542 label *label163
   543 read *tmp83 .controller ".polys"
-    * op lessThan *tmp215 *tmp83 5
-    * jump *label165 equal *tmp215 false
+  544 jump *label165 greaterThanEq *tmp83 5
   545 setaddr :supplyBase*retaddr *label166 (h:*label166)
   546 call *label33 *invalid :supplyBase*retval (m:*label166) (h:*label166)
   547 label *label166
 
   563 label *label169
   564 label *label170
   565 read *tmp84 .controller ".megas"
-    * op lessThan *tmp218 *tmp84 1
-    * jump *label172 equal *tmp218 false
+  566 jump *label172 greaterThanEq *tmp84 1
   567 setaddr :supplyBase*retaddr *label173 (h:*label173)
   568 call *label33 *invalid :supplyBase*retval (m:*label173) (h:*label173)
   569 label *label173
 
   634 call *label9 *invalid :status1*retval (m:*label191) (h:*label191)
   635 label *label191
   636 sensor *tmp232 .thoriumBattery @totalPower
-    * op lessThan *tmp233 *tmp232 2000
-    * jump *label192 equal *tmp233 false
+  637 jump *label192 greaterThanEq *tmp232 2000
   638 sensor *tmp235 .core @coal
-    * op lessThan *tmp236 *tmp235 50
-    * jump *label194 equal *tmp236 false
+  639 jump *label194 greaterThanEq *tmp235 50
   640 set :supplyBlock:block .thoriumGenerator
   641 set :supplyBlock:ore @coal
   642 setaddr :supplyBlock*retaddr *label196 (h:*label196)
 
   662 jump *label189 always
   663 label *label188
   664 read *tmp82 .controller ".monos"
-    * op greaterThan *tmp238 *tmp82 3
-    * jump *label199 equal *tmp238 false
+  665 jump *label199 lessThanEq *tmp82 3
   666 set :status1:text "Phase 1: supplying base"
   667 setaddr :status1*retaddr *label202 (h:*label202)
   668 call *label9 *invalid :status1*retval (m:*label202) (h:*label202)
 
   675 jump *label200 always
   676 label *label199
   677 set :supplyBase0:supplied false
-    * op equal *tmp240 A©JNJQ-unloader7 null
-    * jump *label205 equal *tmp240 false
+  678 jump *label205 notEqual A©JNJQ-unloader7 null
   679 sensor *tmp242 .core @graphite
-    * op lessThan *tmp243 *tmp242 .targetGraphite
-    * jump *label207 equal *tmp243 false
+  680 jump *label207 greaterThanEq *tmp242 .targetGraphite
   681 sensor *tmp245 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label209 equal *tmp246 false
+  682 jump *label209 greaterThanEq *tmp245 5
   683 set :status1:text "Goal 1: graphite requirement"
   684 setaddr :status1*retaddr *label211 (h:*label211)
   685 call *label9 *invalid :status1*retval (m:*label211) (h:*label211)
 
   697 label *label207
   698 label *label208
   699 sensor *tmp248 .core @silicon
-    * op lessThan *tmp249 *tmp248 .targetSilicon
-    * jump *label213 equal *tmp249 false
+  700 jump *label213 greaterThanEq *tmp248 .targetSilicon
   701 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp252 *tmp251 5
-    * jump *label215 equal *tmp252 false
+  702 jump *label215 greaterThanEq *tmp251 5
   703 set :status1:text "Goal 2: coal for silicon requirement"
   704 setaddr :status1*retaddr *label217 (h:*label217)
   705 call *label9 *invalid :status1*retval (m:*label217) (h:*label217)
 
   713 jump *label216 always
   714 label *label215
   715 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp255 *tmp254 5
-    * jump *label219 equal *tmp255 false
+  716 jump *label219 greaterThanEq *tmp254 5
   717 set :status1:text "Goal 3: sand for silicon requirement"
   718 setaddr :status1*retaddr *label221 (h:*label221)
   719 call *label9 *invalid :status1*retval (m:*label221) (h:*label221)
 
   732 label *label213
   733 label *label214
   734 sensor *tmp257 AJTJK-battery1 @totalPower
-    * op lessThan *tmp258 *tmp257 .powerTarget
-    * jump *label223 equal *tmp258 false
+  735 jump *label223 greaterThanEq *tmp257 .powerTarget
   736 sensor *tmp260 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp261 *tmp260 2
-    * jump *label225 equal *tmp261 false
+  737 jump *label225 greaterThanEq *tmp260 2
   738 set :status1:text "Goal 4: supplying generator"
   739 setaddr :status1*retaddr *label227 (h:*label227)
   740 call *label9 *invalid :status1*retval (m:*label227) (h:*label227)
 
   755 label *label205
   756 label *label206
   757 sensor *tmp263 .core @titanium
-    * op lessThan *tmp264 *tmp263 .targetTitanium
-    * jump *label229 equal *tmp264 false
+  758 jump *label229 greaterThanEq *tmp263 .targetTitanium
   759 sensor *tmp266 .core @titanium
   760 op sub *tmp267 .targetTitanium *tmp266
   761 op min *tmp265 7 *tmp267
 
   765 label *label230
   766 set :supplyBase0:titaniumTrigger *tmp265
   767 sensor *tmp269 .titaniumDrill @titanium
-    * op lessThan *tmp270 *tmp269 :supplyBase0:titaniumTrigger
-    * jump *label231 equal *tmp270 false
-    * op equal *tmp272 :supplyBase0:supplied false
-    * jump *label233 equal *tmp272 false
+  768 jump *label231 greaterThanEq *tmp269 :supplyBase0:titaniumTrigger
+  769 jump *label233 notEqual :supplyBase0:supplied false
   770 sensor *tmp274 AJTJK-battery1 @totalPower
   771 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
-    * op lessThan *tmp276 *tmp274 *tmp275
-    * jump *label235 equal *tmp276 false
+  772 jump *label235 greaterThanEq *tmp274 *tmp275
   773 set :status1:text "Goal 5: supplying generator"
   774 setaddr :status1*retaddr *label237 (h:*label237)
   775 call *label9 *invalid :status1*retval (m:*label237) (h:*label237)
 
   781 jump *label236 always
   782 label *label235
   783 sensor *tmp278 .core @silicon
-    * op lessThan *tmp279 *tmp278 .targetSilicon
-    * jump *label239 equal *tmp279 false
+  784 jump *label239 greaterThanEq *tmp278 .targetSilicon
   785 set :status1:text "Goal 6: silicon requirement"
   786 setaddr :status1*retaddr *label241 (h:*label241)
   787 call *label9 *invalid :status1*retval (m:*label241) (h:*label241)
   788 label *label241
   789 sensor :supplyBase0:coal .core @coal
   790 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp283 :supplyBase0:coal :supplyBase0:sand
-    * jump *label242 equal *tmp283 false
+  791 jump *label242 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   792 set *tmp284 @coal
   793 jump *label243 always
   794 label *label242
 
   802 jump *label240 always
   803 label *label239
   804 sensor *tmp285 .core @copper
-    * op lessThan *tmp286 *tmp285 .targetCopper
-    * jump *label245 equal *tmp286 false
+  805 jump *label245 greaterThanEq *tmp285 .targetCopper
   806 set :status1:text "Goal 7: copper requirement"
   807 setaddr :status1*retaddr *label247 (h:*label247)
   808 call *label9 *invalid :status1*retval (m:*label247) (h:*label247)
 
   814 jump *label246 always
   815 label *label245
   816 sensor *tmp288 .core @lead
-    * op lessThan *tmp289 *tmp288 .targetLead
-    * jump *label249 equal *tmp289 false
+  817 jump *label249 greaterThanEq *tmp288 .targetLead
   818 set :status1:text "Goal 8: lead requirement"
   819 setaddr :status1*retaddr *label251 (h:*label251)
   820 call *label9 *invalid :status1*retval (m:*label251) (h:*label251)
 
   826 jump *label250 always
   827 label *label249
   828 sensor *tmp291 .core @metaglass
-    * op lessThan *tmp292 *tmp291 .targetMetaglass
-    * jump *label253 equal *tmp292 false
+  829 jump *label253 greaterThanEq *tmp291 .targetMetaglass
   830 set :status1:text "Goal 9: metaglass requirement"
   831 setaddr :status1*retaddr *label255 (h:*label255)
   832 call *label9 *invalid :status1*retval (m:*label255) (h:*label255)
 
   843 label *label257
   844 sensor :supplyBase0:coal.1 .core @coal
   845 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp296 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label258 equal *tmp296 false
+  846 jump *label258 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   847 set *tmp297 @coal
   848 jump *label259 always
   849 label *label258
 
   882 end
   883 label *label36
   884 op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp299 *tmp298 0
-    * jump *label264 equal *tmp299 false
+  885 jump *label264 lessThanEq *tmp298 0
   886 set :unpackCfg:cfg :buildRemoteBlock:cfg
   887 setaddr :unpackCfg*retaddr *label266 (h:*label266)
   888 call *label27 *invalid :unpackCfg*retval (m:*label266) (h:*label266)
 
  1030 ubind :flagUnits:unit
  1031 set :flagUnits:firstUnit @unit
  1032 label *label280
-    * op equal *tmp305 :flagUnits:firstUnit null
-    * jump *label279 notEqual *tmp305 false
+ 1033 jump *label279 equal :flagUnits:firstUnit null
  1034 label *label281
  1035 set :flagUnits:x @thisx
  1036 label *label282
 
  1038 op add :flagUnits:x :flagUnits:x 4
  1039 ubind :flagUnits:unit
  1040 label *label283
-    * op notEqual *tmp306 @unit :flagUnits:firstUnit
-    * jump *label282 notEqual *tmp306 false
+ 1041 jump *label282 notEqual @unit :flagUnits:firstUnit
  1042 label *label284
  1043 label *label278
  1044 return :flagUnits*retaddr
 
  1058 label *label290
  1059 ubind :lineUpUnits:unit
  1060 label *label287
-    * op notEqual *tmp310 @unit :lineUpUnits:firstUnit
-    * jump *label286 notEqual *tmp310 false
+ 1061 jump *label286 notEqual @unit :lineUpUnits:firstUnit
  1062 label *label288
  1063 label *label285
  1064 return :lineUpUnits*retaddr
 
  1143 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1144 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
  1145 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
-    * op greaterThan *tmp328 :supplyBlock:missing 0
-    * jump *label308 equal *tmp328 false
+ 1146 jump *label308 lessThanEq :supplyBlock:missing 0
  1147 set :mineOre:ore :supplyBlock:ore
  1148 set :mineOre:amount :supplyBlock:blockCapacity
  1149 set :mineOre:block :supplyBlock:block
 
  1310 write .targetCopper processor8 ".copperTarget"
  1311 label *label334
  1312 sensor *tmp382 .core @copper
-    * op lessThan *tmp383 *tmp382 .targetCopper
-    * jump *label338 equal *tmp383 false
+ 1313 jump *label338 greaterThanEq *tmp382 .targetCopper
  1314 set *tmp381 false
  1315 jump *label337 always
  1316 jump *label339 always
  1317 label *label338
  1318 label *label339
  1319 sensor *tmp385 .core @lead
-    * op lessThan *tmp386 *tmp385 .targetLead
-    * jump *label340 equal *tmp386 false
+ 1320 jump *label340 greaterThanEq *tmp385 .targetLead
  1321 set *tmp381 false
  1322 jump *label337 always
  1323 jump *label341 always
  1324 label *label340
  1325 label *label341
  1326 sensor *tmp388 .core @graphite
-    * op lessThan *tmp389 *tmp388 .targetGraphite
-    * jump *label342 equal *tmp389 false
+ 1327 jump *label342 greaterThanEq *tmp388 .targetGraphite
  1328 set *tmp381 false
  1329 jump *label337 always
  1330 jump *label343 always
  1331 label *label342
  1332 label *label343
  1333 sensor *tmp391 .core @silicon
-    * op lessThan *tmp392 *tmp391 .targetSilicon
-    * jump *label344 equal *tmp392 false
+ 1334 jump *label344 greaterThanEq *tmp391 .targetSilicon
  1335 set *tmp381 false
  1336 jump *label337 always
  1337 jump *label345 always
  1338 label *label344
  1339 label *label345
  1340 sensor *tmp394 .core @titanium
-    * op lessThan *tmp395 *tmp394 .targetTitanium
-    * jump *label346 equal *tmp395 false
+ 1341 jump *label346 greaterThanEq *tmp394 .targetTitanium
  1342 set *tmp381 false
  1343 jump *label337 always
  1344 jump *label347 always
  1345 label *label346
  1346 label *label347
  1347 sensor *tmp397 .core @metaglass
-    * op lessThan *tmp398 *tmp397 .targetMetaglass
-    * jump *label348 equal *tmp398 false
+ 1348 jump *label348 greaterThanEq *tmp397 .targetMetaglass
  1349 set *tmp381 false
  1350 jump *label337 always
  1351 jump *label349 always
  1352 label *label348
  1353 label *label349
  1354 sensor *tmp400 .core @thorium
-    * op lessThan *tmp401 *tmp400 .targetThorium
-    * jump *label350 equal *tmp401 false
+ 1355 jump *label350 greaterThanEq *tmp400 .targetThorium
  1356 set *tmp381 false
  1357 jump *label337 always
  1358 jump *label351 always
 
  1362 jump *label337 always
  1363 set *tmp381 null
  1364 label *label337
-    * op equal *tmp403 *tmp381 false
-    * jump *label336 equal *tmp403 false
+ 1365 jump *label336 notEqual *tmp381 false
  1366 setaddr :supplyBase*retaddr *label352 (h:*label352)
  1367 call *label33 *invalid :supplyBase*retval (m:*label352) (h:*label352)
  1368 label *label352
 
  1422 label *label359
  1423 label *label360
  1424 sensor *tmp412 @unit @firstItem
-    * op notEqual *tmp413 *tmp412 null
-    * jump *label363 equal *tmp413 false
+ 1425 jump *label363 equal *tmp412 null
  1426 ucontrol itemDrop @air 1000
  1427 jump *label364 always
  1428 label *label363
 
  1430 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1431 label *label361
  1432 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
-    * op equal *tmp416 *tmp415 false
-    * jump *label360 notEqual *tmp416 false
+ 1433 jump *label360 equal *tmp415 false
  1434 label *label362
  1435 label *label358
  1436 return :moveToEmpty*retaddr
 
  1438 label *label17
  1439 label *label366
  1440 sensor *tmp417 @unit @firstItem
-    * op notEqual *tmp418 *tmp417 null
-    * jump *label368 equal *tmp418 false
+ 1441 jump *label368 equal *tmp417 null
  1442 ucontrol itemDrop @air 1000
  1443 label *label367
  1444 jump *label366 always
 
  1452 call *label11 *invalid :status3*retval (m:*label370) (h:*label370)
  1453 label *label370
  1454 sensor *tmp419 @unit @firstItem
-    * op equal *tmp420 *tmp419 :depositItems:item
-    * jump *label371 equal *tmp420 false
+ 1455 jump *label371 notEqual *tmp419 :depositItems:item
  1456 set :moveToBlock:block :depositItems:block
  1457 set :moveToBlock:radius 6
  1458 setaddr :moveToBlock*retaddr *label373 (h:*label373)
 
  1465 sensor *tmp423 @unit @firstItem
  1466 op mul *tmp424 *tmp423 :depositItems:cap
  1467 sensor *tmp425 :depositItems:block :depositItems:item
-    * op greaterThan *tmp426 *tmp424 *tmp425
-    * jump *label374 notEqual *tmp426 false
+ 1468 jump *label374 greaterThan *tmp424 *tmp425
  1469 label *label376
  1470 jump *label372 always
  1471 label *label371
  1472 label *label377
  1473 sensor *tmp427 @unit @firstItem
-    * op notEqual *tmp428 *tmp427 null
-    * jump *label379 equal *tmp428 false
+ 1474 jump *label379 equal *tmp427 null
  1475 ucontrol itemDrop @air 1000
  1476 label *label378
  1477 jump *label377 always
 
  1504 call *label16 *invalid :moveToEmpty*retval (m:*label384) (h:*label384)
  1505 label *label384
  1506 sensor *tmp430 @unit @firstItem
-    * op notEqual *tmp431 *tmp430 :mineOre:ore
-    * jump *label385 equal *tmp431 false
+ 1507 jump *label385 equal *tmp430 :mineOre:ore
  1508 setaddr :dropAll*retaddr *label387 (h:*label387)
  1509 call *label17 *invalid :dropAll*retval (m:*label387) (h:*label387)
  1510 label *label387
 
  1527 label *label392
  1528 label *label393
  1529 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp439 @second :mineOre:stop
-    * jump *label394 equal *tmp439 false
+ 1530 jump *label394 lessThanEq @second :mineOre:stop
  1531 jump *label391 always
  1532 jump *label395 always
  1533 label *label394
  1534 label *label395
  1535 label *label390
  1536 sensor *tmp441 @unit @totalItems
-    * op lessThan *tmp442 *tmp441 :mineOre:amount
-    * jump *label389 notEqual *tmp442 false
+ 1537 jump *label389 lessThan *tmp441 :mineOre:amount
  1538 label *label391
  1539 ucontrol unbind
  1540 set :depositItems:block :mineOre:block
 
  1564 end
  1565 label *label20
  1566 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
-    * op equal *tmp447 *tmp445 false
-    * jump *label401 equal *tmp447 false
+ 1567 jump *label401 notEqual *tmp445 false
  1568 set :error:error "Cannot locate ore"
  1569 setaddr :error*retaddr *label403 (h:*label403)
  1570 call *label13 *invalid :error*retval (m:*label403) (h:*label403)
 
  1582 label *label405
  1583 label *label406
  1584 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
-    * op equal *tmp450 *tmp449 false
-    * jump *label408 equal *tmp450 false
+ 1585 jump *label408 notEqual *tmp449 false
  1586 op sub *tmp451 :moveTo:radius 0.5
  1587 ucontrol approach :moveTo:x :moveTo:y *tmp451
  1588 label *label407

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    74 setaddr :error*retaddr *label58 (h:*label58)
    75 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    76 label *label58
-    * jump *label57 always
    77 label *label56
    78 label *label57
    79 write @pneumatic-drill .display ".nextBlock"
 
   290 sensor *tmp151 AJTJK-battery1 @totalPower
   291 jump *label111 greaterThanEq *tmp151 300
   292 jump *label109 always
-    * jump *label112 always
   293 label *label111
   294 label *label112
   295 label *label108
 
   448 setaddr :error*retaddr *label149 (h:*label149)
   449 call *label13 *invalid :error*retval (m:*label149) (h:*label149)
   450 label *label149
-    * jump *label148 always
   451 label *label147
   452 label *label148
   453 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   518 set .thoriumContainer :buildRemoteBlock*retval
   519 jump *label159 notEqual .thoriumContainer null
   520 set .thoriumContainer .thoriumDrill
-    * jump *label160 always
   521 label *label159
   522 label *label160
   523 write .thoriumDrill .display ".thoriumDrill"
 
   646 call *label25 *invalid :supplyBlockFromCore*retval (m:*label197) (h:*label197)
   647 label *label197
   648 label *label195
-    * jump *label193 always
   649 label *label192
   650 label *label193
   651 set :fetchBlock:block .thoriumContainer
 
   685 call *label24 *invalid :supplyBlock*retval (m:*label212) (h:*label212)
   686 label *label212
   687 set :supplyBase0:supplied true
-    * jump *label210 always
   688 label *label209
   689 label *label210
-    * jump *label208 always
   690 label *label207
   691 label *label208
   692 sensor *tmp248 .core @silicon
 
   717 call *label24 *invalid :supplyBlock*retval (m:*label222) (h:*label222)
   718 label *label222
   719 set :supplyBase0:supplied true
-    * jump *label220 always
   720 label *label219
   721 label *label220
   722 label *label216
-    * jump *label214 always
   723 label *label213
   724 label *label214
   725 sensor *tmp257 AJTJK-battery1 @totalPower
 
   736 call *label24 *invalid :supplyBlock*retval (m:*label228) (h:*label228)
   737 label *label228
   738 set :supplyBase0:supplied true
-    * jump *label226 always
   739 label *label225
   740 label *label226
-    * jump *label224 always
   741 label *label223
   742 label *label224
-    * jump *label206 always
   743 label *label205
   744 label *label206
   745 sensor *tmp263 .core @titanium
 
   847 label *label246
   848 label *label240
   849 label *label236
-    * jump *label234 always
   850 label *label233
   851 label *label234
   852 jump *label232 always
 
   902 label *label267
   903 set :buildRemoteBlock*retval :buildBlock*retval
   904 jump *label263 always
-    * jump *label265 always
   905 label *label264
   906 label *label265
   907 set :buildRemoteBlock*retval false
 
  1039 sensor *tmp308 @unit @mining
  1040 jump *label289 equal *tmp308 false
  1041 ucontrol stop
-    * jump *label290 always
  1042 label *label289
  1043 label *label290
  1044 ubind :lineUpUnits:unit
 
  1100 op land *tmp319 *tmp317 *tmp318
  1101 jump *label303 equal *tmp319 false
  1102 ucontrol itemDrop @air 1000
-    * jump *label304 always
  1103 label *label303
  1104 label *label304
  1105 label *label301
 
  1134 setaddr :mineOre*retaddr *label310 (h:*label310)
  1135 call *label21 *invalid :mineOre*retval (m:*label310) (h:*label310)
  1136 label *label310
-    * jump *label309 always
  1137 label *label308
  1138 label *label309
  1139 label *label306
 
  1168 op land *tmp335 *tmp333 *tmp334
  1169 jump *label319 equal *tmp335 false
  1170 ucontrol itemDrop @air 1000
-    * jump *label320 always
  1171 label *label319
  1172 label *label320
  1173 label *label317
 
  1295 jump *label338 greaterThanEq *tmp382 .targetCopper
  1296 set *tmp381 false
  1297 jump *label337 always
-    * jump *label339 always
  1298 label *label338
  1299 label *label339
  1300 sensor *tmp385 .core @lead
  1301 jump *label340 greaterThanEq *tmp385 .targetLead
  1302 set *tmp381 false
  1303 jump *label337 always
-    * jump *label341 always
  1304 label *label340
  1305 label *label341
  1306 sensor *tmp388 .core @graphite
  1307 jump *label342 greaterThanEq *tmp388 .targetGraphite
  1308 set *tmp381 false
  1309 jump *label337 always
-    * jump *label343 always
  1310 label *label342
  1311 label *label343
  1312 sensor *tmp391 .core @silicon
  1313 jump *label344 greaterThanEq *tmp391 .targetSilicon
  1314 set *tmp381 false
  1315 jump *label337 always
-    * jump *label345 always
  1316 label *label344
  1317 label *label345
  1318 sensor *tmp394 .core @titanium
  1319 jump *label346 greaterThanEq *tmp394 .targetTitanium
  1320 set *tmp381 false
  1321 jump *label337 always
-    * jump *label347 always
  1322 label *label346
  1323 label *label347
  1324 sensor *tmp397 .core @metaglass
  1325 jump *label348 greaterThanEq *tmp397 .targetMetaglass
  1326 set *tmp381 false
  1327 jump *label337 always
-    * jump *label349 always
  1328 label *label348
  1329 label *label349
  1330 sensor *tmp400 .core @thorium
  1331 jump *label350 greaterThanEq *tmp400 .targetThorium
  1332 set *tmp381 false
  1333 jump *label337 always
-    * jump *label351 always
  1334 label *label350
  1335 label *label351
  1336 set *tmp381 true
 
  1399 sensor *tmp412 @unit @firstItem
  1400 jump *label363 equal *tmp412 null
  1401 ucontrol itemDrop @air 1000
-    * jump *label364 always
  1402 label *label363
  1403 label *label364
  1404 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1482 setaddr :dropAll*retaddr *label387 (h:*label387)
  1483 call *label17 *invalid :dropAll*retval (m:*label387) (h:*label387)
  1484 label *label387
-    * jump *label386 always
  1485 label *label385
  1486 label *label386
  1487 set :status3:text "Mining..."
 
  1496 op land *tmp437 *tmp435 *tmp436
  1497 jump *label392 equal *tmp437 false
  1498 jump *label391 always
-    * jump *label393 always
  1499 label *label392
  1500 label *label393
  1501 ucontrol mine :mineOre:x :mineOre:y
  1502 jump *label394 lessThanEq @second :mineOre:stop
  1503 jump *label391 always
-    * jump *label395 always
  1504 label *label394
  1505 label *label395
  1506 label *label390
 
  1540 setaddr :error*retaddr *label403 (h:*label403)
  1541 call *label13 *invalid :error*retval (m:*label403) (h:*label403)
  1542 label *label403
-    * jump *label402 always
  1543 label *label401
  1544 label *label402
  1545 label *label400

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-7 instructions):
 
     6 read *tmp95 processor8 "*signature"
     7 jump *label43 notEqual *tmp95 "0:v1"
     8 set .titaniumDrill null
-    * set .thoriumDrill null
     9 set .thoriumBattery null
    10 set .thoriumContainer null
    11 set .thoriumGenerator null
 
    47 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    48 label *label52
    49 set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   50 set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"
    51 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    52 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
    53 label *label54
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   54 write @titanium processor1 ".nextBlock"
+   55 write .coreX processor4 ":findDrillLocation:x"
+   56 write .coreY processor4 ":findDrillLocation:y"
+   57 write @unit processor4 ":findDrillLocation:unit"
+   58 write @titanium processor4 ":findDrillLocation:item"
+   59 write @ore-titanium processor4 ":findDrillLocation:ore"
+   60 write 2 processor4 ":findDrillLocation:size"
+   61 write 4 processor4 ":findDrillLocation:limit"
+   62 write false processor4 ":findDrillLocation*finished"
+   63 write 1 processor4 "@counter"
    64 label *label55
    65 wait 1e-15
-    * read *tmp134 .oreLocator ":findDrillLocation*finished"
+   66 read *tmp134 processor4 ":findDrillLocation*finished"
    67 jump *label55 equal *tmp134 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   68 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   69 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   70 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    71 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    72 set :error:error "Cannot locate spot for titanium drill"
    73 setaddr :error*retaddr *label58 (h:*label58)
 
    75 label *label58
    76 label *label56
    77 label *label57
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   78 write @pneumatic-drill processor1 ".nextBlock"
+   79 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   80 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   81 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   82 write 2 processor5 "@counter"
    83 label *label59
    84 wait 1e-15
-    * read *tmp140 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   85 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    86 jump *label59 equal *tmp140 false
-    * read *tmp123 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   87 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
    88 jump *label53 always
-    * set *tmp123 null
    89 label *label53
    90 set .titaniumDrill *tmp123
-    * write .titaniumDrill .display ".titaniumDrill"
+   91 write *tmp123 processor1 ".titaniumDrill"
    92 set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"
    93 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
    94 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   108 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   109 label *label63
   110 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
+  111 write processor6 :buildBlockFromCfg*retval ".timer"
+  112 write processor1 :buildBlockFromCfg*retval ".display"
+  113 write .core :buildBlockFromCfg*retval ".core"
+  114 write bank1 :buildBlockFromCfg*retval ".bank"
   115 set :block "AJEMJJ-graphite-press0"
   116 setaddr *tmp146 *label67
   117 jump *label64 always
 
   248 setaddr *tmp146 *label100
   249 label *label64
   250 read *tmp147 @this :block
-    * write *tmp147 .controller :block
+  251 write *tmp147 :buildBlockFromCfg*retval :block
   252 label *label65
   253 multijump *tmp146 0 0 (m:marker0)
   254 multilabel *label100 (m:marker0)
 
   266 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   267 label *label103
   268 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  269 write 1 .controller ".flareTarget"
+  270 write 1 processor1 ".flareTarget"
   271 label *label104
   272 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  273 write 3 .controller ".monoTarget"
+  274 write 3 processor1 ".monoTarget"
   275 label *label105
   276 write 85 .controller ".pressTarget"
   277 write 150 .controller ".smelterTarget"
   278 write 30 .controller ".kilnTarget"
   279 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  280 set .siliconSurplus 20
   281 setaddr :buildUnits*retaddr *label106 (h:*label106)
   282 call *label40 *invalid :buildUnits*retval (m:*label106) (h:*label106)
   283 label *label106
 
   347 set .siliconSurplus 1000
   348 set .metaglassSurplus 200
   349 set :setPolyTarget:target 5
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  350 write 5 .controller ".polyTarget"
+  351 write 5 processor1 ".polyTarget"
   352 label *label125
   353 set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"
   354 setaddr :buildBlockFromCfg.1*retaddr *label126 (h:*label126)
 
   380 jump *label131 always
   381 label *label133
   382 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  383 write 3 .controller ".flareTarget"
+  384 write 3 processor1 ".flareTarget"
   385 label *label135
   386 label *label136
   387 read *tmp81 .controller ".flares"
 
   394 label *label138
   395 set .graphiteSurplus 100
   396 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  397 write 5 .controller ".monoTarget"
+  398 write 5 processor1 ".monoTarget"
   399 label *label140
-    * write @ore-titanium .display ".nextBlock"
+  400 write @ore-titanium processor1 ".nextBlock"
   401 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  402 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  403 write .coreX processor4 ":findDrillLocation:x"
+  404 write .coreY processor4 ":findDrillLocation:y"
+  405 write @unit processor4 ":findDrillLocation:unit"
+  406 write @titanium processor4 ":findDrillLocation:item"
+  407 write @ore-titanium processor4 ":findDrillLocation:ore"
+  408 write 4 processor4 ":findDrillLocation:size"
+  409 write 1000000000 processor4 ":findDrillLocation:limit"
+  410 write false processor4 ":findDrillLocation*finished"
+  411 write 1 processor4 "@counter"
   412 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  413 write .controller processor5 ":buildTitaniumDrills:aController"
+  414 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  415 write false processor5 ":buildTitaniumDrills*finished"
+  416 write 3 processor5 "@counter"
   417 label *label142
   418 wait 1e-15
-    * read *tmp184 .blockBuilder ":buildTitaniumDrills*finished"
+  419 read *tmp184 processor5 ":buildTitaniumDrills*finished"
   420 jump *label142 equal *tmp184 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  421 write false processor4 ":stopLocation*finished"
+  422 write 3 processor4 "@counter"
   423 label *label141
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  424 write null processor1 ".nextBlock"
+  425 write .coreX processor4 ":layoutThoriumDrill:x"
+  426 write .coreY processor4 ":layoutThoriumDrill:y"
+  427 write @unit processor4 ":layoutThoriumDrill:unit"
+  428 write 7 processor4 ":layoutThoriumDrill:limit"
+  429 write false processor4 ":layoutThoriumDrill*finished"
+  430 write 2 processor4 "@counter"
   431 label *label144
   432 wait 1e-15
-    * read *tmp189 .oreLocator ":layoutThoriumDrill*finished"
+  433 read *tmp189 processor4 ":layoutThoriumDrill*finished"
   434 jump *label144 equal *tmp189 false
   435 set :meetTarget.1:cfg "AJJJc-laser-drill25"
   436 setaddr :meetTarget.1*retaddr *label145 (h:*label145)
 
   438 label *label145
   439 label *label146
   440 wait 1e-15
-    * read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
+  441 read *tmp191 processor4 ":layoutThoriumDrill*finished"
   442 jump *label146 equal *tmp191 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  443 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   444 jump *label147 notEqual :buildThoriumDrill:result false
   445 set :error:error "Cannot locate spot for thorium drill"
   446 setaddr :error*retaddr *label149 (h:*label149)
 
   448 label *label149
   449 label *label147
   450 label *label148
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp53 .oreLocator ".drillX"
-    * write *tmp53 .blockBuilder ":buildBlockAt:x"
-    * read *tmp54 .oreLocator ".drillY"
-    * write *tmp54 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  451 write @laser-drill processor5 ":buildBlockAt:block"
+  452 read *tmp53 processor4 ".drillX"
+  453 write *tmp53 processor5 ":buildBlockAt:x"
+  454 read *tmp54 processor4 ".drillY"
+  455 write *tmp54 processor5 ":buildBlockAt:y"
+  456 write null processor5 ":buildBlockAt:rotation"
+  457 write 0 processor5 ":buildBlockAt:config"
+  458 write -1 processor5 ":buildBlockAt:index"
+  459 write false processor5 ":buildBlockAt*finished"
+  460 write 1 processor5 "@counter"
   461 label *label150
   462 wait 1e-15
-    * read *tmp201 .blockBuilder ":buildBlockAt*finished"
+  463 read *tmp201 processor5 ":buildBlockAt*finished"
   464 jump *label150 equal *tmp201 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  465 read .thoriumDrill processor5 ":buildBlockAt*retval"
   466 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  467 read :buildRemoteBlock:x processor4 ".water1X"
+  468 read :buildRemoteBlock:y processor4 ".water1Y"
   469 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   470 call *label36 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   471 label *label151
   472 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  473 read :buildRemoteBlock:x processor4 ".water2X"
+  474 read :buildRemoteBlock:y processor4 ".water2Y"
   475 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
   476 call *label36 *invalid :buildRemoteBlock*retval (m:*label152) (h:*label152)
   477 label *label152
   478 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  479 read :buildRemoteBlock:x processor4 ".generatorX"
+  480 read :buildRemoteBlock:y processor4 ".generatorY"
   481 setaddr :buildRemoteBlock*retaddr *label153 (h:*label153)
   482 call *label36 *invalid :buildRemoteBlock*retval (m:*label153) (h:*label153)
   483 label *label153
   484 set .thoriumGenerator :buildRemoteBlock*retval
   485 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read :buildRemoteBlock:x .oreLocator ".node1X"
-    * read :buildRemoteBlock:y .oreLocator ".node1Y"
+  486 read :buildRemoteBlock:x processor4 ".node1X"
+  487 read :buildRemoteBlock:y processor4 ".node1Y"
   488 setaddr :buildRemoteBlock*retaddr *label154 (h:*label154)
   489 call *label36 *invalid :buildRemoteBlock*retval (m:*label154) (h:*label154)
   490 label *label154
-    * set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read :buildRemoteBlock:x .oreLocator ".node2X"
-    * read :buildRemoteBlock:y .oreLocator ".node2Y"
+  491 read :buildRemoteBlock:x processor4 ".node2X"
+  492 read :buildRemoteBlock:y processor4 ".node2Y"
   493 setaddr :buildRemoteBlock*retaddr *label155 (h:*label155)
   494 call *label36 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   495 label *label155
   496 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  497 read :buildRemoteBlock:x processor4 ".panelX"
+  498 read :buildRemoteBlock:y processor4 ".panelY"
   499 setaddr :buildRemoteBlock*retaddr *label156 (h:*label156)
   500 call *label36 *invalid :buildRemoteBlock*retval (m:*label156) (h:*label156)
   501 label *label156
   502 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  503 read :buildRemoteBlock:x processor4 ".batteryX"
+  504 read :buildRemoteBlock:y processor4 ".batteryY"
   505 setaddr :buildRemoteBlock*retaddr *label157 (h:*label157)
   506 call *label36 *invalid :buildRemoteBlock*retval (m:*label157) (h:*label157)
   507 label *label157
   508 set .thoriumBattery :buildRemoteBlock*retval
   509 set :buildRemoteBlock:cfg "A¨JJJe-container27"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  510 read :buildRemoteBlock:x processor4 ".containerX"
+  511 read :buildRemoteBlock:y processor4 ".containerY"
   512 setaddr :buildRemoteBlock*retaddr *label158 (h:*label158)
   513 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   514 label *label158
   515 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label159 notEqual .thoriumContainer null
+  516 jump *label159 notEqual :buildRemoteBlock*retval null
   517 set .thoriumContainer .thoriumDrill
   518 label *label159
   519 label *label160
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  520 write .thoriumDrill processor1 ".thoriumDrill"
+  521 write .thoriumContainer processor1 ".thoriumContainer"
+  522 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  523 write false processor3 ":setThoriumContainer*finished"
+  524 write 3 processor3 "@counter"
   525 label *label161
   526 wait 1e-15
-    * read *tmp214 .polyController ":setThoriumContainer*finished"
+  527 read *tmp214 processor3 ":setThoriumContainer*finished"
   528 jump *label161 equal *tmp214 false
   529 label *label143
-    * write null .display ".nextBlock"
+  530 write null processor1 ".nextBlock"
   531 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  532 write 1 .controller ".megaTarget"
+  533 write 1 processor1 ".megaTarget"
   534 label *label162
   535 label *label163
   536 read *tmp83 .controller ".polys"
 
   750 label *label230
   751 set :supplyBase0:titaniumTrigger *tmp265
   752 sensor *tmp269 .titaniumDrill @titanium
-    * jump *label231 greaterThanEq *tmp269 :supplyBase0:titaniumTrigger
+  753 jump *label231 greaterThanEq *tmp269 *tmp265
   754 jump *label233 notEqual :supplyBase0:supplied false
   755 sensor *tmp274 AJTJK-battery1 @totalPower
   756 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
 
   780 set *tmp284 @sand
   781 label *label243
   782 set :supplyBase0:ore *tmp284
-    * set :mineOre.1:ore :supplyBase0:ore
+  783 set :mineOre.1:ore *tmp284
   784 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   785 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
   786 label *label244
 
   835 set *tmp297 @sand
   836 label *label259
   837 set :supplyBase0:ore.1 *tmp297
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  838 set :mineOre.1:ore *tmp297
   839 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   840 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)
   841 label *label260
 
   881 set :buildRemoteBlock:th :unpackCfg:th
   882 set :buildRemoteBlock:rotation :unpackCfg:rotation
   883 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  884 set :buildBlock:block :unpackCfg:type
   885 set :buildBlock:x :buildRemoteBlock:x
   886 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  887 set :buildBlock:copper :unpackCfg:cu
+  888 set :buildBlock:lead :unpackCfg:pb
+  889 set :buildBlock:graphite :unpackCfg:gr
+  890 set :buildBlock:silicon :unpackCfg:si
+  891 set :buildBlock:titanium :unpackCfg:ti
+  892 set :buildBlock:metaglass :unpackCfg:mg
+  893 set :buildBlock:thorium :unpackCfg:th
+  894 set :buildBlock:rotation :unpackCfg:rotation
   895 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  896 set :buildBlock:index :unpackCfg:ind
   897 setaddr :buildBlock*retaddr *label267 (h:*label267)
   898 call *label35 *invalid :buildBlock*retval (m:*label267) (h:*label267)
   899 label *label267
 
   903 label *label265
   904 set :buildRemoteBlock*retval false
   905 jump *label263 always
-    * set :buildRemoteBlock*retval null
   906 label *label263
   907 return :buildRemoteBlock*retaddr
   908 end
 
   923 set :buildBlockFromCfg:th :unpackCfg:th
   924 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   925 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp301 .coreX :buildBlockFromCfg:x
-    * op add *tmp302 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  926 op add *tmp301 .coreX :unpackCfg:x
+  927 op add *tmp302 .coreY :unpackCfg:y
+  928 set :buildBlock:block :unpackCfg:type
   929 set :buildBlock:x *tmp301
   930 set :buildBlock:y *tmp302
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  931 set :buildBlock:copper :unpackCfg:cu
+  932 set :buildBlock:lead :unpackCfg:pb
+  933 set :buildBlock:graphite :unpackCfg:gr
+  934 set :buildBlock:silicon :unpackCfg:si
+  935 set :buildBlock:titanium :unpackCfg:ti
+  936 set :buildBlock:metaglass :unpackCfg:mg
+  937 set :buildBlock:thorium :unpackCfg:th
+  938 set :buildBlock:rotation :unpackCfg:rotation
   939 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  940 set :buildBlock:index :unpackCfg:ind
   941 setaddr :buildBlock*retaddr *label270 (h:*label270)
   942 call *label35 *invalid :buildBlock*retval (m:*label270) (h:*label270)
   943 label *label270
   944 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .display :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .controller :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+  945 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+  946 write :buildBlock*retval .display :buildBlockFromCfg:cfg
+  947 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
+  948 set :buildBlockFromCfg*retval :buildBlock*retval
   949 jump *label268 always
-    * set :buildBlockFromCfg*retval null
   950 label *label268
   951 return :buildBlockFromCfg*retaddr
   952 end
 
   972 set :meetTarget.1:ti :unpackCfg:ti
   973 set :meetTarget.1:mg :unpackCfg:mg
   974 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  975 set :meetTarget:block :unpackCfg:type
+  976 set :meetTarget:copper :unpackCfg:cu
+  977 set :meetTarget:lead :unpackCfg:pb
+  978 set :meetTarget:graphite :unpackCfg:gr
+  979 set :meetTarget:silicon :unpackCfg:si
+  980 set :meetTarget:titanium :unpackCfg:ti
+  981 set :meetTarget:metaglass :unpackCfg:mg
+  982 set :meetTarget:thorium :unpackCfg:th
   983 setaddr :meetTarget*retaddr *label275 (h:*label275)
   984 call *label34 *invalid :meetTarget*retval (m:*label275) (h:*label275)
   985 label *label275
 
  1182 end
  1183 label *label27
  1184 set :unpackCfg:index 1
-    * set *tmp341 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1185 set *tmp341 1
+ 1186 op add :unpackCfg:index 1 1
  1187 read *tmp342 :unpackCfg:cfg *tmp341
  1188 op sub *tmp343 *tmp342 74
  1189 lookup block :unpackCfg:type *tmp343
-    * set *tmp345 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1190 set *tmp345 2
+ 1191 op add :unpackCfg:index 2 1
  1192 read *tmp346 :unpackCfg:cfg *tmp345
  1193 op sub *tmp347 *tmp346 74
  1194 op div :unpackCfg:x *tmp347 2
-    * set *tmp349 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1195 set *tmp349 3
+ 1196 op add :unpackCfg:index 3 1
  1197 read *tmp350 :unpackCfg:cfg *tmp349
  1198 op sub *tmp351 *tmp350 74
  1199 op div :unpackCfg:y *tmp351 2
-    * set *tmp353 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1200 set *tmp353 4
+ 1201 op add :unpackCfg:index 4 1
  1202 read *tmp354 :unpackCfg:cfg *tmp353
  1203 op sub :unpackCfg:rotation *tmp354 74
-    * set *tmp356 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1204 set *tmp356 5
+ 1205 op add :unpackCfg:index 5 1
  1206 read *tmp357 :unpackCfg:cfg *tmp356
  1207 op sub :unpackCfg:ind *tmp357 74
  1208 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1274 op add *tmp373 :meetTarget:metaglass .metaglassSurplus
  1275 write *tmp373 .controller ".kilnTarget"
  1276 op add *tmp374 :meetTarget:lead .leadSurplus
-    * write *tmp374 .controller ".leadReserve"
+ 1277 write *tmp369 .controller ".leadReserve"
  1278 op sign *tmp375 :meetTarget:silicon
  1279 op mul *tmp376 *tmp375 20
  1280 op add *tmp377 :meetTarget:silicon *tmp376
 
  1284 op add *tmp380 :meetTarget:graphite *tmp379
  1285 write *tmp380 .controller ".graphiteReserve"
  1286 write .targetLead processor8 ".leadTarget"
-    * write .targetCopper processor8 ".copperTarget"
+ 1287 write :meetTarget:copper processor8 ".copperTarget"
  1288 label *label334
  1289 sensor *tmp382 .core @copper
  1290 jump *label338 greaterThanEq *tmp382 .targetCopper
 
  1330 label *label351
  1331 set *tmp381 true
  1332 jump *label337 always
-    * set *tmp381 null
  1333 label *label337
  1334 jump *label336 notEqual *tmp381 false
  1335 setaddr :supplyBase*retaddr *label352 (h:*label352)
 
  1367 jump *label355 equal *tmp410 false
  1368 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1369 jump *label353 always
-    * set :buildBlock*retval null
  1370 label *label353
  1371 return :buildBlock*retaddr
  1372 end
 
  1465 label *label383
  1466 set :mineOre:x :locateOre:x
  1467 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1468 set :moveToEmpty:x :locateOre:x
+ 1469 set :moveToEmpty:y :locateOre:y
  1470 setaddr :moveToEmpty*retaddr *label384 (h:*label384)
  1471 call *label16 *invalid :moveToEmpty*retval (m:*label384) (h:*label384)
  1472 label *label384

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-51 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 label *label43
     4 read *tmp95 processor8 "*signature"
     5 jump *label43 notEqual *tmp95 "0:v1"
 
    44 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    45 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    46 label *label52
-    * set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
    47 set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"
    48 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    49 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
 
   262 setaddr :buildBlockFromCfg.1*retaddr *label103 (h:*label103)
   263 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   264 label *label103
-    * set :setFlareTarget:target 1
   265 write 1 .controller ".flareTarget"
   266 write 1 processor1 ".flareTarget"
   267 label *label104
-    * set :setMonoTarget:target 3
   268 write 3 .controller ".monoTarget"
   269 write 3 processor1 ".monoTarget"
   270 label *label105
 
   341 label *label124
   342 set .siliconSurplus 1000
   343 set .metaglassSurplus 200
-    * set :setPolyTarget:target 5
   344 write 5 .controller ".polyTarget"
   345 write 5 processor1 ".polyTarget"
   346 label *label125
 
   373 label *label132
   374 jump *label131 always
   375 label *label133
-    * set :setFlareTarget.1:target 3
   376 write 3 .controller ".flareTarget"
   377 write 3 processor1 ".flareTarget"
   378 label *label135
 
   386 jump *label136 always
   387 label *label138
   388 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   389 write 5 .controller ".monoTarget"
   390 write 5 processor1 ".monoTarget"
   391 label *label140
 
   461 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   462 call *label36 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   463 label *label151
-    * set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
   464 read :buildRemoteBlock:x processor4 ".water2X"
   465 read :buildRemoteBlock:y processor4 ".water2Y"
   466 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
 
   519 jump *label161 equal *tmp214 false
   520 label *label143
   521 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   522 write 1 .controller ".megaTarget"
   523 write 1 processor1 ".megaTarget"
   524 label *label162
 
   738 label *label229
   739 set *tmp265 100
   740 label *label230
-    * set :supplyBase0:titaniumTrigger *tmp265
   741 sensor *tmp269 .titaniumDrill @titanium
   742 jump *label231 greaterThanEq *tmp269 *tmp265
   743 jump *label233 notEqual :supplyBase0:supplied false
 
   768 label *label242
   769 set *tmp284 @sand
   770 label *label243
-    * set :supplyBase0:ore *tmp284
   771 set :mineOre.1:ore *tmp284
   772 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   773 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
 
   822 label *label258
   823 set *tmp297 @sand
   824 label *label259
-    * set :supplyBase0:ore.1 *tmp297
   825 set :mineOre.1:ore *tmp297
   826 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   827 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)
 
   858 setaddr :unpackCfg*retaddr *label266 (h:*label266)
   859 call *label27 *invalid :unpackCfg*retval (m:*label266) (h:*label266)
   860 label *label266
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   861 set :buildBlock:block :unpackCfg:type
   862 set :buildBlock:x :buildRemoteBlock:x
   863 set :buildBlock:y :buildRemoteBlock:y
 
   888 setaddr :unpackCfg*retaddr *label269 (h:*label269)
   889 call *label27 *invalid :unpackCfg*retval (m:*label269) (h:*label269)
   890 label *label269
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   891 op add *tmp301 .coreX :unpackCfg:x
   892 op add *tmp302 .coreY :unpackCfg:y
   893 set :buildBlock:block :unpackCfg:type
 
   906 setaddr :buildBlock*retaddr *label270 (h:*label270)
   907 call *label35 *invalid :buildBlock*retval (m:*label270) (h:*label270)
   908 label *label270
-    * set :buildBlockFromCfg:building :buildBlock*retval
   909 write :buildBlock*retval @this :buildBlockFromCfg:cfg
   910 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   911 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
 
   928 setaddr :unpackCfg*retaddr *label274 (h:*label274)
   929 call *label27 *invalid :unpackCfg*retval (m:*label274) (h:*label274)
   930 label *label274
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   931 set :meetTarget:block :unpackCfg:type
   932 set :meetTarget:copper :unpackCfg:cu
   933 set :meetTarget:lead :unpackCfg:pb
 
  1137 return :supplyBlockFromCore*retaddr
  1138 end
  1139 label *label27
-    * set :unpackCfg:index 1
  1140 set *tmp341 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp342 :unpackCfg:cfg *tmp341
+ 1141 read *tmp342 :unpackCfg:cfg 1
  1142 op sub *tmp343 *tmp342 74
  1143 lookup block :unpackCfg:type *tmp343
  1144 set *tmp345 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp346 :unpackCfg:cfg *tmp345
+ 1145 read *tmp346 :unpackCfg:cfg 2
  1146 op sub *tmp347 *tmp346 74
  1147 op div :unpackCfg:x *tmp347 2
  1148 set *tmp349 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp350 :unpackCfg:cfg *tmp349
+ 1149 read *tmp350 :unpackCfg:cfg 3
  1150 op sub *tmp351 *tmp350 74
  1151 op div :unpackCfg:y *tmp351 2
  1152 set *tmp353 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp354 :unpackCfg:cfg *tmp353
+ 1153 read *tmp354 :unpackCfg:cfg 4
  1154 op sub :unpackCfg:rotation *tmp354 74
  1155 set *tmp356 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp357 :unpackCfg:cfg *tmp356
+ 1156 read *tmp357 :unpackCfg:cfg 5
  1157 op sub :unpackCfg:ind *tmp357 74
  1158 sensor :unpackCfg:cu :unpackCfg:type @copper
  1159 sensor :unpackCfg:pb :unpackCfg:type @lead
 
  1223 write *tmp372 .controller ".smelterTarget"
  1224 op add *tmp373 :meetTarget:metaglass .metaglassSurplus
  1225 write *tmp373 .controller ".kilnTarget"
-    * op add *tmp374 :meetTarget:lead .leadSurplus
  1226 write *tmp369 .controller ".leadReserve"
  1227 op sign *tmp375 :meetTarget:silicon
  1228 op mul *tmp376 *tmp375 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
  1137 return :supplyBlockFromCore*retaddr
  1138 end
  1139 label *label27
-    * set *tmp341 1
  1140 read *tmp342 :unpackCfg:cfg 1
  1141 op sub *tmp343 *tmp342 74
  1142 lookup block :unpackCfg:type *tmp343
-    * set *tmp345 2
  1143 read *tmp346 :unpackCfg:cfg 2
  1144 op sub *tmp347 *tmp346 74
  1145 op div :unpackCfg:x *tmp347 2
-    * set *tmp349 3
  1146 read *tmp350 :unpackCfg:cfg 3
  1147 op sub *tmp351 *tmp350 74
  1148 op div :unpackCfg:y *tmp351 2
-    * set *tmp353 4
  1149 read *tmp354 :unpackCfg:cfg 4
  1150 op sub :unpackCfg:rotation *tmp354 74
-    * set *tmp356 5
  1151 read *tmp357 :unpackCfg:cfg 5
  1152 op sub :unpackCfg:ind *tmp357 74
  1153 sensor :unpackCfg:cu :unpackCfg:type @copper

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1487 setaddr :status3*retaddr *label405 (h:*label405)
  1488 call *label11 *invalid :status3*retval (m:*label405) (h:*label405)
  1489 label *label405
+ 1490 op sub *tmp451 :moveTo:radius 0.5
  1491 label *label406
  1492 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
  1493 jump *label408 notEqual *tmp449 false
-    * op sub *tmp451 :moveTo:radius 0.5
  1494 ucontrol approach :moveTo:x :moveTo:y *tmp451
  1495 label *label407
  1496 jump *label406 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   504 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   505 label *label158
   506 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label159 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label159
-    * label *label160
+  507 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   508 write .thoriumDrill processor1 ".thoriumDrill"
   509 write .thoriumContainer processor1 ".thoriumContainer"
   510 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   759 label *label241
   760 sensor :supplyBase0:coal .core @coal
   761 sensor :supplyBase0:sand .core @sand
-    * jump *label242 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp284 @coal
-    * jump *label243 always
-    * label *label242
-    * set *tmp284 @sand
-    * label *label243
+  762 select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   763 set :mineOre.1:ore *tmp284
   764 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   765 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
 
   808 label *label257
   809 sensor :supplyBase0:coal.1 .core @coal
   810 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label258 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp297 @coal
-    * jump *label259 always
-    * label *label258
-    * set *tmp297 @sand
-    * label *label259
+  811 select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   812 set :mineOre.1:ore *tmp297
   813 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   814 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   726 label *label224
   727 label *label205
   728 label *label206
+  729 set *tmp265 100
   730 sensor *tmp263 .core @titanium
-    * jump *label229 greaterThanEq *tmp263 .targetTitanium
+  731 jump *label230 greaterThanEq *tmp263 .targetTitanium
   732 sensor *tmp266 .core @titanium
   733 op sub *tmp267 .targetTitanium *tmp266
   734 op min *tmp265 7 *tmp267
   735 jump *label230 always
-    * label *label229
-    * set *tmp265 100
   736 label *label230
   737 sensor *tmp269 .titaniumDrill @titanium
   738 jump *label231 greaterThanEq *tmp269 *tmp265

Modifications by Unroll iteration loop at CoreBuilder.mnd:344:5 (-2 instructions):
 
   109 write processor1 :buildBlockFromCfg*retval ".display"
   110 write .core :buildBlockFromCfg*retval ".core"
   111 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp146 *label67
-    * jump *label64 always
-    * multilabel *label67 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp146 *label68
-    * jump *label64 always
-    * multilabel *label68 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp146 *label69
-    * jump *label64 always
-    * multilabel *label69 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp146 *label70
-    * jump *label64 always
-    * multilabel *label70 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp146 *label71
-    * jump *label64 always
-    * multilabel *label71 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp146 *label72
-    * jump *label64 always
-    * multilabel *label72 (m:marker0)
-    * set :block "AJJJP-pneumatic-drill6"
-    * setaddr *tmp146 *label73
-    * jump *label64 always
-    * multilabel *label73 (m:marker0)
-    * set :block "A©JNJQ-unloader7"
-    * setaddr *tmp146 *label74
-    * jump *label64 always
-    * multilabel *label74 (m:marker0)
-    * set :block "A{HNJR-inverted-sorter8"
-    * setaddr *tmp146 *label75
-    * jump *label64 always
-    * multilabel *label75 (m:marker0)
-    * set :block "A~JPJS-overflow-gate9"
-    * setaddr *tmp146 *label76
-    * jump *label64 always
-    * multilabel *label76 (m:marker0)
-    * set :block "AÕFFJT-micro-processor10"
-    * setaddr *tmp146 *label77
-    * jump *label64 always
-    * multilabel *label77 (m:marker0)
-    * set :block "AFJJU-power-node11"
-    * setaddr *tmp146 *label78
-    * jump *label64 always
-    * multilabel *label78 (m:marker0)
-    * set :block "A©FHJV-unloader12"
-    * setaddr *tmp146 *label79
-    * jump *label64 always
-    * multilabel *label79 (m:marker0)
-    * set :block "A¾BHMW-air-factory13"
-    * setaddr *tmp146 *label80
-    * jump *label64 always
-    * multilabel *label80 (m:marker0)
-    * set :block "A©NHJX-unloader14"
-    * setaddr *tmp146 *label81
-    * jump *label64 always
-    * multilabel *label81 (m:marker0)
-    * set :block "A{NJJY-inverted-sorter15"
-    * setaddr *tmp146 *label82
-    * jump *label64 always
-    * multilabel *label82 (m:marker0)
-    * set :block "ANOMJZ-kiln16"
-    * setaddr *tmp146 *label83
-    * jump *label64 always
-    * multilabel *label83 (m:marker0)
-    * set :block "A¡ASJ[-water-extractor17"
-    * setaddr *tmp146 *label84
-    * jump *label64 always
-    * multilabel *label84 (m:marker0)
-    * set :block "A©BLJ\-unloader18"
-    * setaddr *tmp146 *label85
-    * jump *label64 always
-    * multilabel *label85 (m:marker0)
-    * set :block "AAOJ]-steam-generator19"
-    * setaddr *tmp146 *label86
-    * jump *label64 always
-    * multilabel *label86 (m:marker0)
-    * set :block "AKFRJ^-multi-press20"
-    * setaddr *tmp146 *label87
-    * jump *label64 always
-    * multilabel *label87 (m:marker0)
-    * set :block "AÇBBJ_-payload-router21"
-    * setaddr *tmp146 *label88
-    * jump *label64 always
-    * multilabel *label88 (m:marker0)
-    * set :block "A©HFJ`-unloader22"
-    * setaddr *tmp146 *label89
-    * jump *label64 always
-    * multilabel *label89 (m:marker0)
-    * set :block "AÀHBJa-additive-reconstructor23"
-    * setaddr *tmp146 *label90
-    * jump *label64 always
-    * multilabel *label90 (m:marker0)
-    * set :block "ATNJb-battery-large24"
-    * setaddr *tmp146 *label91
-    * jump *label64 always
-    * multilabel *label91 (m:marker0)
-    * set :block "AJJJc-laser-drill25"
-    * setaddr *tmp146 *label92
-    * jump *label64 always
-    * multilabel *label92 (m:marker0)
-    * set :block "AJJJd-solar-panel26"
-    * setaddr *tmp146 *label93
-    * jump *label64 always
-    * multilabel *label93 (m:marker0)
-    * set :block "A¨JJJe-container27"
-    * setaddr *tmp146 *label94
-    * jump *label64 always
-    * multilabel *label94 (m:marker0)
-    * set :block "ALSIJf-silicon-smelter28"
-    * setaddr *tmp146 *label95
-    * jump *label64 always
-    * multilabel *label95 (m:marker0)
-    * set :block "A{PJJg-inverted-sorter29"
-    * setaddr *tmp146 *label96
-    * jump *label64 always
-    * multilabel *label96 (m:marker0)
-    * set :block "A{PHJh-inverted-sorter30"
-    * setaddr *tmp146 *label97
-    * jump *label64 always
-    * multilabel *label97 (m:marker0)
-    * set :block "A©PPJi-unloader31"
-    * setaddr *tmp146 *label98
-    * jump *label64 always
-    * multilabel *label98 (m:marker0)
-    * set :block "A©JFJj-unloader32"
-    * setaddr *tmp146 *label99
-    * jump *label64 always
-    * multilabel *label99 (m:marker0)
-    * set :block "AÁPBJk-multiplicative-reconstructor33"
-    * setaddr *tmp146 *label100
-    * label *label64
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
-    * label *label65
-    * multijump *tmp146 0 0 (m:marker0)
-    * multilabel *label100 (m:marker0)
-    * label *label66
+  112 set :block "AJEMJJ-graphite-press0"
+  113 label *label411
+  114 read *tmp147 @this :block
+  115 write *tmp147 :buildBlockFromCfg*retval :block
+  116 label *label412
+  117 set :block "AJTJK-battery1"
+  118 label *label415
+  119 read *tmp147 @this :block
+  120 write *tmp147 :buildBlockFromCfg*retval :block
+  121 label *label416
+  122 set :block "ALTJL-battery2"
+  123 label *label419
+  124 read *tmp147 @this :block
+  125 write *tmp147 :buildBlockFromCfg*retval :block
+  126 label *label420
+  127 set :block "AJRJM-combustion-generator3"
+  128 label *label423
+  129 read *tmp147 @this :block
+  130 write *tmp147 :buildBlockFromCfg*retval :block
+  131 label *label424
+  132 set :block "ALMQJN-silicon-smelter4"
+  133 label *label427
+  134 read *tmp147 @this :block
+  135 write *tmp147 :buildBlockFromCfg*retval :block
+  136 label *label428
+  137 set :block "A{LNJO-inverted-sorter5"
+  138 label *label431
+  139 read *tmp147 @this :block
+  140 write *tmp147 :buildBlockFromCfg*retval :block
+  141 label *label432
+  142 set :block "AJJJP-pneumatic-drill6"
+  143 label *label435
+  144 read *tmp147 @this :block
+  145 write *tmp147 :buildBlockFromCfg*retval :block
+  146 label *label436
+  147 set :block "A©JNJQ-unloader7"
+  148 label *label439
+  149 read *tmp147 @this :block
+  150 write *tmp147 :buildBlockFromCfg*retval :block
+  151 label *label440
+  152 set :block "A{HNJR-inverted-sorter8"
+  153 label *label443
+  154 read *tmp147 @this :block
+  155 write *tmp147 :buildBlockFromCfg*retval :block
+  156 label *label444
+  157 set :block "A~JPJS-overflow-gate9"
+  158 label *label447
+  159 read *tmp147 @this :block
+  160 write *tmp147 :buildBlockFromCfg*retval :block
+  161 label *label448
+  162 set :block "AÕFFJT-micro-processor10"
+  163 label *label451
+  164 read *tmp147 @this :block
+  165 write *tmp147 :buildBlockFromCfg*retval :block
+  166 label *label452
+  167 set :block "AFJJU-power-node11"
+  168 label *label455
+  169 read *tmp147 @this :block
+  170 write *tmp147 :buildBlockFromCfg*retval :block
+  171 label *label456
+  172 set :block "A©FHJV-unloader12"
+  173 label *label459
+  174 read *tmp147 @this :block
+  175 write *tmp147 :buildBlockFromCfg*retval :block
+  176 label *label460
+  177 set :block "A¾BHMW-air-factory13"
+  178 label *label463
+  179 read *tmp147 @this :block
+  180 write *tmp147 :buildBlockFromCfg*retval :block
+  181 label *label464
+  182 set :block "A©NHJX-unloader14"
+  183 label *label467
+  184 read *tmp147 @this :block
+  185 write *tmp147 :buildBlockFromCfg*retval :block
+  186 label *label468
+  187 set :block "A{NJJY-inverted-sorter15"
+  188 label *label471
+  189 read *tmp147 @this :block
+  190 write *tmp147 :buildBlockFromCfg*retval :block
+  191 label *label472
+  192 set :block "ANOMJZ-kiln16"
+  193 label *label475
+  194 read *tmp147 @this :block
+  195 write *tmp147 :buildBlockFromCfg*retval :block
+  196 label *label476
+  197 set :block "A¡ASJ[-water-extractor17"
+  198 label *label479
+  199 read *tmp147 @this :block
+  200 write *tmp147 :buildBlockFromCfg*retval :block
+  201 label *label480
+  202 set :block "A©BLJ\-unloader18"
+  203 label *label483
+  204 read *tmp147 @this :block
+  205 write *tmp147 :buildBlockFromCfg*retval :block
+  206 label *label484
+  207 set :block "AAOJ]-steam-generator19"
+  208 label *label487
+  209 read *tmp147 @this :block
+  210 write *tmp147 :buildBlockFromCfg*retval :block
+  211 label *label488
+  212 set :block "AKFRJ^-multi-press20"
+  213 label *label491
+  214 read *tmp147 @this :block
+  215 write *tmp147 :buildBlockFromCfg*retval :block
+  216 label *label492
+  217 set :block "AÇBBJ_-payload-router21"
+  218 label *label495
+  219 read *tmp147 @this :block
+  220 write *tmp147 :buildBlockFromCfg*retval :block
+  221 label *label496
+  222 set :block "A©HFJ`-unloader22"
+  223 label *label499
+  224 read *tmp147 @this :block
+  225 write *tmp147 :buildBlockFromCfg*retval :block
+  226 label *label500
+  227 set :block "AÀHBJa-additive-reconstructor23"
+  228 label *label503
+  229 read *tmp147 @this :block
+  230 write *tmp147 :buildBlockFromCfg*retval :block
+  231 label *label504
+  232 set :block "ATNJb-battery-large24"
+  233 label *label507
+  234 read *tmp147 @this :block
+  235 write *tmp147 :buildBlockFromCfg*retval :block
+  236 label *label508
+  237 set :block "AJJJc-laser-drill25"
+  238 label *label511
+  239 read *tmp147 @this :block
+  240 write *tmp147 :buildBlockFromCfg*retval :block
+  241 label *label512
+  242 set :block "AJJJd-solar-panel26"
+  243 label *label515
+  244 read *tmp147 @this :block
+  245 write *tmp147 :buildBlockFromCfg*retval :block
+  246 label *label516
+  247 set :block "A¨JJJe-container27"
+  248 label *label519
+  249 read *tmp147 @this :block
+  250 write *tmp147 :buildBlockFromCfg*retval :block
+  251 label *label520
+  252 set :block "ALSIJf-silicon-smelter28"
+  253 label *label523
+  254 read *tmp147 @this :block
+  255 write *tmp147 :buildBlockFromCfg*retval :block
+  256 label *label524
+  257 set :block "A{PJJg-inverted-sorter29"
+  258 label *label527
+  259 read *tmp147 @this :block
+  260 write *tmp147 :buildBlockFromCfg*retval :block
+  261 label *label528
+  262 set :block "A{PHJh-inverted-sorter30"
+  263 label *label531
+  264 read *tmp147 @this :block
+  265 write *tmp147 :buildBlockFromCfg*retval :block
+  266 label *label532
+  267 set :block "A©PPJi-unloader31"
+  268 label *label535
+  269 read *tmp147 @this :block
+  270 write *tmp147 :buildBlockFromCfg*retval :block
+  271 label *label536
+  272 set :block "A©JFJj-unloader32"
+  273 label *label539
+  274 read *tmp147 @this :block
+  275 write *tmp147 :buildBlockFromCfg*retval :block
+  276 label *label540
+  277 set :block "AÁPBJk-multiplicative-reconstructor33"
+  278 label *label543
+  279 read *tmp147 @this :block
+  280 write *tmp147 :buildBlockFromCfg*retval :block
+  281 label *label544
+  282 label *label66
   283 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
   284 setaddr :buildBlockFromCfg.1*retaddr *label101 (h:*label101)
   285 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label101) (h:*label101)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   111 write bank1 :buildBlockFromCfg*retval ".bank"
   112 set :block "AJEMJJ-graphite-press0"
   113 label *label411
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  114 read *tmp147 @this "AJEMJJ-graphite-press0"
+  115 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   116 label *label412
   117 set :block "AJTJK-battery1"
   118 label *label415
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  119 read *tmp147 @this "AJTJK-battery1"
+  120 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   121 label *label416
   122 set :block "ALTJL-battery2"
   123 label *label419
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  124 read *tmp147 @this "ALTJL-battery2"
+  125 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   126 label *label420
   127 set :block "AJRJM-combustion-generator3"
   128 label *label423
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  129 read *tmp147 @this "AJRJM-combustion-generator3"
+  130 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   131 label *label424
   132 set :block "ALMQJN-silicon-smelter4"
   133 label *label427
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  134 read *tmp147 @this "ALMQJN-silicon-smelter4"
+  135 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   136 label *label428
   137 set :block "A{LNJO-inverted-sorter5"
   138 label *label431
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  139 read *tmp147 @this "A{LNJO-inverted-sorter5"
+  140 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   141 label *label432
   142 set :block "AJJJP-pneumatic-drill6"
   143 label *label435
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  144 read *tmp147 @this "AJJJP-pneumatic-drill6"
+  145 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   146 label *label436
   147 set :block "A©JNJQ-unloader7"
   148 label *label439
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  149 read *tmp147 @this "A©JNJQ-unloader7"
+  150 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   151 label *label440
   152 set :block "A{HNJR-inverted-sorter8"
   153 label *label443
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  154 read *tmp147 @this "A{HNJR-inverted-sorter8"
+  155 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   156 label *label444
   157 set :block "A~JPJS-overflow-gate9"
   158 label *label447
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  159 read *tmp147 @this "A~JPJS-overflow-gate9"
+  160 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
   161 label *label448
   162 set :block "AÕFFJT-micro-processor10"
   163 label *label451
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  164 read *tmp147 @this "AÕFFJT-micro-processor10"
+  165 write *tmp147 :buildBlockFromCfg*retval "AÕFFJT-micro-processor10"
   166 label *label452
   167 set :block "AFJJU-power-node11"
   168 label *label455
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  169 read *tmp147 @this "AFJJU-power-node11"
+  170 write *tmp147 :buildBlockFromCfg*retval "AFJJU-power-node11"
   171 label *label456
   172 set :block "A©FHJV-unloader12"
   173 label *label459
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  174 read *tmp147 @this "A©FHJV-unloader12"
+  175 write *tmp147 :buildBlockFromCfg*retval "A©FHJV-unloader12"
   176 label *label460
   177 set :block "A¾BHMW-air-factory13"
   178 label *label463
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  179 read *tmp147 @this "A¾BHMW-air-factory13"
+  180 write *tmp147 :buildBlockFromCfg*retval "A¾BHMW-air-factory13"
   181 label *label464
   182 set :block "A©NHJX-unloader14"
   183 label *label467
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  184 read *tmp147 @this "A©NHJX-unloader14"
+  185 write *tmp147 :buildBlockFromCfg*retval "A©NHJX-unloader14"
   186 label *label468
   187 set :block "A{NJJY-inverted-sorter15"
   188 label *label471
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  189 read *tmp147 @this "A{NJJY-inverted-sorter15"
+  190 write *tmp147 :buildBlockFromCfg*retval "A{NJJY-inverted-sorter15"
   191 label *label472
   192 set :block "ANOMJZ-kiln16"
   193 label *label475
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  194 read *tmp147 @this "ANOMJZ-kiln16"
+  195 write *tmp147 :buildBlockFromCfg*retval "ANOMJZ-kiln16"
   196 label *label476
   197 set :block "A¡ASJ[-water-extractor17"
   198 label *label479
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  199 read *tmp147 @this "A¡ASJ[-water-extractor17"
+  200 write *tmp147 :buildBlockFromCfg*retval "A¡ASJ[-water-extractor17"
   201 label *label480
   202 set :block "A©BLJ\-unloader18"
   203 label *label483
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  204 read *tmp147 @this "A©BLJ\-unloader18"
+  205 write *tmp147 :buildBlockFromCfg*retval "A©BLJ\-unloader18"
   206 label *label484
   207 set :block "AAOJ]-steam-generator19"
   208 label *label487
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  209 read *tmp147 @this "AAOJ]-steam-generator19"
+  210 write *tmp147 :buildBlockFromCfg*retval "AAOJ]-steam-generator19"
   211 label *label488
   212 set :block "AKFRJ^-multi-press20"
   213 label *label491
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  214 read *tmp147 @this "AKFRJ^-multi-press20"
+  215 write *tmp147 :buildBlockFromCfg*retval "AKFRJ^-multi-press20"
   216 label *label492
   217 set :block "AÇBBJ_-payload-router21"
   218 label *label495
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  219 read *tmp147 @this "AÇBBJ_-payload-router21"
+  220 write *tmp147 :buildBlockFromCfg*retval "AÇBBJ_-payload-router21"
   221 label *label496
   222 set :block "A©HFJ`-unloader22"
   223 label *label499
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  224 read *tmp147 @this "A©HFJ`-unloader22"
+  225 write *tmp147 :buildBlockFromCfg*retval "A©HFJ`-unloader22"
   226 label *label500
   227 set :block "AÀHBJa-additive-reconstructor23"
   228 label *label503
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  229 read *tmp147 @this "AÀHBJa-additive-reconstructor23"
+  230 write *tmp147 :buildBlockFromCfg*retval "AÀHBJa-additive-reconstructor23"
   231 label *label504
   232 set :block "ATNJb-battery-large24"
   233 label *label507
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  234 read *tmp147 @this "ATNJb-battery-large24"
+  235 write *tmp147 :buildBlockFromCfg*retval "ATNJb-battery-large24"
   236 label *label508
   237 set :block "AJJJc-laser-drill25"
   238 label *label511
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  239 read *tmp147 @this "AJJJc-laser-drill25"
+  240 write *tmp147 :buildBlockFromCfg*retval "AJJJc-laser-drill25"
   241 label *label512
   242 set :block "AJJJd-solar-panel26"
   243 label *label515
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  244 read *tmp147 @this "AJJJd-solar-panel26"
+  245 write *tmp147 :buildBlockFromCfg*retval "AJJJd-solar-panel26"
   246 label *label516
   247 set :block "A¨JJJe-container27"
   248 label *label519
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  249 read *tmp147 @this "A¨JJJe-container27"
+  250 write *tmp147 :buildBlockFromCfg*retval "A¨JJJe-container27"
   251 label *label520
   252 set :block "ALSIJf-silicon-smelter28"
   253 label *label523
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  254 read *tmp147 @this "ALSIJf-silicon-smelter28"
+  255 write *tmp147 :buildBlockFromCfg*retval "ALSIJf-silicon-smelter28"
   256 label *label524
   257 set :block "A{PJJg-inverted-sorter29"
   258 label *label527
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  259 read *tmp147 @this "A{PJJg-inverted-sorter29"
+  260 write *tmp147 :buildBlockFromCfg*retval "A{PJJg-inverted-sorter29"
   261 label *label528
   262 set :block "A{PHJh-inverted-sorter30"
   263 label *label531
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  264 read *tmp147 @this "A{PHJh-inverted-sorter30"
+  265 write *tmp147 :buildBlockFromCfg*retval "A{PHJh-inverted-sorter30"
   266 label *label532
   267 set :block "A©PPJi-unloader31"
   268 label *label535
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  269 read *tmp147 @this "A©PPJi-unloader31"
+  270 write *tmp147 :buildBlockFromCfg*retval "A©PPJi-unloader31"
   271 label *label536
   272 set :block "A©JFJj-unloader32"
   273 label *label539
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  274 read *tmp147 @this "A©JFJj-unloader32"
+  275 write *tmp147 :buildBlockFromCfg*retval "A©JFJj-unloader32"
   276 label *label540
   277 set :block "AÁPBJk-multiplicative-reconstructor33"
   278 label *label543
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  279 read *tmp147 @this "AÁPBJk-multiplicative-reconstructor33"
+  280 write *tmp147 :buildBlockFromCfg*retval "AÁPBJk-multiplicative-reconstructor33"
   281 label *label544
   282 label *label66
   283 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
 
   534 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   535 label *label158
   536 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  537 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   538 write .thoriumDrill processor1 ".thoriumDrill"
   539 write .thoriumContainer processor1 ".thoriumContainer"
   540 write .thoriumContainer processor3 ":setThoriumContainer:container"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-35 instructions):
 
   109 write processor1 :buildBlockFromCfg*retval ".display"
   110 write .core :buildBlockFromCfg*retval ".core"
   111 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   112 label *label411
   113 read *tmp147 @this "AJEMJJ-graphite-press0"
   114 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   115 label *label412
-    * set :block "AJTJK-battery1"
   116 label *label415
   117 read *tmp147 @this "AJTJK-battery1"
   118 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   119 label *label416
-    * set :block "ALTJL-battery2"
   120 label *label419
   121 read *tmp147 @this "ALTJL-battery2"
   122 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   123 label *label420
-    * set :block "AJRJM-combustion-generator3"
   124 label *label423
   125 read *tmp147 @this "AJRJM-combustion-generator3"
   126 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   127 label *label424
-    * set :block "ALMQJN-silicon-smelter4"
   128 label *label427
   129 read *tmp147 @this "ALMQJN-silicon-smelter4"
   130 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   131 label *label428
-    * set :block "A{LNJO-inverted-sorter5"
   132 label *label431
   133 read *tmp147 @this "A{LNJO-inverted-sorter5"
   134 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   135 label *label432
-    * set :block "AJJJP-pneumatic-drill6"
   136 label *label435
   137 read *tmp147 @this "AJJJP-pneumatic-drill6"
   138 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   139 label *label436
-    * set :block "A©JNJQ-unloader7"
   140 label *label439
   141 read *tmp147 @this "A©JNJQ-unloader7"
   142 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   143 label *label440
-    * set :block "A{HNJR-inverted-sorter8"
   144 label *label443
   145 read *tmp147 @this "A{HNJR-inverted-sorter8"
   146 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   147 label *label444
-    * set :block "A~JPJS-overflow-gate9"
   148 label *label447
   149 read *tmp147 @this "A~JPJS-overflow-gate9"
   150 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
   151 label *label448
-    * set :block "AÕFFJT-micro-processor10"
   152 label *label451
   153 read *tmp147 @this "AÕFFJT-micro-processor10"
   154 write *tmp147 :buildBlockFromCfg*retval "AÕFFJT-micro-processor10"
   155 label *label452
-    * set :block "AFJJU-power-node11"
   156 label *label455
   157 read *tmp147 @this "AFJJU-power-node11"
   158 write *tmp147 :buildBlockFromCfg*retval "AFJJU-power-node11"
   159 label *label456
-    * set :block "A©FHJV-unloader12"
   160 label *label459
   161 read *tmp147 @this "A©FHJV-unloader12"
   162 write *tmp147 :buildBlockFromCfg*retval "A©FHJV-unloader12"
   163 label *label460
-    * set :block "A¾BHMW-air-factory13"
   164 label *label463
   165 read *tmp147 @this "A¾BHMW-air-factory13"
   166 write *tmp147 :buildBlockFromCfg*retval "A¾BHMW-air-factory13"
   167 label *label464
-    * set :block "A©NHJX-unloader14"
   168 label *label467
   169 read *tmp147 @this "A©NHJX-unloader14"
   170 write *tmp147 :buildBlockFromCfg*retval "A©NHJX-unloader14"
   171 label *label468
-    * set :block "A{NJJY-inverted-sorter15"
   172 label *label471
   173 read *tmp147 @this "A{NJJY-inverted-sorter15"
   174 write *tmp147 :buildBlockFromCfg*retval "A{NJJY-inverted-sorter15"
   175 label *label472
-    * set :block "ANOMJZ-kiln16"
   176 label *label475
   177 read *tmp147 @this "ANOMJZ-kiln16"
   178 write *tmp147 :buildBlockFromCfg*retval "ANOMJZ-kiln16"
   179 label *label476
-    * set :block "A¡ASJ[-water-extractor17"
   180 label *label479
   181 read *tmp147 @this "A¡ASJ[-water-extractor17"
   182 write *tmp147 :buildBlockFromCfg*retval "A¡ASJ[-water-extractor17"
   183 label *label480
-    * set :block "A©BLJ\-unloader18"
   184 label *label483
   185 read *tmp147 @this "A©BLJ\-unloader18"
   186 write *tmp147 :buildBlockFromCfg*retval "A©BLJ\-unloader18"
   187 label *label484
-    * set :block "AAOJ]-steam-generator19"
   188 label *label487
   189 read *tmp147 @this "AAOJ]-steam-generator19"
   190 write *tmp147 :buildBlockFromCfg*retval "AAOJ]-steam-generator19"
   191 label *label488
-    * set :block "AKFRJ^-multi-press20"
   192 label *label491
   193 read *tmp147 @this "AKFRJ^-multi-press20"
   194 write *tmp147 :buildBlockFromCfg*retval "AKFRJ^-multi-press20"
   195 label *label492
-    * set :block "AÇBBJ_-payload-router21"
   196 label *label495
   197 read *tmp147 @this "AÇBBJ_-payload-router21"
   198 write *tmp147 :buildBlockFromCfg*retval "AÇBBJ_-payload-router21"
   199 label *label496
-    * set :block "A©HFJ`-unloader22"
   200 label *label499
   201 read *tmp147 @this "A©HFJ`-unloader22"
   202 write *tmp147 :buildBlockFromCfg*retval "A©HFJ`-unloader22"
   203 label *label500
-    * set :block "AÀHBJa-additive-reconstructor23"
   204 label *label503
   205 read *tmp147 @this "AÀHBJa-additive-reconstructor23"
   206 write *tmp147 :buildBlockFromCfg*retval "AÀHBJa-additive-reconstructor23"
   207 label *label504
-    * set :block "ATNJb-battery-large24"
   208 label *label507
   209 read *tmp147 @this "ATNJb-battery-large24"
   210 write *tmp147 :buildBlockFromCfg*retval "ATNJb-battery-large24"
   211 label *label508
-    * set :block "AJJJc-laser-drill25"
   212 label *label511
   213 read *tmp147 @this "AJJJc-laser-drill25"
   214 write *tmp147 :buildBlockFromCfg*retval "AJJJc-laser-drill25"
   215 label *label512
-    * set :block "AJJJd-solar-panel26"
   216 label *label515
   217 read *tmp147 @this "AJJJd-solar-panel26"
   218 write *tmp147 :buildBlockFromCfg*retval "AJJJd-solar-panel26"
   219 label *label516
-    * set :block "A¨JJJe-container27"
   220 label *label519
   221 read *tmp147 @this "A¨JJJe-container27"
   222 write *tmp147 :buildBlockFromCfg*retval "A¨JJJe-container27"
   223 label *label520
-    * set :block "ALSIJf-silicon-smelter28"
   224 label *label523
   225 read *tmp147 @this "ALSIJf-silicon-smelter28"
   226 write *tmp147 :buildBlockFromCfg*retval "ALSIJf-silicon-smelter28"
   227 label *label524
-    * set :block "A{PJJg-inverted-sorter29"
   228 label *label527
   229 read *tmp147 @this "A{PJJg-inverted-sorter29"
   230 write *tmp147 :buildBlockFromCfg*retval "A{PJJg-inverted-sorter29"
   231 label *label528
-    * set :block "A{PHJh-inverted-sorter30"
   232 label *label531
   233 read *tmp147 @this "A{PHJh-inverted-sorter30"
   234 write *tmp147 :buildBlockFromCfg*retval "A{PHJh-inverted-sorter30"
   235 label *label532
-    * set :block "A©PPJi-unloader31"
   236 label *label535
   237 read *tmp147 @this "A©PPJi-unloader31"
   238 write *tmp147 :buildBlockFromCfg*retval "A©PPJi-unloader31"
   239 label *label536
-    * set :block "A©JFJj-unloader32"
   240 label *label539
   241 read *tmp147 @this "A©JFJj-unloader32"
   242 write *tmp147 :buildBlockFromCfg*retval "A©JFJj-unloader32"
   243 label *label540
-    * set :block "AÁPBJk-multiplicative-reconstructor33"
   244 label *label543
   245 read *tmp147 @this "AÁPBJk-multiplicative-reconstructor33"
   246 write *tmp147 :buildBlockFromCfg*retval "AÁPBJk-multiplicative-reconstructor33"
 
   499 setaddr :buildRemoteBlock*retaddr *label158 (h:*label158)
   500 call *label36 *invalid :buildRemoteBlock*retval (m:*label158) (h:*label158)
   501 label *label158
-    * set .thoriumContainer :buildRemoteBlock*retval
   502 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   503 write .thoriumDrill processor1 ".thoriumDrill"
   504 write .thoriumContainer processor1 ".thoriumContainer"

Modifications by Unroll iteration loop at CoreBuilder.mnd:176:5 (-2 instructions):
 
  1143 end
  1144 label *label34
  1145 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp367 *label327
-    * jump *label324 always
-    * multilabel *label327 (m:marker1)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp367 *label328
-    * jump *label324 always
-    * multilabel *label328 (m:marker1)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp367 *label329
-    * jump *label324 always
-    * multilabel *label329 (m:marker1)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp367 *label330
-    * jump *label324 always
-    * multilabel *label330 (m:marker1)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp367 *label331
-    * jump *label324 always
-    * multilabel *label331 (m:marker1)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp367 *label332
-    * jump *label324 always
-    * multilabel *label332 (m:marker1)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp367 *label333
-    * label *label324
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label325
-    * multijump *tmp367 0 0 (m:marker1)
-    * multilabel *label333 (m:marker1)
-    * label *label326
+ 1146 set :meetTarget:t :meetTarget:copper
+ 1147 label *label548
+ 1148 op sign *tmp368 :meetTarget:t
+ 1149 op add :meetTarget:count :meetTarget:count *tmp368
+ 1150 label *label549
+ 1151 set :meetTarget:t :meetTarget:lead
+ 1152 label *label552
+ 1153 op sign *tmp368 :meetTarget:t
+ 1154 op add :meetTarget:count :meetTarget:count *tmp368
+ 1155 label *label553
+ 1156 set :meetTarget:t :meetTarget:graphite
+ 1157 label *label556
+ 1158 op sign *tmp368 :meetTarget:t
+ 1159 op add :meetTarget:count :meetTarget:count *tmp368
+ 1160 label *label557
+ 1161 set :meetTarget:t :meetTarget:silicon
+ 1162 label *label560
+ 1163 op sign *tmp368 :meetTarget:t
+ 1164 op add :meetTarget:count :meetTarget:count *tmp368
+ 1165 label *label561
+ 1166 set :meetTarget:t :meetTarget:titanium
+ 1167 label *label564
+ 1168 op sign *tmp368 :meetTarget:t
+ 1169 op add :meetTarget:count :meetTarget:count *tmp368
+ 1170 label *label565
+ 1171 set :meetTarget:t :meetTarget:metaglass
+ 1172 label *label568
+ 1173 op sign *tmp368 :meetTarget:t
+ 1174 op add :meetTarget:count :meetTarget:count *tmp368
+ 1175 label *label569
+ 1176 set :meetTarget:t :meetTarget:thorium
+ 1177 label *label572
+ 1178 op sign *tmp368 :meetTarget:t
+ 1179 op add :meetTarget:count :meetTarget:count *tmp368
+ 1180 label *label573
+ 1181 label *label326
  1182 write :meetTarget:count .display ".totalTargets"
  1183 write :meetTarget:block .display ".nextBlock"
  1184 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1145 set :meetTarget:count 0
  1146 set :meetTarget:t :meetTarget:copper
  1147 label *label548
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
+ 1148 op sign *tmp368 :meetTarget:copper
+ 1149 op add :meetTarget:count 0 *tmp368
  1150 label *label549
  1151 set :meetTarget:t :meetTarget:lead
  1152 label *label552
-    * op sign *tmp368 :meetTarget:t
+ 1153 op sign *tmp368 :meetTarget:lead
  1154 op add :meetTarget:count :meetTarget:count *tmp368
  1155 label *label553
  1156 set :meetTarget:t :meetTarget:graphite
  1157 label *label556
-    * op sign *tmp368 :meetTarget:t
+ 1158 op sign *tmp368 :meetTarget:graphite
  1159 op add :meetTarget:count :meetTarget:count *tmp368
  1160 label *label557
  1161 set :meetTarget:t :meetTarget:silicon
  1162 label *label560
-    * op sign *tmp368 :meetTarget:t
+ 1163 op sign *tmp368 :meetTarget:silicon
  1164 op add :meetTarget:count :meetTarget:count *tmp368
  1165 label *label561
  1166 set :meetTarget:t :meetTarget:titanium
  1167 label *label564
-    * op sign *tmp368 :meetTarget:t
+ 1168 op sign *tmp368 :meetTarget:titanium
  1169 op add :meetTarget:count :meetTarget:count *tmp368
  1170 label *label565
  1171 set :meetTarget:t :meetTarget:metaglass
  1172 label *label568
-    * op sign *tmp368 :meetTarget:t
+ 1173 op sign *tmp368 :meetTarget:metaglass
  1174 op add :meetTarget:count :meetTarget:count *tmp368
  1175 label *label569
  1176 set :meetTarget:t :meetTarget:thorium
  1177 label *label572
-    * op sign *tmp368 :meetTarget:t
+ 1178 op sign *tmp368 :meetTarget:thorium
  1179 op add :meetTarget:count :meetTarget:count *tmp368
  1180 label *label573
  1181 label *label326

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1142 return :unpackCfg*retaddr
  1143 end
  1144 label *label34
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1145 label *label548
  1146 op sign *tmp368 :meetTarget:copper
  1147 op add :meetTarget:count 0 *tmp368
  1148 label *label549
-    * set :meetTarget:t :meetTarget:lead
  1149 label *label552
  1150 op sign *tmp368 :meetTarget:lead
  1151 op add :meetTarget:count :meetTarget:count *tmp368
  1152 label *label553
-    * set :meetTarget:t :meetTarget:graphite
  1153 label *label556
  1154 op sign *tmp368 :meetTarget:graphite
  1155 op add :meetTarget:count :meetTarget:count *tmp368
  1156 label *label557
-    * set :meetTarget:t :meetTarget:silicon
  1157 label *label560
  1158 op sign *tmp368 :meetTarget:silicon
  1159 op add :meetTarget:count :meetTarget:count *tmp368
  1160 label *label561
-    * set :meetTarget:t :meetTarget:titanium
  1161 label *label564
  1162 op sign *tmp368 :meetTarget:titanium
  1163 op add :meetTarget:count :meetTarget:count *tmp368
  1164 label *label565
-    * set :meetTarget:t :meetTarget:metaglass
  1165 label *label568
  1166 op sign *tmp368 :meetTarget:metaglass
  1167 op add :meetTarget:count :meetTarget:count *tmp368
  1168 label *label569
-    * set :meetTarget:t :meetTarget:thorium
  1169 label *label572
  1170 op sign *tmp368 :meetTarget:thorium
  1171 op add :meetTarget:count :meetTarget:count *tmp368

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   605 write *tmp230 processor8 ".sandTarget"
   606 jump *label188 equal .thoriumContainer false
   607 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label191 (h:*label191)
-    * call *label9 *invalid :status1*retval (m:*label191) (h:*label191)
-    * label *label191
+  608 label *label577
+  609 write :status1:text .display ".status1"
+  610 label *label578
   611 sensor *tmp232 .thoriumBattery @totalPower
   612 jump *label192 greaterThanEq *tmp232 2000
   613 sensor *tmp235 .core @coal
 
   638 read *tmp82 .controller ".monos"
   639 jump *label199 lessThanEq *tmp82 3
   640 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label202 (h:*label202)
-    * call *label9 *invalid :status1*retval (m:*label202) (h:*label202)
-    * label *label202
+  641 label *label579
+  642 write :status1:text .display ".status1"
+  643 label *label580
   644 set :mineOre.1:ore @coal
   645 setaddr :mineOre.1*retaddr *label203 (h:*label203)
   646 call *label22 *invalid :mineOre.1*retval (m:*label203) (h:*label203)
 
   655 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   656 jump *label209 greaterThanEq *tmp245 5
   657 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label9 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
+  658 label *label581
+  659 write :status1:text .display ".status1"
+  660 label *label582
   661 set :supplyBlock:block AJEMJJ-graphite-press0
   662 set :supplyBlock:ore @coal
   663 setaddr :supplyBlock*retaddr *label212 (h:*label212)
 
   673 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   674 jump *label215 greaterThanEq *tmp251 5
   675 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label9 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
+  676 label *label583
+  677 write :status1:text .display ".status1"
+  678 label *label584
   679 set :supplyBlock:block ALMQJN-silicon-smelter4
   680 set :supplyBlock:ore @coal
   681 setaddr :supplyBlock*retaddr *label218 (h:*label218)
 
   687 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   688 jump *label219 greaterThanEq *tmp254 5
   689 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label221 (h:*label221)
-    * call *label9 *invalid :status1*retval (m:*label221) (h:*label221)
-    * label *label221
+  690 label *label585
+  691 write :status1:text .display ".status1"
+  692 label *label586
   693 set :supplyBlock:block ALMQJN-silicon-smelter4
   694 set :supplyBlock:ore @sand
   695 setaddr :supplyBlock*retaddr *label222 (h:*label222)
 
   706 sensor *tmp260 AJRJM-combustion-generator3 @coal
   707 jump *label225 greaterThanEq *tmp260 2
   708 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label227 (h:*label227)
-    * call *label9 *invalid :status1*retval (m:*label227) (h:*label227)
-    * label *label227
+  709 label *label587
+  710 write :status1:text .display ".status1"
+  711 label *label588
   712 set :supplyBlock:block AJRJM-combustion-generator3
   713 set :supplyBlock:ore @coal
   714 setaddr :supplyBlock*retaddr *label228 (h:*label228)
 
   736 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   737 jump *label235 greaterThanEq *tmp274 *tmp275
   738 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label237 (h:*label237)
-    * call *label9 *invalid :status1*retval (m:*label237) (h:*label237)
-    * label *label237
+  739 label *label589
+  740 write :status1:text .display ".status1"
+  741 label *label590
   742 set :mineOre.1:ore @coal
   743 setaddr :mineOre.1*retaddr *label238 (h:*label238)
   744 call *label22 *invalid :mineOre.1*retval (m:*label238) (h:*label238)
 
   748 sensor *tmp278 .core @silicon
   749 jump *label239 greaterThanEq *tmp278 .targetSilicon
   750 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label241 (h:*label241)
-    * call *label9 *invalid :status1*retval (m:*label241) (h:*label241)
-    * label *label241
+  751 label *label591
+  752 write :status1:text .display ".status1"
+  753 label *label592
   754 sensor :supplyBase0:coal .core @coal
   755 sensor :supplyBase0:sand .core @sand
   756 select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   763 sensor *tmp285 .core @copper
   764 jump *label245 greaterThanEq *tmp285 .targetCopper
   765 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label247 (h:*label247)
-    * call *label9 *invalid :status1*retval (m:*label247) (h:*label247)
-    * label *label247
+  766 label *label593
+  767 write :status1:text .display ".status1"
+  768 label *label594
   769 set :mineOre.1:ore @copper
   770 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   771 call *label22 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
 
   775 sensor *tmp288 .core @lead
   776 jump *label249 greaterThanEq *tmp288 .targetLead
   777 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label251 (h:*label251)
-    * call *label9 *invalid :status1*retval (m:*label251) (h:*label251)
-    * label *label251
+  778 label *label595
+  779 write :status1:text .display ".status1"
+  780 label *label596
   781 set :mineOre.1:ore @lead
   782 setaddr :mineOre.1*retaddr *label252 (h:*label252)
   783 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
 
   787 sensor *tmp291 .core @metaglass
   788 jump *label253 greaterThanEq *tmp291 .targetMetaglass
   789 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label255 (h:*label255)
-    * call *label9 *invalid :status1*retval (m:*label255) (h:*label255)
-    * label *label255
+  790 label *label597
+  791 write :status1:text .display ".status1"
+  792 label *label598
   793 set :mineOre.1:ore @sand
   794 setaddr :mineOre.1*retaddr *label256 (h:*label256)
   795 call *label22 *invalid :mineOre.1*retval (m:*label256) (h:*label256)
 
   797 jump *label254 always
   798 label *label253
   799 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label257 (h:*label257)
-    * call *label9 *invalid :status1*retval (m:*label257) (h:*label257)
-    * label *label257
+  800 label *label599
+  801 write :status1:text .display ".status1"
+  802 label *label600
   803 sensor :supplyBase0:coal.1 .core @coal
   804 sensor :supplyBase0:sand.1 .core @sand
   805 select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   817 jump *label232 always
   818 label *label231
   819 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label261 (h:*label261)
-    * call *label9 *invalid :status1*retval (m:*label261) (h:*label261)
-    * label *label261
+  820 label *label601
+  821 write :status1:text .display ".status1"
+  822 label *label602
   823 set :fetchBlock:block .titaniumDrill
   824 set :fetchBlock:item @titanium
   825 setaddr :fetchBlock*retaddr *label262 (h:*label262)
 
   980 label *label285
   981 return :lineUpUnits*retaddr
   982 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label291
-    * return :status1*retaddr
-    * end
   983 label *label22
   984 set :status2:text "Mining "
   985 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   606 jump *label188 equal .thoriumContainer false
   607 set :status1:text "Phase 2: servicing thorium drill"
   608 label *label577
-    * write :status1:text .display ".status1"
+  609 write "Phase 2: servicing thorium drill" .display ".status1"
   610 label *label578
   611 sensor *tmp232 .thoriumBattery @totalPower
   612 jump *label192 greaterThanEq *tmp232 2000
 
   639 jump *label199 lessThanEq *tmp82 3
   640 set :status1:text "Phase 1: supplying base"
   641 label *label579
-    * write :status1:text .display ".status1"
+  642 write "Phase 1: supplying base" .display ".status1"
   643 label *label580
   644 set :mineOre.1:ore @coal
   645 setaddr :mineOre.1*retaddr *label203 (h:*label203)
 
   656 jump *label209 greaterThanEq *tmp245 5
   657 set :status1:text "Goal 1: graphite requirement"
   658 label *label581
-    * write :status1:text .display ".status1"
+  659 write "Goal 1: graphite requirement" .display ".status1"
   660 label *label582
   661 set :supplyBlock:block AJEMJJ-graphite-press0
   662 set :supplyBlock:ore @coal
 
   674 jump *label215 greaterThanEq *tmp251 5
   675 set :status1:text "Goal 2: coal for silicon requirement"
   676 label *label583
-    * write :status1:text .display ".status1"
+  677 write "Goal 2: coal for silicon requirement" .display ".status1"
   678 label *label584
   679 set :supplyBlock:block ALMQJN-silicon-smelter4
   680 set :supplyBlock:ore @coal
 
   688 jump *label219 greaterThanEq *tmp254 5
   689 set :status1:text "Goal 3: sand for silicon requirement"
   690 label *label585
-    * write :status1:text .display ".status1"
+  691 write "Goal 3: sand for silicon requirement" .display ".status1"
   692 label *label586
   693 set :supplyBlock:block ALMQJN-silicon-smelter4
   694 set :supplyBlock:ore @sand
 
   707 jump *label225 greaterThanEq *tmp260 2
   708 set :status1:text "Goal 4: supplying generator"
   709 label *label587
-    * write :status1:text .display ".status1"
+  710 write "Goal 4: supplying generator" .display ".status1"
   711 label *label588
   712 set :supplyBlock:block AJRJM-combustion-generator3
   713 set :supplyBlock:ore @coal
 
   737 jump *label235 greaterThanEq *tmp274 *tmp275
   738 set :status1:text "Goal 5: supplying generator"
   739 label *label589
-    * write :status1:text .display ".status1"
+  740 write "Goal 5: supplying generator" .display ".status1"
   741 label *label590
   742 set :mineOre.1:ore @coal
   743 setaddr :mineOre.1*retaddr *label238 (h:*label238)
 
   749 jump *label239 greaterThanEq *tmp278 .targetSilicon
   750 set :status1:text "Goal 6: silicon requirement"
   751 label *label591
-    * write :status1:text .display ".status1"
+  752 write "Goal 6: silicon requirement" .display ".status1"
   753 label *label592
   754 sensor :supplyBase0:coal .core @coal
   755 sensor :supplyBase0:sand .core @sand
 
   764 jump *label245 greaterThanEq *tmp285 .targetCopper
   765 set :status1:text "Goal 7: copper requirement"
   766 label *label593
-    * write :status1:text .display ".status1"
+  767 write "Goal 7: copper requirement" .display ".status1"
   768 label *label594
   769 set :mineOre.1:ore @copper
   770 setaddr :mineOre.1*retaddr *label248 (h:*label248)
 
   776 jump *label249 greaterThanEq *tmp288 .targetLead
   777 set :status1:text "Goal 8: lead requirement"
   778 label *label595
-    * write :status1:text .display ".status1"
+  779 write "Goal 8: lead requirement" .display ".status1"
   780 label *label596
   781 set :mineOre.1:ore @lead
   782 setaddr :mineOre.1*retaddr *label252 (h:*label252)
 
   788 jump *label253 greaterThanEq *tmp291 .targetMetaglass
   789 set :status1:text "Goal 9: metaglass requirement"
   790 label *label597
-    * write :status1:text .display ".status1"
+  791 write "Goal 9: metaglass requirement" .display ".status1"
   792 label *label598
   793 set :mineOre.1:ore @sand
   794 setaddr :mineOre.1*retaddr *label256 (h:*label256)
 
   798 label *label253
   799 set :status1:text "Goal 10: supplying base"
   800 label *label599
-    * write :status1:text .display ".status1"
+  801 write "Goal 10: supplying base" .display ".status1"
   802 label *label600
   803 sensor :supplyBase0:coal.1 .core @coal
   804 sensor :supplyBase0:sand.1 .core @sand
 
   818 label *label231
   819 set :status1:text "Goal 11: Fetching titanium"
   820 label *label601
-    * write :status1:text .display ".status1"
+  821 write "Goal 11: Fetching titanium" .display ".status1"
   822 label *label602
   823 set :fetchBlock:block .titaniumDrill
   824 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   604 op max *tmp230 0 *tmp229
   605 write *tmp230 processor8 ".sandTarget"
   606 jump *label188 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   607 label *label577
   608 write "Phase 2: servicing thorium drill" .display ".status1"
   609 label *label578
 
   636 label *label188
   637 read *tmp82 .controller ".monos"
   638 jump *label199 lessThanEq *tmp82 3
-    * set :status1:text "Phase 1: supplying base"
   639 label *label579
   640 write "Phase 1: supplying base" .display ".status1"
   641 label *label580
 
   652 jump *label207 greaterThanEq *tmp242 .targetGraphite
   653 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   654 jump *label209 greaterThanEq *tmp245 5
-    * set :status1:text "Goal 1: graphite requirement"
   655 label *label581
   656 write "Goal 1: graphite requirement" .display ".status1"
   657 label *label582
 
   669 jump *label213 greaterThanEq *tmp248 .targetSilicon
   670 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   671 jump *label215 greaterThanEq *tmp251 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   672 label *label583
   673 write "Goal 2: coal for silicon requirement" .display ".status1"
   674 label *label584
 
   682 label *label215
   683 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   684 jump *label219 greaterThanEq *tmp254 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   685 label *label585
   686 write "Goal 3: sand for silicon requirement" .display ".status1"
   687 label *label586
 
   700 jump *label223 greaterThanEq *tmp257 .powerTarget
   701 sensor *tmp260 AJRJM-combustion-generator3 @coal
   702 jump *label225 greaterThanEq *tmp260 2
-    * set :status1:text "Goal 4: supplying generator"
   703 label *label587
   704 write "Goal 4: supplying generator" .display ".status1"
   705 label *label588
 
   729 sensor *tmp274 AJTJK-battery1 @totalPower
   730 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   731 jump *label235 greaterThanEq *tmp274 *tmp275
-    * set :status1:text "Goal 5: supplying generator"
   732 label *label589
   733 write "Goal 5: supplying generator" .display ".status1"
   734 label *label590
 
   740 label *label235
   741 sensor *tmp278 .core @silicon
   742 jump *label239 greaterThanEq *tmp278 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   743 label *label591
   744 write "Goal 6: silicon requirement" .display ".status1"
   745 label *label592
 
   754 label *label239
   755 sensor *tmp285 .core @copper
   756 jump *label245 greaterThanEq *tmp285 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   757 label *label593
   758 write "Goal 7: copper requirement" .display ".status1"
   759 label *label594
 
   765 label *label245
   766 sensor *tmp288 .core @lead
   767 jump *label249 greaterThanEq *tmp288 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   768 label *label595
   769 write "Goal 8: lead requirement" .display ".status1"
   770 label *label596
 
   776 label *label249
   777 sensor *tmp291 .core @metaglass
   778 jump *label253 greaterThanEq *tmp291 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   779 label *label597
   780 write "Goal 9: metaglass requirement" .display ".status1"
   781 label *label598
 
   785 label *label256
   786 jump *label254 always
   787 label *label253
-    * set :status1:text "Goal 10: supplying base"
   788 label *label599
   789 write "Goal 10: supplying base" .display ".status1"
   790 label *label600
 
   804 label *label234
   805 jump *label232 always
   806 label *label231
-    * set :status1:text "Goal 11: Fetching titanium"
   807 label *label601
   808 write "Goal 11: Fetching titanium" .display ".status1"
   809 label *label602

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   620 label *label194
   621 set :supplyBlockFromCore:target .thoriumGenerator
   622 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label197 (h:*label197)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label197) (h:*label197)
-    * label *label197
+  623 label *label603
+  624 sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
+  625 op min :transportStatus:target *tmp330 30
+  626 set :transportStatus:item :supplyBlockFromCore:item
+  627 setaddr :transportStatus*retaddr *label604 (h:*label604)
+  628 call *label12 *invalid :transportStatus*retval (m:*label604) (h:*label604)
+  629 label *label604
+  630 set :status2:text "Transferring "
+  631 set :status2:item :supplyBlockFromCore:item
+  632 set :status2:block :supplyBlockFromCore:target
+  633 setaddr :status2*retaddr *label605 (h:*label605)
+  634 call *label10 *invalid :status2*retval (m:*label605) (h:*label605)
+  635 label *label605
+  636 set :moveToEmpty:x .coreX
+  637 set :moveToEmpty:y .coreY
+  638 setaddr :moveToEmpty*retaddr *label606 (h:*label606)
+  639 call *label16 *invalid :moveToEmpty*retval (m:*label606) (h:*label606)
+  640 label *label606
+  641 setaddr :dropAll*retaddr *label607 (h:*label607)
+  642 call *label17 *invalid :dropAll*retval (m:*label607) (h:*label607)
+  643 label *label607
+  644 label *label608
+  645 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  646 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  647 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
+  648 op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  649 op land *tmp335 *tmp333 *tmp334
+  650 jump *label609 equal *tmp335 false
+  651 ucontrol itemDrop @air 1000
+  652 label *label609
+  653 label *label610
+  654 label *label611
+  655 sensor *tmp337 @unit :supplyBlockFromCore:item
+  656 op lessThan *tmp338 *tmp337 30
+  657 sensor *tmp339 .core :supplyBlockFromCore:item
+  658 op land *tmp340 *tmp338 *tmp339
+  659 jump *label608 notEqual *tmp340 false
+  660 label *label612
+  661 set :depositItems:block :supplyBlockFromCore:target
+  662 set :depositItems:item :supplyBlockFromCore:item
+  663 setaddr :depositItems*retaddr *label613 (h:*label613)
+  664 call *label19 *invalid :depositItems*retval (m:*label613) (h:*label613)
+  665 label *label613
+  666 label *label614
   667 label *label195
   668 label *label192
   669 label *label193
 
  1094 label *label306
  1095 return :supplyBlock*retaddr
  1096 end
-    * label *label25
-    * sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label312 (h:*label312)
-    * call *label12 *invalid :transportStatus*retval (m:*label312) (h:*label312)
-    * label *label312
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label313 (h:*label313)
-    * call *label10 *invalid :status2*retval (m:*label313) (h:*label313)
-    * label *label313
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label314 (h:*label314)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label314) (h:*label314)
-    * label *label314
-    * setaddr :dropAll*retaddr *label315 (h:*label315)
-    * call *label17 *invalid :dropAll*retval (m:*label315) (h:*label315)
-    * label *label315
-    * label *label316
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp333 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp335 *tmp333 *tmp334
-    * jump *label319 equal *tmp335 false
-    * ucontrol itemDrop @air 1000
-    * label *label319
-    * label *label320
-    * label *label317
-    * sensor *tmp337 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp338 *tmp337 30
-    * sensor *tmp339 .core :supplyBlockFromCore:item
-    * op land *tmp340 *tmp338 *tmp339
-    * jump *label316 notEqual *tmp340 false
-    * label *label318
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label321 (h:*label321)
-    * call *label19 *invalid :depositItems*retval (m:*label321) (h:*label321)
-    * label *label321
-    * label *label311
-    * return :supplyBlockFromCore*retaddr
-    * end
  1097 label *label27
  1098 read *tmp342 :unpackCfg:cfg 1
  1099 op sub *tmp343 *tmp342 74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   621 set :supplyBlockFromCore:target .thoriumGenerator
   622 set :supplyBlockFromCore:item @coal
   623 label *label603
-    * sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
+  624 sensor *tmp330 .thoriumGenerator @itemCapacity
   625 op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  626 set :transportStatus:item @coal
   627 setaddr :transportStatus*retaddr *label604 (h:*label604)
   628 call *label12 *invalid :transportStatus*retval (m:*label604) (h:*label604)
   629 label *label604
   630 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  631 set :status2:item @coal
+  632 set :status2:block .thoriumGenerator
   633 setaddr :status2*retaddr *label605 (h:*label605)
   634 call *label10 *invalid :status2*retval (m:*label605) (h:*label605)
   635 label *label605
 
   642 call *label17 *invalid :dropAll*retval (m:*label607) (h:*label607)
   643 label *label607
   644 label *label608
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  645 ucontrol itemTake .core @coal 30
   646 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   647 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  648 op notEqual *tmp334 :supplyBlockFromCore:unitItem @coal
   649 op land *tmp335 *tmp333 *tmp334
   650 jump *label609 equal *tmp335 false
   651 ucontrol itemDrop @air 1000
   652 label *label609
   653 label *label610
   654 label *label611
-    * sensor *tmp337 @unit :supplyBlockFromCore:item
+  655 sensor *tmp337 @unit @coal
   656 op lessThan *tmp338 *tmp337 30
-    * sensor *tmp339 .core :supplyBlockFromCore:item
+  657 sensor *tmp339 .core @coal
   658 op land *tmp340 *tmp338 *tmp339
   659 jump *label608 notEqual *tmp340 false
   660 label *label612
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  661 set :depositItems:block .thoriumGenerator
+  662 set :depositItems:item @coal
   663 setaddr :depositItems*retaddr *label613 (h:*label613)
   664 call *label19 *invalid :depositItems*retval (m:*label613) (h:*label613)
   665 label *label613

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   618 label *label196
   619 jump *label195 always
   620 label *label194
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   621 label *label603
   622 sensor *tmp330 .thoriumGenerator @itemCapacity
   623 op min :transportStatus:target *tmp330 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1280 end
  1281 label *label16
  1282 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label359 (h:*label359)
-    * call *label11 *invalid :status3*retval (m:*label359) (h:*label359)
-    * label *label359
+ 1283 label *label615
+ 1284 write :status3:text .display ".status3"
+ 1285 label *label616
  1286 label *label360
  1287 sensor *tmp412 @unit @firstItem
  1288 jump *label363 equal *tmp412 null
 
  1310 end
  1311 label *label19
  1312 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label370 (h:*label370)
-    * call *label11 *invalid :status3*retval (m:*label370) (h:*label370)
-    * label *label370
+ 1313 label *label617
+ 1314 write :status3:text .display ".status3"
+ 1315 label *label618
  1316 sensor *tmp419 @unit @firstItem
  1317 jump *label371 notEqual *tmp419 :depositItems:item
  1318 set :moveToBlock:block :depositItems:block
 
  1373 label *label385
  1374 label *label386
  1375 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label388 (h:*label388)
-    * call *label11 *invalid :status3*retval (m:*label388) (h:*label388)
-    * label *label388
+ 1376 label *label619
+ 1377 write :status3:text .display ".status3"
+ 1378 label *label620
  1379 op add :mineOre:stop @second 10
  1380 label *label389
  1381 sensor :mineOre:item @unit @firstItem
 
  1404 label *label381
  1405 return :mineOre*retaddr
  1406 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label397
-    * return :status3*retaddr
-    * end
  1407 label *label18
  1408 sensor *tmp443 :moveToBlock:block @x
  1409 sensor *tmp444 :moveToBlock:block @y
 
  1430 end
  1431 label *label14
  1432 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label405 (h:*label405)
-    * call *label11 *invalid :status3*retval (m:*label405) (h:*label405)
-    * label *label405
+ 1433 label *label621
+ 1434 write :status3:text .display ".status3"
+ 1435 label *label622
  1436 op sub *tmp451 :moveTo:radius 0.5
  1437 label *label406
  1438 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1281 label *label16
  1282 set :status3:text "Moving..."
  1283 label *label615
-    * write :status3:text .display ".status3"
+ 1284 write "Moving..." .display ".status3"
  1285 label *label616
  1286 label *label360
  1287 sensor *tmp412 @unit @firstItem
 
  1311 label *label19
  1312 set :status3:text "Depositing..."
  1313 label *label617
-    * write :status3:text .display ".status3"
+ 1314 write "Depositing..." .display ".status3"
  1315 label *label618
  1316 sensor *tmp419 @unit @firstItem
  1317 jump *label371 notEqual *tmp419 :depositItems:item
 
  1374 label *label386
  1375 set :status3:text "Mining..."
  1376 label *label619
-    * write :status3:text .display ".status3"
+ 1377 write "Mining..." .display ".status3"
  1378 label *label620
  1379 op add :mineOre:stop @second 10
  1380 label *label389
 
  1431 label *label14
  1432 set :status3:text "Moving..."
  1433 label *label621
-    * write :status3:text .display ".status3"
+ 1434 write "Moving..." .display ".status3"
  1435 label *label622
  1436 op sub *tmp451 :moveTo:radius 0.5
  1437 label *label406

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1279 return :transportStatus*retaddr
  1280 end
  1281 label *label16
-    * set :status3:text "Moving..."
  1282 label *label615
  1283 write "Moving..." .display ".status3"
  1284 label *label616
 
  1308 return :dropAll*retaddr
  1309 end
  1310 label *label19
-    * set :status3:text "Depositing..."
  1311 label *label617
  1312 write "Depositing..." .display ".status3"
  1313 label *label618
 
  1370 label *label387
  1371 label *label385
  1372 label *label386
-    * set :status3:text "Mining..."
  1373 label *label619
  1374 write "Mining..." .display ".status3"
  1375 label *label620
 
  1426 return :locateOre*retaddr
  1427 end
  1428 label *label14
-    * set :status3:text "Moving..."
  1429 label *label621
  1430 write "Moving..." .display ".status3"
  1431 label *label622

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1315 jump *label371 notEqual *tmp419 :depositItems:item
  1316 set :moveToBlock:block :depositItems:block
  1317 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label373 (h:*label373)
-    * call *label18 *invalid :moveToBlock*retval (m:*label373) (h:*label373)
-    * label *label373
+ 1318 label *label623
+ 1319 sensor *tmp443 :moveToBlock:block @x
+ 1320 sensor *tmp444 :moveToBlock:block @y
+ 1321 set :moveTo:x *tmp443
+ 1322 set :moveTo:y *tmp444
+ 1323 set :moveTo:radius :moveToBlock:radius
+ 1324 setaddr :moveTo*retaddr *label624 (h:*label624)
+ 1325 call *label14 *invalid :moveTo*retval (m:*label624) (h:*label624)
+ 1326 label *label624
+ 1327 label *label625
  1328 sensor :depositItems:cap :depositItems:block @itemCapacity
  1329 label *label374
  1330 ucontrol itemDrop :depositItems:block 30
 
  1408 label *label381
  1409 return :mineOre*retaddr
  1410 end
-    * label *label18
-    * sensor *tmp443 :moveToBlock:block @x
-    * sensor *tmp444 :moveToBlock:block @y
-    * set :moveTo:x *tmp443
-    * set :moveTo:y *tmp444
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label399 (h:*label399)
-    * call *label14 *invalid :moveTo*retval (m:*label399) (h:*label399)
-    * label *label399
-    * label *label398
-    * return :moveToBlock*retaddr
-    * end
  1411 label *label20
  1412 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1413 jump *label401 notEqual *tmp445 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1316 set :moveToBlock:block :depositItems:block
  1317 set :moveToBlock:radius 6
  1318 label *label623
-    * sensor *tmp443 :moveToBlock:block @x
-    * sensor *tmp444 :moveToBlock:block @y
+ 1319 sensor *tmp443 :depositItems:block @x
+ 1320 sensor *tmp444 :depositItems:block @y
  1321 set :moveTo:x *tmp443
  1322 set :moveTo:y *tmp444
-    * set :moveTo:radius :moveToBlock:radius
+ 1323 set :moveTo:radius 6
  1324 setaddr :moveTo*retaddr *label624 (h:*label624)
  1325 call *label14 *invalid :moveTo*retval (m:*label624) (h:*label624)
  1326 label *label624

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1313 label *label618
  1314 sensor *tmp419 @unit @firstItem
  1315 jump *label371 notEqual *tmp419 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1316 label *label623
  1317 sensor *tmp443 :depositItems:block @x
  1318 sensor *tmp444 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1358 call *label12 *invalid :transportStatus*retval (m:*label382) (h:*label382)
  1359 label *label382
  1360 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label383 (h:*label383)
-    * call *label20 *invalid :locateOre*retval (m:*label383) (h:*label383)
-    * label *label383
+ 1361 label *label626
+ 1362 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1363 jump *label628 notEqual *tmp445 false
+ 1364 set :error:error "Cannot locate ore"
+ 1365 setaddr :error*retaddr *label627 (h:*label627)
+ 1366 call *label13 *invalid :error*retval (m:*label627) (h:*label627)
+ 1367 label *label627
+ 1368 label *label628
+ 1369 label *label629
+ 1370 label *label630
  1371 set :mineOre:x :locateOre:x
  1372 set :mineOre:y :locateOre:y
  1373 set :moveToEmpty:x :locateOre:x
 
  1413 label *label381
  1414 return :mineOre*retaddr
  1415 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
-    * jump *label401 notEqual *tmp445 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label403 (h:*label403)
-    * call *label13 *invalid :error*retval (m:*label403) (h:*label403)
-    * label *label403
-    * label *label401
-    * label *label402
-    * label *label400
-    * return :locateOre*retaddr
-    * end
  1416 label *label14
  1417 label *label621
  1418 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1359 label *label382
  1360 set :locateOre:ore :mineOre:ore
  1361 label *label626
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1362 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1363 jump *label628 notEqual *tmp445 false
  1364 set :error:error "Cannot locate ore"
  1365 setaddr :error*retaddr *label627 (h:*label627)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1357 setaddr :transportStatus*retaddr *label382 (h:*label382)
  1358 call *label12 *invalid :transportStatus*retval (m:*label382) (h:*label382)
  1359 label *label382
-    * set :locateOre:ore :mineOre:ore
  1360 label *label626
  1361 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1362 jump *label628 notEqual *tmp445 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1319 set :moveTo:x *tmp443
  1320 set :moveTo:y *tmp444
  1321 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label624 (h:*label624)
-    * call *label14 *invalid :moveTo*retval (m:*label624) (h:*label624)
-    * label *label624
+ 1322 label *label631
+ 1323 label *label632
+ 1324 write "Moving..." .display ".status3"
+ 1325 label *label633
+ 1326 op sub *tmp451 :moveTo:radius 0.5
+ 1327 label *label634
+ 1328 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
+ 1329 jump *label636 notEqual *tmp449 false
+ 1330 ucontrol approach :moveTo:x :moveTo:y *tmp451
+ 1331 label *label635
+ 1332 jump *label634 always
+ 1333 label *label636
+ 1334 label *label637
  1335 label *label625
  1336 sensor :depositItems:cap :depositItems:block @itemCapacity
  1337 label *label374
 
  1422 label *label381
  1423 return :mineOre*retaddr
  1424 end
-    * label *label14
-    * label *label621
-    * write "Moving..." .display ".status3"
-    * label *label622
-    * op sub *tmp451 :moveTo:radius 0.5
-    * label *label406
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
-    * jump *label408 notEqual *tmp449 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp451
-    * label *label407
-    * jump *label406 always
-    * label *label408
-    * label *label404
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1323 label *label632
  1324 write "Moving..." .display ".status3"
  1325 label *label633
-    * op sub *tmp451 :moveTo:radius 0.5
+ 1326 op sub *tmp451 6 0.5
  1327 label *label634
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
+ 1328 ucontrol within *tmp443 *tmp444 6 *tmp449
  1329 jump *label636 notEqual *tmp449 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp451
+ 1330 ucontrol approach *tmp443 *tmp444 5.5
  1331 label *label635
  1332 jump *label634 always
  1333 label *label636

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1316 label *label623
  1317 sensor *tmp443 :depositItems:block @x
  1318 sensor *tmp444 :depositItems:block @y
-    * set :moveTo:x *tmp443
-    * set :moveTo:y *tmp444
-    * set :moveTo:radius 6
  1319 label *label631
  1320 label *label632
  1321 write "Moving..." .display ".status3"
  1322 label *label633
-    * op sub *tmp451 6 0.5
  1323 label *label634
  1324 ucontrol within *tmp443 *tmp444 6 *tmp449
  1325 jump *label636 notEqual *tmp449 false

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1300 label *label366
  1301 sensor *tmp417 @unit @firstItem
  1302 jump *label368 equal *tmp417 null
+ 1303 label *label638
  1304 ucontrol itemDrop @air 1000
  1305 label *label367
-    * jump *label366 always
+ 1306 sensor *tmp417 @unit @firstItem
+ 1307 jump *label638 notEqual *tmp417 null
  1308 label *label368
  1309 label *label365
  1310 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1325 label *label634
  1326 ucontrol within *tmp443 *tmp444 6 *tmp449
  1327 jump *label636 notEqual *tmp449 false
+ 1328 label *label639
  1329 ucontrol approach *tmp443 *tmp444 5.5
  1330 label *label635
-    * jump *label634 always
+ 1331 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1332 jump *label639 equal *tmp449 false
  1333 label *label636
  1334 label *label637
  1335 label *label625

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1347 label *label377
  1348 sensor *tmp427 @unit @firstItem
  1349 jump *label379 equal *tmp427 null
+ 1350 label *label640
  1351 ucontrol itemDrop @air 1000
  1352 label *label378
-    * jump *label377 always
+ 1353 sensor *tmp427 @unit @firstItem
+ 1354 jump *label640 notEqual *tmp427 null
  1355 label *label379
  1356 label *label372
  1357 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
  1356 label *label372
  1357 set :transportStatus:target 0
  1358 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label380 (h:*label380)
-    * call *label12 *invalid :transportStatus*retval (m:*label380) (h:*label380)
-    * label *label380
+ 1359 label *label641
+ 1360 write :transportStatus:target .display ".transportTarget"
+ 1361 write :transportStatus:item .display ".transportItem"
+ 1362 label *label642
  1363 label *label369
  1364 return :depositItems*retaddr
  1365 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1357 set :transportStatus:target 0
  1358 set :transportStatus:item null
  1359 label *label641
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1360 write 0 .display ".transportTarget"
+ 1361 write null .display ".transportItem"
  1362 label *label642
  1363 label *label369
  1364 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1354 jump *label640 notEqual *tmp427 null
  1355 label *label379
  1356 label *label372
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
  1357 label *label641
  1358 write 0 .display ".transportTarget"
  1359 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   622 sensor *tmp330 .thoriumGenerator @itemCapacity
   623 op min :transportStatus:target *tmp330 30
   624 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label604 (h:*label604)
-    * call *label12 *invalid :transportStatus*retval (m:*label604) (h:*label604)
-    * label *label604
+  625 label *label643
+  626 write :transportStatus:target .display ".transportTarget"
+  627 write :transportStatus:item .display ".transportItem"
+  628 label *label644
   629 set :status2:text "Transferring "
   630 set :status2:item @coal
   631 set :status2:block .thoriumGenerator
 
  1027 sensor *tmp312 :fetchBlock:block @itemCapacity
  1028 op min :transportStatus:target *tmp312 30
  1029 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label296 (h:*label296)
-    * call *label12 *invalid :transportStatus*retval (m:*label296) (h:*label296)
-    * label *label296
+ 1030 label *label645
+ 1031 write :transportStatus:target .display ".transportTarget"
+ 1032 write :transportStatus:item .display ".transportItem"
+ 1033 label *label646
  1034 set :status2:text "Fetching "
  1035 set :status2:item :fetchBlock:item
  1036 set :status2:block :fetchBlock:block
 
  1274 label *label356
  1275 return :status2*retaddr
  1276 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label357
-    * return :transportStatus*retaddr
-    * end
  1277 label *label16
  1278 label *label615
  1279 write "Moving..." .display ".status3"
 
  1361 op min :mineOre:amount :mineOre:amount 30
  1362 set :transportStatus:target :mineOre:amount
  1363 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label382 (h:*label382)
-    * call *label12 *invalid :transportStatus*retval (m:*label382) (h:*label382)
-    * label *label382
+ 1364 label *label647
+ 1365 write :transportStatus:target .display ".transportTarget"
+ 1366 write :transportStatus:item .display ".transportItem"
+ 1367 label *label648
  1368 label *label626
  1369 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1370 jump *label628 notEqual *tmp445 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   624 set :transportStatus:item @coal
   625 label *label643
   626 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  627 write @coal .display ".transportItem"
   628 label *label644
   629 set :status2:text "Transferring "
   630 set :status2:item @coal
 
  1029 set :transportStatus:item :fetchBlock:item
  1030 label *label645
  1031 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1032 write :fetchBlock:item .display ".transportItem"
  1033 label *label646
  1034 set :status2:text "Fetching "
  1035 set :status2:item :fetchBlock:item
 
  1362 set :transportStatus:target :mineOre:amount
  1363 set :transportStatus:item :mineOre:ore
  1364 label *label647
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1365 write :mineOre:amount .display ".transportTarget"
+ 1366 write :mineOre:ore .display ".transportItem"
  1367 label *label648
  1368 label *label626
  1369 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   621 label *label603
   622 sensor *tmp330 .thoriumGenerator @itemCapacity
   623 op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item @coal
   624 label *label643
   625 write :transportStatus:target .display ".transportTarget"
   626 write @coal .display ".transportItem"
 
  1025 label *label23
  1026 sensor *tmp312 :fetchBlock:block @itemCapacity
  1027 op min :transportStatus:target *tmp312 30
-    * set :transportStatus:item :fetchBlock:item
  1028 label *label645
  1029 write :transportStatus:target .display ".transportTarget"
  1030 write :fetchBlock:item .display ".transportItem"
 
  1358 label *label21
  1359 op min :mineOre:amount :mineOre:amount 30
  1360 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
  1361 label *label647
  1362 write :mineOre:amount .display ".transportTarget"
  1363 write :mineOre:ore .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
  1032 set :status2:text "Fetching "
  1033 set :status2:item :fetchBlock:item
  1034 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label297 (h:*label297)
-    * call *label10 *invalid :status2*retval (m:*label297) (h:*label297)
-    * label *label297
+ 1035 label *label649
+ 1036 write :status2:text .display ".status2"
+ 1037 write :status2:item .display ".item2"
+ 1038 write :status2:block .display ".block2"
+ 1039 label *label650
  1040 sensor *tmp314 :fetchBlock:block @x
  1041 sensor *tmp315 :fetchBlock:block @y
  1042 set :moveToEmpty:x *tmp314

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1033 set :status2:item :fetchBlock:item
  1034 set :status2:block :fetchBlock:block
  1035 label *label649
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1036 write "Fetching " .display ".status2"
+ 1037 write :fetchBlock:item .display ".item2"
+ 1038 write :fetchBlock:block .display ".block2"
  1039 label *label650
  1040 sensor *tmp314 :fetchBlock:block @x
  1041 sensor *tmp315 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
  1029 write :transportStatus:target .display ".transportTarget"
  1030 write :fetchBlock:item .display ".transportItem"
  1031 label *label646
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
  1032 label *label649
  1033 write "Fetching " .display ".status2"
  1034 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   628 set :status2:text "Transferring "
   629 set :status2:item @coal
   630 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label605 (h:*label605)
-    * call *label10 *invalid :status2*retval (m:*label605) (h:*label605)
-    * label *label605
+  631 label *label651
+  632 write :status2:text .display ".status2"
+  633 write :status2:item .display ".item2"
+  634 write :status2:block .display ".block2"
+  635 label *label652
   636 set :moveToEmpty:x .coreX
   637 set :moveToEmpty:y .coreY
   638 setaddr :moveToEmpty*retaddr *label606 (h:*label606)
 
  1012 set :status2:text "Mining "
  1013 set :status2:item :mineOre.1:ore
  1014 set :status2:block "core"
-    * setaddr :status2*retaddr *label293 (h:*label293)
-    * call *label10 *invalid :status2*retval (m:*label293) (h:*label293)
-    * label *label293
+ 1015 label *label653
+ 1016 write :status2:text .display ".status2"
+ 1017 write :status2:item .display ".item2"
+ 1018 write :status2:block .display ".block2"
+ 1019 label *label654
  1020 set :mineOre:ore :mineOre.1:ore
  1021 set :mineOre:amount 30
  1022 set :mineOre:block .core
 
  1077 set :status2:text "Supplying "
  1078 set :status2:item :supplyBlock:ore
  1079 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label307 (h:*label307)
-    * call *label10 *invalid :status2*retval (m:*label307) (h:*label307)
-    * label *label307
+ 1080 label *label655
+ 1081 write :status2:text .display ".status2"
+ 1082 write :status2:item .display ".item2"
+ 1083 write :status2:block .display ".block2"
+ 1084 label *label656
  1085 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1086 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
  1087 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
  1270 label *label353
  1271 return :buildBlock*retaddr
  1272 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label356
-    * return :status2*retaddr
-    * end
  1273 label *label16
  1274 label *label615
  1275 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   629 set :status2:item @coal
   630 set :status2:block .thoriumGenerator
   631 label *label651
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  632 write "Transferring " .display ".status2"
+  633 write @coal .display ".item2"
+  634 write .thoriumGenerator .display ".block2"
   635 label *label652
   636 set :moveToEmpty:x .coreX
   637 set :moveToEmpty:y .coreY
 
  1013 set :status2:item :mineOre.1:ore
  1014 set :status2:block "core"
  1015 label *label653
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1016 write "Mining " .display ".status2"
+ 1017 write :mineOre.1:ore .display ".item2"
+ 1018 write "core" .display ".block2"
  1019 label *label654
  1020 set :mineOre:ore :mineOre.1:ore
  1021 set :mineOre:amount 30
 
  1078 set :status2:item :supplyBlock:ore
  1079 set :status2:block :supplyBlock:block
  1080 label *label655
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1081 write "Supplying " .display ".status2"
+ 1082 write :supplyBlock:ore .display ".item2"
+ 1083 write :supplyBlock:block .display ".block2"
  1084 label *label656
  1085 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1086 sensor *tmp326 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   625 write :transportStatus:target .display ".transportTarget"
   626 write @coal .display ".transportItem"
   627 label *label644
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   628 label *label651
   629 write "Transferring " .display ".status2"
   630 write @coal .display ".item2"
 
  1006 return :lineUpUnits*retaddr
  1007 end
  1008 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
  1009 label *label653
  1010 write "Mining " .display ".status2"
  1011 write :mineOre.1:ore .display ".item2"
 
  1068 return :fetchBlock*retaddr
  1069 end
  1070 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
  1071 label *label655
  1072 write "Supplying " .display ".status2"
  1073 write :supplyBlock:ore .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    67 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    69 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label58 (h:*label58)
-    * call *label13 *invalid :error*retval (m:*label58) (h:*label58)
-    * label *label58
+   70 label *label657
+   71 set .ERROR :error:error
+   72 stop
+   73 label *label658
    74 label *label56
    75 label *label57
    76 write @pneumatic-drill processor1 ".nextBlock"
 
   432 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   433 jump *label147 notEqual :buildThoriumDrill:result false
   434 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label149 (h:*label149)
-    * call *label13 *invalid :error*retval (m:*label149) (h:*label149)
-    * label *label149
+  435 label *label659
+  436 set .ERROR :error:error
+  437 stop
+  438 label *label660
   439 label *label147
   440 label *label148
   441 write @laser-drill processor5 ":buildBlockAt:block"
 
   594 label *label181
   595 label *label174
   596 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label186
-    * return :error*retaddr
-    * end
   597 label *label33
   598 sensor *tmp228 .core @silicon
   599 op sub *tmp229 .targetSilicon *tmp228
 
  1351 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1352 jump *label628 notEqual *tmp445 false
  1353 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label627 (h:*label627)
-    * call *label13 *invalid :error*retval (m:*label627) (h:*label627)
-    * label *label627
+ 1354 label *label661
+ 1355 set .ERROR :error:error
+ 1356 stop
+ 1357 label *label662
  1358 label *label628
  1359 label *label629
  1360 label *label630

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    69 set :error:error "Cannot locate spot for titanium drill"
    70 label *label657
-    * set .ERROR :error:error
+   71 set .ERROR "Cannot locate spot for titanium drill"
    72 stop
    73 label *label658
    74 label *label56
 
   433 jump *label147 notEqual :buildThoriumDrill:result false
   434 set :error:error "Cannot locate spot for thorium drill"
   435 label *label659
-    * set .ERROR :error:error
+  436 set .ERROR "Cannot locate spot for thorium drill"
   437 stop
   438 label *label660
   439 label *label147
 
  1342 end
  1343 label *label21
  1344 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
  1345 label *label647
  1346 write :mineOre:amount .display ".transportTarget"
  1347 write :mineOre:ore .display ".transportItem"
 
  1351 jump *label628 notEqual *tmp445 false
  1352 set :error:error "Cannot locate ore"
  1353 label *label661
-    * set .ERROR :error:error
+ 1354 set .ERROR "Cannot locate ore"
  1355 stop
  1356 label *label662
  1357 label *label628

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    66 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    67 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    69 label *label657
    70 set .ERROR "Cannot locate spot for titanium drill"
    71 stop
 
   430 jump *label146 equal *tmp191 false
   431 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   432 jump *label147 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   433 label *label659
   434 set .ERROR "Cannot locate spot for thorium drill"
   435 stop
 
  1347 label *label626
  1348 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1349 jump *label628 notEqual *tmp445 false
-    * set :error:error "Cannot locate ore"
  1350 label *label661
  1351 set .ERROR "Cannot locate ore"
  1352 stop

Modifications by Inline function call at Actions.mnd:137:5 (+3 instructions):
 
  1033 setaddr :moveToEmpty*retaddr *label298 (h:*label298)
  1034 call *label16 *invalid :moveToEmpty*retval (m:*label298) (h:*label298)
  1035 label *label298
-    * setaddr :dropAll*retaddr *label299 (h:*label299)
-    * call *label17 *invalid :dropAll*retval (m:*label299) (h:*label299)
-    * label *label299
+ 1036 label *label663
+ 1037 label *label664
+ 1038 sensor *tmp417 @unit @firstItem
+ 1039 jump *label667 equal *tmp417 null
+ 1040 label *label665
+ 1041 ucontrol itemDrop @air 1000
+ 1042 label *label666
+ 1043 sensor *tmp417 @unit @firstItem
+ 1044 jump *label665 notEqual *tmp417 null
+ 1045 label *label667
+ 1046 label *label668
  1047 label *label300
  1048 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
  1049 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   626 label *label652
   627 set :moveToEmpty:x .coreX
   628 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label606 (h:*label606)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label606) (h:*label606)
-    * label *label606
+  629 label *label669
+  630 label *label670
+  631 write "Moving..." .display ".status3"
+  632 label *label671
+  633 label *label672
+  634 sensor *tmp412 @unit @firstItem
+  635 jump *label673 equal *tmp412 null
+  636 ucontrol itemDrop @air 1000
+  637 label *label673
+  638 label *label674
+  639 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  640 label *label675
+  641 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  642 jump *label672 equal *tmp415 false
+  643 label *label676
+  644 label *label677
   645 setaddr :dropAll*retaddr *label607 (h:*label607)
   646 call *label17 *invalid :dropAll*retval (m:*label607) (h:*label607)
   647 label *label607
 
  1043 sensor *tmp315 :fetchBlock:block @y
  1044 set :moveToEmpty:x *tmp314
  1045 set :moveToEmpty:y *tmp315
-    * setaddr :moveToEmpty*retaddr *label298 (h:*label298)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label298) (h:*label298)
-    * label *label298
+ 1046 label *label678
+ 1047 label *label679
+ 1048 write "Moving..." .display ".status3"
+ 1049 label *label680
+ 1050 label *label681
+ 1051 sensor *tmp412 @unit @firstItem
+ 1052 jump *label682 equal *tmp412 null
+ 1053 ucontrol itemDrop @air 1000
+ 1054 label *label682
+ 1055 label *label683
+ 1056 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1057 label *label684
+ 1058 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1059 jump *label681 equal *tmp415 false
+ 1060 label *label685
+ 1061 label *label686
  1062 label *label663
  1063 label *label664
  1064 sensor *tmp417 @unit @firstItem
 
  1289 label *label353
  1290 return :buildBlock*retaddr
  1291 end
-    * label *label16
-    * label *label615
-    * write "Moving..." .display ".status3"
-    * label *label616
-    * label *label360
-    * sensor *tmp412 @unit @firstItem
-    * jump *label363 equal *tmp412 null
-    * ucontrol itemDrop @air 1000
-    * label *label363
-    * label *label364
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label361
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
-    * jump *label360 equal *tmp415 false
-    * label *label362
-    * label *label358
-    * return :moveToEmpty*retaddr
-    * end
  1292 label *label17
  1293 label *label366
  1294 sensor *tmp417 @unit @firstItem
 
  1374 set :mineOre:y :locateOre:y
  1375 set :moveToEmpty:x :locateOre:x
  1376 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label384 (h:*label384)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label384) (h:*label384)
-    * label *label384
+ 1377 label *label687
+ 1378 label *label688
+ 1379 write "Moving..." .display ".status3"
+ 1380 label *label689
+ 1381 label *label690
+ 1382 sensor *tmp412 @unit @firstItem
+ 1383 jump *label691 equal *tmp412 null
+ 1384 ucontrol itemDrop @air 1000
+ 1385 label *label691
+ 1386 label *label692
+ 1387 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1388 label *label693
+ 1389 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1390 jump *label690 equal *tmp415 false
+ 1391 label *label694
+ 1392 label *label695
  1393 sensor *tmp430 @unit @firstItem
  1394 jump *label385 equal *tmp430 :mineOre:ore
  1395 setaddr :dropAll*retaddr *label387 (h:*label387)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   636 ucontrol itemDrop @air 1000
   637 label *label673
   638 label *label674
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  639 ucontrol approach .coreX .coreY 5.5
   640 label *label675
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  641 ucontrol within .coreX .coreY 6 *tmp415
   642 jump *label672 equal *tmp415 false
   643 label *label676
   644 label *label677
 
  1053 ucontrol itemDrop @air 1000
  1054 label *label682
  1055 label *label683
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1056 ucontrol approach *tmp314 *tmp315 5.5
  1057 label *label684
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1058 ucontrol within *tmp314 *tmp315 6 *tmp415
  1059 jump *label681 equal *tmp415 false
  1060 label *label685
  1061 label *label686
 
  1384 ucontrol itemDrop @air 1000
  1385 label *label691
  1386 label *label692
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1387 ucontrol approach :locateOre:x :locateOre:y 5.5
  1388 label *label693
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1389 ucontrol within :locateOre:x :locateOre:y 6 *tmp415
  1390 jump *label690 equal *tmp415 false
  1391 label *label694
  1392 label *label695

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   624 write @coal .display ".item2"
   625 write .thoriumGenerator .display ".block2"
   626 label *label652
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   627 label *label669
   628 label *label670
   629 write "Moving..." .display ".status3"
 
  1039 label *label650
  1040 sensor *tmp314 :fetchBlock:block @x
  1041 sensor *tmp315 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp314
-    * set :moveToEmpty:y *tmp315
  1042 label *label678
  1043 label *label679
  1044 write "Moving..." .display ".status3"
 
  1368 label *label630
  1369 set :mineOre:x :locateOre:x
  1370 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
  1371 label *label687
  1372 label *label688
  1373 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
   640 jump *label672 equal *tmp415 false
   641 label *label676
   642 label *label677
-    * setaddr :dropAll*retaddr *label607 (h:*label607)
-    * call *label17 *invalid :dropAll*retval (m:*label607) (h:*label607)
-    * label *label607
+  643 label *label696
+  644 label *label697
+  645 sensor *tmp417 @unit @firstItem
+  646 jump *label700 equal *tmp417 null
+  647 label *label698
+  648 ucontrol itemDrop @air 1000
+  649 label *label699
+  650 sensor *tmp417 @unit @firstItem
+  651 jump *label698 notEqual *tmp417 null
+  652 label *label700
+  653 label *label701
   654 label *label608
   655 ucontrol itemTake .core @coal 30
   656 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
  1293 label *label353
  1294 return :buildBlock*retaddr
  1295 end
-    * label *label17
-    * label *label366
-    * sensor *tmp417 @unit @firstItem
-    * jump *label368 equal *tmp417 null
-    * label *label638
-    * ucontrol itemDrop @air 1000
-    * label *label367
-    * sensor *tmp417 @unit @firstItem
-    * jump *label638 notEqual *tmp417 null
-    * label *label368
-    * label *label365
-    * return :dropAll*retaddr
-    * end
  1296 label *label19
  1297 label *label617
  1298 write "Depositing..." .display ".status3"
 
  1381 label *label695
  1382 sensor *tmp430 @unit @firstItem
  1383 jump *label385 equal *tmp430 :mineOre:ore
-    * setaddr :dropAll*retaddr *label387 (h:*label387)
-    * call *label17 *invalid :dropAll*retval (m:*label387) (h:*label387)
-    * label *label387
+ 1384 label *label702
+ 1385 label *label703
+ 1386 sensor *tmp417 @unit @firstItem
+ 1387 jump *label706 equal *tmp417 null
+ 1388 label *label704
+ 1389 ucontrol itemDrop @air 1000
+ 1390 label *label705
+ 1391 sensor *tmp417 @unit @firstItem
+ 1392 jump *label704 notEqual *tmp417 null
+ 1393 label *label706
+ 1394 label *label707
  1395 label *label385
  1396 label *label386
  1397 label *label619

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1407 jump *label391 always
  1408 label *label392
  1409 label *label393
-    * ucontrol mine :mineOre:x :mineOre:y
+ 1410 ucontrol mine :locateOre:x :locateOre:y
  1411 jump *label394 lessThanEq @second :mineOre:stop
  1412 jump *label391 always
  1413 label *label394

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1361 label *label628
  1362 label *label629
  1363 label *label630
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
  1364 label *label687
  1365 label *label688
  1366 write "Moving..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:133:5 (+6 instructions):
 
   691 write "Phase 1: supplying base" .display ".status1"
   692 label *label580
   693 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label203 (h:*label203)
-    * call *label22 *invalid :mineOre.1*retval (m:*label203) (h:*label203)
-    * label *label203
+  694 label *label708
+  695 label *label709
+  696 write "Mining " .display ".status2"
+  697 write :mineOre.1:ore .display ".item2"
+  698 write "core" .display ".block2"
+  699 label *label710
+  700 set :mineOre:ore :mineOre.1:ore
+  701 set :mineOre:amount 30
+  702 set :mineOre:block .core
+  703 setaddr :mineOre*retaddr *label711 (h:*label711)
+  704 call *label21 *invalid :mineOre*retval (m:*label711) (h:*label711)
+  705 label *label711
+  706 label *label712
   707 label *label201
   708 jump *label200 always
   709 label *label199

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   694 label *label708
   695 label *label709
   696 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  697 write @coal .display ".item2"
   698 write "core" .display ".block2"
   699 label *label710
-    * set :mineOre:ore :mineOre.1:ore
+  700 set :mineOre:ore @coal
   701 set :mineOre:amount 30
   702 set :mineOre:block .core
   703 setaddr :mineOre*retaddr *label711 (h:*label711)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   690 label *label579
   691 write "Phase 1: supplying base" .display ".status1"
   692 label *label580
-    * set :mineOre.1:ore @coal
   693 label *label708
   694 label *label709
   695 write "Mining " .display ".status2"

Modifications by Inline function call at Actions.mnd:147:5 (+23 instructions):
 
  1102 label *label302
  1103 set :depositItems:block .core
  1104 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label305 (h:*label305)
-    * call *label19 *invalid :depositItems*retval (m:*label305) (h:*label305)
-    * label *label305
+ 1105 label *label713
+ 1106 label *label714
+ 1107 write "Depositing..." .display ".status3"
+ 1108 label *label715
+ 1109 sensor *tmp419 @unit @firstItem
+ 1110 jump *label729 notEqual *tmp419 :depositItems:item
+ 1111 label *label716
+ 1112 sensor *tmp443 :depositItems:block @x
+ 1113 sensor *tmp444 :depositItems:block @y
+ 1114 label *label717
+ 1115 label *label718
+ 1116 write "Moving..." .display ".status3"
+ 1117 label *label719
+ 1118 label *label720
+ 1119 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1120 jump *label723 notEqual *tmp449 false
+ 1121 label *label721
+ 1122 ucontrol approach *tmp443 *tmp444 5.5
+ 1123 label *label722
+ 1124 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1125 jump *label721 equal *tmp449 false
+ 1126 label *label723
+ 1127 label *label724
+ 1128 label *label725
+ 1129 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1130 label *label726
+ 1131 ucontrol itemDrop :depositItems:block 30
+ 1132 label *label727
+ 1133 sensor *tmp423 @unit @firstItem
+ 1134 op mul *tmp424 *tmp423 :depositItems:cap
+ 1135 sensor *tmp425 :depositItems:block :depositItems:item
+ 1136 jump *label726 greaterThan *tmp424 *tmp425
+ 1137 label *label728
+ 1138 jump *label734 always
+ 1139 label *label729
+ 1140 label *label730
+ 1141 sensor *tmp427 @unit @firstItem
+ 1142 jump *label733 equal *tmp427 null
+ 1143 label *label731
+ 1144 ucontrol itemDrop @air 1000
+ 1145 label *label732
+ 1146 sensor *tmp427 @unit @firstItem
+ 1147 jump *label731 notEqual *tmp427 null
+ 1148 label *label733
+ 1149 label *label734
+ 1150 label *label735
+ 1151 write 0 .display ".transportTarget"
+ 1152 write null .display ".transportItem"
+ 1153 label *label736
+ 1154 label *label737
  1155 label *label295
  1156 return :fetchBlock*retaddr
  1157 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1107 write "Depositing..." .display ".status3"
  1108 label *label715
  1109 sensor *tmp419 @unit @firstItem
-    * jump *label729 notEqual *tmp419 :depositItems:item
+ 1110 jump *label729 notEqual *tmp419 :fetchBlock:item
  1111 label *label716
-    * sensor *tmp443 :depositItems:block @x
-    * sensor *tmp444 :depositItems:block @y
+ 1112 sensor *tmp443 .core @x
+ 1113 sensor *tmp444 .core @y
  1114 label *label717
  1115 label *label718
  1116 write "Moving..." .display ".status3"
 
  1126 label *label723
  1127 label *label724
  1128 label *label725
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1129 sensor :depositItems:cap .core @itemCapacity
  1130 label *label726
-    * ucontrol itemDrop :depositItems:block 30
+ 1131 ucontrol itemDrop .core 30
  1132 label *label727
  1133 sensor *tmp423 @unit @firstItem
  1134 op mul *tmp424 *tmp423 :depositItems:cap
-    * sensor *tmp425 :depositItems:block :depositItems:item
+ 1135 sensor *tmp425 .core :fetchBlock:item
  1136 jump *label726 greaterThan *tmp424 *tmp425
  1137 label *label728
  1138 jump *label734 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1100 op land *tmp324 *tmp322 *tmp323
  1101 jump *label300 notEqual *tmp324 false
  1102 label *label302
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
  1103 label *label713
  1104 label *label714
  1105 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:141:13 (+10 instructions):
 
   607 jump *label194 greaterThanEq *tmp235 50
   608 set :supplyBlock:block .thoriumGenerator
   609 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label196 (h:*label196)
-    * call *label24 *invalid :supplyBlock*retval (m:*label196) (h:*label196)
-    * label *label196
+  610 label *label738
+  611 label *label739
+  612 write "Supplying " .display ".status2"
+  613 write :supplyBlock:ore .display ".item2"
+  614 write :supplyBlock:block .display ".block2"
+  615 label *label740
+  616 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  617 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
+  618 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
+  619 jump *label742 lessThanEq :supplyBlock:missing 0
+  620 set :mineOre:ore :supplyBlock:ore
+  621 set :mineOre:amount :supplyBlock:blockCapacity
+  622 set :mineOre:block :supplyBlock:block
+  623 setaddr :mineOre*retaddr *label741 (h:*label741)
+  624 call *label21 *invalid :mineOre*retval (m:*label741) (h:*label741)
+  625 label *label741
+  626 label *label742
+  627 label *label743
+  628 label *label744
   629 jump *label195 always
   630 label *label194
   631 label *label603

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   610 label *label738
   611 label *label739
   612 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  613 write @coal .display ".item2"
+  614 write .thoriumGenerator .display ".block2"
   615 label *label740
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp326 :supplyBlock:block :supplyBlock:ore
+  616 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  617 sensor *tmp326 .thoriumGenerator @coal
   618 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
   619 jump *label742 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  620 set :mineOre:ore @coal
   621 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  622 set :mineOre:block .thoriumGenerator
   623 setaddr :mineOre*retaddr *label741 (h:*label741)
   624 call *label21 *invalid :mineOre*retval (m:*label741) (h:*label741)
   625 label *label741

Modifications by Replicate loop condition at CoreBuilder.mnd:409:5 (+1 instructions):
 
   363 label *label131
   364 read *tmp83 .controller ".polys"
   365 jump *label133 greaterThanEq *tmp83 3
+  366 label *label745
   367 setaddr :supplyBase*retaddr *label134 (h:*label134)
   368 call *label33 *invalid :supplyBase*retval (m:*label134) (h:*label134)
   369 label *label134
   370 label *label132
-    * jump *label131 always
+  371 read *tmp83 .controller ".polys"
+  372 jump *label745 lessThan *tmp83 3
   373 label *label133
   374 write 3 .controller ".flareTarget"
   375 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:414:5 (+1 instructions):
 
   377 label *label136
   378 read *tmp81 .controller ".flares"
   379 jump *label138 greaterThanEq *tmp81 2
+  380 label *label746
   381 setaddr :supplyBase*retaddr *label139 (h:*label139)
   382 call *label33 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   383 label *label139
   384 label *label137
-    * jump *label136 always
+  385 read *tmp81 .controller ".flares"
+  386 jump *label746 lessThan *tmp81 2
   387 label *label138
   388 set .graphiteSurplus 100
   389 write 5 .controller ".monoTarget"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    82 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    83 jump *label59 equal *tmp140 false
    84 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label53 always
    85 label *label53
    86 set .titaniumDrill *tmp123
    87 write *tmp123 processor1 ".titaniumDrill"
 
   800 sensor *tmp266 .core @titanium
   801 op sub *tmp267 .targetTitanium *tmp266
   802 op min *tmp265 7 *tmp267
-    * jump *label230 always
   803 label *label230
   804 sensor *tmp269 .titaniumDrill @titanium
   805 jump *label231 greaterThanEq *tmp269 *tmp265
 
   956 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   957 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   958 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label268 always
   959 label *label268
   960 return :buildBlockFromCfg*retaddr
   961 end
 
  1360 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1361 jump *label355 equal *tmp410 false
  1362 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label353 always
  1363 label *label353
  1364 return :buildBlock*retaddr
  1365 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   109 write .core :buildBlockFromCfg*retval ".core"
   110 write bank1 :buildBlockFromCfg*retval ".bank"
   111 label *label411
-    * read *tmp147 @this "AJEMJJ-graphite-press0"
+  112 set *tmp147 AJEMJJ-graphite-press0
   113 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   114 label *label412
   115 label *label415
-    * read *tmp147 @this "AJTJK-battery1"
+  116 set *tmp147 AJTJK-battery1
   117 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   118 label *label416
   119 label *label419
-    * read *tmp147 @this "ALTJL-battery2"
+  120 set *tmp147 ALTJL-battery2
   121 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   122 label *label420
   123 label *label423
-    * read *tmp147 @this "AJRJM-combustion-generator3"
+  124 set *tmp147 AJRJM-combustion-generator3
   125 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   126 label *label424
   127 label *label427
-    * read *tmp147 @this "ALMQJN-silicon-smelter4"
+  128 set *tmp147 ALMQJN-silicon-smelter4
   129 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   130 label *label428
   131 label *label431
-    * read *tmp147 @this "A{LNJO-inverted-sorter5"
+  132 set *tmp147 A{LNJO-inverted-sorter5
   133 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   134 label *label432
   135 label *label435
-    * read *tmp147 @this "AJJJP-pneumatic-drill6"
+  136 set *tmp147 AJJJP-pneumatic-drill6
   137 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   138 label *label436
   139 label *label439
-    * read *tmp147 @this "A©JNJQ-unloader7"
+  140 set *tmp147 A©JNJQ-unloader7
   141 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   142 label *label440
   143 label *label443
-    * read *tmp147 @this "A{HNJR-inverted-sorter8"
+  144 set *tmp147 A{HNJR-inverted-sorter8
   145 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   146 label *label444
   147 label *label447
-    * read *tmp147 @this "A~JPJS-overflow-gate9"
+  148 set *tmp147 A~JPJS-overflow-gate9
   149 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
   150 label *label448
   151 label *label451
-    * read *tmp147 @this "AÕFFJT-micro-processor10"
+  152 set *tmp147 AÕFFJT-micro-processor10
   153 write *tmp147 :buildBlockFromCfg*retval "AÕFFJT-micro-processor10"
   154 label *label452
   155 label *label455
-    * read *tmp147 @this "AFJJU-power-node11"
+  156 set *tmp147 AFJJU-power-node11
   157 write *tmp147 :buildBlockFromCfg*retval "AFJJU-power-node11"
   158 label *label456
   159 label *label459
-    * read *tmp147 @this "A©FHJV-unloader12"
+  160 set *tmp147 A©FHJV-unloader12
   161 write *tmp147 :buildBlockFromCfg*retval "A©FHJV-unloader12"
   162 label *label460
   163 label *label463
-    * read *tmp147 @this "A¾BHMW-air-factory13"
+  164 set *tmp147 A¾BHMW-air-factory13
   165 write *tmp147 :buildBlockFromCfg*retval "A¾BHMW-air-factory13"
   166 label *label464
   167 label *label467
-    * read *tmp147 @this "A©NHJX-unloader14"
+  168 set *tmp147 A©NHJX-unloader14
   169 write *tmp147 :buildBlockFromCfg*retval "A©NHJX-unloader14"
   170 label *label468
   171 label *label471
-    * read *tmp147 @this "A{NJJY-inverted-sorter15"
+  172 set *tmp147 A{NJJY-inverted-sorter15
   173 write *tmp147 :buildBlockFromCfg*retval "A{NJJY-inverted-sorter15"
   174 label *label472
   175 label *label475
-    * read *tmp147 @this "ANOMJZ-kiln16"
+  176 set *tmp147 ANOMJZ-kiln16
   177 write *tmp147 :buildBlockFromCfg*retval "ANOMJZ-kiln16"
   178 label *label476
   179 label *label479
-    * read *tmp147 @this "A¡ASJ[-water-extractor17"
+  180 set *tmp147 A¡ASJ[-water-extractor17
   181 write *tmp147 :buildBlockFromCfg*retval "A¡ASJ[-water-extractor17"
   182 label *label480
   183 label *label483
-    * read *tmp147 @this "A©BLJ\-unloader18"
+  184 set *tmp147 A©BLJ\-unloader18
   185 write *tmp147 :buildBlockFromCfg*retval "A©BLJ\-unloader18"
   186 label *label484
   187 label *label487
-    * read *tmp147 @this "AAOJ]-steam-generator19"
+  188 set *tmp147 AAOJ]-steam-generator19
   189 write *tmp147 :buildBlockFromCfg*retval "AAOJ]-steam-generator19"
   190 label *label488
   191 label *label491
-    * read *tmp147 @this "AKFRJ^-multi-press20"
+  192 set *tmp147 AKFRJ^-multi-press20
   193 write *tmp147 :buildBlockFromCfg*retval "AKFRJ^-multi-press20"
   194 label *label492
   195 label *label495
-    * read *tmp147 @this "AÇBBJ_-payload-router21"
+  196 set *tmp147 AÇBBJ_-payload-router21
   197 write *tmp147 :buildBlockFromCfg*retval "AÇBBJ_-payload-router21"
   198 label *label496
   199 label *label499
-    * read *tmp147 @this "A©HFJ`-unloader22"
+  200 set *tmp147 A©HFJ`-unloader22
   201 write *tmp147 :buildBlockFromCfg*retval "A©HFJ`-unloader22"
   202 label *label500
   203 label *label503
-    * read *tmp147 @this "AÀHBJa-additive-reconstructor23"
+  204 set *tmp147 AÀHBJa-additive-reconstructor23
   205 write *tmp147 :buildBlockFromCfg*retval "AÀHBJa-additive-reconstructor23"
   206 label *label504
   207 label *label507
-    * read *tmp147 @this "ATNJb-battery-large24"
+  208 set *tmp147 ATNJb-battery-large24
   209 write *tmp147 :buildBlockFromCfg*retval "ATNJb-battery-large24"
   210 label *label508
   211 label *label511
-    * read *tmp147 @this "AJJJc-laser-drill25"
+  212 set *tmp147 AJJJc-laser-drill25
   213 write *tmp147 :buildBlockFromCfg*retval "AJJJc-laser-drill25"
   214 label *label512
   215 label *label515
-    * read *tmp147 @this "AJJJd-solar-panel26"
+  216 set *tmp147 AJJJd-solar-panel26
   217 write *tmp147 :buildBlockFromCfg*retval "AJJJd-solar-panel26"
   218 label *label516
   219 label *label519
-    * read *tmp147 @this "A¨JJJe-container27"
+  220 set *tmp147 A¨JJJe-container27
   221 write *tmp147 :buildBlockFromCfg*retval "A¨JJJe-container27"
   222 label *label520
   223 label *label523
-    * read *tmp147 @this "ALSIJf-silicon-smelter28"
+  224 set *tmp147 ALSIJf-silicon-smelter28
   225 write *tmp147 :buildBlockFromCfg*retval "ALSIJf-silicon-smelter28"
   226 label *label524
   227 label *label527
-    * read *tmp147 @this "A{PJJg-inverted-sorter29"
+  228 set *tmp147 A{PJJg-inverted-sorter29
   229 write *tmp147 :buildBlockFromCfg*retval "A{PJJg-inverted-sorter29"
   230 label *label528
   231 label *label531
-    * read *tmp147 @this "A{PHJh-inverted-sorter30"
+  232 set *tmp147 A{PHJh-inverted-sorter30
   233 write *tmp147 :buildBlockFromCfg*retval "A{PHJh-inverted-sorter30"
   234 label *label532
   235 label *label535
-    * read *tmp147 @this "A©PPJi-unloader31"
+  236 set *tmp147 A©PPJi-unloader31
   237 write *tmp147 :buildBlockFromCfg*retval "A©PPJi-unloader31"
   238 label *label536
   239 label *label539
-    * read *tmp147 @this "A©JFJj-unloader32"
+  240 set *tmp147 A©JFJj-unloader32
   241 write *tmp147 :buildBlockFromCfg*retval "A©JFJj-unloader32"
   242 label *label540
   243 label *label543
-    * read *tmp147 @this "AÁPBJk-multiplicative-reconstructor33"
+  244 set *tmp147 AÁPBJk-multiplicative-reconstructor33
   245 write *tmp147 :buildBlockFromCfg*retval "AÁPBJk-multiplicative-reconstructor33"
   246 label *label544
   247 label *label66
 
  1218 label *label34
  1219 label *label548
  1220 op sign *tmp368 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp368
+ 1221 set :meetTarget:count *tmp368
  1222 label *label549
  1223 label *label552
  1224 op sign *tmp368 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   823 label *label592
   824 sensor :supplyBase0:coal .core @coal
   825 sensor :supplyBase0:sand .core @sand
-    * select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * set :mineOre.1:ore *tmp284
+  826 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   827 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   828 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
   829 label *label244
 
   867 label *label600
   868 sensor :supplyBase0:coal.1 .core @coal
   869 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp297
+  870 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   871 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   872 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)
   873 label *label260
 
  1215 end
  1216 label *label34
  1217 label *label548
-    * op sign *tmp368 :meetTarget:copper
-    * set :meetTarget:count *tmp368
+ 1218 op sign :meetTarget:count :meetTarget:copper
  1219 label *label549
  1220 label *label552
  1221 op sign *tmp368 :meetTarget:lead

Modifications by Replicate loop condition at CoreBuilder.mnd:433:5 (+1 instructions):
 
   520 label *label163
   521 read *tmp83 .controller ".polys"
   522 jump *label165 greaterThanEq *tmp83 5
+  523 label *label747
   524 setaddr :supplyBase*retaddr *label166 (h:*label166)
   525 call *label33 *invalid :supplyBase*retval (m:*label166) (h:*label166)
   526 label *label166
   527 label *label164
-    * jump *label163 always
+  528 read *tmp83 .controller ".polys"
+  529 jump *label747 lessThan *tmp83 5
   530 label *label165
   531 set :buildBlockFromCfg:cfg "A©JFJj-unloader32"
   532 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:443:5 (+1 instructions):
 
   544 label *label170
   545 read *tmp84 .controller ".megas"
   546 jump *label172 greaterThanEq *tmp84 1
+  547 label *label748
   548 setaddr :supplyBase*retaddr *label173 (h:*label173)
   549 call *label33 *invalid :supplyBase*retval (m:*label173) (h:*label173)
   550 label *label173
   551 label *label171
-    * jump *label170 always
+  552 read *tmp84 .controller ".megas"
+  553 jump *label748 lessThan *tmp84 1
   554 label *label172
   555 control enabled processor7 false
   556 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:319:5 (+2 instructions):
 
    20 jump *label44 equal .core null
    21 label *label46
    22 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
-    * label *label47
+   23 label *label749
+   24 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   25 set :buildBlockFromCfg:config null
+   26 setaddr :buildBlockFromCfg*retaddr *label750 (h:*label750)
+   27 call *label37 *invalid :buildBlockFromCfg*retval (m:*label750) (h:*label750)
+   28 label *label750
+   29 label *label751
    30 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    31 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    32 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    21 label *label46
    22 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    23 label *label749
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   24 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    25 set :buildBlockFromCfg:config null
    26 setaddr :buildBlockFromCfg*retaddr *label750 (h:*label750)
    27 call *label37 *invalid :buildBlockFromCfg*retval (m:*label750) (h:*label750)

Modifications by Inline function call at CoreBuilder.mnd:320:5 (+2 instructions):
 
    28 label *label750
    29 label *label751
    30 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
-    * setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
-    * label *label48
+   31 label *label752
+   32 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   33 set :buildBlockFromCfg:config null
+   34 setaddr :buildBlockFromCfg*retaddr *label753 (h:*label753)
+   35 call *label37 *invalid :buildBlockFromCfg*retval (m:*label753) (h:*label753)
+   36 label *label753
+   37 label *label754
    38 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    39 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    40 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    29 label *label751
    30 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    31 label *label752
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   32 set :buildBlockFromCfg:cfg "AJTJK-battery1"
    33 set :buildBlockFromCfg:config null
    34 setaddr :buildBlockFromCfg*retaddr *label753 (h:*label753)
    35 call *label37 *invalid :buildBlockFromCfg*retval (m:*label753) (h:*label753)

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    16 ubind @poly
    17 set .builder @unit
    18 ulocate building core false @copper .coreX .coreY *tmp115 .core
-    * label *label45
    19 jump *label44 equal .core null
-    * label *label46
    20 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * label *label749
    21 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    22 set :buildBlockFromCfg:config null
    23 setaddr :buildBlockFromCfg*retaddr *label750 (h:*label750)
    24 call *label37 *invalid :buildBlockFromCfg*retval (m:*label750) (h:*label750)
    25 label *label750
-    * label *label751
    26 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
-    * label *label752
    27 set :buildBlockFromCfg:cfg "AJTJK-battery1"
    28 set :buildBlockFromCfg:config null
    29 setaddr :buildBlockFromCfg*retaddr *label753 (h:*label753)
    30 call *label37 *invalid :buildBlockFromCfg*retval (m:*label753) (h:*label753)
    31 label *label753
-    * label *label754
    32 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    33 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    34 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
 
    68 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    69 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    70 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * label *label657
    71 set .ERROR "Cannot locate spot for titanium drill"
    72 stop
-    * label *label658
    73 label *label56
-    * label *label57
    74 write @pneumatic-drill processor1 ".nextBlock"
    75 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    76 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    81 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    82 jump *label59 equal *tmp140 false
    83 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label53
    84 set .titaniumDrill *tmp123
    85 write *tmp123 processor1 ".titaniumDrill"
    86 set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"
 
   106 write processor1 :buildBlockFromCfg*retval ".display"
   107 write .core :buildBlockFromCfg*retval ".core"
   108 write bank1 :buildBlockFromCfg*retval ".bank"
-    * label *label411
   109 set *tmp147 AJEMJJ-graphite-press0
   110 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
-    * label *label412
-    * label *label415
   111 set *tmp147 AJTJK-battery1
   112 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
-    * label *label416
-    * label *label419
   113 set *tmp147 ALTJL-battery2
   114 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
-    * label *label420
-    * label *label423
   115 set *tmp147 AJRJM-combustion-generator3
   116 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
-    * label *label424
-    * label *label427
   117 set *tmp147 ALMQJN-silicon-smelter4
   118 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
-    * label *label428
-    * label *label431
   119 set *tmp147 A{LNJO-inverted-sorter5
   120 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
-    * label *label432
-    * label *label435
   121 set *tmp147 AJJJP-pneumatic-drill6
   122 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
-    * label *label436
-    * label *label439
   123 set *tmp147 A©JNJQ-unloader7
   124 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
-    * label *label440
-    * label *label443
   125 set *tmp147 A{HNJR-inverted-sorter8
   126 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
-    * label *label444
-    * label *label447
   127 set *tmp147 A~JPJS-overflow-gate9
   128 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
-    * label *label448
-    * label *label451
   129 set *tmp147 AÕFFJT-micro-processor10
   130 write *tmp147 :buildBlockFromCfg*retval "AÕFFJT-micro-processor10"
-    * label *label452
-    * label *label455
   131 set *tmp147 AFJJU-power-node11
   132 write *tmp147 :buildBlockFromCfg*retval "AFJJU-power-node11"
-    * label *label456
-    * label *label459
   133 set *tmp147 A©FHJV-unloader12
   134 write *tmp147 :buildBlockFromCfg*retval "A©FHJV-unloader12"
-    * label *label460
-    * label *label463
   135 set *tmp147 A¾BHMW-air-factory13
   136 write *tmp147 :buildBlockFromCfg*retval "A¾BHMW-air-factory13"
-    * label *label464
-    * label *label467
   137 set *tmp147 A©NHJX-unloader14
   138 write *tmp147 :buildBlockFromCfg*retval "A©NHJX-unloader14"
-    * label *label468
-    * label *label471
   139 set *tmp147 A{NJJY-inverted-sorter15
   140 write *tmp147 :buildBlockFromCfg*retval "A{NJJY-inverted-sorter15"
-    * label *label472
-    * label *label475
   141 set *tmp147 ANOMJZ-kiln16
   142 write *tmp147 :buildBlockFromCfg*retval "ANOMJZ-kiln16"
-    * label *label476
-    * label *label479
   143 set *tmp147 A¡ASJ[-water-extractor17
   144 write *tmp147 :buildBlockFromCfg*retval "A¡ASJ[-water-extractor17"
-    * label *label480
-    * label *label483
   145 set *tmp147 A©BLJ\-unloader18
   146 write *tmp147 :buildBlockFromCfg*retval "A©BLJ\-unloader18"
-    * label *label484
-    * label *label487
   147 set *tmp147 AAOJ]-steam-generator19
   148 write *tmp147 :buildBlockFromCfg*retval "AAOJ]-steam-generator19"
-    * label *label488
-    * label *label491
   149 set *tmp147 AKFRJ^-multi-press20
   150 write *tmp147 :buildBlockFromCfg*retval "AKFRJ^-multi-press20"
-    * label *label492
-    * label *label495
   151 set *tmp147 AÇBBJ_-payload-router21
   152 write *tmp147 :buildBlockFromCfg*retval "AÇBBJ_-payload-router21"
-    * label *label496
-    * label *label499
   153 set *tmp147 A©HFJ`-unloader22
   154 write *tmp147 :buildBlockFromCfg*retval "A©HFJ`-unloader22"
-    * label *label500
-    * label *label503
   155 set *tmp147 AÀHBJa-additive-reconstructor23
   156 write *tmp147 :buildBlockFromCfg*retval "AÀHBJa-additive-reconstructor23"
-    * label *label504
-    * label *label507
   157 set *tmp147 ATNJb-battery-large24
   158 write *tmp147 :buildBlockFromCfg*retval "ATNJb-battery-large24"
-    * label *label508
-    * label *label511
   159 set *tmp147 AJJJc-laser-drill25
   160 write *tmp147 :buildBlockFromCfg*retval "AJJJc-laser-drill25"
-    * label *label512
-    * label *label515
   161 set *tmp147 AJJJd-solar-panel26
   162 write *tmp147 :buildBlockFromCfg*retval "AJJJd-solar-panel26"
-    * label *label516
-    * label *label519
   163 set *tmp147 A¨JJJe-container27
   164 write *tmp147 :buildBlockFromCfg*retval "A¨JJJe-container27"
-    * label *label520
-    * label *label523
   165 set *tmp147 ALSIJf-silicon-smelter28
   166 write *tmp147 :buildBlockFromCfg*retval "ALSIJf-silicon-smelter28"
-    * label *label524
-    * label *label527
   167 set *tmp147 A{PJJg-inverted-sorter29
   168 write *tmp147 :buildBlockFromCfg*retval "A{PJJg-inverted-sorter29"
-    * label *label528
-    * label *label531
   169 set *tmp147 A{PHJh-inverted-sorter30
   170 write *tmp147 :buildBlockFromCfg*retval "A{PHJh-inverted-sorter30"
-    * label *label532
-    * label *label535
   171 set *tmp147 A©PPJi-unloader31
   172 write *tmp147 :buildBlockFromCfg*retval "A©PPJi-unloader31"
-    * label *label536
-    * label *label539
   173 set *tmp147 A©JFJj-unloader32
   174 write *tmp147 :buildBlockFromCfg*retval "A©JFJj-unloader32"
-    * label *label540
-    * label *label543
   175 set *tmp147 AÁPBJk-multiplicative-reconstructor33
   176 write *tmp147 :buildBlockFromCfg*retval "AÁPBJk-multiplicative-reconstructor33"
-    * label *label544
-    * label *label66
   177 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
   178 setaddr :buildBlockFromCfg.1*retaddr *label101 (h:*label101)
   179 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label101) (h:*label101)
 
   188 label *label103
   189 write 1 .controller ".flareTarget"
   190 write 1 processor1 ".flareTarget"
-    * label *label104
   191 write 3 .controller ".monoTarget"
   192 write 3 processor1 ".monoTarget"
-    * label *label105
   193 write 85 .controller ".pressTarget"
   194 write 150 .controller ".smelterTarget"
   195 write 30 .controller ".kilnTarget"
 
   206 jump *label111 greaterThanEq *tmp151 300
   207 jump *label109 always
   208 label *label111
-    * label *label112
-    * label *label108
   209 read *tmp82 .controller ".monos"
   210 jump *label107 lessThan *tmp82 3
   211 label *label109
 
   263 set .metaglassSurplus 200
   264 write 5 .controller ".polyTarget"
   265 write 5 processor1 ".polyTarget"
-    * label *label125
   266 set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"
   267 setaddr :buildBlockFromCfg.1*retaddr *label126 (h:*label126)
   268 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label126) (h:*label126)
 
   283 setaddr :buildUnits*retaddr *label130 (h:*label130)
   284 call *label40 *invalid :buildUnits*retval (m:*label130) (h:*label130)
   285 label *label130
-    * label *label131
   286 read *tmp83 .controller ".polys"
   287 jump *label133 greaterThanEq *tmp83 3
   288 label *label745
   289 setaddr :supplyBase*retaddr *label134 (h:*label134)
   290 call *label33 *invalid :supplyBase*retval (m:*label134) (h:*label134)
   291 label *label134
-    * label *label132
   292 read *tmp83 .controller ".polys"
   293 jump *label745 lessThan *tmp83 3
   294 label *label133
   295 write 3 .controller ".flareTarget"
   296 write 3 processor1 ".flareTarget"
-    * label *label135
-    * label *label136
   297 read *tmp81 .controller ".flares"
   298 jump *label138 greaterThanEq *tmp81 2
   299 label *label746
   300 setaddr :supplyBase*retaddr *label139 (h:*label139)
   301 call *label33 *invalid :supplyBase*retval (m:*label139) (h:*label139)
   302 label *label139
-    * label *label137
   303 read *tmp81 .controller ".flares"
   304 jump *label746 lessThan *tmp81 2
   305 label *label138
   306 set .graphiteSurplus 100
   307 write 5 .controller ".monoTarget"
   308 write 5 processor1 ".monoTarget"
-    * label *label140
   309 write @ore-titanium processor1 ".nextBlock"
   310 ubind @flare
   311 read :blocksBuildTitaniumDrills:current processor4 ".locations"
 
   329 jump *label142 equal *tmp184 false
   330 write false processor4 ":stopLocation*finished"
   331 write 3 processor4 "@counter"
-    * label *label141
   332 write null processor1 ".nextBlock"
   333 write .coreX processor4 ":layoutThoriumDrill:x"
   334 write .coreY processor4 ":layoutThoriumDrill:y"
 
   350 jump *label146 equal *tmp191 false
   351 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   352 jump *label147 notEqual :buildThoriumDrill:result false
-    * label *label659
   353 set .ERROR "Cannot locate spot for thorium drill"
   354 stop
-    * label *label660
   355 label *label147
-    * label *label148
   356 write @laser-drill processor5 ":buildBlockAt:block"
   357 read *tmp53 processor4 ".drillX"
   358 write *tmp53 processor5 ":buildBlockAt:x"
 
   426 wait 1e-15
   427 read *tmp214 processor3 ":setThoriumContainer*finished"
   428 jump *label161 equal *tmp214 false
-    * label *label143
   429 write null processor1 ".nextBlock"
   430 write 1 .controller ".megaTarget"
   431 write 1 processor1 ".megaTarget"
-    * label *label162
-    * label *label163
   432 read *tmp83 .controller ".polys"
   433 jump *label165 greaterThanEq *tmp83 5
   434 label *label747
   435 setaddr :supplyBase*retaddr *label166 (h:*label166)
   436 call *label33 *invalid :supplyBase*retval (m:*label166) (h:*label166)
   437 label *label166
-    * label *label164
   438 read *tmp83 .controller ".polys"
   439 jump *label747 lessThan *tmp83 5
   440 label *label165
 
   451 setaddr :buildUnits*retaddr *label169 (h:*label169)
   452 call *label40 *invalid :buildUnits*retval (m:*label169) (h:*label169)
   453 label *label169
-    * label *label170
   454 read *tmp84 .controller ".megas"
   455 jump *label172 greaterThanEq *tmp84 1
   456 label *label748
   457 setaddr :supplyBase*retaddr *label173 (h:*label173)
   458 call *label33 *invalid :supplyBase*retval (m:*label173) (h:*label173)
   459 label *label173
-    * label *label171
   460 read *tmp84 .controller ".megas"
   461 jump *label748 lessThan *tmp84 1
   462 label *label172
 
   502 setaddr :lineUpUnits*retaddr *label185 (h:*label185)
   503 call *label42 *invalid :lineUpUnits*retval (m:*label185) (h:*label185)
   504 label *label185
-    * label *label180
   505 jump *label179 always
-    * label *label181
-    * label *label174
   506 end
   507 label *label33
   508 sensor *tmp228 .core @silicon
 
   510 op max *tmp230 0 *tmp229
   511 write *tmp230 processor8 ".sandTarget"
   512 jump *label188 equal .thoriumContainer false
-    * label *label577
   513 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label578
   514 sensor *tmp232 .thoriumBattery @totalPower
   515 jump *label192 greaterThanEq *tmp232 2000
   516 sensor *tmp235 .core @coal
   517 jump *label194 greaterThanEq *tmp235 50
   518 set :supplyBlock:block .thoriumGenerator
   519 set :supplyBlock:ore @coal
-    * label *label738
-    * label *label739
   520 write "Supplying " .display ".status2"
   521 write @coal .display ".item2"
   522 write .thoriumGenerator .display ".block2"
-    * label *label740
   523 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   524 sensor *tmp326 .thoriumGenerator @coal
   525 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
   531 call *label21 *invalid :mineOre*retval (m:*label741) (h:*label741)
   532 label *label741
   533 label *label742
-    * label *label743
-    * label *label744
   534 jump *label195 always
   535 label *label194
-    * label *label603
   536 sensor *tmp330 .thoriumGenerator @itemCapacity
   537 op min :transportStatus:target *tmp330 30
-    * label *label643
   538 write :transportStatus:target .display ".transportTarget"
   539 write @coal .display ".transportItem"
-    * label *label644
-    * label *label651
   540 write "Transferring " .display ".status2"
   541 write @coal .display ".item2"
   542 write .thoriumGenerator .display ".block2"
-    * label *label652
-    * label *label669
-    * label *label670
   543 write "Moving..." .display ".status3"
-    * label *label671
   544 label *label672
   545 sensor *tmp412 @unit @firstItem
   546 jump *label673 equal *tmp412 null
   547 ucontrol itemDrop @air 1000
   548 label *label673
-    * label *label674
   549 ucontrol approach .coreX .coreY 5.5
-    * label *label675
   550 ucontrol within .coreX .coreY 6 *tmp415
   551 jump *label672 equal *tmp415 false
-    * label *label676
-    * label *label677
-    * label *label696
-    * label *label697
   552 sensor *tmp417 @unit @firstItem
   553 jump *label700 equal *tmp417 null
   554 label *label698
   555 ucontrol itemDrop @air 1000
-    * label *label699
   556 sensor *tmp417 @unit @firstItem
   557 jump *label698 notEqual *tmp417 null
   558 label *label700
-    * label *label701
   559 label *label608
   560 ucontrol itemTake .core @coal 30
   561 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   565 jump *label609 equal *tmp335 false
   566 ucontrol itemDrop @air 1000
   567 label *label609
-    * label *label610
-    * label *label611
   568 sensor *tmp337 @unit @coal
   569 op lessThan *tmp338 *tmp337 30
   570 sensor *tmp339 .core @coal
   571 op land *tmp340 *tmp338 *tmp339
   572 jump *label608 notEqual *tmp340 false
-    * label *label612
   573 set :depositItems:block .thoriumGenerator
   574 set :depositItems:item @coal
   575 setaddr :depositItems*retaddr *label613 (h:*label613)
   576 call *label19 *invalid :depositItems*retval (m:*label613) (h:*label613)
   577 label *label613
-    * label *label614
   578 label *label195
   579 label *label192
-    * label *label193
   580 set :fetchBlock:block .thoriumContainer
   581 set :fetchBlock:item @thorium
   582 setaddr :fetchBlock*retaddr *label198 (h:*label198)
   583 call *label23 *invalid :fetchBlock*retval (m:*label198) (h:*label198)
   584 label *label198
-    * label *label190
   585 jump *label189 always
   586 label *label188
   587 read *tmp82 .controller ".monos"
   588 jump *label199 lessThanEq *tmp82 3
-    * label *label579
   589 write "Phase 1: supplying base" .display ".status1"
-    * label *label580
-    * label *label708
-    * label *label709
   590 write "Mining " .display ".status2"
   591 write @coal .display ".item2"
   592 write "core" .display ".block2"
-    * label *label710
   593 set :mineOre:ore @coal
   594 set :mineOre:amount 30
   595 set :mineOre:block .core
   596 setaddr :mineOre*retaddr *label711 (h:*label711)
   597 call *label21 *invalid :mineOre*retval (m:*label711) (h:*label711)
   598 label *label711
-    * label *label712
-    * label *label201
   599 jump *label200 always
   600 label *label199
   601 set :supplyBase0:supplied false
 
   604 jump *label207 greaterThanEq *tmp242 .targetGraphite
   605 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   606 jump *label209 greaterThanEq *tmp245 5
-    * label *label581
   607 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label582
   608 set :supplyBlock:block AJEMJJ-graphite-press0
   609 set :supplyBlock:ore @coal
   610 setaddr :supplyBlock*retaddr *label212 (h:*label212)
 
   612 label *label212
   613 set :supplyBase0:supplied true
   614 label *label209
-    * label *label210
   615 label *label207
-    * label *label208
   616 sensor *tmp248 .core @silicon
   617 jump *label213 greaterThanEq *tmp248 .targetSilicon
   618 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   619 jump *label215 greaterThanEq *tmp251 5
-    * label *label583
   620 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label584
   621 set :supplyBlock:block ALMQJN-silicon-smelter4
   622 set :supplyBlock:ore @coal
   623 setaddr :supplyBlock*retaddr *label218 (h:*label218)
 
   628 label *label215
   629 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   630 jump *label219 greaterThanEq *tmp254 5
-    * label *label585
   631 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label586
   632 set :supplyBlock:block ALMQJN-silicon-smelter4
   633 set :supplyBlock:ore @sand
   634 setaddr :supplyBlock*retaddr *label222 (h:*label222)
 
   636 label *label222
   637 set :supplyBase0:supplied true
   638 label *label219
-    * label *label220
   639 label *label216
   640 label *label213
-    * label *label214
   641 sensor *tmp257 AJTJK-battery1 @totalPower
   642 jump *label223 greaterThanEq *tmp257 .powerTarget
   643 sensor *tmp260 AJRJM-combustion-generator3 @coal
   644 jump *label225 greaterThanEq *tmp260 2
-    * label *label587
   645 write "Goal 4: supplying generator" .display ".status1"
-    * label *label588
   646 set :supplyBlock:block AJRJM-combustion-generator3
   647 set :supplyBlock:ore @coal
   648 setaddr :supplyBlock*retaddr *label228 (h:*label228)
 
   650 label *label228
   651 set :supplyBase0:supplied true
   652 label *label225
-    * label *label226
   653 label *label223
-    * label *label224
   654 label *label205
-    * label *label206
   655 set *tmp265 100
   656 sensor *tmp263 .core @titanium
   657 jump *label230 greaterThanEq *tmp263 .targetTitanium
 
   665 sensor *tmp274 AJTJK-battery1 @totalPower
   666 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   667 jump *label235 greaterThanEq *tmp274 *tmp275
-    * label *label589
   668 write "Goal 5: supplying generator" .display ".status1"
-    * label *label590
   669 set :mineOre.1:ore @coal
   670 setaddr :mineOre.1*retaddr *label238 (h:*label238)
   671 call *label22 *invalid :mineOre.1*retval (m:*label238) (h:*label238)
 
   674 label *label235
   675 sensor *tmp278 .core @silicon
   676 jump *label239 greaterThanEq *tmp278 .targetSilicon
-    * label *label591
   677 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label592
   678 sensor :supplyBase0:coal .core @coal
   679 sensor :supplyBase0:sand .core @sand
   680 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   685 label *label239
   686 sensor *tmp285 .core @copper
   687 jump *label245 greaterThanEq *tmp285 .targetCopper
-    * label *label593
   688 write "Goal 7: copper requirement" .display ".status1"
-    * label *label594
   689 set :mineOre.1:ore @copper
   690 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   691 call *label22 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
 
   694 label *label245
   695 sensor *tmp288 .core @lead
   696 jump *label249 greaterThanEq *tmp288 .targetLead
-    * label *label595
   697 write "Goal 8: lead requirement" .display ".status1"
-    * label *label596
   698 set :mineOre.1:ore @lead
   699 setaddr :mineOre.1*retaddr *label252 (h:*label252)
   700 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
 
   703 label *label249
   704 sensor *tmp291 .core @metaglass
   705 jump *label253 greaterThanEq *tmp291 .targetMetaglass
-    * label *label597
   706 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label598
   707 set :mineOre.1:ore @sand
   708 setaddr :mineOre.1*retaddr *label256 (h:*label256)
   709 call *label22 *invalid :mineOre.1*retval (m:*label256) (h:*label256)
   710 label *label256
   711 jump *label254 always
   712 label *label253
-    * label *label599
   713 write "Goal 10: supplying base" .display ".status1"
-    * label *label600
   714 sensor :supplyBase0:coal.1 .core @coal
   715 sensor :supplyBase0:sand.1 .core @sand
   716 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   723 label *label240
   724 label *label236
   725 label *label233
-    * label *label234
   726 jump *label232 always
   727 label *label231
-    * label *label601
   728 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label602
   729 set :fetchBlock:block .titaniumDrill
   730 set :fetchBlock:item @titanium
   731 setaddr :fetchBlock*retaddr *label262 (h:*label262)
   732 call *label23 *invalid :fetchBlock*retval (m:*label262) (h:*label262)
   733 label *label262
   734 label *label232
-    * label *label204
   735 label *label200
   736 label *label189
-    * label *label187
   737 return :supplyBase*retaddr
   738 end
   739 label *label36
 
   762 set :buildRemoteBlock*retval :buildBlock*retval
   763 jump *label263 always
   764 label *label264
-    * label *label265
   765 set :buildRemoteBlock*retval false
   766 jump *label263 always
   767 label *label263
 
   794 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   795 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   796 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label268
   797 return :buildBlockFromCfg*retaddr
   798 end
   799 label *label38
 
   802 setaddr :buildBlockFromCfg*retaddr *label272 (h:*label272)
   803 call *label37 *invalid :buildBlockFromCfg*retval (m:*label272) (h:*label272)
   804 label *label272
-    * label *label271
   805 return :buildBlockFromCfg.1*retaddr
   806 end
   807 label *label39
 
   820 setaddr :meetTarget*retaddr *label275 (h:*label275)
   821 call *label34 *invalid :meetTarget*retval (m:*label275) (h:*label275)
   822 label *label275
-    * label *label273
   823 return :meetTarget.1*retaddr
   824 end
   825 label *label40
 
   839 write 0 .controller ".leadReserve"
   840 write 0 .controller ".siliconReserve"
   841 write 0 .controller ".graphiteReserve"
-    * label *label276
   842 return :buildUnits*retaddr
   843 end
   844 label *label41
   845 label *label279
   846 ubind :flagUnits:unit
   847 set :flagUnits:firstUnit @unit
-    * label *label280
   848 jump *label279 equal :flagUnits:firstUnit null
-    * label *label281
   849 set :flagUnits:x @thisx
   850 label *label282
   851 ucontrol flag :flagUnits:x
   852 op add :flagUnits:x :flagUnits:x 4
   853 ubind :flagUnits:unit
-    * label *label283
   854 jump *label282 notEqual @unit :flagUnits:firstUnit
-    * label *label284
-    * label *label278
   855 return :flagUnits*retaddr
   856 end
   857 label *label42
 
   865 jump *label289 equal *tmp308 false
   866 ucontrol stop
   867 label *label289
-    * label *label290
   868 ubind :lineUpUnits:unit
-    * label *label287
   869 jump *label286 notEqual @unit :lineUpUnits:firstUnit
-    * label *label288
-    * label *label285
   870 return :lineUpUnits*retaddr
   871 end
   872 label *label22
-    * label *label653
   873 write "Mining " .display ".status2"
   874 write :mineOre.1:ore .display ".item2"
   875 write "core" .display ".block2"
-    * label *label654
   876 set :mineOre:ore :mineOre.1:ore
   877 set :mineOre:amount 30
   878 set :mineOre:block .core
   879 setaddr :mineOre*retaddr *label294 (h:*label294)
   880 call *label21 *invalid :mineOre*retval (m:*label294) (h:*label294)
   881 label *label294
-    * label *label292
   882 return :mineOre.1*retaddr
   883 end
   884 label *label23
   885 sensor *tmp312 :fetchBlock:block @itemCapacity
   886 op min :transportStatus:target *tmp312 30
-    * label *label645
   887 write :transportStatus:target .display ".transportTarget"
   888 write :fetchBlock:item .display ".transportItem"
-    * label *label646
-    * label *label649
   889 write "Fetching " .display ".status2"
   890 write :fetchBlock:item .display ".item2"
   891 write :fetchBlock:block .display ".block2"
-    * label *label650
   892 sensor *tmp314 :fetchBlock:block @x
   893 sensor *tmp315 :fetchBlock:block @y
-    * label *label678
-    * label *label679
   894 write "Moving..." .display ".status3"
-    * label *label680
   895 label *label681
   896 sensor *tmp412 @unit @firstItem
   897 jump *label682 equal *tmp412 null
   898 ucontrol itemDrop @air 1000
   899 label *label682
-    * label *label683
   900 ucontrol approach *tmp314 *tmp315 5.5
-    * label *label684
   901 ucontrol within *tmp314 *tmp315 6 *tmp415
   902 jump *label681 equal *tmp415 false
-    * label *label685
-    * label *label686
-    * label *label663
-    * label *label664
   903 sensor *tmp417 @unit @firstItem
   904 jump *label667 equal *tmp417 null
   905 label *label665
   906 ucontrol itemDrop @air 1000
-    * label *label666
   907 sensor *tmp417 @unit @firstItem
   908 jump *label665 notEqual *tmp417 null
   909 label *label667
-    * label *label668
   910 label *label300
   911 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   912 sensor :fetchBlock:unitItem @unit @firstItem
 
   916 jump *label303 equal *tmp319 false
   917 ucontrol itemDrop @air 1000
   918 label *label303
-    * label *label304
-    * label *label301
   919 sensor *tmp321 @unit :fetchBlock:item
   920 op lessThan *tmp322 *tmp321 30
   921 sensor *tmp323 :fetchBlock:block :fetchBlock:item
   922 op land *tmp324 *tmp322 *tmp323
   923 jump *label300 notEqual *tmp324 false
-    * label *label302
-    * label *label713
-    * label *label714
   924 write "Depositing..." .display ".status3"
-    * label *label715
   925 sensor *tmp419 @unit @firstItem
   926 jump *label729 notEqual *tmp419 :fetchBlock:item
-    * label *label716
   927 sensor *tmp443 .core @x
   928 sensor *tmp444 .core @y
-    * label *label717
-    * label *label718
   929 write "Moving..." .display ".status3"
-    * label *label719
-    * label *label720
   930 ucontrol within *tmp443 *tmp444 6 *tmp449
   931 jump *label723 notEqual *tmp449 false
   932 label *label721
   933 ucontrol approach *tmp443 *tmp444 5.5
-    * label *label722
   934 ucontrol within *tmp443 *tmp444 6 *tmp449
   935 jump *label721 equal *tmp449 false
   936 label *label723
-    * label *label724
-    * label *label725
   937 sensor :depositItems:cap .core @itemCapacity
   938 label *label726
   939 ucontrol itemDrop .core 30
-    * label *label727
   940 sensor *tmp423 @unit @firstItem
   941 op mul *tmp424 *tmp423 :depositItems:cap
   942 sensor *tmp425 .core :fetchBlock:item
   943 jump *label726 greaterThan *tmp424 *tmp425
-    * label *label728
   944 jump *label734 always
   945 label *label729
-    * label *label730
   946 sensor *tmp427 @unit @firstItem
   947 jump *label733 equal *tmp427 null
   948 label *label731
   949 ucontrol itemDrop @air 1000
-    * label *label732
   950 sensor *tmp427 @unit @firstItem
   951 jump *label731 notEqual *tmp427 null
   952 label *label733
   953 label *label734
-    * label *label735
   954 write 0 .display ".transportTarget"
   955 write null .display ".transportItem"
-    * label *label736
-    * label *label737
-    * label *label295
   956 return :fetchBlock*retaddr
   957 end
   958 label *label24
-    * label *label655
   959 write "Supplying " .display ".status2"
   960 write :supplyBlock:ore .display ".item2"
   961 write :supplyBlock:block .display ".block2"
-    * label *label656
   962 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   963 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
   964 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
   970 call *label21 *invalid :mineOre*retval (m:*label310) (h:*label310)
   971 label *label310
   972 label *label308
-    * label *label309
-    * label *label306
   973 return :supplyBlock*retaddr
   974 end
   975 label *label27
 
   993 sensor :unpackCfg:ti :unpackCfg:type @titanium
   994 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   995 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label322
   996 return :unpackCfg*retaddr
   997 end
   998 label *label34
-    * label *label548
   999 op sign :meetTarget:count :meetTarget:copper
-    * label *label549
-    * label *label552
  1000 op sign *tmp368 :meetTarget:lead
  1001 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label553
-    * label *label556
  1002 op sign *tmp368 :meetTarget:graphite
  1003 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label557
-    * label *label560
  1004 op sign *tmp368 :meetTarget:silicon
  1005 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label561
-    * label *label564
  1006 op sign *tmp368 :meetTarget:titanium
  1007 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label565
-    * label *label568
  1008 op sign *tmp368 :meetTarget:metaglass
  1009 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label569
-    * label *label572
  1010 op sign *tmp368 :meetTarget:thorium
  1011 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label573
-    * label *label326
  1012 write :meetTarget:count .display ".totalTargets"
  1013 write :meetTarget:block .display ".nextBlock"
  1014 write :meetTarget:copper .display ".targetCopper"
 
  1049 set *tmp381 false
  1050 jump *label337 always
  1051 label *label338
-    * label *label339
  1052 sensor *tmp385 .core @lead
  1053 jump *label340 greaterThanEq *tmp385 .targetLead
  1054 set *tmp381 false
  1055 jump *label337 always
  1056 label *label340
-    * label *label341
  1057 sensor *tmp388 .core @graphite
  1058 jump *label342 greaterThanEq *tmp388 .targetGraphite
  1059 set *tmp381 false
  1060 jump *label337 always
  1061 label *label342
-    * label *label343
  1062 sensor *tmp391 .core @silicon
  1063 jump *label344 greaterThanEq *tmp391 .targetSilicon
  1064 set *tmp381 false
  1065 jump *label337 always
  1066 label *label344
-    * label *label345
  1067 sensor *tmp394 .core @titanium
  1068 jump *label346 greaterThanEq *tmp394 .targetTitanium
  1069 set *tmp381 false
  1070 jump *label337 always
  1071 label *label346
-    * label *label347
  1072 sensor *tmp397 .core @metaglass
  1073 jump *label348 greaterThanEq *tmp397 .targetMetaglass
  1074 set *tmp381 false
  1075 jump *label337 always
  1076 label *label348
-    * label *label349
  1077 sensor *tmp400 .core @thorium
  1078 jump *label350 greaterThanEq *tmp400 .targetThorium
  1079 set *tmp381 false
  1080 jump *label337 always
  1081 label *label350
-    * label *label351
  1082 set *tmp381 true
  1083 jump *label337 always
  1084 label *label337
 
  1086 setaddr :supplyBase*retaddr *label352 (h:*label352)
  1087 call *label33 *invalid :supplyBase*retval (m:*label352) (h:*label352)
  1088 label *label352
-    * label *label335
  1089 jump *label334 always
  1090 label *label336
-    * label *label323
  1091 return :meetTarget*retaddr
  1092 end
  1093 label *label35
 
  1115 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1116 jump *label355 equal *tmp410 false
  1117 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label353
  1118 return :buildBlock*retaddr
  1119 end
  1120 label *label19
-    * label *label617
  1121 write "Depositing..." .display ".status3"
-    * label *label618
  1122 sensor *tmp419 @unit @firstItem
  1123 jump *label371 notEqual *tmp419 :depositItems:item
-    * label *label623
  1124 sensor *tmp443 :depositItems:block @x
  1125 sensor *tmp444 :depositItems:block @y
-    * label *label631
-    * label *label632
  1126 write "Moving..." .display ".status3"
-    * label *label633
-    * label *label634
  1127 ucontrol within *tmp443 *tmp444 6 *tmp449
  1128 jump *label636 notEqual *tmp449 false
  1129 label *label639
  1130 ucontrol approach *tmp443 *tmp444 5.5
-    * label *label635
  1131 ucontrol within *tmp443 *tmp444 6 *tmp449
  1132 jump *label639 equal *tmp449 false
  1133 label *label636
-    * label *label637
-    * label *label625
  1134 sensor :depositItems:cap :depositItems:block @itemCapacity
  1135 label *label374
  1136 ucontrol itemDrop :depositItems:block 30
-    * label *label375
  1137 sensor *tmp423 @unit @firstItem
  1138 op mul *tmp424 *tmp423 :depositItems:cap
  1139 sensor *tmp425 :depositItems:block :depositItems:item
  1140 jump *label374 greaterThan *tmp424 *tmp425
-    * label *label376
  1141 jump *label372 always
  1142 label *label371
-    * label *label377
  1143 sensor *tmp427 @unit @firstItem
  1144 jump *label379 equal *tmp427 null
  1145 label *label640
  1146 ucontrol itemDrop @air 1000
-    * label *label378
  1147 sensor *tmp427 @unit @firstItem
  1148 jump *label640 notEqual *tmp427 null
  1149 label *label379
  1150 label *label372
-    * label *label641
  1151 write 0 .display ".transportTarget"
  1152 write null .display ".transportItem"
-    * label *label642
-    * label *label369
  1153 return :depositItems*retaddr
  1154 end
  1155 label *label21
  1156 op min :mineOre:amount :mineOre:amount 30
-    * label *label647
  1157 write :mineOre:amount .display ".transportTarget"
  1158 write :mineOre:ore .display ".transportItem"
-    * label *label648
-    * label *label626
  1159 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1160 jump *label628 notEqual *tmp445 false
-    * label *label661
  1161 set .ERROR "Cannot locate ore"
  1162 stop
-    * label *label662
  1163 label *label628
-    * label *label629
-    * label *label630
-    * label *label687
-    * label *label688
  1164 write "Moving..." .display ".status3"
-    * label *label689
  1165 label *label690
  1166 sensor *tmp412 @unit @firstItem
  1167 jump *label691 equal *tmp412 null
  1168 ucontrol itemDrop @air 1000
  1169 label *label691
-    * label *label692
  1170 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label693
  1171 ucontrol within :locateOre:x :locateOre:y 6 *tmp415
  1172 jump *label690 equal *tmp415 false
-    * label *label694
-    * label *label695
  1173 sensor *tmp430 @unit @firstItem
  1174 jump *label385 equal *tmp430 :mineOre:ore
-    * label *label702
-    * label *label703
  1175 sensor *tmp417 @unit @firstItem
  1176 jump *label706 equal *tmp417 null
  1177 label *label704
  1178 ucontrol itemDrop @air 1000
-    * label *label705
  1179 sensor *tmp417 @unit @firstItem
  1180 jump *label704 notEqual *tmp417 null
  1181 label *label706
-    * label *label707
  1182 label *label385
-    * label *label386
-    * label *label619
  1183 write "Mining..." .display ".status3"
-    * label *label620
  1184 op add :mineOre:stop @second 10
  1185 label *label389
  1186 sensor :mineOre:item @unit @firstItem
 
  1190 jump *label392 equal *tmp437 false
  1191 jump *label391 always
  1192 label *label392
-    * label *label393
  1193 ucontrol mine :locateOre:x :locateOre:y
  1194 jump *label394 lessThanEq @second :mineOre:stop
  1195 jump *label391 always
  1196 label *label394
-    * label *label395
-    * label *label390
  1197 sensor *tmp441 @unit @totalItems
  1198 jump *label389 lessThan *tmp441 :mineOre:amount
  1199 label *label391
 
  1203 setaddr :depositItems*retaddr *label396 (h:*label396)
  1204 call *label19 *invalid :depositItems*retval (m:*label396) (h:*label396)
  1205 label *label396
-    * label *label381
  1206 return :mineOre*retaddr
  1207 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   203 call *label33 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   204 label *label110
   205 sensor *tmp151 AJTJK-battery1 @totalPower
-    * jump *label111 greaterThanEq *tmp151 300
-    * jump *label109 always
+  206 jump *label109 lessThan *tmp151 300
   207 label *label111
   208 read *tmp82 .controller ".monos"
   209 jump *label107 lessThan *tmp82 3
 
  1186 op notEqual *tmp435 :mineOre:item null
  1187 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1188 op land *tmp437 *tmp435 *tmp436
-    * jump *label392 equal *tmp437 false
-    * jump *label391 always
+ 1189 jump *label391 notEqual *tmp437 false
  1190 label *label392
  1191 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label394 lessThanEq @second :mineOre:stop
-    * jump *label391 always
+ 1192 jump *label391 greaterThan @second :mineOre:stop
  1193 label *label394
  1194 sensor *tmp441 @unit @totalItems
  1195 jump *label389 lessThan *tmp441 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   204 label *label110
   205 sensor *tmp151 AJTJK-battery1 @totalPower
   206 jump *label109 lessThan *tmp151 300
-    * label *label111
   207 read *tmp82 .controller ".monos"
   208 jump *label107 lessThan *tmp82 3
   209 label *label109
 
  1186 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1187 op land *tmp437 *tmp435 *tmp436
  1188 jump *label391 notEqual *tmp437 false
-    * label *label392
  1189 ucontrol mine :locateOre:x :locateOre:y
  1190 jump *label391 greaterThan @second :mineOre:stop
-    * label *label394
  1191 sensor *tmp441 @unit @totalItems
  1192 jump *label389 lessThan *tmp441 :mineOre:amount
  1193 label *label391

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   497 label *label184
   498 op sub :lineUpUnits:y @thisy 18
   499 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label185 (h:*label185)
+  500 setaddr :lineUpUnits*retaddr *label179 (h:*label185)
   501 call *label42 *invalid :lineUpUnits*retval (m:*label185) (h:*label185)
   502 label *label185
   503 jump *label179 always
 
   521 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   522 sensor *tmp326 .thoriumGenerator @coal
   523 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
-    * jump *label742 lessThanEq :supplyBlock:missing 0
+  524 jump *label195 lessThanEq :supplyBlock:missing 0
   525 set :mineOre:ore @coal
   526 set :mineOre:amount :supplyBlock:blockCapacity
   527 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label741 (h:*label741)
+  528 setaddr :mineOre*retaddr *label195 (h:*label741)
   529 call *label21 *invalid :mineOre*retval (m:*label741) (h:*label741)
   530 label *label741
   531 label *label742
 
   580 setaddr :fetchBlock*retaddr *label198 (h:*label198)
   581 call *label23 *invalid :fetchBlock*retval (m:*label198) (h:*label198)
   582 label *label198
-    * jump *label189 always
+  583 return :supplyBase*retaddr
   584 label *label188
   585 read *tmp82 .controller ".monos"
   586 jump *label199 lessThanEq *tmp82 3
 
   594 setaddr :mineOre*retaddr *label711 (h:*label711)
   595 call *label21 *invalid :mineOre*retval (m:*label711) (h:*label711)
   596 label *label711
-    * jump *label200 always
+  597 return :supplyBase*retaddr
   598 label *label199
   599 set :supplyBase0:supplied false
   600 jump *label205 notEqual A©JNJQ-unloader7 null
 
   659 label *label230
   660 sensor *tmp269 .titaniumDrill @titanium
   661 jump *label231 greaterThanEq *tmp269 *tmp265
-    * jump *label233 notEqual :supplyBase0:supplied false
+  662 jump *label232 notEqual :supplyBase0:supplied false
   663 sensor *tmp274 AJTJK-battery1 @totalPower
   664 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   665 jump *label235 greaterThanEq *tmp274 *tmp275
 
   668 setaddr :mineOre.1*retaddr *label238 (h:*label238)
   669 call *label22 *invalid :mineOre.1*retval (m:*label238) (h:*label238)
   670 label *label238
-    * jump *label236 always
+  671 return :supplyBase*retaddr
   672 label *label235
   673 sensor *tmp278 .core @silicon
   674 jump *label239 greaterThanEq *tmp278 .targetSilicon
 
   679 setaddr :mineOre.1*retaddr *label244 (h:*label244)
   680 call *label22 *invalid :mineOre.1*retval (m:*label244) (h:*label244)
   681 label *label244
-    * jump *label240 always
+  682 return :supplyBase*retaddr
   683 label *label239
   684 sensor *tmp285 .core @copper
   685 jump *label245 greaterThanEq *tmp285 .targetCopper
 
   688 setaddr :mineOre.1*retaddr *label248 (h:*label248)
   689 call *label22 *invalid :mineOre.1*retval (m:*label248) (h:*label248)
   690 label *label248
-    * jump *label246 always
+  691 return :supplyBase*retaddr
   692 label *label245
   693 sensor *tmp288 .core @lead
   694 jump *label249 greaterThanEq *tmp288 .targetLead
 
   697 setaddr :mineOre.1*retaddr *label252 (h:*label252)
   698 call *label22 *invalid :mineOre.1*retval (m:*label252) (h:*label252)
   699 label *label252
-    * jump *label250 always
+  700 return :supplyBase*retaddr
   701 label *label249
   702 sensor *tmp291 .core @metaglass
   703 jump *label253 greaterThanEq *tmp291 .targetMetaglass
 
   706 setaddr :mineOre.1*retaddr *label256 (h:*label256)
   707 call *label22 *invalid :mineOre.1*retval (m:*label256) (h:*label256)
   708 label *label256
-    * jump *label254 always
+  709 return :supplyBase*retaddr
   710 label *label253
   711 write "Goal 10: supplying base" .display ".status1"
   712 sensor :supplyBase0:coal.1 .core @coal
 
   721 label *label240
   722 label *label236
   723 label *label233
-    * jump *label232 always
+  724 return :supplyBase*retaddr
   725 label *label231
   726 write "Goal 11: Fetching titanium" .display ".status1"
   727 set :fetchBlock:block .titaniumDrill
 
   758 call *label35 *invalid :buildBlock*retval (m:*label267) (h:*label267)
   759 label *label267
   760 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label263 always
+  761 return :buildRemoteBlock*retaddr
   762 label *label264
   763 set :buildRemoteBlock*retval false
-    * jump *label263 always
+  764 return :buildRemoteBlock*retaddr
   765 label *label263
   766 return :buildRemoteBlock*retaddr
   767 end
 
  1081 jump *label337 always
  1082 label *label337
  1083 jump *label336 notEqual *tmp381 false
-    * setaddr :supplyBase*retaddr *label352 (h:*label352)
+ 1084 setaddr :supplyBase*retaddr *label334 (h:*label352)
  1085 call *label33 *invalid :supplyBase*retval (m:*label352) (h:*label352)
  1086 label *label352
  1087 jump *label334 always

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-21 instructions):
 
   499 set :lineUpUnits:unit @flare
   500 setaddr :lineUpUnits*retaddr *label179 (h:*label185)
   501 call *label42 *invalid :lineUpUnits*retval (m:*label185) (h:*label185)
-    * label *label185
-    * jump *label179 always
-    * end
   502 label *label33
   503 sensor *tmp228 .core @silicon
   504 op sub *tmp229 .targetSilicon *tmp228
 
   524 set :mineOre:block .thoriumGenerator
   525 setaddr :mineOre*retaddr *label195 (h:*label741)
   526 call *label21 *invalid :mineOre*retval (m:*label741) (h:*label741)
-    * label *label741
-    * label *label742
-    * jump *label195 always
   527 label *label194
   528 sensor *tmp330 .thoriumGenerator @itemCapacity
   529 op min :transportStatus:target *tmp330 30
 
   709 setaddr :mineOre.1*retaddr *label260 (h:*label260)
   710 call *label22 *invalid :mineOre.1*retval (m:*label260) (h:*label260)
   711 label *label260
-    * label *label254
-    * label *label250
-    * label *label246
-    * label *label240
-    * label *label236
-    * label *label233
   712 return :supplyBase*retaddr
   713 label *label231
   714 write "Goal 11: Fetching titanium" .display ".status1"
 
   718 call *label23 *invalid :fetchBlock*retval (m:*label262) (h:*label262)
   719 label *label262
   720 label *label232
-    * label *label200
-    * label *label189
   721 return :supplyBase*retaddr
-    * end
   722 label *label36
   723 op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y
   724 jump *label264 lessThanEq *tmp298 0
 
   747 label *label264
   748 set :buildRemoteBlock*retval false
   749 return :buildRemoteBlock*retaddr
-    * label *label263
-    * return :buildRemoteBlock*retaddr
-    * end
   750 label *label37
   751 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   752 setaddr :unpackCfg*retaddr *label269 (h:*label269)
 
   775 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   776 set :buildBlockFromCfg*retval :buildBlock*retval
   777 return :buildBlockFromCfg*retaddr
-    * end
   778 label *label38
   779 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   780 set :buildBlockFromCfg:config null
 
   782 call *label37 *invalid :buildBlockFromCfg*retval (m:*label272) (h:*label272)
   783 label *label272
   784 return :buildBlockFromCfg.1*retaddr
-    * end
   785 label *label39
   786 set :unpackCfg:cfg :meetTarget.1:cfg
   787 setaddr :unpackCfg*retaddr *label274 (h:*label274)
 
   799 call *label34 *invalid :meetTarget*retval (m:*label275) (h:*label275)
   800 label *label275
   801 return :meetTarget.1*retaddr
-    * end
   802 label *label40
   803 set :meetTarget:block 0
   804 set :meetTarget:copper 0
 
   817 write 0 .controller ".siliconReserve"
   818 write 0 .controller ".graphiteReserve"
   819 return :buildUnits*retaddr
-    * end
   820 label *label41
   821 label *label279
   822 ubind :flagUnits:unit
 
   829 ubind :flagUnits:unit
   830 jump *label282 notEqual @unit :flagUnits:firstUnit
   831 return :flagUnits*retaddr
-    * end
   832 label *label42
   833 ubind :lineUpUnits:unit
   834 set :lineUpUnits:firstUnit @unit
 
   843 ubind :lineUpUnits:unit
   844 jump *label286 notEqual @unit :lineUpUnits:firstUnit
   845 return :lineUpUnits*retaddr
-    * end
   846 label *label22
   847 write "Mining " .display ".status2"
   848 write :mineOre.1:ore .display ".item2"
 
   854 call *label21 *invalid :mineOre*retval (m:*label294) (h:*label294)
   855 label *label294
   856 return :mineOre.1*retaddr
-    * end
   857 label *label23
   858 sensor *tmp312 :fetchBlock:block @itemCapacity
   859 op min :transportStatus:target *tmp312 30
 
   927 write 0 .display ".transportTarget"
   928 write null .display ".transportItem"
   929 return :fetchBlock*retaddr
-    * end
   930 label *label24
   931 write "Supplying " .display ".status2"
   932 write :supplyBlock:ore .display ".item2"
 
   943 label *label310
   944 label *label308
   945 return :supplyBlock*retaddr
-    * end
   946 label *label27
   947 read *tmp342 :unpackCfg:cfg 1
   948 op sub *tmp343 *tmp342 74
 
   965 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   966 sensor :unpackCfg:th :unpackCfg:type @thorium
   967 return :unpackCfg*retaddr
-    * end
   968 label *label34
   969 op sign :meetTarget:count :meetTarget:copper
   970 op sign *tmp368 :meetTarget:lead
 
  1055 jump *label336 notEqual *tmp381 false
  1056 setaddr :supplyBase*retaddr *label334 (h:*label352)
  1057 call *label33 *invalid :supplyBase*retval (m:*label352) (h:*label352)
-    * label *label352
-    * jump *label334 always
  1058 label *label336
  1059 return :meetTarget*retaddr
-    * end
  1060 label *label35
  1061 set :meetTarget:block :buildBlock:block
  1062 set :meetTarget:copper :buildBlock:copper
 
  1083 jump *label355 equal *tmp410 false
  1084 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1085 return :buildBlock*retaddr
-    * end
  1086 label *label19
  1087 write "Depositing..." .display ".status3"
  1088 sensor *tmp419 @unit @firstItem
 
  1117 write 0 .display ".transportTarget"
  1118 write null .display ".transportItem"
  1119 return :depositItems*retaddr
-    * end
  1120 label *label21
  1121 op min :mineOre:amount :mineOre:amount 30
  1122 write :mineOre:amount .display ".transportTarget"
 
  1165 call *label19 *invalid :depositItems*retval (m:*label396) (h:*label396)
  1166 label *label396
  1167 return :mineOre*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    15 label *label44
    16 ubind @poly
    17 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp115 .core
+   18 ulocate building core false @copper .coreX .coreY 0 .core
    19 jump *label44 equal .core null
    20 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    21 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
 
  1121 op min :mineOre:amount :mineOre:amount 30
  1122 write :mineOre:amount .display ".transportTarget"
  1123 write :mineOre:ore .display ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1124 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 0
  1125 jump *label628 notEqual *tmp445 false
  1126 set .ERROR "Cannot locate ore"
  1127 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
        label *label43                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    3:  read *tmp95 processor8 "*signature"                          ...
    4:  jump *label43 notEqual *tmp95 "0:v1"                         ...
    5:  set .titaniumDrill null                                      CoreBuilder.mnd: var
    6:  set .thoriumBattery null                                     ...
    7:  set .thoriumContainer null                                   ...
    8:  set .thoriumGenerator null                                   ...
    9:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   10:  set .graphiteSurplus 20                                      ...
   11:  set .siliconSurplus 20                                       ...
   12:  set .metaglassSurplus 20                                     ...
   13:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label44                                               CoreBuilder.mnd: do
   14:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   15:  set .builder @unit                                           ...
   16:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   17:  jump *label44 equal .core null                               CoreBuilder.mnd: do
   18:  set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"        CoreBuilder.mnd: buildBlockFromCfg(PRESS);
   19:  set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   20:  set :buildBlockFromCfg:config null                           ...
   21:  setaddr :buildBlockFromCfg*retaddr *label750                 ...
   22:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label750                                              ...
   23:  set :buildBlockFromCfg.1:cfg "AJTJK-battery1"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY1);
   24:  set :buildBlockFromCfg:cfg "AJTJK-battery1"                 CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   25:  set :buildBlockFromCfg:config null                           ...
   26:  setaddr :buildBlockFromCfg*retaddr *label753                 ...
   27:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label753                                              ...
   28:  set :buildBlockFromCfg.1:cfg "ALTJL-battery2"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   29:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   30:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   31:  set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"  CoreBuilder.mnd: buildBlockFromCfg(GENERATOR);
   32:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   33:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   34:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   35:  set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"       CoreBuilder.mnd: buildBlockFromCfg(SMELTER);
   36:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   37:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   38:  set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   39:  setaddr :buildBlockFromCfg.1*retaddr *label52                ...
   40:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label52                                               ...
   41:  set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"              CoreBuilder.mnd: meetTarget(cfg);
   42:  setaddr :meetTarget.1*retaddr *label54                       ...
   43:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label54                                               ...
   44:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   45:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   46:  write .coreY processor4 ":findDrillLocation:y"               ...
   47:  write @unit processor4 ":findDrillLocation:unit"             ...
   48:  write @titanium processor4 ":findDrillLocation:item"         ...
   49:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   50:  write 2 processor4 ":findDrillLocation:size"                 ...
   51:  write 4 processor4 ":findDrillLocation:limit"                ...
   52:  write false processor4 ":findDrillLocation*finished"         ...
   53:  write 1 processor4 "@counter"                                ...
        label *label55                                               ...
   54:  wait 1e-15                                                   ...
   55:  read *tmp134 processor4 ":findDrillLocation*finished"        ...
   56:  jump *label55 equal *tmp134 false                            ...
   57:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   58:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   59:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   60:  jump *label56 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   61:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   62:  stop                                                         Actions.mnd: stopProcessor();
        label *label56                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   63:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   64:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   65:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   66:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   67:  write 2 processor5 "@counter"                                ...
        label *label59                                               ...
   68:  wait 1e-15                                                   ...
   69:  read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished ...
   70:  jump *label59 equal *tmp140 false                            ...
   71:  read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   72:  set .titaniumDrill *tmp123                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   73:  write *tmp123 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   74:  set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"              CoreBuilder.mnd: buildBlockFromCfg(UNLOADER1);
   75:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   76:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   77:  set :buildBlockFromCfg.1:cfg "A{HNJR-inverted-sorter8"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   78:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   79:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   80:  set :buildBlockFromCfg.1:cfg "A~JPJS-overflow-gate9"         CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   81:  setaddr :buildBlockFromCfg.1*retaddr *label62                ...
   82:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label62                                               ...
   83:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   84:  set :buildBlockFromCfg:cfg "AÕFFJT-micro-processor10"        CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   85:  set :buildBlockFromCfg:config processor2                     ...
   86:  setaddr :buildBlockFromCfg*retaddr *label63                  ...
   87:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label63                                               ...
   88:  set .controller :buildBlockFromCfg*retval                    ...
   89:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   90:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   91:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   92:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   93:  set *tmp147 AJEMJJ-graphite-press0                           CoreBuilder.mnd: controller.write(@this.read(block), block);
   94:  write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-pre ...
   95:  set *tmp147 AJTJK-battery1                                  ...
   96:  write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"    ...
   97:  set *tmp147 ALTJL-battery2                                  ...
   98:  write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"    ...
   99:  set *tmp147 AJRJM-combustion-generator3                     ...
  100:  write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-g ...
  101:  set *tmp147 ALMQJN-silicon-smelter4                          ...
  102:  write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smel ...
  103:  set *tmp147 A{LNJO-inverted-sorter5                          ...
  104:  write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sor ...
  105:  set *tmp147 AJJJP-pneumatic-drill6                          ...
  106:  write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-dr ...
  107:  set *tmp147 A©JNJQ-unloader7                                 ...
  108:  write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"   ...
  109:  set *tmp147 A{HNJR-inverted-sorter8                          ...
  110:  write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sor ...
  111:  set *tmp147 A~JPJS-overflow-gate9                            ...
  112:  write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gat ...
  113:  set *tmp147 AÕFFJT-micro-processor10                         ...
  114:  write *tmp147 :buildBlockFromCfg*retval "AÕFFJT-micro-proces ...
  115:  set *tmp147 AFJJU-power-node11                              ...
  116:  write *tmp147 :buildBlockFromCfg*retval "AFJJU-power-node11 ...
  117:  set *tmp147 A©FHJV-unloader12                                ...
  118:  write *tmp147 :buildBlockFromCfg*retval "A©FHJV-unloader12"  ...
  119:  set *tmp147 A¾BHMW-air-factory13                             ...
  120:  write *tmp147 :buildBlockFromCfg*retval "A¾BHMW-air-factory1 ...
  121:  set *tmp147 A©NHJX-unloader14                                ...
  122:  write *tmp147 :buildBlockFromCfg*retval "A©NHJX-unloader14"  ...
  123:  set *tmp147 A{NJJY-inverted-sorter15                         ...
  124:  write *tmp147 :buildBlockFromCfg*retval "A{NJJY-inverted-sor ...
  125:  set *tmp147 ANOMJZ-kiln16                                    ...
  126:  write *tmp147 :buildBlockFromCfg*retval "ANOMJZ-kiln16"      ...
  127:  set *tmp147 A¡ASJ[-water-extractor17                         ...
  128:  write *tmp147 :buildBlockFromCfg*retval "A¡ASJ[-water-extrac ...
  129:  set *tmp147 A©BLJ\-unloader18                                ...
  130:  write *tmp147 :buildBlockFromCfg*retval "A©BLJ\-unloader18"  ...
  131:  set *tmp147 AAOJ]-steam-generator19                         ...
  132:  write *tmp147 :buildBlockFromCfg*retval "AAOJ]-steam-genera ...
  133:  set *tmp147 AKFRJ^-multi-press20                             ...
  134:  write *tmp147 :buildBlockFromCfg*retval "AKFRJ^-multi-press2 ...
  135:  set *tmp147 AÇBBJ_-payload-router21                          ...
  136:  write *tmp147 :buildBlockFromCfg*retval "AÇBBJ_-payload-rout ...
  137:  set *tmp147 A©HFJ`-unloader22                                ...
  138:  write *tmp147 :buildBlockFromCfg*retval "A©HFJ`-unloader22"  ...
  139:  set *tmp147 AÀHBJa-additive-reconstructor23                  ...
  140:  write *tmp147 :buildBlockFromCfg*retval "AÀHBJa-additive-rec ...
  141:  set *tmp147 ATNJb-battery-large24                           ...
  142:  write *tmp147 :buildBlockFromCfg*retval "ATNJb-battery-larg ...
  143:  set *tmp147 AJJJc-laser-drill25                             ...
  144:  write *tmp147 :buildBlockFromCfg*retval "AJJJc-laser-drill2 ...
  145:  set *tmp147 AJJJd-solar-panel26                             ...
  146:  write *tmp147 :buildBlockFromCfg*retval "AJJJd-solar-panel2 ...
  147:  set *tmp147 A¨JJJe-container27                               ...
  148:  write *tmp147 :buildBlockFromCfg*retval "A¨JJJe-container27" ...
  149:  set *tmp147 ALSIJf-silicon-smelter28                         ...
  150:  write *tmp147 :buildBlockFromCfg*retval "ALSIJf-silicon-smel ...
  151:  set *tmp147 A{PJJg-inverted-sorter29                         ...
  152:  write *tmp147 :buildBlockFromCfg*retval "A{PJJg-inverted-sor ...
  153:  set *tmp147 A{PHJh-inverted-sorter30                         ...
  154:  write *tmp147 :buildBlockFromCfg*retval "A{PHJh-inverted-sor ...
  155:  set *tmp147 A©PPJi-unloader31                                ...
  156:  write *tmp147 :buildBlockFromCfg*retval "A©PPJi-unloader31"  ...
  157:  set *tmp147 A©JFJj-unloader32                                ...
  158:  write *tmp147 :buildBlockFromCfg*retval "A©JFJj-unloader32"  ...
  159:  set *tmp147 AÁPBJk-multiplicative-reconstructor33            ...
  160:  write *tmp147 :buildBlockFromCfg*retval "AÁPBJk-multiplicati ...
  161:  set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"           CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  162:  setaddr :buildBlockFromCfg.1*retaddr *label101               ...
  163:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label101                                              ...
  164:  set :buildBlockFromCfg.1:cfg "A©FHJV-unloader12"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER2);
  165:  setaddr :buildBlockFromCfg.1*retaddr *label102               ...
  166:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label102                                              ...
  167:  set :buildBlockFromCfg.1:cfg "A¾BHMW-air-factory13"          CoreBuilder.mnd: buildBlockFromCfg(AIR_FACTORY);
  168:  setaddr :buildBlockFromCfg.1*retaddr *label103               ...
  169:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label103                                              ...
  170:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  171:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  172:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  173:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  174:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  175:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  176:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  177:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  178:  set .siliconSurplus 20                                       ...
  179:  setaddr :buildUnits*retaddr *label106                        CoreBuilder.mnd: buildUnits();
  180:  call *label40 *invalid :buildUnits*retval                    ...
        label *label106                                              ...
        label *label107                                              CoreBuilder.mnd: do
  181:  setaddr :supplyBase*retaddr *label110                        CoreBuilder.mnd: supplyBase();
  182:  call *label33 *invalid :supplyBase*retval                    ...
        label *label110                                              ...
  183:  sensor *tmp151 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  184:  jump *label109 lessThan *tmp151 300                          ...
  185:  read *tmp82 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  186:  jump *label107 lessThan *tmp82 3                             CoreBuilder.mnd: do
        label *label109                                              ...
  187:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  188:  set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  189:  setaddr :buildBlockFromCfg.1*retaddr *label113               ...
  190:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label113                                              ...
  191:  set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  192:  setaddr :buildBlockFromCfg.1*retaddr *label114               ...
  193:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label114                                              ...
  194:  set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"                 CoreBuilder.mnd: buildBlockFromCfg(KILN);
  195:  setaddr :buildBlockFromCfg.1*retaddr *label115               ...
  196:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label115                                              ...
  197:  set :buildBlockFromCfg.1:cfg "A¡ASJ[-water-extractor17"      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  198:  setaddr :buildBlockFromCfg.1*retaddr *label116               ...
  199:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label116                                              ...
  200:  set :buildBlockFromCfg:cfg "A©BLJ\-unloader18"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3A, @coal);
  201:  set :buildBlockFromCfg:config @coal                          ...
  202:  setaddr :buildBlockFromCfg*retaddr *label117                 ...
  203:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label117                                              ...
  204:  set :buildBlockFromCfg.1:cfg "AAOJ]-steam-generator19"      CoreBuilder.mnd: buildBlockFromCfg(STEAM_GEN);
  205:  setaddr :buildBlockFromCfg.1*retaddr *label118               ...
  206:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label118                                              ...
  207:  set :buildBlockFromCfg.1:cfg "AKFRJ^-multi-press20"          CoreBuilder.mnd: buildBlockFromCfg(MULTIPRESS);
  208:  setaddr :buildBlockFromCfg.1*retaddr *label119               ...
  209:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label119                                              ...
  210:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  211:  set :buildBlockFromCfg.1:cfg "AÇBBJ_-payload-router21"       CoreBuilder.mnd: buildBlockFromCfg(PAYLOAD_ROUTER);
  212:  setaddr :buildBlockFromCfg.1*retaddr *label120               ...
  213:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label120                                              ...
  214:  set :buildBlockFromCfg.1:cfg "A©HFJ`-unloader22"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  215:  setaddr :buildBlockFromCfg.1*retaddr *label121               ...
  216:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label121                                              ...
  217:  set :buildBlockFromCfg.1:cfg "AÀHBJa-additive-reconstructor2 CoreBuilder.mnd: buildBlockFromCfg(ADDITIVE_REC);
  218:  setaddr :buildBlockFromCfg.1*retaddr *label122               ...
  219:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label122                                              ...
  220:  set :buildBlockFromCfg.1:cfg "ATNJb-battery-large24"        CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  221:  setaddr :buildBlockFromCfg.1*retaddr *label123               ...
  222:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label123                                              ...
  223:  setaddr :buildUnits*retaddr *label124                        CoreBuilder.mnd: buildUnits();
  224:  call *label40 *invalid :buildUnits*retval                    ...
        label *label124                                              ...
  225:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  226:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  227:  write 5 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  228:  write 5 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  229:  set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"      CoreBuilder.mnd: buildBlockFromCfg(SMELTER2);
  230:  setaddr :buildBlockFromCfg.1*retaddr *label126               ...
  231:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label126                                              ...
  232:  set :buildBlockFromCfg.1:cfg "A{PJJg-inverted-sorter29"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  233:  setaddr :buildBlockFromCfg.1*retaddr *label127               ...
  234:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label127                                              ...
  235:  set :buildBlockFromCfg.1:cfg "A{PHJh-inverted-sorter30"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  236:  setaddr :buildBlockFromCfg.1*retaddr *label128               ...
  237:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label128                                              ...
  238:  set :buildBlockFromCfg:cfg "A©PPJi-unloader31"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  239:  set :buildBlockFromCfg:config @sand                          ...
  240:  setaddr :buildBlockFromCfg*retaddr *label129                 ...
  241:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label129                                              ...
  242:  setaddr :buildUnits*retaddr *label130                        CoreBuilder.mnd: buildUnits();
  243:  call *label40 *invalid :buildUnits*retval                    ...
        label *label130                                              ...
  244:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  245:  jump *label133 greaterThanEq *tmp83 3                        ...
        label *label745                                              ...
  246:  setaddr :supplyBase*retaddr *label134                        CoreBuilder.mnd: supplyBase();
  247:  call *label33 *invalid :supplyBase*retval                    ...
        label *label134                                              ...
  248:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  249:  jump *label745 lessThan *tmp83 3                             ...
        label *label133                                              ...
  250:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  251:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  252:  read *tmp81 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  253:  jump *label138 greaterThanEq *tmp81 2                        ...
        label *label746                                              ...
  254:  setaddr :supplyBase*retaddr *label139                        CoreBuilder.mnd: supplyBase();
  255:  call *label33 *invalid :supplyBase*retval                    ...
        label *label139                                              ...
  256:  read *tmp81 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  257:  jump *label746 lessThan *tmp81 2                             ...
        label *label138                                              ...
  258:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  259:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  260:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  261:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  262:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  263:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  264:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  265:  write .coreY processor4 ":findDrillLocation:y"               ...
  266:  write @unit processor4 ":findDrillLocation:unit"             ...
  267:  write @titanium processor4 ":findDrillLocation:item"         ...
  268:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  269:  write 4 processor4 ":findDrillLocation:size"                 ...
  270:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  271:  write false processor4 ":findDrillLocation*finished"         ...
  272:  write 1 processor4 "@counter"                                ...
  273:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  274:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  275:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  276:  write false processor5 ":buildTitaniumDrills*finished"       ...
  277:  write 3 processor5 "@counter"                                ...
        label *label142                                              ...
  278:  wait 1e-15                                                   ...
  279:  read *tmp184 processor5 ":buildTitaniumDrills*finished"      ...
  280:  jump *label142 equal *tmp184 false                           ...
  281:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  282:  write 3 processor4 "@counter"                                ...
  283:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  284:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  285:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  286:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  287:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  288:  write false processor4 ":layoutThoriumDrill*finished"        ...
  289:  write 2 processor4 "@counter"                                ...
        label *label144                                              ...
  290:  wait 1e-15                                                   ...
  291:  read *tmp189 processor4 ":layoutThoriumDrill*finished"       ...
  292:  jump *label144 equal *tmp189 false                           ...
  293:  set :meetTarget.1:cfg "AJJJc-laser-drill25"                 CoreBuilder.mnd: meetTarget(LASER_DRILL);
  294:  setaddr :meetTarget.1*retaddr *label145                      ...
  295:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label145                                              ...
        label *label146                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  296:  wait 1e-15                                                   ...
  297:  read *tmp191 processor4 ":layoutThoriumDrill*finished"       ...
  298:  jump *label146 equal *tmp191 false                           ...
  299:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  300:  jump *label147 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  301:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  302:  stop                                                         Actions.mnd: stopProcessor();
        label *label147                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  303:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  304:  read *tmp53 processor4 ".drillX"                             ...
  305:  write *tmp53 processor5 ":buildBlockAt:x"                    ...
  306:  read *tmp54 processor4 ".drillY"                             ...
  307:  write *tmp54 processor5 ":buildBlockAt:y"                    ...
  308:  write null processor5 ":buildBlockAt:rotation"               ...
  309:  write 0 processor5 ":buildBlockAt:config"                    ...
  310:  write -1 processor5 ":buildBlockAt:index"                    ...
  311:  write false processor5 ":buildBlockAt*finished"              ...
  312:  write 1 processor5 "@counter"                                ...
        label *label150                                              ...
  313:  wait 1e-15                                                   ...
  314:  read *tmp201 processor5 ":buildBlockAt*finished"             ...
  315:  jump *label150 equal *tmp201 false                           ...
  316:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  317:  set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"         CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  318:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  319:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  320:  setaddr :buildRemoteBlock*retaddr *label151                  ...
  321:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label151                                              ...
  322:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  323:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  324:  setaddr :buildRemoteBlock*retaddr *label152                  ...
  325:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label152                                              ...
  326:  set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"         CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  327:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  328:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  329:  setaddr :buildRemoteBlock*retaddr *label153                  ...
  330:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label153                                              ...
  331:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  332:  set :buildRemoteBlock:cfg "AFJJU-power-node11"              CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  333:  read :buildRemoteBlock:x processor4 ".node1X"                ...
  334:  read :buildRemoteBlock:y processor4 ".node1Y"                ...
  335:  setaddr :buildRemoteBlock*retaddr *label154                  ...
  336:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label154                                              ...
  337:  read :buildRemoteBlock:x processor4 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  338:  read :buildRemoteBlock:y processor4 ".node2Y"                ...
  339:  setaddr :buildRemoteBlock*retaddr *label155                  ...
  340:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label155                                              ...
  341:  set :buildRemoteBlock:cfg "AJJJd-solar-panel26"             CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  342:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  343:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  344:  setaddr :buildRemoteBlock*retaddr *label156                  ...
  345:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label156                                              ...
  346:  set :buildRemoteBlock:cfg "AJTJK-battery1"                  CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  347:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  348:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  349:  setaddr :buildRemoteBlock*retaddr *label157                  ...
  350:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label157                                              ...
  351:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  352:  set :buildRemoteBlock:cfg "A¨JJJe-container27"               CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  353:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  354:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  355:  setaddr :buildRemoteBlock*retaddr *label158                  ...
  356:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label158                                              ...
  357:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  358:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  359:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  360:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  361:  write false processor3 ":setThoriumContainer*finished"       ...
  362:  write 3 processor3 "@counter"                                ...
        label *label161                                              ...
  363:  wait 1e-15                                                   ...
  364:  read *tmp214 processor3 ":setThoriumContainer*finished"      ...
  365:  jump *label161 equal *tmp214 false                           ...
  366:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  367:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  368:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  369:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  370:  jump *label165 greaterThanEq *tmp83 5                        ...
        label *label747                                              ...
  371:  setaddr :supplyBase*retaddr *label166                        CoreBuilder.mnd: supplyBase();
  372:  call *label33 *invalid :supplyBase*retval                    ...
        label *label166                                              ...
  373:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  374:  jump *label747 lessThan *tmp83 5                             ...
        label *label165                                              ...
  375:  set :buildBlockFromCfg:cfg "A©JFJj-unloader32"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER6, @silicon);
  376:  set :buildBlockFromCfg:config @silicon                       ...
  377:  setaddr :buildBlockFromCfg*retaddr *label167                 ...
  378:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label167                                              ...
  379:  set :buildBlockFromCfg.1:cfg "AÁPBJk-multiplicative-reconstr CoreBuilder.mnd: buildBlockFromCfg(MULTIPLICATIVE_REC);
  380:  setaddr :buildBlockFromCfg.1*retaddr *label168               ...
  381:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label168                                              ...
  382:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  383:  setaddr :buildUnits*retaddr *label169                        CoreBuilder.mnd: buildUnits();
  384:  call *label40 *invalid :buildUnits*retval                    ...
        label *label169                                              ...
  385:  read *tmp84 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  386:  jump *label172 greaterThanEq *tmp84 1                        ...
        label *label748                                              ...
  387:  setaddr :supplyBase*retaddr *label173                        CoreBuilder.mnd: supplyBase();
  388:  call *label33 *invalid :supplyBase*retval                    ...
        label *label173                                              ...
  389:  read *tmp84 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  390:  jump *label748 lessThan *tmp84 1                             ...
        label *label172                                              ...
  391:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  392:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  393:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  394:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  395:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  396:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  397:  setaddr :flagUnits*retaddr *label175                         ...
  398:  call *label41 *invalid :flagUnits*retval                     ...
        label *label175                                              ...
  399:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  400:  setaddr :flagUnits*retaddr *label176                         ...
  401:  call *label41 *invalid :flagUnits*retval                     ...
        label *label176                                              ...
  402:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  403:  setaddr :flagUnits*retaddr *label177                         ...
  404:  call *label41 *invalid :flagUnits*retval                     ...
        label *label177                                              ...
  405:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  406:  setaddr :flagUnits*retaddr *label178                         ...
  407:  call *label41 *invalid :flagUnits*retval                     ...
        label *label178                                              ...
        label *label179                                              CoreBuilder.mnd: while true do
  408:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  409:  set :lineUpUnits:unit @mega                                  ...
  410:  setaddr :lineUpUnits*retaddr *label182                       ...
  411:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label182                                              ...
  412:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  413:  set :lineUpUnits:unit @poly                                  ...
  414:  setaddr :lineUpUnits*retaddr *label183                       ...
  415:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label183                                              ...
  416:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  417:  set :lineUpUnits:unit @mono                                  ...
  418:  setaddr :lineUpUnits*retaddr *label184                       ...
  419:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label184                                              ...
  420:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  421:  set :lineUpUnits:unit @flare                                 ...
  422:  setaddr :lineUpUnits*retaddr *label179                       ...
  423:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label33                                               CoreBuilder.mnd: void supplyBase()
  424:  sensor *tmp228 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  425:  op sub *tmp229 .targetSilicon *tmp228                        ...
  426:  op max *tmp230 0 *tmp229                                     ...
  427:  write *tmp230 processor8 ".sandTarget"                       ...
  428:  jump *label188 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  429:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  430:  sensor *tmp232 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  431:  jump *label192 greaterThanEq *tmp232 2000                    ...
  432:  sensor *tmp235 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  433:  jump *label194 greaterThanEq *tmp235 50                      ...
  434:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  435:  set :supplyBlock:ore @coal                                   ...
  436:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  437:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  438:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  439:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  440:  sensor *tmp326 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  441:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  442:  jump *label195 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  443:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  444:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  445:  set :mineOre:block .thoriumGenerator                         ...
  446:  setaddr :mineOre*retaddr *label195                           ...
  447:  call *label21 *invalid :mineOre*retval                       ...
        label *label194                                              CoreBuilder.mnd: if core.@coal < 50 then
  448:  sensor *tmp330 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  449:  op min :transportStatus:target *tmp330 30                    ...
  450:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  451:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  452:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  453:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  454:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  455:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label672                                              Actions.mnd: do
  456:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  457:  jump *label673 equal *tmp412 null                            ...
  458:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label673                                              ...
  459:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  460:  ucontrol within .coreX .coreY 6 *tmp415 0                    Actions.mnd: while !within(x, y, RADIUS);
  461:  jump *label672 equal *tmp415 false                           Actions.mnd: do
  462:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  463:  jump *label700 equal *tmp417 null                            ...
        label *label698                                              ...
  464:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  465:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  466:  jump *label698 notEqual *tmp417 null                         ...
        label *label700                                              ...
        label *label608                                              Actions.mnd: do
  467:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  468:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  469:  op notEqual *tmp333 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  470:  op notEqual *tmp334 :supplyBlockFromCore:unitItem @coal      ...
  471:  op land *tmp335 *tmp333 *tmp334                              ...
  472:  jump *label609 equal *tmp335 false                           ...
  473:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label609                                              Actions.mnd: if unitItem != null and unitItem != item then
  474:  sensor *tmp337 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  475:  op lessThan *tmp338 *tmp337 30                               ...
  476:  sensor *tmp339 .core @coal                                   ...
  477:  op land *tmp340 *tmp338 *tmp339                              ...
  478:  jump *label608 notEqual *tmp340 false                        Actions.mnd: do
  479:  set :depositItems:block .thoriumGenerator                    Actions.mnd: depositItems(target, item);
  480:  set :depositItems:item @coal                                 ...
  481:  setaddr :depositItems*retaddr *label613                      ...
  482:  call *label19 *invalid :depositItems*retval                  ...
        label *label613                                              ...
        label *label195                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label192                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  483:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  484:  set :fetchBlock:item @thorium                                ...
  485:  setaddr :fetchBlock*retaddr *label198                        ...
  486:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label198                                              ...
  487:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label188                                              ...
  488:  read *tmp82 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  489:  jump *label199 lessThanEq *tmp82 3                           ...
  490:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  491:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  492:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  493:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  494:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  495:  set :mineOre:amount 30                                       ...
  496:  set :mineOre:block .core                                     ...
  497:  setaddr :mineOre*retaddr *label711                           ...
  498:  call *label21 *invalid :mineOre*retval                       ...
        label *label711                                              ...
  499:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label199                                              ...
  500:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  501:  jump *label205 notEqual A©JNJQ-unloader7 null                CoreBuilder.mnd: if unloader1 == null then
  502:  sensor *tmp242 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  503:  jump *label207 greaterThanEq *tmp242 .targetGraphite         ...
  504:  sensor *tmp245 AJEMJJ-graphite-press0 @coal                  CoreBuilder.mnd: if press.@coal < 5 then
  505:  jump *label209 greaterThanEq *tmp245 5                       ...
  506:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  507:  set :supplyBlock:block AJEMJJ-graphite-press0                CoreBuilder.mnd: supplyBlock(press, @coal);
  508:  set :supplyBlock:ore @coal                                   ...
  509:  setaddr :supplyBlock*retaddr *label212                       ...
  510:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label212                                              ...
  511:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label209                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label207                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  512:  sensor *tmp248 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  513:  jump *label213 greaterThanEq *tmp248 .targetSilicon          ...
  514:  sensor *tmp251 ALMQJN-silicon-smelter4 @coal                 CoreBuilder.mnd: if smelter.@coal < 5 then
  515:  jump *label215 greaterThanEq *tmp251 5                       ...
  516:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  517:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @coal);
  518:  set :supplyBlock:ore @coal                                   ...
  519:  setaddr :supplyBlock*retaddr *label218                       ...
  520:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label218                                              ...
  521:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  522:  jump *label216 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label215                                              ...
  523:  sensor *tmp254 ALMQJN-silicon-smelter4 @sand                 CoreBuilder.mnd: elsif smelter.@sand < 5 then
  524:  jump *label219 greaterThanEq *tmp254 5                       ...
  525:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  526:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @sand);
  527:  set :supplyBlock:ore @sand                                   ...
  528:  setaddr :supplyBlock*retaddr *label222                       ...
  529:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label222                                              ...
  530:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label219                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label216                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label213                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  531:  sensor *tmp257 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
  532:  jump *label223 greaterThanEq *tmp257 .powerTarget            ...
  533:  sensor *tmp260 AJRJM-combustion-generator3 @coal            CoreBuilder.mnd: if generator.@coal < 2 then
  534:  jump *label225 greaterThanEq *tmp260 2                       ...
  535:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  536:  set :supplyBlock:block AJRJM-combustion-generator3          CoreBuilder.mnd: supplyBlock(generator, @coal);
  537:  set :supplyBlock:ore @coal                                   ...
  538:  setaddr :supplyBlock*retaddr *label228                       ...
  539:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label228                                              ...
  540:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label225                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label223                                              CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
        label *label205                                              CoreBuilder.mnd: if unloader1 == null then
  541:  set *tmp265 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  542:  sensor *tmp263 .core @titanium                               ...
  543:  jump *label230 greaterThanEq *tmp263 .targetTitanium         ...
  544:  sensor *tmp266 .core @titanium                               ...
  545:  op sub *tmp267 .targetTitanium *tmp266                       ...
  546:  op min *tmp265 7 *tmp267                                     ...
        label *label230                                              ...
  547:  sensor *tmp269 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  548:  jump *label231 greaterThanEq *tmp269 *tmp265                 ...
  549:  jump *label232 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  550:  sensor *tmp274 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  551:  op mul *tmp275 A©JNJQ-unloader7 .powerTarget                 ...
  552:  jump *label235 greaterThanEq *tmp274 *tmp275                 ...
  553:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  554:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  555:  setaddr :mineOre.1*retaddr *label238                         ...
  556:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label238                                              ...
  557:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label235                                              ...
  558:  sensor *tmp278 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  559:  jump *label239 greaterThanEq *tmp278 .targetSilicon          ...
  560:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  561:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  562:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  563:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  564:  setaddr :mineOre.1*retaddr *label244                         CoreBuilder.mnd: mineOre(ore);
  565:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label244                                              ...
  566:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label239                                              ...
  567:  sensor *tmp285 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  568:  jump *label245 greaterThanEq *tmp285 .targetCopper           ...
  569:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  570:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  571:  setaddr :mineOre.1*retaddr *label248                         ...
  572:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label248                                              ...
  573:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label245                                              ...
  574:  sensor *tmp288 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  575:  jump *label249 greaterThanEq *tmp288 .targetLead             ...
  576:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  577:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  578:  setaddr :mineOre.1*retaddr *label252                         ...
  579:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label252                                              ...
  580:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label249                                              ...
  581:  sensor *tmp291 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  582:  jump *label253 greaterThanEq *tmp291 .targetMetaglass        ...
  583:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  584:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  585:  setaddr :mineOre.1*retaddr *label256                         ...
  586:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label256                                              ...
  587:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label253                                              ...
  588:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  589:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  590:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  591:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  592:  setaddr :mineOre.1*retaddr *label260                         CoreBuilder.mnd: mineOre(ore);
  593:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label260                                              ...
  594:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label231                                              ...
  595:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  596:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  597:  set :fetchBlock:item @titanium                               ...
  598:  setaddr :fetchBlock*retaddr *label262                        ...
  599:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label262                                              ...
        label *label232                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  600:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label36                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  601:  op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  602:  jump *label264 lessThanEq *tmp298 0                          ...
  603:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  604:  setaddr :unpackCfg*retaddr *label266                         ...
  605:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label266                                              ...
  606:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  607:  set :buildBlock:x :buildRemoteBlock:x                        ...
  608:  set :buildBlock:y :buildRemoteBlock:y                        ...
  609:  set :buildBlock:copper :unpackCfg:cu                         ...
  610:  set :buildBlock:lead :unpackCfg:pb                           ...
  611:  set :buildBlock:graphite :unpackCfg:gr                       ...
  612:  set :buildBlock:silicon :unpackCfg:si                        ...
  613:  set :buildBlock:titanium :unpackCfg:ti                       ...
  614:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  615:  set :buildBlock:thorium :unpackCfg:th                        ...
  616:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  617:  set :buildBlock:config null                                  ...
  618:  set :buildBlock:index :unpackCfg:ind                         ...
  619:  setaddr :buildBlock*retaddr *label267                        ...
  620:  call *label35 *invalid :buildBlock*retval                    ...
        label *label267                                              ...
  621:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  622:  return :buildRemoteBlock*retaddr                             ...
        label *label264                                              CoreBuilder.mnd: if x + y > 0 then
  623:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  624:  return :buildRemoteBlock*retaddr                             ...
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  625:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  626:  setaddr :unpackCfg*retaddr *label269                         ...
  627:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label269                                              ...
  628:  op add *tmp301 .coreX :unpackCfg:x                           CoreBuilder.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  629:  op add *tmp302 .coreY :unpackCfg:y                           ...
  630:  set :buildBlock:block :unpackCfg:type                        ...
  631:  set :buildBlock:x *tmp301                                    ...
  632:  set :buildBlock:y *tmp302                                    ...
  633:  set :buildBlock:copper :unpackCfg:cu                         ...
  634:  set :buildBlock:lead :unpackCfg:pb                           ...
  635:  set :buildBlock:graphite :unpackCfg:gr                       ...
  636:  set :buildBlock:silicon :unpackCfg:si                        ...
  637:  set :buildBlock:titanium :unpackCfg:ti                       ...
  638:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  639:  set :buildBlock:thorium :unpackCfg:th                        ...
  640:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  641:  set :buildBlock:config :buildBlockFromCfg:config             ...
  642:  set :buildBlock:index :unpackCfg:ind                         ...
  643:  setaddr :buildBlock*retaddr *label270                        ...
  644:  call *label35 *invalid :buildBlock*retval                    ...
        label *label270                                              ...
  645:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        CoreBuilder.mnd: @this.write(building, cfg);
  646:  write :buildBlock*retval .display :buildBlockFromCfg:cfg     CoreBuilder.mnd: display.write(building, cfg);
  647:  write :buildBlock*retval .controller :buildBlockFromCfg:cfg  CoreBuilder.mnd: controller.write(building, cfg);
  648:  set :buildBlockFromCfg*retval :buildBlock*retval             CoreBuilder.mnd: return building;
  649:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label38                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  650:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  651:  set :buildBlockFromCfg:config null                           ...
  652:  setaddr :buildBlockFromCfg*retaddr *label272                 ...
  653:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label272                                              ...
  654:  return :buildBlockFromCfg.1*retaddr                          CoreBuilder.mnd: def buildBlockFromCfg(cfg)
        label *label39                                               CoreBuilder.mnd: void meetTarget(cfg)
  655:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  656:  setaddr :unpackCfg*retaddr *label274                         ...
  657:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label274                                              ...
  658:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  659:  set :meetTarget:copper :unpackCfg:cu                         ...
  660:  set :meetTarget:lead :unpackCfg:pb                           ...
  661:  set :meetTarget:graphite :unpackCfg:gr                       ...
  662:  set :meetTarget:silicon :unpackCfg:si                        ...
  663:  set :meetTarget:titanium :unpackCfg:ti                       ...
  664:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  665:  set :meetTarget:thorium :unpackCfg:th                        ...
  666:  setaddr :meetTarget*retaddr *label275                        ...
  667:  call *label34 *invalid :meetTarget*retval                    ...
        label *label275                                              ...
  668:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  669:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  670:  set :meetTarget:copper 0                                     ...
  671:  set :meetTarget:lead 0                                       ...
  672:  set :meetTarget:graphite 0                                   ...
  673:  set :meetTarget:silicon 0                                    ...
  674:  set :meetTarget:titanium 0                                   ...
  675:  set :meetTarget:metaglass 0                                  ...
  676:  set :meetTarget:thorium 0                                    ...
  677:  setaddr :meetTarget*retaddr *label277                        ...
  678:  call *label34 *invalid :meetTarget*retval                    ...
        label *label277                                              ...
  679:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  680:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  681:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  682:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  683:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  684:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label279                                              CoreBuilder.mnd: do
  685:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  686:  set :flagUnits:firstUnit @unit                               ...
  687:  jump *label279 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  688:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label282                                              CoreBuilder.mnd: do
  689:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  690:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  691:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  692:  jump *label282 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  693:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  694:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  695:  set :lineUpUnits:firstUnit @unit                             ...
        label *label286                                              CoreBuilder.mnd: do
  696:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  697:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  698:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  699:  sensor *tmp308 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  700:  jump *label289 equal *tmp308 false                           ...
  701:  ucontrol stop 0 0 0 0 0                                      ...
        label *label289                                              ...
  702:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  703:  jump *label286 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  704:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)
        label *label22                                               Actions.mnd: void mineOre(ore)
  705:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  706:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  707:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  708:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  709:  set :mineOre:amount 30                                       ...
  710:  set :mineOre:block .core                                     ...
  711:  setaddr :mineOre*retaddr *label294                           ...
  712:  call *label21 *invalid :mineOre*retval                       ...
        label *label294                                              ...
  713:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  714:  sensor *tmp312 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  715:  op min :transportStatus:target *tmp312 30                    ...
  716:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  717:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  718:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  719:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  720:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  721:  sensor *tmp314 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  722:  sensor *tmp315 :fetchBlock:block @y                          ...
  723:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label681                                              Actions.mnd: do
  724:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  725:  jump *label682 equal *tmp412 null                            ...
  726:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label682                                              ...
  727:  ucontrol approach *tmp314 *tmp315 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  728:  ucontrol within *tmp314 *tmp315 6 *tmp415 0                  Actions.mnd: while !within(x, y, RADIUS);
  729:  jump *label681 equal *tmp415 false                           Actions.mnd: do
  730:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  731:  jump *label667 equal *tmp417 null                            ...
        label *label665                                              ...
  732:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  733:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  734:  jump *label665 notEqual *tmp417 null                         ...
        label *label667                                              ...
        label *label300                                              Actions.mnd: do
  735:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  736:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  737:  op notEqual *tmp317 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  738:  op notEqual *tmp318 :fetchBlock:unitItem :fetchBlock:item    ...
  739:  op land *tmp319 *tmp317 *tmp318                              ...
  740:  jump *label303 equal *tmp319 false                           ...
  741:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label303                                              Actions.mnd: if unitItem != null and unitItem != item then
  742:  sensor *tmp321 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  743:  op lessThan *tmp322 *tmp321 30                               ...
  744:  sensor *tmp323 :fetchBlock:block :fetchBlock:item            ...
  745:  op land *tmp324 *tmp322 *tmp323                              ...
  746:  jump *label300 notEqual *tmp324 false                        Actions.mnd: do
  747:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  748:  sensor *tmp419 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  749:  jump *label729 notEqual *tmp419 :fetchBlock:item             ...
  750:  sensor *tmp443 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  751:  sensor *tmp444 .core @y                                      ...
  752:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  753:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  754:  jump *label723 notEqual *tmp449 false                        ...
        label *label721                                              ...
  755:  ucontrol approach *tmp443 *tmp444 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  756:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  757:  jump *label721 equal *tmp449 false                           ...
        label *label723                                              ...
  758:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label726                                              Actions.mnd: do
  759:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  760:  sensor *tmp423 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  761:  op mul *tmp424 *tmp423 :depositItems:cap                     ...
  762:  sensor *tmp425 .core :fetchBlock:item                        ...
  763:  jump *label726 greaterThan *tmp424 *tmp425                   Actions.mnd: do
  764:  jump *label734 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label729                                              ...
  765:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  766:  jump *label733 equal *tmp427 null                            ...
        label *label731                                              ...
  767:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  768:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  769:  jump *label731 notEqual *tmp427 null                         ...
        label *label733                                              ...
        label *label734                                              Actions.mnd: if @unit.@firstItem == item then
  770:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  771:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  772:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  773:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  774:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  775:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  776:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  777:  sensor *tmp326 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  778:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  779:  jump *label308 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  780:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  781:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  782:  set :mineOre:block :supplyBlock:block                        ...
  783:  setaddr :mineOre*retaddr *label310                           ...
  784:  call *label21 *invalid :mineOre*retval                       ...
        label *label310                                              ...
        label *label308                                              Actions.mnd: if missing > 0 then
  785:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  786:  read *tmp342 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  787:  op sub *tmp343 *tmp342 74                                    ...
  788:  lookup block :unpackCfg:type *tmp343                         ...
  789:  read *tmp346 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  790:  op sub *tmp347 *tmp346 74                                    ...
  791:  op div :unpackCfg:x *tmp347 2                                ...
  792:  read *tmp350 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  793:  op sub *tmp351 *tmp350 74                                    ...
  794:  op div :unpackCfg:y *tmp351 2                                ...
  795:  read *tmp354 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  796:  op sub :unpackCfg:rotation *tmp354 74                        ...
  797:  read *tmp357 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  798:  op sub :unpackCfg:ind *tmp357 74                             ...
  799:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  800:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  801:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  802:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  803:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  804:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  805:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  806:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label34                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  807:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  808:  op sign *tmp368 :meetTarget:lead 0                           ...
  809:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  810:  op sign *tmp368 :meetTarget:graphite 0                       ...
  811:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  812:  op sign *tmp368 :meetTarget:silicon 0                        ...
  813:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  814:  op sign *tmp368 :meetTarget:titanium 0                       ...
  815:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  816:  op sign *tmp368 :meetTarget:metaglass 0                      ...
  817:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  818:  op sign *tmp368 :meetTarget:thorium 0                        ...
  819:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  820:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  821:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  822:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  823:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  824:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  825:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  826:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  827:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  828:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  829:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  830:  op add *tmp369 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  831:  op add .targetLead *tmp369 1                                 ...
  832:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  833:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  834:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  835:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  836:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  837:  op add *tmp371 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  838:  write *tmp371 .controller ".pressTarget"                     ...
  839:  op add *tmp372 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  840:  write *tmp372 .controller ".smelterTarget"                   ...
  841:  op add *tmp373 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  842:  write *tmp373 .controller ".kilnTarget"                      ...
  843:  write *tmp369 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  844:  op sign *tmp375 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  845:  op mul *tmp376 *tmp375 20                                    ...
  846:  op add *tmp377 :meetTarget:silicon *tmp376                   ...
  847:  write *tmp377 .controller ".siliconReserve"                  ...
  848:  op sign *tmp378 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  849:  op mul *tmp379 *tmp378 20                                    ...
  850:  op add *tmp380 :meetTarget:graphite *tmp379                  ...
  851:  write *tmp380 .controller ".graphiteReserve"                 ...
  852:  write .targetLead processor8 ".leadTarget"                   CoreBuilder.mnd: monoController.leadTarget = targetLead;
  853:  write :meetTarget:copper processor8 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
        label *label334                                              CoreBuilder.mnd: while !targetMet() do
  854:  sensor *tmp382 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  855:  jump *label338 greaterThanEq *tmp382 .targetCopper           ...
  856:  set *tmp381 false                                            ...
  857:  jump *label337 always 0 0                                    ...
        label *label338                                              ...
  858:  sensor *tmp385 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  859:  jump *label340 greaterThanEq *tmp385 .targetLead             ...
  860:  set *tmp381 false                                            ...
  861:  jump *label337 always 0 0                                    ...
        label *label340                                              ...
  862:  sensor *tmp388 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  863:  jump *label342 greaterThanEq *tmp388 .targetGraphite         ...
  864:  set *tmp381 false                                            ...
  865:  jump *label337 always 0 0                                    ...
        label *label342                                              ...
  866:  sensor *tmp391 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  867:  jump *label344 greaterThanEq *tmp391 .targetSilicon          ...
  868:  set *tmp381 false                                            ...
  869:  jump *label337 always 0 0                                    ...
        label *label344                                              ...
  870:  sensor *tmp394 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  871:  jump *label346 greaterThanEq *tmp394 .targetTitanium         ...
  872:  set *tmp381 false                                            ...
  873:  jump *label337 always 0 0                                    ...
        label *label346                                              ...
  874:  sensor *tmp397 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  875:  jump *label348 greaterThanEq *tmp397 .targetMetaglass        ...
  876:  set *tmp381 false                                            ...
  877:  jump *label337 always 0 0                                    ...
        label *label348                                              ...
  878:  sensor *tmp400 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  879:  jump *label350 greaterThanEq *tmp400 .targetThorium          ...
  880:  set *tmp381 false                                            ...
  881:  jump *label337 always 0 0                                    ...
        label *label350                                              ...
  882:  set *tmp381 true                                             CoreBuilder.mnd: return true;
  883:  jump *label337 always 0 0                                    ...
        label *label337                                              CoreBuilder.mnd: while !targetMet() do
  884:  jump *label336 notEqual *tmp381 false                        ...
  885:  setaddr :supplyBase*retaddr *label334                        CoreBuilder.mnd: supplyBase();
  886:  call *label33 *invalid :supplyBase*retval                    ...
        label *label336                                              CoreBuilder.mnd: while !targetMet() do
  887:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label35                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  888:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  889:  set :meetTarget:copper :buildBlock:copper                    ...
  890:  set :meetTarget:lead :buildBlock:lead                        ...
  891:  set :meetTarget:graphite :buildBlock:graphite                ...
  892:  set :meetTarget:silicon :buildBlock:silicon                  ...
  893:  set :meetTarget:titanium :buildBlock:titanium                ...
  894:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  895:  set :meetTarget:thorium :buildBlock:thorium                  ...
  896:  setaddr :meetTarget*retaddr *label354                        ...
  897:  call *label34 *invalid :meetTarget*retval                    ...
        label *label354                                              ...
  898:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  899:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  900:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  901:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  902:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  903:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  904:  write false .blockBuilder ":buildBlockAt*finished"           ...
  905:  write 1 .blockBuilder "@counter"                             ...
        label *label355                                              ...
  906:  wait 1e-15                                                   ...
  907:  read *tmp410 .blockBuilder ":buildBlockAt*finished"          ...
  908:  jump *label355 equal *tmp410 false                           ...
  909:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  910:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label19                                               Actions.mnd: void depositItems(block, item)
  911:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  912:  sensor *tmp419 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  913:  jump *label371 notEqual *tmp419 :depositItems:item           ...
  914:  sensor *tmp443 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
  915:  sensor *tmp444 :depositItems:block @y                        ...
  916:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  917:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  918:  jump *label636 notEqual *tmp449 false                        ...
        label *label639                                              ...
  919:  ucontrol approach *tmp443 *tmp444 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  920:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  921:  jump *label639 equal *tmp449 false                           ...
        label *label636                                              ...
  922:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label374                                              Actions.mnd: do
  923:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  924:  sensor *tmp423 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  925:  op mul *tmp424 *tmp423 :depositItems:cap                     ...
  926:  sensor *tmp425 :depositItems:block :depositItems:item        ...
  927:  jump *label374 greaterThan *tmp424 *tmp425                   Actions.mnd: do
  928:  jump *label372 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label371                                              ...
  929:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  930:  jump *label379 equal *tmp427 null                            ...
        label *label640                                              ...
  931:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  932:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  933:  jump *label640 notEqual *tmp427 null                         ...
        label *label379                                              ...
        label *label372                                              Actions.mnd: if @unit.@firstItem == item then
  934:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  935:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  936:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  937:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  938:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  939:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  940:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  941:  jump *label628 notEqual *tmp445 false                        ...
  942:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  943:  stop                                                         Actions.mnd: stopProcessor();
        label *label628                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  944:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label690                                              Actions.mnd: do
  945:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  946:  jump *label691 equal *tmp412 null                            ...
  947:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label691                                              ...
  948:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  949:  ucontrol within :locateOre:x :locateOre:y 6 *tmp415 0        Actions.mnd: while !within(x, y, RADIUS);
  950:  jump *label690 equal *tmp415 false                           Actions.mnd: do
  951:  sensor *tmp430 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  952:  jump *label385 equal *tmp430 :mineOre:ore                    ...
  953:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  954:  jump *label706 equal *tmp417 null                            ...
        label *label704                                              ...
  955:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  956:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  957:  jump *label704 notEqual *tmp417 null                         ...
        label *label706                                              ...
        label *label385                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  958:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  959:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label389                                              Actions.mnd: do
  960:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  961:  op notEqual *tmp435 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  962:  op notEqual *tmp436 :mineOre:item :mineOre:ore               ...
  963:  op land *tmp437 *tmp435 *tmp436                              ...
  964:  jump *label391 notEqual *tmp437 false                        ...
  965:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  966:  jump *label391 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  967:  sensor *tmp441 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  968:  jump *label389 lessThan *tmp441 :mineOre:amount              Actions.mnd: do
        label *label391                                              ...
  969:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  970:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  971:  set :depositItems:item :mineOre:ore                          ...
  972:  setaddr :depositItems*retaddr *label396                      ...
  973:  call *label19 *invalid :depositItems*retval                  ...
        label *label396                                              ...
  974:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 1,140 ms, compiled in 598 ms, optimized in 5,825 ms, run in 18 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: read *tmp95 processor8 "*signature":
Variable 'processor8' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
