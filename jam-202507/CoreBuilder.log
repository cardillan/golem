  1504 instructions before optimizations.
    68 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   146 instructions eliminated by Dead Code Elimination (2 passes, 12 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
    57 instructions eliminated by Jump Optimization (5 iterations).
    41 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (3 iterations).
    13 instructions eliminated by If Expression Optimization (4 iterations).
   123 instructions eliminated by Data Flow Optimization (10 passes, 37 iterations).
     1 loops improved by Loop Hoisting.
     3 instructions added by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
     4 instructions eliminated by Loop Unrolling (17 iterations).
     2 loops unrolled by Loop Unrolling.
    53 instructions eliminated by Function Inlining (17 iterations).
    26 function calls inlined by Function Inlining.
     4 instructions eliminated by Jump Straightening (5 iterations).
    23 instructions updated by Jump Threading.
     6 calls threaded by Jump Threading.
    29 instructions eliminated by Unreachable Code Elimination (2 iterations).
   966 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  * Unroll iteration loop at CoreBuilder.mnd:398:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Unroll iteration loop at CoreBuilder.mnd:197:5               size   -13, benefit     1039.5, efficiency   Infinity
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'supplyBase' defined at CoreBuilder.mnd:170:1 size   +74, benefit     4631.3, efficiency     62.584
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
    Inline function 'supplyBase0' defined at CoreBuilder.mnd:57:1 size    -1, benefit     1157.8, efficiency   Infinity
    Inline function 'supplyBase1' defined at CoreBuilder.mnd:146:1 size    -1, benefit     1157.8, efficiency   Infinity
    Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 size    -1, benefit     2315.6, efficiency   Infinity
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +149, benefit      308.0, efficiency      2.067
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:466:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:174:9                size   +24, benefit     2315.6, efficiency     96.484
  ! Inline function call at CoreBuilder.mnd:176:9                size    +5, benefit     1157.8, efficiency    231.563
  ! Inline function call at CoreBuilder.mnd:178:9                size  +161, benefit     1157.8, efficiency      7.191
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +75, benefit       16.0, efficiency      0.213
  ! Inline function call at CoreBuilder.mnd:332:5                size   +75, benefit       24.0, efficiency      0.320
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size   +15, benefit     2887.5, efficiency    192.500
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size   +15, benefit     1443.8, efficiency     96.250
  ! Inline function call at CoreBuilder.mnd:242:5                size   +75, benefit      268.0, efficiency      3.573
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  * Unroll iteration loop at CoreBuilder.mnd:197:5               size   -13, benefit     1039.5, efficiency   Infinity (-10 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'supplyBase' defined at CoreBuilder.mnd:170:1 size   +74, benefit     4631.3, efficiency     62.584
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
    Inline function 'supplyBase0' defined at CoreBuilder.mnd:57:1 size    -1, benefit     1157.8, efficiency   Infinity
    Inline function 'supplyBase1' defined at CoreBuilder.mnd:146:1 size    -1, benefit     1157.8, efficiency   Infinity
    Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 size    -1, benefit     2315.6, efficiency   Infinity
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +149, benefit      308.0, efficiency      2.067
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:466:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:174:9                size   +24, benefit     2315.6, efficiency     96.484
  ! Inline function call at CoreBuilder.mnd:176:9                size    +5, benefit     1157.8, efficiency    231.563
  ! Inline function call at CoreBuilder.mnd:178:9                size  +161, benefit     1157.8, efficiency      7.191
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +75, benefit       16.0, efficiency      0.213
  ! Inline function call at CoreBuilder.mnd:332:5                size   +75, benefit       24.0, efficiency      0.320
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size   +15, benefit     2887.5, efficiency    192.500
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size   +15, benefit     1443.8, efficiency     96.250
  ! Inline function call at CoreBuilder.mnd:242:5                size   +75, benefit      268.0, efficiency      3.573
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'supplyBase' defined at CoreBuilder.mnd:170:1 size   +74, benefit     4631.3, efficiency     62.584
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  * Inline function 'supplyBase0' defined at CoreBuilder.mnd:57:1 size    -1, benefit     1157.8, efficiency   Infinity (-4 instructions)
    Inline function 'supplyBase1' defined at CoreBuilder.mnd:146:1 size    -1, benefit     1157.8, efficiency   Infinity
    Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 size    -1, benefit     2315.6, efficiency   Infinity
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:466:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size   +15, benefit       75.0, efficiency      5.000
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:174:9                size   +24, benefit     2315.6, efficiency     96.484
  ! Inline function call at CoreBuilder.mnd:176:9                size    +5, benefit     1157.8, efficiency    231.563
  ! Inline function call at CoreBuilder.mnd:178:9                size  +161, benefit     1157.8, efficiency      7.191
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size   +15, benefit     2887.5, efficiency    192.500
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size   +15, benefit     1443.8, efficiency     96.250
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  * Inline function 'supplyBase1' defined at CoreBuilder.mnd:146:1 size    -1, benefit     1157.8, efficiency   Infinity (-4 instructions)
    Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 size    -1, benefit     2315.6, efficiency   Infinity
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +175, benefit       75.0, efficiency      0.429
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +175, benefit       75.0, efficiency      0.429
  ! Inline function call at CoreBuilder.mnd:466:9                size  +175, benefit       75.0, efficiency      0.429
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +175, benefit       75.0, efficiency      0.429
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:174:9                size   +24, benefit     2315.6, efficiency     96.484
  ! Inline function call at CoreBuilder.mnd:176:9                size    +5, benefit     1157.8, efficiency    231.563
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +175, benefit     2887.5, efficiency     16.500
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +175, benefit     1443.8, efficiency      8.250
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  * Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 size    -1, benefit     2315.6, efficiency   Infinity (-4 instructions)
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:466:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +179, benefit       75.0, efficiency      0.419
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:174:9                size   +24, benefit     2315.6, efficiency     96.484
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +179, benefit     2887.5, efficiency     16.131
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +179, benefit     1443.8, efficiency      8.066
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     5656.4, efficiency   Infinity (-33 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:466:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:152:5                size    +0, benefit     2701.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
    Inline function call at CoreBuilder.mnd:147:5                size    +0, benefit     1350.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
    Inline function call at CoreBuilder.mnd:63:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:71:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:76:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:80:21                size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      168.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
    Inline function call at CoreBuilder.mnd:104:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
    Inline function call at CoreBuilder.mnd:111:21               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit       42.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
    Inline function call at CoreBuilder.mnd:121:17               size    +0, benefit       21.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
    Inline function call at CoreBuilder.mnd:124:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:131:17               size    +0, benefit       10.6, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
    Inline function call at CoreBuilder.mnd:141:9                size    +0, benefit      675.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +202, benefit     2887.5, efficiency     14.295
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +202, benefit     1443.8, efficiency      7.147
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 size    -1, benefit      385.9, efficiency   Infinity (-6 instructions)
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:466:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at CoreBuilder.mnd:159:17               size   +32, benefit      385.9, efficiency     12.061
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +172, benefit     2887.5, efficiency     16.788
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +172, benefit     1443.8, efficiency      8.394
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6705.7, efficiency    447.044
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6705.7, efficiency    149.015
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16821.4, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:466:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +8, benefit      385.9, efficiency     48.242
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +23, benefit      385.9, efficiency     16.780
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +201, benefit     2887.5, efficiency     14.366
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +201, benefit     1443.8, efficiency      7.183
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +8, benefit     3859.4, efficiency    482.422
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +23, benefit     3859.4, efficiency    167.799
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5867.5, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5867.5, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2460.4, efficiency    307.544
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2152.8, efficiency   Infinity
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +23, benefit     2460.4, efficiency    106.972
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3771.9, efficiency    538.848
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2933.7, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6705.7, efficiency    163.553
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit     2767.9, efficiency     35.037
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3352.8, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:466:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +21, benefit      385.9, efficiency     18.378
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +201, benefit     2887.5, efficiency     14.366
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +201, benefit     1443.8, efficiency      7.183
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +40, benefit       67.8, efficiency      1.696
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +40, benefit     2103.1, efficiency     52.576
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +21, benefit     3859.4, efficiency    183.780
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +40, benefit      597.0, efficiency     14.925
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3352.8, efficiency    558.805
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +21, benefit     2460.4, efficiency    117.160
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     3771.9, efficiency    754.387
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6705.7, efficiency    142.674
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +79, benefit     2767.9, efficiency     35.037
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2767.9, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:466:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit      385.9, efficiency     16.081
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +201, benefit     2887.5, efficiency     14.366
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +201, benefit     1443.8, efficiency      7.183
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +40, benefit       67.8, efficiency      1.696
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +40, benefit     2103.1, efficiency     52.576
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit     3859.4, efficiency    160.807
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +40, benefit      597.0, efficiency     14.925
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     3771.9, efficiency    754.387
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2767.9, efficiency    691.974
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit     2460.4, efficiency    102.515
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6705.7, efficiency    142.674
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3771.9, efficiency   Infinity (-8 instructions)
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:466:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit      385.9, efficiency     16.081
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +201, benefit     2887.5, efficiency     14.366
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +201, benefit     1443.8, efficiency      7.183
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit     3859.4, efficiency    160.807
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:68:5                     size    +5, benefit     3771.9, efficiency    754.387
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit     2460.4, efficiency    102.515

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +23, benefit      118.0, efficiency      5.130
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +129, benefit      308.0, efficiency      2.388
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +27, benefit      318.3, efficiency     11.787
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6705.7, efficiency    142.674
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:466:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +201, benefit       75.0, efficiency      0.373
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit      385.9, efficiency     16.081
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +28, benefit       38.0, efficiency      1.357
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +28, benefit      280.3, efficiency     10.009
  ! Inline function call at CoreBuilder.mnd:269:5                size   +24, benefit      114.0, efficiency      4.750
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +65, benefit       16.0, efficiency      0.246
  ! Inline function call at CoreBuilder.mnd:332:5                size   +65, benefit       24.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +201, benefit     2887.5, efficiency     14.366
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +201, benefit     1443.8, efficiency      7.183
  ! Inline function call at CoreBuilder.mnd:242:5                size   +65, benefit      268.0, efficiency      4.123
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit     3859.4, efficiency    160.807
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit     2460.4, efficiency    102.515

Pass 2: speed optimization selection (cost limit 3):
    Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
    Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    34221.8, efficiency  34221.802 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +22, benefit      118.0, efficiency      5.364
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +127, benefit      308.0, efficiency      2.425
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +25, benefit      318.3, efficiency     12.730
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     4106.6, efficiency    821.323
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6705.7, efficiency    142.674
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
    Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +196, benefit       75.0, efficiency      0.383
    Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
    Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:466:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +196, benefit       75.0, efficiency      0.383
    Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
    Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
    Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
    Inline function call at Actions.mnd:175:5                    size    +3, benefit      289.5, efficiency     96.484
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit      385.9, efficiency     16.081
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +26, benefit       38.0, efficiency      1.462
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +26, benefit      280.3, efficiency     10.779
  ! Inline function call at CoreBuilder.mnd:269:5                size   +23, benefit      114.0, efficiency      4.957
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +64, benefit       16.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:332:5                size   +64, benefit       24.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +196, benefit     2887.5, efficiency     14.732
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +196, benefit     1443.8, efficiency      7.366
  ! Inline function call at CoreBuilder.mnd:242:5                size   +64, benefit      268.0, efficiency      4.188
    Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
    Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
    Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
    Inline function call at Actions.mnd:147:5                    size    +3, benefit     2894.5, efficiency    964.844
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit     3859.4, efficiency    160.807
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      922.6, efficiency    307.544
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit     2460.4, efficiency    102.515

Pass 2: speed optimization selection (cost limit 2):
    Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
    Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20955.2, efficiency  20955.200 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +22, benefit      118.0, efficiency      5.364
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +127, benefit      308.0, efficiency      2.425
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +25, benefit      318.3, efficiency     12.730
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4106.6, efficiency    586.659
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6705.7, efficiency    142.674
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:466:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
    Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
    Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +4, benefit      289.5, efficiency     72.363
  ! Inline function call at Actions.mnd:185:5                    size   +24, benefit      385.9, efficiency     16.081
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +26, benefit       38.0, efficiency      1.462
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +26, benefit      280.3, efficiency     10.779
  ! Inline function call at CoreBuilder.mnd:269:5                size   +23, benefit      114.0, efficiency      4.957
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +64, benefit       16.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:332:5                size   +64, benefit       24.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +196, benefit     2887.5, efficiency     14.732
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +196, benefit     1443.8, efficiency      7.366
  ! Inline function call at CoreBuilder.mnd:242:5                size   +64, benefit      268.0, efficiency      4.188
    Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
    Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
    Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
    Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +4, benefit     2894.5, efficiency    723.633
  ! Inline function call at Actions.mnd:157:5                    size   +24, benefit     3859.4, efficiency    160.807
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +4, benefit      922.6, efficiency    230.658
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +24, benefit     2460.4, efficiency    102.515

Pass 2: speed optimization selection (cost limit 1):
    Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20955.2, efficiency  20955.200 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +22, benefit      118.0, efficiency      5.364
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +127, benefit      308.0, efficiency      2.425
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +25, benefit      318.3, efficiency     12.730
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4106.6, efficiency    586.659
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     6705.7, efficiency    136.850
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:466:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
    Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
    Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +4, benefit      289.5, efficiency     72.363
  ! Inline function call at Actions.mnd:185:5                    size   +25, benefit      385.9, efficiency     15.438
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +26, benefit       38.0, efficiency      1.462
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +26, benefit      280.3, efficiency     10.779
  ! Inline function call at CoreBuilder.mnd:269:5                size   +23, benefit      114.0, efficiency      4.957
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +64, benefit       16.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:332:5                size   +64, benefit       24.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +196, benefit     2887.5, efficiency     14.732
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +196, benefit     1443.8, efficiency      7.366
  ! Inline function call at CoreBuilder.mnd:242:5                size   +64, benefit      268.0, efficiency      4.188
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
    Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +4, benefit     2894.5, efficiency    723.633
  ! Inline function call at Actions.mnd:157:5                    size   +25, benefit     3859.4, efficiency    154.375
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +4, benefit      922.6, efficiency    230.658
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +25, benefit     2460.4, efficiency     98.414

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +22, benefit      118.0, efficiency      5.364
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +127, benefit      308.0, efficiency      2.425
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +25, benefit      318.3, efficiency     12.730
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4106.6, efficiency    586.659
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     6705.7, efficiency    131.484
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:466:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +4, benefit      289.5, efficiency     72.363
  ! Inline function call at Actions.mnd:185:5                    size   +26, benefit      385.9, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +26, benefit       38.0, efficiency      1.462
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +26, benefit      280.3, efficiency     10.779
  ! Inline function call at CoreBuilder.mnd:269:5                size   +23, benefit      114.0, efficiency      4.957
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +64, benefit       16.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:332:5                size   +64, benefit       24.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +196, benefit     2887.5, efficiency     14.732
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +196, benefit     1443.8, efficiency      7.366
  ! Inline function call at CoreBuilder.mnd:242:5                size   +64, benefit      268.0, efficiency      4.188
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +4, benefit     2894.5, efficiency    723.633
  ! Inline function call at Actions.mnd:157:5                    size   +26, benefit     3859.4, efficiency    148.438
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +4, benefit      922.6, efficiency    230.658
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +26, benefit     2460.4, efficiency     94.629

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:460:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:465:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:484:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:227:5            size    +2, benefit      962.5, efficiency    481.250
  ! Replicate loop condition at CoreBuilder.mnd:233:9            size    +2, benefit      481.3, efficiency    240.625
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1079.9, efficiency   1079.904
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:248:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:258:1 size   +22, benefit      118.0, efficiency      5.364
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:268:1 size   +95, benefit       99.8, efficiency      1.050
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:272:1 size   +13, benefit        7.0, efficiency      0.538
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:331:1 size   +31, benefit        9.0, efficiency      0.290
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      329.3, efficiency      8.899
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:194:1 size  +127, benefit      308.0, efficiency      2.425
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:241:1 size   +25, benefit      318.3, efficiency     12.730
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size   +17, benefit       60.3, efficiency      3.547
  ! Inline function 'mineOre' defined at Actions.mnd:138:1       size   +53, benefit     1635.7, efficiency     30.862
  ! Inline function 'fetchBlock' defined at Actions.mnd:143:1    size   +32, benefit     3859.4, efficiency    120.605
  ! Inline function 'supplyBlock' defined at Actions.mnd:161:1   size   +64, benefit     1061.3, efficiency     16.583
  ! Inline function 'targetMet' defined at CoreBuilder.mnd:182:1 size   +57, benefit    27397.0, efficiency    480.650
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +7, benefit     8140.9, efficiency   1162.981
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    13411.3, efficiency   6705.664
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6705.7, efficiency    609.606
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     4106.6, efficiency    586.659
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     6705.7, efficiency    131.484
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +83, benefit     2767.9, efficiency     33.348
  ! Inline function call at CoreBuilder.mnd:355:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:356:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:357:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:358:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:363:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:365:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:366:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:369:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:370:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:279:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:284:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:376:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:377:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:379:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:380:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:381:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:385:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:386:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:387:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:406:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:417:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:419:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:430:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:431:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:432:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:435:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:436:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:438:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:441:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:443:9                size    +3, benefit        1.8, efficiency      0.583
  ! Inline function call at CoreBuilder.mnd:447:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:448:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:449:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:458:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:461:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:466:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:308:5                size   +14, benefit        3.5, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:311:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:314:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:315:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:316:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:317:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:318:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:319:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:320:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:321:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:485:9                size  +196, benefit       75.0, efficiency      0.383
  ! Inline function call at CoreBuilder.mnd:494:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:500:5                size   +16, benefit        3.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:157:17               size   +13, benefit      385.9, efficiency     29.688
  ! Inline function call at Actions.mnd:172:5                    size    +1, benefit      385.9, efficiency    385.938
  ! Inline function call at Actions.mnd:173:5                    size    +2, benefit      434.2, efficiency    217.090
  ! Inline function call at Actions.mnd:174:5                    size    +6, benefit      385.9, efficiency     64.323
  ! Inline function call at Actions.mnd:175:5                    size    +4, benefit      289.5, efficiency     72.363
  ! Inline function call at Actions.mnd:185:5                    size   +26, benefit      385.9, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:163:5                size   +33, benefit     3087.5, efficiency     93.561
  ! Inline function call at CoreBuilder.mnd:148:5                size    +9, benefit     1350.8, efficiency    150.087
  ! Inline function call at CoreBuilder.mnd:64:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:72:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:77:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:81:21                size   +13, benefit       48.2, efficiency      3.711
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      193.0, efficiency     14.844
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      168.8, efficiency     18.761
  ! Inline function call at CoreBuilder.mnd:109:21               size    +9, benefit       48.2, efficiency      5.360
  ! Inline function call at CoreBuilder.mnd:115:21               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:119:17               size    +9, benefit       42.2, efficiency      4.690
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit       21.1, efficiency      2.345
  ! Inline function call at CoreBuilder.mnd:126:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:128:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:133:21               size    +9, benefit        6.0, efficiency      0.670
  ! Inline function call at CoreBuilder.mnd:136:21               size    +9, benefit        5.3, efficiency      0.586
  ! Inline function call at CoreBuilder.mnd:142:9                size   +33, benefit      771.9, efficiency     23.390
  ! Inline function call at CoreBuilder.mnd:251:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:252:16               size   +26, benefit       38.0, efficiency      1.462
  ! Inline function call at CoreBuilder.mnd:260:5                size   +19, benefit      280.3, efficiency     14.750
  ! Inline function call at CoreBuilder.mnd:261:20               size   +26, benefit      280.3, efficiency     10.779
  ! Inline function call at CoreBuilder.mnd:269:5                size   +23, benefit      114.0, efficiency      4.957
  ! Inline function call at CoreBuilder.mnd:274:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:275:5                size   +64, benefit       16.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:332:5                size   +64, benefit       24.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:227:12               size   +29, benefit     2887.5, efficiency     99.569
  ! Inline function call at CoreBuilder.mnd:228:9                size  +196, benefit     2887.5, efficiency     14.732
  ! Inline function call at CoreBuilder.mnd:233:16               size   +29, benefit     1443.8, efficiency     49.784
  ! Inline function call at CoreBuilder.mnd:234:13               size  +196, benefit     1443.8, efficiency      7.366
  ! Inline function call at CoreBuilder.mnd:242:5                size   +64, benefit      268.0, efficiency      4.188
  ! Inline function call at Actions.mnd:134:5                    size    +2, benefit       67.8, efficiency     33.920
  ! Inline function call at Actions.mnd:135:5                    size   +42, benefit       67.8, efficiency      1.615
  ! Inline function call at Actions.mnd:139:5                    size    +2, benefit     2103.1, efficiency   1051.529
  ! Inline function call at Actions.mnd:140:5                    size   +42, benefit     2103.1, efficiency     50.073
  ! Inline function call at Actions.mnd:144:5                    size    +1, benefit     3859.4, efficiency   3859.375
  ! Inline function call at Actions.mnd:145:5                    size    +2, benefit     4341.8, efficiency   2170.898
  ! Inline function call at Actions.mnd:146:5                    size    +6, benefit     3859.4, efficiency    643.229
  ! Inline function call at Actions.mnd:147:5                    size    +4, benefit     2894.5, efficiency    723.633
  ! Inline function call at Actions.mnd:157:5                    size   +26, benefit     3859.4, efficiency    148.438
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1194.0, efficiency    596.997
  ! Inline function call at Actions.mnd:166:9                    size   +42, benefit      597.0, efficiency     14.214
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6705.7, efficiency   6705.664
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2460.4, efficiency   2460.352
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1076.4, efficiency   1076.404
  ! Inline function call at Actions.mnd:105:5                    size    +6, benefit     2460.4, efficiency    410.059
  ! Inline function call at Actions.mnd:106:37                   size    +4, benefit      922.6, efficiency    230.658
  ! Inline function call at Actions.mnd:119:16                   size   +29, benefit    23065.8, efficiency    795.372
  ! Inline function call at Actions.mnd:129:5                    size   +26, benefit     2460.4, efficiency     94.629

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-102 instructions):
 
    44 setaddr :buildBlockFromCfg.1*retaddr *label58 (h:*label58)
    45 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label58) (h:*label58)
    46 label *label58
-    * set *tmp126 :buildBlockFromCfg.1*retval
    47 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    48 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
    49 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
    50 label *label59
-    * set *tmp127 :buildBlockFromCfg.1*retval
    51 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    52 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
    53 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
    54 label *label60
-    * set *tmp128 :buildBlockFromCfg.1*retval
    55 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    56 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
    57 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
    58 label *label61
-    * set *tmp129 :buildBlockFromCfg.1*retval
    59 set .powerTarget 400
    60 jump *label62 equal .scrap false
    61 set :buildBlockFromCfg.1:cfg "AXPRJe-pulverizer27"
    62 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
    63 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
    64 label *label64
-    * set *tmp131 :buildBlockFromCfg.1*retval
    65 set *tmp132 AXPRJe-pulverizer27
    66 set .sandContainer *tmp132
    67 set :buildBlockFromCfg.1:cfg "A~PPJf-overflow-gate28"
    68 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
    69 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
    70 label *label65
-    * set *tmp133 :buildBlockFromCfg.1*retval
    71 set :buildBlockFromCfg.1:cfg "APTJg-power-node29"
    72 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
    73 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
    74 label *label66
    75 set *tmp134 :buildBlockFromCfg.1*retval
-    * set *tmp130 *tmp134
    76 jump *label63 always
    77 label *label62
-    * set *tmp130 null
    78 label *label63
    79 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
    80 setaddr :buildBlockFromCfg.1*retaddr *label67 (h:*label67)
    81 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label67) (h:*label67)
    82 label *label67
-    * set *tmp135 :buildBlockFromCfg.1*retval
    83 set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"
    84 setaddr :buildBlockFromCfg.1*retaddr *label68 (h:*label68)
    85 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label68) (h:*label68)
    86 label *label68
-    * set *tmp136 :buildBlockFromCfg.1*retval
    87 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    88 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    89 setaddr :meetTarget.1*retaddr *label70 (h:*label70)
 
   115 setaddr :error*retaddr *label74 (h:*label74)
   116 call *label15 *invalid :error*retval (m:*label74) (h:*label74)
   117 label *label74
-    * set *tmp151 null
   118 jump *label73 always
   119 label *label72
-    * set *tmp151 null
   120 label *label73
   121 write @pneumatic-drill processor2 ".nextBlock"
   122 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
 
   140 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   141 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   142 label *label78
-    * set *tmp157 :buildBlockFromCfg.1*retval
   143 set :buildBlockFromCfg.1:cfg "A©RPJh-unloader30"
   144 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   145 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   146 label *label79
-    * set *tmp158 :buildBlockFromCfg.1*retval
   147 set *tmp159 A¨SSJi-container31
   148 set .sandContainer *tmp159
   149 set :buildBlockFromCfg.1:cfg "AXTPJj-pulverizer32"
   150 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   151 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   152 label *label80
-    * set *tmp160 :buildBlockFromCfg.1*retval
   153 set :buildBlockFromCfg.1:cfg "A~RNJj-overflow-gate32"
   154 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   155 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   156 label *label81
-    * set *tmp161 :buildBlockFromCfg.1*retval
   157 set :buildBlockFromCfg.1:cfg "A~RLJj-overflow-gate32"
   158 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   159 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   160 label *label82
   161 set *tmp162 :buildBlockFromCfg.1*retval
-    * set *tmp156 *tmp162
   162 jump *label77 always
   163 label *label76
-    * set *tmp156 null
   164 label *label77
   165 write .sandContainer processor7 ".sandContainer"
   166 set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"
   167 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   168 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   169 label *label83
-    * set *tmp163 :buildBlockFromCfg.1*retval
   170 set :buildBlockFromCfg.1:cfg "A{HNJQ-inverted-sorter7"
   171 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   172 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   173 label *label84
-    * set *tmp164 :buildBlockFromCfg.1*retval
   174 set :buildBlockFromCfg.1:cfg "AJPJR-underflow-gate8"
   175 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   176 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   177 label *label85
-    * set *tmp165 :buildBlockFromCfg.1*retval
   178 set .graphiteSurplus 80
   179 set :buildBlockFromCfg:cfg "AÕFFJS-micro-processor9"
   180 set :buildBlockFromCfg:config processor10
 
   236 setaddr :buildBlockFromCfg.1*retaddr *label100 (h:*label100)
   237 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label100) (h:*label100)
   238 label *label100
-    * set *tmp169 :buildBlockFromCfg.1*retval
   239 set :buildBlockFromCfg.1:cfg "A©FJJU-unloader11"
   240 setaddr :buildBlockFromCfg.1*retaddr *label101 (h:*label101)
   241 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label101) (h:*label101)
   242 label *label101
-    * set *tmp170 :buildBlockFromCfg.1*retval
   243 set :buildBlockFromCfg.1:cfg "A~DJJV-overflow-gate12"
   244 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
   245 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label102) (h:*label102)
   246 label *label102
-    * set *tmp171 :buildBlockFromCfg.1*retval
   247 set :buildBlockFromCfg.1:cfg "A¾BFLW-air-factory13"
   248 setaddr :buildBlockFromCfg.1*retaddr *label103 (h:*label103)
   249 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   250 label *label103
-    * set *tmp172 :buildBlockFromCfg.1*retval
   251 set :setFlareTarget:target 1
   252 write :setFlareTarget:target .controller ".flareTarget"
   253 label *label104
 
   270 op lessThan *tmp174 *tmp173 300
   271 jump *label111 equal *tmp174 false
   272 jump *label109 always
-    * set *tmp175 null
   273 jump *label112 always
   274 label *label111
-    * set *tmp175 null
   275 label *label112
   276 label *label108
   277 read *tmp81 .controller ".monos"
 
   283 setaddr :buildBlockFromCfg.1*retaddr *label113 (h:*label113)
   284 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label113) (h:*label113)
   285 label *label113
-    * set *tmp177 :buildBlockFromCfg.1*retval
   286 set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"
   287 setaddr :buildBlockFromCfg.1*retaddr *label114 (h:*label114)
   288 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label114) (h:*label114)
   289 label *label114
-    * set *tmp178 :buildBlockFromCfg.1*retval
   290 set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"
   291 setaddr :buildBlockFromCfg.1*retaddr *label115 (h:*label115)
   292 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label115) (h:*label115)
   293 label *label115
-    * set *tmp179 :buildBlockFromCfg.1*retval
   294 set :buildBlockFromCfg.1:cfg "A¡AOJ[-water-extractor17"
   295 setaddr :buildBlockFromCfg.1*retaddr *label116 (h:*label116)
   296 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label116) (h:*label116)
   297 label *label116
-    * set *tmp180 :buildBlockFromCfg.1*retval
   298 set :buildBlockFromCfg.1:cfg "AAKJ\-steam-generator18"
   299 setaddr :buildBlockFromCfg.1*retaddr *label117 (h:*label117)
   300 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label117) (h:*label117)
   301 label *label117
-    * set *tmp181 :buildBlockFromCfg.1*retval
   302 set :buildBlockFromCfg.1:cfg "AKFRJ_-multi-press21"
   303 setaddr :buildBlockFromCfg.1*retaddr *label118 (h:*label118)
   304 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label118) (h:*label118)
   305 label *label118
-    * set *tmp182 :buildBlockFromCfg.1*retval
   306 set .graphiteSurplus 200
   307 set :buildBlockFromCfg.1:cfg "ALQIJ^-silicon-smelter20"
   308 setaddr :buildBlockFromCfg.1*retaddr *label119 (h:*label119)
   309 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label119) (h:*label119)
   310 label *label119
-    * set *tmp183 :buildBlockFromCfg.1*retval
   311 jump *label120 equal .scrap false
   312 set :buildBlockFromCfg.1:cfg "AXTNJj-pulverizer32"
   313 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   314 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
   315 label *label122
   316 set *tmp185 :buildBlockFromCfg.1*retval
-    * set *tmp184 *tmp185
   317 jump *label121 always
   318 label *label120
-    * set *tmp184 null
   319 label *label121
   320 set :buildBlockFromCfg.1:cfg "A©HFJa-unloader23"
   321 setaddr :buildBlockFromCfg.1*retaddr *label123 (h:*label123)
   322 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label123) (h:*label123)
   323 label *label123
-    * set *tmp186 :buildBlockFromCfg.1*retval
   324 set :buildBlockFromCfg.1:cfg "A{HDJb-inverted-sorter24"
   325 setaddr :buildBlockFromCfg.1*retaddr *label124 (h:*label124)
   326 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label124) (h:*label124)
   327 label *label124
-    * set *tmp187 :buildBlockFromCfg.1*retval
   328 set :buildBlockFromCfg.1:cfg "AÀF@Lc-additive-reconstructor25"
   329 setaddr :buildBlockFromCfg.1*retaddr *label125 (h:*label125)
   330 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label125) (h:*label125)
   331 label *label125
-    * set *tmp188 :buildBlockFromCfg.1*retval
   332 set .siliconSurplus 1000
   333 set .siliconMonoSurplus 20
   334 set .metaglassSurplus 100
 
   419 setaddr :error*retaddr *label146 (h:*label146)
   420 call *label15 *invalid :error*retval (m:*label146) (h:*label146)
   421 label *label146
-    * set *tmp213 null
   422 jump *label145 always
   423 label *label144
-    * set *tmp213 null
   424 label *label145
   425 write @laser-drill processor5 ":buildBlockAt:block"
   426 read *tmp52 processor3 ".drillX"
 
   446 setaddr :buildRemoteBlock*retaddr *label148 (h:*label148)
   447 call *label43 *invalid :buildRemoteBlock*retval (m:*label148) (h:*label148)
   448 label *label148
-    * set *tmp222 :buildRemoteBlock*retval
   449 set :buildRemoteBlock:cfg "A¡AOJ[-water-extractor17"
   450 read *tmp58 processor3 ".water2X"
   451 set :buildRemoteBlock:x *tmp58
 
   454 setaddr :buildRemoteBlock*retaddr *label149 (h:*label149)
   455 call *label43 *invalid :buildRemoteBlock*retval (m:*label149) (h:*label149)
   456 label *label149
-    * set *tmp223 :buildRemoteBlock*retval
   457 set :buildRemoteBlock:cfg "AAKJ\-steam-generator18"
   458 read *tmp60 processor3 ".generatorX"
   459 set :buildRemoteBlock:x *tmp60
 
   472 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   473 call *label43 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   474 label *label151
-    * set *tmp225 :buildRemoteBlock*retval
   475 set :buildRemoteBlock:cfg "AFHJT-power-node10"
   476 read *tmp64 processor3 ".node2X"
   477 set :buildRemoteBlock:x *tmp64
 
   480 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
   481 call *label43 *invalid :buildRemoteBlock*retval (m:*label152) (h:*label152)
   482 label *label152
-    * set *tmp226 :buildRemoteBlock*retval
   483 set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"
   484 read *tmp66 processor3 ".panelX"
   485 set :buildRemoteBlock:x *tmp66
 
   488 setaddr :buildRemoteBlock*retaddr *label153 (h:*label153)
   489 call *label43 *invalid :buildRemoteBlock*retval (m:*label153) (h:*label153)
   490 label *label153
-    * set *tmp227 :buildRemoteBlock*retval
   491 set :buildRemoteBlock:cfg "AJTJK-battery1"
   492 read *tmp68 processor3 ".batteryX"
   493 set :buildRemoteBlock:x *tmp68
 
   511 op equal *tmp230 .thoriumContainer null
   512 jump *label156 equal *tmp230 false
   513 set .thoriumContainer .thoriumDrill
-    * set *tmp231 .thoriumContainer
   514 jump *label157 always
   515 label *label156
-    * set *tmp231 null
   516 label *label157
   517 write .thoriumDrill processor2 ".thoriumDrill"
   518 write .thoriumContainer processor2 ".thoriumContainer"
 
   545 setaddr :buildBlockFromCfg.1*retaddr *label164 (h:*label164)
   546 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label164) (h:*label164)
   547 label *label164
-    * set *tmp235 :buildBlockFromCfg.1*retval
   548 set .metaglassSurplus 10
   549 set :setPolyTarget.1:target 0
   550 write :setPolyTarget.1:target .controller ".polyTarget"
 
   602 setaddr :supplyBase2*retaddr *label177 (h:*label177)
   603 call *label38 *invalid :supplyBase2*retval (m:*label177) (h:*label177)
   604 label *label177
-    * set *tmp251 null
   605 jump *label176 always
   606 label *label175
   607 read *tmp81 .controller ".monos"
 
   618 label *label181
   619 set *tmp253 null
   620 label *label179
-    * set *tmp251 *tmp253
   621 label *label176
   622 label *label174
   623 return :supplyBase*retaddr
 
   658 label *label186
   659 set :buildRemoteBlock*retval :buildBlock*retval
   660 jump *label182 always
-    * set *tmp256 null
   661 jump *label184 always
   662 label *label183
-    * set *tmp256 null
   663 label *label184
   664 set :buildRemoteBlock*retval false
   665 jump *label182 always
 
   819 sensor *tmp284 :unpackCfg:type @thorium
   820 set :unpackCfg:th *tmp284
   821 sensor *tmp285 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp285
   822 label *label197
   823 return :unpackCfg*retaddr
   824 end
 
   847 label *label203
   848 set *tmp293 null
   849 label *label204
-    * set *tmp290 *tmp293
   850 jump *label202 always
   851 label *label201
-    * set *tmp290 null
   852 label *label202
   853 sensor *tmp294 .core @silicon
   854 op lessThan *tmp295 *tmp294 silicon
 
   905 label *label214
   906 set *tmp299 *tmp302
   907 label *label210
-    * set *tmp296 *tmp299
   908 jump *label208 always
   909 label *label207
-    * set *tmp296 null
   910 label *label208
   911 sensor *tmp304 AJTJK-battery1 @totalPower
   912 op lessThan *tmp305 *tmp304 .powerTarget
 
   934 label *label221
   935 set *tmp306 null
   936 label *label222
-    * set *tmp287 *tmp306
   937 jump *label200 always
   938 label *label199
-    * set *tmp287 null
   939 label *label200
   940 sensor *tmp310 .core @titanium
   941 op lessThan *tmp311 *tmp310 titanium
 
  1128 label *label231
  1129 set *tmp320 null
  1130 label *label232
-    * set *tmp318 *tmp320
  1131 jump *label230 always
  1132 label *label229
  1133 set :status1:text "Goal 11: Fetching titanium"
 
  1139 setaddr :fetchBlock*retaddr *label274 (h:*label274)
  1140 call *label26 *invalid :fetchBlock*retval (m:*label274) (h:*label274)
  1141 label *label274
-    * set *tmp318 null
  1142 label *label230
  1143 label *label198
  1144 return :supplyBase0*retaddr
 
  1189 label *label282
  1190 set *tmp360 null
  1191 label *label283
-    * set *tmp357 *tmp360
  1192 jump *label281 always
  1193 label *label280
-    * set *tmp357 null
  1194 label *label281
  1195 set :fetchBlock:block .thoriumContainer
  1196 set :fetchBlock:item @thorium
 
  1203 set :setPolyTarget.2:target 4
  1204 write :setPolyTarget.2:target .controller ".polyTarget"
  1205 label *label291
-    * set *tmp366 null
  1206 jump *label290 always
  1207 label *label289
-    * set *tmp366 null
  1208 label *label290
  1209 label *label278
  1210 return :supplyBase2*retaddr
 
  1313 label *label312
  1314 jump *label311 always
  1315 label *label313
-    * set *tmp382 null
  1316 jump *label309 always
  1317 label *label308
-    * set *tmp382 null
  1318 label *label309
  1319 label *label292
  1320 return :meetTarget*retaddr
 
  1429 op land *tmp405 *tmp403 *tmp404
  1430 jump *label334 equal *tmp405 false
  1431 ucontrol itemDrop @air 1000
-    * set *tmp406 null
  1432 jump *label335 always
  1433 label *label334
-    * set *tmp406 null
  1434 label *label335
  1435 label *label332
  1436 sensor *tmp407 @unit :fetchBlock:item
 
  1467 setaddr :mineOre*retaddr *label341 (h:*label341)
  1468 call *label23 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1469 label *label341
-    * set *tmp415 null
  1470 jump *label340 always
  1471 label *label339
-    * set *tmp415 null
  1472 label *label340
  1473 label *label337
  1474 return :supplyBlock*retaddr
 
  1505 op land *tmp421 *tmp419 *tmp420
  1506 jump *label350 equal *tmp421 false
  1507 ucontrol itemDrop @air 1000
-    * set *tmp422 null
  1508 jump *label351 always
  1509 label *label350
-    * set *tmp422 null
  1510 label *label351
  1511 label *label348
  1512 sensor *tmp423 @unit :supplyBlockFromCore:item
 
  1529 jump *label354 equal *tmp428 false
  1530 set :targetMet*retval false
  1531 jump *label353 always
-    * set *tmp429 null
  1532 jump *label355 always
  1533 label *label354
-    * set *tmp429 null
  1534 label *label355
  1535 sensor *tmp430 .core @lead
  1536 op lessThan *tmp431 *tmp430 lead
  1537 jump *label356 equal *tmp431 false
  1538 set :targetMet*retval false
  1539 jump *label353 always
-    * set *tmp432 null
  1540 jump *label357 always
  1541 label *label356
-    * set *tmp432 null
  1542 label *label357
  1543 sensor *tmp433 .core @graphite
  1544 op lessThan *tmp434 *tmp433 graphite
  1545 jump *label358 equal *tmp434 false
  1546 set :targetMet*retval false
  1547 jump *label353 always
-    * set *tmp435 null
  1548 jump *label359 always
  1549 label *label358
-    * set *tmp435 null
  1550 label *label359
  1551 sensor *tmp436 .core @silicon
  1552 op lessThan *tmp437 *tmp436 silicon
  1553 jump *label360 equal *tmp437 false
  1554 set :targetMet*retval false
  1555 jump *label353 always
-    * set *tmp438 null
  1556 jump *label361 always
  1557 label *label360
-    * set *tmp438 null
  1558 label *label361
  1559 sensor *tmp439 .core @titanium
  1560 op lessThan *tmp440 *tmp439 titanium
  1561 jump *label362 equal *tmp440 false
  1562 set :targetMet*retval false
  1563 jump *label353 always
-    * set *tmp441 null
  1564 jump *label363 always
  1565 label *label362
-    * set *tmp441 null
  1566 label *label363
  1567 sensor *tmp442 .core @metaglass
  1568 op lessThan *tmp443 *tmp442 metaglass
  1569 jump *label364 equal *tmp443 false
  1570 set :targetMet*retval false
  1571 jump *label353 always
-    * set *tmp444 null
  1572 jump *label365 always
  1573 label *label364
-    * set *tmp444 null
  1574 label *label365
  1575 sensor *tmp445 .core @thorium
  1576 op lessThan *tmp446 *tmp445 thorium
  1577 jump *label366 equal *tmp446 false
  1578 set :targetMet*retval false
  1579 jump *label353 always
-    * set *tmp447 null
  1580 jump *label367 always
  1581 label *label366
-    * set *tmp447 null
  1582 label *label367
  1583 set :targetMet*retval true
  1584 jump *label353 always
 
  1609 op notEqual *tmp449 *tmp448 null
  1610 jump *label375 equal *tmp449 false
  1611 ucontrol itemDrop @air 1000
-    * set *tmp450 null
  1612 jump *label376 always
  1613 label *label375
-    * set *tmp450 null
  1614 label *label376
  1615 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1616 label *label373
 
  1657 op greaterThan *tmp462 *tmp460 *tmp461
  1658 jump *label386 notEqual *tmp462 false
  1659 label *label388
-    * set *tmp457 null
  1660 jump *label384 always
  1661 label *label383
  1662 label *label389
 
  1667 label *label390
  1668 jump *label389 always
  1669 label *label391
-    * set *tmp457 null
  1670 label *label384
  1671 set :transportStatus:target 0
  1672 set :transportStatus:item null
 
  1701 setaddr :dropAll*retaddr *label399 (h:*label399)
  1702 call *label19 *invalid :dropAll*retval (m:*label399) (h:*label399)
  1703 label *label399
-    * set *tmp468 null
  1704 jump *label398 always
  1705 label *label397
-    * set *tmp468 null
  1706 label *label398
  1707 set :status3:text "Mining..."
  1708 setaddr :status3*retaddr *label400 (h:*label400)
 
  1718 op land *tmp473 *tmp471 *tmp472
  1719 jump *label404 equal *tmp473 false
  1720 jump *label403 always
-    * set *tmp474 null
  1721 jump *label405 always
  1722 label *label404
-    * set *tmp474 null
  1723 label *label405
  1724 ucontrol mine :mineOre:x :mineOre:y
  1725 op greaterThan *tmp475 @second :mineOre:stop
  1726 jump *label406 equal *tmp475 false
  1727 jump *label403 always
-    * set *tmp476 null
  1728 jump *label407 always
  1729 label *label406
-    * set *tmp476 null
  1730 label *label407
  1731 op equal *tmp477 .noTarget false
  1732 jump *label408 equal *tmp477 false
 
  1740 label *label411
  1741 set *tmp479 null
  1742 label *label412
-    * set *tmp478 *tmp479
  1743 jump *label409 always
  1744 label *label408
-    * set *tmp478 null
  1745 label *label409
  1746 label *label402
  1747 sensor *tmp480 @unit @totalItems
 
  1782 setaddr :error*retaddr *label420 (h:*label420)
  1783 call *label15 *invalid :error*retval (m:*label420) (h:*label420)
  1784 label *label420
-    * set *tmp487 null
  1785 jump *label419 always
  1786 label *label418
-    * set *tmp487 null
  1787 label *label419
  1788 label *label417
  1789 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-18 instructions):
 
    72 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
    73 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
    74 label *label66
-    * set *tmp134 :buildBlockFromCfg.1*retval
    75 jump *label63 always
    76 label *label62
    77 label *label63
 
   157 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   158 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   159 label *label82
-    * set *tmp162 :buildBlockFromCfg.1*retval
   160 jump *label77 always
   161 label *label76
   162 label *label77
 
   311 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   312 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
   313 label *label122
-    * set *tmp185 :buildBlockFromCfg.1*retval
   314 jump *label121 always
   315 label *label120
   316 label *label121
 
   607 setaddr :supplyBase1*retaddr *label180 (h:*label180)
   608 call *label37 *invalid :supplyBase1*retval (m:*label180) (h:*label180)
   609 label *label180
-    * set *tmp253 null
   610 jump *label179 always
   611 label *label178
   612 setaddr :supplyBase0*retaddr *label181 (h:*label181)
   613 call *label36 *invalid :supplyBase0*retval (m:*label181) (h:*label181)
   614 label *label181
-    * set *tmp253 null
   615 label *label179
   616 label *label176
   617 label *label174
 
   813 set :unpackCfg:mg *tmp283
   814 sensor *tmp284 :unpackCfg:type @thorium
   815 set :unpackCfg:th *tmp284
-    * sensor *tmp285 :unpackCfg:type @size
   816 label *label197
   817 return :unpackCfg*retaddr
   818 end
 
   836 call *label27 *invalid :supplyBlock*retval (m:*label206) (h:*label206)
   837 label *label206
   838 set :supplyBase0:supplied true
-    * set *tmp293 :supplyBase0:supplied
   839 jump *label204 always
   840 label *label203
-    * set *tmp293 null
   841 label *label204
   842 jump *label202 always
   843 label *label201
 
   858 call *label27 *invalid :supplyBlock*retval (m:*label212) (h:*label212)
   859 label *label212
   860 set :supplyBase0:supplied true
-    * set *tmp299 :supplyBase0:supplied
   861 jump *label210 always
   862 label *label209
   863 sensor *tmp300 ALMQJN-silicon-smelter4 @sand
 
   894 label *label213
   895 set *tmp302 null
   896 label *label214
-    * set *tmp299 *tmp302
   897 label *label210
   898 jump *label208 always
   899 label *label207
 
   919 label *label223
   920 set *tmp309 null
   921 label *label224
-    * set *tmp306 *tmp309
   922 jump *label222 always
   923 label *label221
-    * set *tmp306 null
   924 label *label222
   925 jump *label200 always
   926 label *label199
 
  1111 label *label238
  1112 set *tmp324 *tmp327
  1113 label *label234
-    * set *tmp320 *tmp324
  1114 jump *label232 always
  1115 label *label231
-    * set *tmp320 null
  1116 label *label232
  1117 jump *label230 always
  1118 label *label229
 
  1170 label *label287
  1171 set *tmp363 null
  1172 label *label285
-    * set *tmp360 *tmp363
  1173 jump *label283 always
  1174 label *label282
-    * set *tmp360 null
  1175 label *label283
  1176 jump *label281 always
  1177 label *label280
 
  1719 label *label410
  1720 jump *label411 equal :targetMet*retval false
  1721 jump *label403 always
-    * set *tmp479 null
  1722 jump *label412 always
  1723 label *label411
-    * set *tmp479 null
  1724 label *label412
  1725 jump *label409 always
  1726 label *label408

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-9 instructions):
 
   714 setaddr :buildBlockFromCfg*retaddr *label191 (h:*label191)
   715 call *label44 *invalid :buildBlockFromCfg*retval (m:*label191) (h:*label191)
   716 label *label191
-    * set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
   717 label *label190
   718 return :buildBlockFromCfg.1*retaddr
   719 end
 
   888 set :supplyBase0:supplied true
   889 set *tmp303 :supplyBase0:supplied
   890 label *label216
-    * set *tmp302 *tmp303
   891 jump *label214 always
   892 label *label213
-    * set *tmp302 null
   893 label *label214
   894 label *label210
   895 jump *label208 always
 
   911 call *label27 *invalid :supplyBlock*retval (m:*label226) (h:*label226)
   912 label *label226
   913 set :supplyBase0:supplied true
-    * set *tmp309 :supplyBase0:supplied
   914 jump *label224 always
   915 label *label223
-    * set *tmp309 null
   916 label *label224
   917 jump *label222 always
   918 label *label221
 
   949 setaddr :mineOre.2*retaddr *label236 (h:*label236)
   950 call *label25 *invalid :mineOre.2*retval (m:*label236) (h:*label236)
   951 label *label236
-    * set *tmp324 null
   952 jump *label234 always
   953 label *label233
   954 sensor *tmp325 .core @silicon
 
  1103 label *label252
  1104 set *tmp327 *tmp341
  1105 label *label238
-    * set *tmp324 *tmp327
  1106 label *label234
  1107 jump *label232 always
  1108 label *label231
 
  1153 setaddr :supplyBlock*retaddr *label286 (h:*label286)
  1154 call *label27 *invalid :supplyBlock*retval (m:*label286) (h:*label286)
  1155 label *label286
-    * set *tmp363 null
  1156 jump *label285 always
  1157 label *label284
  1158 set :supplyBlockFromCore:target .thoriumGenerator
 
  1160 setaddr :supplyBlockFromCore*retaddr *label287 (h:*label287)
  1161 call *label28 *invalid :supplyBlockFromCore*retval (m:*label287) (h:*label287)
  1162 label *label287
-    * set *tmp363 null
  1163 label *label285
  1164 jump *label283 always
  1165 label *label282

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   873 call *label27 *invalid :supplyBlock*retval (m:*label218) (h:*label218)
   874 label *label218
   875 set :supplyBase0:supplied true
-    * set *tmp303 :supplyBase0:supplied
   876 jump *label216 always
   877 label *label215
   878 set :status1:text "Goal 3: sand for silicon requirement"
 
   885 call *label27 *invalid :supplyBlock*retval (m:*label220) (h:*label220)
   886 label *label220
   887 set :supplyBase0:supplied true
-    * set *tmp303 :supplyBase0:supplied
   888 label *label216
   889 jump *label214 always
   890 label *label213
 
  1007 label *label250
  1008 set *tmp328 null
  1009 label *label240
-    * set *tmp327 *tmp328
  1010 jump *label238 always
  1011 label *label237
  1012 sensor *tmp339 .core @copper
 
  1098 label *label256
  1099 set *tmp341 *tmp344
  1100 label *label252
-    * set *tmp327 *tmp341
  1101 label *label238
  1102 label *label234
  1103 jump *label232 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
   982 setaddr :mineOre.1*retaddr *label246 (h:*label246)
   983 call *label24 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
   984 label *label246
-    * set *tmp328 null
   985 jump *label240 always
   986 label *label239
   987 set :status1:text "Goal 6: silicon requirement"
 
  1004 setaddr :mineOre.2*retaddr *label250 (h:*label250)
  1005 call *label25 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
  1006 label *label250
-    * set *tmp328 null
  1007 label *label240
  1008 jump *label238 always
  1009 label *label237
 
  1018 setaddr :mineOre.2*retaddr *label254 (h:*label254)
  1019 call *label25 *invalid :mineOre.2*retval (m:*label254) (h:*label254)
  1020 label *label254
-    * set *tmp341 null
  1021 jump *label252 always
  1022 label *label251
  1023 sensor *tmp342 .core @lead
 
  1093 label *label260
  1094 set *tmp344 *tmp347
  1095 label *label256
-    * set *tmp341 *tmp344
  1096 label *label252
  1097 label *label238
  1098 label *label234

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1031 setaddr :mineOre.2*retaddr *label258 (h:*label258)
  1032 call *label25 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
  1033 label *label258
-    * set *tmp344 null
  1034 jump *label256 always
  1035 label *label255
  1036 sensor *tmp345 .core @metaglass
 
  1090 label *label268
  1091 set *tmp347 *tmp349
  1092 label *label260
-    * set *tmp344 *tmp347
  1093 label *label256
  1094 label *label252
  1095 label *label238

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1055 label *label265
  1056 set *tmp348 null
  1057 label *label263
-    * set *tmp347 *tmp348
  1058 jump *label260 always
  1059 label *label259
  1060 set :status1:text "Goal 10: supplying base"
 
  1087 label *label272
  1088 set *tmp349 null
  1089 label *label268
-    * set *tmp347 *tmp349
  1090 label *label260
  1091 label *label256
  1092 label *label252

Modifications by Initial phase, Dead Code Elimination, iteration 8 (-4 instructions):
 
  1046 setaddr :mineOre.1*retaddr *label264 (h:*label264)
  1047 call *label24 *invalid :mineOre.1*retval (m:*label264) (h:*label264)
  1048 label *label264
-    * set *tmp348 null
  1049 jump *label263 always
  1050 label *label262
  1051 set :mineOre.2:ore @sand
  1052 setaddr :mineOre.2*retaddr *label265 (h:*label265)
  1053 call *label25 *invalid :mineOre.2*retval (m:*label265) (h:*label265)
  1054 label *label265
-    * set *tmp348 null
  1055 label *label263
  1056 jump *label260 always
  1057 label *label259
 
  1065 setaddr :mineOre.1*retaddr *label269 (h:*label269)
  1066 call *label24 *invalid :mineOre.1*retval (m:*label269) (h:*label269)
  1067 label *label269
-    * set *tmp349 null
  1068 jump *label268 always
  1069 label *label267
  1070 sensor *tmp350 .core @coal
 
  1082 setaddr :mineOre.2*retaddr *label272 (h:*label272)
  1083 call *label25 *invalid :mineOre.2*retval (m:*label272) (h:*label272)
  1084 label *label272
-    * set *tmp349 null
  1085 label *label268
  1086 label *label260
  1087 label *label256

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-68 instructions):
 
    26 write 511 bank1 511
    27 label *label55
    28 ubind @poly
-    * set *tmp117 @unit
-    * set .builder *tmp117
-    * ulocate building core false @copper .coreX .coreY *tmp119 *tmp118
-    * set .core *tmp118
+   29 set .builder @unit
+   30 ulocate building core false @copper .coreX .coreY *tmp119 .core
    31 label *label56
    32 op equal *tmp120 .core null
    33 jump *label55 notEqual *tmp120 false
    34 label *label57
    35 ulocate ore core true @sand *tmp122 *tmp123 *tmp121 *tmp124
-    * op equal *tmp125 *tmp121 false
-    * set .scrap *tmp125
+   36 op equal .scrap *tmp121 false
    37 set .scrap true
    38 write .scrap processor2 ".scrap"
    39 write .scrap processor7 ".scrap"
 
    59 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
    60 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
    61 label *label64
-    * set *tmp132 AXPRJe-pulverizer27
-    * set .sandContainer *tmp132
+   62 set .sandContainer AXPRJe-pulverizer27
    63 set :buildBlockFromCfg.1:cfg "A~PPJf-overflow-gate28"
    64 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
    65 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
 
    98 wait 1e-15
    99 read *tmp148 processor3 ":findDrillLocation*finished"
   100 jump *label71 equal *tmp148 false
-    * read *tmp145 processor3 ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp145
-    * read *tmp146 processor3 ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp146
-    * read *tmp149 processor3 ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp149
+  101 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
+  102 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
+  103 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
   104 op equal *tmp150 :buildFirstTitaniumDrill:result false
   105 jump *label72 equal *tmp150 false
   106 set :error:error "Cannot locate spot for titanium drill"
 
   119 wait 1e-15
   120 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
   121 jump *label75 equal *tmp154 false
-    * read *tmp155 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp137 *tmp155
+  122 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
   123 jump *label69 always
   124 set *tmp137 null
   125 label *label69
 
   135 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   136 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   137 label *label79
-    * set *tmp159 A¨SSJi-container31
-    * set .sandContainer *tmp159
+  138 set .sandContainer A¨SSJi-container31
   139 set :buildBlockFromCfg.1:cfg "AXTPJj-pulverizer32"
   140 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   141 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
 
   170 setaddr :buildBlockFromCfg*retaddr *label86 (h:*label86)
   171 call *label44 *invalid :buildBlockFromCfg*retval (m:*label86) (h:*label86)
   172 label *label86
-    * set *tmp166 :buildBlockFromCfg*retval
-    * set .controller *tmp166
+  173 set .controller :buildBlockFromCfg*retval
   174 write processor1 .controller ".timer"
   175 write processor2 .controller ".display"
   176 write .core .controller ".core"
 
   353 label *label136
   354 write @ore-titanium processor2 ".nextBlock"
   355 ubind @flare
-    * read *tmp50 processor3 ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp50
+  356 read :blocksBuildTitaniumDrills:current processor3 ".locations"
   357 write .coreX processor3 ":findDrillLocation:x"
   358 write .coreY processor3 ":findDrillLocation:y"
   359 write @unit processor3 ":findDrillLocation:unit"
 
   397 wait 1e-15
   398 read *tmp210 processor3 ":layoutThoriumDrill*finished"
   399 jump *label143 equal *tmp210 false
-    * read *tmp211 processor3 ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp211
+  400 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
   401 op equal *tmp212 :buildThoriumDrill:result false
   402 jump *label144 equal *tmp212 false
   403 set :error:error "Cannot locate spot for thorium drill"
 
   421 wait 1e-15
   422 read *tmp220 processor5 ":buildBlockAt*finished"
   423 jump *label147 equal *tmp220 false
-    * read *tmp221 processor5 ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp221
+  424 read .thoriumDrill processor5 ":buildBlockAt*retval"
   425 set :buildRemoteBlock:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp54 processor3 ".water1X"
-    * set :buildRemoteBlock:x *tmp54
-    * read *tmp55 processor3 ".water1Y"
-    * set :buildRemoteBlock:y *tmp55
+  426 read :buildRemoteBlock:x processor3 ".water1X"
+  427 read :buildRemoteBlock:y processor3 ".water1Y"
   428 setaddr :buildRemoteBlock*retaddr *label148 (h:*label148)
   429 call *label43 *invalid :buildRemoteBlock*retval (m:*label148) (h:*label148)
   430 label *label148
   431 set :buildRemoteBlock:cfg "A¡AOJ[-water-extractor17"
-    * read *tmp58 processor3 ".water2X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 processor3 ".water2Y"
-    * set :buildRemoteBlock:y *tmp59
+  432 read :buildRemoteBlock:x processor3 ".water2X"
+  433 read :buildRemoteBlock:y processor3 ".water2Y"
   434 setaddr :buildRemoteBlock*retaddr *label149 (h:*label149)
   435 call *label43 *invalid :buildRemoteBlock*retval (m:*label149) (h:*label149)
   436 label *label149
   437 set :buildRemoteBlock:cfg "AAKJ\-steam-generator18"
-    * read *tmp60 processor3 ".generatorX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 processor3 ".generatorY"
-    * set :buildRemoteBlock:y *tmp61
+  438 read :buildRemoteBlock:x processor3 ".generatorX"
+  439 read :buildRemoteBlock:y processor3 ".generatorY"
   440 setaddr :buildRemoteBlock*retaddr *label150 (h:*label150)
   441 call *label43 *invalid :buildRemoteBlock*retval (m:*label150) (h:*label150)
   442 label *label150
-    * set *tmp224 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp224
+  443 set .thoriumGenerator :buildRemoteBlock*retval
   444 set :buildRemoteBlock:cfg "AFHJT-power-node10"
-    * read *tmp62 processor3 ".node1X"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 processor3 ".node1Y"
-    * set :buildRemoteBlock:y *tmp63
+  445 read :buildRemoteBlock:x processor3 ".node1X"
+  446 read :buildRemoteBlock:y processor3 ".node1Y"
   447 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   448 call *label43 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   449 label *label151
   450 set :buildRemoteBlock:cfg "AFHJT-power-node10"
-    * read *tmp64 processor3 ".node2X"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 processor3 ".node2Y"
-    * set :buildRemoteBlock:y *tmp65
+  451 read :buildRemoteBlock:x processor3 ".node2X"
+  452 read :buildRemoteBlock:y processor3 ".node2Y"
   453 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
   454 call *label43 *invalid :buildRemoteBlock*retval (m:*label152) (h:*label152)
   455 label *label152
   456 set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"
-    * read *tmp66 processor3 ".panelX"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 processor3 ".panelY"
-    * set :buildRemoteBlock:y *tmp67
+  457 read :buildRemoteBlock:x processor3 ".panelX"
+  458 read :buildRemoteBlock:y processor3 ".panelY"
   459 setaddr :buildRemoteBlock*retaddr *label153 (h:*label153)
   460 call *label43 *invalid :buildRemoteBlock*retval (m:*label153) (h:*label153)
   461 label *label153
   462 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read *tmp68 processor3 ".batteryX"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 processor3 ".batteryY"
-    * set :buildRemoteBlock:y *tmp69
+  463 read :buildRemoteBlock:x processor3 ".batteryX"
+  464 read :buildRemoteBlock:y processor3 ".batteryY"
   465 setaddr :buildRemoteBlock*retaddr *label154 (h:*label154)
   466 call *label43 *invalid :buildRemoteBlock*retval (m:*label154) (h:*label154)
   467 label *label154
-    * set *tmp228 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp228
+  468 set .thoriumBattery :buildRemoteBlock*retval
   469 set :buildRemoteBlock:cfg "A¨JJJ~-container52"
-    * read *tmp56 processor3 ".containerX"
-    * set :buildRemoteBlock:x *tmp56
-    * read *tmp57 processor3 ".containerY"
-    * set :buildRemoteBlock:y *tmp57
+  470 read :buildRemoteBlock:x processor3 ".containerX"
+  471 read :buildRemoteBlock:y processor3 ".containerY"
   472 setaddr :buildRemoteBlock*retaddr *label155 (h:*label155)
   473 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   474 label *label155
-    * set *tmp229 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp229
+  475 set .thoriumContainer :buildRemoteBlock*retval
   476 op equal *tmp230 .thoriumContainer null
   477 jump *label156 equal *tmp230 false
   478 set .thoriumContainer .thoriumDrill
 
   524 call *label47 *invalid :buildUnits*retval (m:*label168) (h:*label168)
   525 label *label168
   526 read *tmp82 .controller ".polys"
-    * op sub *tmp236 *tmp82 1
-    * set :tmp *tmp236
+  527 op sub :tmp *tmp82 1
   528 write :tmp .controller ".polyTarget"
   529 write :tmp .controller ".polys"
   530 write :tmp processor2 ".polys"
-    * sensor *tmp237 AÁNBJd-multiplicative-reconstructor26 @x
-    * set :x *tmp237
-    * sensor *tmp238 AÁNBJd-multiplicative-reconstructor26 @y
-    * set :y *tmp238
+  531 sensor :x AÁNBJd-multiplicative-reconstructor26 @x
+  532 sensor :y AÁNBJd-multiplicative-reconstructor26 @y
   533 label *label169
   534 ucontrol move :x :y
   535 ucontrol payEnter
 
   673 return :buildBlockFromCfg*retaddr
   674 end
   675 label *label45
-    * set *tmp259 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp259
+  676 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   677 set :buildBlockFromCfg:config null
   678 setaddr :buildBlockFromCfg*retaddr *label191 (h:*label191)
   679 call *label44 *invalid :buildBlockFromCfg*retval (m:*label191) (h:*label191)
 
   738 op add :unpackCfg:index :unpackCfg:index 1
   739 read *tmp261 :unpackCfg:cfg *tmp260
   740 op sub *tmp262 *tmp261 74
-    * lookup block *tmp263 *tmp262
-    * set :unpackCfg:type *tmp263
+  741 lookup block :unpackCfg:type *tmp262
   742 set *tmp264 :unpackCfg:index
   743 op add :unpackCfg:index :unpackCfg:index 1
   744 read *tmp265 :unpackCfg:cfg *tmp264
   745 op sub *tmp266 *tmp265 74
-    * op div *tmp267 *tmp266 2
-    * set :unpackCfg:x *tmp267
+  746 op div :unpackCfg:x *tmp266 2
   747 set *tmp268 :unpackCfg:index
   748 op add :unpackCfg:index :unpackCfg:index 1
   749 read *tmp269 :unpackCfg:cfg *tmp268
   750 op sub *tmp270 *tmp269 74
-    * op div *tmp271 *tmp270 2
-    * set :unpackCfg:y *tmp271
+  751 op div :unpackCfg:y *tmp270 2
   752 set *tmp272 :unpackCfg:index
   753 op add :unpackCfg:index :unpackCfg:index 1
   754 read *tmp273 :unpackCfg:cfg *tmp272
-    * op sub *tmp274 *tmp273 74
-    * set :unpackCfg:rotation *tmp274
+  755 op sub :unpackCfg:rotation *tmp273 74
   756 set *tmp275 :unpackCfg:index
   757 op add :unpackCfg:index :unpackCfg:index 1
   758 read *tmp276 :unpackCfg:cfg *tmp275
-    * op sub *tmp277 *tmp276 74
-    * set :unpackCfg:ind *tmp277
-    * sensor *tmp278 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp278
-    * sensor *tmp279 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp279
-    * sensor *tmp280 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp280
-    * sensor *tmp281 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp281
-    * sensor *tmp282 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp282
-    * sensor *tmp283 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp283
-    * sensor *tmp284 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp284
+  759 op sub :unpackCfg:ind *tmp276 74
+  760 sensor :unpackCfg:cu :unpackCfg:type @copper
+  761 sensor :unpackCfg:pb :unpackCfg:type @lead
+  762 sensor :unpackCfg:gr :unpackCfg:type @graphite
+  763 sensor :unpackCfg:si :unpackCfg:type @silicon
+  764 sensor :unpackCfg:ti :unpackCfg:type @titanium
+  765 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+  766 sensor :unpackCfg:th :unpackCfg:type @thorium
   767 label *label197
   768 return :unpackCfg*retaddr
   769 end
 
   875 jump *label227 equal *tmp311 false
   876 sensor *tmp313 .core @titanium
   877 op sub *tmp314 titanium *tmp313
-    * op min *tmp315 5 *tmp314
-    * set *tmp312 *tmp315
+  878 op min *tmp312 5 *tmp314
   879 jump *label228 always
   880 label *label227
   881 set *tmp312 100
 
   908 setaddr :status1*retaddr *label241 (h:*label241)
   909 call *label11 *invalid :status1*retval (m:*label241) (h:*label241)
   910 label *label241
-    * sensor *tmp329 .core @coal
-    * set :supplyBase0:coal *tmp329
-    * sensor *tmp330 .sandContainer @sand
-    * set :supplyBase0:sand *tmp330
+  911 sensor :supplyBase0:coal .core @coal
+  912 sensor :supplyBase0:sand .sandContainer @sand
   913 op lessThan *tmp331 :supplyBase0:coal :supplyBase0:sand
   914 jump *label242 equal *tmp331 false
   915 set *tmp332 @coal
 
   937 setaddr :status1*retaddr *label247 (h:*label247)
   938 call *label11 *invalid :status1*retval (m:*label247) (h:*label247)
   939 label *label247
-    * sensor *tmp335 .core @coal
-    * set :supplyBase0:coal.1 *tmp335
-    * sensor *tmp336 .core @sand
-    * set :supplyBase0:sand.1 *tmp336
+  940 sensor :supplyBase0:coal.1 .core @coal
+  941 sensor :supplyBase0:sand.1 .core @sand
   942 op lessThan *tmp337 :supplyBase0:coal.1 :supplyBase0:sand.1
   943 jump *label248 equal *tmp337 false
   944 set *tmp338 @coal
 
  1160 write :meetTarget:metaglass processor2 ".targetMetaglass"
  1161 write :meetTarget:thorium processor2 ".targetThorium"
  1162 set copper :meetTarget:copper
-    * op add *tmp369 :meetTarget:lead .leadSurplus
-    * set lead *tmp369
+ 1163 op add lead :meetTarget:lead .leadSurplus
  1164 set graphite :meetTarget:graphite
  1165 set silicon :meetTarget:silicon
  1166 set titanium :meetTarget:titanium
 
  1189 setaddr :targetMet*retaddr *label306 (h:*label306)
  1190 call *label40 *invalid :targetMet*retval (m:*label306) (h:*label306)
  1191 label *label306
-    * set *tmp380 :targetMet*retval
-    * op equal *tmp381 *tmp380 false
+ 1192 op equal *tmp381 :targetMet*retval false
  1193 jump *label305 equal *tmp381 false
  1194 setaddr :supplyBase*retaddr *label307 (h:*label307)
  1195 call *label39 *invalid :supplyBase*retval (m:*label307) (h:*label307)
 
  1208 setaddr :targetMet*retaddr *label314 (h:*label314)
  1209 call *label40 *invalid :targetMet*retval (m:*label314) (h:*label314)
  1210 label *label314
-    * set *tmp384 :targetMet*retval
-    * op equal *tmp385 *tmp384 false
+ 1211 op equal *tmp385 :targetMet*retval false
  1212 jump *label313 equal *tmp385 false
  1213 setaddr :supplyBase*retaddr *label315 (h:*label315)
  1214 call *label39 *invalid :supplyBase*retval (m:*label315) (h:*label315)
 
  1249 wait 1e-15
  1250 read *tmp393 processor5 ":buildBlockAt*finished"
  1251 jump *label318 equal *tmp393 false
-    * read *tmp394 processor5 ":buildBlockAt*retval"
-    * set :buildBlock:built *tmp394
+ 1252 read :buildBlock:built processor5 ":buildBlockAt*retval"
  1253 write false .controller ":buildStop*finished"
  1254 write 2 .controller "@counter"
  1255 set :buildBlock*retval :buildBlock:built
 
  1288 setaddr :status2*retaddr *label324 (h:*label324)
  1289 call *label12 *invalid :status2*retval (m:*label324) (h:*label324)
  1290 label *label324
-    * set *tmp397 :mineOre.2:ore
-    * set :mineOre:ore *tmp397
+ 1291 set :mineOre:ore :mineOre.2:ore
  1292 set :mineOre:amount 30
  1293 set :mineOre:block .core
  1294 setaddr :mineOre*retaddr *label325 (h:*label325)
 
  1299 end
  1300 label *label26
  1301 sensor *tmp398 :fetchBlock:block @itemCapacity
-    * op min *tmp399 *tmp398 30
-    * set :transportStatus:target *tmp399
+ 1302 op min :transportStatus:target *tmp398 30
  1303 set :transportStatus:item :fetchBlock:item
  1304 setaddr :transportStatus*retaddr *label327 (h:*label327)
  1305 call *label14 *invalid :transportStatus*retval (m:*label327) (h:*label327)
 
  1322 label *label330
  1323 label *label331
  1324 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp402 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp402
+ 1325 sensor :fetchBlock:unitItem @unit @firstItem
  1326 op notEqual *tmp403 :fetchBlock:unitItem null
  1327 op notEqual *tmp404 :fetchBlock:unitItem :fetchBlock:item
  1328 op land *tmp405 *tmp403 *tmp404
 
  1353 setaddr :status2*retaddr *label338 (h:*label338)
  1354 call *label12 *invalid :status2*retval (m:*label338) (h:*label338)
  1355 label *label338
-    * sensor *tmp411 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp411
+ 1356 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1357 sensor *tmp412 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp413 :supplyBlock:blockCapacity *tmp412
-    * set :supplyBlock:missing *tmp413
+ 1358 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp412
  1359 op greaterThan *tmp414 :supplyBlock:missing 0
  1360 jump *label339 equal *tmp414 false
  1361 set :mineOre:ore :supplyBlock:ore
 
  1372 end
  1373 label *label28
  1374 sensor *tmp416 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp417 *tmp416 30
-    * set :supplyBlockFromCore:cap *tmp417
+ 1375 op min :supplyBlockFromCore:cap *tmp416 30
  1376 set :transportStatus:target :supplyBlockFromCore:cap
  1377 set :transportStatus:item :supplyBlockFromCore:item
  1378 setaddr :transportStatus*retaddr *label343 (h:*label343)
 
  1394 label *label346
  1395 label *label347
  1396 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor *tmp418 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp418
+ 1397 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1398 op notEqual *tmp419 :supplyBlockFromCore:unitItem null
  1399 op notEqual *tmp420 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1400 op land *tmp421 *tmp419 *tmp420
 
  1541 setaddr :moveToBlock*retaddr *label385 (h:*label385)
  1542 call *label20 *invalid :moveToBlock*retval (m:*label385) (h:*label385)
  1543 label *label385
-    * sensor *tmp458 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp458
+ 1544 sensor :depositItems:cap :depositItems:block @itemCapacity
  1545 label *label386
  1546 ucontrol itemDrop :depositItems:block 30
  1547 label *label387
 
  1571 return :depositItems*retaddr
  1572 end
  1573 label *label23
-    * op min *tmp465 :mineOre:amount 30
-    * set :mineOre:amount *tmp465
+ 1574 op min :mineOre:amount :mineOre:amount 30
  1575 set :transportStatus:target :mineOre:amount
  1576 set :transportStatus:item :mineOre:ore
  1577 setaddr :transportStatus*retaddr *label394 (h:*label394)
 
  1601 setaddr :status3*retaddr *label400 (h:*label400)
  1602 call *label13 *invalid :status3*retval (m:*label400) (h:*label400)
  1603 label *label400
-    * op add *tmp469 @second 10
-    * set :mineOre:stop *tmp469
+ 1604 op add :mineOre:stop @second 10
  1605 label *label401
-    * sensor *tmp470 @unit @firstItem
-    * set :mineOre:item *tmp470
+ 1606 sensor :mineOre:item @unit @firstItem
  1607 op notEqual *tmp471 :mineOre:item null
  1608 op notEqual *tmp472 :mineOre:item :mineOre:ore
  1609 op land *tmp473 *tmp471 *tmp472

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-57 instructions):
 
    29 set .builder @unit
    30 ulocate building core false @copper .coreX .coreY *tmp119 .core
    31 label *label56
-    * op equal *tmp120 .core null
-    * jump *label55 notEqual *tmp120 false
+   32 jump *label55 equal .core null
    33 label *label57
    34 ulocate ore core true @sand *tmp122 *tmp123 *tmp121 *tmp124
    35 op equal .scrap *tmp121 false
 
   100 read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocation:dx"
   101 read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocation:dy"
   102 read :buildFirstTitaniumDrill:result processor3 ":findDrillLocation*retval"
-    * op equal *tmp150 :buildFirstTitaniumDrill:result false
-    * jump *label72 equal *tmp150 false
+  103 jump *label72 notEqual :buildFirstTitaniumDrill:result false
   104 set :error:error "Cannot locate spot for titanium drill"
   105 setaddr :error*retaddr *label74 (h:*label74)
   106 call *label15 *invalid :error*retval (m:*label74) (h:*label74)
 
   253 call *label39 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   254 label *label110
   255 sensor *tmp173 AJTJK-battery1 @totalPower
-    * op lessThan *tmp174 *tmp173 300
-    * jump *label111 equal *tmp174 false
+  256 jump *label111 greaterThanEq *tmp173 300
   257 jump *label109 always
   258 jump *label112 always
   259 label *label111
   260 label *label112
   261 label *label108
   262 read *tmp81 .controller ".monos"
-    * op lessThan *tmp176 *tmp81 3
-    * jump *label107 notEqual *tmp176 false
+  263 jump *label107 lessThan *tmp81 3
   264 label *label109
   265 set .siliconSurplus 65
   266 set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"
 
   326 label *label128
   327 label *label129
   328 read *tmp82 .controller ".polys"
-    * op lessThan *tmp189 *tmp82 2
-    * jump *label131 equal *tmp189 false
+  329 jump *label131 greaterThanEq *tmp82 2
   330 setaddr :supplyBase*retaddr *label132 (h:*label132)
   331 call *label39 *invalid :supplyBase*retval (m:*label132) (h:*label132)
   332 label *label132
 
   338 label *label133
   339 label *label134
   340 read *tmp80 .controller ".flares"
-    * op lessThan *tmp190 *tmp80 2
-    * jump *label136 equal *tmp190 false
+  341 jump *label136 greaterThanEq *tmp80 2
   342 setaddr :supplyBase*retaddr *label137 (h:*label137)
   343 call *label39 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   344 label *label137
 
   392 read *tmp210 processor3 ":layoutThoriumDrill*finished"
   393 jump *label143 equal *tmp210 false
   394 read :buildThoriumDrill:result processor3 ":layoutThoriumDrill*retval"
-    * op equal *tmp212 :buildThoriumDrill:result false
-    * jump *label144 equal *tmp212 false
+  395 jump *label144 notEqual :buildThoriumDrill:result false
   396 set :error:error "Cannot locate spot for thorium drill"
   397 setaddr :error*retaddr *label146 (h:*label146)
   398 call *label15 *invalid :error*retval (m:*label146) (h:*label146)
 
   466 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   467 label *label155
   468 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp230 .thoriumContainer null
-    * jump *label156 equal *tmp230 false
+  469 jump *label156 notEqual .thoriumContainer null
   470 set .thoriumContainer .thoriumDrill
   471 jump *label157 always
   472 label *label156
 
   484 write null processor2 ".nextBlock"
   485 label *label159
   486 read *tmp82 .controller ".polys"
-    * op lessThan *tmp234 *tmp82 3
-    * jump *label161 equal *tmp234 false
+  487 jump *label161 greaterThanEq *tmp82 3
   488 setaddr :supplyBase*retaddr *label162 (h:*label162)
   489 call *label39 *invalid :supplyBase*retval (m:*label162) (h:*label162)
   490 label *label162
 
   526 ucontrol payEnter
   527 label *label170
   528 read *tmp83 .controller ".megas"
-    * op equal *tmp239 *tmp83 false
-    * jump *label169 notEqual *tmp239 false
+  529 jump *label169 equal *tmp83 false
   530 label *label171
   531 write true .controller ".finished"
   532 control enabled processor1 false
 
   557 jump *label176 always
   558 label *label175
   559 read *tmp81 .controller ".monos"
-    * op greaterThan *tmp252 *tmp81 1
-    * jump *label178 equal *tmp252 false
+  560 jump *label178 lessThanEq *tmp81 1
   561 setaddr :supplyBase1*retaddr *label180 (h:*label180)
   562 call *label37 *invalid :supplyBase1*retval (m:*label180) (h:*label180)
   563 label *label180
 
   573 end
   574 label *label43
   575 op add *tmp254 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp255 *tmp254 0
-    * jump *label183 equal *tmp255 false
+  576 jump *label183 lessThanEq *tmp254 0
   577 set :unpackCfg:cfg :buildRemoteBlock:cfg
   578 setaddr :unpackCfg*retaddr *label185 (h:*label185)
   579 call *label30 *invalid :unpackCfg*retval (m:*label185) (h:*label185)
 
   757 end
   758 label *label36
   759 set :supplyBase0:supplied false
-    * op equal *tmp286 A©JNJP-unloader6 null
-    * jump *label199 equal *tmp286 false
+  760 jump *label199 notEqual A©JNJP-unloader6 null
   761 sensor *tmp288 .core @graphite
-    * op lessThan *tmp289 *tmp288 graphite
-    * jump *label201 equal *tmp289 false
+  762 jump *label201 greaterThanEq *tmp288 graphite
   763 sensor *tmp291 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp292 *tmp291 5
-    * jump *label203 equal *tmp292 false
+  764 jump *label203 greaterThanEq *tmp291 5
   765 set :status1:text "Goal 1: graphite requirement"
   766 setaddr :status1*retaddr *label205 (h:*label205)
   767 call *label11 *invalid :status1*retval (m:*label205) (h:*label205)
 
   779 label *label201
   780 label *label202
   781 sensor *tmp294 .core @silicon
-    * op lessThan *tmp295 *tmp294 silicon
-    * jump *label207 equal *tmp295 false
+  782 jump *label207 greaterThanEq *tmp294 silicon
   783 sensor *tmp297 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp298 *tmp297 5
-    * jump *label209 equal *tmp298 false
+  784 jump *label209 greaterThanEq *tmp297 5
   785 set :status1:text "Goal 2: coal for silicon requirement"
   786 setaddr :status1*retaddr *label211 (h:*label211)
   787 call *label11 *invalid :status1*retval (m:*label211) (h:*label211)
 
   795 jump *label210 always
   796 label *label209
   797 sensor *tmp300 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp301 *tmp300 5
-    * jump *label213 equal *tmp301 false
+  798 jump *label213 greaterThanEq *tmp300 5
   799 jump *label215 equal .scrap false
   800 set :status1:text "Goal 3a: scrap for silicon requirement"
   801 setaddr :status1*retaddr *label217 (h:*label217)
 
   828 label *label207
   829 label *label208
   830 sensor *tmp304 AJTJK-battery1 @totalPower
-    * op lessThan *tmp305 *tmp304 .powerTarget
-    * jump *label221 equal *tmp305 false
+  831 jump *label221 greaterThanEq *tmp304 .powerTarget
   832 sensor *tmp307 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp308 *tmp307 2
-    * jump *label223 equal *tmp308 false
+  833 jump *label223 greaterThanEq *tmp307 2
   834 set :status1:text "Goal 4: supplying generator"
   835 setaddr :status1*retaddr *label225 (h:*label225)
   836 call *label11 *invalid :status1*retval (m:*label225) (h:*label225)
 
   851 label *label199
   852 label *label200
   853 sensor *tmp310 .core @titanium
-    * op lessThan *tmp311 *tmp310 titanium
-    * jump *label227 equal *tmp311 false
+  854 jump *label227 greaterThanEq *tmp310 titanium
   855 sensor *tmp313 .core @titanium
   856 op sub *tmp314 titanium *tmp313
   857 op min *tmp312 5 *tmp314
 
   861 label *label228
   862 set :supplyBase0:titaniumTrigger *tmp312
   863 sensor *tmp316 .titaniumDrill @titanium
-    * op lessThan *tmp317 *tmp316 :supplyBase0:titaniumTrigger
-    * jump *label229 equal *tmp317 false
-    * op equal *tmp319 :supplyBase0:supplied false
-    * jump *label231 equal *tmp319 false
+  864 jump *label229 greaterThanEq *tmp316 :supplyBase0:titaniumTrigger
+  865 jump *label231 notEqual :supplyBase0:supplied false
   866 sensor *tmp321 AJTJK-battery1 @totalPower
   867 op mul *tmp322 A©JNJP-unloader6 .powerTarget
-    * op lessThan *tmp323 *tmp321 *tmp322
-    * jump *label233 equal *tmp323 false
+  868 jump *label233 greaterThanEq *tmp321 *tmp322
   869 set :status1:text "Goal 5: supplying generator"
   870 setaddr :status1*retaddr *label235 (h:*label235)
   871 call *label11 *invalid :status1*retval (m:*label235) (h:*label235)
 
   877 jump *label234 always
   878 label *label233
   879 sensor *tmp325 .core @silicon
-    * op lessThan *tmp326 *tmp325 silicon
-    * jump *label237 equal *tmp326 false
+  880 jump *label237 greaterThanEq *tmp325 silicon
   881 jump *label239 equal .scrap false
   882 set :status1:text "Goal 6: silicon requirement"
   883 setaddr :status1*retaddr *label241 (h:*label241)
 
   885 label *label241
   886 sensor :supplyBase0:coal .core @coal
   887 sensor :supplyBase0:sand .sandContainer @sand
-    * op lessThan *tmp331 :supplyBase0:coal :supplyBase0:sand
-    * jump *label242 equal *tmp331 false
+  888 jump *label242 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   889 set *tmp332 @coal
   890 jump *label243 always
   891 label *label242
   892 set *tmp332 @scrap
   893 label *label243
   894 set :supplyBase0:ore *tmp332
-    * op lessThan *tmp333 :supplyBase0:coal :supplyBase0:sand
-    * jump *label244 equal *tmp333 false
+  895 jump *label244 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   896 set *tmp334 .core
   897 jump *label245 always
   898 label *label244
 
   912 label *label247
   913 sensor :supplyBase0:coal.1 .core @coal
   914 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThan *tmp337 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label248 equal *tmp337 false
+  915 jump *label248 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
   916 set *tmp338 @coal
   917 jump *label249 always
   918 label *label248
 
   927 jump *label238 always
   928 label *label237
   929 sensor *tmp339 .core @copper
-    * op lessThan *tmp340 *tmp339 copper
-    * jump *label251 equal *tmp340 false
+  930 jump *label251 greaterThanEq *tmp339 copper
   931 set :status1:text "Goal 7: copper requirement"
   932 setaddr :status1*retaddr *label253 (h:*label253)
   933 call *label11 *invalid :status1*retval (m:*label253) (h:*label253)
 
   939 jump *label252 always
   940 label *label251
   941 sensor *tmp342 .core @lead
-    * op lessThan *tmp343 *tmp342 lead
-    * jump *label255 equal *tmp343 false
+  942 jump *label255 greaterThanEq *tmp342 lead
   943 set :status1:text "Goal 8: lead requirement"
   944 setaddr :status1*retaddr *label257 (h:*label257)
   945 call *label11 *invalid :status1*retval (m:*label257) (h:*label257)
 
   951 jump *label256 always
   952 label *label255
   953 sensor *tmp345 .core @metaglass
-    * op lessThan *tmp346 *tmp345 metaglass
-    * jump *label259 equal *tmp346 false
+  954 jump *label259 greaterThanEq *tmp345 metaglass
   955 set :status1:text "Goal 9: metaglass requirement"
   956 setaddr :status1*retaddr *label261 (h:*label261)
   957 call *label11 *invalid :status1*retval (m:*label261) (h:*label261)
 
  1040 call *label11 *invalid :status1*retval (m:*label279) (h:*label279)
  1041 label *label279
  1042 sensor *tmp355 .thoriumBattery @totalPower
-    * op lessThan *tmp356 *tmp355 2000
-    * jump *label280 equal *tmp356 false
+ 1043 jump *label280 greaterThanEq *tmp355 2000
  1044 sensor *tmp358 .thoriumGenerator @coal
-    * op equal *tmp359 *tmp358 0
-    * jump *label282 equal *tmp359 false
+ 1045 jump *label282 notEqual *tmp358 0
  1046 sensor *tmp361 .core @coal
-    * op lessThan *tmp362 *tmp361 50
-    * jump *label284 equal *tmp362 false
+ 1047 jump *label284 greaterThanEq *tmp361 50
  1048 set :supplyBlock:block .thoriumGenerator
  1049 set :supplyBlock:ore @coal
  1050 setaddr :supplyBlock*retaddr *label286 (h:*label286)
 
  1070 call *label26 *invalid :fetchBlock*retval (m:*label288) (h:*label288)
  1071 label *label288
  1072 sensor *tmp364 .core @thorium
-    * op greaterThan *tmp365 *tmp364 400
-    * jump *label289 equal *tmp365 false
+ 1073 jump *label289 lessThanEq *tmp364 400
  1074 set :setPolyTarget.2:target 4
  1075 write :setPolyTarget.2:target .controller ".polyTarget"
  1076 label *label291
 
  1154 setaddr :targetMet*retaddr *label306 (h:*label306)
  1155 call *label40 *invalid :targetMet*retval (m:*label306) (h:*label306)
  1156 label *label306
-    * op equal *tmp381 :targetMet*retval false
-    * jump *label305 equal *tmp381 false
+ 1157 jump *label305 notEqual :targetMet*retval false
  1158 setaddr :supplyBase*retaddr *label307 (h:*label307)
  1159 call *label39 *invalid :supplyBase*retval (m:*label307) (h:*label307)
  1160 label *label307
 
  1172 setaddr :targetMet*retaddr *label314 (h:*label314)
  1173 call *label40 *invalid :targetMet*retval (m:*label314) (h:*label314)
  1174 label *label314
-    * op equal *tmp385 :targetMet*retval false
-    * jump *label313 equal *tmp385 false
+ 1175 jump *label313 notEqual :targetMet*retval false
  1176 setaddr :supplyBase*retaddr *label315 (h:*label315)
  1177 call *label39 *invalid :supplyBase*retval (m:*label315) (h:*label315)
  1178 label *label315
 
  1319 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1320 sensor *tmp412 :supplyBlock:block :supplyBlock:ore
  1321 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp412
-    * op greaterThan *tmp414 :supplyBlock:missing 0
-    * jump *label339 equal *tmp414 false
+ 1322 jump *label339 lessThanEq :supplyBlock:missing 0
  1323 set :mineOre:ore :supplyBlock:ore
  1324 set :mineOre:amount :supplyBlock:blockCapacity
  1325 set :mineOre:block :supplyBlock:block
 
  1382 end
  1383 label *label40
  1384 sensor *tmp427 .core @copper
-    * op lessThan *tmp428 *tmp427 copper
-    * jump *label354 equal *tmp428 false
+ 1385 jump *label354 greaterThanEq *tmp427 copper
  1386 set :targetMet*retval false
  1387 jump *label353 always
  1388 jump *label355 always
  1389 label *label354
  1390 label *label355
  1391 sensor *tmp430 .core @lead
-    * op lessThan *tmp431 *tmp430 lead
-    * jump *label356 equal *tmp431 false
+ 1392 jump *label356 greaterThanEq *tmp430 lead
  1393 set :targetMet*retval false
  1394 jump *label353 always
  1395 jump *label357 always
  1396 label *label356
  1397 label *label357
  1398 sensor *tmp433 .core @graphite
-    * op lessThan *tmp434 *tmp433 graphite
-    * jump *label358 equal *tmp434 false
+ 1399 jump *label358 greaterThanEq *tmp433 graphite
  1400 set :targetMet*retval false
  1401 jump *label353 always
  1402 jump *label359 always
  1403 label *label358
  1404 label *label359
  1405 sensor *tmp436 .core @silicon
-    * op lessThan *tmp437 *tmp436 silicon
-    * jump *label360 equal *tmp437 false
+ 1406 jump *label360 greaterThanEq *tmp436 silicon
  1407 set :targetMet*retval false
  1408 jump *label353 always
  1409 jump *label361 always
  1410 label *label360
  1411 label *label361
  1412 sensor *tmp439 .core @titanium
-    * op lessThan *tmp440 *tmp439 titanium
-    * jump *label362 equal *tmp440 false
+ 1413 jump *label362 greaterThanEq *tmp439 titanium
  1414 set :targetMet*retval false
  1415 jump *label353 always
  1416 jump *label363 always
  1417 label *label362
  1418 label *label363
  1419 sensor *tmp442 .core @metaglass
-    * op lessThan *tmp443 *tmp442 metaglass
-    * jump *label364 equal *tmp443 false
+ 1420 jump *label364 greaterThanEq *tmp442 metaglass
  1421 set :targetMet*retval false
  1422 jump *label353 always
  1423 jump *label365 always
  1424 label *label364
  1425 label *label365
  1426 sensor *tmp445 .core @thorium
-    * op lessThan *tmp446 *tmp445 thorium
-    * jump *label366 equal *tmp446 false
+ 1427 jump *label366 greaterThanEq *tmp445 thorium
  1428 set :targetMet*retval false
  1429 jump *label353 always
  1430 jump *label367 always
 
  1456 label *label371
  1457 label *label372
  1458 sensor *tmp448 @unit @firstItem
-    * op notEqual *tmp449 *tmp448 null
-    * jump *label375 equal *tmp449 false
+ 1459 jump *label375 equal *tmp448 null
  1460 ucontrol itemDrop @air 1000
  1461 jump *label376 always
  1462 label *label375
 
  1464 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1465 label *label373
  1466 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp451
-    * op equal *tmp452 *tmp451 false
-    * jump *label372 notEqual *tmp452 false
+ 1467 jump *label372 equal *tmp451 false
  1468 label *label374
  1469 label *label370
  1470 return :moveToEmpty*retaddr
 
  1472 label *label19
  1473 label *label378
  1474 sensor *tmp453 @unit @firstItem
-    * op notEqual *tmp454 *tmp453 null
-    * jump *label380 equal *tmp454 false
+ 1475 jump *label380 equal *tmp453 null
  1476 ucontrol itemDrop @air 1000
  1477 label *label379
  1478 jump *label378 always
 
  1486 call *label13 *invalid :status3*retval (m:*label382) (h:*label382)
  1487 label *label382
  1488 sensor *tmp455 @unit @firstItem
-    * op equal *tmp456 *tmp455 :depositItems:item
-    * jump *label383 equal *tmp456 false
+ 1489 jump *label383 notEqual *tmp455 :depositItems:item
  1490 set :moveToBlock:block :depositItems:block
  1491 set :moveToBlock:radius 6
  1492 setaddr :moveToBlock*retaddr *label385 (h:*label385)
 
  1499 sensor *tmp459 @unit @firstItem
  1500 op mul *tmp460 *tmp459 :depositItems:cap
  1501 sensor *tmp461 :depositItems:block :depositItems:item
-    * op greaterThan *tmp462 *tmp460 *tmp461
-    * jump *label386 notEqual *tmp462 false
+ 1502 jump *label386 greaterThan *tmp460 *tmp461
  1503 label *label388
  1504 jump *label384 always
  1505 label *label383
  1506 label *label389
  1507 sensor *tmp463 @unit @firstItem
-    * op notEqual *tmp464 *tmp463 null
-    * jump *label391 equal *tmp464 false
+ 1508 jump *label391 equal *tmp463 null
  1509 ucontrol itemDrop @air 1000
  1510 label *label390
  1511 jump *label389 always
 
  1538 call *label18 *invalid :moveToEmpty*retval (m:*label396) (h:*label396)
  1539 label *label396
  1540 sensor *tmp466 @unit @firstItem
-    * op notEqual *tmp467 *tmp466 :mineOre:ore
-    * jump *label397 equal *tmp467 false
+ 1541 jump *label397 equal *tmp466 :mineOre:ore
  1542 setaddr :dropAll*retaddr *label399 (h:*label399)
  1543 call *label19 *invalid :dropAll*retval (m:*label399) (h:*label399)
  1544 label *label399
 
  1561 label *label404
  1562 label *label405
  1563 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp475 @second :mineOre:stop
-    * jump *label406 equal *tmp475 false
+ 1564 jump *label406 lessThanEq @second :mineOre:stop
  1565 jump *label403 always
  1566 jump *label407 always
  1567 label *label406
  1568 label *label407
-    * op equal *tmp477 .noTarget false
-    * jump *label408 equal *tmp477 false
+ 1569 jump *label408 notEqual .noTarget false
  1570 setaddr :targetMet*retaddr *label410 (h:*label410)
  1571 call *label40 *invalid :targetMet*retval (m:*label410) (h:*label410)
  1572 label *label410
 
  1580 label *label409
  1581 label *label402
  1582 sensor *tmp480 @unit @totalItems
-    * op lessThan *tmp481 *tmp480 :mineOre:amount
-    * jump *label401 notEqual *tmp481 false
+ 1583 jump *label401 lessThan *tmp480 :mineOre:amount
  1584 label *label403
  1585 ucontrol unbind
  1586 set :depositItems:block :mineOre:block
 
  1610 end
  1611 label *label22
  1612 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
-    * op equal *tmp486 *tmp484 false
-    * jump *label418 equal *tmp486 false
+ 1613 jump *label418 notEqual *tmp484 false
  1614 set :error:error "Cannot locate ore"
  1615 setaddr :error*retaddr *label420 (h:*label420)
  1616 call *label15 *invalid :error*retval (m:*label420) (h:*label420)
 
  1628 label *label422
  1629 label *label423
  1630 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488
-    * op equal *tmp489 *tmp488 false
-    * jump *label425 equal *tmp489 false
+ 1631 jump *label425 notEqual *tmp488 false
  1632 op sub *tmp490 :moveTo:radius 0.5
  1633 ucontrol approach :moveTo:x :moveTo:y *tmp490
  1634 label *label424

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-37 instructions):
 
    67 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
    68 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
    69 label *label66
-    * jump *label63 always
    70 label *label62
    71 label *label63
    72 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
 
   104 setaddr :error*retaddr *label74 (h:*label74)
   105 call *label15 *invalid :error*retval (m:*label74) (h:*label74)
   106 label *label74
-    * jump *label73 always
   107 label *label72
   108 label *label73
   109 write @pneumatic-drill processor2 ".nextBlock"
 
   144 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   145 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   146 label *label82
-    * jump *label77 always
   147 label *label76
   148 label *label77
   149 write .sandContainer processor7 ".sandContainer"
 
   252 sensor *tmp173 AJTJK-battery1 @totalPower
   253 jump *label111 greaterThanEq *tmp173 300
   254 jump *label109 always
-    * jump *label112 always
   255 label *label111
   256 label *label112
   257 label *label108
 
   293 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   294 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
   295 label *label122
-    * jump *label121 always
   296 label *label120
   297 label *label121
   298 set :buildBlockFromCfg.1:cfg "A©HFJa-unloader23"
 
   392 setaddr :error*retaddr *label146 (h:*label146)
   393 call *label15 *invalid :error*retval (m:*label146) (h:*label146)
   394 label *label146
-    * jump *label145 always
   395 label *label144
   396 label *label145
   397 write @laser-drill processor5 ":buildBlockAt:block"
 
   462 set .thoriumContainer :buildRemoteBlock*retval
   463 jump *label156 notEqual .thoriumContainer null
   464 set .thoriumContainer .thoriumDrill
-    * jump *label157 always
   465 label *label156
   466 label *label157
   467 write .thoriumDrill processor2 ".thoriumDrill"
 
   599 label *label186
   600 set :buildRemoteBlock*retval :buildBlock*retval
   601 jump *label182 always
-    * jump *label184 always
   602 label *label183
   603 label *label184
   604 set :buildRemoteBlock*retval false
 
   764 call *label27 *invalid :supplyBlock*retval (m:*label206) (h:*label206)
   765 label *label206
   766 set :supplyBase0:supplied true
-    * jump *label204 always
   767 label *label203
   768 label *label204
-    * jump *label202 always
   769 label *label201
   770 label *label202
   771 sensor *tmp294 .core @silicon
 
   810 label *label220
   811 set :supplyBase0:supplied true
   812 label *label216
-    * jump *label214 always
   813 label *label213
   814 label *label214
   815 label *label210
-    * jump *label208 always
   816 label *label207
   817 label *label208
   818 sensor *tmp304 AJTJK-battery1 @totalPower
 
   829 call *label27 *invalid :supplyBlock*retval (m:*label226) (h:*label226)
   830 label *label226
   831 set :supplyBase0:supplied true
-    * jump *label224 always
   832 label *label223
   833 label *label224
-    * jump *label222 always
   834 label *label221
   835 label *label222
-    * jump *label200 always
   836 label *label199
   837 label *label200
   838 sensor *tmp310 .core @titanium
 
   989 label *label252
   990 label *label238
   991 label *label234
-    * jump *label232 always
   992 label *label231
   993 label *label232
   994 jump *label230 always
 
  1042 call *label28 *invalid :supplyBlockFromCore*retval (m:*label287) (h:*label287)
  1043 label *label287
  1044 label *label285
-    * jump *label283 always
  1045 label *label282
  1046 label *label283
-    * jump *label281 always
  1047 label *label280
  1048 label *label281
  1049 set :fetchBlock:block .thoriumContainer
 
  1056 set :setPolyTarget.2:target 4
  1057 write :setPolyTarget.2:target .controller ".polyTarget"
  1058 label *label291
-    * jump *label290 always
  1059 label *label289
  1060 label *label290
  1061 label *label278
 
  1160 label *label312
  1161 jump *label311 always
  1162 label *label313
-    * jump *label309 always
  1163 label *label308
  1164 label *label309
  1165 label *label292
 
  1271 op land *tmp405 *tmp403 *tmp404
  1272 jump *label334 equal *tmp405 false
  1273 ucontrol itemDrop @air 1000
-    * jump *label335 always
  1274 label *label334
  1275 label *label335
  1276 label *label332
 
  1305 setaddr :mineOre*retaddr *label341 (h:*label341)
  1306 call *label23 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1307 label *label341
-    * jump *label340 always
  1308 label *label339
  1309 label *label340
  1310 label *label337
 
  1340 op land *tmp421 *tmp419 *tmp420
  1341 jump *label350 equal *tmp421 false
  1342 ucontrol itemDrop @air 1000
-    * jump *label351 always
  1343 label *label350
  1344 label *label351
  1345 label *label348
 
  1362 jump *label354 greaterThanEq *tmp427 copper
  1363 set :targetMet*retval false
  1364 jump *label353 always
-    * jump *label355 always
  1365 label *label354
  1366 label *label355
  1367 sensor *tmp430 .core @lead
  1368 jump *label356 greaterThanEq *tmp430 lead
  1369 set :targetMet*retval false
  1370 jump *label353 always
-    * jump *label357 always
  1371 label *label356
  1372 label *label357
  1373 sensor *tmp433 .core @graphite
  1374 jump *label358 greaterThanEq *tmp433 graphite
  1375 set :targetMet*retval false
  1376 jump *label353 always
-    * jump *label359 always
  1377 label *label358
  1378 label *label359
  1379 sensor *tmp436 .core @silicon
  1380 jump *label360 greaterThanEq *tmp436 silicon
  1381 set :targetMet*retval false
  1382 jump *label353 always
-    * jump *label361 always
  1383 label *label360
  1384 label *label361
  1385 sensor *tmp439 .core @titanium
  1386 jump *label362 greaterThanEq *tmp439 titanium
  1387 set :targetMet*retval false
  1388 jump *label353 always
-    * jump *label363 always
  1389 label *label362
  1390 label *label363
  1391 sensor *tmp442 .core @metaglass
  1392 jump *label364 greaterThanEq *tmp442 metaglass
  1393 set :targetMet*retval false
  1394 jump *label353 always
-    * jump *label365 always
  1395 label *label364
  1396 label *label365
  1397 sensor *tmp445 .core @thorium
  1398 jump *label366 greaterThanEq *tmp445 thorium
  1399 set :targetMet*retval false
  1400 jump *label353 always
-    * jump *label367 always
  1401 label *label366
  1402 label *label367
  1403 set :targetMet*retval true
 
  1428 sensor *tmp448 @unit @firstItem
  1429 jump *label375 equal *tmp448 null
  1430 ucontrol itemDrop @air 1000
-    * jump *label376 always
  1431 label *label375
  1432 label *label376
  1433 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1511 setaddr :dropAll*retaddr *label399 (h:*label399)
  1512 call *label19 *invalid :dropAll*retval (m:*label399) (h:*label399)
  1513 label *label399
-    * jump *label398 always
  1514 label *label397
  1515 label *label398
  1516 set :status3:text "Mining..."
 
  1525 op land *tmp473 *tmp471 *tmp472
  1526 jump *label404 equal *tmp473 false
  1527 jump *label403 always
-    * jump *label405 always
  1528 label *label404
  1529 label *label405
  1530 ucontrol mine :mineOre:x :mineOre:y
  1531 jump *label406 lessThanEq @second :mineOre:stop
  1532 jump *label403 always
-    * jump *label407 always
  1533 label *label406
  1534 label *label407
  1535 jump *label408 notEqual .noTarget false
 
  1538 label *label410
  1539 jump *label411 equal :targetMet*retval false
  1540 jump *label403 always
-    * jump *label412 always
  1541 label *label411
  1542 label *label412
-    * jump *label409 always
  1543 label *label408
  1544 label *label409
  1545 label *label402
 
  1579 setaddr :error*retaddr *label420 (h:*label420)
  1580 call *label15 *invalid :error*retval (m:*label420) (h:*label420)
  1581 label *label420
-    * jump *label419 always
  1582 label *label418
  1583 label *label419
  1584 label *label417

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
    14 read *tmp115 processor5 "*signature"
    15 jump *label54 notEqual *tmp115 "319badb7a8e178a4:v1"
    16 set .titaniumDrill null
-    * set .thoriumDrill null
    17 set .thoriumBattery null
    18 set .thoriumContainer null
    19 set .thoriumGenerator null
 
    31 jump *label55 equal .core null
    32 label *label57
    33 ulocate ore core true @sand *tmp122 *tmp123 *tmp121 *tmp124
-    * op equal .scrap *tmp121 false
    34 set .scrap true
-    * write .scrap processor2 ".scrap"
-    * write .scrap processor7 ".scrap"
+   35 write true processor2 ".scrap"
+   36 write true processor7 ".scrap"
    37 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    38 setaddr :buildBlockFromCfg.1*retaddr *label58 (h:*label58)
    39 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label58) (h:*label58)
 
    51 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
    52 label *label61
    53 set .powerTarget 400
-    * jump *label62 equal .scrap false
+   54 jump *label62 equal true false
    55 set :buildBlockFromCfg.1:cfg "AXPRJe-pulverizer27"
    56 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
    57 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
    76 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label68) (h:*label68)
    77 label *label68
    78 set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   79 set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"
    80 setaddr :meetTarget.1*retaddr *label70 (h:*label70)
    81 call *label46 *invalid :meetTarget.1*retval (m:*label70) (h:*label70)
    82 label *label70
 
   115 jump *label75 equal *tmp154 false
   116 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
   117 jump *label69 always
-    * set *tmp137 null
   118 label *label69
   119 set .titaniumDrill *tmp137
-    * write .titaniumDrill processor2 ".titaniumDrill"
+  120 write *tmp137 processor2 ".titaniumDrill"
   121 set .sandContainer .core
-    * jump *label76 equal .scrap false
+  122 jump *label76 equal true false
   123 set :buildBlockFromCfg.1:cfg "A¨SSJi-container31"
   124 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   125 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   163 call *label44 *invalid :buildBlockFromCfg*retval (m:*label86) (h:*label86)
   164 label *label86
   165 set .controller :buildBlockFromCfg*retval
-    * write processor1 .controller ".timer"
-    * write processor2 .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
+  166 write processor1 :buildBlockFromCfg*retval ".timer"
+  167 write processor2 :buildBlockFromCfg*retval ".display"
+  168 write .core :buildBlockFromCfg*retval ".core"
+  169 write bank1 :buildBlockFromCfg*retval ".bank"
   170 set :block "AJEMJJ-graphite-press0"
   171 setaddr *tmp167 *label90
   172 jump *label87 always
 
   207 setaddr *tmp167 *label99
   208 label *label87
   209 read *tmp168 @this :block
-    * write *tmp168 .controller :block
+  210 write *tmp168 :buildBlockFromCfg*retval :block
   211 label *label88
   212 multijump *tmp167 0 0 (m:marker0)
   213 multilabel *label99 (m:marker0)
 
   229 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   230 label *label103
   231 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
+  232 write 1 .controller ".flareTarget"
   233 label *label104
   234 set :setMonoTarget:target 5
-    * write :setMonoTarget:target .controller ".monoTarget"
+  235 write 5 .controller ".monoTarget"
   236 label *label105
   237 write 85 .controller ".pressTarget"
   238 write 150 .controller ".smelterTarget"
   239 write 30 .controller ".kilnTarget"
   240 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  241 set .siliconSurplus 20
   242 setaddr :buildUnits*retaddr *label106 (h:*label106)
   243 call *label47 *invalid :buildUnits*retval (m:*label106) (h:*label106)
   244 label *label106
 
   285 setaddr :buildBlockFromCfg.1*retaddr *label119 (h:*label119)
   286 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label119) (h:*label119)
   287 label *label119
-    * jump *label120 equal .scrap false
+  288 jump *label120 equal true false
   289 set :buildBlockFromCfg.1:cfg "AXTNJj-pulverizer32"
   290 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   291 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
 
   308 set .siliconMonoSurplus 20
   309 set .metaglassSurplus 100
   310 set :setMonoTarget.1:target 4
-    * write :setMonoTarget.1:target .controller ".monoTarget"
+  311 write 4 .controller ".monoTarget"
   312 label *label126
   313 set :setPolyTarget:target 3
-    * write :setPolyTarget:target .controller ".polyTarget"
+  314 write 3 .controller ".polyTarget"
   315 label *label127
   316 setaddr :buildUnits*retaddr *label128 (h:*label128)
   317 call *label47 *invalid :buildUnits*retval (m:*label128) (h:*label128)
 
   326 jump *label129 always
   327 label *label131
   328 set :setFlareTarget.1:target 2
-    * write :setFlareTarget.1:target .controller ".flareTarget"
+  329 write 2 .controller ".flareTarget"
   330 label *label133
   331 label *label134
   332 read *tmp80 .controller ".flares"
 
   431 setaddr :buildRemoteBlock*retaddr *label151 (h:*label151)
   432 call *label43 *invalid :buildRemoteBlock*retval (m:*label151) (h:*label151)
   433 label *label151
-    * set :buildRemoteBlock:cfg "AFHJT-power-node10"
   434 read :buildRemoteBlock:x processor3 ".node2X"
   435 read :buildRemoteBlock:y processor3 ".node2Y"
   436 setaddr :buildRemoteBlock*retaddr *label152 (h:*label152)
 
   456 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   457 label *label155
   458 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label156 notEqual .thoriumContainer null
+  459 jump *label156 notEqual :buildRemoteBlock*retval null
   460 set .thoriumContainer .thoriumDrill
   461 label *label156
   462 label *label157
 
   481 jump *label159 always
   482 label *label161
   483 set :setMonoTarget.2:target 0
-    * write :setMonoTarget.2:target .controller ".monoTarget"
+  484 write 0 .controller ".monoTarget"
   485 label *label163
   486 write 3209 .controller ".powerTarget"
   487 set .siliconMonoSurplus 120
 
   492 label *label164
   493 set .metaglassSurplus 10
   494 set :setPolyTarget.1:target 0
-    * write :setPolyTarget.1:target .controller ".polyTarget"
+  495 write 0 .controller ".polyTarget"
   496 label *label165
   497 set :setFlareTarget.2:target 0
-    * write :setFlareTarget.2:target .controller ".flareTarget"
+  498 write 0 .controller ".flareTarget"
   499 label *label166
   500 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
+  501 write 1 .controller ".megaTarget"
   502 label *label167
   503 setaddr :buildUnits*retaddr *label168 (h:*label168)
   504 call *label47 *invalid :buildUnits*retval (m:*label168) (h:*label168)
 
   577 set :buildRemoteBlock:th :unpackCfg:th
   578 set :buildRemoteBlock:rotation :unpackCfg:rotation
   579 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  580 set :buildBlock:block :unpackCfg:type
   581 set :buildBlock:x :buildRemoteBlock:x
   582 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  583 set :buildBlock:copper :unpackCfg:cu
+  584 set :buildBlock:lead :unpackCfg:pb
+  585 set :buildBlock:graphite :unpackCfg:gr
+  586 set :buildBlock:silicon :unpackCfg:si
+  587 set :buildBlock:titanium :unpackCfg:ti
+  588 set :buildBlock:metaglass :unpackCfg:mg
+  589 set :buildBlock:thorium :unpackCfg:th
+  590 set :buildBlock:rotation :unpackCfg:rotation
   591 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  592 set :buildBlock:index :unpackCfg:ind
   593 setaddr :buildBlock*retaddr *label186 (h:*label186)
   594 call *label42 *invalid :buildBlock*retval (m:*label186) (h:*label186)
   595 label *label186
 
   599 label *label184
   600 set :buildRemoteBlock*retval false
   601 jump *label182 always
-    * set :buildRemoteBlock*retval null
   602 label *label182
   603 return :buildRemoteBlock*retaddr
   604 end
 
   619 set :buildBlockFromCfg:th :unpackCfg:th
   620 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   621 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp257 .coreX :buildBlockFromCfg:x
-    * op add *tmp258 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  622 op add *tmp257 .coreX :unpackCfg:x
+  623 op add *tmp258 .coreY :unpackCfg:y
+  624 set :buildBlock:block :unpackCfg:type
   625 set :buildBlock:x *tmp257
   626 set :buildBlock:y *tmp258
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  627 set :buildBlock:copper :unpackCfg:cu
+  628 set :buildBlock:lead :unpackCfg:pb
+  629 set :buildBlock:graphite :unpackCfg:gr
+  630 set :buildBlock:silicon :unpackCfg:si
+  631 set :buildBlock:titanium :unpackCfg:ti
+  632 set :buildBlock:metaglass :unpackCfg:mg
+  633 set :buildBlock:thorium :unpackCfg:th
+  634 set :buildBlock:rotation :unpackCfg:rotation
   635 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  636 set :buildBlock:index :unpackCfg:ind
   637 setaddr :buildBlock*retaddr *label189 (h:*label189)
   638 call *label42 *invalid :buildBlock*retval (m:*label189) (h:*label189)
   639 label *label189
   640 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building processor2 :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .controller :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+  641 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+  642 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
+  643 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
+  644 set :buildBlockFromCfg*retval :buildBlock*retval
   645 jump *label187 always
-    * set :buildBlockFromCfg*retval null
   646 label *label187
   647 return :buildBlockFromCfg*retaddr
   648 end
 
   668 set :meetTarget.1:ti :unpackCfg:ti
   669 set :meetTarget.1:mg :unpackCfg:mg
   670 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  671 set :meetTarget:block :unpackCfg:type
+  672 set :meetTarget:copper :unpackCfg:cu
+  673 set :meetTarget:lead :unpackCfg:pb
+  674 set :meetTarget:graphite :unpackCfg:gr
+  675 set :meetTarget:silicon :unpackCfg:si
+  676 set :meetTarget:titanium :unpackCfg:ti
+  677 set :meetTarget:metaglass :unpackCfg:mg
+  678 set :meetTarget:thorium :unpackCfg:th
   679 set :meetTarget:forBuild false
   680 set :meetTarget:isNoTarget false
   681 setaddr :meetTarget*retaddr *label194 (h:*label194)
 
   708 end
   709 label *label30
   710 set :unpackCfg:index 1
-    * set *tmp260 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  711 set *tmp260 1
+  712 op add :unpackCfg:index 1 1
   713 read *tmp261 :unpackCfg:cfg *tmp260
   714 op sub *tmp262 *tmp261 74
   715 lookup block :unpackCfg:type *tmp262
-    * set *tmp264 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  716 set *tmp264 2
+  717 op add :unpackCfg:index 2 1
   718 read *tmp265 :unpackCfg:cfg *tmp264
   719 op sub *tmp266 *tmp265 74
   720 op div :unpackCfg:x *tmp266 2
-    * set *tmp268 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  721 set *tmp268 3
+  722 op add :unpackCfg:index 3 1
   723 read *tmp269 :unpackCfg:cfg *tmp268
   724 op sub *tmp270 *tmp269 74
   725 op div :unpackCfg:y *tmp270 2
-    * set *tmp272 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  726 set *tmp272 4
+  727 op add :unpackCfg:index 4 1
   728 read *tmp273 :unpackCfg:cfg *tmp272
   729 op sub :unpackCfg:rotation *tmp273 74
-    * set *tmp275 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  730 set *tmp275 5
+  731 op add :unpackCfg:index 5 1
   732 read *tmp276 :unpackCfg:cfg *tmp275
   733 op sub :unpackCfg:ind *tmp276 74
   734 sensor :unpackCfg:cu :unpackCfg:type @copper
 
   840 label *label228
   841 set :supplyBase0:titaniumTrigger *tmp312
   842 sensor *tmp316 .titaniumDrill @titanium
-    * jump *label229 greaterThanEq *tmp316 :supplyBase0:titaniumTrigger
+  843 jump *label229 greaterThanEq *tmp316 *tmp312
   844 jump *label231 notEqual :supplyBase0:supplied false
   845 sensor *tmp321 AJTJK-battery1 @totalPower
   846 op mul *tmp322 A©JNJP-unloader6 .powerTarget
 
   878 set *tmp334 .sandContainer
   879 label *label245
   880 set :supplyBase0:block *tmp334
-    * set :mineOre.1:ore :supplyBase0:ore
-    * set :mineOre.1:block :supplyBase0:block
+  881 set :mineOre.1:ore *tmp332
+  882 set :mineOre.1:block *tmp334
   883 setaddr :mineOre.1*retaddr *label246 (h:*label246)
   884 call *label24 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
   885 label *label246
 
   898 set *tmp338 @sand
   899 label *label249
   900 set :supplyBase0:ore.1 *tmp338
-    * set :mineOre.2:ore :supplyBase0:ore.1
+  901 set :mineOre.2:ore *tmp338
   902 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   903 call *label25 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
   904 label *label250
 
   973 set *tmp354 @sand
   974 label *label271
   975 set :supplyBase0:ore.2 *tmp354
-    * set :mineOre.2:ore :supplyBase0:ore.2
+  976 set :mineOre.2:ore *tmp354
   977 setaddr :mineOre.2*retaddr *label272 (h:*label272)
   978 call *label25 *invalid :mineOre.2*retval (m:*label272) (h:*label272)
   979 label *label272
 
  1048 sensor *tmp364 .core @thorium
  1049 jump *label289 lessThanEq *tmp364 400
  1050 set :setPolyTarget.2:target 4
-    * write :setPolyTarget.2:target .controller ".polyTarget"
+ 1051 write 4 .controller ".polyTarget"
  1052 label *label291
  1053 label *label289
  1054 label *label290
 
  1114 op add *tmp372 :meetTarget:metaglass .metaglassSurplus
  1115 write *tmp372 .controller ".kilnTarget"
  1116 op add *tmp373 :meetTarget:lead .leadSurplus
-    * write *tmp373 .controller ".leadReserve"
+ 1117 write lead .controller ".leadReserve"
  1118 op sign *tmp374 :meetTarget:silicon
  1119 op mul *tmp375 *tmp374 20
  1120 op add *tmp376 :meetTarget:silicon *tmp375
 
  1124 op add *tmp379 :meetTarget:graphite *tmp378
  1125 write *tmp379 .controller ".graphiteReserve"
  1126 write lead processor7 ".leadTarget"
-    * write copper processor7 ".copperTarget"
+ 1127 write :meetTarget:copper processor7 ".copperTarget"
  1128 label *label303
  1129 setaddr :targetMet*retaddr *label306 (h:*label306)
  1130 call *label40 *invalid :targetMet*retval (m:*label306) (h:*label306)
 
  1191 write 2 .controller "@counter"
  1192 set :buildBlock*retval :buildBlock:built
  1193 jump *label316 always
-    * set :buildBlock*retval null
  1194 label *label316
  1195 return :buildBlock*retaddr
  1196 end
 
  1208 label *label321
  1209 set *tmp395 :mineOre.1:ore
  1210 set *tmp396 :mineOre.1:block
-    * set :mineOre:ore *tmp395
+ 1211 set :mineOre:ore :mineOre.1:ore
  1212 set :mineOre:amount 30
-    * set :mineOre:block *tmp396
+ 1213 set :mineOre:block :mineOre.1:block
  1214 setaddr :mineOre*retaddr *label322 (h:*label322)
  1215 call *label23 *invalid :mineOre*retval (m:*label322) (h:*label322)
  1216 label *label322
 
  1395 label *label367
  1396 set :targetMet*retval true
  1397 jump *label353 always
-    * set :targetMet*retval null
  1398 label *label353
  1399 return :targetMet*retaddr
  1400 end
 
  1493 label *label395
  1494 set :mineOre:x :locateOre:x
  1495 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1496 set :moveToEmpty:x :locateOre:x
+ 1497 set :moveToEmpty:y :locateOre:y
  1498 setaddr :moveToEmpty*retaddr *label396 (h:*label396)
  1499 call *label18 *invalid :moveToEmpty*retval (m:*label396) (h:*label396)
  1500 label *label396

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-57 instructions):
 
    75 setaddr :buildBlockFromCfg.1*retaddr *label68 (h:*label68)
    76 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label68) (h:*label68)
    77 label *label68
-    * set :buildFirstTitaniumDrill:cfg "AJJJ~-pneumatic-drill52"
    78 set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"
    79 setaddr :meetTarget.1*retaddr *label70 (h:*label70)
    80 call *label46 *invalid :meetTarget.1*retval (m:*label70) (h:*label70)
 
   227 setaddr :buildBlockFromCfg.1*retaddr *label103 (h:*label103)
   228 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   229 label *label103
-    * set :setFlareTarget:target 1
   230 write 1 .controller ".flareTarget"
   231 label *label104
-    * set :setMonoTarget:target 5
   232 write 5 .controller ".monoTarget"
   233 label *label105
   234 write 85 .controller ".pressTarget"
 
   304 set .siliconSurplus 1000
   305 set .siliconMonoSurplus 20
   306 set .metaglassSurplus 100
-    * set :setMonoTarget.1:target 4
   307 write 4 .controller ".monoTarget"
   308 label *label126
-    * set :setPolyTarget:target 3
   309 write 3 .controller ".polyTarget"
   310 label *label127
   311 setaddr :buildUnits*retaddr *label128 (h:*label128)
 
   320 label *label130
   321 jump *label129 always
   322 label *label131
-    * set :setFlareTarget.1:target 2
   323 write 2 .controller ".flareTarget"
   324 label *label133
   325 label *label134
 
   406 setaddr :buildRemoteBlock*retaddr *label148 (h:*label148)
   407 call *label43 *invalid :buildRemoteBlock*retval (m:*label148) (h:*label148)
   408 label *label148
-    * set :buildRemoteBlock:cfg "A¡AOJ[-water-extractor17"
   409 read :buildRemoteBlock:x processor3 ".water2X"
   410 read :buildRemoteBlock:y processor3 ".water2Y"
   411 setaddr :buildRemoteBlock*retaddr *label149 (h:*label149)
 
   473 label *label160
   474 jump *label159 always
   475 label *label161
-    * set :setMonoTarget.2:target 0
   476 write 0 .controller ".monoTarget"
   477 label *label163
   478 write 3209 .controller ".powerTarget"
 
   483 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label164) (h:*label164)
   484 label *label164
   485 set .metaglassSurplus 10
-    * set :setPolyTarget.1:target 0
   486 write 0 .controller ".polyTarget"
   487 label *label165
-    * set :setFlareTarget.2:target 0
   488 write 0 .controller ".flareTarget"
   489 label *label166
-    * set :setMegaTarget:target 1
   490 write 1 .controller ".megaTarget"
   491 label *label167
   492 setaddr :buildUnits*retaddr *label168 (h:*label168)
 
   556 setaddr :unpackCfg*retaddr *label185 (h:*label185)
   557 call *label30 *invalid :unpackCfg*retval (m:*label185) (h:*label185)
   558 label *label185
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   559 set :buildBlock:block :unpackCfg:type
   560 set :buildBlock:x :buildRemoteBlock:x
   561 set :buildBlock:y :buildRemoteBlock:y
 
   586 setaddr :unpackCfg*retaddr *label188 (h:*label188)
   587 call *label30 *invalid :unpackCfg*retval (m:*label188) (h:*label188)
   588 label *label188
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   589 op add *tmp257 .coreX :unpackCfg:x
   590 op add *tmp258 .coreY :unpackCfg:y
   591 set :buildBlock:block :unpackCfg:type
 
   604 setaddr :buildBlock*retaddr *label189 (h:*label189)
   605 call *label42 *invalid :buildBlock*retval (m:*label189) (h:*label189)
   606 label *label189
-    * set :buildBlockFromCfg:building :buildBlock*retval
   607 write :buildBlock*retval @this :buildBlockFromCfg:cfg
   608 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   609 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
 
   626 setaddr :unpackCfg*retaddr *label193 (h:*label193)
   627 call *label30 *invalid :unpackCfg*retval (m:*label193) (h:*label193)
   628 label *label193
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   629 set :meetTarget:block :unpackCfg:type
   630 set :meetTarget:copper :unpackCfg:cu
   631 set :meetTarget:lead :unpackCfg:pb
 
   665 return :buildUnits*retaddr
   666 end
   667 label *label30
-    * set :unpackCfg:index 1
   668 set *tmp260 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp261 :unpackCfg:cfg *tmp260
+  669 read *tmp261 :unpackCfg:cfg 1
   670 op sub *tmp262 *tmp261 74
   671 lookup block :unpackCfg:type *tmp262
   672 set *tmp264 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp265 :unpackCfg:cfg *tmp264
+  673 read *tmp265 :unpackCfg:cfg 2
   674 op sub *tmp266 *tmp265 74
   675 op div :unpackCfg:x *tmp266 2
   676 set *tmp268 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp269 :unpackCfg:cfg *tmp268
+  677 read *tmp269 :unpackCfg:cfg 3
   678 op sub *tmp270 *tmp269 74
   679 op div :unpackCfg:y *tmp270 2
   680 set *tmp272 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp273 :unpackCfg:cfg *tmp272
+  681 read *tmp273 :unpackCfg:cfg 4
   682 op sub :unpackCfg:rotation *tmp273 74
   683 set *tmp275 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp276 :unpackCfg:cfg *tmp275
+  684 read *tmp276 :unpackCfg:cfg 5
   685 op sub :unpackCfg:ind *tmp276 74
   686 sensor :unpackCfg:cu :unpackCfg:type @copper
   687 sensor :unpackCfg:pb :unpackCfg:type @lead
 
   790 label *label227
   791 set *tmp312 100
   792 label *label228
-    * set :supplyBase0:titaniumTrigger *tmp312
   793 sensor *tmp316 .titaniumDrill @titanium
   794 jump *label229 greaterThanEq *tmp316 *tmp312
   795 jump *label231 notEqual :supplyBase0:supplied false
 
   821 label *label242
   822 set *tmp332 @scrap
   823 label *label243
-    * set :supplyBase0:ore *tmp332
   824 jump *label244 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   825 set *tmp334 .core
   826 jump *label245 always
   827 label *label244
   828 set *tmp334 .sandContainer
   829 label *label245
-    * set :supplyBase0:block *tmp334
   830 set :mineOre.1:ore *tmp332
   831 set :mineOre.1:block *tmp334
   832 setaddr :mineOre.1*retaddr *label246 (h:*label246)
 
   846 label *label248
   847 set *tmp338 @sand
   848 label *label249
-    * set :supplyBase0:ore.1 *tmp338
   849 set :mineOre.2:ore *tmp338
   850 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   851 call *label25 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
 
   920 label *label270
   921 set *tmp354 @sand
   922 label *label271
-    * set :supplyBase0:ore.2 *tmp354
   923 set :mineOre.2:ore *tmp354
   924 setaddr :mineOre.2*retaddr *label272 (h:*label272)
   925 call *label25 *invalid :mineOre.2*retval (m:*label272) (h:*label272)
 
   994 label *label288
   995 sensor *tmp364 .core @thorium
   996 jump *label289 lessThanEq *tmp364 400
-    * set :setPolyTarget.2:target 4
   997 write 4 .controller ".polyTarget"
   998 label *label291
   999 label *label289
 
  1059 write *tmp371 .controller ".smelterTarget"
  1060 op add *tmp372 :meetTarget:metaglass .metaglassSurplus
  1061 write *tmp372 .controller ".kilnTarget"
-    * op add *tmp373 :meetTarget:lead .leadSurplus
  1062 write lead .controller ".leadReserve"
  1063 op sign *tmp374 :meetTarget:silicon
  1064 op mul *tmp375 *tmp374 20
 
  1151 setaddr :status2*retaddr *label321 (h:*label321)
  1152 call *label12 *invalid :status2*retval (m:*label321) (h:*label321)
  1153 label *label321
-    * set *tmp395 :mineOre.1:ore
-    * set *tmp396 :mineOre.1:block
  1154 set :mineOre:ore :mineOre.1:ore
  1155 set :mineOre:amount 30
  1156 set :mineOre:block :mineOre.1:block

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
   665 return :buildUnits*retaddr
   666 end
   667 label *label30
-    * set *tmp260 1
   668 read *tmp261 :unpackCfg:cfg 1
   669 op sub *tmp262 *tmp261 74
   670 lookup block :unpackCfg:type *tmp262
-    * set *tmp264 2
   671 read *tmp265 :unpackCfg:cfg 2
   672 op sub *tmp266 *tmp265 74
   673 op div :unpackCfg:x *tmp266 2
-    * set *tmp268 3
   674 read *tmp269 :unpackCfg:cfg 3
   675 op sub *tmp270 *tmp269 74
   676 op div :unpackCfg:y *tmp270 2
-    * set *tmp272 4
   677 read *tmp273 :unpackCfg:cfg 4
   678 op sub :unpackCfg:rotation *tmp273 74
-    * set *tmp275 5
   679 read *tmp276 :unpackCfg:cfg 5
   680 op sub :unpackCfg:ind *tmp276 74
   681 sensor :unpackCfg:cu :unpackCfg:type @copper

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1519 setaddr :status3*retaddr *label422 (h:*label422)
  1520 call *label13 *invalid :status3*retval (m:*label422) (h:*label422)
  1521 label *label422
+ 1522 op sub *tmp490 :moveTo:radius 0.5
  1523 label *label423
  1524 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488
  1525 jump *label425 notEqual *tmp488 false
-    * op sub *tmp490 :moveTo:radius 0.5
  1526 ucontrol approach :moveTo:x :moveTo:y *tmp490
  1527 label *label424
  1528 jump *label423 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-13 instructions):
 
   449 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   450 label *label155
   451 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label156 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label156
-    * label *label157
+  452 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   453 write .thoriumDrill processor2 ".thoriumDrill"
   454 write .thoriumContainer processor2 ".thoriumContainer"
   455 write .thoriumContainer processor6 ":setThoriumContainer:container"
 
   807 label *label241
   808 sensor :supplyBase0:coal .core @coal
   809 sensor :supplyBase0:sand .sandContainer @sand
-    * jump *label242 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp332 @coal
-    * jump *label243 always
-    * label *label242
-    * set *tmp332 @scrap
-    * label *label243
-    * jump *label244 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp334 .core
-    * jump *label245 always
-    * label *label244
-    * set *tmp334 .sandContainer
-    * label *label245
+  810 select *tmp332 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  811 select *tmp334 lessThan :supplyBase0:coal :supplyBase0:sand .core .sandContainer
   812 set :mineOre.1:ore *tmp332
   813 set :mineOre.1:block *tmp334
   814 setaddr :mineOre.1*retaddr *label246 (h:*label246)
 
   822 label *label247
   823 sensor :supplyBase0:coal.1 .core @coal
   824 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label248 greaterThanEq :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp338 @coal
-    * jump *label249 always
-    * label *label248
-    * set *tmp338 @sand
-    * label *label249
+  825 select *tmp338 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   826 set :mineOre.2:ore *tmp338
   827 setaddr :mineOre.2*retaddr *label250 (h:*label250)
   828 call *label25 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
 
   887 label *label269
   888 jump *label268 always
   889 label *label267
-    * sensor *tmp350 .core @coal
-    * sensor *tmp351 .core @sand
-    * op lessThanEq *tmp352 *tmp350 *tmp351
-    * op or *tmp353 .scrap *tmp352
-    * jump *label270 equal *tmp353 false
-    * set *tmp354 @coal
-    * jump *label271 always
-    * label *label270
-    * set *tmp354 @sand
-    * label *label271
+  890 sensor *tmp350 .core @coal
+  891 sensor *tmp351 .core @sand
+  892 op lessThanEq *tmp352 *tmp350 *tmp351
+  893 op or *tmp353 .scrap *tmp352
+  894 select *tmp354 notEqual *tmp353 false @coal @sand
   895 set :mineOre.2:ore *tmp354
   896 setaddr :mineOre.2*retaddr *label272 (h:*label272)
   897 call *label25 *invalid :mineOre.2*retval (m:*label272) (h:*label272)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   773 label *label222
   774 label *label199
   775 label *label200
+  776 set *tmp312 100
   777 sensor *tmp310 .core @titanium
-    * jump *label227 greaterThanEq *tmp310 titanium
+  778 jump *label228 greaterThanEq *tmp310 titanium
   779 sensor *tmp313 .core @titanium
   780 op sub *tmp314 titanium *tmp313
   781 op min *tmp312 5 *tmp314
   782 jump *label228 always
-    * label *label227
-    * set *tmp312 100
   783 label *label228
   784 sensor *tmp316 .titaniumDrill @titanium
   785 jump *label229 greaterThanEq *tmp316 *tmp312

Modifications by Unroll iteration loop at CoreBuilder.mnd:398:5 (-2 instructions):
 
   166 write processor2 :buildBlockFromCfg*retval ".display"
   167 write .core :buildBlockFromCfg*retval ".core"
   168 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp167 *label90
-    * jump *label87 always
-    * multilabel *label90 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp167 *label91
-    * jump *label87 always
-    * multilabel *label91 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp167 *label92
-    * jump *label87 always
-    * multilabel *label92 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp167 *label93
-    * jump *label87 always
-    * multilabel *label93 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp167 *label94
-    * jump *label87 always
-    * multilabel *label94 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp167 *label95
-    * jump *label87 always
-    * multilabel *label95 (m:marker0)
-    * set :block "A©JNJP-unloader6"
-    * setaddr *tmp167 *label96
-    * jump *label87 always
-    * multilabel *label96 (m:marker0)
-    * set :block "A{HNJQ-inverted-sorter7"
-    * setaddr *tmp167 *label97
-    * jump *label87 always
-    * multilabel *label97 (m:marker0)
-    * set :block "AJPJR-underflow-gate8"
-    * setaddr *tmp167 *label98
-    * jump *label87 always
-    * multilabel *label98 (m:marker0)
-    * set :block "AÕFFJS-micro-processor9"
-    * setaddr *tmp167 *label99
-    * label *label87
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
-    * label *label88
-    * multijump *tmp167 0 0 (m:marker0)
-    * multilabel *label99 (m:marker0)
-    * label *label89
+  169 set :block "AJEMJJ-graphite-press0"
+  170 label *label441
+  171 read *tmp168 @this :block
+  172 write *tmp168 :buildBlockFromCfg*retval :block
+  173 label *label442
+  174 set :block "AJTJK-battery1"
+  175 label *label445
+  176 read *tmp168 @this :block
+  177 write *tmp168 :buildBlockFromCfg*retval :block
+  178 label *label446
+  179 set :block "ALTJL-battery2"
+  180 label *label449
+  181 read *tmp168 @this :block
+  182 write *tmp168 :buildBlockFromCfg*retval :block
+  183 label *label450
+  184 set :block "AJRJM-combustion-generator3"
+  185 label *label453
+  186 read *tmp168 @this :block
+  187 write *tmp168 :buildBlockFromCfg*retval :block
+  188 label *label454
+  189 set :block "ALMQJN-silicon-smelter4"
+  190 label *label457
+  191 read *tmp168 @this :block
+  192 write *tmp168 :buildBlockFromCfg*retval :block
+  193 label *label458
+  194 set :block "A{LNJO-inverted-sorter5"
+  195 label *label461
+  196 read *tmp168 @this :block
+  197 write *tmp168 :buildBlockFromCfg*retval :block
+  198 label *label462
+  199 set :block "A©JNJP-unloader6"
+  200 label *label465
+  201 read *tmp168 @this :block
+  202 write *tmp168 :buildBlockFromCfg*retval :block
+  203 label *label466
+  204 set :block "A{HNJQ-inverted-sorter7"
+  205 label *label469
+  206 read *tmp168 @this :block
+  207 write *tmp168 :buildBlockFromCfg*retval :block
+  208 label *label470
+  209 set :block "AJPJR-underflow-gate8"
+  210 label *label473
+  211 read *tmp168 @this :block
+  212 write *tmp168 :buildBlockFromCfg*retval :block
+  213 label *label474
+  214 set :block "AÕFFJS-micro-processor9"
+  215 label *label477
+  216 read *tmp168 @this :block
+  217 write *tmp168 :buildBlockFromCfg*retval :block
+  218 label *label478
+  219 label *label89
   220 set :buildBlockFromCfg.1:cfg "AFHJT-power-node10"
   221 setaddr :buildBlockFromCfg.1*retaddr *label100 (h:*label100)
   222 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label100) (h:*label100)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   168 write bank1 :buildBlockFromCfg*retval ".bank"
   169 set :block "AJEMJJ-graphite-press0"
   170 label *label441
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  171 read *tmp168 @this "AJEMJJ-graphite-press0"
+  172 write *tmp168 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   173 label *label442
   174 set :block "AJTJK-battery1"
   175 label *label445
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  176 read *tmp168 @this "AJTJK-battery1"
+  177 write *tmp168 :buildBlockFromCfg*retval "AJTJK-battery1"
   178 label *label446
   179 set :block "ALTJL-battery2"
   180 label *label449
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  181 read *tmp168 @this "ALTJL-battery2"
+  182 write *tmp168 :buildBlockFromCfg*retval "ALTJL-battery2"
   183 label *label450
   184 set :block "AJRJM-combustion-generator3"
   185 label *label453
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  186 read *tmp168 @this "AJRJM-combustion-generator3"
+  187 write *tmp168 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   188 label *label454
   189 set :block "ALMQJN-silicon-smelter4"
   190 label *label457
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  191 read *tmp168 @this "ALMQJN-silicon-smelter4"
+  192 write *tmp168 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   193 label *label458
   194 set :block "A{LNJO-inverted-sorter5"
   195 label *label461
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  196 read *tmp168 @this "A{LNJO-inverted-sorter5"
+  197 write *tmp168 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   198 label *label462
   199 set :block "A©JNJP-unloader6"
   200 label *label465
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  201 read *tmp168 @this "A©JNJP-unloader6"
+  202 write *tmp168 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   203 label *label466
   204 set :block "A{HNJQ-inverted-sorter7"
   205 label *label469
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  206 read *tmp168 @this "A{HNJQ-inverted-sorter7"
+  207 write *tmp168 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   208 label *label470
   209 set :block "AJPJR-underflow-gate8"
   210 label *label473
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  211 read *tmp168 @this "AJPJR-underflow-gate8"
+  212 write *tmp168 :buildBlockFromCfg*retval "AJPJR-underflow-gate8"
   213 label *label474
   214 set :block "AÕFFJS-micro-processor9"
   215 label *label477
-    * read *tmp168 @this :block
-    * write *tmp168 :buildBlockFromCfg*retval :block
+  216 read *tmp168 @this "AÕFFJS-micro-processor9"
+  217 write *tmp168 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
   218 label *label478
   219 label *label89
   220 set :buildBlockFromCfg.1:cfg "AFHJT-power-node10"
 
   455 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   456 label *label155
   457 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  458 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   459 write .thoriumDrill processor2 ".thoriumDrill"
   460 write .thoriumContainer processor2 ".thoriumContainer"
   461 write .thoriumContainer processor6 ":setThoriumContainer:container"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   166 write processor2 :buildBlockFromCfg*retval ".display"
   167 write .core :buildBlockFromCfg*retval ".core"
   168 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   169 label *label441
   170 read *tmp168 @this "AJEMJJ-graphite-press0"
   171 write *tmp168 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   172 label *label442
-    * set :block "AJTJK-battery1"
   173 label *label445
   174 read *tmp168 @this "AJTJK-battery1"
   175 write *tmp168 :buildBlockFromCfg*retval "AJTJK-battery1"
   176 label *label446
-    * set :block "ALTJL-battery2"
   177 label *label449
   178 read *tmp168 @this "ALTJL-battery2"
   179 write *tmp168 :buildBlockFromCfg*retval "ALTJL-battery2"
   180 label *label450
-    * set :block "AJRJM-combustion-generator3"
   181 label *label453
   182 read *tmp168 @this "AJRJM-combustion-generator3"
   183 write *tmp168 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   184 label *label454
-    * set :block "ALMQJN-silicon-smelter4"
   185 label *label457
   186 read *tmp168 @this "ALMQJN-silicon-smelter4"
   187 write *tmp168 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   188 label *label458
-    * set :block "A{LNJO-inverted-sorter5"
   189 label *label461
   190 read *tmp168 @this "A{LNJO-inverted-sorter5"
   191 write *tmp168 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   192 label *label462
-    * set :block "A©JNJP-unloader6"
   193 label *label465
   194 read *tmp168 @this "A©JNJP-unloader6"
   195 write *tmp168 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   196 label *label466
-    * set :block "A{HNJQ-inverted-sorter7"
   197 label *label469
   198 read *tmp168 @this "A{HNJQ-inverted-sorter7"
   199 write *tmp168 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   200 label *label470
-    * set :block "AJPJR-underflow-gate8"
   201 label *label473
   202 read *tmp168 @this "AJPJR-underflow-gate8"
   203 write *tmp168 :buildBlockFromCfg*retval "AJPJR-underflow-gate8"
   204 label *label474
-    * set :block "AÕFFJS-micro-processor9"
   205 label *label477
   206 read *tmp168 @this "AÕFFJS-micro-processor9"
   207 write *tmp168 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
 
   444 setaddr :buildRemoteBlock*retaddr *label155 (h:*label155)
   445 call *label43 *invalid :buildRemoteBlock*retval (m:*label155) (h:*label155)
   446 label *label155
-    * set .thoriumContainer :buildRemoteBlock*retval
   447 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   448 write .thoriumDrill processor2 ".thoriumDrill"
   449 write .thoriumContainer processor2 ".thoriumContainer"

Modifications by Unroll iteration loop at CoreBuilder.mnd:197:5 (-2 instructions):
 
   969 end
   970 label *label41
   971 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp367 *label296
-    * jump *label293 always
-    * multilabel *label296 (m:marker1)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp367 *label297
-    * jump *label293 always
-    * multilabel *label297 (m:marker1)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp367 *label298
-    * jump *label293 always
-    * multilabel *label298 (m:marker1)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp367 *label299
-    * jump *label293 always
-    * multilabel *label299 (m:marker1)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp367 *label300
-    * jump *label293 always
-    * multilabel *label300 (m:marker1)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp367 *label301
-    * jump *label293 always
-    * multilabel *label301 (m:marker1)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp367 *label302
-    * label *label293
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label294
-    * multijump *tmp367 0 0 (m:marker1)
-    * multilabel *label302 (m:marker1)
-    * label *label295
+  972 set :meetTarget:t :meetTarget:copper
+  973 label *label482
+  974 op sign *tmp368 :meetTarget:t
+  975 op add :meetTarget:count :meetTarget:count *tmp368
+  976 label *label483
+  977 set :meetTarget:t :meetTarget:lead
+  978 label *label486
+  979 op sign *tmp368 :meetTarget:t
+  980 op add :meetTarget:count :meetTarget:count *tmp368
+  981 label *label487
+  982 set :meetTarget:t :meetTarget:graphite
+  983 label *label490
+  984 op sign *tmp368 :meetTarget:t
+  985 op add :meetTarget:count :meetTarget:count *tmp368
+  986 label *label491
+  987 set :meetTarget:t :meetTarget:silicon
+  988 label *label494
+  989 op sign *tmp368 :meetTarget:t
+  990 op add :meetTarget:count :meetTarget:count *tmp368
+  991 label *label495
+  992 set :meetTarget:t :meetTarget:titanium
+  993 label *label498
+  994 op sign *tmp368 :meetTarget:t
+  995 op add :meetTarget:count :meetTarget:count *tmp368
+  996 label *label499
+  997 set :meetTarget:t :meetTarget:metaglass
+  998 label *label502
+  999 op sign *tmp368 :meetTarget:t
+ 1000 op add :meetTarget:count :meetTarget:count *tmp368
+ 1001 label *label503
+ 1002 set :meetTarget:t :meetTarget:thorium
+ 1003 label *label506
+ 1004 op sign *tmp368 :meetTarget:t
+ 1005 op add :meetTarget:count :meetTarget:count *tmp368
+ 1006 label *label507
+ 1007 label *label295
  1008 write :meetTarget:count processor2 ".totalTargets"
  1009 write :meetTarget:block processor2 ".nextBlock"
  1010 write :meetTarget:copper processor2 ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   971 set :meetTarget:count 0
   972 set :meetTarget:t :meetTarget:copper
   973 label *label482
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
+  974 op sign *tmp368 :meetTarget:copper
+  975 op add :meetTarget:count 0 *tmp368
   976 label *label483
   977 set :meetTarget:t :meetTarget:lead
   978 label *label486
-    * op sign *tmp368 :meetTarget:t
+  979 op sign *tmp368 :meetTarget:lead
   980 op add :meetTarget:count :meetTarget:count *tmp368
   981 label *label487
   982 set :meetTarget:t :meetTarget:graphite
   983 label *label490
-    * op sign *tmp368 :meetTarget:t
+  984 op sign *tmp368 :meetTarget:graphite
   985 op add :meetTarget:count :meetTarget:count *tmp368
   986 label *label491
   987 set :meetTarget:t :meetTarget:silicon
   988 label *label494
-    * op sign *tmp368 :meetTarget:t
+  989 op sign *tmp368 :meetTarget:silicon
   990 op add :meetTarget:count :meetTarget:count *tmp368
   991 label *label495
   992 set :meetTarget:t :meetTarget:titanium
   993 label *label498
-    * op sign *tmp368 :meetTarget:t
+  994 op sign *tmp368 :meetTarget:titanium
   995 op add :meetTarget:count :meetTarget:count *tmp368
   996 label *label499
   997 set :meetTarget:t :meetTarget:metaglass
   998 label *label502
-    * op sign *tmp368 :meetTarget:t
+  999 op sign *tmp368 :meetTarget:metaglass
  1000 op add :meetTarget:count :meetTarget:count *tmp368
  1001 label *label503
  1002 set :meetTarget:t :meetTarget:thorium
  1003 label *label506
-    * op sign *tmp368 :meetTarget:t
+ 1004 op sign *tmp368 :meetTarget:thorium
  1005 op add :meetTarget:count :meetTarget:count *tmp368
  1006 label *label507
  1007 label *label295

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   968 return :supplyBase2*retaddr
   969 end
   970 label *label41
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
   971 label *label482
   972 op sign *tmp368 :meetTarget:copper
   973 op add :meetTarget:count 0 *tmp368
   974 label *label483
-    * set :meetTarget:t :meetTarget:lead
   975 label *label486
   976 op sign *tmp368 :meetTarget:lead
   977 op add :meetTarget:count :meetTarget:count *tmp368
   978 label *label487
-    * set :meetTarget:t :meetTarget:graphite
   979 label *label490
   980 op sign *tmp368 :meetTarget:graphite
   981 op add :meetTarget:count :meetTarget:count *tmp368
   982 label *label491
-    * set :meetTarget:t :meetTarget:silicon
   983 label *label494
   984 op sign *tmp368 :meetTarget:silicon
   985 op add :meetTarget:count :meetTarget:count *tmp368
   986 label *label495
-    * set :meetTarget:t :meetTarget:titanium
   987 label *label498
   988 op sign *tmp368 :meetTarget:titanium
   989 op add :meetTarget:count :meetTarget:count *tmp368
   990 label *label499
-    * set :meetTarget:t :meetTarget:metaglass
   991 label *label502
   992 op sign *tmp368 :meetTarget:metaglass
   993 op add :meetTarget:count :meetTarget:count *tmp368
   994 label *label503
-    * set :meetTarget:t :meetTarget:thorium
   995 label *label506
   996 op sign *tmp368 :meetTarget:thorium
   997 op add :meetTarget:count :meetTarget:count *tmp368

Modifications by Inline function 'supplyBase0' defined at CoreBuilder.mnd:57:1 (-4 instructions):
 
   533 label *label180
   534 jump *label179 always
   535 label *label178
-    * setaddr :supplyBase0*retaddr *label181 (h:*label181)
-    * call *label36 *invalid :supplyBase0*retval (m:*label181) (h:*label181)
-    * label *label181
+  536 label *label511
+  537 set :supplyBase0:supplied false
+  538 jump *label538 notEqual A©JNJP-unloader6 null
+  539 sensor *tmp288 .core @graphite
+  540 jump *label516 greaterThanEq *tmp288 graphite
+  541 sensor *tmp291 AJEMJJ-graphite-press0 @coal
+  542 jump *label514 greaterThanEq *tmp291 5
+  543 set :status1:text "Goal 1: graphite requirement"
+  544 setaddr :status1*retaddr *label512 (h:*label512)
+  545 call *label11 *invalid :status1*retval (m:*label512) (h:*label512)
+  546 label *label512
+  547 set :supplyBlock:block AJEMJJ-graphite-press0
+  548 set :supplyBlock:ore @coal
+  549 setaddr :supplyBlock*retaddr *label513 (h:*label513)
+  550 call *label27 *invalid :supplyBlock*retval (m:*label513) (h:*label513)
+  551 label *label513
+  552 set :supplyBase0:supplied true
+  553 label *label514
+  554 label *label515
+  555 label *label516
+  556 label *label517
+  557 sensor *tmp294 .core @silicon
+  558 jump *label530 greaterThanEq *tmp294 silicon
+  559 sensor *tmp297 ALMQJN-silicon-smelter4 @coal
+  560 jump *label520 greaterThanEq *tmp297 5
+  561 set :status1:text "Goal 2: coal for silicon requirement"
+  562 setaddr :status1*retaddr *label518 (h:*label518)
+  563 call *label11 *invalid :status1*retval (m:*label518) (h:*label518)
+  564 label *label518
+  565 set :supplyBlock:block ALMQJN-silicon-smelter4
+  566 set :supplyBlock:ore @coal
+  567 setaddr :supplyBlock*retaddr *label519 (h:*label519)
+  568 call *label27 *invalid :supplyBlock*retval (m:*label519) (h:*label519)
+  569 label *label519
+  570 set :supplyBase0:supplied true
+  571 jump *label529 always
+  572 label *label520
+  573 sensor *tmp300 ALMQJN-silicon-smelter4 @sand
+  574 jump *label527 greaterThanEq *tmp300 5
+  575 jump *label523 equal .scrap false
+  576 set :status1:text "Goal 3a: scrap for silicon requirement"
+  577 setaddr :status1*retaddr *label521 (h:*label521)
+  578 call *label11 *invalid :status1*retval (m:*label521) (h:*label521)
+  579 label *label521
+  580 set :supplyBlock:block AXPRJe-pulverizer27
+  581 set :supplyBlock:ore @scrap
+  582 setaddr :supplyBlock*retaddr *label522 (h:*label522)
+  583 call *label27 *invalid :supplyBlock*retval (m:*label522) (h:*label522)
+  584 label *label522
+  585 set :supplyBase0:supplied true
+  586 jump *label526 always
+  587 label *label523
+  588 set :status1:text "Goal 3: sand for silicon requirement"
+  589 setaddr :status1*retaddr *label524 (h:*label524)
+  590 call *label11 *invalid :status1*retval (m:*label524) (h:*label524)
+  591 label *label524
+  592 set :supplyBlock:block ALMQJN-silicon-smelter4
+  593 set :supplyBlock:ore @sand
+  594 setaddr :supplyBlock*retaddr *label525 (h:*label525)
+  595 call *label27 *invalid :supplyBlock*retval (m:*label525) (h:*label525)
+  596 label *label525
+  597 set :supplyBase0:supplied true
+  598 label *label526
+  599 label *label527
+  600 label *label528
+  601 label *label529
+  602 label *label530
+  603 label *label531
+  604 sensor *tmp304 AJTJK-battery1 @totalPower
+  605 jump *label536 greaterThanEq *tmp304 .powerTarget
+  606 sensor *tmp307 AJRJM-combustion-generator3 @coal
+  607 jump *label534 greaterThanEq *tmp307 2
+  608 set :status1:text "Goal 4: supplying generator"
+  609 setaddr :status1*retaddr *label532 (h:*label532)
+  610 call *label11 *invalid :status1*retval (m:*label532) (h:*label532)
+  611 label *label532
+  612 set :supplyBlock:block AJRJM-combustion-generator3
+  613 set :supplyBlock:ore @coal
+  614 setaddr :supplyBlock*retaddr *label533 (h:*label533)
+  615 call *label27 *invalid :supplyBlock*retval (m:*label533) (h:*label533)
+  616 label *label533
+  617 set :supplyBase0:supplied true
+  618 label *label534
+  619 label *label535
+  620 label *label536
+  621 label *label537
+  622 label *label538
+  623 label *label539
+  624 set *tmp312 100
+  625 sensor *tmp310 .core @titanium
+  626 jump *label540 greaterThanEq *tmp310 titanium
+  627 sensor *tmp313 .core @titanium
+  628 op sub *tmp314 titanium *tmp313
+  629 op min *tmp312 5 *tmp314
+  630 jump *label540 always
+  631 label *label540
+  632 sensor *tmp316 .titaniumDrill @titanium
+  633 jump *label575 greaterThanEq *tmp316 *tmp312
+  634 jump *label573 notEqual :supplyBase0:supplied false
+  635 sensor *tmp321 AJTJK-battery1 @totalPower
+  636 op mul *tmp322 A©JNJP-unloader6 .powerTarget
+  637 jump *label543 greaterThanEq *tmp321 *tmp322
+  638 set :status1:text "Goal 5: supplying generator"
+  639 setaddr :status1*retaddr *label541 (h:*label541)
+  640 call *label11 *invalid :status1*retval (m:*label541) (h:*label541)
+  641 label *label541
+  642 set :mineOre.2:ore @coal
+  643 setaddr :mineOre.2*retaddr *label542 (h:*label542)
+  644 call *label25 *invalid :mineOre.2*retval (m:*label542) (h:*label542)
+  645 label *label542
+  646 jump *label572 always
+  647 label *label543
+  648 sensor *tmp325 .core @silicon
+  649 jump *label550 greaterThanEq *tmp325 silicon
+  650 jump *label546 equal .scrap false
+  651 set :status1:text "Goal 6: silicon requirement"
+  652 setaddr :status1*retaddr *label544 (h:*label544)
+  653 call *label11 *invalid :status1*retval (m:*label544) (h:*label544)
+  654 label *label544
+  655 sensor :supplyBase0:coal .core @coal
+  656 sensor :supplyBase0:sand .sandContainer @sand
+  657 select *tmp332 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  658 select *tmp334 lessThan :supplyBase0:coal :supplyBase0:sand .core .sandContainer
+  659 set :mineOre.1:ore *tmp332
+  660 set :mineOre.1:block *tmp334
+  661 setaddr :mineOre.1*retaddr *label545 (h:*label545)
+  662 call *label24 *invalid :mineOre.1*retval (m:*label545) (h:*label545)
+  663 label *label545
+  664 jump *label549 always
+  665 label *label546
+  666 set :status1:text "Goal 6: silicon requirement"
+  667 setaddr :status1*retaddr *label547 (h:*label547)
+  668 call *label11 *invalid :status1*retval (m:*label547) (h:*label547)
+  669 label *label547
+  670 sensor :supplyBase0:coal.1 .core @coal
+  671 sensor :supplyBase0:sand.1 .core @sand
+  672 select *tmp338 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
+  673 set :mineOre.2:ore *tmp338
+  674 setaddr :mineOre.2*retaddr *label548 (h:*label548)
+  675 call *label25 *invalid :mineOre.2*retval (m:*label548) (h:*label548)
+  676 label *label548
+  677 label *label549
+  678 jump *label571 always
+  679 label *label550
+  680 sensor *tmp339 .core @copper
+  681 jump *label553 greaterThanEq *tmp339 copper
+  682 set :status1:text "Goal 7: copper requirement"
+  683 setaddr :status1*retaddr *label551 (h:*label551)
+  684 call *label11 *invalid :status1*retval (m:*label551) (h:*label551)
+  685 label *label551
+  686 set :mineOre.2:ore @copper
+  687 setaddr :mineOre.2*retaddr *label552 (h:*label552)
+  688 call *label25 *invalid :mineOre.2*retval (m:*label552) (h:*label552)
+  689 label *label552
+  690 jump *label570 always
+  691 label *label553
+  692 sensor *tmp342 .core @lead
+  693 jump *label556 greaterThanEq *tmp342 lead
+  694 set :status1:text "Goal 8: lead requirement"
+  695 setaddr :status1*retaddr *label554 (h:*label554)
+  696 call *label11 *invalid :status1*retval (m:*label554) (h:*label554)
+  697 label *label554
+  698 set :mineOre.2:ore @lead
+  699 setaddr :mineOre.2*retaddr *label555 (h:*label555)
+  700 call *label25 *invalid :mineOre.2*retval (m:*label555) (h:*label555)
+  701 label *label555
+  702 jump *label569 always
+  703 label *label556
+  704 sensor *tmp345 .core @metaglass
+  705 jump *label562 greaterThanEq *tmp345 metaglass
+  706 set :status1:text "Goal 9: metaglass requirement"
+  707 setaddr :status1*retaddr *label557 (h:*label557)
+  708 call *label11 *invalid :status1*retval (m:*label557) (h:*label557)
+  709 label *label557
+  710 jump *label559 equal .scrap false
+  711 set :mineOre.1:ore @scrap
+  712 set :mineOre.1:block .sandContainer
+  713 setaddr :mineOre.1*retaddr *label558 (h:*label558)
+  714 call *label24 *invalid :mineOre.1*retval (m:*label558) (h:*label558)
+  715 label *label558
+  716 jump *label561 always
+  717 label *label559
+  718 set :mineOre.2:ore @sand
+  719 setaddr :mineOre.2*retaddr *label560 (h:*label560)
+  720 call *label25 *invalid :mineOre.2*retval (m:*label560) (h:*label560)
+  721 label *label560
+  722 label *label561
+  723 jump *label568 always
+  724 label *label562
+  725 set :status1:text "Goal 10: supplying base"
+  726 setaddr :status1*retaddr *label563 (h:*label563)
+  727 call *label11 *invalid :status1*retval (m:*label563) (h:*label563)
+  728 label *label563
+  729 jump *label565 equal A¨SSJi-container31 false
+  730 set :mineOre.1:ore @scrap
+  731 set :mineOre.1:block A¨SSJi-container31
+  732 setaddr :mineOre.1*retaddr *label564 (h:*label564)
+  733 call *label24 *invalid :mineOre.1*retval (m:*label564) (h:*label564)
+  734 label *label564
+  735 jump *label567 always
+  736 label *label565
+  737 sensor *tmp350 .core @coal
+  738 sensor *tmp351 .core @sand
+  739 op lessThanEq *tmp352 *tmp350 *tmp351
+  740 op or *tmp353 .scrap *tmp352
+  741 select *tmp354 notEqual *tmp353 false @coal @sand
+  742 set :mineOre.2:ore *tmp354
+  743 setaddr :mineOre.2*retaddr *label566 (h:*label566)
+  744 call *label25 *invalid :mineOre.2*retval (m:*label566) (h:*label566)
+  745 label *label566
+  746 label *label567
+  747 label *label568
+  748 label *label569
+  749 label *label570
+  750 label *label571
+  751 label *label572
+  752 label *label573
+  753 label *label574
+  754 jump *label578 always
+  755 label *label575
+  756 set :status1:text "Goal 11: Fetching titanium"
+  757 setaddr :status1*retaddr *label576 (h:*label576)
+  758 call *label11 *invalid :status1*retval (m:*label576) (h:*label576)
+  759 label *label576
+  760 set :fetchBlock:block .titaniumDrill
+  761 set :fetchBlock:item @titanium
+  762 setaddr :fetchBlock*retaddr *label577 (h:*label577)
+  763 call *label26 *invalid :fetchBlock*retval (m:*label577) (h:*label577)
+  764 label *label577
+  765 label *label578
+  766 label *label579
   767 label *label179
   768 label *label176
   769 label *label174
 
   908 label *label197
   909 return :unpackCfg*retaddr
   910 end
-    * label *label36
-    * set :supplyBase0:supplied false
-    * jump *label199 notEqual A©JNJP-unloader6 null
-    * sensor *tmp288 .core @graphite
-    * jump *label201 greaterThanEq *tmp288 graphite
-    * sensor *tmp291 AJEMJJ-graphite-press0 @coal
-    * jump *label203 greaterThanEq *tmp291 5
-    * set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label205 (h:*label205)
-    * call *label11 *invalid :status1*retval (m:*label205) (h:*label205)
-    * label *label205
-    * set :supplyBlock:block AJEMJJ-graphite-press0
-    * set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label206 (h:*label206)
-    * call *label27 *invalid :supplyBlock*retval (m:*label206) (h:*label206)
-    * label *label206
-    * set :supplyBase0:supplied true
-    * label *label203
-    * label *label204
-    * label *label201
-    * label *label202
-    * sensor *tmp294 .core @silicon
-    * jump *label207 greaterThanEq *tmp294 silicon
-    * sensor *tmp297 ALMQJN-silicon-smelter4 @coal
-    * jump *label209 greaterThanEq *tmp297 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label211 (h:*label211)
-    * call *label11 *invalid :status1*retval (m:*label211) (h:*label211)
-    * label *label211
-    * set :supplyBlock:block ALMQJN-silicon-smelter4
-    * set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label212 (h:*label212)
-    * call *label27 *invalid :supplyBlock*retval (m:*label212) (h:*label212)
-    * label *label212
-    * set :supplyBase0:supplied true
-    * jump *label210 always
-    * label *label209
-    * sensor *tmp300 ALMQJN-silicon-smelter4 @sand
-    * jump *label213 greaterThanEq *tmp300 5
-    * jump *label215 equal .scrap false
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label11 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
-    * set :supplyBlock:block AXPRJe-pulverizer27
-    * set :supplyBlock:ore @scrap
-    * setaddr :supplyBlock*retaddr *label218 (h:*label218)
-    * call *label27 *invalid :supplyBlock*retval (m:*label218) (h:*label218)
-    * label *label218
-    * set :supplyBase0:supplied true
-    * jump *label216 always
-    * label *label215
-    * set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label219 (h:*label219)
-    * call *label11 *invalid :status1*retval (m:*label219) (h:*label219)
-    * label *label219
-    * set :supplyBlock:block ALMQJN-silicon-smelter4
-    * set :supplyBlock:ore @sand
-    * setaddr :supplyBlock*retaddr *label220 (h:*label220)
-    * call *label27 *invalid :supplyBlock*retval (m:*label220) (h:*label220)
-    * label *label220
-    * set :supplyBase0:supplied true
-    * label *label216
-    * label *label213
-    * label *label214
-    * label *label210
-    * label *label207
-    * label *label208
-    * sensor *tmp304 AJTJK-battery1 @totalPower
-    * jump *label221 greaterThanEq *tmp304 .powerTarget
-    * sensor *tmp307 AJRJM-combustion-generator3 @coal
-    * jump *label223 greaterThanEq *tmp307 2
-    * set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label225 (h:*label225)
-    * call *label11 *invalid :status1*retval (m:*label225) (h:*label225)
-    * label *label225
-    * set :supplyBlock:block AJRJM-combustion-generator3
-    * set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label226 (h:*label226)
-    * call *label27 *invalid :supplyBlock*retval (m:*label226) (h:*label226)
-    * label *label226
-    * set :supplyBase0:supplied true
-    * label *label223
-    * label *label224
-    * label *label221
-    * label *label222
-    * label *label199
-    * label *label200
-    * set *tmp312 100
-    * sensor *tmp310 .core @titanium
-    * jump *label228 greaterThanEq *tmp310 titanium
-    * sensor *tmp313 .core @titanium
-    * op sub *tmp314 titanium *tmp313
-    * op min *tmp312 5 *tmp314
-    * jump *label228 always
-    * label *label228
-    * sensor *tmp316 .titaniumDrill @titanium
-    * jump *label229 greaterThanEq *tmp316 *tmp312
-    * jump *label231 notEqual :supplyBase0:supplied false
-    * sensor *tmp321 AJTJK-battery1 @totalPower
-    * op mul *tmp322 A©JNJP-unloader6 .powerTarget
-    * jump *label233 greaterThanEq *tmp321 *tmp322
-    * set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label235 (h:*label235)
-    * call *label11 *invalid :status1*retval (m:*label235) (h:*label235)
-    * label *label235
-    * set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label236 (h:*label236)
-    * call *label25 *invalid :mineOre.2*retval (m:*label236) (h:*label236)
-    * label *label236
-    * jump *label234 always
-    * label *label233
-    * sensor *tmp325 .core @silicon
-    * jump *label237 greaterThanEq *tmp325 silicon
-    * jump *label239 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label241 (h:*label241)
-    * call *label11 *invalid :status1*retval (m:*label241) (h:*label241)
-    * label *label241
-    * sensor :supplyBase0:coal .core @coal
-    * sensor :supplyBase0:sand .sandContainer @sand
-    * select *tmp332 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
-    * select *tmp334 lessThan :supplyBase0:coal :supplyBase0:sand .core .sandContainer
-    * set :mineOre.1:ore *tmp332
-    * set :mineOre.1:block *tmp334
-    * setaddr :mineOre.1*retaddr *label246 (h:*label246)
-    * call *label24 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
-    * label *label246
-    * jump *label240 always
-    * label *label239
-    * set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label247 (h:*label247)
-    * call *label11 *invalid :status1*retval (m:*label247) (h:*label247)
-    * label *label247
-    * sensor :supplyBase0:coal.1 .core @coal
-    * sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp338 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.2:ore *tmp338
-    * setaddr :mineOre.2*retaddr *label250 (h:*label250)
-    * call *label25 *invalid :mineOre.2*retval (m:*label250) (h:*label250)
-    * label *label250
-    * label *label240
-    * jump *label238 always
-    * label *label237
-    * sensor *tmp339 .core @copper
-    * jump *label251 greaterThanEq *tmp339 copper
-    * set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label253 (h:*label253)
-    * call *label11 *invalid :status1*retval (m:*label253) (h:*label253)
-    * label *label253
-    * set :mineOre.2:ore @copper
-    * setaddr :mineOre.2*retaddr *label254 (h:*label254)
-    * call *label25 *invalid :mineOre.2*retval (m:*label254) (h:*label254)
-    * label *label254
-    * jump *label252 always
-    * label *label251
-    * sensor *tmp342 .core @lead
-    * jump *label255 greaterThanEq *tmp342 lead
-    * set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label257 (h:*label257)
-    * call *label11 *invalid :status1*retval (m:*label257) (h:*label257)
-    * label *label257
-    * set :mineOre.2:ore @lead
-    * setaddr :mineOre.2*retaddr *label258 (h:*label258)
-    * call *label25 *invalid :mineOre.2*retval (m:*label258) (h:*label258)
-    * label *label258
-    * jump *label256 always
-    * label *label255
-    * sensor *tmp345 .core @metaglass
-    * jump *label259 greaterThanEq *tmp345 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label261 (h:*label261)
-    * call *label11 *invalid :status1*retval (m:*label261) (h:*label261)
-    * label *label261
-    * jump *label262 equal .scrap false
-    * set :mineOre.1:ore @scrap
-    * set :mineOre.1:block .sandContainer
-    * setaddr :mineOre.1*retaddr *label264 (h:*label264)
-    * call *label24 *invalid :mineOre.1*retval (m:*label264) (h:*label264)
-    * label *label264
-    * jump *label263 always
-    * label *label262
-    * set :mineOre.2:ore @sand
-    * setaddr :mineOre.2*retaddr *label265 (h:*label265)
-    * call *label25 *invalid :mineOre.2*retval (m:*label265) (h:*label265)
-    * label *label265
-    * label *label263
-    * jump *label260 always
-    * label *label259
-    * set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label266 (h:*label266)
-    * call *label11 *invalid :status1*retval (m:*label266) (h:*label266)
-    * label *label266
-    * jump *label267 equal A¨SSJi-container31 false
-    * set :mineOre.1:ore @scrap
-    * set :mineOre.1:block A¨SSJi-container31
-    * setaddr :mineOre.1*retaddr *label269 (h:*label269)
-    * call *label24 *invalid :mineOre.1*retval (m:*label269) (h:*label269)
-    * label *label269
-    * jump *label268 always
-    * label *label267
-    * sensor *tmp350 .core @coal
-    * sensor *tmp351 .core @sand
-    * op lessThanEq *tmp352 *tmp350 *tmp351
-    * op or *tmp353 .scrap *tmp352
-    * select *tmp354 notEqual *tmp353 false @coal @sand
-    * set :mineOre.2:ore *tmp354
-    * setaddr :mineOre.2*retaddr *label272 (h:*label272)
-    * call *label25 *invalid :mineOre.2*retval (m:*label272) (h:*label272)
-    * label *label272
-    * label *label268
-    * label *label260
-    * label *label256
-    * label *label252
-    * label *label238
-    * label *label234
-    * label *label231
-    * label *label232
-    * jump *label230 always
-    * label *label229
-    * set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label273 (h:*label273)
-    * call *label11 *invalid :status1*retval (m:*label273) (h:*label273)
-    * label *label273
-    * set :fetchBlock:block .titaniumDrill
-    * set :fetchBlock:item @titanium
-    * setaddr :fetchBlock*retaddr *label274 (h:*label274)
-    * call *label26 *invalid :fetchBlock*retval (m:*label274) (h:*label274)
-    * label *label274
-    * label *label230
-    * label *label198
-    * return :supplyBase0*retaddr
-    * end
   911 label *label37
   912 set :status1:text "Phase 1: supplying base"
   913 setaddr :status1*retaddr *label276 (h:*label276)

Modifications by Inline function 'supplyBase1' defined at CoreBuilder.mnd:146:1 (-4 instructions):
 
   528 label *label175
   529 read *tmp81 .controller ".monos"
   530 jump *label178 lessThanEq *tmp81 1
-    * setaddr :supplyBase1*retaddr *label180 (h:*label180)
-    * call *label37 *invalid :supplyBase1*retval (m:*label180) (h:*label180)
-    * label *label180
+  531 label *label580
+  532 set :status1:text "Phase 1: supplying base"
+  533 setaddr :status1*retaddr *label581 (h:*label581)
+  534 call *label11 *invalid :status1*retval (m:*label581) (h:*label581)
+  535 label *label581
+  536 set :mineOre.2:ore @coal
+  537 setaddr :mineOre.2*retaddr *label582 (h:*label582)
+  538 call *label25 *invalid :mineOre.2*retval (m:*label582) (h:*label582)
+  539 label *label582
+  540 label *label583
   541 jump *label179 always
   542 label *label178
   543 label *label511
 
   915 label *label197
   916 return :unpackCfg*retaddr
   917 end
-    * label *label37
-    * set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label276 (h:*label276)
-    * call *label11 *invalid :status1*retval (m:*label276) (h:*label276)
-    * label *label276
-    * set :mineOre.2:ore @coal
-    * setaddr :mineOre.2*retaddr *label277 (h:*label277)
-    * call *label25 *invalid :mineOre.2*retval (m:*label277) (h:*label277)
-    * label *label277
-    * label *label275
-    * return :supplyBase1*retaddr
-    * end
   918 label *label38
   919 set :status1:text "Phase 2: servicing thorium drill"
   920 setaddr :status1*retaddr *label279 (h:*label279)

Modifications by Inline function 'supplyBase2' defined at CoreBuilder.mnd:151:1 (-4 instructions):
 
   521 op max *tmp250 0 *tmp249
   522 write *tmp250 processor7 ".sandTarget"
   523 jump *label175 equal .thoriumContainer false
-    * setaddr :supplyBase2*retaddr *label177 (h:*label177)
-    * call *label38 *invalid :supplyBase2*retval (m:*label177) (h:*label177)
-    * label *label177
+  524 label *label584
+  525 set :status1:text "Phase 2: servicing thorium drill"
+  526 setaddr :status1*retaddr *label585 (h:*label585)
+  527 call *label11 *invalid :status1*retval (m:*label585) (h:*label585)
+  528 label *label585
+  529 sensor *tmp355 .thoriumBattery @totalPower
+  530 jump *label592 greaterThanEq *tmp355 2000
+  531 sensor *tmp358 .thoriumGenerator @coal
+  532 jump *label590 notEqual *tmp358 0
+  533 sensor *tmp361 .core @coal
+  534 jump *label587 greaterThanEq *tmp361 50
+  535 set :supplyBlock:block .thoriumGenerator
+  536 set :supplyBlock:ore @coal
+  537 setaddr :supplyBlock*retaddr *label586 (h:*label586)
+  538 call *label27 *invalid :supplyBlock*retval (m:*label586) (h:*label586)
+  539 label *label586
+  540 jump *label589 always
+  541 label *label587
+  542 set :supplyBlockFromCore:target .thoriumGenerator
+  543 set :supplyBlockFromCore:item @coal
+  544 setaddr :supplyBlockFromCore*retaddr *label588 (h:*label588)
+  545 call *label28 *invalid :supplyBlockFromCore*retval (m:*label588) (h:*label588)
+  546 label *label588
+  547 label *label589
+  548 label *label590
+  549 label *label591
+  550 label *label592
+  551 label *label593
+  552 set :fetchBlock:block .thoriumContainer
+  553 set :fetchBlock:item @thorium
+  554 setaddr :fetchBlock*retaddr *label594 (h:*label594)
+  555 call *label26 *invalid :fetchBlock*retval (m:*label594) (h:*label594)
+  556 label *label594
+  557 sensor *tmp364 .core @thorium
+  558 jump *label596 lessThanEq *tmp364 400
+  559 write 4 .controller ".polyTarget"
+  560 label *label595
+  561 label *label596
+  562 label *label597
+  563 label *label598
   564 jump *label176 always
   565 label *label175
   566 read *tmp81 .controller ".monos"
 
   952 label *label197
   953 return :unpackCfg*retaddr
   954 end
-    * label *label38
-    * set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label279 (h:*label279)
-    * call *label11 *invalid :status1*retval (m:*label279) (h:*label279)
-    * label *label279
-    * sensor *tmp355 .thoriumBattery @totalPower
-    * jump *label280 greaterThanEq *tmp355 2000
-    * sensor *tmp358 .thoriumGenerator @coal
-    * jump *label282 notEqual *tmp358 0
-    * sensor *tmp361 .core @coal
-    * jump *label284 greaterThanEq *tmp361 50
-    * set :supplyBlock:block .thoriumGenerator
-    * set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label286 (h:*label286)
-    * call *label27 *invalid :supplyBlock*retval (m:*label286) (h:*label286)
-    * label *label286
-    * jump *label285 always
-    * label *label284
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label287 (h:*label287)
-    * call *label28 *invalid :supplyBlockFromCore*retval (m:*label287) (h:*label287)
-    * label *label287
-    * label *label285
-    * label *label282
-    * label *label283
-    * label *label280
-    * label *label281
-    * set :fetchBlock:block .thoriumContainer
-    * set :fetchBlock:item @thorium
-    * setaddr :fetchBlock*retaddr *label288 (h:*label288)
-    * call *label26 *invalid :fetchBlock*retval (m:*label288) (h:*label288)
-    * label *label288
-    * sensor *tmp364 .core @thorium
-    * jump *label289 lessThanEq *tmp364 400
-    * write 4 .controller ".polyTarget"
-    * label *label291
-    * label *label289
-    * label *label290
-    * label *label278
-    * return :supplyBase2*retaddr
-    * end
   955 label *label41
   956 label *label482
   957 op sign *tmp368 :meetTarget:copper

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-18 instructions):
 
   523 jump *label175 equal .thoriumContainer false
   524 label *label584
   525 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label585 (h:*label585)
-    * call *label11 *invalid :status1*retval (m:*label585) (h:*label585)
-    * label *label585
+  526 label *label599
+  527 write :status1:text processor2 ".status1"
+  528 label *label600
   529 sensor *tmp355 .thoriumBattery @totalPower
   530 jump *label592 greaterThanEq *tmp355 2000
   531 sensor *tmp358 .thoriumGenerator @coal
 
   567 jump *label178 lessThanEq *tmp81 1
   568 label *label580
   569 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label581 (h:*label581)
-    * call *label11 *invalid :status1*retval (m:*label581) (h:*label581)
-    * label *label581
+  570 label *label601
+  571 write :status1:text processor2 ".status1"
+  572 label *label602
   573 set :mineOre.2:ore @coal
   574 setaddr :mineOre.2*retaddr *label582 (h:*label582)
   575 call *label25 *invalid :mineOre.2*retval (m:*label582) (h:*label582)
 
   585 sensor *tmp291 AJEMJJ-graphite-press0 @coal
   586 jump *label514 greaterThanEq *tmp291 5
   587 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label512 (h:*label512)
-    * call *label11 *invalid :status1*retval (m:*label512) (h:*label512)
-    * label *label512
+  588 label *label603
+  589 write :status1:text processor2 ".status1"
+  590 label *label604
   591 set :supplyBlock:block AJEMJJ-graphite-press0
   592 set :supplyBlock:ore @coal
   593 setaddr :supplyBlock*retaddr *label513 (h:*label513)
 
   603 sensor *tmp297 ALMQJN-silicon-smelter4 @coal
   604 jump *label520 greaterThanEq *tmp297 5
   605 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label518 (h:*label518)
-    * call *label11 *invalid :status1*retval (m:*label518) (h:*label518)
-    * label *label518
+  606 label *label605
+  607 write :status1:text processor2 ".status1"
+  608 label *label606
   609 set :supplyBlock:block ALMQJN-silicon-smelter4
   610 set :supplyBlock:ore @coal
   611 setaddr :supplyBlock*retaddr *label519 (h:*label519)
 
   618 jump *label527 greaterThanEq *tmp300 5
   619 jump *label523 equal .scrap false
   620 set :status1:text "Goal 3a: scrap for silicon requirement"
-    * setaddr :status1*retaddr *label521 (h:*label521)
-    * call *label11 *invalid :status1*retval (m:*label521) (h:*label521)
-    * label *label521
+  621 label *label607
+  622 write :status1:text processor2 ".status1"
+  623 label *label608
   624 set :supplyBlock:block AXPRJe-pulverizer27
   625 set :supplyBlock:ore @scrap
   626 setaddr :supplyBlock*retaddr *label522 (h:*label522)
 
   630 jump *label526 always
   631 label *label523
   632 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label524 (h:*label524)
-    * call *label11 *invalid :status1*retval (m:*label524) (h:*label524)
-    * label *label524
+  633 label *label609
+  634 write :status1:text processor2 ".status1"
+  635 label *label610
   636 set :supplyBlock:block ALMQJN-silicon-smelter4
   637 set :supplyBlock:ore @sand
   638 setaddr :supplyBlock*retaddr *label525 (h:*label525)
 
   650 sensor *tmp307 AJRJM-combustion-generator3 @coal
   651 jump *label534 greaterThanEq *tmp307 2
   652 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label532 (h:*label532)
-    * call *label11 *invalid :status1*retval (m:*label532) (h:*label532)
-    * label *label532
+  653 label *label611
+  654 write :status1:text processor2 ".status1"
+  655 label *label612
   656 set :supplyBlock:block AJRJM-combustion-generator3
   657 set :supplyBlock:ore @coal
   658 setaddr :supplyBlock*retaddr *label533 (h:*label533)
 
   680 op mul *tmp322 A©JNJP-unloader6 .powerTarget
   681 jump *label543 greaterThanEq *tmp321 *tmp322
   682 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label541 (h:*label541)
-    * call *label11 *invalid :status1*retval (m:*label541) (h:*label541)
-    * label *label541
+  683 label *label613
+  684 write :status1:text processor2 ".status1"
+  685 label *label614
   686 set :mineOre.2:ore @coal
   687 setaddr :mineOre.2*retaddr *label542 (h:*label542)
   688 call *label25 *invalid :mineOre.2*retval (m:*label542) (h:*label542)
 
   693 jump *label550 greaterThanEq *tmp325 silicon
   694 jump *label546 equal .scrap false
   695 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label544 (h:*label544)
-    * call *label11 *invalid :status1*retval (m:*label544) (h:*label544)
-    * label *label544
+  696 label *label615
+  697 write :status1:text processor2 ".status1"
+  698 label *label616
   699 sensor :supplyBase0:coal .core @coal
   700 sensor :supplyBase0:sand .sandContainer @sand
   701 select *tmp332 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
 
   708 jump *label549 always
   709 label *label546
   710 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label547 (h:*label547)
-    * call *label11 *invalid :status1*retval (m:*label547) (h:*label547)
-    * label *label547
+  711 label *label617
+  712 write :status1:text processor2 ".status1"
+  713 label *label618
   714 sensor :supplyBase0:coal.1 .core @coal
   715 sensor :supplyBase0:sand.1 .core @sand
   716 select *tmp338 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   724 sensor *tmp339 .core @copper
   725 jump *label553 greaterThanEq *tmp339 copper
   726 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label551 (h:*label551)
-    * call *label11 *invalid :status1*retval (m:*label551) (h:*label551)
-    * label *label551
+  727 label *label619
+  728 write :status1:text processor2 ".status1"
+  729 label *label620
   730 set :mineOre.2:ore @copper
   731 setaddr :mineOre.2*retaddr *label552 (h:*label552)
   732 call *label25 *invalid :mineOre.2*retval (m:*label552) (h:*label552)
 
   736 sensor *tmp342 .core @lead
   737 jump *label556 greaterThanEq *tmp342 lead
   738 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label554 (h:*label554)
-    * call *label11 *invalid :status1*retval (m:*label554) (h:*label554)
-    * label *label554
+  739 label *label621
+  740 write :status1:text processor2 ".status1"
+  741 label *label622
   742 set :mineOre.2:ore @lead
   743 setaddr :mineOre.2*retaddr *label555 (h:*label555)
   744 call *label25 *invalid :mineOre.2*retval (m:*label555) (h:*label555)
 
   748 sensor *tmp345 .core @metaglass
   749 jump *label562 greaterThanEq *tmp345 metaglass
   750 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label557 (h:*label557)
-    * call *label11 *invalid :status1*retval (m:*label557) (h:*label557)
-    * label *label557
+  751 label *label623
+  752 write :status1:text processor2 ".status1"
+  753 label *label624
   754 jump *label559 equal .scrap false
   755 set :mineOre.1:ore @scrap
   756 set :mineOre.1:block .sandContainer
 
   767 jump *label568 always
   768 label *label562
   769 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label563 (h:*label563)
-    * call *label11 *invalid :status1*retval (m:*label563) (h:*label563)
-    * label *label563
+  770 label *label625
+  771 write :status1:text processor2 ".status1"
+  772 label *label626
   773 jump *label565 equal A¨SSJi-container31 false
   774 set :mineOre.1:ore @scrap
   775 set :mineOre.1:block A¨SSJi-container31
 
   798 jump *label578 always
   799 label *label575
   800 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label576 (h:*label576)
-    * call *label11 *invalid :status1*retval (m:*label576) (h:*label576)
-    * label *label576
+  801 label *label627
+  802 write :status1:text processor2 ".status1"
+  803 label *label628
   804 set :fetchBlock:block .titaniumDrill
   805 set :fetchBlock:item @titanium
   806 setaddr :fetchBlock*retaddr *label577 (h:*label577)
 
  1085 label *label316
  1086 return :buildBlock*retaddr
  1087 end
-    * label *label11
-    * write :status1:text processor2 ".status1"
-    * label *label319
-    * return :status1*retaddr
-    * end
  1088 label *label24
  1089 set :status2:text "Mining "
  1090 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   524 label *label584
   525 set :status1:text "Phase 2: servicing thorium drill"
   526 label *label599
-    * write :status1:text processor2 ".status1"
+  527 write "Phase 2: servicing thorium drill" processor2 ".status1"
   528 label *label600
   529 sensor *tmp355 .thoriumBattery @totalPower
   530 jump *label592 greaterThanEq *tmp355 2000
 
   568 label *label580
   569 set :status1:text "Phase 1: supplying base"
   570 label *label601
-    * write :status1:text processor2 ".status1"
+  571 write "Phase 1: supplying base" processor2 ".status1"
   572 label *label602
   573 set :mineOre.2:ore @coal
   574 setaddr :mineOre.2*retaddr *label582 (h:*label582)
 
   586 jump *label514 greaterThanEq *tmp291 5
   587 set :status1:text "Goal 1: graphite requirement"
   588 label *label603
-    * write :status1:text processor2 ".status1"
+  589 write "Goal 1: graphite requirement" processor2 ".status1"
   590 label *label604
   591 set :supplyBlock:block AJEMJJ-graphite-press0
   592 set :supplyBlock:ore @coal
 
   604 jump *label520 greaterThanEq *tmp297 5
   605 set :status1:text "Goal 2: coal for silicon requirement"
   606 label *label605
-    * write :status1:text processor2 ".status1"
+  607 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   608 label *label606
   609 set :supplyBlock:block ALMQJN-silicon-smelter4
   610 set :supplyBlock:ore @coal
 
   619 jump *label523 equal .scrap false
   620 set :status1:text "Goal 3a: scrap for silicon requirement"
   621 label *label607
-    * write :status1:text processor2 ".status1"
+  622 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   623 label *label608
   624 set :supplyBlock:block AXPRJe-pulverizer27
   625 set :supplyBlock:ore @scrap
 
   631 label *label523
   632 set :status1:text "Goal 3: sand for silicon requirement"
   633 label *label609
-    * write :status1:text processor2 ".status1"
+  634 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   635 label *label610
   636 set :supplyBlock:block ALMQJN-silicon-smelter4
   637 set :supplyBlock:ore @sand
 
   651 jump *label534 greaterThanEq *tmp307 2
   652 set :status1:text "Goal 4: supplying generator"
   653 label *label611
-    * write :status1:text processor2 ".status1"
+  654 write "Goal 4: supplying generator" processor2 ".status1"
   655 label *label612
   656 set :supplyBlock:block AJRJM-combustion-generator3
   657 set :supplyBlock:ore @coal
 
   681 jump *label543 greaterThanEq *tmp321 *tmp322
   682 set :status1:text "Goal 5: supplying generator"
   683 label *label613
-    * write :status1:text processor2 ".status1"
+  684 write "Goal 5: supplying generator" processor2 ".status1"
   685 label *label614
   686 set :mineOre.2:ore @coal
   687 setaddr :mineOre.2*retaddr *label542 (h:*label542)
 
   694 jump *label546 equal .scrap false
   695 set :status1:text "Goal 6: silicon requirement"
   696 label *label615
-    * write :status1:text processor2 ".status1"
+  697 write "Goal 6: silicon requirement" processor2 ".status1"
   698 label *label616
   699 sensor :supplyBase0:coal .core @coal
   700 sensor :supplyBase0:sand .sandContainer @sand
 
   709 label *label546
   710 set :status1:text "Goal 6: silicon requirement"
   711 label *label617
-    * write :status1:text processor2 ".status1"
+  712 write "Goal 6: silicon requirement" processor2 ".status1"
   713 label *label618
   714 sensor :supplyBase0:coal.1 .core @coal
   715 sensor :supplyBase0:sand.1 .core @sand
 
   725 jump *label553 greaterThanEq *tmp339 copper
   726 set :status1:text "Goal 7: copper requirement"
   727 label *label619
-    * write :status1:text processor2 ".status1"
+  728 write "Goal 7: copper requirement" processor2 ".status1"
   729 label *label620
   730 set :mineOre.2:ore @copper
   731 setaddr :mineOre.2*retaddr *label552 (h:*label552)
 
   737 jump *label556 greaterThanEq *tmp342 lead
   738 set :status1:text "Goal 8: lead requirement"
   739 label *label621
-    * write :status1:text processor2 ".status1"
+  740 write "Goal 8: lead requirement" processor2 ".status1"
   741 label *label622
   742 set :mineOre.2:ore @lead
   743 setaddr :mineOre.2*retaddr *label555 (h:*label555)
 
   749 jump *label562 greaterThanEq *tmp345 metaglass
   750 set :status1:text "Goal 9: metaglass requirement"
   751 label *label623
-    * write :status1:text processor2 ".status1"
+  752 write "Goal 9: metaglass requirement" processor2 ".status1"
   753 label *label624
   754 jump *label559 equal .scrap false
   755 set :mineOre.1:ore @scrap
 
   768 label *label562
   769 set :status1:text "Goal 10: supplying base"
   770 label *label625
-    * write :status1:text processor2 ".status1"
+  771 write "Goal 10: supplying base" processor2 ".status1"
   772 label *label626
   773 jump *label565 equal A¨SSJi-container31 false
   774 set :mineOre.1:ore @scrap
 
   799 label *label575
   800 set :status1:text "Goal 11: Fetching titanium"
   801 label *label627
-    * write :status1:text processor2 ".status1"
+  802 write "Goal 11: Fetching titanium" processor2 ".status1"
   803 label *label628
   804 set :fetchBlock:block .titaniumDrill
   805 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   522 write *tmp250 processor7 ".sandTarget"
   523 jump *label175 equal .thoriumContainer false
   524 label *label584
-    * set :status1:text "Phase 2: servicing thorium drill"
   525 label *label599
   526 write "Phase 2: servicing thorium drill" processor2 ".status1"
   527 label *label600
 
   565 read *tmp81 .controller ".monos"
   566 jump *label178 lessThanEq *tmp81 1
   567 label *label580
-    * set :status1:text "Phase 1: supplying base"
   568 label *label601
   569 write "Phase 1: supplying base" processor2 ".status1"
   570 label *label602
 
   582 jump *label516 greaterThanEq *tmp288 graphite
   583 sensor *tmp291 AJEMJJ-graphite-press0 @coal
   584 jump *label514 greaterThanEq *tmp291 5
-    * set :status1:text "Goal 1: graphite requirement"
   585 label *label603
   586 write "Goal 1: graphite requirement" processor2 ".status1"
   587 label *label604
 
   599 jump *label530 greaterThanEq *tmp294 silicon
   600 sensor *tmp297 ALMQJN-silicon-smelter4 @coal
   601 jump *label520 greaterThanEq *tmp297 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   602 label *label605
   603 write "Goal 2: coal for silicon requirement" processor2 ".status1"
   604 label *label606
 
   613 sensor *tmp300 ALMQJN-silicon-smelter4 @sand
   614 jump *label527 greaterThanEq *tmp300 5
   615 jump *label523 equal .scrap false
-    * set :status1:text "Goal 3a: scrap for silicon requirement"
   616 label *label607
   617 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
   618 label *label608
 
   624 set :supplyBase0:supplied true
   625 jump *label526 always
   626 label *label523
-    * set :status1:text "Goal 3: sand for silicon requirement"
   627 label *label609
   628 write "Goal 3: sand for silicon requirement" processor2 ".status1"
   629 label *label610
 
   643 jump *label536 greaterThanEq *tmp304 .powerTarget
   644 sensor *tmp307 AJRJM-combustion-generator3 @coal
   645 jump *label534 greaterThanEq *tmp307 2
-    * set :status1:text "Goal 4: supplying generator"
   646 label *label611
   647 write "Goal 4: supplying generator" processor2 ".status1"
   648 label *label612
 
   672 sensor *tmp321 AJTJK-battery1 @totalPower
   673 op mul *tmp322 A©JNJP-unloader6 .powerTarget
   674 jump *label543 greaterThanEq *tmp321 *tmp322
-    * set :status1:text "Goal 5: supplying generator"
   675 label *label613
   676 write "Goal 5: supplying generator" processor2 ".status1"
   677 label *label614
 
   684 sensor *tmp325 .core @silicon
   685 jump *label550 greaterThanEq *tmp325 silicon
   686 jump *label546 equal .scrap false
-    * set :status1:text "Goal 6: silicon requirement"
   687 label *label615
   688 write "Goal 6: silicon requirement" processor2 ".status1"
   689 label *label616
 
   698 label *label545
   699 jump *label549 always
   700 label *label546
-    * set :status1:text "Goal 6: silicon requirement"
   701 label *label617
   702 write "Goal 6: silicon requirement" processor2 ".status1"
   703 label *label618
 
   713 label *label550
   714 sensor *tmp339 .core @copper
   715 jump *label553 greaterThanEq *tmp339 copper
-    * set :status1:text "Goal 7: copper requirement"
   716 label *label619
   717 write "Goal 7: copper requirement" processor2 ".status1"
   718 label *label620
 
   724 label *label553
   725 sensor *tmp342 .core @lead
   726 jump *label556 greaterThanEq *tmp342 lead
-    * set :status1:text "Goal 8: lead requirement"
   727 label *label621
   728 write "Goal 8: lead requirement" processor2 ".status1"
   729 label *label622
 
   735 label *label556
   736 sensor *tmp345 .core @metaglass
   737 jump *label562 greaterThanEq *tmp345 metaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   738 label *label623
   739 write "Goal 9: metaglass requirement" processor2 ".status1"
   740 label *label624
 
   753 label *label561
   754 jump *label568 always
   755 label *label562
-    * set :status1:text "Goal 10: supplying base"
   756 label *label625
   757 write "Goal 10: supplying base" processor2 ".status1"
   758 label *label626
 
   783 label *label574
   784 jump *label578 always
   785 label *label575
-    * set :status1:text "Goal 11: Fetching titanium"
   786 label *label627
   787 write "Goal 11: Fetching titanium" processor2 ".status1"
   788 label *label628

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:170:1 (-4 instructions):
 
   540 label *label587
   541 set :supplyBlockFromCore:target .thoriumGenerator
   542 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label588 (h:*label588)
-    * call *label28 *invalid :supplyBlockFromCore*retval (m:*label588) (h:*label588)
-    * label *label588
+  543 label *label629
+  544 sensor *tmp416 :supplyBlockFromCore:target @itemCapacity
+  545 op min :supplyBlockFromCore:cap *tmp416 30
+  546 set :transportStatus:target :supplyBlockFromCore:cap
+  547 set :transportStatus:item :supplyBlockFromCore:item
+  548 setaddr :transportStatus*retaddr *label630 (h:*label630)
+  549 call *label14 *invalid :transportStatus*retval (m:*label630) (h:*label630)
+  550 label *label630
+  551 set :status2:text "Transferring "
+  552 set :status2:item :supplyBlockFromCore:item
+  553 set :status2:block :supplyBlockFromCore:target
+  554 setaddr :status2*retaddr *label631 (h:*label631)
+  555 call *label12 *invalid :status2*retval (m:*label631) (h:*label631)
+  556 label *label631
+  557 set :moveToEmpty:x .coreX
+  558 set :moveToEmpty:y .coreY
+  559 setaddr :moveToEmpty*retaddr *label632 (h:*label632)
+  560 call *label18 *invalid :moveToEmpty*retval (m:*label632) (h:*label632)
+  561 label *label632
+  562 setaddr :dropAll*retaddr *label633 (h:*label633)
+  563 call *label19 *invalid :dropAll*retval (m:*label633) (h:*label633)
+  564 label *label633
+  565 label *label634
+  566 ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  567 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  568 op notEqual *tmp419 :supplyBlockFromCore:unitItem null
+  569 op notEqual *tmp420 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  570 op land *tmp421 *tmp419 *tmp420
+  571 jump *label635 equal *tmp421 false
+  572 ucontrol itemDrop @air 1000
+  573 label *label635
+  574 label *label636
+  575 label *label637
+  576 sensor *tmp423 @unit :supplyBlockFromCore:item
+  577 op lessThan *tmp424 *tmp423 :supplyBlockFromCore:cap
+  578 sensor *tmp425 .core :supplyBlockFromCore:item
+  579 op land *tmp426 *tmp424 *tmp425
+  580 jump *label634 notEqual *tmp426 false
+  581 label *label638
+  582 set :depositItems:block :supplyBlockFromCore:target
+  583 set :depositItems:item :supplyBlockFromCore:item
+  584 setaddr :depositItems*retaddr *label639 (h:*label639)
+  585 call *label21 *invalid :depositItems*retval (m:*label639) (h:*label639)
+  586 label *label639
+  587 label *label640
   588 label *label589
   589 label *label590
   590 label *label591
 
  1214 label *label337
  1215 return :supplyBlock*retaddr
  1216 end
-    * label *label28
-    * sensor *tmp416 :supplyBlockFromCore:target @itemCapacity
-    * op min :supplyBlockFromCore:cap *tmp416 30
-    * set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label343 (h:*label343)
-    * call *label14 *invalid :transportStatus*retval (m:*label343) (h:*label343)
-    * label *label343
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label344 (h:*label344)
-    * call *label12 *invalid :status2*retval (m:*label344) (h:*label344)
-    * label *label344
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label345 (h:*label345)
-    * call *label18 *invalid :moveToEmpty*retval (m:*label345) (h:*label345)
-    * label *label345
-    * setaddr :dropAll*retaddr *label346 (h:*label346)
-    * call *label19 *invalid :dropAll*retval (m:*label346) (h:*label346)
-    * label *label346
-    * label *label347
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp419 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp420 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp421 *tmp419 *tmp420
-    * jump *label350 equal *tmp421 false
-    * ucontrol itemDrop @air 1000
-    * label *label350
-    * label *label351
-    * label *label348
-    * sensor *tmp423 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp424 *tmp423 :supplyBlockFromCore:cap
-    * sensor *tmp425 .core :supplyBlockFromCore:item
-    * op land *tmp426 *tmp424 *tmp425
-    * jump *label347 notEqual *tmp426 false
-    * label *label349
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label352 (h:*label352)
-    * call *label21 *invalid :depositItems*retval (m:*label352) (h:*label352)
-    * label *label352
-    * label *label342
-    * return :supplyBlockFromCore*retaddr
-    * end
  1217 label *label40
  1218 sensor *tmp427 .core @copper
  1219 jump *label354 greaterThanEq *tmp427 copper

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   541 set :supplyBlockFromCore:target .thoriumGenerator
   542 set :supplyBlockFromCore:item @coal
   543 label *label629
-    * sensor *tmp416 :supplyBlockFromCore:target @itemCapacity
+  544 sensor *tmp416 .thoriumGenerator @itemCapacity
   545 op min :supplyBlockFromCore:cap *tmp416 30
   546 set :transportStatus:target :supplyBlockFromCore:cap
-    * set :transportStatus:item :supplyBlockFromCore:item
+  547 set :transportStatus:item @coal
   548 setaddr :transportStatus*retaddr *label630 (h:*label630)
   549 call *label14 *invalid :transportStatus*retval (m:*label630) (h:*label630)
   550 label *label630
   551 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  552 set :status2:item @coal
+  553 set :status2:block .thoriumGenerator
   554 setaddr :status2*retaddr *label631 (h:*label631)
   555 call *label12 *invalid :status2*retval (m:*label631) (h:*label631)
   556 label *label631
 
   563 call *label19 *invalid :dropAll*retval (m:*label633) (h:*label633)
   564 label *label633
   565 label *label634
-    * ucontrol itemTake .core :supplyBlockFromCore:item :supplyBlockFromCore:cap
+  566 ucontrol itemTake .core @coal :supplyBlockFromCore:cap
   567 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   568 op notEqual *tmp419 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp420 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  569 op notEqual *tmp420 :supplyBlockFromCore:unitItem @coal
   570 op land *tmp421 *tmp419 *tmp420
   571 jump *label635 equal *tmp421 false
   572 ucontrol itemDrop @air 1000
   573 label *label635
   574 label *label636
   575 label *label637
-    * sensor *tmp423 @unit :supplyBlockFromCore:item
+  576 sensor *tmp423 @unit @coal
   577 op lessThan *tmp424 *tmp423 :supplyBlockFromCore:cap
-    * sensor *tmp425 .core :supplyBlockFromCore:item
+  578 sensor *tmp425 .core @coal
   579 op land *tmp426 *tmp424 *tmp425
   580 jump *label634 notEqual *tmp426 false
   581 label *label638
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  582 set :depositItems:block .thoriumGenerator
+  583 set :depositItems:item @coal
   584 setaddr :depositItems*retaddr *label639 (h:*label639)
   585 call *label21 *invalid :depositItems*retval (m:*label639) (h:*label639)
   586 label *label639

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   538 label *label586
   539 jump *label589 always
   540 label *label587
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   541 label *label629
   542 sensor *tmp416 .thoriumGenerator @itemCapacity
   543 op min :supplyBlockFromCore:cap *tmp416 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1275 end
  1276 label *label18
  1277 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label371 (h:*label371)
-    * call *label13 *invalid :status3*retval (m:*label371) (h:*label371)
-    * label *label371
+ 1278 label *label641
+ 1279 write :status3:text processor2 ".status3"
+ 1280 label *label642
  1281 label *label372
  1282 sensor *tmp448 @unit @firstItem
  1283 jump *label375 equal *tmp448 null
 
  1305 end
  1306 label *label21
  1307 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label382 (h:*label382)
-    * call *label13 *invalid :status3*retval (m:*label382) (h:*label382)
-    * label *label382
+ 1308 label *label643
+ 1309 write :status3:text processor2 ".status3"
+ 1310 label *label644
  1311 sensor *tmp455 @unit @firstItem
  1312 jump *label383 notEqual *tmp455 :depositItems:item
  1313 set :moveToBlock:block :depositItems:block
 
  1368 label *label397
  1369 label *label398
  1370 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label400 (h:*label400)
-    * call *label13 *invalid :status3*retval (m:*label400) (h:*label400)
-    * label *label400
+ 1371 label *label645
+ 1372 write :status3:text processor2 ".status3"
+ 1373 label *label646
  1374 op add :mineOre:stop @second 10
  1375 label *label401
  1376 sensor :mineOre:item @unit @firstItem
 
  1409 label *label393
  1410 return :mineOre*retaddr
  1411 end
-    * label *label13
-    * write :status3:text processor2 ".status3"
-    * label *label414
-    * return :status3*retaddr
-    * end
  1412 label *label20
  1413 sensor *tmp482 :moveToBlock:block @x
  1414 sensor *tmp483 :moveToBlock:block @y
 
  1435 end
  1436 label *label16
  1437 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label422 (h:*label422)
-    * call *label13 *invalid :status3*retval (m:*label422) (h:*label422)
-    * label *label422
+ 1438 label *label647
+ 1439 write :status3:text processor2 ".status3"
+ 1440 label *label648
  1441 op sub *tmp490 :moveTo:radius 0.5
  1442 label *label423
  1443 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1276 label *label18
  1277 set :status3:text "Moving..."
  1278 label *label641
-    * write :status3:text processor2 ".status3"
+ 1279 write "Moving..." processor2 ".status3"
  1280 label *label642
  1281 label *label372
  1282 sensor *tmp448 @unit @firstItem
 
  1306 label *label21
  1307 set :status3:text "Depositing..."
  1308 label *label643
-    * write :status3:text processor2 ".status3"
+ 1309 write "Depositing..." processor2 ".status3"
  1310 label *label644
  1311 sensor *tmp455 @unit @firstItem
  1312 jump *label383 notEqual *tmp455 :depositItems:item
 
  1369 label *label398
  1370 set :status3:text "Mining..."
  1371 label *label645
-    * write :status3:text processor2 ".status3"
+ 1372 write "Mining..." processor2 ".status3"
  1373 label *label646
  1374 op add :mineOre:stop @second 10
  1375 label *label401
 
  1436 label *label16
  1437 set :status3:text "Moving..."
  1438 label *label647
-    * write :status3:text processor2 ".status3"
+ 1439 write "Moving..." processor2 ".status3"
  1440 label *label648
  1441 op sub *tmp490 :moveTo:radius 0.5
  1442 label *label423

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1274 return :transportStatus*retaddr
  1275 end
  1276 label *label18
-    * set :status3:text "Moving..."
  1277 label *label641
  1278 write "Moving..." processor2 ".status3"
  1279 label *label642
 
  1303 return :dropAll*retaddr
  1304 end
  1305 label *label21
-    * set :status3:text "Depositing..."
  1306 label *label643
  1307 write "Depositing..." processor2 ".status3"
  1308 label *label644
 
  1365 label *label399
  1366 label *label397
  1367 label *label398
-    * set :status3:text "Mining..."
  1368 label *label645
  1369 write "Mining..." processor2 ".status3"
  1370 label *label646
 
  1431 return :locateOre*retaddr
  1432 end
  1433 label *label16
-    * set :status3:text "Moving..."
  1434 label *label647
  1435 write "Moving..." processor2 ".status3"
  1436 label *label648

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1310 jump *label383 notEqual *tmp455 :depositItems:item
  1311 set :moveToBlock:block :depositItems:block
  1312 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label385 (h:*label385)
-    * call *label20 *invalid :moveToBlock*retval (m:*label385) (h:*label385)
-    * label *label385
+ 1313 label *label649
+ 1314 sensor *tmp482 :moveToBlock:block @x
+ 1315 sensor *tmp483 :moveToBlock:block @y
+ 1316 set :moveTo:x *tmp482
+ 1317 set :moveTo:y *tmp483
+ 1318 set :moveTo:radius :moveToBlock:radius
+ 1319 setaddr :moveTo*retaddr *label650 (h:*label650)
+ 1320 call *label16 *invalid :moveTo*retval (m:*label650) (h:*label650)
+ 1321 label *label650
+ 1322 label *label651
  1323 sensor :depositItems:cap :depositItems:block @itemCapacity
  1324 label *label386
  1325 ucontrol itemDrop :depositItems:block 30
 
  1413 label *label393
  1414 return :mineOre*retaddr
  1415 end
-    * label *label20
-    * sensor *tmp482 :moveToBlock:block @x
-    * sensor *tmp483 :moveToBlock:block @y
-    * set :moveTo:x *tmp482
-    * set :moveTo:y *tmp483
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label416 (h:*label416)
-    * call *label16 *invalid :moveTo*retval (m:*label416) (h:*label416)
-    * label *label416
-    * label *label415
-    * return :moveToBlock*retaddr
-    * end
  1416 label *label22
  1417 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
  1418 jump *label418 notEqual *tmp484 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1311 set :moveToBlock:block :depositItems:block
  1312 set :moveToBlock:radius 6
  1313 label *label649
-    * sensor *tmp482 :moveToBlock:block @x
-    * sensor *tmp483 :moveToBlock:block @y
+ 1314 sensor *tmp482 :depositItems:block @x
+ 1315 sensor *tmp483 :depositItems:block @y
  1316 set :moveTo:x *tmp482
  1317 set :moveTo:y *tmp483
-    * set :moveTo:radius :moveToBlock:radius
+ 1318 set :moveTo:radius 6
  1319 setaddr :moveTo*retaddr *label650 (h:*label650)
  1320 call *label16 *invalid :moveTo*retval (m:*label650) (h:*label650)
  1321 label *label650

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1308 label *label644
  1309 sensor *tmp455 @unit @firstItem
  1310 jump *label383 notEqual *tmp455 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1311 label *label649
  1312 sensor *tmp482 :depositItems:block @x
  1313 sensor *tmp483 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1353 call *label14 *invalid :transportStatus*retval (m:*label394) (h:*label394)
  1354 label *label394
  1355 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label395 (h:*label395)
-    * call *label22 *invalid :locateOre*retval (m:*label395) (h:*label395)
-    * label *label395
+ 1356 label *label652
+ 1357 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
+ 1358 jump *label654 notEqual *tmp484 false
+ 1359 set :error:error "Cannot locate ore"
+ 1360 setaddr :error*retaddr *label653 (h:*label653)
+ 1361 call *label15 *invalid :error*retval (m:*label653) (h:*label653)
+ 1362 label *label653
+ 1363 label *label654
+ 1364 label *label655
+ 1365 label *label656
  1366 set :mineOre:x :locateOre:x
  1367 set :mineOre:y :locateOre:y
  1368 set :moveToEmpty:x :locateOre:x
 
  1418 label *label393
  1419 return :mineOre*retaddr
  1420 end
-    * label *label22
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
-    * jump *label418 notEqual *tmp484 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label420 (h:*label420)
-    * call *label15 *invalid :error*retval (m:*label420) (h:*label420)
-    * label *label420
-    * label *label418
-    * label *label419
-    * label *label417
-    * return :locateOre*retaddr
-    * end
  1421 label *label16
  1422 label *label647
  1423 write "Moving..." processor2 ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1354 label *label394
  1355 set :locateOre:ore :mineOre:ore
  1356 label *label652
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
+ 1357 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
  1358 jump *label654 notEqual *tmp484 false
  1359 set :error:error "Cannot locate ore"
  1360 setaddr :error*retaddr *label653 (h:*label653)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1352 setaddr :transportStatus*retaddr *label394 (h:*label394)
  1353 call *label14 *invalid :transportStatus*retval (m:*label394) (h:*label394)
  1354 label *label394
-    * set :locateOre:ore :mineOre:ore
  1355 label *label652
  1356 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
  1357 jump *label654 notEqual *tmp484 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1314 set :moveTo:x *tmp482
  1315 set :moveTo:y *tmp483
  1316 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label650 (h:*label650)
-    * call *label16 *invalid :moveTo*retval (m:*label650) (h:*label650)
-    * label *label650
+ 1317 label *label657
+ 1318 label *label658
+ 1319 write "Moving..." processor2 ".status3"
+ 1320 label *label659
+ 1321 op sub *tmp490 :moveTo:radius 0.5
+ 1322 label *label660
+ 1323 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488
+ 1324 jump *label662 notEqual *tmp488 false
+ 1325 ucontrol approach :moveTo:x :moveTo:y *tmp490
+ 1326 label *label661
+ 1327 jump *label660 always
+ 1328 label *label662
+ 1329 label *label663
  1330 label *label651
  1331 sensor :depositItems:cap :depositItems:block @itemCapacity
  1332 label *label386
 
  1427 label *label393
  1428 return :mineOre*retaddr
  1429 end
-    * label *label16
-    * label *label647
-    * write "Moving..." processor2 ".status3"
-    * label *label648
-    * op sub *tmp490 :moveTo:radius 0.5
-    * label *label423
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488
-    * jump *label425 notEqual *tmp488 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp490
-    * label *label424
-    * jump *label423 always
-    * label *label425
-    * label *label421
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1318 label *label658
  1319 write "Moving..." processor2 ".status3"
  1320 label *label659
-    * op sub *tmp490 :moveTo:radius 0.5
+ 1321 op sub *tmp490 6 0.5
  1322 label *label660
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp488
+ 1323 ucontrol within *tmp482 *tmp483 6 *tmp488
  1324 jump *label662 notEqual *tmp488 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp490
+ 1325 ucontrol approach *tmp482 *tmp483 5.5
  1326 label *label661
  1327 jump *label660 always
  1328 label *label662

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1311 label *label649
  1312 sensor *tmp482 :depositItems:block @x
  1313 sensor *tmp483 :depositItems:block @y
-    * set :moveTo:x *tmp482
-    * set :moveTo:y *tmp483
-    * set :moveTo:radius 6
  1314 label *label657
  1315 label *label658
  1316 write "Moving..." processor2 ".status3"
  1317 label *label659
-    * op sub *tmp490 6 0.5
  1318 label *label660
  1319 ucontrol within *tmp482 *tmp483 6 *tmp488
  1320 jump *label662 notEqual *tmp488 false

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
    51 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
    52 label *label61
    53 set .powerTarget 400
-    * jump *label62 equal true false
    54 set :buildBlockFromCfg.1:cfg "AXPRJe-pulverizer27"
    55 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
    56 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   117 set .titaniumDrill *tmp137
   118 write *tmp137 processor2 ".titaniumDrill"
   119 set .sandContainer .core
-    * jump *label76 equal true false
   120 set :buildBlockFromCfg.1:cfg "A¨SSJi-container31"
   121 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   122 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   276 setaddr :buildBlockFromCfg.1*retaddr *label119 (h:*label119)
   277 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label119) (h:*label119)
   278 label *label119
-    * jump *label120 equal true false
   279 set :buildBlockFromCfg.1:cfg "AXTNJj-pulverizer32"
   280 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   281 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
   112 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
   113 jump *label75 equal *tmp154 false
   114 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label69 always
   115 label *label69
   116 set .titaniumDrill *tmp137
   117 write *tmp137 processor2 ".titaniumDrill"
 
   700 sensor *tmp313 .core @titanium
   701 op sub *tmp314 titanium *tmp313
   702 op min *tmp312 5 *tmp314
-    * jump *label540 always
   703 label *label540
   704 sensor *tmp316 .titaniumDrill @titanium
   705 jump *label575 greaterThanEq *tmp316 *tmp312
 
   892 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   893 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   894 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label187 always
   895 label *label187
   896 return :buildBlockFromCfg*retaddr
   897 end
 
  1100 write false .controller ":buildStop*finished"
  1101 write 2 .controller "@counter"
  1102 set :buildBlock*retval :buildBlock:built
-    * jump *label316 always
  1103 label *label316
  1104 return :buildBlock*retaddr
  1105 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   164 write .core :buildBlockFromCfg*retval ".core"
   165 write bank1 :buildBlockFromCfg*retval ".bank"
   166 label *label441
-    * read *tmp168 @this "AJEMJJ-graphite-press0"
+  167 set *tmp168 AJEMJJ-graphite-press0
   168 write *tmp168 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   169 label *label442
   170 label *label445
-    * read *tmp168 @this "AJTJK-battery1"
+  171 set *tmp168 AJTJK-battery1
   172 write *tmp168 :buildBlockFromCfg*retval "AJTJK-battery1"
   173 label *label446
   174 label *label449
-    * read *tmp168 @this "ALTJL-battery2"
+  175 set *tmp168 ALTJL-battery2
   176 write *tmp168 :buildBlockFromCfg*retval "ALTJL-battery2"
   177 label *label450
   178 label *label453
-    * read *tmp168 @this "AJRJM-combustion-generator3"
+  179 set *tmp168 AJRJM-combustion-generator3
   180 write *tmp168 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   181 label *label454
   182 label *label457
-    * read *tmp168 @this "ALMQJN-silicon-smelter4"
+  183 set *tmp168 ALMQJN-silicon-smelter4
   184 write *tmp168 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   185 label *label458
   186 label *label461
-    * read *tmp168 @this "A{LNJO-inverted-sorter5"
+  187 set *tmp168 A{LNJO-inverted-sorter5
   188 write *tmp168 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   189 label *label462
   190 label *label465
-    * read *tmp168 @this "A©JNJP-unloader6"
+  191 set *tmp168 A©JNJP-unloader6
   192 write *tmp168 :buildBlockFromCfg*retval "A©JNJP-unloader6"
   193 label *label466
   194 label *label469
-    * read *tmp168 @this "A{HNJQ-inverted-sorter7"
+  195 set *tmp168 A{HNJQ-inverted-sorter7
   196 write *tmp168 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
   197 label *label470
   198 label *label473
-    * read *tmp168 @this "AJPJR-underflow-gate8"
+  199 set *tmp168 AJPJR-underflow-gate8
   200 write *tmp168 :buildBlockFromCfg*retval "AJPJR-underflow-gate8"
   201 label *label474
   202 label *label477
-    * read *tmp168 @this "AÕFFJS-micro-processor9"
+  203 set *tmp168 AÕFFJS-micro-processor9
   204 write *tmp168 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
   205 label *label478
   206 label *label89
 
   974 label *label41
   975 label *label482
   976 op sign *tmp368 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp368
+  977 set :meetTarget:count *tmp368
   978 label *label483
   979 label *label486
   980 op sign *tmp368 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-6 instructions):
 
   724 label *label616
   725 sensor :supplyBase0:coal .core @coal
   726 sensor :supplyBase0:sand .sandContainer @sand
-    * select *tmp332 lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
-    * select *tmp334 lessThan :supplyBase0:coal :supplyBase0:sand .core .sandContainer
-    * set :mineOre.1:ore *tmp332
-    * set :mineOre.1:block *tmp334
+  727 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
+  728 select :mineOre.1:block lessThan :supplyBase0:coal :supplyBase0:sand .core .sandContainer
   729 setaddr :mineOre.1*retaddr *label545 (h:*label545)
   730 call *label24 *invalid :mineOre.1*retval (m:*label545) (h:*label545)
   731 label *label545
 
   736 label *label618
   737 sensor :supplyBase0:coal.1 .core @coal
   738 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp338 lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.2:ore *tmp338
+  739 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   740 setaddr :mineOre.2*retaddr *label548 (h:*label548)
   741 call *label25 *invalid :mineOre.2*retval (m:*label548) (h:*label548)
   742 label *label548
 
   800 sensor *tmp351 .core @sand
   801 op lessThanEq *tmp352 *tmp350 *tmp351
   802 op or *tmp353 .scrap *tmp352
-    * select *tmp354 notEqual *tmp353 false @coal @sand
-    * set :mineOre.2:ore *tmp354
+  803 select :mineOre.2:ore notEqual *tmp353 false @coal @sand
   804 setaddr :mineOre.2*retaddr *label566 (h:*label566)
   805 call *label25 *invalid :mineOre.2*retval (m:*label566) (h:*label566)
   806 label *label566
 
   969 end
   970 label *label41
   971 label *label482
-    * op sign *tmp368 :meetTarget:copper
-    * set :meetTarget:count *tmp368
+  972 op sign :meetTarget:count :meetTarget:copper
   973 label *label483
   974 label *label486
   975 op sign *tmp368 :meetTarget:lead
 
  1091 wait 1e-15
  1092 read *tmp393 processor5 ":buildBlockAt*finished"
  1093 jump *label318 equal *tmp393 false
-    * read :buildBlock:built processor5 ":buildBlockAt*retval"
+ 1094 read :buildBlock*retval processor5 ":buildBlockAt*retval"
  1095 write false .controller ":buildStop*finished"
  1096 write 2 .controller "@counter"
-    * set :buildBlock*retval :buildBlock:built
  1097 label *label316
  1098 return :buildBlock*retaddr
  1099 end

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1282 label *label378
  1283 sensor *tmp453 @unit @firstItem
  1284 jump *label380 equal *tmp453 null
+ 1285 label *label664
  1286 ucontrol itemDrop @air 1000
  1287 label *label379
-    * jump *label378 always
+ 1288 sensor *tmp453 @unit @firstItem
+ 1289 jump *label664 notEqual *tmp453 null
  1290 label *label380
  1291 label *label377
  1292 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1307 label *label660
  1308 ucontrol within *tmp482 *tmp483 6 *tmp488
  1309 jump *label662 notEqual *tmp488 false
+ 1310 label *label665
  1311 ucontrol approach *tmp482 *tmp483 5.5
  1312 label *label661
-    * jump *label660 always
+ 1313 ucontrol within *tmp482 *tmp483 6 *tmp488
+ 1314 jump *label665 equal *tmp488 false
  1315 label *label662
  1316 label *label663
  1317 label *label651

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1329 label *label389
  1330 sensor *tmp463 @unit @firstItem
  1331 jump *label391 equal *tmp463 null
+ 1332 label *label666
  1333 ucontrol itemDrop @air 1000
  1334 label *label390
-    * jump *label389 always
+ 1335 sensor *tmp463 @unit @firstItem
+ 1336 jump *label666 notEqual *tmp463 null
  1337 label *label391
  1338 label *label384
  1339 set :transportStatus:target 0

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    27 ubind @poly
    28 set .builder @unit
    29 ulocate building core false @copper .coreX .coreY *tmp119 .core
-    * label *label56
    30 jump *label55 equal .core null
-    * label *label57
    31 ulocate ore core true @sand *tmp122 *tmp123 *tmp121 *tmp124
    32 set .scrap true
    33 write true processor2 ".scrap"
 
    62 setaddr :buildBlockFromCfg.1*retaddr *label66 (h:*label66)
    63 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label66) (h:*label66)
    64 label *label66
-    * label *label62
-    * label *label63
    65 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
    66 setaddr :buildBlockFromCfg.1*retaddr *label67 (h:*label67)
    67 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label67) (h:*label67)
 
    97 call *label15 *invalid :error*retval (m:*label74) (h:*label74)
    98 label *label74
    99 label *label72
-    * label *label73
   100 write @pneumatic-drill processor2 ".nextBlock"
   101 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
   102 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
   107 read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
   108 jump *label75 equal *tmp154 false
   109 read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label69
   110 set .titaniumDrill *tmp137
   111 write *tmp137 processor2 ".titaniumDrill"
   112 set .sandContainer .core
 
   131 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   132 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   133 label *label82
-    * label *label76
-    * label *label77
   134 write .sandContainer processor7 ".sandContainer"
   135 set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"
   136 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
 
   155 write processor2 :buildBlockFromCfg*retval ".display"
   156 write .core :buildBlockFromCfg*retval ".core"
   157 write bank1 :buildBlockFromCfg*retval ".bank"
-    * label *label441
   158 set *tmp168 AJEMJJ-graphite-press0
   159 write *tmp168 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
-    * label *label442
-    * label *label445
   160 set *tmp168 AJTJK-battery1
   161 write *tmp168 :buildBlockFromCfg*retval "AJTJK-battery1"
-    * label *label446
-    * label *label449
   162 set *tmp168 ALTJL-battery2
   163 write *tmp168 :buildBlockFromCfg*retval "ALTJL-battery2"
-    * label *label450
-    * label *label453
   164 set *tmp168 AJRJM-combustion-generator3
   165 write *tmp168 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
-    * label *label454
-    * label *label457
   166 set *tmp168 ALMQJN-silicon-smelter4
   167 write *tmp168 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
-    * label *label458
-    * label *label461
   168 set *tmp168 A{LNJO-inverted-sorter5
   169 write *tmp168 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
-    * label *label462
-    * label *label465
   170 set *tmp168 A©JNJP-unloader6
   171 write *tmp168 :buildBlockFromCfg*retval "A©JNJP-unloader6"
-    * label *label466
-    * label *label469
   172 set *tmp168 A{HNJQ-inverted-sorter7
   173 write *tmp168 :buildBlockFromCfg*retval "A{HNJQ-inverted-sorter7"
-    * label *label470
-    * label *label473
   174 set *tmp168 AJPJR-underflow-gate8
   175 write *tmp168 :buildBlockFromCfg*retval "AJPJR-underflow-gate8"
-    * label *label474
-    * label *label477
   176 set *tmp168 AÕFFJS-micro-processor9
   177 write *tmp168 :buildBlockFromCfg*retval "AÕFFJS-micro-processor9"
-    * label *label478
-    * label *label89
   178 set :buildBlockFromCfg.1:cfg "AFHJT-power-node10"
   179 setaddr :buildBlockFromCfg.1*retaddr *label100 (h:*label100)
   180 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label100) (h:*label100)
 
   192 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   193 label *label103
   194 write 1 .controller ".flareTarget"
-    * label *label104
   195 write 5 .controller ".monoTarget"
-    * label *label105
   196 write 85 .controller ".pressTarget"
   197 write 150 .controller ".smelterTarget"
   198 write 30 .controller ".kilnTarget"
 
   209 jump *label111 greaterThanEq *tmp173 300
   210 jump *label109 always
   211 label *label111
-    * label *label112
-    * label *label108
   212 read *tmp81 .controller ".monos"
   213 jump *label107 lessThan *tmp81 3
   214 label *label109
 
   246 setaddr :buildBlockFromCfg.1*retaddr *label122 (h:*label122)
   247 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label122) (h:*label122)
   248 label *label122
-    * label *label120
-    * label *label121
   249 set :buildBlockFromCfg.1:cfg "A©HFJa-unloader23"
   250 setaddr :buildBlockFromCfg.1*retaddr *label123 (h:*label123)
   251 call *label45 *invalid :buildBlockFromCfg.1*retval (m:*label123) (h:*label123)
 
   262 set .siliconMonoSurplus 20
   263 set .metaglassSurplus 100
   264 write 4 .controller ".monoTarget"
-    * label *label126
   265 write 3 .controller ".polyTarget"
-    * label *label127
   266 setaddr :buildUnits*retaddr *label128 (h:*label128)
   267 call *label47 *invalid :buildUnits*retval (m:*label128) (h:*label128)
   268 label *label128
 
   272 setaddr :supplyBase*retaddr *label132 (h:*label132)
   273 call *label39 *invalid :supplyBase*retval (m:*label132) (h:*label132)
   274 label *label132
-    * label *label130
   275 jump *label129 always
   276 label *label131
   277 write 2 .controller ".flareTarget"
-    * label *label133
   278 label *label134
   279 read *tmp80 .controller ".flares"
   280 jump *label136 greaterThanEq *tmp80 2
   281 setaddr :supplyBase*retaddr *label137 (h:*label137)
   282 call *label39 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   283 label *label137
-    * label *label135
   284 jump *label134 always
   285 label *label136
   286 write @ore-titanium processor2 ".nextBlock"
 
   306 jump *label139 equal *tmp203 false
   307 write false processor3 ":stopLocation*finished"
   308 write 3 processor3 "@counter"
-    * label *label138
   309 write null processor2 ".nextBlock"
   310 set .graphiteSurplus 10
   311 set .metaglassSurplus 50
 
   335 call *label15 *invalid :error*retval (m:*label146) (h:*label146)
   336 label *label146
   337 label *label144
-    * label *label145
   338 write @laser-drill processor5 ":buildBlockAt:block"
   339 read *tmp52 processor3 ".drillX"
   340 write *tmp52 processor5 ":buildBlockAt:x"
 
   408 wait 1e-15
   409 read *tmp233 processor6 ":setThoriumContainer*finished"
   410 jump *label158 equal *tmp233 false
-    * label *label140
   411 write null processor2 ".nextBlock"
   412 label *label159
   413 read *tmp82 .controller ".polys"
 
   415 setaddr :supplyBase*retaddr *label162 (h:*label162)
   416 call *label39 *invalid :supplyBase*retval (m:*label162) (h:*label162)
   417 label *label162
-    * label *label160
   418 jump *label159 always
   419 label *label161
   420 write 0 .controller ".monoTarget"
-    * label *label163
   421 write 3209 .controller ".powerTarget"
   422 set .siliconMonoSurplus 120
   423 set .leadSurplus 0
 
   427 label *label164
   428 set .metaglassSurplus 10
   429 write 0 .controller ".polyTarget"
-    * label *label165
   430 write 0 .controller ".flareTarget"
-    * label *label166
   431 write 1 .controller ".megaTarget"
-    * label *label167
   432 setaddr :buildUnits*retaddr *label168 (h:*label168)
   433 call *label47 *invalid :buildUnits*retval (m:*label168) (h:*label168)
   434 label *label168
 
   442 label *label169
   443 ucontrol move :x :y
   444 ucontrol payEnter
-    * label *label170
   445 read *tmp83 .controller ".megas"
   446 jump *label169 equal *tmp83 false
-    * label *label171
   447 write true .controller ".finished"
   448 control enabled processor1 false
   449 control enabled processor8 false
 
   452 control enabled processor3 false
   453 control enabled processor5 false
   454 control enabled processor11 false
-    * label *label172
   455 end
   456 label *label15
   457 set .ERROR :error:error
   458 stop
-    * label *label173
   459 return :error*retaddr
   460 end
   461 label *label39
 
   465 op max *tmp250 0 *tmp249
   466 write *tmp250 processor7 ".sandTarget"
   467 jump *label175 equal .thoriumContainer false
-    * label *label584
-    * label *label599
   468 write "Phase 2: servicing thorium drill" processor2 ".status1"
-    * label *label600
   469 sensor *tmp355 .thoriumBattery @totalPower
   470 jump *label592 greaterThanEq *tmp355 2000
   471 sensor *tmp358 .thoriumGenerator @coal
 
   479 label *label586
   480 jump *label589 always
   481 label *label587
-    * label *label629
   482 sensor *tmp416 .thoriumGenerator @itemCapacity
   483 op min :supplyBlockFromCore:cap *tmp416 30
   484 set :transportStatus:target :supplyBlockFromCore:cap
 
   509 jump *label635 equal *tmp421 false
   510 ucontrol itemDrop @air 1000
   511 label *label635
-    * label *label636
-    * label *label637
   512 sensor *tmp423 @unit @coal
   513 op lessThan *tmp424 *tmp423 :supplyBlockFromCore:cap
   514 sensor *tmp425 .core @coal
   515 op land *tmp426 *tmp424 *tmp425
   516 jump *label634 notEqual *tmp426 false
-    * label *label638
   517 set :depositItems:block .thoriumGenerator
   518 set :depositItems:item @coal
   519 setaddr :depositItems*retaddr *label639 (h:*label639)
   520 call *label21 *invalid :depositItems*retval (m:*label639) (h:*label639)
   521 label *label639
-    * label *label640
   522 label *label589
   523 label *label590
-    * label *label591
   524 label *label592
-    * label *label593
   525 set :fetchBlock:block .thoriumContainer
   526 set :fetchBlock:item @thorium
   527 setaddr :fetchBlock*retaddr *label594 (h:*label594)
 
   530 sensor *tmp364 .core @thorium
   531 jump *label596 lessThanEq *tmp364 400
   532 write 4 .controller ".polyTarget"
-    * label *label595
   533 label *label596
-    * label *label597
-    * label *label598
   534 jump *label176 always
   535 label *label175
   536 read *tmp81 .controller ".monos"
   537 jump *label178 lessThanEq *tmp81 1
-    * label *label580
-    * label *label601
   538 write "Phase 1: supplying base" processor2 ".status1"
-    * label *label602
   539 set :mineOre.2:ore @coal
   540 setaddr :mineOre.2*retaddr *label582 (h:*label582)
   541 call *label25 *invalid :mineOre.2*retval (m:*label582) (h:*label582)
   542 label *label582
-    * label *label583
   543 jump *label179 always
   544 label *label178
-    * label *label511
   545 set :supplyBase0:supplied false
   546 jump *label538 notEqual A©JNJP-unloader6 null
   547 sensor *tmp288 .core @graphite
   548 jump *label516 greaterThanEq *tmp288 graphite
   549 sensor *tmp291 AJEMJJ-graphite-press0 @coal
   550 jump *label514 greaterThanEq *tmp291 5
-    * label *label603
   551 write "Goal 1: graphite requirement" processor2 ".status1"
-    * label *label604
   552 set :supplyBlock:block AJEMJJ-graphite-press0
   553 set :supplyBlock:ore @coal
   554 setaddr :supplyBlock*retaddr *label513 (h:*label513)
 
   556 label *label513
   557 set :supplyBase0:supplied true
   558 label *label514
-    * label *label515
   559 label *label516
-    * label *label517
   560 sensor *tmp294 .core @silicon
   561 jump *label530 greaterThanEq *tmp294 silicon
   562 sensor *tmp297 ALMQJN-silicon-smelter4 @coal
   563 jump *label520 greaterThanEq *tmp297 5
-    * label *label605
   564 write "Goal 2: coal for silicon requirement" processor2 ".status1"
-    * label *label606
   565 set :supplyBlock:block ALMQJN-silicon-smelter4
   566 set :supplyBlock:ore @coal
   567 setaddr :supplyBlock*retaddr *label519 (h:*label519)
 
   573 sensor *tmp300 ALMQJN-silicon-smelter4 @sand
   574 jump *label527 greaterThanEq *tmp300 5
   575 jump *label523 equal .scrap false
-    * label *label607
   576 write "Goal 3a: scrap for silicon requirement" processor2 ".status1"
-    * label *label608
   577 set :supplyBlock:block AXPRJe-pulverizer27
   578 set :supplyBlock:ore @scrap
   579 setaddr :supplyBlock*retaddr *label522 (h:*label522)
 
   582 set :supplyBase0:supplied true
   583 jump *label526 always
   584 label *label523
-    * label *label609
   585 write "Goal 3: sand for silicon requirement" processor2 ".status1"
-    * label *label610
   586 set :supplyBlock:block ALMQJN-silicon-smelter4
   587 set :supplyBlock:ore @sand
   588 setaddr :supplyBlock*retaddr *label525 (h:*label525)
 
   591 set :supplyBase0:supplied true
   592 label *label526
   593 label *label527
-    * label *label528
   594 label *label529
   595 label *label530
-    * label *label531
   596 sensor *tmp304 AJTJK-battery1 @totalPower
   597 jump *label536 greaterThanEq *tmp304 .powerTarget
   598 sensor *tmp307 AJRJM-combustion-generator3 @coal
   599 jump *label534 greaterThanEq *tmp307 2
-    * label *label611
   600 write "Goal 4: supplying generator" processor2 ".status1"
-    * label *label612
   601 set :supplyBlock:block AJRJM-combustion-generator3
   602 set :supplyBlock:ore @coal
   603 setaddr :supplyBlock*retaddr *label533 (h:*label533)
 
   605 label *label533
   606 set :supplyBase0:supplied true
   607 label *label534
-    * label *label535
   608 label *label536
-    * label *label537
   609 label *label538
-    * label *label539
   610 set *tmp312 100
   611 sensor *tmp310 .core @titanium
   612 jump *label540 greaterThanEq *tmp310 titanium
 
   620 sensor *tmp321 AJTJK-battery1 @totalPower
   621 op mul *tmp322 A©JNJP-unloader6 .powerTarget
   622 jump *label543 greaterThanEq *tmp321 *tmp322
-    * label *label613
   623 write "Goal 5: supplying generator" processor2 ".status1"
-    * label *label614
   624 set :mineOre.2:ore @coal
   625 setaddr :mineOre.2*retaddr *label542 (h:*label542)
   626 call *label25 *invalid :mineOre.2*retval (m:*label542) (h:*label542)
 
   630 sensor *tmp325 .core @silicon
   631 jump *label550 greaterThanEq *tmp325 silicon
   632 jump *label546 equal .scrap false
-    * label *label615
   633 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label616
   634 sensor :supplyBase0:coal .core @coal
   635 sensor :supplyBase0:sand .sandContainer @sand
   636 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @scrap
 
   640 label *label545
   641 jump *label549 always
   642 label *label546
-    * label *label617
   643 write "Goal 6: silicon requirement" processor2 ".status1"
-    * label *label618
   644 sensor :supplyBase0:coal.1 .core @coal
   645 sensor :supplyBase0:sand.1 .core @sand
   646 select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   652 label *label550
   653 sensor *tmp339 .core @copper
   654 jump *label553 greaterThanEq *tmp339 copper
-    * label *label619
   655 write "Goal 7: copper requirement" processor2 ".status1"
-    * label *label620
   656 set :mineOre.2:ore @copper
   657 setaddr :mineOre.2*retaddr *label552 (h:*label552)
   658 call *label25 *invalid :mineOre.2*retval (m:*label552) (h:*label552)
 
   661 label *label553
   662 sensor *tmp342 .core @lead
   663 jump *label556 greaterThanEq *tmp342 lead
-    * label *label621
   664 write "Goal 8: lead requirement" processor2 ".status1"
-    * label *label622
   665 set :mineOre.2:ore @lead
   666 setaddr :mineOre.2*retaddr *label555 (h:*label555)
   667 call *label25 *invalid :mineOre.2*retval (m:*label555) (h:*label555)
 
   670 label *label556
   671 sensor *tmp345 .core @metaglass
   672 jump *label562 greaterThanEq *tmp345 metaglass
-    * label *label623
   673 write "Goal 9: metaglass requirement" processor2 ".status1"
-    * label *label624
   674 jump *label559 equal .scrap false
   675 set :mineOre.1:ore @scrap
   676 set :mineOre.1:block .sandContainer
 
   686 label *label561
   687 jump *label568 always
   688 label *label562
-    * label *label625
   689 write "Goal 10: supplying base" processor2 ".status1"
-    * label *label626
   690 jump *label565 equal A¨SSJi-container31 false
   691 set :mineOre.1:ore @scrap
   692 set :mineOre.1:block A¨SSJi-container31
 
   710 label *label571
   711 label *label572
   712 label *label573
-    * label *label574
   713 jump *label578 always
   714 label *label575
-    * label *label627
   715 write "Goal 11: Fetching titanium" processor2 ".status1"
-    * label *label628
   716 set :fetchBlock:block .titaniumDrill
   717 set :fetchBlock:item @titanium
   718 setaddr :fetchBlock*retaddr *label577 (h:*label577)
   719 call *label26 *invalid :fetchBlock*retval (m:*label577) (h:*label577)
   720 label *label577
   721 label *label578
-    * label *label579
   722 label *label179
   723 label *label176
-    * label *label174
   724 return :supplyBase*retaddr
   725 end
   726 label *label43
 
   749 set :buildRemoteBlock*retval :buildBlock*retval
   750 jump *label182 always
   751 label *label183
-    * label *label184
   752 set :buildRemoteBlock*retval false
   753 jump *label182 always
   754 label *label182
 
   781 write :buildBlock*retval processor2 :buildBlockFromCfg:cfg
   782 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   783 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label187
   784 return :buildBlockFromCfg*retaddr
   785 end
   786 label *label45
 
   789 setaddr :buildBlockFromCfg*retaddr *label191 (h:*label191)
   790 call *label44 *invalid :buildBlockFromCfg*retval (m:*label191) (h:*label191)
   791 label *label191
-    * label *label190
   792 return :buildBlockFromCfg.1*retaddr
   793 end
   794 label *label46
 
   809 setaddr :meetTarget*retaddr *label194 (h:*label194)
   810 call *label41 *invalid :meetTarget*retval (m:*label194) (h:*label194)
   811 label *label194
-    * label *label192
   812 return :meetTarget.1*retaddr
   813 end
   814 label *label47
 
   830 write 0 .controller ".leadReserve"
   831 write 0 .controller ".siliconReserve"
   832 write 0 .controller ".graphiteReserve"
-    * label *label195
   833 return :buildUnits*retaddr
   834 end
   835 label *label30
 
   853 sensor :unpackCfg:ti :unpackCfg:type @titanium
   854 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   855 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label197
   856 return :unpackCfg*retaddr
   857 end
   858 label *label41
-    * label *label482
   859 op sign :meetTarget:count :meetTarget:copper
-    * label *label483
-    * label *label486
   860 op sign *tmp368 :meetTarget:lead
   861 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label487
-    * label *label490
   862 op sign *tmp368 :meetTarget:graphite
   863 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label491
-    * label *label494
   864 op sign *tmp368 :meetTarget:silicon
   865 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label495
-    * label *label498
   866 op sign *tmp368 :meetTarget:titanium
   867 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label499
-    * label *label502
   868 op sign *tmp368 :meetTarget:metaglass
   869 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label503
-    * label *label506
   870 op sign *tmp368 :meetTarget:thorium
   871 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label507
-    * label *label295
   872 write :meetTarget:count processor2 ".totalTargets"
   873 write :meetTarget:block processor2 ".nextBlock"
   874 write :meetTarget:copper processor2 ".targetCopper"
 
   911 setaddr :supplyBase*retaddr *label307 (h:*label307)
   912 call *label39 *invalid :supplyBase*retval (m:*label307) (h:*label307)
   913 label *label307
-    * label *label304
   914 jump *label303 always
   915 label *label305
   916 jump *label308 equal :meetTarget:forBuild false
 
   928 setaddr :supplyBase*retaddr *label315 (h:*label315)
   929 call *label39 *invalid :supplyBase*retval (m:*label315) (h:*label315)
   930 label *label315
-    * label *label312
   931 jump *label311 always
   932 label *label313
   933 label *label308
-    * label *label309
-    * label *label292
   934 return :meetTarget*retaddr
   935 end
   936 label *label42
 
   963 read :buildBlock*retval processor5 ":buildBlockAt*retval"
   964 write false .controller ":buildStop*finished"
   965 write 2 .controller "@counter"
-    * label *label316
   966 return :buildBlock*retaddr
   967 end
   968 label *label24
 
   978 setaddr :mineOre*retaddr *label322 (h:*label322)
   979 call *label23 *invalid :mineOre*retval (m:*label322) (h:*label322)
   980 label *label322
-    * label *label320
   981 return :mineOre.1*retaddr
   982 end
   983 label *label25
 
   993 setaddr :mineOre*retaddr *label325 (h:*label325)
   994 call *label23 *invalid :mineOre*retval (m:*label325) (h:*label325)
   995 label *label325
-    * label *label323
   996 return :mineOre.2*retaddr
   997 end
   998 label *label26
 
  1027 jump *label334 equal *tmp405 false
  1028 ucontrol itemDrop @air 1000
  1029 label *label334
-    * label *label335
-    * label *label332
  1030 sensor *tmp407 @unit :fetchBlock:item
  1031 op lessThan *tmp408 *tmp407 30
  1032 sensor *tmp409 :fetchBlock:block :fetchBlock:item
  1033 op land *tmp410 *tmp408 *tmp409
  1034 jump *label331 notEqual *tmp410 false
-    * label *label333
  1035 set :depositItems:block .core
  1036 set :depositItems:item :fetchBlock:item
  1037 setaddr :depositItems*retaddr *label336 (h:*label336)
  1038 call *label21 *invalid :depositItems*retval (m:*label336) (h:*label336)
  1039 label *label336
-    * label *label326
  1040 return :fetchBlock*retaddr
  1041 end
  1042 label *label27
 
  1057 call *label23 *invalid :mineOre*retval (m:*label341) (h:*label341)
  1058 label *label341
  1059 label *label339
-    * label *label340
-    * label *label337
  1060 return :supplyBlock*retaddr
  1061 end
  1062 label *label40
 
  1065 set :targetMet*retval false
  1066 jump *label353 always
  1067 label *label354
-    * label *label355
  1068 sensor *tmp430 .core @lead
  1069 jump *label356 greaterThanEq *tmp430 lead
  1070 set :targetMet*retval false
  1071 jump *label353 always
  1072 label *label356
-    * label *label357
  1073 sensor *tmp433 .core @graphite
  1074 jump *label358 greaterThanEq *tmp433 graphite
  1075 set :targetMet*retval false
  1076 jump *label353 always
  1077 label *label358
-    * label *label359
  1078 sensor *tmp436 .core @silicon
  1079 jump *label360 greaterThanEq *tmp436 silicon
  1080 set :targetMet*retval false
  1081 jump *label353 always
  1082 label *label360
-    * label *label361
  1083 sensor *tmp439 .core @titanium
  1084 jump *label362 greaterThanEq *tmp439 titanium
  1085 set :targetMet*retval false
  1086 jump *label353 always
  1087 label *label362
-    * label *label363
  1088 sensor *tmp442 .core @metaglass
  1089 jump *label364 greaterThanEq *tmp442 metaglass
  1090 set :targetMet*retval false
  1091 jump *label353 always
  1092 label *label364
-    * label *label365
  1093 sensor *tmp445 .core @thorium
  1094 jump *label366 greaterThanEq *tmp445 thorium
  1095 set :targetMet*retval false
  1096 jump *label353 always
  1097 label *label366
-    * label *label367
  1098 set :targetMet*retval true
  1099 jump *label353 always
  1100 label *label353
 
  1104 write :status2:text processor2 ".status2"
  1105 write :status2:item processor2 ".item2"
  1106 write :status2:block processor2 ".block2"
-    * label *label368
  1107 return :status2*retaddr
  1108 end
  1109 label *label14
  1110 write :transportStatus:target processor2 ".transportTarget"
  1111 write :transportStatus:item processor2 ".transportItem"
-    * label *label369
  1112 return :transportStatus*retaddr
  1113 end
  1114 label *label18
-    * label *label641
  1115 write "Moving..." processor2 ".status3"
-    * label *label642
  1116 label *label372
  1117 sensor *tmp448 @unit @firstItem
  1118 jump *label375 equal *tmp448 null
  1119 ucontrol itemDrop @air 1000
  1120 label *label375
-    * label *label376
  1121 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label373
  1122 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp451
  1123 jump *label372 equal *tmp451 false
-    * label *label374
-    * label *label370
  1124 return :moveToEmpty*retaddr
  1125 end
  1126 label *label19
-    * label *label378
  1127 sensor *tmp453 @unit @firstItem
  1128 jump *label380 equal *tmp453 null
  1129 label *label664
  1130 ucontrol itemDrop @air 1000
-    * label *label379
  1131 sensor *tmp453 @unit @firstItem
  1132 jump *label664 notEqual *tmp453 null
  1133 label *label380
-    * label *label377
  1134 return :dropAll*retaddr
  1135 end
  1136 label *label21
-    * label *label643
  1137 write "Depositing..." processor2 ".status3"
-    * label *label644
  1138 sensor *tmp455 @unit @firstItem
  1139 jump *label383 notEqual *tmp455 :depositItems:item
-    * label *label649
  1140 sensor *tmp482 :depositItems:block @x
  1141 sensor *tmp483 :depositItems:block @y
-    * label *label657
-    * label *label658
  1142 write "Moving..." processor2 ".status3"
-    * label *label659
-    * label *label660
  1143 ucontrol within *tmp482 *tmp483 6 *tmp488
  1144 jump *label662 notEqual *tmp488 false
  1145 label *label665
  1146 ucontrol approach *tmp482 *tmp483 5.5
-    * label *label661
  1147 ucontrol within *tmp482 *tmp483 6 *tmp488
  1148 jump *label665 equal *tmp488 false
  1149 label *label662
-    * label *label663
-    * label *label651
  1150 sensor :depositItems:cap :depositItems:block @itemCapacity
  1151 label *label386
  1152 ucontrol itemDrop :depositItems:block 30
-    * label *label387
  1153 sensor *tmp459 @unit @firstItem
  1154 op mul *tmp460 *tmp459 :depositItems:cap
  1155 sensor *tmp461 :depositItems:block :depositItems:item
  1156 jump *label386 greaterThan *tmp460 *tmp461
-    * label *label388
  1157 jump *label384 always
  1158 label *label383
-    * label *label389
  1159 sensor *tmp463 @unit @firstItem
  1160 jump *label391 equal *tmp463 null
  1161 label *label666
  1162 ucontrol itemDrop @air 1000
-    * label *label390
  1163 sensor *tmp463 @unit @firstItem
  1164 jump *label666 notEqual *tmp463 null
  1165 label *label391
 
  1169 setaddr :transportStatus*retaddr *label392 (h:*label392)
  1170 call *label14 *invalid :transportStatus*retval (m:*label392) (h:*label392)
  1171 label *label392
-    * label *label381
  1172 return :depositItems*retaddr
  1173 end
  1174 label *label23
 
  1178 setaddr :transportStatus*retaddr *label394 (h:*label394)
  1179 call *label14 *invalid :transportStatus*retval (m:*label394) (h:*label394)
  1180 label *label394
-    * label *label652
  1181 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
  1182 jump *label654 notEqual *tmp484 false
  1183 set :error:error "Cannot locate ore"
 
  1185 call *label15 *invalid :error*retval (m:*label653) (h:*label653)
  1186 label *label653
  1187 label *label654
-    * label *label655
-    * label *label656
  1188 set :mineOre:x :locateOre:x
  1189 set :mineOre:y :locateOre:y
  1190 set :moveToEmpty:x :locateOre:x
 
  1198 call *label19 *invalid :dropAll*retval (m:*label399) (h:*label399)
  1199 label *label399
  1200 label *label397
-    * label *label398
-    * label *label645
  1201 write "Mining..." processor2 ".status3"
-    * label *label646
  1202 op add :mineOre:stop @second 10
  1203 label *label401
  1204 sensor :mineOre:item @unit @firstItem
 
  1208 jump *label404 equal *tmp473 false
  1209 jump *label403 always
  1210 label *label404
-    * label *label405
  1211 ucontrol mine :mineOre:x :mineOre:y
  1212 jump *label406 lessThanEq @second :mineOre:stop
  1213 jump *label403 always
  1214 label *label406
-    * label *label407
  1215 jump *label408 notEqual .noTarget false
  1216 setaddr :targetMet*retaddr *label410 (h:*label410)
  1217 call *label40 *invalid :targetMet*retval (m:*label410) (h:*label410)
 
  1219 jump *label411 equal :targetMet*retval false
  1220 jump *label403 always
  1221 label *label411
-    * label *label412
  1222 label *label408
-    * label *label409
-    * label *label402
  1223 sensor *tmp480 @unit @totalItems
  1224 jump *label401 lessThan *tmp480 :mineOre:amount
  1225 label *label403
 
  1229 setaddr :depositItems*retaddr *label413 (h:*label413)
  1230 call *label21 *invalid :depositItems*retval (m:*label413) (h:*label413)
  1231 label *label413
-    * label *label393
  1232 return :mineOre*retaddr
  1233 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   206 call *label39 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   207 label *label110
   208 sensor *tmp173 AJTJK-battery1 @totalPower
-    * jump *label111 greaterThanEq *tmp173 300
-    * jump *label109 always
+  209 jump *label109 lessThan *tmp173 300
   210 label *label111
   211 read *tmp81 .controller ".monos"
   212 jump *label107 lessThan *tmp81 3
 
  1204 op notEqual *tmp471 :mineOre:item null
  1205 op notEqual *tmp472 :mineOre:item :mineOre:ore
  1206 op land *tmp473 *tmp471 *tmp472
-    * jump *label404 equal *tmp473 false
-    * jump *label403 always
+ 1207 jump *label403 notEqual *tmp473 false
  1208 label *label404
  1209 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label406 lessThanEq @second :mineOre:stop
-    * jump *label403 always
+ 1210 jump *label403 greaterThan @second :mineOre:stop
  1211 label *label406
  1212 jump *label408 notEqual .noTarget false
  1213 setaddr :targetMet*retaddr *label410 (h:*label410)
  1214 call *label40 *invalid :targetMet*retval (m:*label410) (h:*label410)
  1215 label *label410
-    * jump *label411 equal :targetMet*retval false
-    * jump *label403 always
+ 1216 jump *label403 notEqual :targetMet*retval false
  1217 label *label411
  1218 label *label408
  1219 sensor *tmp480 @unit @totalItems

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   207 label *label110
   208 sensor *tmp173 AJTJK-battery1 @totalPower
   209 jump *label109 lessThan *tmp173 300
-    * label *label111
   210 read *tmp81 .controller ".monos"
   211 jump *label107 lessThan *tmp81 3
   212 label *label109
 
  1204 op notEqual *tmp472 :mineOre:item :mineOre:ore
  1205 op land *tmp473 *tmp471 *tmp472
  1206 jump *label403 notEqual *tmp473 false
-    * label *label404
  1207 ucontrol mine :mineOre:x :mineOre:y
  1208 jump *label403 greaterThan @second :mineOre:stop
-    * label *label406
  1209 jump *label408 notEqual .noTarget false
  1210 setaddr :targetMet*retaddr *label410 (h:*label410)
  1211 call *label40 *invalid :targetMet*retval (m:*label410) (h:*label410)
  1212 label *label410
  1213 jump *label403 notEqual :targetMet*retval false
-    * label *label411
  1214 label *label408
  1215 sensor *tmp480 @unit @totalItems
  1216 jump *label401 lessThan *tmp480 :mineOre:amount

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   267 label *label129
   268 read *tmp82 .controller ".polys"
   269 jump *label131 greaterThanEq *tmp82 2
-    * setaddr :supplyBase*retaddr *label132 (h:*label132)
+  270 setaddr :supplyBase*retaddr *label129 (h:*label132)
   271 call *label39 *invalid :supplyBase*retval (m:*label132) (h:*label132)
   272 label *label132
   273 jump *label129 always
 
   276 label *label134
   277 read *tmp80 .controller ".flares"
   278 jump *label136 greaterThanEq *tmp80 2
-    * setaddr :supplyBase*retaddr *label137 (h:*label137)
+  279 setaddr :supplyBase*retaddr *label134 (h:*label137)
   280 call *label39 *invalid :supplyBase*retval (m:*label137) (h:*label137)
   281 label *label137
   282 jump *label134 always
 
   410 label *label159
   411 read *tmp82 .controller ".polys"
   412 jump *label161 greaterThanEq *tmp82 3
-    * setaddr :supplyBase*retaddr *label162 (h:*label162)
+  413 setaddr :supplyBase*retaddr *label159 (h:*label162)
   414 call *label39 *invalid :supplyBase*retval (m:*label162) (h:*label162)
   415 label *label162
   416 jump *label159 always
 
   472 jump *label587 greaterThanEq *tmp361 50
   473 set :supplyBlock:block .thoriumGenerator
   474 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label586 (h:*label586)
+  475 setaddr :supplyBlock*retaddr *label589 (h:*label586)
   476 call *label27 *invalid :supplyBlock*retval (m:*label586) (h:*label586)
   477 label *label586
   478 jump *label589 always
 
   526 call *label26 *invalid :fetchBlock*retval (m:*label594) (h:*label594)
   527 label *label594
   528 sensor *tmp364 .core @thorium
-    * jump *label596 lessThanEq *tmp364 400
+  529 jump *label176 lessThanEq *tmp364 400
   530 write 4 .controller ".polyTarget"
   531 label *label596
-    * jump *label176 always
+  532 return :supplyBase*retaddr
   533 label *label175
   534 read *tmp81 .controller ".monos"
   535 jump *label178 lessThanEq *tmp81 1
 
   538 setaddr :mineOre.2*retaddr *label582 (h:*label582)
   539 call *label25 *invalid :mineOre.2*retval (m:*label582) (h:*label582)
   540 label *label582
-    * jump *label179 always
+  541 return :supplyBase*retaddr
   542 label *label178
   543 set :supplyBase0:supplied false
   544 jump *label538 notEqual A©JNJP-unloader6 null
 
   614 label *label540
   615 sensor *tmp316 .titaniumDrill @titanium
   616 jump *label575 greaterThanEq *tmp316 *tmp312
-    * jump *label573 notEqual :supplyBase0:supplied false
+  617 jump *label578 notEqual :supplyBase0:supplied false
   618 sensor *tmp321 AJTJK-battery1 @totalPower
   619 op mul *tmp322 A©JNJP-unloader6 .powerTarget
   620 jump *label543 greaterThanEq *tmp321 *tmp322
 
   623 setaddr :mineOre.2*retaddr *label542 (h:*label542)
   624 call *label25 *invalid :mineOre.2*retval (m:*label542) (h:*label542)
   625 label *label542
-    * jump *label572 always
+  626 return :supplyBase*retaddr
   627 label *label543
   628 sensor *tmp325 .core @silicon
   629 jump *label550 greaterThanEq *tmp325 silicon
 
   636 setaddr :mineOre.1*retaddr *label545 (h:*label545)
   637 call *label24 *invalid :mineOre.1*retval (m:*label545) (h:*label545)
   638 label *label545
-    * jump *label549 always
+  639 return :supplyBase*retaddr
   640 label *label546
   641 write "Goal 6: silicon requirement" processor2 ".status1"
   642 sensor :supplyBase0:coal.1 .core @coal
 
   646 call *label25 *invalid :mineOre.2*retval (m:*label548) (h:*label548)
   647 label *label548
   648 label *label549
-    * jump *label571 always
+  649 return :supplyBase*retaddr
   650 label *label550
   651 sensor *tmp339 .core @copper
   652 jump *label553 greaterThanEq *tmp339 copper
 
   655 setaddr :mineOre.2*retaddr *label552 (h:*label552)
   656 call *label25 *invalid :mineOre.2*retval (m:*label552) (h:*label552)
   657 label *label552
-    * jump *label570 always
+  658 return :supplyBase*retaddr
   659 label *label553
   660 sensor *tmp342 .core @lead
   661 jump *label556 greaterThanEq *tmp342 lead
 
   664 setaddr :mineOre.2*retaddr *label555 (h:*label555)
   665 call *label25 *invalid :mineOre.2*retval (m:*label555) (h:*label555)
   666 label *label555
-    * jump *label569 always
+  667 return :supplyBase*retaddr
   668 label *label556
   669 sensor *tmp345 .core @metaglass
   670 jump *label562 greaterThanEq *tmp345 metaglass
 
   675 setaddr :mineOre.1*retaddr *label558 (h:*label558)
   676 call *label24 *invalid :mineOre.1*retval (m:*label558) (h:*label558)
   677 label *label558
-    * jump *label561 always
+  678 return :supplyBase*retaddr
   679 label *label559
   680 set :mineOre.2:ore @sand
   681 setaddr :mineOre.2*retaddr *label560 (h:*label560)
   682 call *label25 *invalid :mineOre.2*retval (m:*label560) (h:*label560)
   683 label *label560
   684 label *label561
-    * jump *label568 always
+  685 return :supplyBase*retaddr
   686 label *label562
   687 write "Goal 10: supplying base" processor2 ".status1"
   688 jump *label565 equal A¨SSJi-container31 false
 
   691 setaddr :mineOre.1*retaddr *label564 (h:*label564)
   692 call *label24 *invalid :mineOre.1*retval (m:*label564) (h:*label564)
   693 label *label564
-    * jump *label567 always
+  694 return :supplyBase*retaddr
   695 label *label565
   696 sensor *tmp350 .core @coal
   697 sensor *tmp351 .core @sand
 
   708 label *label571
   709 label *label572
   710 label *label573
-    * jump *label578 always
+  711 return :supplyBase*retaddr
   712 label *label575
   713 write "Goal 11: Fetching titanium" processor2 ".status1"
   714 set :fetchBlock:block .titaniumDrill
 
   745 call *label42 *invalid :buildBlock*retval (m:*label186) (h:*label186)
   746 label *label186
   747 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label182 always
+  748 return :buildRemoteBlock*retaddr
   749 label *label183
   750 set :buildRemoteBlock*retval false
-    * jump *label182 always
+  751 return :buildRemoteBlock*retaddr
   752 label *label182
   753 return :buildRemoteBlock*retaddr
   754 end
 
   906 call *label40 *invalid :targetMet*retval (m:*label306) (h:*label306)
   907 label *label306
   908 jump *label305 notEqual :targetMet*retval false
-    * setaddr :supplyBase*retaddr *label307 (h:*label307)
+  909 setaddr :supplyBase*retaddr *label303 (h:*label307)
   910 call *label39 *invalid :supplyBase*retval (m:*label307) (h:*label307)
   911 label *label307
   912 jump *label303 always
 
   923 call *label40 *invalid :targetMet*retval (m:*label314) (h:*label314)
   924 label *label314
   925 jump *label313 notEqual :targetMet*retval false
-    * setaddr :supplyBase*retaddr *label315 (h:*label315)
+  926 setaddr :supplyBase*retaddr *label311 (h:*label315)
   927 call *label39 *invalid :supplyBase*retval (m:*label315) (h:*label315)
   928 label *label315
   929 jump *label311 always
 
  1061 sensor *tmp427 .core @copper
  1062 jump *label354 greaterThanEq *tmp427 copper
  1063 set :targetMet*retval false
-    * jump *label353 always
+ 1064 return :targetMet*retaddr
  1065 label *label354
  1066 sensor *tmp430 .core @lead
  1067 jump *label356 greaterThanEq *tmp430 lead
  1068 set :targetMet*retval false
-    * jump *label353 always
+ 1069 return :targetMet*retaddr
  1070 label *label356
  1071 sensor *tmp433 .core @graphite
  1072 jump *label358 greaterThanEq *tmp433 graphite
  1073 set :targetMet*retval false
-    * jump *label353 always
+ 1074 return :targetMet*retaddr
  1075 label *label358
  1076 sensor *tmp436 .core @silicon
  1077 jump *label360 greaterThanEq *tmp436 silicon
  1078 set :targetMet*retval false
-    * jump *label353 always
+ 1079 return :targetMet*retaddr
  1080 label *label360
  1081 sensor *tmp439 .core @titanium
  1082 jump *label362 greaterThanEq *tmp439 titanium
  1083 set :targetMet*retval false
-    * jump *label353 always
+ 1084 return :targetMet*retaddr
  1085 label *label362
  1086 sensor *tmp442 .core @metaglass
  1087 jump *label364 greaterThanEq *tmp442 metaglass
  1088 set :targetMet*retval false
-    * jump *label353 always
+ 1089 return :targetMet*retaddr
  1090 label *label364
  1091 sensor *tmp445 .core @thorium
  1092 jump *label366 greaterThanEq *tmp445 thorium
  1093 set :targetMet*retval false
-    * jump *label353 always
+ 1094 return :targetMet*retaddr
  1095 label *label366
  1096 set :targetMet*retval true
-    * jump *label353 always
+ 1097 return :targetMet*retaddr
  1098 label *label353
  1099 return :targetMet*retaddr
  1100 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-29 instructions):
 
   269 jump *label131 greaterThanEq *tmp82 2
   270 setaddr :supplyBase*retaddr *label129 (h:*label132)
   271 call *label39 *invalid :supplyBase*retval (m:*label132) (h:*label132)
-    * label *label132
-    * jump *label129 always
   272 label *label131
   273 write 2 .controller ".flareTarget"
   274 label *label134
 
   276 jump *label136 greaterThanEq *tmp80 2
   277 setaddr :supplyBase*retaddr *label134 (h:*label137)
   278 call *label39 *invalid :supplyBase*retval (m:*label137) (h:*label137)
-    * label *label137
-    * jump *label134 always
   279 label *label136
   280 write @ore-titanium processor2 ".nextBlock"
   281 ubind @flare
 
   408 jump *label161 greaterThanEq *tmp82 3
   409 setaddr :supplyBase*retaddr *label159 (h:*label162)
   410 call *label39 *invalid :supplyBase*retval (m:*label162) (h:*label162)
-    * label *label162
-    * jump *label159 always
   411 label *label161
   412 write 0 .controller ".monoTarget"
   413 write 3209 .controller ".powerTarget"
 
   449 set .ERROR :error:error
   450 stop
   451 return :error*retaddr
-    * end
   452 label *label39
   453 op add *tmp247 .siliconMonoSurplus silicon
   454 sensor *tmp248 .core @silicon
 
   467 set :supplyBlock:ore @coal
   468 setaddr :supplyBlock*retaddr *label589 (h:*label586)
   469 call *label27 *invalid :supplyBlock*retval (m:*label586) (h:*label586)
-    * label *label586
-    * jump *label589 always
   470 label *label587
   471 sensor *tmp416 .thoriumGenerator @itemCapacity
   472 op min :supplyBlockFromCore:cap *tmp416 30
 
   519 sensor *tmp364 .core @thorium
   520 jump *label176 lessThanEq *tmp364 400
   521 write 4 .controller ".polyTarget"
-    * label *label596
   522 return :supplyBase*retaddr
   523 label *label175
   524 read *tmp81 .controller ".monos"
 
   635 setaddr :mineOre.2*retaddr *label548 (h:*label548)
   636 call *label25 *invalid :mineOre.2*retval (m:*label548) (h:*label548)
   637 label *label548
-    * label *label549
   638 return :supplyBase*retaddr
   639 label *label550
   640 sensor *tmp339 .core @copper
 
   670 setaddr :mineOre.2*retaddr *label560 (h:*label560)
   671 call *label25 *invalid :mineOre.2*retval (m:*label560) (h:*label560)
   672 label *label560
-    * label *label561
   673 return :supplyBase*retaddr
   674 label *label562
   675 write "Goal 10: supplying base" processor2 ".status1"
 
   689 setaddr :mineOre.2*retaddr *label566 (h:*label566)
   690 call *label25 *invalid :mineOre.2*retval (m:*label566) (h:*label566)
   691 label *label566
-    * label *label567
-    * label *label568
-    * label *label569
-    * label *label570
-    * label *label571
-    * label *label572
-    * label *label573
   692 return :supplyBase*retaddr
   693 label *label575
   694 write "Goal 11: Fetching titanium" processor2 ".status1"
 
   698 call *label26 *invalid :fetchBlock*retval (m:*label577) (h:*label577)
   699 label *label577
   700 label *label578
-    * label *label179
   701 label *label176
   702 return :supplyBase*retaddr
-    * end
   703 label *label43
   704 op add *tmp254 :buildRemoteBlock:x :buildRemoteBlock:y
   705 jump *label183 lessThanEq *tmp254 0
 
   728 label *label183
   729 set :buildRemoteBlock*retval false
   730 return :buildRemoteBlock*retaddr
-    * label *label182
-    * return :buildRemoteBlock*retaddr
-    * end
   731 label *label44
   732 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   733 setaddr :unpackCfg*retaddr *label188 (h:*label188)
 
   756 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   757 set :buildBlockFromCfg*retval :buildBlock*retval
   758 return :buildBlockFromCfg*retaddr
-    * end
   759 label *label45
   760 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   761 set :buildBlockFromCfg:config null
 
   763 call *label44 *invalid :buildBlockFromCfg*retval (m:*label191) (h:*label191)
   764 label *label191
   765 return :buildBlockFromCfg.1*retaddr
-    * end
   766 label *label46
   767 set :unpackCfg:cfg :meetTarget.1:cfg
   768 setaddr :unpackCfg*retaddr *label193 (h:*label193)
 
   782 call *label41 *invalid :meetTarget*retval (m:*label194) (h:*label194)
   783 label *label194
   784 return :meetTarget.1*retaddr
-    * end
   785 label *label47
   786 set :meetTarget:block 0
   787 set :meetTarget:copper 0
 
   802 write 0 .controller ".siliconReserve"
   803 write 0 .controller ".graphiteReserve"
   804 return :buildUnits*retaddr
-    * end
   805 label *label30
   806 read *tmp261 :unpackCfg:cfg 1
   807 op sub *tmp262 *tmp261 74
 
   824 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   825 sensor :unpackCfg:th :unpackCfg:type @thorium
   826 return :unpackCfg*retaddr
-    * end
   827 label *label41
   828 op sign :meetTarget:count :meetTarget:copper
   829 op sign *tmp368 :meetTarget:lead
 
   879 jump *label305 notEqual :targetMet*retval false
   880 setaddr :supplyBase*retaddr *label303 (h:*label307)
   881 call *label39 *invalid :supplyBase*retval (m:*label307) (h:*label307)
-    * label *label307
-    * jump *label303 always
   882 label *label305
   883 jump *label308 equal :meetTarget:forBuild false
   884 write false .controller ":buildStart*finished"
 
   894 jump *label313 notEqual :targetMet*retval false
   895 setaddr :supplyBase*retaddr *label311 (h:*label315)
   896 call *label39 *invalid :supplyBase*retval (m:*label315) (h:*label315)
-    * label *label315
-    * jump *label311 always
   897 label *label313
   898 label *label308
   899 return :meetTarget*retaddr
-    * end
   900 label *label42
   901 op notEqual *tmp386 .controller null
   902 set :meetTarget:block :buildBlock:block
 
   928 write false .controller ":buildStop*finished"
   929 write 2 .controller "@counter"
   930 return :buildBlock*retaddr
-    * end
   931 label *label24
   932 set :status2:text "Mining "
   933 set :status2:item :mineOre.1:ore
 
   942 call *label23 *invalid :mineOre*retval (m:*label322) (h:*label322)
   943 label *label322
   944 return :mineOre.1*retaddr
-    * end
   945 label *label25
   946 set :status2:text "Mining "
   947 set :status2:item :mineOre.2:ore
 
   956 call *label23 *invalid :mineOre*retval (m:*label325) (h:*label325)
   957 label *label325
   958 return :mineOre.2*retaddr
-    * end
   959 label *label26
   960 sensor *tmp398 :fetchBlock:block @itemCapacity
   961 op min :transportStatus:target *tmp398 30
 
   999 call *label21 *invalid :depositItems*retval (m:*label336) (h:*label336)
  1000 label *label336
  1001 return :fetchBlock*retaddr
-    * end
  1002 label *label27
  1003 set :status2:text "Supplying "
  1004 set :status2:item :supplyBlock:ore
 
  1018 label *label341
  1019 label *label339
  1020 return :supplyBlock*retaddr
-    * end
  1021 label *label40
  1022 sensor *tmp427 .core @copper
  1023 jump *label354 greaterThanEq *tmp427 copper
 
  1056 label *label366
  1057 set :targetMet*retval true
  1058 return :targetMet*retaddr
-    * label *label353
-    * return :targetMet*retaddr
-    * end
  1059 label *label12
  1060 write :status2:text processor2 ".status2"
  1061 write :status2:item processor2 ".item2"
  1062 write :status2:block processor2 ".block2"
  1063 return :status2*retaddr
-    * end
  1064 label *label14
  1065 write :transportStatus:target processor2 ".transportTarget"
  1066 write :transportStatus:item processor2 ".transportItem"
  1067 return :transportStatus*retaddr
-    * end
  1068 label *label18
  1069 write "Moving..." processor2 ".status3"
  1070 label *label372
 
  1076 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp451
  1077 jump *label372 equal *tmp451 false
  1078 return :moveToEmpty*retaddr
-    * end
  1079 label *label19
  1080 sensor *tmp453 @unit @firstItem
  1081 jump *label380 equal *tmp453 null
 
  1085 jump *label664 notEqual *tmp453 null
  1086 label *label380
  1087 return :dropAll*retaddr
-    * end
  1088 label *label21
  1089 write "Depositing..." processor2 ".status3"
  1090 sensor *tmp455 @unit @firstItem
 
  1122 call *label14 *invalid :transportStatus*retval (m:*label392) (h:*label392)
  1123 label *label392
  1124 return :depositItems*retaddr
-    * end
  1125 label *label23
  1126 op min :mineOre:amount :mineOre:amount 30
  1127 set :transportStatus:target :mineOre:amount
 
  1175 call *label21 *invalid :depositItems*retval (m:*label413) (h:*label413)
  1176 label *label413
  1177 return :mineOre*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1 (-1 instructions):
 
    28 set .builder @unit
    29 ulocate building core false @copper .coreX .coreY *tmp119 .core
    30 jump *label55 equal .core null
-    * ulocate ore core true @sand *tmp122 *tmp123 *tmp121 *tmp124
    31 set .scrap true
    32 write true processor2 ".scrap"
    33 write true processor7 ".scrap"

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    26 label *label55
    27 ubind @poly
    28 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp119 .core
+   29 ulocate building core false @copper .coreX .coreY 0 .core
    30 jump *label55 equal .core null
    31 set .scrap true
    32 write true processor2 ".scrap"
 
  1128 setaddr :transportStatus*retaddr *label394 (h:*label394)
  1129 call *label14 *invalid :transportStatus*retval (m:*label394) (h:*label394)
  1130 label *label394
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp484 *tmp485
+ 1131 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp484 0
  1132 jump *label654 notEqual *tmp484 false
  1133 set :error:error "Cannot locate ore"
  1134 setaddr :error*retaddr *label653 (h:*label653)

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
        label *label50                                               CoreBuilder.mnd: require "Display.mnd" remote display;
    1:  read *tmp31 processor2 "*signature"                          ...
    2:  jump *label50 notEqual *tmp31 "0:v1"                         ...
        label *label51                                               CoreBuilder.mnd: require "OreLocator.mnd" remote oreLocator;
    3:  read *tmp70 processor3 "*signature"                          ...
    4:  jump *label51 notEqual *tmp70 "3290b8c661787058:v1"          ...
        label *label52                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    5:  read *tmp97 processor7 "*signature"                          ...
    6:  jump *label52 notEqual *tmp97 "0:v1"                         ...
        label *label53                                               CoreBuilder.mnd: require "PolyController.mnd" remote polyController;
    7:  read *tmp99 processor6 "*signature"                          ...
    8:  jump *label53 notEqual *tmp99 "5f95d6f938a8462e:v1"          ...
        label *label54                                               CoreBuilder.mnd: require "BlockBuilder.mnd" remote blockBuilder;
    9:  read *tmp115 processor5 "*signature"                         ...
   10:  jump *label54 notEqual *tmp115 "319badb7a8e178a4:v1"         ...
   11:  set .titaniumDrill null                                      CoreBuilder.mnd: var
   12:  set .thoriumBattery null                                     ...
   13:  set .thoriumContainer null                                   ...
   14:  set .thoriumGenerator null                                   ...
   15:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   16:  set .graphiteSurplus 20                                      ...
   17:  set .siliconSurplus 20                                       ...
   18:  set .siliconMonoSurplus 0                                    ...
   19:  set .metaglassSurplus 20                                     ...
   20:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label55                                               CoreBuilder.mnd: do
   21:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   22:  set .builder @unit                                           ...
   23:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   24:  jump *label55 equal .core null                               CoreBuilder.mnd: do
   25:  set .scrap true                                              CoreBuilder.mnd: scrap = true;
   26:  write true processor2 ".scrap"                               CoreBuilder.mnd: display.scrap = scrap;
   27:  write true processor7 ".scrap"                               CoreBuilder.mnd: monoController.scrap = scrap;
   28:  set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"        CoreBuilder.mnd: buildBlockFromCfg(PRESS);
   29:  setaddr :buildBlockFromCfg.1*retaddr *label58                ...
   30:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label58                                               ...
   31:  set :buildBlockFromCfg.1:cfg "AJTJK-battery1"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY1);
   32:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
   33:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
   34:  set :buildBlockFromCfg.1:cfg "ALTJL-battery2"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   35:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   36:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   37:  set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"  CoreBuilder.mnd: buildBlockFromCfg(GENERATOR);
   38:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   39:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   40:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   41:  set :buildBlockFromCfg.1:cfg "AXPRJe-pulverizer27"           CoreBuilder.mnd: buildBlockFromCfg(PULVERIZER1);
   42:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
   43:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
   44:  set .sandContainer AXPRJe-pulverizer27                       CoreBuilder.mnd: sandContainer = pulverizer1;
   45:  set :buildBlockFromCfg.1:cfg "A~PPJf-overflow-gate28"        CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE_A);
   46:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
   47:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
   48:  set :buildBlockFromCfg.1:cfg "APTJg-power-node29"           CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE_A);
   49:  setaddr :buildBlockFromCfg.1*retaddr *label66                ...
   50:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label66                                               ...
   51:  set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"       CoreBuilder.mnd: buildBlockFromCfg(SMELTER);
   52:  setaddr :buildBlockFromCfg.1*retaddr *label67                ...
   53:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label67                                               ...
   54:  set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   55:  setaddr :buildBlockFromCfg.1*retaddr *label68                ...
   56:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label68                                               ...
   57:  set :meetTarget.1:cfg "AJJJ~-pneumatic-drill52"             CoreBuilder.mnd: meetTarget(cfg);
   58:  setaddr :meetTarget.1*retaddr *label70                       ...
   59:  call *label46 *invalid :meetTarget.1*retval                  ...
        label *label70                                               ...
   60:  write @ore-titanium processor2 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
   61:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   62:  write .coreY processor3 ":findDrillLocation:y"               ...
   63:  write @unit processor3 ":findDrillLocation:unit"             ...
   64:  write @titanium processor3 ":findDrillLocation:item"         ...
   65:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
   66:  write 2 processor3 ":findDrillLocation:size"                 ...
   67:  write 4 processor3 ":findDrillLocation:limit"                ...
   68:  write false processor3 ":findDrillLocation*finished"         ...
   69:  write 1 processor3 "@counter"                                ...
        label *label71                                               ...
   70:  wait 1e-15                                                   ...
   71:  read *tmp148 processor3 ":findDrillLocation*finished"        ...
   72:  jump *label71 equal *tmp148 false                            ...
   73:  read :buildFirstTitaniumDrill:dx processor3 ":findDrillLocat ...
   74:  read :buildFirstTitaniumDrill:dy processor3 ":findDrillLocat ...
   75:  read :buildFirstTitaniumDrill:result processor3 ":findDrillL ...
   76:  jump *label72 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   77:  set :error:error "Cannot locate spot for titanium drill"     ...
   78:  setaddr :error*retaddr *label74                              ...
   79:  call *label15 *invalid :error*retval                         ...
        label *label74                                               ...
        label *label72                                               ...
   80:  write @pneumatic-drill processor2 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   81:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   82:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   83:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   84:  write 2 processor5 "@counter"                                ...
        label *label75                                               ...
   85:  wait 1e-15                                                   ...
   86:  read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished ...
   87:  jump *label75 equal *tmp154 false                            ...
   88:  read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   89:  set .titaniumDrill *tmp137                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   90:  write *tmp137 processor2 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   91:  set .sandContainer .core                                     CoreBuilder.mnd: sandContainer = core;
   92:  set :buildBlockFromCfg.1:cfg "A¨SSJi-container31"            CoreBuilder.mnd: buildBlockFromCfg(CONTAINER_A);
   93:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
   94:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
   95:  set :buildBlockFromCfg.1:cfg "A©RPJh-unloader30"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER_A);
   96:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
   97:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
   98:  set .sandContainer A¨SSJi-container31                        CoreBuilder.mnd: sandContainer = container_a;
   99:  set :buildBlockFromCfg.1:cfg "AXTPJj-pulverizer32"           CoreBuilder.mnd: buildBlockFromCfg(PULVERIZER2);
  100:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  101:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  102:  set :buildBlockFromCfg.1:cfg "A~RNJj-overflow-gate32"        CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE_B);
  103:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  104:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  105:  set :buildBlockFromCfg.1:cfg "A~RLJj-overflow-gate32"        CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE_C);
  106:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  107:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  108:  write .sandContainer processor7 ".sandContainer"             CoreBuilder.mnd: monoController.sandContainer = sandContainer;
  109:  set :buildBlockFromCfg.1:cfg "A©JNJP-unloader6"              CoreBuilder.mnd: buildBlockFromCfg(UNLOADER1);
  110:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  111:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  112:  set :buildBlockFromCfg.1:cfg "A{HNJQ-inverted-sorter7"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
  113:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  114:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  115:  set :buildBlockFromCfg.1:cfg "AJPJR-underflow-gate8"        CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
  116:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  117:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  118:  set .graphiteSurplus 80                                      CoreBuilder.mnd: graphiteSurplus = 80;
  119:  set :buildBlockFromCfg:cfg "AÕFFJS-micro-processor9"         CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, coreControllerConfig);
  120:  set :buildBlockFromCfg:config processor10                    ...
  121:  setaddr :buildBlockFromCfg*retaddr *label86                  ...
  122:  call *label44 *invalid :buildBlockFromCfg*retval             ...
        label *label86                                               ...
  123:  set .controller :buildBlockFromCfg*retval                    ...
  124:  write processor1 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
  125:  write processor2 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
  126:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
  127:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
  128:  set *tmp168 AJEMJJ-graphite-press0                           CoreBuilder.mnd: controller.write(@this.read(block), block);
  129:  write *tmp168 :buildBlockFromCfg*retval "AJEMJJ-graphite-pre ...
  130:  set *tmp168 AJTJK-battery1                                  ...
  131:  write *tmp168 :buildBlockFromCfg*retval "AJTJK-battery1"    ...
  132:  set *tmp168 ALTJL-battery2                                  ...
  133:  write *tmp168 :buildBlockFromCfg*retval "ALTJL-battery2"    ...
  134:  set *tmp168 AJRJM-combustion-generator3                     ...
  135:  write *tmp168 :buildBlockFromCfg*retval "AJRJM-combustion-g ...
  136:  set *tmp168 ALMQJN-silicon-smelter4                          ...
  137:  write *tmp168 :buildBlockFromCfg*retval "ALMQJN-silicon-smel ...
  138:  set *tmp168 A{LNJO-inverted-sorter5                          ...
  139:  write *tmp168 :buildBlockFromCfg*retval "A{LNJO-inverted-sor ...
  140:  set *tmp168 A©JNJP-unloader6                                 ...
  141:  write *tmp168 :buildBlockFromCfg*retval "A©JNJP-unloader6"   ...
  142:  set *tmp168 A{HNJQ-inverted-sorter7                          ...
  143:  write *tmp168 :buildBlockFromCfg*retval "A{HNJQ-inverted-sor ...
  144:  set *tmp168 AJPJR-underflow-gate8                           ...
  145:  write *tmp168 :buildBlockFromCfg*retval "AJPJR-underflow-ga ...
  146:  set *tmp168 AÕFFJS-micro-processor9                          ...
  147:  write *tmp168 :buildBlockFromCfg*retval "AÕFFJS-micro-proces ...
  148:  set :buildBlockFromCfg.1:cfg "AFHJT-power-node10"           CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  149:  setaddr :buildBlockFromCfg.1*retaddr *label100               ...
  150:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label100                                              ...
  151:  set :buildBlockFromCfg.1:cfg "A©FJJU-unloader11"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER2);
  152:  setaddr :buildBlockFromCfg.1*retaddr *label101               ...
  153:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label101                                              ...
  154:  set :buildBlockFromCfg.1:cfg "A~DJJV-overflow-gate12"        CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  155:  setaddr :buildBlockFromCfg.1*retaddr *label102               ...
  156:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label102                                              ...
  157:  set :buildBlockFromCfg.1:cfg "A¾BFLW-air-factory13"          CoreBuilder.mnd: buildBlockFromCfg(AIR_FACTORY);
  158:  setaddr :buildBlockFromCfg.1*retaddr *label103               ...
  159:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label103                                              ...
  160:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  161:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  162:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  163:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  164:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  165:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  166:  set .siliconSurplus 20                                       ...
  167:  setaddr :buildUnits*retaddr *label106                        CoreBuilder.mnd: buildUnits();
  168:  call *label47 *invalid :buildUnits*retval                    ...
        label *label106                                              ...
        label *label107                                              CoreBuilder.mnd: do
  169:  setaddr :supplyBase*retaddr *label110                        CoreBuilder.mnd: supplyBase();
  170:  call *label39 *invalid :supplyBase*retval                    ...
        label *label110                                              ...
  171:  sensor *tmp173 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  172:  jump *label109 lessThan *tmp173 300                          ...
  173:  read *tmp81 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  174:  jump *label107 lessThan *tmp81 3                             CoreBuilder.mnd: do
        label *label109                                              ...
  175:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  176:  set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  177:  setaddr :buildBlockFromCfg.1*retaddr *label113               ...
  178:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label113                                              ...
  179:  set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  180:  setaddr :buildBlockFromCfg.1*retaddr *label114               ...
  181:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label114                                              ...
  182:  set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"                 CoreBuilder.mnd: buildBlockFromCfg(KILN);
  183:  setaddr :buildBlockFromCfg.1*retaddr *label115               ...
  184:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label115                                              ...
  185:  set :buildBlockFromCfg.1:cfg "A¡AOJ[-water-extractor17"      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  186:  setaddr :buildBlockFromCfg.1*retaddr *label116               ...
  187:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label116                                              ...
  188:  set :buildBlockFromCfg.1:cfg "AAKJ\-steam-generator18"      CoreBuilder.mnd: buildBlockFromCfg(STEAM_GEN);
  189:  setaddr :buildBlockFromCfg.1*retaddr *label117               ...
  190:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label117                                              ...
  191:  set :buildBlockFromCfg.1:cfg "AKFRJ_-multi-press21"          CoreBuilder.mnd: buildBlockFromCfg(MULTIPRESS);
  192:  setaddr :buildBlockFromCfg.1*retaddr *label118               ...
  193:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label118                                              ...
  194:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  195:  set :buildBlockFromCfg.1:cfg "ALQIJ^-silicon-smelter20"      CoreBuilder.mnd: buildBlockFromCfg(SMELTER2);
  196:  setaddr :buildBlockFromCfg.1*retaddr *label119               ...
  197:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label119                                              ...
  198:  set :buildBlockFromCfg.1:cfg "AXTNJj-pulverizer32"           CoreBuilder.mnd: buildBlockFromCfg(PULVERIZER3);
  199:  setaddr :buildBlockFromCfg.1*retaddr *label122               ...
  200:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label122                                              ...
  201:  set :buildBlockFromCfg.1:cfg "A©HFJa-unloader23"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  202:  setaddr :buildBlockFromCfg.1*retaddr *label123               ...
  203:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label123                                              ...
  204:  set :buildBlockFromCfg.1:cfg "A{HDJb-inverted-sorter24"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  205:  setaddr :buildBlockFromCfg.1*retaddr *label124               ...
  206:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label124                                              ...
  207:  set :buildBlockFromCfg.1:cfg "AÀF@Lc-additive-reconstructor2 CoreBuilder.mnd: buildBlockFromCfg(ADDITIVE_REC);
  208:  setaddr :buildBlockFromCfg.1*retaddr *label125               ...
  209:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label125                                              ...
  210:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  211:  set .siliconMonoSurplus 20                                   CoreBuilder.mnd: siliconMonoSurplus = 20;
  212:  set .metaglassSurplus 100                                    CoreBuilder.mnd: metaglassSurplus = 100;
  213:  write 4 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  214:  write 3 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  215:  setaddr :buildUnits*retaddr *label128                        CoreBuilder.mnd: buildUnits();
  216:  call *label47 *invalid :buildUnits*retval                    ...
        label *label128                                              ...
        label *label129                                              CoreBuilder.mnd: while controller.polys < 2 do
  217:  read *tmp82 .controller ".polys"                             ...
  218:  jump *label131 greaterThanEq *tmp82 2                        ...
  219:  setaddr :supplyBase*retaddr *label129                        CoreBuilder.mnd: supplyBase();
  220:  call *label39 *invalid :supplyBase*retval                    ...
        label *label131                                              CoreBuilder.mnd: while controller.polys < 2 do
  221:  write 2 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
        label *label134                                              CoreBuilder.mnd: while controller.flares < 2 do
  222:  read *tmp80 .controller ".flares"                            ...
  223:  jump *label136 greaterThanEq *tmp80 2                        ...
  224:  setaddr :supplyBase*retaddr *label134                        CoreBuilder.mnd: supplyBase();
  225:  call *label39 *invalid :supplyBase*retval                    ...
        label *label136                                              CoreBuilder.mnd: while controller.flares < 2 do
  226:  write @ore-titanium processor2 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  227:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  228:  read :blocksBuildTitaniumDrills:current processor3 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  229:  write .coreX processor3 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  230:  write .coreY processor3 ":findDrillLocation:y"               ...
  231:  write @unit processor3 ":findDrillLocation:unit"             ...
  232:  write @titanium processor3 ":findDrillLocation:item"         ...
  233:  write @ore-titanium processor3 ":findDrillLocation:ore"      ...
  234:  write 4 processor3 ":findDrillLocation:size"                 ...
  235:  write 1000000000 processor3 ":findDrillLocation:limit"       ...
  236:  write false processor3 ":findDrillLocation*finished"         ...
  237:  write 1 processor3 "@counter"                                ...
  238:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  239:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  240:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  241:  write false processor5 ":buildTitaniumDrills*finished"       ...
  242:  write 3 processor5 "@counter"                                ...
        label *label139                                              ...
  243:  wait 1e-15                                                   ...
  244:  read *tmp203 processor5 ":buildTitaniumDrills*finished"      ...
  245:  jump *label139 equal *tmp203 false                           ...
  246:  write false processor3 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  247:  write 3 processor3 "@counter"                                ...
  248:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  249:  set .graphiteSurplus 10                                      CoreBuilder.mnd: graphiteSurplus = 10;
  250:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  251:  write @ore-thorium processor2 ".nextBlock"                   CoreBuilder.mnd: display.nextBlock = @ore-thorium;
  252:  write .coreX processor3 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  253:  write .coreY processor3 ":layoutThoriumDrill:y"              ...
  254:  write @unit processor3 ":layoutThoriumDrill:unit"            ...
  255:  write 7 processor3 ":layoutThoriumDrill:limit"               ...
  256:  write false processor3 ":layoutThoriumDrill*finished"        ...
  257:  write 2 processor3 "@counter"                                ...
        label *label141                                              ...
  258:  wait 1e-15                                                   ...
  259:  read *tmp208 processor3 ":layoutThoriumDrill*finished"       ...
  260:  jump *label141 equal *tmp208 false                           ...
  261:  set :meetTarget.1:cfg "AJJJ~-laser-drill52"                 CoreBuilder.mnd: meetTarget(LASER_DRILL);
  262:  setaddr :meetTarget.1*retaddr *label142                      ...
  263:  call *label46 *invalid :meetTarget.1*retval                  ...
        label *label142                                              ...
        label *label143                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  264:  wait 1e-15                                                   ...
  265:  read *tmp210 processor3 ":layoutThoriumDrill*finished"       ...
  266:  jump *label143 equal *tmp210 false                           ...
  267:  read :buildThoriumDrill:result processor3 ":layoutThoriumDri ...
  268:  jump *label144 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  269:  set :error:error "Cannot locate spot for thorium drill"      ...
  270:  setaddr :error*retaddr *label146                             ...
  271:  call *label15 *invalid :error*retval                         ...
        label *label146                                              ...
        label *label144                                              ...
  272:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  273:  read *tmp52 processor3 ".drillX"                             ...
  274:  write *tmp52 processor5 ":buildBlockAt:x"                    ...
  275:  read *tmp53 processor3 ".drillY"                             ...
  276:  write *tmp53 processor5 ":buildBlockAt:y"                    ...
  277:  write null processor5 ":buildBlockAt:rotation"               ...
  278:  write 0 processor5 ":buildBlockAt:config"                    ...
  279:  write -1 processor5 ":buildBlockAt:index"                    ...
  280:  write false processor5 ":buildBlockAt*finished"              ...
  281:  write 1 processor5 "@counter"                                ...
        label *label147                                              ...
  282:  wait 1e-15                                                   ...
  283:  read *tmp220 processor5 ":buildBlockAt*finished"             ...
  284:  jump *label147 equal *tmp220 false                           ...
  285:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  286:  set :buildRemoteBlock:cfg "A¡AOJ[-water-extractor17"         CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  287:  read :buildRemoteBlock:x processor3 ".water1X"               ...
  288:  read :buildRemoteBlock:y processor3 ".water1Y"               ...
  289:  setaddr :buildRemoteBlock*retaddr *label148                  ...
  290:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label148                                              ...
  291:  read :buildRemoteBlock:x processor3 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  292:  read :buildRemoteBlock:y processor3 ".water2Y"               ...
  293:  setaddr :buildRemoteBlock*retaddr *label149                  ...
  294:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label149                                              ...
  295:  set :buildRemoteBlock:cfg "AAKJ\-steam-generator18"         CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  296:  read :buildRemoteBlock:x processor3 ".generatorX"            ...
  297:  read :buildRemoteBlock:y processor3 ".generatorY"            ...
  298:  setaddr :buildRemoteBlock*retaddr *label150                  ...
  299:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label150                                              ...
  300:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  301:  set :buildRemoteBlock:cfg "AFHJT-power-node10"              CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  302:  read :buildRemoteBlock:x processor3 ".node1X"                ...
  303:  read :buildRemoteBlock:y processor3 ".node1Y"                ...
  304:  setaddr :buildRemoteBlock*retaddr *label151                  ...
  305:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label151                                              ...
  306:  read :buildRemoteBlock:x processor3 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  307:  read :buildRemoteBlock:y processor3 ".node2Y"                ...
  308:  setaddr :buildRemoteBlock*retaddr *label152                  ...
  309:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label152                                              ...
  310:  set :buildRemoteBlock:cfg "AJJJ~-solar-panel52"             CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  311:  read :buildRemoteBlock:x processor3 ".panelX"                ...
  312:  read :buildRemoteBlock:y processor3 ".panelY"                ...
  313:  setaddr :buildRemoteBlock*retaddr *label153                  ...
  314:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label153                                              ...
  315:  set :buildRemoteBlock:cfg "AJTJK-battery1"                  CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  316:  read :buildRemoteBlock:x processor3 ".batteryX"              ...
  317:  read :buildRemoteBlock:y processor3 ".batteryY"              ...
  318:  setaddr :buildRemoteBlock*retaddr *label154                  ...
  319:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label154                                              ...
  320:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  321:  set :buildRemoteBlock:cfg "A¨JJJ~-container52"               CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  322:  read :buildRemoteBlock:x processor3 ".containerX"            ...
  323:  read :buildRemoteBlock:y processor3 ".containerY"            ...
  324:  setaddr :buildRemoteBlock*retaddr *label155                  ...
  325:  call *label43 *invalid :buildRemoteBlock*retval              ...
        label *label155                                              ...
  326:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  327:  write .thoriumDrill processor2 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  328:  write .thoriumContainer processor2 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  329:  write .thoriumContainer processor6 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  330:  write false processor6 ":setThoriumContainer*finished"       ...
  331:  write 3 processor6 "@counter"                                ...
        label *label158                                              ...
  332:  wait 1e-15                                                   ...
  333:  read *tmp233 processor6 ":setThoriumContainer*finished"      ...
  334:  jump *label158 equal *tmp233 false                           ...
  335:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label159                                              CoreBuilder.mnd: while controller.polys < 3 do
  336:  read *tmp82 .controller ".polys"                             ...
  337:  jump *label161 greaterThanEq *tmp82 3                        ...
  338:  setaddr :supplyBase*retaddr *label159                        CoreBuilder.mnd: supplyBase();
  339:  call *label39 *invalid :supplyBase*retval                    ...
        label *label161                                              CoreBuilder.mnd: while controller.polys < 3 do
  340:  write 0 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  341:  write 3209 .controller ".powerTarget"                        CoreBuilder.mnd: controller.powerTarget = 3209;
  342:  set .siliconMonoSurplus 120                                  CoreBuilder.mnd: siliconMonoSurplus = 120;
  343:  set .leadSurplus 0                                           CoreBuilder.mnd: leadSurplus = 0;
  344:  set :buildBlockFromCfg.1:cfg "AÁNBJd-multiplicative-reconstr CoreBuilder.mnd: buildBlockFromCfg(MULTIPLICATIVE_REC);
  345:  setaddr :buildBlockFromCfg.1*retaddr *label164               ...
  346:  call *label45 *invalid :buildBlockFromCfg.1*retval           ...
        label *label164                                              ...
  347:  set .metaglassSurplus 10                                     CoreBuilder.mnd: metaglassSurplus = 10;
  348:  write 0 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  349:  write 0 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  350:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  351:  setaddr :buildUnits*retaddr *label168                        CoreBuilder.mnd: buildUnits();
  352:  call *label47 *invalid :buildUnits*retval                    ...
        label *label168                                              ...
  353:  read *tmp82 .controller ".polys"                             CoreBuilder.mnd: var tmp = controller.polys - 1;
  354:  op sub :tmp *tmp82 1                                         ...
  355:  write :tmp .controller ".polyTarget"                         CoreBuilder.mnd: controller.polyTarget = tmp;
  356:  write :tmp .controller ".polys"                              CoreBuilder.mnd: controller.polys = tmp;
  357:  write :tmp processor2 ".polys"                               CoreBuilder.mnd: display.polys = tmp;
  358:  sensor :x AÁNBJd-multiplicative-reconstructor26 @x           CoreBuilder.mnd: var x = multiplicative_rec.@x;
  359:  sensor :y AÁNBJd-multiplicative-reconstructor26 @y           CoreBuilder.mnd: var y = multiplicative_rec.@y;
        label *label169                                              CoreBuilder.mnd: do
  360:  ucontrol move :x :y 0 0 0                                    CoreBuilder.mnd: move(x, y);
  361:  ucontrol payEnter 0 0 0 0 0                                  CoreBuilder.mnd: payEnter();
  362:  read *tmp83 .controller ".megas"                             CoreBuilder.mnd: while !controller.megas;
  363:  jump *label169 equal *tmp83 false                            CoreBuilder.mnd: do
  364:  write true .controller ".finished"                           CoreBuilder.mnd: controller.finished = true;
  365:  control enabled processor1 false 0 0 0                       CoreBuilder.mnd: timer.enabled = false;
  366:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  367:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  368:  control enabled processor6 false 0 0 0                       CoreBuilder.mnd: polyController.enabled = false;
  369:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: oreLocator.enabled = false;
  370:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: blockBuilder.enabled = false;
  371:  control enabled processor11 false 0 0 0                      CoreBuilder.mnd: measurements.enabled = false;
  372:  end
        label *label15                                               Actions.mnd: void error(error)
  373:  set .ERROR :error:error                                      Actions.mnd: ERROR = error;
  374:  stop                                                         Actions.mnd: stopProcessor();
  375:  return :error*retaddr                                        Actions.mnd: void error(error)
        label *label39                                               CoreBuilder.mnd: void supplyBase()
  376:  op add *tmp247 .siliconMonoSurplus silicon                   CoreBuilder.mnd: monoController.sandTarget = max(0, siliconMonoSurplus + targetSilicon - core.@silicon);
  377:  sensor *tmp248 .core @silicon                                ...
  378:  op sub *tmp249 *tmp247 *tmp248                               ...
  379:  op max *tmp250 0 *tmp249                                     ...
  380:  write *tmp250 processor7 ".sandTarget"                       ...
  381:  jump *label175 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  382:  write "Phase 2: servicing thorium drill" processor2 ".status Actions.mnd: display.status1 = text;
  383:  sensor *tmp355 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  384:  jump *label592 greaterThanEq *tmp355 2000                    ...
  385:  sensor *tmp358 .thoriumGenerator @coal                       CoreBuilder.mnd: if thoriumGenerator.@coal == 0 then
  386:  jump *label590 notEqual *tmp358 0                            ...
  387:  sensor *tmp361 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  388:  jump *label587 greaterThanEq *tmp361 50                      ...
  389:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  390:  set :supplyBlock:ore @coal                                   ...
  391:  setaddr :supplyBlock*retaddr *label589                       ...
  392:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label587                                              CoreBuilder.mnd: if core.@coal < 50 then
  393:  sensor *tmp416 .thoriumGenerator @itemCapacity               Actions.mnd: var cap = min(target.@itemCapacity, capacity);
  394:  op min :supplyBlockFromCore:cap *tmp416 30                   ...
  395:  set :transportStatus:target :supplyBlockFromCore:cap         Actions.mnd: transportStatus(cap, item);
  396:  set :transportStatus:item @coal                              ...
  397:  setaddr :transportStatus*retaddr *label630                   ...
  398:  call *label14 *invalid :transportStatus*retval               ...
        label *label630                                              ...
  399:  set :status2:text "Transferring "                            Actions.mnd: status2("Transferring ", item, target);
  400:  set :status2:item @coal                                      ...
  401:  set :status2:block .thoriumGenerator                         ...
  402:  setaddr :status2*retaddr *label631                           ...
  403:  call *label12 *invalid :status2*retval                       ...
        label *label631                                              ...
  404:  set :moveToEmpty:x .coreX                                    Actions.mnd: moveToEmpty(coreX, coreY);
  405:  set :moveToEmpty:y .coreY                                    ...
  406:  setaddr :moveToEmpty*retaddr *label632                       ...
  407:  call *label18 *invalid :moveToEmpty*retval                   ...
        label *label632                                              ...
  408:  setaddr :dropAll*retaddr *label633                           Actions.mnd: dropAll();
  409:  call *label19 *invalid :dropAll*retval                       ...
        label *label633                                              ...
        label *label634                                              Actions.mnd: do
  410:  ucontrol itemTake .core @coal :supplyBlockFromCore:cap 0 0   Actions.mnd: itemTake(core, item, cap);
  411:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  412:  op notEqual *tmp419 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  413:  op notEqual *tmp420 :supplyBlockFromCore:unitItem @coal      ...
  414:  op land *tmp421 *tmp419 *tmp420                              ...
  415:  jump *label635 equal *tmp421 false                           ...
  416:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label635                                              Actions.mnd: if unitItem != null and unitItem != item then
  417:  sensor *tmp423 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < cap and core.sensor(item);
  418:  op lessThan *tmp424 *tmp423 :supplyBlockFromCore:cap         ...
  419:  sensor *tmp425 .core @coal                                   ...
  420:  op land *tmp426 *tmp424 *tmp425                              ...
  421:  jump *label634 notEqual *tmp426 false                        Actions.mnd: do
  422:  set :depositItems:block .thoriumGenerator                    Actions.mnd: depositItems(target, item);
  423:  set :depositItems:item @coal                                 ...
  424:  setaddr :depositItems*retaddr *label639                      ...
  425:  call *label21 *invalid :depositItems*retval                  ...
        label *label639                                              ...
        label *label589                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label590                                              CoreBuilder.mnd: if thoriumGenerator.@coal == 0 then
        label *label592                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  426:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  427:  set :fetchBlock:item @thorium                                ...
  428:  setaddr :fetchBlock*retaddr *label594                        ...
  429:  call *label26 *invalid :fetchBlock*retval                    ...
        label *label594                                              ...
  430:  sensor *tmp364 .core @thorium                                CoreBuilder.mnd: if core.@thorium > 400 then
  431:  jump *label176 lessThanEq *tmp364 400                        ...
  432:  write 4 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  433:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label175                                              ...
  434:  read *tmp81 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 1 then
  435:  jump *label178 lessThanEq *tmp81 1                           ...
  436:  write "Phase 1: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  437:  set :mineOre.2:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  438:  setaddr :mineOre.2*retaddr *label582                         ...
  439:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label582                                              ...
  440:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 1 then
        label *label178                                              ...
  441:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  442:  jump *label538 notEqual A©JNJP-unloader6 null                CoreBuilder.mnd: if unloader1 == null then
  443:  sensor *tmp288 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  444:  jump *label516 greaterThanEq *tmp288 graphite                ...
  445:  sensor *tmp291 AJEMJJ-graphite-press0 @coal                  CoreBuilder.mnd: if press.@coal < 5 then
  446:  jump *label514 greaterThanEq *tmp291 5                       ...
  447:  write "Goal 1: graphite requirement" processor2 ".status1"   Actions.mnd: display.status1 = text;
  448:  set :supplyBlock:block AJEMJJ-graphite-press0                CoreBuilder.mnd: supplyBlock(press, @coal);
  449:  set :supplyBlock:ore @coal                                   ...
  450:  setaddr :supplyBlock*retaddr *label513                       ...
  451:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label513                                              ...
  452:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label514                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label516                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  453:  sensor *tmp294 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  454:  jump *label530 greaterThanEq *tmp294 silicon                 ...
  455:  sensor *tmp297 ALMQJN-silicon-smelter4 @coal                 CoreBuilder.mnd: if smelter.@coal < 5 then
  456:  jump *label520 greaterThanEq *tmp297 5                       ...
  457:  write "Goal 2: coal for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  458:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @coal);
  459:  set :supplyBlock:ore @coal                                   ...
  460:  setaddr :supplyBlock*retaddr *label519                       ...
  461:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label519                                              ...
  462:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  463:  jump *label529 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label520                                              ...
  464:  sensor *tmp300 ALMQJN-silicon-smelter4 @sand                 CoreBuilder.mnd: elsif smelter.@sand < 5 then
  465:  jump *label527 greaterThanEq *tmp300 5                       ...
  466:  jump *label523 equal .scrap false                            CoreBuilder.mnd: if scrap then
  467:  write "Goal 3a: scrap for silicon requirement" processor2 ". Actions.mnd: display.status1 = text;
  468:  set :supplyBlock:block AXPRJe-pulverizer27                   CoreBuilder.mnd: supplyBlock(pulverizer1, @scrap);
  469:  set :supplyBlock:ore @scrap                                  ...
  470:  setaddr :supplyBlock*retaddr *label522                       ...
  471:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label522                                              ...
  472:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  473:  jump *label526 always 0 0                                    CoreBuilder.mnd: if scrap then
        label *label523                                              ...
  474:  write "Goal 3: sand for silicon requirement" processor2 ".st Actions.mnd: display.status1 = text;
  475:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @sand);
  476:  set :supplyBlock:ore @sand                                   ...
  477:  setaddr :supplyBlock*retaddr *label525                       ...
  478:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label525                                              ...
  479:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label526                                              CoreBuilder.mnd: if scrap then
        label *label527                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label529                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label530                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  480:  sensor *tmp304 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
  481:  jump *label536 greaterThanEq *tmp304 .powerTarget            ...
  482:  sensor *tmp307 AJRJM-combustion-generator3 @coal            CoreBuilder.mnd: if generator.@coal < 2 then
  483:  jump *label534 greaterThanEq *tmp307 2                       ...
  484:  write "Goal 4: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  485:  set :supplyBlock:block AJRJM-combustion-generator3          CoreBuilder.mnd: supplyBlock(generator, @coal);
  486:  set :supplyBlock:ore @coal                                   ...
  487:  setaddr :supplyBlock*retaddr *label533                       ...
  488:  call *label27 *invalid :supplyBlock*retval                   ...
        label *label533                                              ...
  489:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label534                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label536                                              CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
        label *label538                                              CoreBuilder.mnd: if unloader1 == null then
  490:  set *tmp312 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(5, targetTitanium - core.@titanium) : 100;
  491:  sensor *tmp310 .core @titanium                               ...
  492:  jump *label540 greaterThanEq *tmp310 titanium                ...
  493:  sensor *tmp313 .core @titanium                               ...
  494:  op sub *tmp314 titanium *tmp313                              ...
  495:  op min *tmp312 5 *tmp314                                     ...
        label *label540                                              ...
  496:  sensor *tmp316 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  497:  jump *label575 greaterThanEq *tmp316 *tmp312                 ...
  498:  jump *label578 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  499:  sensor *tmp321 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  500:  op mul *tmp322 A©JNJP-unloader6 .powerTarget                 ...
  501:  jump *label543 greaterThanEq *tmp321 *tmp322                 ...
  502:  write "Goal 5: supplying generator" processor2 ".status1"    Actions.mnd: display.status1 = text;
  503:  set :mineOre.2:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  504:  setaddr :mineOre.2*retaddr *label542                         ...
  505:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label542                                              ...
  506:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label543                                              ...
  507:  sensor *tmp325 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  508:  jump *label550 greaterThanEq *tmp325 silicon                 ...
  509:  jump *label546 equal .scrap false                            CoreBuilder.mnd: if scrap then
  510:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  511:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  512:  sensor :supplyBase0:sand .sandContainer @sand                CoreBuilder.mnd: var sand = sandContainer.@sand;
  513:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @scrap;
  514:  select :mineOre.1:block lessThan :supplyBase0:coal :supplyBa CoreBuilder.mnd: var block = coal < sand ? core : sandContainer;
  515:  setaddr :mineOre.1*retaddr *label545                         CoreBuilder.mnd: mineOre(ore, block);
  516:  call *label24 *invalid :mineOre.1*retval                     ...
        label *label545                                              ...
  517:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if scrap then
        label *label546                                              ...
  518:  write "Goal 6: silicon requirement" processor2 ".status1"    Actions.mnd: display.status1 = text;
  519:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  520:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  521:  select :mineOre.2:ore lessThan :supplyBase0:coal.1 :supplyBa CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  522:  setaddr :mineOre.2*retaddr *label548                         CoreBuilder.mnd: mineOre(ore);
  523:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label548                                              ...
  524:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label550                                              ...
  525:  sensor *tmp339 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  526:  jump *label553 greaterThanEq *tmp339 copper                  ...
  527:  write "Goal 7: copper requirement" processor2 ".status1"     Actions.mnd: display.status1 = text;
  528:  set :mineOre.2:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  529:  setaddr :mineOre.2*retaddr *label552                         ...
  530:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label552                                              ...
  531:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label553                                              ...
  532:  sensor *tmp342 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  533:  jump *label556 greaterThanEq *tmp342 lead                    ...
  534:  write "Goal 8: lead requirement" processor2 ".status1"       Actions.mnd: display.status1 = text;
  535:  set :mineOre.2:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  536:  setaddr :mineOre.2*retaddr *label555                         ...
  537:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label555                                              ...
  538:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label556                                              ...
  539:  sensor *tmp345 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  540:  jump *label562 greaterThanEq *tmp345 metaglass               ...
  541:  write "Goal 9: metaglass requirement" processor2 ".status1"  Actions.mnd: display.status1 = text;
  542:  jump *label559 equal .scrap false                            CoreBuilder.mnd: if scrap then
  543:  set :mineOre.1:ore @scrap                                    CoreBuilder.mnd: mineOre(@scrap, sandContainer);
  544:  set :mineOre.1:block .sandContainer                          ...
  545:  setaddr :mineOre.1*retaddr *label558                         ...
  546:  call *label24 *invalid :mineOre.1*retval                     ...
        label *label558                                              ...
  547:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if scrap then
        label *label559                                              ...
  548:  set :mineOre.2:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  549:  setaddr :mineOre.2*retaddr *label560                         ...
  550:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label560                                              ...
  551:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label562                                              ...
  552:  write "Goal 10: supplying base" processor2 ".status1"        Actions.mnd: display.status1 = text;
  553:  jump *label565 equal A¨SSJi-container31 false                CoreBuilder.mnd: if container_a then
  554:  set :mineOre.1:ore @scrap                                    CoreBuilder.mnd: mineOre(@scrap, container_a);
  555:  set :mineOre.1:block A¨SSJi-container31                      ...
  556:  setaddr :mineOre.1*retaddr *label564                         ...
  557:  call *label24 *invalid :mineOre.1*retval                     ...
        label *label564                                              ...
  558:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if container_a then
        label *label565                                              ...
  559:  sensor *tmp350 .core @coal                                   CoreBuilder.mnd: var ore = scrap or core.@coal <= core.@sand ? @coal : @sand;
  560:  sensor *tmp351 .core @sand                                   ...
  561:  op lessThanEq *tmp352 *tmp350 *tmp351                        ...
  562:  op or *tmp353 .scrap *tmp352                                 ...
  563:  select :mineOre.2:ore notEqual *tmp353 false @coal @sand     ...
  564:  setaddr :mineOre.2*retaddr *label566                         CoreBuilder.mnd: mineOre(ore);
  565:  call *label25 *invalid :mineOre.2*retval                     ...
        label *label566                                              ...
  566:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label575                                              ...
  567:  write "Goal 11: Fetching titanium" processor2 ".status1"     Actions.mnd: display.status1 = text;
  568:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  569:  set :fetchBlock:item @titanium                               ...
  570:  setaddr :fetchBlock*retaddr *label577                        ...
  571:  call *label26 *invalid :fetchBlock*retval                    ...
        label *label577                                              ...
        label *label578                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label176                                              CoreBuilder.mnd: if thoriumContainer then
  572:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label43                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  573:  op add *tmp254 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  574:  jump *label183 lessThanEq *tmp254 0                          ...
  575:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  576:  setaddr :unpackCfg*retaddr *label185                         ...
  577:  call *label30 *invalid :unpackCfg*retval                     ...
        label *label185                                              ...
  578:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  579:  set :buildBlock:x :buildRemoteBlock:x                        ...
  580:  set :buildBlock:y :buildRemoteBlock:y                        ...
  581:  set :buildBlock:copper :unpackCfg:cu                         ...
  582:  set :buildBlock:lead :unpackCfg:pb                           ...
  583:  set :buildBlock:graphite :unpackCfg:gr                       ...
  584:  set :buildBlock:silicon :unpackCfg:si                        ...
  585:  set :buildBlock:titanium :unpackCfg:ti                       ...
  586:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  587:  set :buildBlock:thorium :unpackCfg:th                        ...
  588:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  589:  set :buildBlock:config null                                  ...
  590:  set :buildBlock:index :unpackCfg:ind                         ...
  591:  setaddr :buildBlock*retaddr *label186                        ...
  592:  call *label42 *invalid :buildBlock*retval                    ...
        label *label186                                              ...
  593:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  594:  return :buildRemoteBlock*retaddr                             ...
        label *label183                                              CoreBuilder.mnd: if x + y > 0 then
  595:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  596:  return :buildRemoteBlock*retaddr                             ...
        label *label44                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  597:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  598:  setaddr :unpackCfg*retaddr *label188                         ...
  599:  call *label30 *invalid :unpackCfg*retval                     ...
        label *label188                                              ...
  600:  op add *tmp257 .coreX :unpackCfg:x                           CoreBuilder.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  601:  op add *tmp258 .coreY :unpackCfg:y                           ...
  602:  set :buildBlock:block :unpackCfg:type                        ...
  603:  set :buildBlock:x *tmp257                                    ...
  604:  set :buildBlock:y *tmp258                                    ...
  605:  set :buildBlock:copper :unpackCfg:cu                         ...
  606:  set :buildBlock:lead :unpackCfg:pb                           ...
  607:  set :buildBlock:graphite :unpackCfg:gr                       ...
  608:  set :buildBlock:silicon :unpackCfg:si                        ...
  609:  set :buildBlock:titanium :unpackCfg:ti                       ...
  610:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  611:  set :buildBlock:thorium :unpackCfg:th                        ...
  612:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  613:  set :buildBlock:config :buildBlockFromCfg:config             ...
  614:  set :buildBlock:index :unpackCfg:ind                         ...
  615:  setaddr :buildBlock*retaddr *label189                        ...
  616:  call *label42 *invalid :buildBlock*retval                    ...
        label *label189                                              ...
  617:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        CoreBuilder.mnd: @this.write(building, cfg);
  618:  write :buildBlock*retval processor2 :buildBlockFromCfg:cfg   CoreBuilder.mnd: display.write(building, cfg);
  619:  write :buildBlock*retval .controller :buildBlockFromCfg:cfg  CoreBuilder.mnd: controller.write(building, cfg);
  620:  set :buildBlockFromCfg*retval :buildBlock*retval             CoreBuilder.mnd: return building;
  621:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label45                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  622:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  623:  set :buildBlockFromCfg:config null                           ...
  624:  setaddr :buildBlockFromCfg*retaddr *label191                 ...
  625:  call *label44 *invalid :buildBlockFromCfg*retval             ...
        label *label191                                              ...
  626:  return :buildBlockFromCfg.1*retaddr                          CoreBuilder.mnd: def buildBlockFromCfg(cfg)
        label *label46                                               CoreBuilder.mnd: void meetTarget(cfg)
  627:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  628:  setaddr :unpackCfg*retaddr *label193                         ...
  629:  call *label30 *invalid :unpackCfg*retval                     ...
        label *label193                                              ...
  630:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th, false, false);
  631:  set :meetTarget:copper :unpackCfg:cu                         ...
  632:  set :meetTarget:lead :unpackCfg:pb                           ...
  633:  set :meetTarget:graphite :unpackCfg:gr                       ...
  634:  set :meetTarget:silicon :unpackCfg:si                        ...
  635:  set :meetTarget:titanium :unpackCfg:ti                       ...
  636:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  637:  set :meetTarget:thorium :unpackCfg:th                        ...
  638:  set :meetTarget:forBuild false                               ...
  639:  set :meetTarget:isNoTarget false                             ...
  640:  setaddr :meetTarget*retaddr *label194                        ...
  641:  call *label41 *invalid :meetTarget*retval                    ...
        label *label194                                              ...
  642:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label47                                               CoreBuilder.mnd: void buildUnits()
  643:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0, false, true);
  644:  set :meetTarget:copper 0                                     ...
  645:  set :meetTarget:lead 0                                       ...
  646:  set :meetTarget:graphite 0                                   ...
  647:  set :meetTarget:silicon 0                                    ...
  648:  set :meetTarget:titanium 0                                   ...
  649:  set :meetTarget:metaglass 0                                  ...
  650:  set :meetTarget:thorium 0                                    ...
  651:  set :meetTarget:forBuild false                               ...
  652:  set :meetTarget:isNoTarget true                              ...
  653:  setaddr :meetTarget*retaddr *label196                        ...
  654:  call *label41 *invalid :meetTarget*retval                    ...
        label *label196                                              ...
  655:  write 0 processor2 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  656:  write null processor2 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  657:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  658:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  659:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  660:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label30                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  661:  read *tmp261 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  662:  op sub *tmp262 *tmp261 74                                    ...
  663:  lookup block :unpackCfg:type *tmp262                         ...
  664:  read *tmp265 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  665:  op sub *tmp266 *tmp265 74                                    ...
  666:  op div :unpackCfg:x *tmp266 2                                ...
  667:  read *tmp269 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  668:  op sub *tmp270 *tmp269 74                                    ...
  669:  op div :unpackCfg:y *tmp270 2                                ...
  670:  read *tmp273 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  671:  op sub :unpackCfg:rotation *tmp273 74                        ...
  672:  read *tmp276 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  673:  op sub :unpackCfg:ind *tmp276 74                             ...
  674:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  675:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  676:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  677:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  678:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  679:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  680:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  681:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label41                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
  682:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  683:  op sign *tmp368 :meetTarget:lead 0                           ...
  684:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  685:  op sign *tmp368 :meetTarget:graphite 0                       ...
  686:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  687:  op sign *tmp368 :meetTarget:silicon 0                        ...
  688:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  689:  op sign *tmp368 :meetTarget:titanium 0                       ...
  690:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  691:  op sign *tmp368 :meetTarget:metaglass 0                      ...
  692:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  693:  op sign *tmp368 :meetTarget:thorium 0                        ...
  694:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  695:  write :meetTarget:count processor2 ".totalTargets"           CoreBuilder.mnd: display.totalTargets = count;
  696:  write :meetTarget:block processor2 ".nextBlock"              CoreBuilder.mnd: display.nextBlock = block;
  697:  write :meetTarget:copper processor2 ".targetCopper"          CoreBuilder.mnd: display.targetCopper = copper;
  698:  write :meetTarget:lead processor2 ".targetLead"              CoreBuilder.mnd: display.targetLead = lead;
  699:  write :meetTarget:graphite processor2 ".targetGraphite"      CoreBuilder.mnd: display.targetGraphite = graphite;
  700:  write :meetTarget:silicon processor2 ".targetSilicon"        CoreBuilder.mnd: display.targetSilicon = silicon;
  701:  write :meetTarget:titanium processor2 ".targetTitanium"      CoreBuilder.mnd: display.targetTitanium = titanium;
  702:  write :meetTarget:metaglass processor2 ".targetMetaglass"    CoreBuilder.mnd: display.targetMetaglass = metaglass;
  703:  write :meetTarget:thorium processor2 ".targetThorium"        CoreBuilder.mnd: display.targetThorium = thorium;
  704:  set copper :meetTarget:copper                                CoreBuilder.mnd: targetCopper = copper;
  705:  op add lead :meetTarget:lead .leadSurplus                    CoreBuilder.mnd: targetLead = lead + leadSurplus;
  706:  set graphite :meetTarget:graphite                            CoreBuilder.mnd: targetGraphite = graphite;
  707:  set silicon :meetTarget:silicon                              CoreBuilder.mnd: targetSilicon = silicon;
  708:  set titanium :meetTarget:titanium                            CoreBuilder.mnd: targetTitanium = titanium;
  709:  set metaglass :meetTarget:metaglass                          CoreBuilder.mnd: targetMetaglass = metaglass;
  710:  set thorium :meetTarget:thorium                              CoreBuilder.mnd: targetThorium = thorium;
  711:  set .noTarget :meetTarget:isNoTarget                         CoreBuilder.mnd: noTarget = isNoTarget;
  712:  op add *tmp370 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  713:  write *tmp370 .controller ".pressTarget"                     ...
  714:  op add *tmp371 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  715:  write *tmp371 .controller ".smelterTarget"                   ...
  716:  op add *tmp372 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  717:  write *tmp372 .controller ".kilnTarget"                      ...
  718:  write lead .controller ".leadReserve"                        CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  719:  op sign *tmp374 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  720:  op mul *tmp375 *tmp374 20                                    ...
  721:  op add *tmp376 :meetTarget:silicon *tmp375                   ...
  722:  write *tmp376 .controller ".siliconReserve"                  ...
  723:  op sign *tmp377 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  724:  op mul *tmp378 *tmp377 20                                    ...
  725:  op add *tmp379 :meetTarget:graphite *tmp378                  ...
  726:  write *tmp379 .controller ".graphiteReserve"                 ...
  727:  write lead processor7 ".leadTarget"                          CoreBuilder.mnd: monoController.leadTarget = targetLead;
  728:  write :meetTarget:copper processor7 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
        label *label303                                              CoreBuilder.mnd: while !targetMet() do
  729:  setaddr :targetMet*retaddr *label306                         ...
  730:  call *label40 *invalid :targetMet*retval                     ...
        label *label306                                              ...
  731:  jump *label305 notEqual :targetMet*retval false              ...
  732:  setaddr :supplyBase*retaddr *label303                        CoreBuilder.mnd: supplyBase();
  733:  call *label39 *invalid :supplyBase*retval                    ...
        label *label305                                              CoreBuilder.mnd: while !targetMet() do
  734:  jump *label308 equal :meetTarget:forBuild false              CoreBuilder.mnd: if forBuild then
  735:  write false .controller ":buildStart*finished"               CoreBuilder.mnd: controller.buildStart();
  736:  write 1 .controller "@counter"                               ...
        label *label310                                              ...
  737:  wait 1e-15                                                   ...
  738:  read *tmp383 .controller ":buildStart*finished"              ...
  739:  jump *label310 equal *tmp383 false                           ...
        label *label311                                              CoreBuilder.mnd: while !targetMet() do
  740:  setaddr :targetMet*retaddr *label314                         ...
  741:  call *label40 *invalid :targetMet*retval                     ...
        label *label314                                              ...
  742:  jump *label313 notEqual :targetMet*retval false              ...
  743:  setaddr :supplyBase*retaddr *label311                        CoreBuilder.mnd: supplyBase();
  744:  call *label39 *invalid :supplyBase*retval                    ...
        label *label313                                              CoreBuilder.mnd: while !targetMet() do
        label *label308                                              CoreBuilder.mnd: if forBuild then
  745:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, forBuild, isNoTarget)
        label *label42                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  746:  op notEqual *tmp386 .controller null                         CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium, controller != null, false);
  747:  set :meetTarget:block :buildBlock:block                      ...
  748:  set :meetTarget:copper :buildBlock:copper                    ...
  749:  set :meetTarget:lead :buildBlock:lead                        ...
  750:  set :meetTarget:graphite :buildBlock:graphite                ...
  751:  set :meetTarget:silicon :buildBlock:silicon                  ...
  752:  set :meetTarget:titanium :buildBlock:titanium                ...
  753:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  754:  set :meetTarget:thorium :buildBlock:thorium                  ...
  755:  set :meetTarget:forBuild *tmp386                             ...
  756:  set :meetTarget:isNoTarget false                             ...
  757:  setaddr :meetTarget*retaddr *label317                        ...
  758:  call *label41 *invalid :meetTarget*retval                    ...
        label *label317                                              ...
  759:  write :buildBlock:block processor5 ":buildBlockAt:block"     CoreBuilder.mnd: var built = blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  760:  write :buildBlock:x processor5 ":buildBlockAt:x"             ...
  761:  write :buildBlock:y processor5 ":buildBlockAt:y"             ...
  762:  write :buildBlock:rotation processor5 ":buildBlockAt:rotatio ...
  763:  write :buildBlock:config processor5 ":buildBlockAt:config"   ...
  764:  write :buildBlock:index processor5 ":buildBlockAt:index"     ...
  765:  write false processor5 ":buildBlockAt*finished"              ...
  766:  write 1 processor5 "@counter"                                ...
        label *label318                                              ...
  767:  wait 1e-15                                                   ...
  768:  read *tmp393 processor5 ":buildBlockAt*finished"             ...
  769:  jump *label318 equal *tmp393 false                           ...
  770:  read :buildBlock*retval processor5 ":buildBlockAt*retval"    ...
  771:  write false .controller ":buildStop*finished"                CoreBuilder.mnd: async(controller.buildStop());
  772:  write 2 .controller "@counter"                               ...
  773:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label24                                               Actions.mnd: void mineOre(ore, block)
  774:  set :status2:text "Mining "                                  Actions.mnd: status2("Mining ", ore, block);
  775:  set :status2:item :mineOre.1:ore                             ...
  776:  set :status2:block :mineOre.1:block                          ...
  777:  setaddr :status2*retaddr *label321                           ...
  778:  call *label12 *invalid :status2*retval                       ...
        label *label321                                              ...
  779:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, block);
  780:  set :mineOre:amount 30                                       ...
  781:  set :mineOre:block :mineOre.1:block                          ...
  782:  setaddr :mineOre*retaddr *label322                           ...
  783:  call *label23 *invalid :mineOre*retval                       ...
        label *label322                                              ...
  784:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore, block)
        label *label25                                               Actions.mnd: void mineOre(ore)
  785:  set :status2:text "Mining "                                  Actions.mnd: status2("Mining ", ore, "core");
  786:  set :status2:item :mineOre.2:ore                             ...
  787:  set :status2:block "core"                                    ...
  788:  setaddr :status2*retaddr *label324                           ...
  789:  call *label12 *invalid :status2*retval                       ...
        label *label324                                              ...
  790:  set :mineOre:ore :mineOre.2:ore                              Actions.mnd: mineOre(ore, capacity, core);
  791:  set :mineOre:amount 30                                       ...
  792:  set :mineOre:block .core                                     ...
  793:  setaddr :mineOre*retaddr *label325                           ...
  794:  call *label23 *invalid :mineOre*retval                       ...
        label *label325                                              ...
  795:  return :mineOre.2*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label26                                               Actions.mnd: void fetchBlock(block, item)
  796:  sensor *tmp398 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  797:  op min :transportStatus:target *tmp398 30                    ...
  798:  set :transportStatus:item :fetchBlock:item                   ...
  799:  setaddr :transportStatus*retaddr *label327                   ...
  800:  call *label14 *invalid :transportStatus*retval               ...
        label *label327                                              ...
  801:  set :status2:text "Fetching "                                Actions.mnd: status2("Fetching ", item, block);
  802:  set :status2:item :fetchBlock:item                           ...
  803:  set :status2:block :fetchBlock:block                         ...
  804:  setaddr :status2*retaddr *label328                           ...
  805:  call *label12 *invalid :status2*retval                       ...
        label *label328                                              ...
  806:  sensor *tmp400 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  807:  sensor *tmp401 :fetchBlock:block @y                          ...
  808:  set :moveToEmpty:x *tmp400                                   ...
  809:  set :moveToEmpty:y *tmp401                                   ...
  810:  setaddr :moveToEmpty*retaddr *label329                       ...
  811:  call *label18 *invalid :moveToEmpty*retval                   ...
        label *label329                                              ...
  812:  setaddr :dropAll*retaddr *label330                           Actions.mnd: dropAll();
  813:  call *label19 *invalid :dropAll*retval                       ...
        label *label330                                              ...
        label *label331                                              Actions.mnd: do
  814:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  815:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  816:  op notEqual *tmp403 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  817:  op notEqual *tmp404 :fetchBlock:unitItem :fetchBlock:item    ...
  818:  op land *tmp405 *tmp403 *tmp404                              ...
  819:  jump *label334 equal *tmp405 false                           ...
  820:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label334                                              Actions.mnd: if unitItem != null and unitItem != item then
  821:  sensor *tmp407 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  822:  op lessThan *tmp408 *tmp407 30                               ...
  823:  sensor *tmp409 :fetchBlock:block :fetchBlock:item            ...
  824:  op land *tmp410 *tmp408 *tmp409                              ...
  825:  jump *label331 notEqual *tmp410 false                        Actions.mnd: do
  826:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  827:  set :depositItems:item :fetchBlock:item                      ...
  828:  setaddr :depositItems*retaddr *label336                      ...
  829:  call *label21 *invalid :depositItems*retval                  ...
        label *label336                                              ...
  830:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label27                                               Actions.mnd: void supplyBlock(block, ore)
  831:  set :status2:text "Supplying "                               Actions.mnd: status2("Supplying ", ore, block);
  832:  set :status2:item :supplyBlock:ore                           ...
  833:  set :status2:block :supplyBlock:block                        ...
  834:  setaddr :status2*retaddr *label338                           ...
  835:  call *label12 *invalid :status2*retval                       ...
        label *label338                                              ...
  836:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  837:  sensor *tmp412 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  838:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp4 ...
  839:  jump *label339 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  840:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  841:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  842:  set :mineOre:block :supplyBlock:block                        ...
  843:  setaddr :mineOre*retaddr *label341                           ...
  844:  call *label23 *invalid :mineOre*retval                       ...
        label *label341                                              ...
        label *label339                                              Actions.mnd: if missing > 0 then
  845:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label40                                               CoreBuilder.mnd: def targetMet()
  846:  sensor *tmp427 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  847:  jump *label354 greaterThanEq *tmp427 copper                  ...
  848:  set :targetMet*retval false                                  ...
  849:  return :targetMet*retaddr                                    ...
        label *label354                                              ...
  850:  sensor *tmp430 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  851:  jump *label356 greaterThanEq *tmp430 lead                    ...
  852:  set :targetMet*retval false                                  ...
  853:  return :targetMet*retaddr                                    ...
        label *label356                                              ...
  854:  sensor *tmp433 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  855:  jump *label358 greaterThanEq *tmp433 graphite                ...
  856:  set :targetMet*retval false                                  ...
  857:  return :targetMet*retaddr                                    ...
        label *label358                                              ...
  858:  sensor *tmp436 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  859:  jump *label360 greaterThanEq *tmp436 silicon                 ...
  860:  set :targetMet*retval false                                  ...
  861:  return :targetMet*retaddr                                    ...
        label *label360                                              ...
  862:  sensor *tmp439 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  863:  jump *label362 greaterThanEq *tmp439 titanium                ...
  864:  set :targetMet*retval false                                  ...
  865:  return :targetMet*retaddr                                    ...
        label *label362                                              ...
  866:  sensor *tmp442 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  867:  jump *label364 greaterThanEq *tmp442 metaglass               ...
  868:  set :targetMet*retval false                                  ...
  869:  return :targetMet*retaddr                                    ...
        label *label364                                              ...
  870:  sensor *tmp445 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  871:  jump *label366 greaterThanEq *tmp445 thorium                 ...
  872:  set :targetMet*retval false                                  ...
  873:  return :targetMet*retaddr                                    ...
        label *label366                                              ...
  874:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  875:  return :targetMet*retaddr                                    ...
        label *label12                                               Actions.mnd: void status2(text, item, block)
  876:  write :status2:text processor2 ".status2"                    Actions.mnd: display.status2 = text;
  877:  write :status2:item processor2 ".item2"                      Actions.mnd: display.item2 = item;
  878:  write :status2:block processor2 ".block2"                    Actions.mnd: display.block2 = block;
  879:  return :status2*retaddr                                      Actions.mnd: void status2(text, item, block)
        label *label14                                               Actions.mnd: void transportStatus(target, item)
  880:  write :transportStatus:target processor2 ".transportTarget"  Actions.mnd: display.transportTarget = target;
  881:  write :transportStatus:item processor2 ".transportItem"      Actions.mnd: display.transportItem = item;
  882:  return :transportStatus*retaddr                              Actions.mnd: void transportStatus(target, item)
        label *label18                                               Actions.mnd: void moveToEmpty(x, y)
  883:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
        label *label372                                              Actions.mnd: do
  884:  sensor *tmp448 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  885:  jump *label375 equal *tmp448 null                            ...
  886:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label375                                              ...
  887:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  888:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp451 0    Actions.mnd: while !within(x, y, RADIUS);
  889:  jump *label372 equal *tmp451 false                           Actions.mnd: do
  890:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label19                                               Actions.mnd: void dropAll()
  891:  sensor *tmp453 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  892:  jump *label380 equal *tmp453 null                            ...
        label *label664                                              ...
  893:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  894:  sensor *tmp453 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  895:  jump *label664 notEqual *tmp453 null                         ...
        label *label380                                              ...
  896:  return :dropAll*retaddr                                      Actions.mnd: void dropAll()
        label *label21                                               Actions.mnd: void depositItems(block, item)
  897:  write "Depositing..." processor2 ".status3"                  Actions.mnd: display.status3 = text;
  898:  sensor *tmp455 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  899:  jump *label383 notEqual *tmp455 :depositItems:item           ...
  900:  sensor *tmp482 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
  901:  sensor *tmp483 :depositItems:block @y                        ...
  902:  write "Moving..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  903:  ucontrol within *tmp482 *tmp483 6 *tmp488 0                  Actions.mnd: while !within(x, y, radius) do
  904:  jump *label662 notEqual *tmp488 false                        ...
        label *label665                                              ...
  905:  ucontrol approach *tmp482 *tmp483 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  906:  ucontrol within *tmp482 *tmp483 6 *tmp488 0                  Actions.mnd: while !within(x, y, radius) do
  907:  jump *label665 equal *tmp488 false                           ...
        label *label662                                              ...
  908:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label386                                              Actions.mnd: do
  909:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  910:  sensor *tmp459 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  911:  op mul *tmp460 *tmp459 :depositItems:cap                     ...
  912:  sensor *tmp461 :depositItems:block :depositItems:item        ...
  913:  jump *label386 greaterThan *tmp460 *tmp461                   Actions.mnd: do
  914:  jump *label384 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label383                                              ...
  915:  sensor *tmp463 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  916:  jump *label391 equal *tmp463 null                            ...
        label *label666                                              ...
  917:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  918:  sensor *tmp463 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  919:  jump *label666 notEqual *tmp463 null                         ...
        label *label391                                              ...
        label *label384                                              Actions.mnd: if @unit.@firstItem == item then
  920:  set :transportStatus:target 0                                Actions.mnd: transportStatus(0, null);
  921:  set :transportStatus:item null                               ...
  922:  setaddr :transportStatus*retaddr *label392                   ...
  923:  call *label14 *invalid :transportStatus*retval               ...
        label *label392                                              ...
  924:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label23                                               Actions.mnd: void mineOre(ore, amount, block)
  925:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  926:  set :transportStatus:target :mineOre:amount                  Actions.mnd: transportStatus(amount, ore);
  927:  set :transportStatus:item :mineOre:ore                       ...
  928:  setaddr :transportStatus*retaddr *label394                   ...
  929:  call *label14 *invalid :transportStatus*retval               ...
        label *label394                                              ...
  930:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  931:  jump *label654 notEqual *tmp484 false                        ...
  932:  set :error:error "Cannot locate ore"                         Actions.mnd: error("Cannot locate ore");
  933:  setaddr :error*retaddr *label653                             ...
  934:  call *label15 *invalid :error*retval                         ...
        label *label653                                              ...
        label *label654                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  935:  set :mineOre:x :locateOre:x                                  Actions.mnd: locateOre(ore, out x, out y);
  936:  set :mineOre:y :locateOre:y                                  ...
  937:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  938:  set :moveToEmpty:y :locateOre:y                              ...
  939:  setaddr :moveToEmpty*retaddr *label396                       ...
  940:  call *label18 *invalid :moveToEmpty*retval                   ...
        label *label396                                              ...
  941:  sensor *tmp466 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  942:  jump *label397 equal *tmp466 :mineOre:ore                    ...
  943:  setaddr :dropAll*retaddr *label399                           ...
  944:  call *label19 *invalid :dropAll*retval                       ...
        label *label399                                              ...
        label *label397                                              ...
  945:  write "Mining..." processor2 ".status3"                      Actions.mnd: display.status3 = text;
  946:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label401                                              Actions.mnd: do
  947:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  948:  op notEqual *tmp471 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  949:  op notEqual *tmp472 :mineOre:item :mineOre:ore               ...
  950:  op land *tmp473 *tmp471 *tmp472                              ...
  951:  jump *label403 notEqual *tmp473 false                        ...
  952:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  953:  jump *label403 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  954:  jump *label408 notEqual .noTarget false                      Actions.mnd: if not noTarget then
  955:  setaddr :targetMet*retaddr *label410                         Actions.mnd: if targetMet() then
  956:  call *label40 *invalid :targetMet*retval                     ...
        label *label410                                              ...
  957:  jump *label403 notEqual :targetMet*retval false              ...
        label *label408                                              Actions.mnd: if not noTarget then
  958:  sensor *tmp480 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  959:  jump *label401 lessThan *tmp480 :mineOre:amount              Actions.mnd: do
        label *label403                                              ...
  960:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  961:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  962:  set :depositItems:item :mineOre:ore                          ...
  963:  setaddr :depositItems*retaddr *label413                      ...
  964:  call *label21 *invalid :depositItems*retval                  ...
        label *label413                                              ...
  965:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 822 ms, compiled in 406 ms, optimized in 3,520 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (2 steps):
The program didn't generate any output.
Execution exception at instruction 1: read *tmp31 processor2 "*signature":
Variable 'processor2' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
