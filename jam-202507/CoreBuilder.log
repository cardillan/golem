  1330 instructions before optimizations.
    70 instructions eliminated by Temp Variables Elimination (2 iterations).
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:29:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    69 instructions eliminated by Jump Optimization (5 iterations).
    49 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions eliminated by Expression Optimization (2 passes, 3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   196 instructions eliminated by Data Flow Optimization (13 passes, 45 iterations).
    33 instructions added by Loop Optimization (3 iterations).
     8 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (21 iterations).
     1 loops unrolled by Loop Unrolling.
   145 instructions added by Function Inlining (21 iterations).
    14 function calls inlined by Function Inlining.
     8 instructions eliminated by Jump Straightening (5 iterations).
    11 instructions updated by JumpThreading.
    12 instructions eliminated by Unreachable Code Elimination (2 iterations).
   976 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 127):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit    13227.5, efficiency  13227.539
    Replicate loop condition at Actions.mnd:89:9                 size    +1, benefit    13227.5, efficiency  13227.539
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     9868.2, efficiency   9868.164
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     6718.8, efficiency   6718.750
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000
  * Unroll iteration loop at CoreBuilder.mnd:208:5               size   -11, benefit      828.0, efficiency   Infinity (-9 instructions)
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +21, benefit     4232.8, efficiency    201.563
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +147, benefit     3552.5, efficiency     24.167
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +151, benefit      234.0, efficiency      1.550
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:482:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:491:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:500:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:512:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at Actions.mnd:129:5                    size   +22, benefit     3157.8, efficiency    143.537
    Inline function call at Actions.mnd:135:5                    size   +37, benefit     3023.4, efficiency     81.715
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit       75.6, efficiency      2.043
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +22, benefit     1075.0, efficiency     48.864
  ! Inline function call at CoreBuilder.mnd:232:9                size  +184, benefit     2700.0, efficiency     14.674
    Inline function call at CoreBuilder.mnd:272:5                size   +76, benefit      169.0, efficiency      2.224
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +76, benefit       52.0, efficiency      0.684
    Inline function call at CoreBuilder.mnd:355:5                size   +76, benefit       13.0, efficiency      0.171

Pass 1: speed optimization selection (cost limit 136):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit    13227.5, efficiency  13227.539 (+1 instructions)
    Replicate loop condition at Actions.mnd:89:9                 size    +1, benefit    13227.5, efficiency  13227.539
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     9868.2, efficiency   9868.164
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     6718.8, efficiency   6718.750
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +21, benefit     4232.8, efficiency    201.563
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +147, benefit     3552.5, efficiency     24.167
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
    Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:482:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:491:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:500:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:512:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at Actions.mnd:129:5                    size   +22, benefit     3157.8, efficiency    143.537
    Inline function call at Actions.mnd:135:5                    size   +37, benefit     3023.4, efficiency     81.715
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit       75.6, efficiency      2.043
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +22, benefit     1075.0, efficiency     48.864
  ! Inline function call at CoreBuilder.mnd:232:9                size  +184, benefit     2700.0, efficiency     14.674
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 135):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:89:9                 size    +1, benefit    13227.5, efficiency  13227.539 (+1 instructions)
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     9868.2, efficiency   9868.164
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     6718.8, efficiency   6718.750
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +22, benefit     4232.8, efficiency    192.401
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +147, benefit     3552.5, efficiency     24.167
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
    Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:482:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:491:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:500:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:512:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at Actions.mnd:129:5                    size   +23, benefit     3157.8, efficiency    137.296
    Inline function call at Actions.mnd:135:5                    size   +37, benefit     3023.4, efficiency     81.715
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit       75.6, efficiency      2.043
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +23, benefit     1075.0, efficiency     46.739
  ! Inline function call at CoreBuilder.mnd:232:9                size  +184, benefit     2700.0, efficiency     14.674
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 134):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     9868.2, efficiency   9868.164 (+1 instructions)
    Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     6718.8, efficiency   6718.750
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +23, benefit     4232.8, efficiency    184.035
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +147, benefit     3552.5, efficiency     24.167
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
    Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:482:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:491:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:500:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:512:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at Actions.mnd:129:5                    size   +24, benefit     3157.8, efficiency    131.576
    Inline function call at Actions.mnd:135:5                    size   +37, benefit     3023.4, efficiency     81.715
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at Actions.mnd:161:9                    size   +37, benefit       75.6, efficiency      2.043
    Inline function call at Actions.mnd:161:9                    size   +37, benefit      151.2, efficiency      4.086
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +24, benefit     1075.0, efficiency     44.792
  ! Inline function call at CoreBuilder.mnd:232:9                size  +184, benefit     2700.0, efficiency     14.674
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 133):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:66:5                 size    +1, benefit     6718.8, efficiency   6718.750 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +23, benefit     4232.8, efficiency    184.035
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +151, benefit     3552.5, efficiency     23.527
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
    Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:482:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:491:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:500:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +184, benefit       75.0, efficiency      0.408
  ! Inline function call at CoreBuilder.mnd:512:9                size  +184, benefit       75.0, efficiency      0.408
    Inline function call at Actions.mnd:129:5                    size   +24, benefit     3157.8, efficiency    131.576
    Inline function call at Actions.mnd:135:5                    size   +38, benefit     3023.4, efficiency     79.564
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit       75.6, efficiency      1.989
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +24, benefit     1075.0, efficiency     44.792
  ! Inline function call at CoreBuilder.mnd:232:9                size  +184, benefit     2700.0, efficiency     14.674
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 132):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
  * Replicate loop condition at Actions.mnd:44:5                 size    +1, benefit      850.0, efficiency    850.000 (+1 instructions)
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +23, benefit     4232.8, efficiency    184.035
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +151, benefit     3552.5, efficiency     23.527
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +255, benefit      204.0, efficiency      0.800
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:482:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:491:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:500:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:512:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at Actions.mnd:129:5                    size   +24, benefit     3157.8, efficiency    131.576
    Inline function call at Actions.mnd:135:5                    size   +38, benefit     3023.4, efficiency     79.564
    Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit       75.6, efficiency      1.989
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +24, benefit     1075.0, efficiency     44.792
  ! Inline function call at CoreBuilder.mnd:232:9                size  +185, benefit     2700.0, efficiency     14.595
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      156.0, efficiency      4.875
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 131):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
    Inline function 'depositItems' defined at Actions.mnd:79:1   size   +23, benefit     4232.8, efficiency    184.035
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +151, benefit     3552.5, efficiency     23.527
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +41, benefit     2351.6, efficiency     57.355
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:482:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:491:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:500:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +185, benefit       75.0, efficiency      0.405
  ! Inline function call at CoreBuilder.mnd:512:9                size  +185, benefit       75.0, efficiency      0.405
    Inline function call at Actions.mnd:129:5                    size   +24, benefit     3157.8, efficiency    131.576
    Inline function call at Actions.mnd:135:5                    size   +38, benefit     3023.4, efficiency     79.564
  * Inline function call at CoreBuilder.mnd:176:5                size    +7, benefit     1881.3, efficiency    268.750 (+6 instructions)
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit       75.6, efficiency      1.989
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +24, benefit     1075.0, efficiency     44.792
  ! Inline function call at CoreBuilder.mnd:232:9                size  +185, benefit     2700.0, efficiency     14.595
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 125):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
  * Inline function 'depositItems' defined at Actions.mnd:79:1   size   +23, benefit     4232.8, efficiency    184.035 (+15 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +189, benefit     5971.3, efficiency     31.594
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +34, benefit      470.3, efficiency     13.833
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +191, benefit       75.0, efficiency      0.393
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +191, benefit       75.0, efficiency      0.393
  ! Inline function call at CoreBuilder.mnd:482:9                size  +191, benefit       75.0, efficiency      0.393
  ! Inline function call at CoreBuilder.mnd:491:9                size  +191, benefit       75.0, efficiency      0.393
  ! Inline function call at CoreBuilder.mnd:500:9                size  +191, benefit       75.0, efficiency      0.393
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +191, benefit       75.0, efficiency      0.393
  ! Inline function call at CoreBuilder.mnd:512:9                size  +191, benefit       75.0, efficiency      0.393
    Inline function call at Actions.mnd:129:5                    size   +24, benefit     3157.8, efficiency    131.576
    Inline function call at Actions.mnd:135:5                    size   +38, benefit     3023.4, efficiency     79.564
    Inline function call at Actions.mnd:135:5                    size   +38, benefit     2418.8, efficiency     63.651
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at Actions.mnd:161:9                    size   +38, benefit       75.6, efficiency      1.989
    Inline function call at Actions.mnd:161:9                    size   +38, benefit      151.2, efficiency      3.978
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at Actions.mnd:152:5                    size   +24, benefit     1075.0, efficiency     44.792
  ! Inline function call at CoreBuilder.mnd:232:9                size  +191, benefit     2700.0, efficiency     14.136
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 110):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +294, benefit     5971.3, efficiency     20.311
    Inline function 'mineOre' defined at Actions.mnd:133:1       size   +34, benefit      470.3, efficiency     13.833
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
    Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  * Inline function call at Actions.mnd:135:5                    size   +59, benefit     3023.4, efficiency     51.245 (+54 instructions)
    Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
    Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
    Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
    Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
    Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
    Inline function call at CoreBuilder.mnd:144:17               size    +7, benefit      235.2, efficiency     33.594
    Inline function call at CoreBuilder.mnd:150:17               size    +7, benefit      117.6, efficiency     16.797
    Inline function call at CoreBuilder.mnd:153:17               size    +7, benefit       58.8, efficiency      8.398
    Inline function call at CoreBuilder.mnd:156:17               size    +7, benefit       29.4, efficiency      4.199
    Inline function call at CoreBuilder.mnd:159:17               size    +7, benefit       14.7, efficiency      2.100
    Inline function call at CoreBuilder.mnd:165:17               size    +7, benefit       14.7, efficiency      2.100
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
    Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
    Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
    Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at CoreBuilder.mnd:231:5            size   +26, benefit      900.0, efficiency     34.615 (+26 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +133, benefit      234.0, efficiency      1.759
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
    Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +67, benefit      169.0, efficiency      2.522
    Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +67, benefit       52.0, efficiency      0.776
  ! Inline function call at CoreBuilder.mnd:355:5                size   +67, benefit       13.0, efficiency      0.194

Pass 1: speed optimization selection (cost limit 30):
  * Replicate loop condition at CoreBuilder.mnd:475:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +185, benefit      234.0, efficiency      1.265
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      169.0, efficiency      1.817
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 29):
  * Replicate loop condition at CoreBuilder.mnd:481:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +185, benefit      234.0, efficiency      1.265
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
    Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      169.0, efficiency      1.817
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 28):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +185, benefit      234.0, efficiency      1.265
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +263, benefit      204.0, efficiency      0.776
  * Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 size   +17, benefit      221.0, efficiency     13.000 (-1 instructions)
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:277:1 size  +455, benefit       87.5, efficiency      0.192
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:384:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:385:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:386:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:390:15               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:391:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:395:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:396:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
    Inline function call at CoreBuilder.mnd:286:12               size   +18, benefit        8.5, efficiency      0.472
    Inline function call at CoreBuilder.mnd:413:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:414:28               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:416:19               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:444:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:445:12               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:449:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:450:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:451:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:452:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:454:29               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:455:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:461:32               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:462:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:463:5                size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:464:25               size   +19, benefit        3.5, efficiency      0.184
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      169.0, efficiency      1.817
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      156.0, efficiency      4.727
    Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625
    Inline function call at CoreBuilder.mnd:280:12               size   +18, benefit      212.5, efficiency     11.806
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 29):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +39, benefit      277.0, efficiency      7.103
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +278, benefit      234.0, efficiency      0.842
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +296, benefit      204.0, efficiency      0.689
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:383:13               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:384:15               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:385:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:386:17               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:390:15               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:391:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:394:17               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:395:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:396:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit        6.5, efficiency      0.070
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:413:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:414:28               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:416:19               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:443:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:444:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:445:12               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:449:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:450:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:451:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:452:29               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:454:29               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:455:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:461:32               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:462:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:463:5                size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:464:25               size   +29, benefit        3.5, efficiency      0.121
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  * Inline function call at CoreBuilder.mnd:279:5                size   +20, benefit      212.5, efficiency     10.625 (+18 instructions)
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      162.5, efficiency      1.747
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      150.0, efficiency      4.545
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 11):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +19, benefit       64.5, efficiency      3.395
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +278, benefit      234.0, efficiency      0.842
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +296, benefit      204.0, efficiency      0.689
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
  ! Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size   +13, benefit       12.0, efficiency      0.923
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
  * Inline function call at CoreBuilder.mnd:377:18               size    +7, benefit        4.0, efficiency      0.571 (+4 instructions)
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
  ! Inline function call at CoreBuilder.mnd:383:13               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:384:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:385:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:386:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:390:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:391:5                size   +47, benefit        3.5, efficiency      0.074
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:394:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:395:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:396:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit        6.5, efficiency      0.070
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:413:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:414:28               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:416:19               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:443:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:444:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:445:12               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:449:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:450:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:451:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:452:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:454:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:455:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:461:32               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:462:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:463:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:464:25               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      162.5, efficiency      1.747
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      150.0, efficiency      4.545
  ! Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 7):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +19, benefit       64.5, efficiency      3.395
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +278, benefit      234.0, efficiency      0.842
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +296, benefit      204.0, efficiency      0.689
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
  * Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 size    +6, benefit        8.0, efficiency      1.333 (-3 instructions)
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
    Inline function call at CoreBuilder.mnd:378:17               size    +7, benefit        4.0, efficiency      0.571
    Inline function call at CoreBuilder.mnd:379:17               size    +7, benefit        4.0, efficiency      0.571
  ! Inline function call at CoreBuilder.mnd:383:13               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:384:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:385:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:386:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:390:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:391:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:394:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:395:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:396:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit        6.5, efficiency      0.070
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:413:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:414:28               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:416:19               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:443:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:444:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:445:12               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:449:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:450:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:451:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:452:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:454:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:455:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:461:32               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:462:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:463:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:464:25               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      162.5, efficiency      1.747
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      150.0, efficiency      4.545
  ! Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 1: speed optimization selection (cost limit 10):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +19, benefit       64.5, efficiency      3.395
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +278, benefit      234.0, efficiency      0.842
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +296, benefit      204.0, efficiency      0.689
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
  ! Inline function call at CoreBuilder.mnd:383:13               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:384:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:385:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:386:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:390:15               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:391:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:394:17               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:395:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:396:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit        6.5, efficiency      0.070
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:413:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:414:28               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:416:19               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:443:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:444:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:445:12               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:449:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:450:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:451:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:452:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:454:29               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:455:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:461:32               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:462:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:463:5                size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:464:25               size   +47, benefit        3.5, efficiency      0.074
  ! Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:482:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:491:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:500:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +33, benefit        6.0, efficiency      0.182
  ! Inline function call at CoreBuilder.mnd:508:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at CoreBuilder.mnd:512:9                size  +212, benefit       75.0, efficiency      0.354
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +212, benefit     2700.0, efficiency     12.736
  ! Inline function call at CoreBuilder.mnd:272:5                size   +93, benefit      162.5, efficiency      1.747
  ! Inline function call at CoreBuilder.mnd:273:12               size   +33, benefit      150.0, efficiency      4.545
  ! Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +93, benefit       52.0, efficiency      0.559
  ! Inline function call at CoreBuilder.mnd:355:5                size   +93, benefit       13.0, efficiency      0.140

Pass 2: speed optimization selection (cost limit 20):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  * Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1  size   +19, benefit       64.5, efficiency      3.395 (+9 instructions)
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +275, benefit      234.0, efficiency      0.851
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +287, benefit      204.0, efficiency      0.711
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size   +76, benefit       28.0, efficiency      0.368
    Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545
  ! Inline function call at CoreBuilder.mnd:383:13               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:384:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:385:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:386:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:390:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:391:5                size   +45, benefit        3.5, efficiency      0.078
    Inline function call at CoreBuilder.mnd:296:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:394:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:395:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:396:5                size   +45, benefit        3.5, efficiency      0.078
    Inline function call at CoreBuilder.mnd:285:5                size   +20, benefit        8.5, efficiency      0.425
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:413:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:414:28               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:416:19               size   +45, benefit        3.5, efficiency      0.078
    Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:443:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:444:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:445:12               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:449:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:450:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:451:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:452:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:454:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:455:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:461:32               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:462:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:463:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:464:25               size   +45, benefit        3.5, efficiency      0.078
    Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:482:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:491:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:500:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:308:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:315:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:320:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:323:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:326:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:329:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
    Inline function call at CoreBuilder.mnd:332:5                size   +11, benefit        3.5, efficiency      0.318
  ! Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:512:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +209, benefit     2700.0, efficiency     12.919
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit      162.5, efficiency      1.766
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      150.0, efficiency      4.688
    Inline function call at CoreBuilder.mnd:291:5                size   +20, benefit       56.0, efficiency      2.800
  ! Inline function call at CoreBuilder.mnd:292:5                size   +92, benefit       52.0, efficiency      0.565
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit       13.0, efficiency      0.141

Pass 2: speed optimization selection (cost limit 11):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +275, benefit      234.0, efficiency      0.851
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +287, benefit      204.0, efficiency      0.711
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size  +202, benefit       28.0, efficiency      0.139
  * Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 size   +11, benefit        6.0, efficiency      0.545 (+7 instructions)
  ! Inline function call at CoreBuilder.mnd:383:13               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:384:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:385:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:386:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:390:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:391:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:296:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:394:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:395:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:396:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:413:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:414:28               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:416:19               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:430:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:432:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:443:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:444:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:445:12               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:449:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:450:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:451:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:452:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:454:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:455:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:461:32               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:462:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:463:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:464:25               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:468:5                size   +12, benefit        3.0, efficiency      0.250
  ! Inline function call at CoreBuilder.mnd:476:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:482:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:491:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:500:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:308:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:315:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:320:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:323:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:326:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:329:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:332:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:512:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +209, benefit     2700.0, efficiency     12.919
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit      162.5, efficiency      1.766
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      150.0, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:292:5                size   +92, benefit       52.0, efficiency      0.565
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit       13.0, efficiency      0.141

Pass 2: speed optimization selection (cost limit 4):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +367, benefit      234.0, efficiency      0.638
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +287, benefit      204.0, efficiency      0.711
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size  +202, benefit       28.0, efficiency      0.139
  ! Inline function call at CoreBuilder.mnd:383:13               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:384:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:385:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:386:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:390:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:391:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:296:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:394:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:395:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:396:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:413:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:414:28               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:416:19               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:432:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:443:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:444:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:445:12               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:449:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:450:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:451:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:452:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:454:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:455:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:461:32               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:462:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:463:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:464:25               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:476:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:482:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:491:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:500:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:308:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:315:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:320:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:323:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:326:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:329:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:332:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:512:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +209, benefit     2700.0, efficiency     12.919
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit      162.5, efficiency      1.766
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      150.0, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:292:5                size   +92, benefit       52.0, efficiency      0.565

Pass 3: speed optimization selection (cost limit 4):
  ! Inline function 'mineOre' defined at Actions.mnd:104:1       size  +235, benefit     2947.9, efficiency     12.544
  ! Inline function 'mineOre' defined at Actions.mnd:133:1       size  +304, benefit      470.3, efficiency      1.547
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:205:1 size  +367, benefit      234.0, efficiency      0.638
  ! Inline function 'buildBlockAt' defined at CoreBuilder.mnd:246:1 size  +287, benefit      204.0, efficiency      0.711
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:289:1 size  +202, benefit       28.0, efficiency      0.139
  ! Inline function call at CoreBuilder.mnd:383:13               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:384:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:385:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:386:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:390:15               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:391:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:296:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:304:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:394:17               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:395:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:396:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:413:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:414:28               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:416:19               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:432:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:443:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:444:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:445:12               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:449:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:450:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:451:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:452:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:454:29               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:455:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:461:32               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:462:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:463:5                size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:464:25               size   +45, benefit        3.5, efficiency      0.078
  ! Inline function call at CoreBuilder.mnd:355:5                size   +92, benefit        6.5, efficiency      0.071
  ! Inline function call at CoreBuilder.mnd:476:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:482:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:491:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:500:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:308:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:312:24               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:315:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:316:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:320:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:321:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:323:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:324:28               size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:326:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:327:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:329:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:330:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:332:5                size   +29, benefit        3.5, efficiency      0.121
  ! Inline function call at CoreBuilder.mnd:333:5                size   +32, benefit        6.0, efficiency      0.188
  ! Inline function call at CoreBuilder.mnd:508:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:512:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at Actions.mnd:135:5                    size   +59, benefit     2418.8, efficiency     40.996
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit       75.6, efficiency      1.281
  ! Inline function call at Actions.mnd:161:9                    size   +59, benefit      151.2, efficiency      2.562
  ! Inline function call at CoreBuilder.mnd:144:17               size   +61, benefit      235.2, efficiency      3.855
  ! Inline function call at CoreBuilder.mnd:150:17               size   +61, benefit      117.6, efficiency      1.928
  ! Inline function call at CoreBuilder.mnd:153:17               size   +61, benefit       58.8, efficiency      0.964
  ! Inline function call at CoreBuilder.mnd:156:17               size   +61, benefit       29.4, efficiency      0.482
  ! Inline function call at CoreBuilder.mnd:159:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:165:17               size   +61, benefit       14.7, efficiency      0.241
  ! Inline function call at CoreBuilder.mnd:232:9                size  +209, benefit     2700.0, efficiency     12.919
  ! Inline function call at CoreBuilder.mnd:272:5                size   +92, benefit      162.5, efficiency      1.766
  ! Inline function call at CoreBuilder.mnd:273:12               size   +32, benefit      150.0, efficiency      4.688
  ! Inline function call at CoreBuilder.mnd:292:5                size   +92, benefit       52.0, efficiency      0.565

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-96 instructions):
 
    66 setaddr :buildBlockFromCfg*retaddr *label30 (h:*label30)
    67 call *label18 *invalid :buildBlockFromCfg*retval (m:*label30) (h:*label30)
    68 label *label30
-    * set *tmp105 :buildBlockFromCfg*retval
    69 set :buildBlockFromCfg:cfg "m*.<2#####"
    70 setaddr :buildBlockFromCfg*retaddr *label31 (h:*label31)
    71 call *label18 *invalid :buildBlockFromCfg*retval (m:*label31) (h:*label31)
 
    83 setaddr :buildBlockFromCfg*retaddr *label33 (h:*label33)
    84 call *label18 *invalid :buildBlockFromCfg*retval (m:*label33) (h:*label33)
    85 label *label33
-    * set *tmp108 :buildBlockFromCfg*retval
    86 set :buildTitaniumDrill:cfg "w**5#-####"
    87 set :meetTarget.1:cfg :buildTitaniumDrill:cfg
    88 setaddr :meetTarget.1*retaddr *label35 (h:*label35)
 
   114 set .ERROR :error:error
   115 stop
   116 label *label39
-    * set *tmp123 null
   117 jump *label38 always
   118 label *label37
-    * set *tmp123 null
   119 label *label38
   120 write @pneumatic-drill .display ".nextBlock"
   121 set :buildBlockAt:block @pneumatic-drill
 
   143 setaddr :buildBlockFromCfg*retaddr *label42 (h:*label42)
   144 call *label18 *invalid :buildBlockFromCfg*retval (m:*label42) (h:*label42)
   145 label *label42
-    * set *tmp125 :buildBlockFromCfg*retval
   146 set :buildBlockFromCfg:cfg "W*-'%#####"
   147 setaddr :buildBlockFromCfg*retaddr *label43 (h:*label43)
   148 call *label18 *invalid :buildBlockFromCfg*retval (m:*label43) (h:*label43)
   149 label *label43
-    * set *tmp126 :buildBlockFromCfg*retval
   150 set .graphiteSurplus 100
   151 set :buildBlockFromCfg.1:cfg "®-.}U#U###"
   152 set :buildBlockFromCfg.1:config processor2
 
   199 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   200 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)
   201 label *label47
-    * set *tmp130 :buildBlockFromCfg*retval
   202 set :buildBlockFromCfg:cfg "(*###A<##"
   203 setaddr :buildBlockFromCfg*retaddr *label48 (h:*label48)
   204 call *label18 *invalid :buildBlockFromCfg*retval (m:*label48) (h:*label48)
 
   232 op lessThan *tmp134 *tmp133 300
   233 jump *label55 equal *tmp134 false
   234 jump *label53 always
-    * set *tmp135 null
   235 jump *label56 always
   236 label *label55
-    * set *tmp135 null
   237 label *label56
   238 label *label52
   239 read *tmp73 .controller ".monos"
 
   245 setaddr :buildBlockFromCfg*retaddr *label57 (h:*label57)
   246 call *label18 *invalid :buildBlockFromCfg*retval (m:*label57) (h:*label57)
   247 label *label57
-    * set *tmp137 :buildBlockFromCfg*retval
   248 set :buildBlockFromCfg:cfg "T,*%%#####"
   249 setaddr :buildBlockFromCfg*retaddr *label58 (h:*label58)
   250 call *label18 *invalid :buildBlockFromCfg*retval (m:*label58) (h:*label58)
   251 label *label58
-    * set *tmp138 :buildBlockFromCfg*retval
   252 set :buildBlockFromCfg:cfg "',+_AA####"
   253 setaddr :buildBlockFromCfg*retaddr *label59 (h:*label59)
   254 call *label18 *invalid :buildBlockFromCfg*retval (m:*label59) (h:*label59)
 
   260 setaddr :buildBlockFromCfg*retaddr *label60 (h:*label60)
   261 call *label18 *invalid :buildBlockFromCfg*retval (m:*label60) (h:*label60)
   262 label *label60
-    * set *tmp140 :buildBlockFromCfg*retval
   263 set :buildBlockFromCfg:cfg "W'*'%#####"
   264 setaddr :buildBlockFromCfg*retaddr *label61 (h:*label61)
   265 call *label18 *invalid :buildBlockFromCfg*retval (m:*label61) (h:*label61)
   266 label *label61
-    * set *tmp141 :buildBlockFromCfg*retval
   267 set :buildBlockFromCfg:cfg "W&*'%#####"
   268 setaddr :buildBlockFromCfg*retaddr *label62 (h:*label62)
   269 call *label18 *invalid :buildBlockFromCfg*retval (m:*label62) (h:*label62)
   270 label *label62
-    * set *tmp142 :buildBlockFromCfg*retval
   271 set :buildBlockFromCfg:cfg "o%+FK<A###"
   272 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   273 call *label18 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
 
   284 setaddr :buildBlockFromCfg*retaddr *label65 (h:*label65)
   285 call *label18 *invalid :buildBlockFromCfg*retval (m:*label65) (h:*label65)
   286 label *label65
-    * set *tmp145 :buildBlockFromCfg*retval
   287 set .graphiteSurplus 200
   288 set :buildBlockFromCfg:cfg " '%-#2####"
   289 setaddr :buildBlockFromCfg*retaddr *label66 (h:*label66)
 
   295 setaddr :buildBlockFromCfg*retaddr *label67 (h:*label67)
   296 call *label18 *invalid :buildBlockFromCfg*retval (m:*label67) (h:*label67)
   297 label *label67
-    * set *tmp147 :buildBlockFromCfg*retval
   298 set :buildBlockFromCfg:cfg "X*''%#####"
   299 setaddr :buildBlockFromCfg*retaddr *label68 (h:*label68)
   300 call *label18 *invalid :buildBlockFromCfg*retval (m:*label68) (h:*label68)
   301 label *label68
-    * set *tmp148 :buildBlockFromCfg*retval
   302 set :buildBlockFromCfg:cfg "*%ë#}###"
   303 setaddr :buildBlockFromCfg*retaddr *label69 (h:*label69)
   304 call *label18 *invalid :buildBlockFromCfg*retval (m:*label69) (h:*label69)
 
   350 wait 1e-15
   351 read *tmp162 .oreLocator ":findDrillLocation*finished"
   352 jump *label79 equal *tmp162 false
-    * read *tmp163 .oreLocator ":findDrillLocation*retval"
   353 ubind .builder
   354 label *label80
   355 setaddr :supplyBase*retaddr *label83 (h:*label83)
 
   366 ubind :findFreeUnit:unit_type
   367 op equal *tmp167 @unit null
   368 jump *label85 equal *tmp167 false
-    * set *tmp166 null
   369 jump *label84 always
-    * set *tmp168 null
   370 jump *label86 always
   371 label *label85
-    * set *tmp168 null
   372 label *label86
   373 set :findFreeUnit:first_unit @unit
   374 label *label87
 
   376 op equal *tmp170 *tmp169 0
   377 jump *label90 equal *tmp170 false
   378 ucontrol flag :findFreeUnit:initial_flag
-    * set *tmp166 @unit
   379 jump *label84 always
-    * set *tmp171 null
   380 jump *label91 always
   381 label *label90
   382 sensor *tmp172 :findFreeUnit:first_unit @dead
 
   389 label *label92
   390 set *tmp174 null
   391 label *label93
-    * set *tmp171 *tmp174
   392 label *label91
   393 ubind :findFreeUnit:unit_type
   394 label *label88
   395 op notEqual *tmp176 :findFreeUnit:first_unit @unit
   396 jump *label87 notEqual *tmp176 false
   397 label *label89
-    * set *tmp166 null
   398 jump *label84 always
-    * set *tmp166 null
   399 label *label84
   400 write .coreX .oreLocator ":layoutThoriumDrill:x"
   401 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
   429 set .ERROR :error.1:error
   430 stop
   431 label *label103
-    * set *tmp186 null
   432 jump *label102 always
   433 label *label101
-    * set *tmp186 null
   434 label *label102
   435 set :buildBlockAt:block @laser-drill
   436 read *tmp42 .oreLocator ".drillX"
 
   449 op lessThan *tmp188 *tmp44 0
   450 jump *label105 equal *tmp188 false
   451 jump *label98 always
-    * set *tmp189 null
   452 jump *label106 always
   453 label *label105
-    * set *tmp189 null
   454 label *label106
   455 set :meetTarget.1:cfg "z%-AAA##A#"
   456 setaddr :meetTarget.1*retaddr *label107 (h:*label107)
 
   467 setaddr :buildBlockAt*retaddr *label108 (h:*label108)
   468 call *label16 *invalid :buildBlockAt*retval (m:*label108) (h:*label108)
   469 label *label108
-    * set *tmp190 :buildBlockAt*retval
   470 read *tmp46 .oreLocator ".water2X"
   471 op lessThan *tmp191 *tmp46 0
   472 jump *label109 equal *tmp191 false
   473 jump *label98 always
-    * set *tmp192 null
   474 jump *label110 always
   475 label *label109
-    * set *tmp192 null
   476 label *label110
   477 set :meetTarget.1:cfg "z%-AAA##A#"
   478 setaddr :meetTarget.1*retaddr *label111 (h:*label111)
 
   489 setaddr :buildBlockAt*retaddr *label112 (h:*label112)
   490 call *label16 *invalid :buildBlockAt*retval (m:*label112) (h:*label112)
   491 label *label112
-    * set *tmp193 :buildBlockAt*retval
   492 set :meetTarget.1:cfg "z%-AAA##A#"
   493 setaddr :meetTarget.1*retaddr *label113 (h:*label113)
   494 call *label19 *invalid :meetTarget.1*retval (m:*label113) (h:*label113)
 
   521 setaddr :buildBlockAt*retaddr *label116 (h:*label116)
   522 call *label16 *invalid :buildBlockAt*retval (m:*label116) (h:*label116)
   523 label *label116
-    * set *tmp195 :buildBlockAt*retval
   524 set :meetTarget.1:cfg "r**#-#+###"
   525 setaddr :meetTarget.1*retaddr *label117 (h:*label117)
   526 call *label19 *invalid :meetTarget.1*retval (m:*label117) (h:*label117)
 
   536 setaddr :buildBlockAt*retaddr *label118 (h:*label118)
   537 call *label16 *invalid :buildBlockAt*retval (m:*label118) (h:*label118)
   538 label *label118
-    * set *tmp196 :buildBlockAt*retval
   539 set :meetTarget.1:cfg "k*/(7#####"
   540 setaddr :meetTarget.1*retaddr *label119 (h:*label119)
   541 call *label19 *invalid :meetTarget.1*retval (m:*label119) (h:*label119)
 
   551 setaddr :buildBlockAt*retaddr *label120 (h:*label120)
   552 call *label16 *invalid :buildBlockAt*retval (m:*label120) (h:*label120)
   553 label *label120
-    * set *tmp197 :buildBlockAt*retval
   554 write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
   555 write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
   556 write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
 
   627 op greaterThan *tmp215 *tmp213 *tmp214
   628 jump *label142 notEqual *tmp215 false
   629 label *label144
-    * set *tmp205 null
   630 jump *label135 always
   631 label *label134
   632 label *label145
 
   637 label *label146
   638 jump *label145 always
   639 label *label147
-    * set *tmp205 null
   640 label *label135
   641 set :transportStatus:target 0
   642 set :transportStatus:item null
 
   662 set .ERROR :error.3:error
   663 stop
   664 label *label154
-    * set *tmp222 null
   665 jump *label153 always
   666 label *label152
-    * set *tmp222 null
   667 label *label153
   668 label *label151
   669 set :mineOre:x :locateOre:x
 
   678 op notEqual *tmp224 *tmp223 null
   679 jump *label160 equal *tmp224 false
   680 ucontrol itemDrop @air 1000
-    * set *tmp225 null
   681 jump *label161 always
   682 label *label160
-    * set *tmp225 null
   683 label *label161
   684 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   685 label *label158
 
   700 jump *label165 always
   701 label *label167
   702 label *label164
-    * set *tmp230 null
   703 jump *label163 always
   704 label *label162
-    * set *tmp230 null
   705 label *label163
   706 set :status3.3:text "Mining..."
   707 write :status3.3:text .display ".status3"
 
   716 op land *tmp237 *tmp235 *tmp236
   717 jump *label172 equal *tmp237 false
   718 jump *label171 always
-    * set *tmp238 null
   719 jump *label173 always
   720 label *label172
-    * set *tmp238 null
   721 label *label173
   722 ucontrol mine :mineOre:x :mineOre:y
   723 op greaterThan *tmp239 @second :mineOre:stop
   724 jump *label174 equal *tmp239 false
   725 jump *label171 always
-    * set *tmp240 null
   726 jump *label175 always
   727 label *label174
-    * set *tmp240 null
   728 label *label175
   729 label *label170
   730 sensor *tmp241 @unit @totalItems
 
   832 label *label184
   833 set *tmp280 null
   834 label *label185
-    * set *tmp278 *tmp280
   835 jump *label183 always
   836 label *label182
-    * set *tmp278 null
   837 label *label183
   838 read *tmp73 .controller ".monos"
   839 op greaterThan *tmp283 *tmp73 3
 
   846 call *label8 *invalid :mineOre.1*retval (m:*label190) (h:*label190)
   847 label *label190
   848 label *label188
-    * set *tmp284 null
   849 jump *label187 always
   850 label *label186
   851 set :supplyBase0:supplied false
 
   882 setaddr :mineOre*retaddr *label203 (h:*label203)
   883 call *label7 *invalid :mineOre*retval (m:*label203) (h:*label203)
   884 label *label203
-    * set *tmp297 null
   885 jump *label202 always
   886 label *label201
-    * set *tmp297 null
   887 label *label202
   888 label *label199
   889 set :supplyBase0:supplied true
 
   892 label *label196
   893 set *tmp292 null
   894 label *label197
-    * set *tmp289 *tmp292
   895 jump *label195 always
   896 label *label194
-    * set *tmp289 null
   897 label *label195
   898 sensor *tmp298 .core @silicon
   899 op lessThan *tmp299 *tmp298 .targetSilicon
 
   926 setaddr :mineOre*retaddr *label213 (h:*label213)
   927 call *label7 *invalid :mineOre*retval (m:*label213) (h:*label213)
   928 label *label213
-    * set *tmp308 null
   929 jump *label212 always
   930 label *label211
-    * set *tmp308 null
   931 label *label212
   932 label *label209
   933 set :supplyBase0:supplied true
 
   962 setaddr :mineOre*retaddr *label221 (h:*label221)
   963 call *label7 *invalid :mineOre*retval (m:*label221) (h:*label221)
   964 label *label221
-    * set *tmp316 null
   965 jump *label220 always
   966 label *label219
-    * set *tmp316 null
   967 label *label220
   968 label *label217
   969 set :supplyBase0:supplied true
 
   974 label *label215
   975 set *tmp303 *tmp311
   976 label *label207
-    * set *tmp300 *tmp303
   977 jump *label205 always
   978 label *label204
-    * set *tmp300 null
   979 label *label205
   980 sensor *tmp317 .battery @totalPower
   981 op lessThan *tmp318 *tmp317 .powerTarget
 
  1008 setaddr :mineOre*retaddr *label231 (h:*label231)
  1009 call *label7 *invalid :mineOre*retval (m:*label231) (h:*label231)
  1010 label *label231
-    * set *tmp327 null
  1011 jump *label230 always
  1012 label *label229
-    * set *tmp327 null
  1013 label *label230
  1014 label *label227
  1015 set :supplyBase0:supplied true
 
  1023 label *label222
  1024 set *tmp319 null
  1025 label *label223
-    * set *tmp286 *tmp319
  1026 jump *label193 always
  1027 label *label192
-    * set *tmp286 null
  1028 label *label193
  1029 sensor *tmp328 .core @titanium
  1030 op lessThan *tmp329 *tmp328 .targetTitanium
 
  1155 label *label236
  1156 set *tmp338 null
  1157 label *label237
-    * set *tmp336 *tmp338
  1158 jump *label235 always
  1159 label *label234
  1160 set :status1.11:text "Goal 11: Fetching titanium"
 
  1187 op notEqual *tmp367 *tmp366 null
  1188 jump *label273 equal *tmp367 false
  1189 ucontrol itemDrop @air 1000
-    * set *tmp368 null
  1190 jump *label274 always
  1191 label *label273
-    * set *tmp368 null
  1192 label *label274
  1193 ucontrol approach :moveToEmpty.1:x :moveToEmpty.1:y 5.5
  1194 label *label271
 
  1215 op land *tmp376 *tmp374 *tmp375
  1216 jump *label282 equal *tmp376 false
  1217 ucontrol itemDrop @air 1000
-    * set *tmp377 null
  1218 jump *label283 always
  1219 label *label282
-    * set *tmp377 null
  1220 label *label283
  1221 label *label280
  1222 sensor *tmp378 @unit :fetchBlock:item
 
  1231 call *label6 *invalid :depositItems*retval (m:*label284) (h:*label284)
  1232 label *label284
  1233 label *label265
-    * set *tmp336 null
  1234 label *label235
  1235 label *label191
-    * set *tmp284 null
  1236 label *label187
  1237 label *label181
  1238 return :supplyBase*retaddr
 
  1302 jump *label299 equal *tmp395 false
  1303 set *tmp393 false
  1304 jump *label298 always
-    * set *tmp396 null
  1305 jump *label300 always
  1306 label *label299
-    * set *tmp396 null
  1307 label *label300
  1308 sensor *tmp397 .core @lead
  1309 op lessThan *tmp398 *tmp397 .targetLead
  1310 jump *label301 equal *tmp398 false
  1311 set *tmp393 false
  1312 jump *label298 always
-    * set *tmp399 null
  1313 jump *label302 always
  1314 label *label301
-    * set *tmp399 null
  1315 label *label302
  1316 sensor *tmp400 .core @graphite
  1317 op lessThan *tmp401 *tmp400 .targetGraphite
  1318 jump *label303 equal *tmp401 false
  1319 set *tmp393 false
  1320 jump *label298 always
-    * set *tmp402 null
  1321 jump *label304 always
  1322 label *label303
-    * set *tmp402 null
  1323 label *label304
  1324 sensor *tmp403 .core @silicon
  1325 op lessThan *tmp404 *tmp403 .targetSilicon
  1326 jump *label305 equal *tmp404 false
  1327 set *tmp393 false
  1328 jump *label298 always
-    * set *tmp405 null
  1329 jump *label306 always
  1330 label *label305
-    * set *tmp405 null
  1331 label *label306
  1332 sensor *tmp406 .core @titanium
  1333 op lessThan *tmp407 *tmp406 .targetTitanium
  1334 jump *label307 equal *tmp407 false
  1335 set *tmp393 false
  1336 jump *label298 always
-    * set *tmp408 null
  1337 jump *label308 always
  1338 label *label307
-    * set *tmp408 null
  1339 label *label308
  1340 sensor *tmp409 .core @metaglass
  1341 op lessThan *tmp410 *tmp409 .targetMetaglass
  1342 jump *label309 equal *tmp410 false
  1343 set *tmp393 false
  1344 jump *label298 always
-    * set *tmp411 null
  1345 jump *label310 always
  1346 label *label309
-    * set *tmp411 null
  1347 label *label310
  1348 set *tmp393 true
  1349 jump *label298 always
 
  1393 jump *label322 equal *tmp422 false
  1394 set :buildBlockAt*retval :buildBlockAt:building
  1395 jump *label312 always
-    * set *tmp423 null
  1396 jump *label323 always
  1397 label *label322
-    * set *tmp423 null
  1398 label *label323
  1399 jump *label324 equal :buildBlockAt:skipError false
  1400 set :buildBlockAt*retval null
  1401 jump *label312 always
-    * set *tmp424 null
  1402 jump *label325 always
  1403 label *label324
-    * set *tmp424 null
  1404 label *label325
  1405 set :error.4:error "Cannot build at ("
  1406 set .ERROR :error.4:error
  1407 stop
  1408 label *label326
-    * set *tmp421 null
  1409 jump *label321 always
  1410 label *label320
-    * set *tmp421 null
  1411 label *label321
  1412 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1413 wait 0.25
 
  1418 jump *label330 equal *tmp427 false
  1419 set :buildBlockAt*retval null
  1420 jump *label312 always
-    * set *tmp428 null
  1421 jump *label331 always
  1422 label *label330
-    * set *tmp428 null
  1423 label *label331
  1424 label *label328
  1425 op notEqual *tmp429 :buildBlockAt:type :buildBlockAt:block
 
  1540 op notEqual *tmp440 :findUnits:firstUnit null
  1541 jump *label344 equal *tmp440 false
  1542 label *label346
-    * set *tmp442 :findUnits:count
  1543 op add :findUnits:count :findUnits:count 1
  1544 ubind :findUnits:type
  1545 label *label347
  1546 op notEqual *tmp443 @unit :findUnits:firstUnit
  1547 jump *label346 notEqual *tmp443 false
  1548 label *label348
-    * set *tmp441 null
  1549 jump *label345 always
  1550 label *label344
-    * set *tmp441 null
  1551 label *label345
  1552 set :findUnits*retval :findUnits:count
  1553 label *label343

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-12 instructions):
 
   384 jump *label92 equal *tmp173 false
   385 set *tmp175 @unit
   386 set :findFreeUnit:first_unit *tmp175
-    * set *tmp174 :findFreeUnit:first_unit
   387 jump *label93 always
   388 label *label92
-    * set *tmp174 null
   389 label *label93
   390 label *label91
   391 ubind :findFreeUnit:unit_type
 
   825 write .titaniumDrill .flareController ":start:drill"
   826 write false .flareController ":start*finished"
   827 write 3 .flareController "@counter"
-    * set *tmp280 null
   828 jump *label185 always
   829 label *label184
-    * set *tmp280 null
   830 label *label185
   831 jump *label183 always
   832 label *label182
 
   883 label *label202
   884 label *label199
   885 set :supplyBase0:supplied true
-    * set *tmp292 :supplyBase0:supplied
   886 jump *label197 always
   887 label *label196
-    * set *tmp292 null
   888 label *label197
   889 jump *label195 always
   890 label *label194
 
   925 label *label212
   926 label *label209
   927 set :supplyBase0:supplied true
-    * set *tmp303 :supplyBase0:supplied
   928 jump *label207 always
   929 label *label206
   930 sensor *tmp309 .smelter @sand
 
   965 label *label214
   966 set *tmp311 null
   967 label *label215
-    * set *tmp303 *tmp311
   968 label *label207
   969 jump *label205 always
   970 label *label204
 
  1010 label *label224
  1011 set *tmp322 null
  1012 label *label225
-    * set *tmp319 *tmp322
  1013 jump *label223 always
  1014 label *label222
-    * set *tmp319 null
  1015 label *label223
  1016 jump *label193 always
  1017 label *label192
 
  1140 label *label243
  1141 set *tmp342 *tmp345
  1142 label *label239
-    * set *tmp338 *tmp342
  1143 jump *label237 always
  1144 label *label236
-    * set *tmp338 null
  1145 label *label237
  1146 jump *label235 always
  1147 label *label234

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
   960 label *label220
   961 label *label217
   962 set :supplyBase0:supplied true
-    * set *tmp311 :supplyBase0:supplied
   963 jump *label215 always
   964 label *label214
-    * set *tmp311 null
   965 label *label215
   966 label *label207
   967 jump *label205 always
 
  1003 label *label230
  1004 label *label227
  1005 set :supplyBase0:supplied true
-    * set *tmp322 :supplyBase0:supplied
  1006 jump *label225 always
  1007 label *label224
-    * set *tmp322 null
  1008 label *label225
  1009 jump *label223 always
  1010 label *label222
 
  1040 setaddr :mineOre.1*retaddr *label241 (h:*label241)
  1041 call *label8 *invalid :mineOre.1*retval (m:*label241) (h:*label241)
  1042 label *label241
-    * set *tmp342 null
  1043 jump *label239 always
  1044 label *label238
  1045 sensor *tmp343 .core @silicon
 
  1133 label *label249
  1134 set *tmp345 *tmp352
  1135 label *label243
-    * set *tmp342 *tmp345
  1136 label *label239
  1137 jump *label237 always
  1138 label *label236

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1064 setaddr :mineOre.1*retaddr *label247 (h:*label247)
  1065 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
  1066 label *label247
-    * set *tmp345 null
  1067 jump *label243 always
  1068 label *label242
  1069 sensor *tmp350 .core @copper
 
  1130 label *label253
  1131 set *tmp352 *tmp355
  1132 label *label249
-    * set *tmp345 *tmp352
  1133 label *label243
  1134 label *label239
  1135 jump *label237 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1076 setaddr :mineOre.1*retaddr *label251 (h:*label251)
  1077 call *label8 *invalid :mineOre.1*retval (m:*label251) (h:*label251)
  1078 label *label251
-    * set *tmp352 null
  1079 jump *label249 always
  1080 label *label248
  1081 sensor *tmp353 .core @lead
 
  1127 label *label257
  1128 set *tmp355 *tmp358
  1129 label *label253
-    * set *tmp352 *tmp355
  1130 label *label249
  1131 label *label243
  1132 label *label239

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1088 setaddr :mineOre.1*retaddr *label255 (h:*label255)
  1089 call *label8 *invalid :mineOre.1*retval (m:*label255) (h:*label255)
  1090 label *label255
-    * set *tmp355 null
  1091 jump *label253 always
  1092 label *label252
  1093 sensor *tmp356 .core @metaglass
 
  1124 label *label263
  1125 set *tmp358 null
  1126 label *label257
-    * set *tmp355 *tmp358
  1127 label *label253
  1128 label *label249
  1129 label *label243

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1100 setaddr :mineOre.1*retaddr *label259 (h:*label259)
  1101 call *label8 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
  1102 label *label259
-    * set *tmp358 null
  1103 jump *label257 always
  1104 label *label256
  1105 set :status1.10:text "Goal 10: supplying base"
 
  1121 setaddr :mineOre.1*retaddr *label263 (h:*label263)
  1122 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
  1123 label *label263
-    * set *tmp358 null
  1124 label *label257
  1125 label *label253
  1126 label *label249

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-70 instructions):
 
    13 write 511 bank1 511
    14 label *label22
    15 ubind @poly
-    * set *tmp91 @unit
-    * set .builder *tmp91
-    * ulocate building core false @copper .coreX .coreY *tmp93 *tmp92
-    * set .core *tmp92
+   16 set .builder @unit
+   17 ulocate building core false @copper .coreX .coreY 0 .core
    18 label *label23
    19 op equal *tmp94 .core null
    20 jump *label22 notEqual *tmp94 false
 
    32 call *label20 *invalid :findUnits*retval (m:*label25) (h:*label25)
    33 label *label25
    34 write :findUnits:count .display ".displayFlares"
-    * set *tmp98 :findUnits*retval
-    * set :flares *tmp98
+   35 set :flares :findUnits*retval
    36 set :findUnits:type @mono
    37 setaddr :findUnits*retaddr *label26 (h:*label26)
    38 call *label20 *invalid :findUnits*retval (m:*label26) (h:*label26)
    39 label *label26
    40 write :findUnits:count .display ".displayMonos"
-    * set *tmp100 :findUnits*retval
-    * set :monos *tmp100
+   41 set :monos :findUnits*retval
    42 set :findUnits:type @poly
    43 setaddr :findUnits*retaddr *label27 (h:*label27)
    44 call *label20 *invalid :findUnits*retval (m:*label27) (h:*label27)
    45 label *label27
    46 write :findUnits:count .display ".displayPolys"
-    * set *tmp102 :findUnits*retval
-    * set :polys *tmp102
+   47 set :polys :findUnits*retval
    48 set :buildBlockFromCfg:cfg "#'+nA#####"
    49 setaddr :buildBlockFromCfg*retaddr *label28 (h:*label28)
    50 call *label18 *invalid :buildBlockFromCfg*retval (m:*label28) (h:*label28)
    51 label *label28
-    * set *tmp103 :buildBlockFromCfg*retval
-    * set .press *tmp103
+   52 set .press :buildBlockFromCfg*retval
    53 set :buildBlockFromCfg:cfg "k*/(7#####"
    54 setaddr :buildBlockFromCfg*retaddr *label29 (h:*label29)
    55 call *label18 *invalid :buildBlockFromCfg*retval (m:*label29) (h:*label29)
    56 label *label29
-    * set *tmp104 :buildBlockFromCfg*retval
-    * set .battery *tmp104
+   57 set .battery :buildBlockFromCfg*retval
    58 set :buildBlockFromCfg:cfg "k+/(7#####"
    59 setaddr :buildBlockFromCfg*retaddr *label30 (h:*label30)
    60 call *label18 *invalid :buildBlockFromCfg*retval (m:*label30) (h:*label30)
 
    63 setaddr :buildBlockFromCfg*retaddr *label31 (h:*label31)
    64 call *label18 *invalid :buildBlockFromCfg*retval (m:*label31) (h:*label31)
    65 label *label31
-    * set *tmp106 :buildBlockFromCfg*retval
-    * set .generator *tmp106
+   66 set .generator :buildBlockFromCfg*retval
    67 set .powerTarget 400
    68 set :buildBlockFromCfg:cfg "%+-A<#####"
    69 setaddr :buildBlockFromCfg*retaddr *label32 (h:*label32)
    70 call *label18 *invalid :buildBlockFromCfg*retval (m:*label32) (h:*label32)
    71 label *label32
-    * set *tmp107 :buildBlockFromCfg*retval
-    * set .smelter *tmp107
+   72 set .smelter :buildBlockFromCfg*retval
    73 set :buildBlockFromCfg:cfg "T+,%%#####"
    74 setaddr :buildBlockFromCfg*retaddr *label33 (h:*label33)
    75 call *label18 *invalid :buildBlockFromCfg*retval (m:*label33) (h:*label33)
 
    93 wait 1e-15
    94 read *tmp120 .oreLocator ":findDrillLocation*finished"
    95 jump *label36 equal *tmp120 false
-    * read *tmp117 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp117
-    * read *tmp118 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp118
-    * read *tmp121 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp121
+   96 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   97 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   98 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    99 op equal *tmp122 :buildTitaniumDrill:result false
   100 jump *label37 equal *tmp122 false
   101 set :error:error "Cannot locate spot for titanium drill"
 
   125 setaddr :buildBlockFromCfg*retaddr *label41 (h:*label41)
   126 call *label18 *invalid :buildBlockFromCfg*retval (m:*label41) (h:*label41)
   127 label *label41
-    * set *tmp124 :buildBlockFromCfg*retval
-    * set .unloader1 *tmp124
+  128 set .unloader1 :buildBlockFromCfg*retval
   129 set :buildBlockFromCfg:cfg "T),%%#####"
   130 setaddr :buildBlockFromCfg*retaddr *label42 (h:*label42)
   131 call *label18 *invalid :buildBlockFromCfg*retval (m:*label42) (h:*label42)
 
   190 setaddr :buildBlockFromCfg*retaddr *label48 (h:*label48)
   191 call *label18 *invalid :buildBlockFromCfg*retval (m:*label48) (h:*label48)
   192 label *label48
-    * set *tmp131 :buildBlockFromCfg*retval
-    * write *tmp131 .controller ".unloader2"
+  193 write :buildBlockFromCfg*retval .controller ".unloader2"
   194 set :buildBlockFromCfg:cfg "'(_i####&"
   195 setaddr :buildBlockFromCfg*retaddr *label49 (h:*label49)
   196 call *label18 *invalid :buildBlockFromCfg*retval (m:*label49) (h:*label49)
   197 label *label49
-    * set *tmp132 :buildBlockFromCfg*retval
-    * set :factory *tmp132
+  198 set :factory :buildBlockFromCfg*retval
   199 write :factory .controller ".factory"
   200 write :factory .display ".factory"
   201 write 1 .controller ".flareTarget"
 
   238 setaddr :buildBlockFromCfg*retaddr *label59 (h:*label59)
   239 call *label18 *invalid :buildBlockFromCfg*retval (m:*label59) (h:*label59)
   240 label *label59
-    * set *tmp139 :buildBlockFromCfg*retval
-    * set .kiln *tmp139
+  241 set .kiln :buildBlockFromCfg*retval
   242 write .kiln .controller ".kiln"
   243 set :buildBlockFromCfg:cfg "z%-AAA##A#"
   244 setaddr :buildBlockFromCfg*retaddr *label60 (h:*label60)
 
   256 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   257 call *label18 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   258 label *label63
-    * set *tmp143 :buildBlockFromCfg*retval
-    * write *tmp143 .controller ".generator2"
+  259 write :buildBlockFromCfg*retval .controller ".generator2"
   260 set :buildBlockFromCfg:cfg "$(.#U<##"
   261 setaddr :buildBlockFromCfg*retaddr *label64 (h:*label64)
   262 call *label18 *invalid :buildBlockFromCfg*retval (m:*label64) (h:*label64)
   263 label *label64
-    * set *tmp144 :buildBlockFromCfg*retval
-    * write *tmp144 .controller ".multipress"
+  264 write :buildBlockFromCfg*retval .controller ".multipress"
   265 set :buildBlockFromCfg:cfg "z%/AAA##A#"
   266 setaddr :buildBlockFromCfg*retaddr *label65 (h:*label65)
   267 call *label18 *invalid :buildBlockFromCfg*retval (m:*label65) (h:*label65)
 
   271 setaddr :buildBlockFromCfg*retaddr *label66 (h:*label66)
   272 call *label18 *invalid :buildBlockFromCfg*retval (m:*label66) (h:*label66)
   273 label *label66
-    * set *tmp146 :buildBlockFromCfg*retval
-    * write *tmp146 .controller ".payloadRouter"
+  274 write :buildBlockFromCfg*retval .controller ".payloadRouter"
   275 set :buildBlockFromCfg:cfg "*(###A<##"
   276 setaddr :buildBlockFromCfg*retaddr *label67 (h:*label67)
   277 call *label18 *invalid :buildBlockFromCfg*retval (m:*label67) (h:*label67)
 
   284 setaddr :buildBlockFromCfg*retaddr *label69 (h:*label69)
   285 call *label18 *invalid :buildBlockFromCfg*retval (m:*label69) (h:*label69)
   286 label *label69
-    * set *tmp149 :buildBlockFromCfg*retval
-    * set :reconstructor *tmp149
+  287 set :reconstructor :buildBlockFromCfg*retval
   288 write :reconstructor .controller ".reconstructor"
   289 write :reconstructor .display ".reconstructor"
   290 setaddr :buildUnits*retaddr *label70 (h:*label70)
 
   362 sensor *tmp172 :findFreeUnit:first_unit @dead
   363 op equal *tmp173 *tmp172 1
   364 jump *label92 equal *tmp173 false
-    * set *tmp175 @unit
-    * set :findFreeUnit:first_unit *tmp175
+  365 set :findFreeUnit:first_unit @unit
   366 jump *label93 always
   367 label *label92
   368 label *label93
 
   398 wait 1e-15
   399 read *tmp183 .oreLocator ":layoutThoriumDrill*finished"
   400 jump *label100 equal *tmp183 false
-    * read *tmp184 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp184
+  401 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   402 op equal *tmp185 :buildThoriumDrill:result false
   403 jump *label101 equal *tmp185 false
   404 set :error.1:error "Cannot locate spot for thorium drill"
 
   409 label *label101
   410 label *label102
   411 set :buildBlockAt:block @laser-drill
-    * read *tmp42 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp42
-    * read *tmp43 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp43
+  412 read :buildBlockAt:x .oreLocator ".drillX"
+  413 read :buildBlockAt:y .oreLocator ".drillY"
   414 set :buildBlockAt:rotation null
   415 set :buildBlockAt:config 0
   416 set :buildBlockAt:skipError false
   417 setaddr :buildBlockAt*retaddr *label104 (h:*label104)
   418 call *label16 *invalid :buildBlockAt*retval (m:*label104) (h:*label104)
   419 label *label104
-    * set *tmp187 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumDrill *tmp187
+  420 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   421 read *tmp44 .oreLocator ".water1X"
   422 op lessThan *tmp188 *tmp44 0
   423 jump *label105 equal *tmp188 false
 
   432 set :buildBlockAt:block @water-extractor
   433 read *tmp44 .oreLocator ".water1X"
   434 set :buildBlockAt:x *tmp44
-    * read *tmp45 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp45
+  435 read :buildBlockAt:y .oreLocator ".water1Y"
   436 set :buildBlockAt:rotation null
   437 set :buildBlockAt:config 0
   438 set :buildBlockAt:skipError false
 
   453 set :buildBlockAt:block @water-extractor
   454 read *tmp46 .oreLocator ".water2X"
   455 set :buildBlockAt:x *tmp46
-    * read *tmp47 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp47
+  456 read :buildBlockAt:y .oreLocator ".water2Y"
   457 set :buildBlockAt:rotation null
   458 set :buildBlockAt:config 0
   459 set :buildBlockAt:skipError false
 
   465 call *label19 *invalid :meetTarget.1*retval (m:*label113) (h:*label113)
   466 label *label113
   467 set :buildBlockAt:block @steam-generator
-    * read *tmp48 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp48
-    * read *tmp49 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp49
+  468 read :buildBlockAt:x .oreLocator ".generatorX"
+  469 read :buildBlockAt:y .oreLocator ".generatorY"
   470 set :buildBlockAt:rotation null
   471 set :buildBlockAt:config 0
   472 set :buildBlockAt:skipError false
   473 setaddr :buildBlockAt*retaddr *label114 (h:*label114)
   474 call *label16 *invalid :buildBlockAt*retval (m:*label114) (h:*label114)
   475 label *label114
-    * set *tmp194 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumGenerator *tmp194
+  476 set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval
   477 set :meetTarget.1:cfg "g)'%)#####"
   478 setaddr :meetTarget.1*retaddr *label115 (h:*label115)
   479 call *label19 *invalid :meetTarget.1*retval (m:*label115) (h:*label115)
   480 label *label115
   481 set :buildBlockAt:block @power-node
-    * read *tmp50 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp50
-    * read *tmp51 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp51
+  482 read :buildBlockAt:x .oreLocator ".nodeX"
+  483 read :buildBlockAt:y .oreLocator ".nodeY"
   484 set :buildBlockAt:rotation null
   485 set :buildBlockAt:config 0
   486 set :buildBlockAt:skipError false
 
   492 call *label19 *invalid :meetTarget.1*retval (m:*label117) (h:*label117)
   493 label *label117
   494 set :buildBlockAt:block @solar-panel
-    * read *tmp52 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp52
-    * read *tmp53 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp53
+  495 read :buildBlockAt:x .oreLocator ".panelX"
+  496 read :buildBlockAt:y .oreLocator ".panelY"
   497 set :buildBlockAt:rotation null
   498 set :buildBlockAt:config 0
   499 set :buildBlockAt:skipError false
 
   505 call *label19 *invalid :meetTarget.1*retval (m:*label119) (h:*label119)
   506 label *label119
   507 set :buildBlockAt:block @battery
-    * read *tmp54 .oreLocator ".batteryX"
-    * set :buildBlockAt:x *tmp54
-    * read *tmp55 .oreLocator ".batteryY"
-    * set :buildBlockAt:y *tmp55
+  508 read :buildBlockAt:x .oreLocator ".batteryX"
+  509 read :buildBlockAt:y .oreLocator ".batteryY"
   510 set :buildBlockAt:rotation null
   511 set :buildBlockAt:config 0
   512 set :buildBlockAt:skipError false
 
   578 label *label141
   579 label *label137
   580 label *label136
-    * sensor *tmp211 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp211
+  581 sensor :depositItems:cap :depositItems:block @itemCapacity
   582 label *label142
   583 ucontrol itemDrop :depositItems:block 30
   584 label *label143
 
   608 return :depositItems*retaddr
   609 end
   610 label *label7
-    * op min *tmp218 :mineOre:amount 30
-    * set :mineOre:amount *tmp218
+  611 op min :mineOre:amount :mineOre:amount 30
   612 set :transportStatus.1:target :mineOre:amount
   613 set :transportStatus.1:item :mineOre:ore
   614 write :transportStatus.1:target .display ".transportTarget"
   615 write :transportStatus.1:item .display ".transportItem"
   616 label *label150
   617 set :locateOre:ore :mineOre:ore
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 *tmp220
+  618 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
   619 op equal *tmp221 *tmp219 false
   620 jump *label152 equal *tmp221 false
   621 set :error.3:error "Cannot locate ore"
 
   666 set :status3.3:text "Mining..."
   667 write :status3.3:text .display ".status3"
   668 label *label168
-    * op add *tmp233 @second 10
-    * set :mineOre:stop *tmp233
+  669 op add :mineOre:stop @second 10
   670 label *label169
-    * sensor *tmp234 @unit @firstItem
-    * set :mineOre:item *tmp234
+  671 sensor :mineOre:item @unit @firstItem
   672 op notEqual *tmp235 :mineOre:item null
   673 op notEqual *tmp236 :mineOre:item :mineOre:ore
   674 op land *tmp237 *tmp235 *tmp236
 
   706 write :status2:item .display ".item2"
   707 write :status2:block .display ".block2"
   708 label *label178
-    * set *tmp243 :mineOre.1:ore
-    * set :mineOre:ore *tmp243
+  709 set :mineOre:ore :mineOre.1:ore
   710 set :mineOre:amount 30
   711 set :mineOre:block .core
   712 setaddr :mineOre*retaddr *label179 (h:*label179)
 
   721 op add :unpackCfg:index :unpackCfg:index 1
   722 read *tmp245 :unpackCfg:cfg *tmp244
   723 op sub *tmp246 *tmp245 35
-    * lookup block *tmp247 *tmp246
-    * set :unpackCfg:type *tmp247
+  724 lookup block :unpackCfg:type *tmp246
   725 set *tmp248 :unpackCfg:index
   726 op add :unpackCfg:index :unpackCfg:index 1
   727 read *tmp249 :unpackCfg:cfg *tmp248
   728 op sub *tmp250 *tmp249 35
-    * op sub *tmp251 *tmp250 7
-    * set :unpackCfg:x *tmp251
+  729 op sub :unpackCfg:x *tmp250 7
   730 set *tmp252 :unpackCfg:index
   731 op add :unpackCfg:index :unpackCfg:index 1
   732 read *tmp253 :unpackCfg:cfg *tmp252
   733 op sub *tmp254 *tmp253 35
-    * op sub *tmp255 *tmp254 7
-    * set :unpackCfg:y *tmp255
+  734 op sub :unpackCfg:y *tmp254 7
   735 set *tmp256 :unpackCfg:index
   736 op add :unpackCfg:index :unpackCfg:index 1
   737 read *tmp257 :unpackCfg:cfg *tmp256
-    * op sub *tmp258 *tmp257 35
-    * set :unpackCfg:cu *tmp258
+  738 op sub :unpackCfg:cu *tmp257 35
   739 set *tmp259 :unpackCfg:index
   740 op add :unpackCfg:index :unpackCfg:index 1
   741 read *tmp260 :unpackCfg:cfg *tmp259
-    * op sub *tmp261 *tmp260 35
-    * set :unpackCfg:pb *tmp261
+  742 op sub :unpackCfg:pb *tmp260 35
   743 set *tmp262 :unpackCfg:index
   744 op add :unpackCfg:index :unpackCfg:index 1
   745 read *tmp263 :unpackCfg:cfg *tmp262
-    * op sub *tmp264 *tmp263 35
-    * set :unpackCfg:gr *tmp264
+  746 op sub :unpackCfg:gr *tmp263 35
   747 set *tmp265 :unpackCfg:index
   748 op add :unpackCfg:index :unpackCfg:index 1
   749 read *tmp266 :unpackCfg:cfg *tmp265
-    * op sub *tmp267 *tmp266 35
-    * set :unpackCfg:si *tmp267
+  750 op sub :unpackCfg:si *tmp266 35
   751 set *tmp268 :unpackCfg:index
   752 op add :unpackCfg:index :unpackCfg:index 1
   753 read *tmp269 :unpackCfg:cfg *tmp268
-    * op sub *tmp270 *tmp269 35
-    * set :unpackCfg:ti *tmp270
+  754 op sub :unpackCfg:ti *tmp269 35
   755 set *tmp271 :unpackCfg:index
   756 op add :unpackCfg:index :unpackCfg:index 1
   757 read *tmp272 :unpackCfg:cfg *tmp271
-    * op sub *tmp273 *tmp272 35
-    * set :unpackCfg:mg *tmp273
+  758 op sub :unpackCfg:mg *tmp272 35
   759 set *tmp274 :unpackCfg:index
   760 op add :unpackCfg:index :unpackCfg:index 1
   761 read *tmp275 :unpackCfg:cfg *tmp274
-    * op sub *tmp276 *tmp275 35
-    * set :unpackCfg:rotation *tmp276
+  762 op sub :unpackCfg:rotation *tmp275 35
   763 label *label180
   764 return :unpackCfg*retaddr
   765 end
 
   814 write :status2.1:item .display ".item2"
   815 write :status2.1:block .display ".block2"
   816 label *label200
-    * sensor *tmp293 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp293
+  817 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   818 sensor *tmp294 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp295 :supplyBlock:blockCapacity *tmp294
-    * set :supplyBlock:missing *tmp295
+  819 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp294
   820 op greaterThan *tmp296 :supplyBlock:missing 0
   821 jump *label201 equal *tmp296 false
   822 set :mineOre:ore :supplyBlock:ore
 
   854 write :status2.2:item .display ".item2"
   855 write :status2.2:block .display ".block2"
   856 label *label210
-    * sensor *tmp304 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp304
+  857 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
   858 sensor *tmp305 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp306 :supplyBlock.1:blockCapacity *tmp305
-    * set :supplyBlock.1:missing *tmp306
+  859 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp305
   860 op greaterThan *tmp307 :supplyBlock.1:missing 0
   861 jump *label211 equal *tmp307 false
   862 set :mineOre:ore :supplyBlock.1:ore
 
   887 write :status2.3:item .display ".item2"
   888 write :status2.3:block .display ".block2"
   889 label *label218
-    * sensor *tmp312 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp312
+  890 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
   891 sensor *tmp313 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp314 :supplyBlock.2:blockCapacity *tmp313
-    * set :supplyBlock.2:missing *tmp314
+  892 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp313
   893 op greaterThan *tmp315 :supplyBlock.2:missing 0
   894 jump *label219 equal *tmp315 false
   895 set :mineOre:ore :supplyBlock.2:ore
 
   928 write :status2.4:item .display ".item2"
   929 write :status2.4:block .display ".block2"
   930 label *label228
-    * sensor *tmp323 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp323
+  931 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
   932 sensor *tmp324 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp325 :supplyBlock.3:blockCapacity *tmp324
-    * set :supplyBlock.3:missing *tmp325
+  933 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp324
   934 op greaterThan *tmp326 :supplyBlock.3:missing 0
   935 jump *label229 equal *tmp326 false
   936 set :mineOre:ore :supplyBlock.3:ore
 
   958 jump *label232 equal *tmp329 false
   959 sensor *tmp331 .core @titanium
   960 op sub *tmp332 .targetTitanium *tmp331
-    * op min *tmp333 7 *tmp332
-    * set *tmp330 *tmp333
+  961 op min *tmp330 7 *tmp332
   962 jump *label233 always
   963 label *label232
   964 set *tmp330 100
 
   988 set :status1.6:text "Goal 6: silicon requirement"
   989 write :status1.6:text .display ".status1"
   990 label *label244
-    * sensor *tmp346 .core @coal
-    * set :supplyBase0:coal *tmp346
-    * sensor *tmp347 .core @sand
-    * set :supplyBase0:sand *tmp347
+  991 sensor :supplyBase0:coal .core @coal
+  992 sensor :supplyBase0:sand .core @sand
   993 op lessThan *tmp348 :supplyBase0:coal :supplyBase0:sand
   994 jump *label245 equal *tmp348 false
   995 set *tmp349 @coal
 
  1043 set :status1.10:text "Goal 10: supplying base"
  1044 write :status1.10:text .display ".status1"
  1045 label *label260
-    * sensor *tmp359 .core @coal
-    * set :supplyBase0:coal.1 *tmp359
-    * sensor *tmp360 .core @sand
-    * set :supplyBase0:sand.1 *tmp360
+ 1046 sensor :supplyBase0:coal.1 .core @coal
+ 1047 sensor :supplyBase0:sand.1 .core @sand
  1048 op lessThanEq *tmp361 :supplyBase0:coal.1 :supplyBase0:sand.1
  1049 jump *label261 equal *tmp361 false
  1050 set *tmp362 @coal
 
  1072 label *label264
  1073 set :fetchBlock:block .titaniumDrill
  1074 set :fetchBlock:item @titanium
-    * sensor *tmp363 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp363
+ 1075 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1076 set :transportStatus.2:item :fetchBlock:item
  1077 write :transportStatus.2:target .display ".transportTarget"
  1078 write :transportStatus.2:item .display ".transportItem"
 
  1117 label *label275
  1118 label *label279
  1119 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp373 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp373
+ 1120 sensor :fetchBlock:unitItem @unit @firstItem
  1121 op notEqual *tmp374 :fetchBlock:unitItem null
  1122 op notEqual *tmp375 :fetchBlock:unitItem :fetchBlock:item
  1123 op land *tmp376 *tmp374 *tmp375
 
  1186 write :meetTarget:metaglass .display ".targetMetaglass"
  1187 set .targetCopper :meetTarget:copper
  1188 op add *tmp384 :meetTarget:lead .leadSurplus
-    * op add *tmp385 *tmp384 1
-    * set .targetLead *tmp385
+ 1189 op add .targetLead *tmp384 1
  1190 set .targetGraphite :meetTarget:graphite
  1191 set .targetSilicon :meetTarget:silicon
  1192 set .targetTitanium :meetTarget:titanium
 
  1292 set :status3.6:text "Building..."
  1293 write :status3.6:text .display ".status3"
  1294 label *label319
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp418 *tmp419
-    * set :buildBlockAt:building *tmp418
+ 1295 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1296 op notEqual *tmp420 :buildBlockAt:building null
  1297 jump *label320 equal *tmp420 false
  1298 op equal *tmp422 :buildBlockAt:type :buildBlockAt:block
 
  1318 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1319 wait 0.25
  1320 label *label327
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp425 *tmp426
-    * set :buildBlockAt:building *tmp425
+ 1321 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1322 op equal *tmp427 :buildBlockAt:building null
  1323 jump *label330 equal *tmp427 false
  1324 set :buildBlockAt*retval null
 
  1331 jump *label327 notEqual *tmp429 false
  1332 label *label329
  1333 set :logBlock:block :buildBlockAt:block
-    * sensor *tmp430 :logBlock:block @id
-    * set :log:encodedId *tmp430
+ 1334 sensor :log:encodedId :logBlock:block @id
  1335 read *tmp90 bank1 511
  1336 op sub *tmp431 *tmp90 1
  1337 write *tmp431 bank1 511

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   537 jump *label122 notEqual *tmp202 false
   538 label *label124
   539 label *label126
-    * jump *label128 equal true false
   540 setaddr :supplyBase*retaddr *label129 (h:*label129)
   541 call *label14 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   542 label *label129

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-69 instructions):
 
    16 set .builder @unit
    17 ulocate building core false @copper .coreX .coreY 0 .core
    18 label *label23
-    * op equal *tmp94 .core null
-    * jump *label22 notEqual *tmp94 false
+   19 jump *label22 equal .core null
    20 label *label24
    21 set .display processor1
    22 set .flareController processor3
 
    95 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    96 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    97 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp122 :buildTitaniumDrill:result false
-    * jump *label37 equal *tmp122 false
+   98 jump *label37 notEqual :buildTitaniumDrill:result false
    99 set :error:error "Cannot locate spot for titanium drill"
   100 set .ERROR :error:error
   101 stop
 
   212 call *label14 *invalid :supplyBase*retval (m:*label54) (h:*label54)
   213 label *label54
   214 sensor *tmp133 .battery @totalPower
-    * op lessThan *tmp134 *tmp133 300
-    * jump *label55 equal *tmp134 false
+  215 jump *label55 greaterThanEq *tmp133 300
   216 jump *label53 always
   217 jump *label56 always
   218 label *label55
   219 label *label56
   220 label *label52
   221 read *tmp73 .controller ".monos"
-    * op lessThan *tmp136 *tmp73 3
-    * jump *label51 notEqual *tmp136 false
+  222 jump *label51 lessThan *tmp73 3
   223 label *label53
   224 set .siliconSurplus 100
   225 set :buildBlockFromCfg:cfg ",)###A<##"
 
   291 write 3 .controller ".polyTarget"
   292 label *label71
   293 read *tmp74 .controller ".polys"
-    * op lessThan *tmp150 *tmp74 3
-    * jump *label73 equal *tmp150 false
+  294 jump *label73 greaterThanEq *tmp74 3
   295 setaddr :supplyBase*retaddr *label74 (h:*label74)
   296 call *label14 *invalid :supplyBase*retval (m:*label74) (h:*label74)
   297 label *label74
 
   302 write 6 .controller ".polyTarget"
   303 label *label75
   304 read *tmp72 .controller ".flares"
-    * op lessThan *tmp151 *tmp72 2
-    * jump *label77 equal *tmp151 false
+  305 jump *label77 greaterThanEq *tmp72 2
   306 setaddr :supplyBase*retaddr *label78 (h:*label78)
   307 call *label14 *invalid :supplyBase*retval (m:*label78) (h:*label78)
   308 label *label78
 
   331 label *label83
   332 label *label81
   333 read *tmp164 .oreLocator ":findDrillLocation*finished"
-    * op equal *tmp165 *tmp164 false
-    * jump *label80 notEqual *tmp165 false
+  334 jump *label80 equal *tmp164 false
   335 label *label82
   336 write null .display ".nextBlock"
   337 set :findFreeUnit:unit_type @flare
   338 set :findFreeUnit:initial_flag 0
   339 ubind :findFreeUnit:unit_type
-    * op equal *tmp167 @unit null
-    * jump *label85 equal *tmp167 false
+  340 jump *label85 notEqual @unit null
   341 jump *label84 always
   342 jump *label86 always
   343 label *label85
 
   345 set :findFreeUnit:first_unit @unit
   346 label *label87
   347 sensor *tmp169 @unit @controlled
-    * op equal *tmp170 *tmp169 0
-    * jump *label90 equal *tmp170 false
+  348 jump *label90 notEqual *tmp169 0
   349 ucontrol flag :findFreeUnit:initial_flag
   350 jump *label84 always
   351 jump *label91 always
   352 label *label90
   353 sensor *tmp172 :findFreeUnit:first_unit @dead
-    * op equal *tmp173 *tmp172 1
-    * jump *label92 equal *tmp173 false
+  354 jump *label92 notEqual *tmp172 1
   355 set :findFreeUnit:first_unit @unit
   356 jump *label93 always
   357 label *label92
 
   359 label *label91
   360 ubind :findFreeUnit:unit_type
   361 label *label88
-    * op notEqual *tmp176 :findFreeUnit:first_unit @unit
-    * jump *label87 notEqual *tmp176 false
+  362 jump *label87 notEqual :findFreeUnit:first_unit @unit
   363 label *label89
   364 jump *label84 always
   365 label *label84
 
   376 label *label97
   377 label *label95
   378 read *tmp181 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp182 *tmp181 false
-    * jump *label94 notEqual *tmp182 false
+  379 jump *label94 equal *tmp181 false
   380 label *label96
   381 set :meetTarget.1:cfg "x**F#AA7##"
   382 setaddr :meetTarget.1*retaddr *label99 (h:*label99)
 
   387 read *tmp183 .oreLocator ":layoutThoriumDrill*finished"
   388 jump *label100 equal *tmp183 false
   389 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp185 :buildThoriumDrill:result false
-    * jump *label101 equal *tmp185 false
+  390 jump *label101 notEqual :buildThoriumDrill:result false
   391 set :error.1:error "Cannot locate spot for thorium drill"
   392 set .ERROR :error.1:error
   393 stop
 
   406 label *label104
   407 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   408 read *tmp44 .oreLocator ".water1X"
-    * op lessThan *tmp188 *tmp44 0
-    * jump *label105 equal *tmp188 false
+  409 jump *label105 greaterThanEq *tmp44 0
   410 jump *label98 always
   411 jump *label106 always
   412 label *label105
 
   426 call *label16 *invalid :buildBlockAt*retval (m:*label108) (h:*label108)
   427 label *label108
   428 read *tmp46 .oreLocator ".water2X"
-    * op lessThan *tmp191 *tmp46 0
-    * jump *label109 equal *tmp191 false
+  429 jump *label109 greaterThanEq *tmp46 0
   430 jump *label98 always
   431 jump *label110 always
   432 label *label109
 
   518 read *tmp72 .controller ".flares"
   519 read *tmp73 .controller ".monos"
   520 op add *tmp201 *tmp72 *tmp73
-    * op lessThan *tmp202 *tmp201 16
-    * jump *label122 notEqual *tmp202 false
+  521 jump *label122 lessThan *tmp201 16
   522 label *label124
   523 label *label126
   524 setaddr :supplyBase*retaddr *label129 (h:*label129)
 
   538 write :status3:text .display ".status3"
   539 label *label133
   540 sensor *tmp203 @unit @firstItem
-    * op equal *tmp204 *tmp203 :depositItems:item
-    * jump *label134 equal *tmp204 false
+  541 jump *label134 notEqual *tmp203 :depositItems:item
   542 set :moveToBlock:block :depositItems:block
   543 set :moveToBlock:radius 6
   544 sensor *tmp206 :moveToBlock:block @x
 
   551 label *label138
   552 label *label139
   553 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp208
-    * op equal *tmp209 *tmp208 false
-    * jump *label141 equal *tmp209 false
+  554 jump *label141 notEqual *tmp208 false
   555 op sub *tmp210 :moveTo:radius 0.5
   556 ucontrol approach :moveTo:x :moveTo:y *tmp210
   557 label *label140
 
   566 sensor *tmp212 @unit @firstItem
   567 op mul *tmp213 *tmp212 :depositItems:cap
   568 sensor *tmp214 :depositItems:block :depositItems:item
-    * op greaterThan *tmp215 *tmp213 *tmp214
-    * jump *label142 notEqual *tmp215 false
+  569 jump *label142 greaterThan *tmp213 *tmp214
   570 label *label144
   571 jump *label135 always
   572 label *label134
   573 label *label145
   574 sensor *tmp216 @unit @firstItem
-    * op notEqual *tmp217 *tmp216 null
-    * jump *label147 equal *tmp217 false
+  575 jump *label147 equal *tmp216 null
   576 ucontrol itemDrop @air 1000
   577 label *label146
   578 jump *label145 always
 
   595 label *label150
   596 set :locateOre:ore :mineOre:ore
   597 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
-    * op equal *tmp221 *tmp219 false
-    * jump *label152 equal *tmp221 false
+  598 jump *label152 notEqual *tmp219 false
   599 set :error.3:error "Cannot locate ore"
   600 set .ERROR :error.3:error
   601 stop
 
   613 label *label156
   614 label *label157
   615 sensor *tmp223 @unit @firstItem
-    * op notEqual *tmp224 *tmp223 null
-    * jump *label160 equal *tmp224 false
+  616 jump *label160 equal *tmp223 null
   617 ucontrol itemDrop @air 1000
   618 jump *label161 always
   619 label *label160
 
   621 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   622 label *label158
   623 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp226
-    * op equal *tmp227 *tmp226 false
-    * jump *label157 notEqual *tmp227 false
+  624 jump *label157 equal *tmp226 false
   625 label *label159
   626 label *label155
   627 sensor *tmp228 @unit @firstItem
-    * op notEqual *tmp229 *tmp228 :mineOre:ore
-    * jump *label162 equal *tmp229 false
+  628 jump *label162 equal *tmp228 :mineOre:ore
   629 label *label165
   630 sensor *tmp231 @unit @firstItem
-    * op notEqual *tmp232 *tmp231 null
-    * jump *label167 equal *tmp232 false
+  631 jump *label167 equal *tmp231 null
   632 ucontrol itemDrop @air 1000
   633 label *label166
   634 jump *label165 always
 
   652 label *label172
   653 label *label173
   654 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp239 @second :mineOre:stop
-    * jump *label174 equal *tmp239 false
+  655 jump *label174 lessThanEq @second :mineOre:stop
   656 jump *label171 always
   657 jump *label175 always
   658 label *label174
   659 label *label175
   660 label *label170
   661 sensor *tmp241 @unit @totalItems
-    * op lessThan *tmp242 *tmp241 :mineOre:amount
-    * jump *label169 notEqual *tmp242 false
+  662 jump *label169 lessThan *tmp241 :mineOre:amount
   663 label *label171
   664 ucontrol unbind
   665 set :depositItems:block :mineOre:block
 
   736 return :unpackCfg*retaddr
   737 end
   738 label *label14
-    * op equal *tmp277 .flareControllerStarted false
-    * jump *label182 equal *tmp277 false
+  739 jump *label182 notEqual .flareControllerStarted false
   740 read *tmp72 .controller ".flares"
-    * op greaterThan *tmp279 *tmp72 0
-    * jump *label184 equal *tmp279 false
+  741 jump *label184 lessThanEq *tmp72 0
   742 set .flareControllerStarted true
   743 write .core .flareController ":start:aCore"
   744 write .titaniumDrill .flareController ":start:drill"
 
   751 label *label182
   752 label *label183
   753 read *tmp73 .controller ".monos"
-    * op greaterThan *tmp283 *tmp73 3
-    * jump *label186 equal *tmp283 false
+  754 jump *label186 lessThanEq *tmp73 3
   755 set :status1:text "Phase 1: supplying base"
   756 write :status1:text .display ".status1"
   757 label *label189
 
   763 jump *label187 always
   764 label *label186
   765 set :supplyBase0:supplied false
-    * op equal *tmp285 .unloader1 null
-    * jump *label192 equal *tmp285 false
+  766 jump *label192 notEqual .unloader1 null
   767 sensor *tmp287 .core @graphite
-    * op lessThan *tmp288 *tmp287 .targetGraphite
-    * jump *label194 equal *tmp288 false
+  768 jump *label194 greaterThanEq *tmp287 .targetGraphite
   769 sensor *tmp290 .press @coal
-    * op lessThan *tmp291 *tmp290 5
-    * jump *label196 equal *tmp291 false
+  770 jump *label196 greaterThanEq *tmp290 5
   771 set :status1.1:text "Goal 1: graphite requirement"
   772 write :status1.1:text .display ".status1"
   773 label *label198
 
   783 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   784 sensor *tmp294 :supplyBlock:block :supplyBlock:ore
   785 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp294
-    * op greaterThan *tmp296 :supplyBlock:missing 0
-    * jump *label201 equal *tmp296 false
+  786 jump *label201 lessThanEq :supplyBlock:missing 0
   787 set :mineOre:ore :supplyBlock:ore
   788 set :mineOre:amount :supplyBlock:blockCapacity
   789 set :mineOre:block :supplyBlock:block
 
   802 label *label194
   803 label *label195
   804 sensor *tmp298 .core @silicon
-    * op lessThan *tmp299 *tmp298 .targetSilicon
-    * jump *label204 equal *tmp299 false
+  805 jump *label204 greaterThanEq *tmp298 .targetSilicon
   806 sensor *tmp301 .smelter @coal
-    * op lessThan *tmp302 *tmp301 5
-    * jump *label206 equal *tmp302 false
+  807 jump *label206 greaterThanEq *tmp301 5
   808 set :status1.2:text "Goal 2: coal for silicon requirement"
   809 write :status1.2:text .display ".status1"
   810 label *label208
 
   820 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
   821 sensor *tmp305 :supplyBlock.1:block :supplyBlock.1:ore
   822 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp305
-    * op greaterThan *tmp307 :supplyBlock.1:missing 0
-    * jump *label211 equal *tmp307 false
+  823 jump *label211 lessThanEq :supplyBlock.1:missing 0
   824 set :mineOre:ore :supplyBlock.1:ore
   825 set :mineOre:amount :supplyBlock.1:blockCapacity
   826 set :mineOre:block :supplyBlock.1:block
 
   835 jump *label207 always
   836 label *label206
   837 sensor *tmp309 .smelter @sand
-    * op lessThan *tmp310 *tmp309 5
-    * jump *label214 equal *tmp310 false
+  838 jump *label214 greaterThanEq *tmp309 5
   839 set :status1.3:text "Goal 3: sand for silicon requirement"
   840 write :status1.3:text .display ".status1"
   841 label *label216
 
   851 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
   852 sensor *tmp313 :supplyBlock.2:block :supplyBlock.2:ore
   853 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp313
-    * op greaterThan *tmp315 :supplyBlock.2:missing 0
-    * jump *label219 equal *tmp315 false
+  854 jump *label219 lessThanEq :supplyBlock.2:missing 0
   855 set :mineOre:ore :supplyBlock.2:ore
   856 set :mineOre:amount :supplyBlock.2:blockCapacity
   857 set :mineOre:block :supplyBlock.2:block
 
   871 label *label204
   872 label *label205
   873 sensor *tmp317 .battery @totalPower
-    * op lessThan *tmp318 *tmp317 .powerTarget
-    * jump *label222 equal *tmp318 false
+  874 jump *label222 greaterThanEq *tmp317 .powerTarget
   875 sensor *tmp320 .generator @coal
-    * op lessThan *tmp321 *tmp320 2
-    * jump *label224 equal *tmp321 false
+  876 jump *label224 greaterThanEq *tmp320 2
   877 set :status1.4:text "Goal 4: supplying generator"
   878 write :status1.4:text .display ".status1"
   879 label *label226
 
   889 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
   890 sensor *tmp324 :supplyBlock.3:block :supplyBlock.3:ore
   891 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp324
-    * op greaterThan *tmp326 :supplyBlock.3:missing 0
-    * jump *label229 equal *tmp326 false
+  892 jump *label229 lessThanEq :supplyBlock.3:missing 0
   893 set :mineOre:ore :supplyBlock.3:ore
   894 set :mineOre:amount :supplyBlock.3:blockCapacity
   895 set :mineOre:block :supplyBlock.3:block
 
   911 label *label192
   912 label *label193
   913 sensor *tmp328 .core @titanium
-    * op lessThan *tmp329 *tmp328 .targetTitanium
-    * jump *label232 equal *tmp329 false
+  914 jump *label232 greaterThanEq *tmp328 .targetTitanium
   915 sensor *tmp331 .core @titanium
   916 op sub *tmp332 .targetTitanium *tmp331
   917 op min *tmp330 7 *tmp332
 
   921 label *label233
   922 set :supplyBase0:titaniumTrigger *tmp330
   923 sensor *tmp334 .titaniumDrill @titanium
-    * op lessThan *tmp335 *tmp334 :supplyBase0:titaniumTrigger
-    * jump *label234 equal *tmp335 false
-    * op equal *tmp337 :supplyBase0:supplied false
-    * jump *label236 equal *tmp337 false
+  924 jump *label234 greaterThanEq *tmp334 :supplyBase0:titaniumTrigger
+  925 jump *label236 notEqual :supplyBase0:supplied false
   926 sensor *tmp339 .battery @totalPower
   927 op mul *tmp340 .unloader1 .powerTarget
-    * op lessThan *tmp341 *tmp339 *tmp340
-    * jump *label238 equal *tmp341 false
+  928 jump *label238 greaterThanEq *tmp339 *tmp340
   929 set :status1.5:text "Goal 5: supplying generator"
   930 write :status1.5:text .display ".status1"
   931 label *label240
 
   936 jump *label239 always
   937 label *label238
   938 sensor *tmp343 .core @silicon
-    * op lessThan *tmp344 *tmp343 .targetSilicon
-    * jump *label242 equal *tmp344 false
+  939 jump *label242 greaterThanEq *tmp343 .targetSilicon
   940 set :status1.6:text "Goal 6: silicon requirement"
   941 write :status1.6:text .display ".status1"
   942 label *label244
   943 sensor :supplyBase0:coal .core @coal
   944 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp348 :supplyBase0:coal :supplyBase0:sand
-    * jump *label245 equal *tmp348 false
+  945 jump *label245 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   946 set *tmp349 @coal
   947 jump *label246 always
   948 label *label245
 
   956 jump *label243 always
   957 label *label242
   958 sensor *tmp350 .core @copper
-    * op lessThan *tmp351 *tmp350 .targetCopper
-    * jump *label248 equal *tmp351 false
+  959 jump *label248 greaterThanEq *tmp350 .targetCopper
   960 set :status1.7:text "Goal 7: copper requirement"
   961 write :status1.7:text .display ".status1"
   962 label *label250
 
   967 jump *label249 always
   968 label *label248
   969 sensor *tmp353 .core @lead
-    * op lessThan *tmp354 *tmp353 .targetLead
-    * jump *label252 equal *tmp354 false
+  970 jump *label252 greaterThanEq *tmp353 .targetLead
   971 set :status1.8:text "Goal 8: lead requirement"
   972 write :status1.8:text .display ".status1"
   973 label *label254
 
   978 jump *label253 always
   979 label *label252
   980 sensor *tmp356 .core @metaglass
-    * op lessThan *tmp357 *tmp356 .targetMetaglass
-    * jump *label256 equal *tmp357 false
+  981 jump *label256 greaterThanEq *tmp356 .targetMetaglass
   982 set :status1.9:text "Goal 9: metaglass requirement"
   983 write :status1.9:text .display ".status1"
   984 label *label258
 
   993 label *label260
   994 sensor :supplyBase0:coal.1 .core @coal
   995 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp361 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label261 equal *tmp361 false
+  996 jump *label261 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   997 set *tmp362 @coal
   998 jump *label262 always
   999 label *label261
 
  1040 label *label269
  1041 label *label270
  1042 sensor *tmp366 @unit @firstItem
-    * op notEqual *tmp367 *tmp366 null
-    * jump *label273 equal *tmp367 false
+ 1043 jump *label273 equal *tmp366 null
  1044 ucontrol itemDrop @air 1000
  1045 jump *label274 always
  1046 label *label273
 
  1048 ucontrol approach :moveToEmpty.1:x :moveToEmpty.1:y 5.5
  1049 label *label271
  1050 ucontrol within :moveToEmpty.1:x :moveToEmpty.1:y 6 *tmp369
-    * op equal *tmp370 *tmp369 false
-    * jump *label270 notEqual *tmp370 false
+ 1051 jump *label270 equal *tmp369 false
  1052 label *label272
  1053 label *label268
  1054 label *label276
  1055 sensor *tmp371 @unit @firstItem
-    * op notEqual *tmp372 *tmp371 null
-    * jump *label278 equal *tmp372 false
+ 1056 jump *label278 equal *tmp371 null
  1057 ucontrol itemDrop @air 1000
  1058 label *label277
  1059 jump *label276 always
 
  1149 write *tmp392 .controller ".siliconReserve"
  1150 label *label295
  1151 sensor *tmp394 .core @copper
-    * op lessThan *tmp395 *tmp394 .targetCopper
-    * jump *label299 equal *tmp395 false
+ 1152 jump *label299 greaterThanEq *tmp394 .targetCopper
  1153 set *tmp393 false
  1154 jump *label298 always
  1155 jump *label300 always
  1156 label *label299
  1157 label *label300
  1158 sensor *tmp397 .core @lead
-    * op lessThan *tmp398 *tmp397 .targetLead
-    * jump *label301 equal *tmp398 false
+ 1159 jump *label301 greaterThanEq *tmp397 .targetLead
  1160 set *tmp393 false
  1161 jump *label298 always
  1162 jump *label302 always
  1163 label *label301
  1164 label *label302
  1165 sensor *tmp400 .core @graphite
-    * op lessThan *tmp401 *tmp400 .targetGraphite
-    * jump *label303 equal *tmp401 false
+ 1166 jump *label303 greaterThanEq *tmp400 .targetGraphite
  1167 set *tmp393 false
  1168 jump *label298 always
  1169 jump *label304 always
  1170 label *label303
  1171 label *label304
  1172 sensor *tmp403 .core @silicon
-    * op lessThan *tmp404 *tmp403 .targetSilicon
-    * jump *label305 equal *tmp404 false
+ 1173 jump *label305 greaterThanEq *tmp403 .targetSilicon
  1174 set *tmp393 false
  1175 jump *label298 always
  1176 jump *label306 always
  1177 label *label305
  1178 label *label306
  1179 sensor *tmp406 .core @titanium
-    * op lessThan *tmp407 *tmp406 .targetTitanium
-    * jump *label307 equal *tmp407 false
+ 1180 jump *label307 greaterThanEq *tmp406 .targetTitanium
  1181 set *tmp393 false
  1182 jump *label298 always
  1183 jump *label308 always
  1184 label *label307
  1185 label *label308
  1186 sensor *tmp409 .core @metaglass
-    * op lessThan *tmp410 *tmp409 .targetMetaglass
-    * jump *label309 equal *tmp410 false
+ 1187 jump *label309 greaterThanEq *tmp409 .targetMetaglass
  1188 set *tmp393 false
  1189 jump *label298 always
  1190 jump *label310 always
 
  1194 jump *label298 always
  1195 set *tmp393 null
  1196 label *label298
-    * op equal *tmp412 *tmp393 false
-    * jump *label297 equal *tmp412 false
+ 1197 jump *label297 notEqual *tmp393 false
  1198 setaddr :supplyBase*retaddr *label311 (h:*label311)
  1199 call *label14 *invalid :supplyBase*retval (m:*label311) (h:*label311)
  1200 label *label311
 
  1217 label *label315
  1218 label *label316
  1219 ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp415
-    * op equal *tmp416 *tmp415 false
-    * jump *label318 equal *tmp416 false
+ 1220 jump *label318 notEqual *tmp415 false
  1221 op sub *tmp417 :moveTo.2:radius 0.5
  1222 ucontrol approach :moveTo.2:x :moveTo.2:y *tmp417
  1223 label *label317
 
  1229 write :status3.6:text .display ".status3"
  1230 label *label319
  1231 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp420 :buildBlockAt:building null
-    * jump *label320 equal *tmp420 false
-    * op equal *tmp422 :buildBlockAt:type :buildBlockAt:block
-    * jump *label322 equal *tmp422 false
+ 1232 jump *label320 equal :buildBlockAt:building null
+ 1233 jump *label322 notEqual :buildBlockAt:type :buildBlockAt:block
  1234 set :buildBlockAt*retval :buildBlockAt:building
  1235 jump *label312 always
  1236 jump *label323 always
 
  1253 wait 0.25
  1254 label *label327
  1255 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp427 :buildBlockAt:building null
-    * jump *label330 equal *tmp427 false
+ 1256 jump *label330 notEqual :buildBlockAt:building null
  1257 set :buildBlockAt*retval null
  1258 jump *label312 always
  1259 jump *label331 always
  1260 label *label330
  1261 label *label331
  1262 label *label328
-    * op notEqual *tmp429 :buildBlockAt:type :buildBlockAt:block
-    * jump *label327 notEqual *tmp429 false
+ 1263 jump *label327 notEqual :buildBlockAt:type :buildBlockAt:block
  1264 label *label329
  1265 set :logBlock:block :buildBlockAt:block
  1266 sensor :log:encodedId :logBlock:block @id
 
  1373 set :findUnits:count 0
  1374 ubind :findUnits:type
  1375 set :findUnits:firstUnit @unit
-    * op notEqual *tmp440 :findUnits:firstUnit null
-    * jump *label344 equal *tmp440 false
+ 1376 jump *label344 equal :findUnits:firstUnit null
  1377 label *label346
  1378 op add :findUnits:count :findUnits:count 1
  1379 ubind :findUnits:type
  1380 label *label347
-    * op notEqual *tmp443 @unit :findUnits:firstUnit
-    * jump *label346 notEqual *tmp443 false
+ 1381 jump *label346 notEqual @unit :findUnits:firstUnit
  1382 label *label348
  1383 jump *label345 always
  1384 label *label344

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-40 instructions):
 
   100 set .ERROR :error:error
   101 stop
   102 label *label39
-    * jump *label38 always
   103 label *label37
   104 label *label38
   105 write @pneumatic-drill .display ".nextBlock"
 
   213 sensor *tmp133 .battery @totalPower
   214 jump *label55 greaterThanEq *tmp133 300
   215 jump *label53 always
-    * jump *label56 always
   216 label *label55
   217 label *label56
   218 label *label52
 
   337 ubind :findFreeUnit:unit_type
   338 jump *label85 notEqual @unit null
   339 jump *label84 always
-    * jump *label86 always
   340 label *label85
   341 label *label86
   342 set :findFreeUnit:first_unit @unit
 
   350 sensor *tmp172 :findFreeUnit:first_unit @dead
   351 jump *label92 notEqual *tmp172 1
   352 set :findFreeUnit:first_unit @unit
-    * jump *label93 always
   353 label *label92
   354 label *label93
   355 label *label91
 
   357 label *label88
   358 jump *label87 notEqual :findFreeUnit:first_unit @unit
   359 label *label89
-    * jump *label84 always
   360 label *label84
   361 write .coreX .oreLocator ":layoutThoriumDrill:x"
   362 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
   387 set .ERROR :error.1:error
   388 stop
   389 label *label103
-    * jump *label102 always
   390 label *label101
   391 label *label102
   392 set :buildBlockAt:block @laser-drill
 
   402 read *tmp44 .oreLocator ".water1X"
   403 jump *label105 greaterThanEq *tmp44 0
   404 jump *label98 always
-    * jump *label106 always
   405 label *label105
   406 label *label106
   407 set :meetTarget.1:cfg "z%-AAA##A#"
 
   421 read *tmp46 .oreLocator ".water2X"
   422 jump *label109 greaterThanEq *tmp46 0
   423 jump *label98 always
-    * jump *label110 always
   424 label *label109
   425 label *label110
   426 set :meetTarget.1:cfg "z%-AAA##A#"
 
   592 set .ERROR :error.3:error
   593 stop
   594 label *label154
-    * jump *label153 always
   595 label *label152
   596 label *label153
   597 label *label151
 
   606 sensor *tmp223 @unit @firstItem
   607 jump *label160 equal *tmp223 null
   608 ucontrol itemDrop @air 1000
-    * jump *label161 always
   609 label *label160
   610 label *label161
   611 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   624 jump *label165 always
   625 label *label167
   626 label *label164
-    * jump *label163 always
   627 label *label162
   628 label *label163
   629 set :status3.3:text "Mining..."
 
   637 op land *tmp237 *tmp235 *tmp236
   638 jump *label172 equal *tmp237 false
   639 jump *label171 always
-    * jump *label173 always
   640 label *label172
   641 label *label173
   642 ucontrol mine :mineOre:x :mineOre:y
   643 jump *label174 lessThanEq @second :mineOre:stop
   644 jump *label171 always
-    * jump *label175 always
   645 label *label174
   646 label *label175
   647 label *label170
 
   731 write .titaniumDrill .flareController ":start:drill"
   732 write false .flareController ":start*finished"
   733 write 3 .flareController "@counter"
-    * jump *label185 always
   734 label *label184
   735 label *label185
-    * jump *label183 always
   736 label *label182
   737 label *label183
   738 read *tmp73 .controller ".monos"
 
   775 setaddr :mineOre*retaddr *label203 (h:*label203)
   776 call *label7 *invalid :mineOre*retval (m:*label203) (h:*label203)
   777 label *label203
-    * jump *label202 always
   778 label *label201
   779 label *label202
   780 label *label199
   781 set :supplyBase0:supplied true
-    * jump *label197 always
   782 label *label196
   783 label *label197
-    * jump *label195 always
   784 label *label194
   785 label *label195
   786 sensor *tmp298 .core @silicon
 
   809 setaddr :mineOre*retaddr *label213 (h:*label213)
   810 call *label7 *invalid :mineOre*retval (m:*label213) (h:*label213)
   811 label *label213
-    * jump *label212 always
   812 label *label211
   813 label *label212
   814 label *label209
 
   839 setaddr :mineOre*retaddr *label221 (h:*label221)
   840 call *label7 *invalid :mineOre*retval (m:*label221) (h:*label221)
   841 label *label221
-    * jump *label220 always
   842 label *label219
   843 label *label220
   844 label *label217
   845 set :supplyBase0:supplied true
-    * jump *label215 always
   846 label *label214
   847 label *label215
   848 label *label207
-    * jump *label205 always
   849 label *label204
   850 label *label205
   851 sensor *tmp317 .battery @totalPower
 
   874 setaddr :mineOre*retaddr *label231 (h:*label231)
   875 call *label7 *invalid :mineOre*retval (m:*label231) (h:*label231)
   876 label *label231
-    * jump *label230 always
   877 label *label229
   878 label *label230
   879 label *label227
   880 set :supplyBase0:supplied true
-    * jump *label225 always
   881 label *label224
   882 label *label225
-    * jump *label223 always
   883 label *label222
   884 label *label223
-    * jump *label193 always
   885 label *label192
   886 label *label193
   887 sensor *tmp328 .core @titanium
 
   983 label *label249
   984 label *label243
   985 label *label239
-    * jump *label237 always
   986 label *label236
   987 label *label237
   988 jump *label235 always
 
  1015 sensor *tmp366 @unit @firstItem
  1016 jump *label273 equal *tmp366 null
  1017 ucontrol itemDrop @air 1000
-    * jump *label274 always
  1018 label *label273
  1019 label *label274
  1020 ucontrol approach :moveToEmpty.1:x :moveToEmpty.1:y 5.5
 
  1039 op land *tmp376 *tmp374 *tmp375
  1040 jump *label282 equal *tmp376 false
  1041 ucontrol itemDrop @air 1000
-    * jump *label283 always
  1042 label *label282
  1043 label *label283
  1044 label *label280
 
  1123 jump *label299 greaterThanEq *tmp394 .targetCopper
  1124 set *tmp393 false
  1125 jump *label298 always
-    * jump *label300 always
  1126 label *label299
  1127 label *label300
  1128 sensor *tmp397 .core @lead
  1129 jump *label301 greaterThanEq *tmp397 .targetLead
  1130 set *tmp393 false
  1131 jump *label298 always
-    * jump *label302 always
  1132 label *label301
  1133 label *label302
  1134 sensor *tmp400 .core @graphite
  1135 jump *label303 greaterThanEq *tmp400 .targetGraphite
  1136 set *tmp393 false
  1137 jump *label298 always
-    * jump *label304 always
  1138 label *label303
  1139 label *label304
  1140 sensor *tmp403 .core @silicon
  1141 jump *label305 greaterThanEq *tmp403 .targetSilicon
  1142 set *tmp393 false
  1143 jump *label298 always
-    * jump *label306 always
  1144 label *label305
  1145 label *label306
  1146 sensor *tmp406 .core @titanium
  1147 jump *label307 greaterThanEq *tmp406 .targetTitanium
  1148 set *tmp393 false
  1149 jump *label298 always
-    * jump *label308 always
  1150 label *label307
  1151 label *label308
  1152 sensor *tmp409 .core @metaglass
  1153 jump *label309 greaterThanEq *tmp409 .targetMetaglass
  1154 set *tmp393 false
  1155 jump *label298 always
-    * jump *label310 always
  1156 label *label309
  1157 label *label310
  1158 set *tmp393 true
 
  1198 jump *label322 notEqual :buildBlockAt:type :buildBlockAt:block
  1199 set :buildBlockAt*retval :buildBlockAt:building
  1200 jump *label312 always
-    * jump *label323 always
  1201 label *label322
  1202 label *label323
  1203 jump *label324 equal :buildBlockAt:skipError false
  1204 set :buildBlockAt*retval null
  1205 jump *label312 always
-    * jump *label325 always
  1206 label *label324
  1207 label *label325
  1208 set :error.4:error "Cannot build at ("
  1209 set .ERROR :error.4:error
  1210 stop
  1211 label *label326
-    * jump *label321 always
  1212 label *label320
  1213 label *label321
  1214 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1218 jump *label330 notEqual :buildBlockAt:building null
  1219 set :buildBlockAt*retval null
  1220 jump *label312 always
-    * jump *label331 always
  1221 label *label330
  1222 label *label331
  1223 label *label328
 
  1341 label *label347
  1342 jump *label346 notEqual @unit :findUnits:firstUnit
  1343 label *label348
-    * jump *label345 always
  1344 label *label344
  1345 label *label345
  1346 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
  1229 op sub *tmp431 *tmp90 1
  1230 write *tmp431 bank1 511
  1231 set *tmp432 *tmp431
-    * op mul *tmp434 @second 1000
-    * op floor *tmp435 *tmp434
+ 1232 op idiv *tmp435 @second 0.001
  1233 op mul *tmp436 *tmp435 1000
  1234 op add *tmp437 :log:encodedId *tmp436
  1235 write *tmp437 bank1 *tmp432

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .kiln null
     7 set .leadSurplus 0
     8 set .graphiteSurplus 20
     9 set .siliconSurplus 20
 
    21 set .flareController processor3
    22 set .oreLocator processor4
    23 set .polyController processor5
-    * write .core .polyController ":startPolyController:aCore"
-    * write @unit .polyController ":startPolyController:aBuilder"
-    * write false .polyController ":startPolyController*finished"
-    * write 1 .polyController "@counter"
+   24 write .core processor5 ":startPolyController:aCore"
+   25 write @unit processor5 ":startPolyController:aBuilder"
+   26 write false processor5 ":startPolyController*finished"
+   27 write 1 processor5 "@counter"
    28 set :findUnits:type @flare
    29 setaddr :findUnits*retaddr *label25 (h:*label25)
    30 call *label20 *invalid :findUnits*retval (m:*label25) (h:*label25)
    31 label *label25
-    * write :findUnits:count .display ".displayFlares"
+   32 write :findUnits:count processor1 ".displayFlares"
    33 set :flares :findUnits*retval
    34 set :findUnits:type @mono
    35 setaddr :findUnits*retaddr *label26 (h:*label26)
    36 call *label20 *invalid :findUnits*retval (m:*label26) (h:*label26)
    37 label *label26
-    * write :findUnits:count .display ".displayMonos"
+   38 write :findUnits:count processor1 ".displayMonos"
    39 set :monos :findUnits*retval
    40 set :findUnits:type @poly
    41 setaddr :findUnits*retaddr *label27 (h:*label27)
    42 call *label20 *invalid :findUnits*retval (m:*label27) (h:*label27)
    43 label *label27
-    * write :findUnits:count .display ".displayPolys"
+   44 write :findUnits:count processor1 ".displayPolys"
    45 set :polys :findUnits*retval
    46 set :buildBlockFromCfg:cfg "#'+nA#####"
    47 setaddr :buildBlockFromCfg*retaddr *label28 (h:*label28)
 
    73 call *label18 *invalid :buildBlockFromCfg*retval (m:*label33) (h:*label33)
    74 label *label33
    75 set :buildTitaniumDrill:cfg "w**5#-####"
-    * set :meetTarget.1:cfg :buildTitaniumDrill:cfg
+   76 set :meetTarget.1:cfg "w**5#-####"
    77 setaddr :meetTarget.1*retaddr *label35 (h:*label35)
    78 call *label19 *invalid :meetTarget.1*retval (m:*label35) (h:*label35)
    79 label *label35
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   80 write @titanium processor1 ".nextBlock"
+   81 write .coreX processor4 ":findDrillLocation:x"
+   82 write .coreY processor4 ":findDrillLocation:y"
+   83 write @unit processor4 ":findDrillLocation:unit"
+   84 write @titanium processor4 ":findDrillLocation:item"
+   85 write @ore-titanium processor4 ":findDrillLocation:ore"
+   86 write 2 processor4 ":findDrillLocation:size"
+   87 write 4 processor4 ":findDrillLocation:limit"
+   88 write false processor4 ":findDrillLocation*finished"
+   89 write 1 processor4 "@counter"
    90 label *label36
    91 wait 1e-15
-    * read *tmp120 .oreLocator ":findDrillLocation*finished"
+   92 read *tmp120 processor4 ":findDrillLocation*finished"
    93 jump *label36 equal *tmp120 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   94 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   95 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   96 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
    97 jump *label37 notEqual :buildTitaniumDrill:result false
    98 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+   99 set .ERROR "Cannot locate spot for titanium drill"
   100 stop
   101 label *label39
   102 label *label37
   103 label *label38
-    * write @pneumatic-drill .display ".nextBlock"
+  104 write @pneumatic-drill processor1 ".nextBlock"
   105 set :buildBlockAt:block @pneumatic-drill
   106 set :buildBlockAt:x :buildTitaniumDrill:dx
   107 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   113 label *label40
   114 set *tmp109 :buildBlockAt*retval
   115 jump *label34 always
-    * set *tmp109 null
   116 label *label34
-    * set .titaniumDrill *tmp109
-    * write .titaniumDrill .display ".titaniumDrill"
+  117 set .titaniumDrill :buildBlockAt*retval
+  118 write *tmp109 processor1 ".titaniumDrill"
   119 set :buildBlockFromCfg:cfg "*,###A<##"
   120 setaddr :buildBlockFromCfg*retaddr *label41 (h:*label41)
   121 call *label18 *invalid :buildBlockFromCfg*retval (m:*label41) (h:*label41)
 
   132 set .graphiteSurplus 100
   133 set :buildBlockFromCfg.1:cfg "®-.}U#U###"
   134 set :buildBlockFromCfg.1:config processor2
-    * set :unpackCfg:cfg :buildBlockFromCfg.1:cfg
+  135 set :unpackCfg:cfg "®-.}U#U###"
   136 setaddr :unpackCfg*retaddr *label45 (h:*label45)
   137 call *label13 *invalid :unpackCfg*retval (m:*label45) (h:*label45)
   138 label *label45
 
   146 set :buildBlockFromCfg.1:ti :unpackCfg:ti
   147 set :buildBlockFromCfg.1:mg :unpackCfg:mg
   148 set :buildBlockFromCfg.1:rotation :unpackCfg:rotation
-    * op add *tmp128 .coreX :buildBlockFromCfg.1:x
-    * op add *tmp129 .coreY :buildBlockFromCfg.1:y
-    * set :buildBlock:block :buildBlockFromCfg.1:type
+  149 op add *tmp128 .coreX :unpackCfg:x
+  150 op add *tmp129 .coreY :unpackCfg:y
+  151 set :buildBlock:block :unpackCfg:type
   152 set :buildBlock:x *tmp128
   153 set :buildBlock:y *tmp129
-    * set :buildBlock:copper :buildBlockFromCfg.1:cu
-    * set :buildBlock:lead :buildBlockFromCfg.1:pb
-    * set :buildBlock:graphite :buildBlockFromCfg.1:gr
-    * set :buildBlock:silicon :buildBlockFromCfg.1:si
-    * set :buildBlock:titanium :buildBlockFromCfg.1:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:mg
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+  154 set :buildBlock:copper :unpackCfg:cu
+  155 set :buildBlock:lead :unpackCfg:pb
+  156 set :buildBlock:graphite :unpackCfg:gr
+  157 set :buildBlock:silicon :unpackCfg:si
+  158 set :buildBlock:titanium :unpackCfg:ti
+  159 set :buildBlock:metaglass :unpackCfg:mg
+  160 set :buildBlock:rotation :unpackCfg:rotation
+  161 set :buildBlock:config processor2
   162 setaddr :buildBlock*retaddr *label46 (h:*label46)
   163 call *label17 *invalid :buildBlock*retval (m:*label46) (h:*label46)
   164 label *label46
   165 set *tmp127 :buildBlock*retval
   166 jump *label44 always
-    * set *tmp127 null
   167 label *label44
-    * set .controller *tmp127
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  168 set .controller :buildBlock*retval
+  169 write processor1 *tmp127 ".display"
+  170 write .core *tmp127 ".core"
+  171 write bank1 *tmp127 ".bank"
+  172 write .battery *tmp127 ".battery"
+  173 write .generator *tmp127 ".generator"
+  174 write .smelter *tmp127 ".smelter"
+  175 write .press *tmp127 ".press"
+  176 write :monos *tmp127 ".monos"
+  177 write :flares *tmp127 ".flares"
+  178 write :polys *tmp127 ".polys"
   179 set :buildBlockFromCfg:cfg "g)'%)#####"
   180 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   181 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)
 
   184 setaddr :buildBlockFromCfg*retaddr *label48 (h:*label48)
   185 call *label18 *invalid :buildBlockFromCfg*retval (m:*label48) (h:*label48)
   186 label *label48
-    * write :buildBlockFromCfg*retval .controller ".unloader2"
+  187 write :buildBlockFromCfg*retval *tmp127 ".unloader2"
   188 set :buildBlockFromCfg:cfg "'(_i####&"
   189 setaddr :buildBlockFromCfg*retaddr *label49 (h:*label49)
   190 call *label18 *invalid :buildBlockFromCfg*retval (m:*label49) (h:*label49)
   191 label *label49
   192 set :factory :buildBlockFromCfg*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".factory"
-    * write 1 .controller ".flareTarget"
-    * write 3 .controller ".monoTarget"
-    * write 0 .controller ".polyTarget"
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  193 write :buildBlockFromCfg*retval *tmp127 ".factory"
+  194 write :buildBlockFromCfg*retval processor1 ".factory"
+  195 write 1 *tmp127 ".flareTarget"
+  196 write 3 *tmp127 ".monoTarget"
+  197 write 0 *tmp127 ".polyTarget"
+  198 write 85 *tmp127 ".pressTarget"
+  199 write 150 *tmp127 ".smelterTarget"
+  200 write 30 *tmp127 ".kilnTarget"
   201 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  202 set .siliconSurplus 20
   203 setaddr :buildUnits*retaddr *label50 (h:*label50)
   204 call *label21 *invalid :buildUnits*retval (m:*label50) (h:*label50)
   205 label *label50
 
   213 label *label55
   214 label *label56
   215 label *label52
-    * read *tmp73 .controller ".monos"
+  216 read *tmp73 *tmp127 ".monos"
   217 jump *label51 lessThan *tmp73 3
   218 label *label53
   219 set .siliconSurplus 100
 
   230 call *label18 *invalid :buildBlockFromCfg*retval (m:*label59) (h:*label59)
   231 label *label59
   232 set .kiln :buildBlockFromCfg*retval
-    * write .kiln .controller ".kiln"
+  233 write :buildBlockFromCfg*retval *tmp127 ".kiln"
   234 set :buildBlockFromCfg:cfg "z%-AAA##A#"
   235 setaddr :buildBlockFromCfg*retaddr *label60 (h:*label60)
   236 call *label18 *invalid :buildBlockFromCfg*retval (m:*label60) (h:*label60)
 
   247 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   248 call *label18 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   249 label *label63
-    * write :buildBlockFromCfg*retval .controller ".generator2"
+  250 write :buildBlockFromCfg*retval *tmp127 ".generator2"
   251 set :buildBlockFromCfg:cfg "$(.#U<##"
   252 setaddr :buildBlockFromCfg*retaddr *label64 (h:*label64)
   253 call *label18 *invalid :buildBlockFromCfg*retval (m:*label64) (h:*label64)
   254 label *label64
-    * write :buildBlockFromCfg*retval .controller ".multipress"
+  255 write :buildBlockFromCfg*retval *tmp127 ".multipress"
   256 set :buildBlockFromCfg:cfg "z%/AAA##A#"
   257 setaddr :buildBlockFromCfg*retaddr *label65 (h:*label65)
   258 call *label18 *invalid :buildBlockFromCfg*retval (m:*label65) (h:*label65)
 
   262 setaddr :buildBlockFromCfg*retaddr *label66 (h:*label66)
   263 call *label18 *invalid :buildBlockFromCfg*retval (m:*label66) (h:*label66)
   264 label *label66
-    * write :buildBlockFromCfg*retval .controller ".payloadRouter"
+  265 write :buildBlockFromCfg*retval *tmp127 ".payloadRouter"
   266 set :buildBlockFromCfg:cfg "*(###A<##"
   267 setaddr :buildBlockFromCfg*retaddr *label67 (h:*label67)
   268 call *label18 *invalid :buildBlockFromCfg*retval (m:*label67) (h:*label67)
 
   276 call *label18 *invalid :buildBlockFromCfg*retval (m:*label69) (h:*label69)
   277 label *label69
   278 set :reconstructor :buildBlockFromCfg*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  279 write :buildBlockFromCfg*retval *tmp127 ".reconstructor"
+  280 write :buildBlockFromCfg*retval processor1 ".reconstructor"
   281 setaddr :buildUnits*retaddr *label70 (h:*label70)
   282 call *label21 *invalid :buildUnits*retval (m:*label70) (h:*label70)
   283 label *label70
   284 set .siliconSurplus 1000
   285 set .metaglassSurplus 200
-    * write 3 .controller ".polyTarget"
+  286 write 3 *tmp127 ".polyTarget"
   287 label *label71
-    * read *tmp74 .controller ".polys"
+  288 read *tmp74 *tmp127 ".polys"
   289 jump *label73 greaterThanEq *tmp74 3
   290 setaddr :supplyBase*retaddr *label74 (h:*label74)
   291 call *label14 *invalid :supplyBase*retval (m:*label74) (h:*label74)
 
   293 label *label72
   294 jump *label71 always
   295 label *label73
-    * write 8 .controller ".flareTarget"
-    * write 6 .controller ".polyTarget"
+  296 write 8 *tmp127 ".flareTarget"
+  297 write 6 *tmp127 ".polyTarget"
   298 label *label75
-    * read *tmp72 .controller ".flares"
+  299 read *tmp72 *tmp127 ".flares"
   300 jump *label77 greaterThanEq *tmp72 2
   301 setaddr :supplyBase*retaddr *label78 (h:*label78)
   302 call *label14 *invalid :supplyBase*retval (m:*label78) (h:*label78)
 
   305 jump *label75 always
   306 label *label77
   307 ubind @flare
-    * write @ore-titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  308 write @ore-titanium processor1 ".nextBlock"
+  309 write .coreX processor4 ":findDrillLocation:x"
+  310 write .coreY processor4 ":findDrillLocation:y"
+  311 write @unit processor4 ":findDrillLocation:unit"
+  312 write @titanium processor4 ":findDrillLocation:item"
+  313 write @ore-titanium processor4 ":findDrillLocation:ore"
+  314 write 4 processor4 ":findDrillLocation:size"
+  315 write 1000000000 processor4 ":findDrillLocation:limit"
+  316 write false processor4 ":findDrillLocation*finished"
+  317 write 1 processor4 "@counter"
   318 label *label79
   319 wait 1e-15
-    * read *tmp162 .oreLocator ":findDrillLocation*finished"
+  320 read *tmp162 processor4 ":findDrillLocation*finished"
   321 jump *label79 equal *tmp162 false
   322 ubind .builder
   323 label *label80
 
   325 call *label14 *invalid :supplyBase*retval (m:*label83) (h:*label83)
   326 label *label83
   327 label *label81
-    * read *tmp164 .oreLocator ":findDrillLocation*finished"
+  328 read *tmp164 processor4 ":findDrillLocation*finished"
   329 jump *label80 equal *tmp164 false
   330 label *label82
-    * write null .display ".nextBlock"
+  331 write null processor1 ".nextBlock"
   332 set :findFreeUnit:unit_type @flare
   333 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+  334 ubind @flare
   335 jump *label85 notEqual @unit null
   336 jump *label84 always
   337 label *label85
 
   340 label *label87
   341 sensor *tmp169 @unit @controlled
   342 jump *label90 notEqual *tmp169 0
-    * ucontrol flag :findFreeUnit:initial_flag
+  343 ucontrol flag 0
   344 jump *label84 always
   345 jump *label91 always
   346 label *label90
 
   350 label *label92
   351 label *label93
   352 label *label91
-    * ubind :findFreeUnit:unit_type
+  353 ubind @flare
   354 label *label88
   355 jump *label87 notEqual :findFreeUnit:first_unit @unit
   356 label *label89
   357 label *label84
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  358 write .coreX processor4 ":layoutThoriumDrill:x"
+  359 write .coreY processor4 ":layoutThoriumDrill:y"
+  360 write @unit processor4 ":layoutThoriumDrill:unit"
+  361 write 7 processor4 ":layoutThoriumDrill:limit"
+  362 write false processor4 ":layoutThoriumDrill*finished"
+  363 write 2 processor4 "@counter"
   364 ubind .builder
   365 label *label94
   366 setaddr :supplyBase*retaddr *label97 (h:*label97)
   367 call *label14 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   368 label *label97
   369 label *label95
-    * read *tmp181 .oreLocator ":layoutThoriumDrill*finished"
+  370 read *tmp181 processor4 ":layoutThoriumDrill*finished"
   371 jump *label94 equal *tmp181 false
   372 label *label96
   373 set :meetTarget.1:cfg "x**F#AA7##"
 
   376 label *label99
   377 label *label100
   378 wait 1e-15
-    * read *tmp183 .oreLocator ":layoutThoriumDrill*finished"
+  379 read *tmp183 processor4 ":layoutThoriumDrill*finished"
   380 jump *label100 equal *tmp183 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  381 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   382 jump *label101 notEqual :buildThoriumDrill:result false
   383 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  384 set .ERROR "Cannot locate spot for thorium drill"
   385 stop
   386 label *label103
   387 label *label101
   388 label *label102
   389 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  390 read :buildBlockAt:x processor4 ".drillX"
+  391 read :buildBlockAt:y processor4 ".drillY"
   392 set :buildBlockAt:rotation null
   393 set :buildBlockAt:config 0
   394 set :buildBlockAt:skipError false
 
   396 call *label16 *invalid :buildBlockAt*retval (m:*label104) (h:*label104)
   397 label *label104
   398 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
-    * read *tmp44 .oreLocator ".water1X"
+  399 read *tmp44 processor4 ".water1X"
   400 jump *label105 greaterThanEq *tmp44 0
   401 jump *label98 always
   402 label *label105
 
   406 call *label19 *invalid :meetTarget.1*retval (m:*label107) (h:*label107)
   407 label *label107
   408 set :buildBlockAt:block @water-extractor
-    * read *tmp44 .oreLocator ".water1X"
+  409 read *tmp44 processor4 ".water1X"
   410 set :buildBlockAt:x *tmp44
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  411 read :buildBlockAt:y processor4 ".water1Y"
   412 set :buildBlockAt:rotation null
   413 set :buildBlockAt:config 0
   414 set :buildBlockAt:skipError false
   415 setaddr :buildBlockAt*retaddr *label108 (h:*label108)
   416 call *label16 *invalid :buildBlockAt*retval (m:*label108) (h:*label108)
   417 label *label108
-    * read *tmp46 .oreLocator ".water2X"
+  418 read *tmp46 processor4 ".water2X"
   419 jump *label109 greaterThanEq *tmp46 0
   420 jump *label98 always
   421 label *label109
 
   425 call *label19 *invalid :meetTarget.1*retval (m:*label111) (h:*label111)
   426 label *label111
   427 set :buildBlockAt:block @water-extractor
-    * read *tmp46 .oreLocator ".water2X"
+  428 read *tmp46 processor4 ".water2X"
   429 set :buildBlockAt:x *tmp46
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+  430 read :buildBlockAt:y processor4 ".water2Y"
   431 set :buildBlockAt:rotation null
   432 set :buildBlockAt:config 0
   433 set :buildBlockAt:skipError false
 
   439 call *label19 *invalid :meetTarget.1*retval (m:*label113) (h:*label113)
   440 label *label113
   441 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+  442 read :buildBlockAt:x processor4 ".generatorX"
+  443 read :buildBlockAt:y processor4 ".generatorY"
   444 set :buildBlockAt:rotation null
   445 set :buildBlockAt:config 0
   446 set :buildBlockAt:skipError false
 
   453 call *label19 *invalid :meetTarget.1*retval (m:*label115) (h:*label115)
   454 label *label115
   455 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+  456 read :buildBlockAt:x processor4 ".nodeX"
+  457 read :buildBlockAt:y processor4 ".nodeY"
   458 set :buildBlockAt:rotation null
   459 set :buildBlockAt:config 0
   460 set :buildBlockAt:skipError false
 
   466 call *label19 *invalid :meetTarget.1*retval (m:*label117) (h:*label117)
   467 label *label117
   468 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+  469 read :buildBlockAt:x processor4 ".panelX"
+  470 read :buildBlockAt:y processor4 ".panelY"
   471 set :buildBlockAt:rotation null
   472 set :buildBlockAt:config 0
   473 set :buildBlockAt:skipError false
 
   479 call *label19 *invalid :meetTarget.1*retval (m:*label119) (h:*label119)
   480 label *label119
   481 set :buildBlockAt:block @battery
-    * read :buildBlockAt:x .oreLocator ".batteryX"
-    * read :buildBlockAt:y .oreLocator ".batteryY"
+  482 read :buildBlockAt:x processor4 ".batteryX"
+  483 read :buildBlockAt:y processor4 ".batteryY"
   484 set :buildBlockAt:rotation null
   485 set :buildBlockAt:config 0
   486 set :buildBlockAt:skipError false
   487 setaddr :buildBlockAt*retaddr *label120 (h:*label120)
   488 call *label16 *invalid :buildBlockAt*retval (m:*label120) (h:*label120)
   489 label *label120
-    * write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
-    * write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+  490 write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDrill"
+  491 write :buildThoriumDrill:thoriumDrill processor3 ":addThoriumDrill:drill"
+  492 write :buildThoriumDrill:thoriumGenerator processor3 ":addThoriumDrill:generator"
+  493 write false processor3 ":addThoriumDrill*finished"
+  494 write 1 processor3 "@counter"
   495 label *label121
   496 wait 1e-15
-    * read *tmp200 .flareController ":addThoriumDrill*finished"
+  497 read *tmp200 processor3 ":addThoriumDrill*finished"
   498 jump *label121 equal *tmp200 false
   499 label *label98
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  500 write 0 processor1 ".totalTargets"
+  501 write null processor1 ".nextBlock"
   502 label *label122
   503 setaddr :supplyBase*retaddr *label125 (h:*label125)
   504 call *label14 *invalid :supplyBase*retval (m:*label125) (h:*label125)
   505 label *label125
   506 label *label123
-    * read *tmp72 .controller ".flares"
-    * read *tmp73 .controller ".monos"
+  507 read *tmp72 *tmp127 ".flares"
+  508 read *tmp73 *tmp127 ".monos"
   509 op add *tmp201 *tmp72 *tmp73
   510 jump *label122 lessThan *tmp201 16
   511 label *label124
 
   517 jump *label126 always
   518 label *label128
   519 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+  520 set .ERROR "Done"
   521 stop
   522 label *label130
   523 end
   524 label *label6
   525 set :status3:text "Depositing..."
-    * write :status3:text .display ".status3"
+  526 write "Depositing..." .display ".status3"
   527 label *label133
   528 sensor *tmp203 @unit @firstItem
   529 jump *label134 notEqual *tmp203 :depositItems:item
   530 set :moveToBlock:block :depositItems:block
   531 set :moveToBlock:radius 6
-    * sensor *tmp206 :moveToBlock:block @x
-    * sensor *tmp207 :moveToBlock:block @y
+  532 sensor *tmp206 :depositItems:block @x
+  533 sensor *tmp207 :depositItems:block @y
   534 set :moveTo:x *tmp206
   535 set :moveTo:y *tmp207
-    * set :moveTo:radius :moveToBlock:radius
+  536 set :moveTo:radius 6
   537 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  538 write "Moving..." .display ".status3"
   539 label *label138
   540 label *label139
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp208
+  541 ucontrol within *tmp206 *tmp207 :moveToBlock:radius *tmp208
   542 jump *label141 notEqual *tmp208 false
-    * op sub *tmp210 :moveTo:radius 0.5
-    * ucontrol approach :moveTo:x :moveTo:y *tmp210
+  543 op sub *tmp210 :moveToBlock:radius 0.5
+  544 ucontrol approach *tmp206 *tmp207 *tmp210
   545 label *label140
   546 jump *label139 always
   547 label *label141
 
   568 label *label135
   569 set :transportStatus:target 0
   570 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  571 write 0 .display ".transportTarget"
+  572 write null .display ".transportItem"
   573 label *label148
   574 label *label132
   575 return :depositItems*retaddr
 
   578 op min :mineOre:amount :mineOre:amount 30
   579 set :transportStatus.1:target :mineOre:amount
   580 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+  581 write :mineOre:amount .display ".transportTarget"
+  582 write :mineOre:ore .display ".transportItem"
   583 label *label150
   584 set :locateOre:ore :mineOre:ore
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp219 0
+  585 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp219 0
   586 jump *label152 notEqual *tmp219 false
   587 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+  588 set .ERROR "Cannot locate ore"
   589 stop
   590 label *label154
   591 label *label152
 
   593 label *label151
   594 set :mineOre:x :locateOre:x
   595 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  596 set :moveToEmpty:x :locateOre:x
+  597 set :moveToEmpty:y :locateOre:y
   598 set :status3.2:text "Moving..."
-    * write :status3.2:text .display ".status3"
+  599 write "Moving..." .display ".status3"
   600 label *label156
   601 label *label157
   602 sensor *tmp223 @unit @firstItem
 
   604 ucontrol itemDrop @air 1000
   605 label *label160
   606 label *label161
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  607 ucontrol approach :mineOre:x :mineOre:y 5.5
   608 label *label158
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp226
+  609 ucontrol within :mineOre:x :mineOre:y 6 *tmp226
   610 jump *label157 equal *tmp226 false
   611 label *label159
   612 label *label155
 
   623 label *label162
   624 label *label163
   625 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+  626 write "Mining..." .display ".status3"
   627 label *label168
   628 op add :mineOre:stop @second 10
   629 label *label169
 
   635 jump *label171 always
   636 label *label172
   637 label *label173
-    * ucontrol mine :mineOre:x :mineOre:y
+  638 ucontrol mine :locateOre:x :locateOre:y
   639 jump *label174 lessThanEq @second :mineOre:stop
   640 jump *label171 always
   641 label *label174
 
   657 set :status2:text "Mining "
   658 set :status2:item :mineOre.1:ore
   659 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  660 write "Mining " .display ".status2"
+  661 write :mineOre.1:ore .display ".item2"
+  662 write "core" .display ".block2"
   663 label *label178
   664 set :mineOre:ore :mineOre.1:ore
   665 set :mineOre:amount 30
 
   672 end
   673 label *label13
   674 set :unpackCfg:index 0
-    * set *tmp244 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  675 set *tmp244 0
+  676 op add :unpackCfg:index 0 1
   677 read *tmp245 :unpackCfg:cfg *tmp244
   678 op sub *tmp246 *tmp245 35
   679 lookup block :unpackCfg:type *tmp246
-    * set *tmp248 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  680 set *tmp248 1
+  681 op add :unpackCfg:index 1 1
   682 read *tmp249 :unpackCfg:cfg *tmp248
   683 op sub *tmp250 *tmp249 35
-    * op sub :unpackCfg:x *tmp250 7
-    * set *tmp252 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  684 op sub :unpackCfg:x *tmp249 42
+  685 set *tmp252 2
+  686 op add :unpackCfg:index 2 1
   687 read *tmp253 :unpackCfg:cfg *tmp252
   688 op sub *tmp254 *tmp253 35
-    * op sub :unpackCfg:y *tmp254 7
-    * set *tmp256 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  689 op sub :unpackCfg:y *tmp253 42
+  690 set *tmp256 3
+  691 op add :unpackCfg:index 3 1
   692 read *tmp257 :unpackCfg:cfg *tmp256
   693 op sub :unpackCfg:cu *tmp257 35
-    * set *tmp259 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  694 set *tmp259 4
+  695 op add :unpackCfg:index 4 1
   696 read *tmp260 :unpackCfg:cfg *tmp259
   697 op sub :unpackCfg:pb *tmp260 35
-    * set *tmp262 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  698 set *tmp262 5
+  699 op add :unpackCfg:index 5 1
   700 read *tmp263 :unpackCfg:cfg *tmp262
   701 op sub :unpackCfg:gr *tmp263 35
-    * set *tmp265 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  702 set *tmp265 6
+  703 op add :unpackCfg:index 6 1
   704 read *tmp266 :unpackCfg:cfg *tmp265
   705 op sub :unpackCfg:si *tmp266 35
-    * set *tmp268 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  706 set *tmp268 7
+  707 op add :unpackCfg:index 7 1
   708 read *tmp269 :unpackCfg:cfg *tmp268
   709 op sub :unpackCfg:ti *tmp269 35
-    * set *tmp271 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  710 set *tmp271 8
+  711 op add :unpackCfg:index 8 1
   712 read *tmp272 :unpackCfg:cfg *tmp271
   713 op sub :unpackCfg:mg *tmp272 35
-    * set *tmp274 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  714 set *tmp274 9
+  715 op add :unpackCfg:index 9 1
   716 read *tmp275 :unpackCfg:cfg *tmp274
   717 op sub :unpackCfg:rotation *tmp275 35
   718 label *label180
 
   734 read *tmp73 .controller ".monos"
   735 jump *label186 lessThanEq *tmp73 3
   736 set :status1:text "Phase 1: supplying base"
-    * write :status1:text .display ".status1"
+  737 write "Phase 1: supplying base" .display ".status1"
   738 label *label189
   739 set :mineOre.1:ore @coal
   740 setaddr :mineOre.1*retaddr *label190 (h:*label190)
 
   750 sensor *tmp290 .press @coal
   751 jump *label196 greaterThanEq *tmp290 5
   752 set :status1.1:text "Goal 1: graphite requirement"
-    * write :status1.1:text .display ".status1"
+  753 write "Goal 1: graphite requirement" .display ".status1"
   754 label *label198
   755 set :supplyBlock:block .press
   756 set :supplyBlock:ore @coal
   757 set :status2.1:text "Supplying "
-    * set :status2.1:item :supplyBlock:ore
-    * set :status2.1:block :supplyBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+  758 set :status2.1:item @coal
+  759 set :status2.1:block .press
+  760 write "Supplying " .display ".status2"
+  761 write :supplyBlock:ore .display ".item2"
+  762 write :supplyBlock:block .display ".block2"
   763 label *label200
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp294 :supplyBlock:block :supplyBlock:ore
+  764 sensor :supplyBlock:blockCapacity .press @itemCapacity
+  765 sensor *tmp294 .press @coal
   766 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp294
   767 jump *label201 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  768 set :mineOre:ore @coal
   769 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  770 set :mineOre:block .press
   771 setaddr :mineOre*retaddr *label203 (h:*label203)
   772 call *label7 *invalid :mineOre*retval (m:*label203) (h:*label203)
   773 label *label203
 
   784 sensor *tmp301 .smelter @coal
   785 jump *label206 greaterThanEq *tmp301 5
   786 set :status1.2:text "Goal 2: coal for silicon requirement"
-    * write :status1.2:text .display ".status1"
+  787 write "Goal 2: coal for silicon requirement" .display ".status1"
   788 label *label208
   789 set :supplyBlock.1:block .smelter
   790 set :supplyBlock.1:ore @coal
   791 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock.1:ore
-    * set :status2.2:block :supplyBlock.1:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+  792 set :status2.2:item @coal
+  793 set :status2.2:block .smelter
+  794 write "Supplying " .display ".status2"
+  795 write :supplyBlock.1:ore .display ".item2"
+  796 write :supplyBlock.1:block .display ".block2"
   797 label *label210
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp305 :supplyBlock.1:block :supplyBlock.1:ore
+  798 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+  799 sensor *tmp305 .smelter @coal
   800 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp305
   801 jump *label211 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+  802 set :mineOre:ore @coal
   803 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+  804 set :mineOre:block .smelter
   805 setaddr :mineOre*retaddr *label213 (h:*label213)
   806 call *label7 *invalid :mineOre*retval (m:*label213) (h:*label213)
   807 label *label213
 
   814 sensor *tmp309 .smelter @sand
   815 jump *label214 greaterThanEq *tmp309 5
   816 set :status1.3:text "Goal 3: sand for silicon requirement"
-    * write :status1.3:text .display ".status1"
+  817 write "Goal 3: sand for silicon requirement" .display ".status1"
   818 label *label216
   819 set :supplyBlock.2:block .smelter
   820 set :supplyBlock.2:ore @sand
   821 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.2:ore
-    * set :status2.3:block :supplyBlock.2:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+  822 set :status2.3:item @sand
+  823 set :status2.3:block .smelter
+  824 write "Supplying " .display ".status2"
+  825 write :supplyBlock.2:ore .display ".item2"
+  826 write :supplyBlock.2:block .display ".block2"
   827 label *label218
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp313 :supplyBlock.2:block :supplyBlock.2:ore
+  828 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+  829 sensor *tmp313 .smelter @sand
   830 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp313
   831 jump *label219 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+  832 set :mineOre:ore @sand
   833 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+  834 set :mineOre:block .smelter
   835 setaddr :mineOre*retaddr *label221 (h:*label221)
   836 call *label7 *invalid :mineOre*retval (m:*label221) (h:*label221)
   837 label *label221
 
   849 sensor *tmp320 .generator @coal
   850 jump *label224 greaterThanEq *tmp320 2
   851 set :status1.4:text "Goal 4: supplying generator"
-    * write :status1.4:text .display ".status1"
+  852 write "Goal 4: supplying generator" .display ".status1"
   853 label *label226
   854 set :supplyBlock.3:block .generator
   855 set :supplyBlock.3:ore @coal
   856 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.3:ore
-    * set :status2.4:block :supplyBlock.3:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+  857 set :status2.4:item @coal
+  858 set :status2.4:block .generator
+  859 write "Supplying " .display ".status2"
+  860 write :supplyBlock.3:ore .display ".item2"
+  861 write :supplyBlock.3:block .display ".block2"
   862 label *label228
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp324 :supplyBlock.3:block :supplyBlock.3:ore
+  863 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+  864 sensor *tmp324 .generator @coal
   865 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp324
   866 jump *label229 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+  867 set :mineOre:ore @coal
   868 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+  869 set :mineOre:block .generator
   870 setaddr :mineOre*retaddr *label231 (h:*label231)
   871 call *label7 *invalid :mineOre*retval (m:*label231) (h:*label231)
   872 label *label231
 
   891 label *label233
   892 set :supplyBase0:titaniumTrigger *tmp330
   893 sensor *tmp334 .titaniumDrill @titanium
-    * jump *label234 greaterThanEq *tmp334 :supplyBase0:titaniumTrigger
+  894 jump *label234 greaterThanEq *tmp334 *tmp330
   895 jump *label236 notEqual :supplyBase0:supplied false
   896 sensor *tmp339 .battery @totalPower
   897 op mul *tmp340 .unloader1 .powerTarget
   898 jump *label238 greaterThanEq *tmp339 *tmp340
   899 set :status1.5:text "Goal 5: supplying generator"
-    * write :status1.5:text .display ".status1"
+  900 write "Goal 5: supplying generator" .display ".status1"
   901 label *label240
   902 set :mineOre.1:ore @coal
   903 setaddr :mineOre.1*retaddr *label241 (h:*label241)
 
   908 sensor *tmp343 .core @silicon
   909 jump *label242 greaterThanEq *tmp343 .targetSilicon
   910 set :status1.6:text "Goal 6: silicon requirement"
-    * write :status1.6:text .display ".status1"
+  911 write "Goal 6: silicon requirement" .display ".status1"
   912 label *label244
   913 sensor :supplyBase0:coal .core @coal
   914 sensor :supplyBase0:sand .core @sand
 
   919 set *tmp349 @sand
   920 label *label246
   921 set :supplyBase0:ore *tmp349
-    * set :mineOre.1:ore :supplyBase0:ore
+  922 set :mineOre.1:ore *tmp349
   923 setaddr :mineOre.1*retaddr *label247 (h:*label247)
   924 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
   925 label *label247
 
   928 sensor *tmp350 .core @copper
   929 jump *label248 greaterThanEq *tmp350 .targetCopper
   930 set :status1.7:text "Goal 7: copper requirement"
-    * write :status1.7:text .display ".status1"
+  931 write "Goal 7: copper requirement" .display ".status1"
   932 label *label250
   933 set :mineOre.1:ore @copper
   934 setaddr :mineOre.1*retaddr *label251 (h:*label251)
 
   939 sensor *tmp353 .core @lead
   940 jump *label252 greaterThanEq *tmp353 .targetLead
   941 set :status1.8:text "Goal 8: lead requirement"
-    * write :status1.8:text .display ".status1"
+  942 write "Goal 8: lead requirement" .display ".status1"
   943 label *label254
   944 set :mineOre.1:ore @lead
   945 setaddr :mineOre.1*retaddr *label255 (h:*label255)
 
   950 sensor *tmp356 .core @metaglass
   951 jump *label256 greaterThanEq *tmp356 .targetMetaglass
   952 set :status1.9:text "Goal 9: metaglass requirement"
-    * write :status1.9:text .display ".status1"
+  953 write "Goal 9: metaglass requirement" .display ".status1"
   954 label *label258
   955 set :mineOre.1:ore @sand
   956 setaddr :mineOre.1*retaddr *label259 (h:*label259)
 
   959 jump *label257 always
   960 label *label256
   961 set :status1.10:text "Goal 10: supplying base"
-    * write :status1.10:text .display ".status1"
+  962 write "Goal 10: supplying base" .display ".status1"
   963 label *label260
   964 sensor :supplyBase0:coal.1 .core @coal
   965 sensor :supplyBase0:sand.1 .core @sand
 
   970 set *tmp362 @sand
   971 label *label262
   972 set :supplyBase0:ore.1 *tmp362
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  973 set :mineOre.1:ore *tmp362
   974 setaddr :mineOre.1*retaddr *label263 (h:*label263)
   975 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
   976 label *label263
 
   984 jump *label235 always
   985 label *label234
   986 set :status1.11:text "Goal 11: Fetching titanium"
-    * write :status1.11:text .display ".status1"
+  987 write "Goal 11: Fetching titanium" .display ".status1"
   988 label *label264
   989 set :fetchBlock:block .titaniumDrill
   990 set :fetchBlock:item @titanium
-    * sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
+  991 sensor :transportStatus.2:target .titaniumDrill @itemCapacity
+  992 set :transportStatus.2:item @titanium
   993 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+  994 write :fetchBlock:item .display ".transportItem"
   995 label *label266
   996 set :status2.5:text "Fetching "
-    * set :status2.5:item :fetchBlock:item
-    * set :status2.5:block :fetchBlock:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+  997 set :status2.5:item @titanium
+  998 set :status2.5:block .titaniumDrill
+  999 write "Fetching " .display ".status2"
+ 1000 write :fetchBlock:item .display ".item2"
+ 1001 write :fetchBlock:block .display ".block2"
  1002 label *label267
-    * sensor *tmp364 :fetchBlock:block @x
-    * sensor *tmp365 :fetchBlock:block @y
+ 1003 sensor *tmp364 .titaniumDrill @x
+ 1004 sensor *tmp365 .titaniumDrill @y
  1005 set :moveToEmpty.1:x *tmp364
  1006 set :moveToEmpty.1:y *tmp365
  1007 set :status3.4:text "Moving..."
-    * write :status3.4:text .display ".status3"
+ 1008 write "Moving..." .display ".status3"
  1009 label *label269
  1010 label *label270
  1011 sensor *tmp366 @unit @firstItem
 
  1013 ucontrol itemDrop @air 1000
  1014 label *label273
  1015 label *label274
-    * ucontrol approach :moveToEmpty.1:x :moveToEmpty.1:y 5.5
+ 1016 ucontrol approach *tmp364 *tmp365 5.5
  1017 label *label271
-    * ucontrol within :moveToEmpty.1:x :moveToEmpty.1:y 6 *tmp369
+ 1018 ucontrol within *tmp364 *tmp365 6 *tmp369
  1019 jump *label270 equal *tmp369 false
  1020 label *label272
  1021 label *label268
 
  1028 label *label278
  1029 label *label275
  1030 label *label279
-    * ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
+ 1031 ucontrol itemTake .titaniumDrill @titanium 30
  1032 sensor :fetchBlock:unitItem @unit @firstItem
  1033 op notEqual *tmp374 :fetchBlock:unitItem null
-    * op notEqual *tmp375 :fetchBlock:unitItem :fetchBlock:item
+ 1034 op notEqual *tmp375 :fetchBlock:unitItem @titanium
  1035 op land *tmp376 *tmp374 *tmp375
  1036 jump *label282 equal *tmp376 false
  1037 ucontrol itemDrop @air 1000
  1038 label *label282
  1039 label *label283
  1040 label *label280
-    * sensor *tmp378 @unit :fetchBlock:item
+ 1041 sensor *tmp378 @unit @titanium
  1042 op lessThan *tmp379 *tmp378 30
-    * sensor *tmp380 :fetchBlock:block :fetchBlock:item
+ 1043 sensor *tmp380 .titaniumDrill @titanium
  1044 op land *tmp381 *tmp379 *tmp380
  1045 jump *label279 notEqual *tmp381 false
  1046 label *label281
  1047 set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
+ 1048 set :depositItems:item @titanium
  1049 setaddr :depositItems*retaddr *label284 (h:*label284)
  1050 call *label6 *invalid :depositItems*retval (m:*label284) (h:*label284)
  1051 label *label284
 
  1109 op add *tmp388 :meetTarget:metaglass .metaglassSurplus
  1110 write *tmp388 .controller ".kilnTarget"
  1111 op add *tmp389 :meetTarget:lead .leadSurplus
-    * write *tmp389 .controller ".leadReserve"
+ 1112 write *tmp384 .controller ".leadReserve"
  1113 op sign *tmp390 :meetTarget:silicon
  1114 op mul *tmp391 *tmp390 20
  1115 op add *tmp392 :meetTarget:silicon *tmp391
 
  1153 label *label310
  1154 set *tmp393 true
  1155 jump *label298 always
-    * set *tmp393 null
  1156 label *label298
  1157 jump *label297 notEqual *tmp393 false
  1158 setaddr :supplyBase*retaddr *label311 (h:*label311)
 
  1167 label *label16
  1168 set :moveTo.1:x :buildBlockAt:x
  1169 set :moveTo.1:y :buildBlockAt:y
-    * set *tmp413 :moveTo.1:x
-    * set *tmp414 :moveTo.1:y
-    * set :moveTo.2:x *tmp413
-    * set :moveTo.2:y *tmp414
+ 1170 set *tmp413 :buildBlockAt:x
+ 1171 set *tmp414 :buildBlockAt:y
+ 1172 set :moveTo.2:x :moveTo.1:x
+ 1173 set :moveTo.2:y :moveTo.1:y
  1174 set :moveTo.2:radius 6
  1175 set :status3.5:text "Moving..."
-    * write :status3.5:text .display ".status3"
+ 1176 write "Moving..." .display ".status3"
  1177 label *label315
  1178 label *label316
-    * ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp415
+ 1179 ucontrol within *tmp413 *tmp414 6 *tmp415
  1180 jump *label318 notEqual *tmp415 false
-    * op sub *tmp417 :moveTo.2:radius 0.5
-    * ucontrol approach :moveTo.2:x :moveTo.2:y *tmp417
+ 1181 op sub *tmp417 6 0.5
+ 1182 ucontrol approach *tmp413 *tmp414 5.5
  1183 label *label317
  1184 jump *label316 always
  1185 label *label318
  1186 label *label314
  1187 label *label313
  1188 set :status3.6:text "Building..."
-    * write :status3.6:text .display ".status3"
+ 1189 write "Building..." .display ".status3"
  1190 label *label319
  1191 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1192 jump *label320 equal :buildBlockAt:building null
 
  1201 label *label324
  1202 label *label325
  1203 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1204 set .ERROR "Cannot build at ("
  1205 stop
  1206 label *label326
  1207 label *label320
 
  1219 jump *label327 notEqual :buildBlockAt:type :buildBlockAt:block
  1220 label *label329
  1221 set :logBlock:block :buildBlockAt:block
-    * sensor :log:encodedId :logBlock:block @id
+ 1222 sensor :log:encodedId :buildBlockAt:block @id
  1223 read *tmp90 bank1 511
  1224 op sub *tmp431 *tmp90 1
  1225 write *tmp431 bank1 511
 
  1227 op idiv *tmp435 @second 0.001
  1228 op mul *tmp436 *tmp435 1000
  1229 op add *tmp437 :log:encodedId *tmp436
-    * write *tmp437 bank1 *tmp432
+ 1230 write *tmp437 bank1 *tmp431
  1231 label *label333
  1232 label *label332
  1233 set :buildBlockAt*retval :buildBlockAt:building
  1234 jump *label312 always
-    * set :buildBlockAt*retval null
  1235 label *label312
  1236 return :buildBlockAt*retaddr
  1237 end
 
  1257 label *label336
  1258 set :buildBlock*retval :buildBlockAt*retval
  1259 jump *label334 always
-    * set :buildBlock*retval null
  1260 label *label334
  1261 return :buildBlock*retaddr
  1262 end
 
  1275 set :buildBlockFromCfg:ti :unpackCfg:ti
  1276 set :buildBlockFromCfg:mg :unpackCfg:mg
  1277 set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * op add *tmp438 .coreX :buildBlockFromCfg:x
-    * op add *tmp439 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1278 op add *tmp438 .coreX :unpackCfg:x
+ 1279 op add *tmp439 .coreY :unpackCfg:y
+ 1280 set :buildBlock:block :unpackCfg:type
  1281 set :buildBlock:x *tmp438
  1282 set :buildBlock:y *tmp439
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1283 set :buildBlock:copper :unpackCfg:cu
+ 1284 set :buildBlock:lead :unpackCfg:pb
+ 1285 set :buildBlock:graphite :unpackCfg:gr
+ 1286 set :buildBlock:silicon :unpackCfg:si
+ 1287 set :buildBlock:titanium :unpackCfg:ti
+ 1288 set :buildBlock:metaglass :unpackCfg:mg
+ 1289 set :buildBlock:rotation :unpackCfg:rotation
  1290 set :buildBlock:config null
  1291 setaddr :buildBlock*retaddr *label339 (h:*label339)
  1292 call *label17 *invalid :buildBlock*retval (m:*label339) (h:*label339)
  1293 label *label339
  1294 set :buildBlockFromCfg*retval :buildBlock*retval
  1295 jump *label337 always
-    * set :buildBlockFromCfg*retval null
  1296 label *label337
  1297 return :buildBlockFromCfg*retaddr
  1298 end
 
  1308 set :meetTarget.1:si :unpackCfg:si
  1309 set :meetTarget.1:ti :unpackCfg:ti
  1310 set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
+ 1311 set :meetTarget:block :unpackCfg:type
+ 1312 set :meetTarget:copper :unpackCfg:cu
+ 1313 set :meetTarget:lead :unpackCfg:pb
+ 1314 set :meetTarget:graphite :unpackCfg:gr
+ 1315 set :meetTarget:silicon :unpackCfg:si
+ 1316 set :meetTarget:titanium :unpackCfg:ti
+ 1317 set :meetTarget:metaglass :unpackCfg:mg
  1318 setaddr :meetTarget*retaddr *label342 (h:*label342)
  1319 call *label15 *invalid :meetTarget*retval (m:*label342) (h:*label342)
  1320 label *label342

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-113 instructions):
 
    19 label *label24
    20 set .display processor1
    21 set .flareController processor3
-    * set .oreLocator processor4
-    * set .polyController processor5
    22 write .core processor5 ":startPolyController:aCore"
    23 write @unit processor5 ":startPolyController:aBuilder"
    24 write false processor5 ":startPolyController*finished"
 
    70 setaddr :buildBlockFromCfg*retaddr *label33 (h:*label33)
    71 call *label18 *invalid :buildBlockFromCfg*retval (m:*label33) (h:*label33)
    72 label *label33
-    * set :buildTitaniumDrill:cfg "w**5#-####"
    73 set :meetTarget.1:cfg "w**5#-####"
    74 setaddr :meetTarget.1*retaddr *label35 (h:*label35)
    75 call *label19 *invalid :meetTarget.1*retval (m:*label35) (h:*label35)
 
    92 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    93 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
    94 jump *label37 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    95 set .ERROR "Cannot locate spot for titanium drill"
    96 stop
    97 label *label39
 
   111 jump *label34 always
   112 label *label34
   113 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp109 processor1 ".titaniumDrill"
+  114 write :buildBlockAt*retval processor1 ".titaniumDrill"
   115 set :buildBlockFromCfg:cfg "*,###A<##"
   116 setaddr :buildBlockFromCfg*retaddr *label41 (h:*label41)
   117 call *label18 *invalid :buildBlockFromCfg*retval (m:*label41) (h:*label41)
 
   126 call *label18 *invalid :buildBlockFromCfg*retval (m:*label43) (h:*label43)
   127 label *label43
   128 set .graphiteSurplus 100
-    * set :buildBlockFromCfg.1:cfg "®-.}U#U###"
-    * set :buildBlockFromCfg.1:config processor2
   129 set :unpackCfg:cfg "®-.}U#U###"
   130 setaddr :unpackCfg*retaddr *label45 (h:*label45)
   131 call *label13 *invalid :unpackCfg*retval (m:*label45) (h:*label45)
   132 label *label45
-    * set :buildBlockFromCfg.1:type :unpackCfg:type
-    * set :buildBlockFromCfg.1:x :unpackCfg:x
-    * set :buildBlockFromCfg.1:y :unpackCfg:y
-    * set :buildBlockFromCfg.1:cu :unpackCfg:cu
-    * set :buildBlockFromCfg.1:pb :unpackCfg:pb
-    * set :buildBlockFromCfg.1:gr :unpackCfg:gr
-    * set :buildBlockFromCfg.1:si :unpackCfg:si
-    * set :buildBlockFromCfg.1:ti :unpackCfg:ti
-    * set :buildBlockFromCfg.1:mg :unpackCfg:mg
-    * set :buildBlockFromCfg.1:rotation :unpackCfg:rotation
   133 op add *tmp128 .coreX :unpackCfg:x
   134 op add *tmp129 .coreY :unpackCfg:y
   135 set :buildBlock:block :unpackCfg:type
 
   150 jump *label44 always
   151 label *label44
   152 set .controller :buildBlock*retval
-    * write processor1 *tmp127 ".display"
-    * write .core *tmp127 ".core"
-    * write bank1 *tmp127 ".bank"
-    * write .battery *tmp127 ".battery"
-    * write .generator *tmp127 ".generator"
-    * write .smelter *tmp127 ".smelter"
-    * write .press *tmp127 ".press"
-    * write :monos *tmp127 ".monos"
-    * write :flares *tmp127 ".flares"
-    * write :polys *tmp127 ".polys"
+  153 write processor1 :buildBlock*retval ".display"
+  154 write .core :buildBlock*retval ".core"
+  155 write bank1 :buildBlock*retval ".bank"
+  156 write .battery :buildBlock*retval ".battery"
+  157 write .generator :buildBlock*retval ".generator"
+  158 write .smelter :buildBlock*retval ".smelter"
+  159 write .press :buildBlock*retval ".press"
+  160 write :monos :buildBlock*retval ".monos"
+  161 write :flares :buildBlock*retval ".flares"
+  162 write :polys :buildBlock*retval ".polys"
   163 set :buildBlockFromCfg:cfg "g)'%)#####"
   164 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   165 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)
 
   173 setaddr :buildBlockFromCfg*retaddr *label49 (h:*label49)
   174 call *label18 *invalid :buildBlockFromCfg*retval (m:*label49) (h:*label49)
   175 label *label49
-    * set :factory :buildBlockFromCfg*retval
   176 write :buildBlockFromCfg*retval *tmp127 ".factory"
   177 write :buildBlockFromCfg*retval processor1 ".factory"
   178 write 1 *tmp127 ".flareTarget"
 
   212 setaddr :buildBlockFromCfg*retaddr *label59 (h:*label59)
   213 call *label18 *invalid :buildBlockFromCfg*retval (m:*label59) (h:*label59)
   214 label *label59
-    * set .kiln :buildBlockFromCfg*retval
   215 write :buildBlockFromCfg*retval *tmp127 ".kiln"
   216 set :buildBlockFromCfg:cfg "z%-AAA##A#"
   217 setaddr :buildBlockFromCfg*retaddr *label60 (h:*label60)
 
   257 setaddr :buildBlockFromCfg*retaddr *label69 (h:*label69)
   258 call *label18 *invalid :buildBlockFromCfg*retval (m:*label69) (h:*label69)
   259 label *label69
-    * set :reconstructor :buildBlockFromCfg*retval
   260 write :buildBlockFromCfg*retval *tmp127 ".reconstructor"
   261 write :buildBlockFromCfg*retval processor1 ".reconstructor"
   262 setaddr :buildUnits*retaddr *label70 (h:*label70)
 
   310 jump *label80 equal *tmp164 false
   311 label *label82
   312 write null processor1 ".nextBlock"
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   313 ubind @flare
   314 jump *label85 notEqual @unit null
   315 jump *label84 always
 
   359 jump *label100 equal *tmp183 false
   360 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   361 jump *label101 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   362 set .ERROR "Cannot locate spot for thorium drill"
   363 stop
   364 label *label103
 
   500 label *label130
   501 end
   502 label *label6
-    * set :status3:text "Depositing..."
   503 write "Depositing..." .display ".status3"
   504 label *label133
   505 sensor *tmp203 @unit @firstItem
   506 jump *label134 notEqual *tmp203 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
   507 set :moveToBlock:radius 6
   508 sensor *tmp206 :depositItems:block @x
   509 sensor *tmp207 :depositItems:block @y
-    * set :moveTo:x *tmp206
-    * set :moveTo:y *tmp207
-    * set :moveTo:radius 6
-    * set :status3.1:text "Moving..."
   510 write "Moving..." .display ".status3"
   511 label *label138
   512 label *label139
-    * ucontrol within *tmp206 *tmp207 :moveToBlock:radius *tmp208
+  513 ucontrol within *tmp206 *tmp207 6 *tmp208
   514 jump *label141 notEqual *tmp208 false
-    * op sub *tmp210 :moveToBlock:radius 0.5
-    * ucontrol approach *tmp206 *tmp207 *tmp210
+  515 op sub *tmp210 6 0.5
+  516 ucontrol approach *tmp206 *tmp207 5.5
   517 label *label140
   518 jump *label139 always
   519 label *label141
 
   538 jump *label145 always
   539 label *label147
   540 label *label135
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   541 write 0 .display ".transportTarget"
   542 write null .display ".transportItem"
   543 label *label148
 
   546 end
   547 label *label7
   548 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   549 write :mineOre:amount .display ".transportTarget"
   550 write :mineOre:ore .display ".transportItem"
   551 label *label150
-    * set :locateOre:ore :mineOre:ore
   552 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp219 0
   553 jump *label152 notEqual *tmp219 false
-    * set :error.3:error "Cannot locate ore"
   554 set .ERROR "Cannot locate ore"
   555 stop
   556 label *label154
 
   559 label *label151
   560 set :mineOre:x :locateOre:x
   561 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
-    * set :status3.2:text "Moving..."
   562 write "Moving..." .display ".status3"
   563 label *label156
   564 label *label157
 
   567 ucontrol itemDrop @air 1000
   568 label *label160
   569 label *label161
-    * ucontrol approach :mineOre:x :mineOre:y 5.5
+  570 ucontrol approach :locateOre:x :locateOre:y 5.5
   571 label *label158
-    * ucontrol within :mineOre:x :mineOre:y 6 *tmp226
+  572 ucontrol within :locateOre:x :locateOre:y 6 *tmp226
   573 jump *label157 equal *tmp226 false
   574 label *label159
   575 label *label155
 
   585 label *label164
   586 label *label162
   587 label *label163
-    * set :status3.3:text "Mining..."
   588 write "Mining..." .display ".status3"
   589 label *label168
   590 op add :mineOre:stop @second 10
 
   616 return :mineOre*retaddr
   617 end
   618 label *label8
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   619 write "Mining " .display ".status2"
   620 write :mineOre.1:ore .display ".item2"
   621 write "core" .display ".block2"
 
   630 return :mineOre.1*retaddr
   631 end
   632 label *label13
-    * set :unpackCfg:index 0
   633 set *tmp244 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp245 :unpackCfg:cfg *tmp244
+  634 read *tmp245 :unpackCfg:cfg 0
   635 op sub *tmp246 *tmp245 35
   636 lookup block :unpackCfg:type *tmp246
   637 set *tmp248 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp249 :unpackCfg:cfg *tmp248
-    * op sub *tmp250 *tmp249 35
+  638 read *tmp249 :unpackCfg:cfg 1
   639 op sub :unpackCfg:x *tmp249 42
   640 set *tmp252 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp253 :unpackCfg:cfg *tmp252
-    * op sub *tmp254 *tmp253 35
+  641 read *tmp253 :unpackCfg:cfg 2
   642 op sub :unpackCfg:y *tmp253 42
   643 set *tmp256 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp257 :unpackCfg:cfg *tmp256
+  644 read *tmp257 :unpackCfg:cfg 3
   645 op sub :unpackCfg:cu *tmp257 35
   646 set *tmp259 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp260 :unpackCfg:cfg *tmp259
+  647 read *tmp260 :unpackCfg:cfg 4
   648 op sub :unpackCfg:pb *tmp260 35
   649 set *tmp262 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp263 :unpackCfg:cfg *tmp262
+  650 read *tmp263 :unpackCfg:cfg 5
   651 op sub :unpackCfg:gr *tmp263 35
   652 set *tmp265 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp266 :unpackCfg:cfg *tmp265
+  653 read *tmp266 :unpackCfg:cfg 6
   654 op sub :unpackCfg:si *tmp266 35
   655 set *tmp268 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp269 :unpackCfg:cfg *tmp268
+  656 read *tmp269 :unpackCfg:cfg 7
   657 op sub :unpackCfg:ti *tmp269 35
   658 set *tmp271 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp272 :unpackCfg:cfg *tmp271
+  659 read *tmp272 :unpackCfg:cfg 8
   660 op sub :unpackCfg:mg *tmp272 35
   661 set *tmp274 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp275 :unpackCfg:cfg *tmp274
+  662 read *tmp275 :unpackCfg:cfg 9
   663 op sub :unpackCfg:rotation *tmp275 35
   664 label *label180
   665 return :unpackCfg*retaddr
 
   679 label *label183
   680 read *tmp73 .controller ".monos"
   681 jump *label186 lessThanEq *tmp73 3
-    * set :status1:text "Phase 1: supplying base"
   682 write "Phase 1: supplying base" .display ".status1"
   683 label *label189
   684 set :mineOre.1:ore @coal
 
   694 jump *label194 greaterThanEq *tmp287 .targetGraphite
   695 sensor *tmp290 .press @coal
   696 jump *label196 greaterThanEq *tmp290 5
-    * set :status1.1:text "Goal 1: graphite requirement"
   697 write "Goal 1: graphite requirement" .display ".status1"
   698 label *label198
   699 set :supplyBlock:block .press
   700 set :supplyBlock:ore @coal
-    * set :status2.1:text "Supplying "
-    * set :status2.1:item @coal
-    * set :status2.1:block .press
   701 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  702 write @coal .display ".item2"
+  703 write .press .display ".block2"
   704 label *label200
   705 sensor :supplyBlock:blockCapacity .press @itemCapacity
   706 sensor *tmp294 .press @coal
 
   724 jump *label204 greaterThanEq *tmp298 .targetSilicon
   725 sensor *tmp301 .smelter @coal
   726 jump *label206 greaterThanEq *tmp301 5
-    * set :status1.2:text "Goal 2: coal for silicon requirement"
   727 write "Goal 2: coal for silicon requirement" .display ".status1"
   728 label *label208
   729 set :supplyBlock.1:block .smelter
   730 set :supplyBlock.1:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .smelter
   731 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+  732 write @coal .display ".item2"
+  733 write .smelter .display ".block2"
   734 label *label210
   735 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   736 sensor *tmp305 .smelter @coal
 
   750 label *label206
   751 sensor *tmp309 .smelter @sand
   752 jump *label214 greaterThanEq *tmp309 5
-    * set :status1.3:text "Goal 3: sand for silicon requirement"
   753 write "Goal 3: sand for silicon requirement" .display ".status1"
   754 label *label216
   755 set :supplyBlock.2:block .smelter
   756 set :supplyBlock.2:ore @sand
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @sand
-    * set :status2.3:block .smelter
   757 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+  758 write @sand .display ".item2"
+  759 write .smelter .display ".block2"
   760 label *label218
   761 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   762 sensor *tmp313 .smelter @sand
 
   781 jump *label222 greaterThanEq *tmp317 .powerTarget
   782 sensor *tmp320 .generator @coal
   783 jump *label224 greaterThanEq *tmp320 2
-    * set :status1.4:text "Goal 4: supplying generator"
   784 write "Goal 4: supplying generator" .display ".status1"
   785 label *label226
   786 set :supplyBlock.3:block .generator
   787 set :supplyBlock.3:ore @coal
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @coal
-    * set :status2.4:block .generator
   788 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+  789 write @coal .display ".item2"
+  790 write .generator .display ".block2"
   791 label *label228
   792 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   793 sensor *tmp324 .generator @coal
 
   818 label *label232
   819 set *tmp330 100
   820 label *label233
-    * set :supplyBase0:titaniumTrigger *tmp330
   821 sensor *tmp334 .titaniumDrill @titanium
   822 jump *label234 greaterThanEq *tmp334 *tmp330
   823 jump *label236 notEqual :supplyBase0:supplied false
   824 sensor *tmp339 .battery @totalPower
   825 op mul *tmp340 .unloader1 .powerTarget
   826 jump *label238 greaterThanEq *tmp339 *tmp340
-    * set :status1.5:text "Goal 5: supplying generator"
   827 write "Goal 5: supplying generator" .display ".status1"
   828 label *label240
   829 set :mineOre.1:ore @coal
 
   834 label *label238
   835 sensor *tmp343 .core @silicon
   836 jump *label242 greaterThanEq *tmp343 .targetSilicon
-    * set :status1.6:text "Goal 6: silicon requirement"
   837 write "Goal 6: silicon requirement" .display ".status1"
   838 label *label244
   839 sensor :supplyBase0:coal .core @coal
 
   844 label *label245
   845 set *tmp349 @sand
   846 label *label246
-    * set :supplyBase0:ore *tmp349
   847 set :mineOre.1:ore *tmp349
   848 setaddr :mineOre.1*retaddr *label247 (h:*label247)
   849 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
 
   852 label *label242
   853 sensor *tmp350 .core @copper
   854 jump *label248 greaterThanEq *tmp350 .targetCopper
-    * set :status1.7:text "Goal 7: copper requirement"
   855 write "Goal 7: copper requirement" .display ".status1"
   856 label *label250
   857 set :mineOre.1:ore @copper
 
   862 label *label248
   863 sensor *tmp353 .core @lead
   864 jump *label252 greaterThanEq *tmp353 .targetLead
-    * set :status1.8:text "Goal 8: lead requirement"
   865 write "Goal 8: lead requirement" .display ".status1"
   866 label *label254
   867 set :mineOre.1:ore @lead
 
   872 label *label252
   873 sensor *tmp356 .core @metaglass
   874 jump *label256 greaterThanEq *tmp356 .targetMetaglass
-    * set :status1.9:text "Goal 9: metaglass requirement"
   875 write "Goal 9: metaglass requirement" .display ".status1"
   876 label *label258
   877 set :mineOre.1:ore @sand
 
   880 label *label259
   881 jump *label257 always
   882 label *label256
-    * set :status1.10:text "Goal 10: supplying base"
   883 write "Goal 10: supplying base" .display ".status1"
   884 label *label260
   885 sensor :supplyBase0:coal.1 .core @coal
 
   890 label *label261
   891 set *tmp362 @sand
   892 label *label262
-    * set :supplyBase0:ore.1 *tmp362
   893 set :mineOre.1:ore *tmp362
   894 setaddr :mineOre.1*retaddr *label263 (h:*label263)
   895 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
 
   903 label *label237
   904 jump *label235 always
   905 label *label234
-    * set :status1.11:text "Goal 11: Fetching titanium"
   906 write "Goal 11: Fetching titanium" .display ".status1"
   907 label *label264
   908 set :fetchBlock:block .titaniumDrill
   909 set :fetchBlock:item @titanium
   910 sensor :transportStatus.2:target .titaniumDrill @itemCapacity
-    * set :transportStatus.2:item @titanium
   911 write :transportStatus.2:target .display ".transportTarget"
-    * write :fetchBlock:item .display ".transportItem"
+  912 write @titanium .display ".transportItem"
   913 label *label266
-    * set :status2.5:text "Fetching "
-    * set :status2.5:item @titanium
-    * set :status2.5:block .titaniumDrill
   914 write "Fetching " .display ".status2"
-    * write :fetchBlock:item .display ".item2"
-    * write :fetchBlock:block .display ".block2"
+  915 write @titanium .display ".item2"
+  916 write .titaniumDrill .display ".block2"
   917 label *label267
   918 sensor *tmp364 .titaniumDrill @x
   919 sensor *tmp365 .titaniumDrill @y
-    * set :moveToEmpty.1:x *tmp364
-    * set :moveToEmpty.1:y *tmp365
-    * set :status3.4:text "Moving..."
   920 write "Moving..." .display ".status3"
   921 label *label269
   922 label *label270
 
  1020 write *tmp387 .controller ".smelterTarget"
  1021 op add *tmp388 :meetTarget:metaglass .metaglassSurplus
  1022 write *tmp388 .controller ".kilnTarget"
-    * op add *tmp389 :meetTarget:lead .leadSurplus
  1023 write *tmp384 .controller ".leadReserve"
  1024 op sign *tmp390 :meetTarget:silicon
  1025 op mul *tmp391 *tmp390 20
 
  1080 set :moveTo.1:y :buildBlockAt:y
  1081 set *tmp413 :buildBlockAt:x
  1082 set *tmp414 :buildBlockAt:y
-    * set :moveTo.2:x :moveTo.1:x
-    * set :moveTo.2:y :moveTo.1:y
-    * set :moveTo.2:radius 6
-    * set :status3.5:text "Moving..."
+ 1083 set :moveTo.2:x :buildBlockAt:x
+ 1084 set :moveTo.2:y :buildBlockAt:y
  1085 write "Moving..." .display ".status3"
  1086 label *label315
  1087 label *label316
-    * ucontrol within *tmp413 *tmp414 6 *tmp415
+ 1088 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
  1089 jump *label318 notEqual *tmp415 false
-    * op sub *tmp417 6 0.5
-    * ucontrol approach *tmp413 *tmp414 5.5
+ 1090 ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5
  1091 label *label317
  1092 jump *label316 always
  1093 label *label318
  1094 label *label314
  1095 label *label313
-    * set :status3.6:text "Building..."
  1096 write "Building..." .display ".status3"
  1097 label *label319
  1098 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1107 jump *label312 always
  1108 label *label324
  1109 label *label325
-    * set :error.4:error "Cannot build at ("
  1110 set .ERROR "Cannot build at ("
  1111 stop
  1112 label *label326
 
  1124 label *label328
  1125 jump *label327 notEqual :buildBlockAt:type :buildBlockAt:block
  1126 label *label329
-    * set :logBlock:block :buildBlockAt:block
  1127 sensor :log:encodedId :buildBlockAt:block @id
  1128 read *tmp90 bank1 511
  1129 op sub *tmp431 *tmp90 1
  1130 write *tmp431 bank1 511
-    * set *tmp432 *tmp431
  1131 op idiv *tmp435 @second 0.001
  1132 op mul *tmp436 *tmp435 1000
  1133 op add *tmp437 :log:encodedId *tmp436
 
  1169 setaddr :unpackCfg*retaddr *label338 (h:*label338)
  1170 call *label13 *invalid :unpackCfg*retval (m:*label338) (h:*label338)
  1171 label *label338
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1172 op add *tmp438 .coreX :unpackCfg:x
  1173 op add *tmp439 .coreY :unpackCfg:y
  1174 set :buildBlock:block :unpackCfg:type
 
  1195 setaddr :unpackCfg*retaddr *label341 (h:*label341)
  1196 call *label13 *invalid :unpackCfg*retval (m:*label341) (h:*label341)
  1197 label *label341
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
  1198 set :meetTarget:block :unpackCfg:type
  1199 set :meetTarget:copper :unpackCfg:cu
  1200 set :meetTarget:lead :unpackCfg:pb

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-31 instructions):
 
   107 setaddr :buildBlockAt*retaddr *label40 (h:*label40)
   108 call *label16 *invalid :buildBlockAt*retval (m:*label40) (h:*label40)
   109 label *label40
-    * set *tmp109 :buildBlockAt*retval
   110 jump *label34 always
   111 label *label34
   112 set .titaniumDrill :buildBlockAt*retval
 
   503 label *label133
   504 sensor *tmp203 @unit @firstItem
   505 jump *label134 notEqual *tmp203 :depositItems:item
-    * set :moveToBlock:radius 6
   506 sensor *tmp206 :depositItems:block @x
   507 sensor *tmp207 :depositItems:block @y
   508 write "Moving..." .display ".status3"
 
   510 label *label139
   511 ucontrol within *tmp206 *tmp207 6 *tmp208
   512 jump *label141 notEqual *tmp208 false
-    * op sub *tmp210 6 0.5
   513 ucontrol approach *tmp206 *tmp207 5.5
   514 label *label140
   515 jump *label139 always
 
   554 label *label152
   555 label *label153
   556 label *label151
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   557 write "Moving..." .display ".status3"
   558 label *label156
   559 label *label157
 
   625 return :mineOre.1*retaddr
   626 end
   627 label *label13
-    * set *tmp244 0
   628 read *tmp245 :unpackCfg:cfg 0
   629 op sub *tmp246 *tmp245 35
   630 lookup block :unpackCfg:type *tmp246
-    * set *tmp248 1
   631 read *tmp249 :unpackCfg:cfg 1
   632 op sub :unpackCfg:x *tmp249 42
-    * set *tmp252 2
   633 read *tmp253 :unpackCfg:cfg 2
   634 op sub :unpackCfg:y *tmp253 42
-    * set *tmp256 3
   635 read *tmp257 :unpackCfg:cfg 3
   636 op sub :unpackCfg:cu *tmp257 35
-    * set *tmp259 4
   637 read *tmp260 :unpackCfg:cfg 4
   638 op sub :unpackCfg:pb *tmp260 35
-    * set *tmp262 5
   639 read *tmp263 :unpackCfg:cfg 5
   640 op sub :unpackCfg:gr *tmp263 35
-    * set *tmp265 6
   641 read *tmp266 :unpackCfg:cfg 6
   642 op sub :unpackCfg:si *tmp266 35
-    * set *tmp268 7
   643 read *tmp269 :unpackCfg:cfg 7
   644 op sub :unpackCfg:ti *tmp269 35
-    * set *tmp271 8
   645 read *tmp272 :unpackCfg:cfg 8
   646 op sub :unpackCfg:mg *tmp272 35
-    * set *tmp274 9
   647 read *tmp275 :unpackCfg:cfg 9
   648 op sub :unpackCfg:rotation *tmp275 35
   649 label *label180
 
   681 jump *label196 greaterThanEq *tmp290 5
   682 write "Goal 1: graphite requirement" .display ".status1"
   683 label *label198
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   684 write "Supplying " .display ".status2"
   685 write @coal .display ".item2"
   686 write .press .display ".block2"
 
   709 jump *label206 greaterThanEq *tmp301 5
   710 write "Goal 2: coal for silicon requirement" .display ".status1"
   711 label *label208
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   712 write "Supplying " .display ".status2"
   713 write @coal .display ".item2"
   714 write .smelter .display ".block2"
 
   733 jump *label214 greaterThanEq *tmp309 5
   734 write "Goal 3: sand for silicon requirement" .display ".status1"
   735 label *label216
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   736 write "Supplying " .display ".status2"
   737 write @sand .display ".item2"
   738 write .smelter .display ".block2"
 
   762 jump *label224 greaterThanEq *tmp320 2
   763 write "Goal 4: supplying generator" .display ".status1"
   764 label *label226
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   765 write "Supplying " .display ".status2"
   766 write @coal .display ".item2"
   767 write .generator .display ".block2"
 
   882 label *label234
   883 write "Goal 11: Fetching titanium" .display ".status1"
   884 label *label264
-    * set :fetchBlock:block .titaniumDrill
-    * set :fetchBlock:item @titanium
   885 sensor :transportStatus.2:target .titaniumDrill @itemCapacity
   886 write :transportStatus.2:target .display ".transportTarget"
   887 write @titanium .display ".transportItem"
 
  1051 return :meetTarget*retaddr
  1052 end
  1053 label *label16
-    * set :moveTo.1:x :buildBlockAt:x
-    * set :moveTo.1:y :buildBlockAt:y
-    * set *tmp413 :buildBlockAt:x
-    * set *tmp414 :buildBlockAt:y
-    * set :moveTo.2:x :buildBlockAt:x
-    * set :moveTo.2:y :buildBlockAt:y
  1054 write "Moving..." .display ".status3"
  1055 label *label315
  1056 label *label316

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   786 label *label223
   787 label *label192
   788 label *label193
+  789 set *tmp330 100
   790 sensor *tmp328 .core @titanium
-    * jump *label232 greaterThanEq *tmp328 .targetTitanium
+  791 jump *label233 greaterThanEq *tmp328 .targetTitanium
   792 sensor *tmp331 .core @titanium
   793 op sub *tmp332 .targetTitanium *tmp331
   794 op min *tmp330 7 *tmp332
   795 jump *label233 always
-    * label *label232
-    * set *tmp330 100
   796 label *label233
   797 sensor *tmp334 .titaniumDrill @titanium
   798 jump *label234 greaterThanEq *tmp334 *tmp330
 
   814 label *label244
   815 sensor :supplyBase0:coal .core @coal
   816 sensor :supplyBase0:sand .core @sand
-    * jump *label245 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp349 @coal
+  817 set :mineOre.1:ore @sand
+  818 jump *label246 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  819 set :mineOre.1:ore @coal
   820 jump *label246 always
-    * label *label245
-    * set *tmp349 @sand
   821 label *label246
-    * set :mineOre.1:ore *tmp349
   822 setaddr :mineOre.1*retaddr *label247 (h:*label247)
   823 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
   824 label *label247
 
   858 label *label260
   859 sensor :supplyBase0:coal.1 .core @coal
   860 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label261 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp362 @coal
+  861 set :mineOre.1:ore @sand
+  862 jump *label262 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+  863 set :mineOre.1:ore @coal
   864 jump *label262 always
-    * label *label261
-    * set *tmp362 @sand
   865 label *label262
-    * set :mineOre.1:ore *tmp362
   866 setaddr :mineOre.1*retaddr *label263 (h:*label263)
   867 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
   868 label *label263

Modifications by Unroll iteration loop at CoreBuilder.mnd:208:5 (-2 instructions):
 
   940 end
   941 label *label15
   942 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp382 *label289
-    * jump *label286 always
-    * multilabel *label289 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp382 *label290
-    * jump *label286 always
-    * multilabel *label290 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp382 *label291
-    * jump *label286 always
-    * multilabel *label291 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp382 *label292
-    * jump *label286 always
-    * multilabel *label292 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp382 *label293
-    * jump *label286 always
-    * multilabel *label293 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp382 *label294
-    * label *label286
-    * op sign *tmp383 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label287
-    * multijump *tmp382 0 0 (m:marker0)
-    * multilabel *label294 (m:marker0)
-    * label *label288
+  943 set :meetTarget:t :meetTarget:copper
+  944 label *label351
+  945 op sign *tmp383 :meetTarget:t
+  946 op add :meetTarget:count :meetTarget:count *tmp383
+  947 label *label352
+  948 set :meetTarget:t :meetTarget:lead
+  949 label *label355
+  950 op sign *tmp383 :meetTarget:t
+  951 op add :meetTarget:count :meetTarget:count *tmp383
+  952 label *label356
+  953 set :meetTarget:t :meetTarget:graphite
+  954 label *label359
+  955 op sign *tmp383 :meetTarget:t
+  956 op add :meetTarget:count :meetTarget:count *tmp383
+  957 label *label360
+  958 set :meetTarget:t :meetTarget:silicon
+  959 label *label363
+  960 op sign *tmp383 :meetTarget:t
+  961 op add :meetTarget:count :meetTarget:count *tmp383
+  962 label *label364
+  963 set :meetTarget:t :meetTarget:titanium
+  964 label *label367
+  965 op sign *tmp383 :meetTarget:t
+  966 op add :meetTarget:count :meetTarget:count *tmp383
+  967 label *label368
+  968 set :meetTarget:t :meetTarget:metaglass
+  969 label *label371
+  970 op sign *tmp383 :meetTarget:t
+  971 op add :meetTarget:count :meetTarget:count *tmp383
+  972 label *label372
+  973 label *label288
   974 write :meetTarget:count .display ".totalTargets"
   975 write :meetTarget:block .display ".nextBlock"
   976 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   942 set :meetTarget:count 0
   943 set :meetTarget:t :meetTarget:copper
   944 label *label351
-    * op sign *tmp383 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp383
+  945 op sign *tmp383 :meetTarget:copper
+  946 op add :meetTarget:count 0 *tmp383
   947 label *label352
   948 set :meetTarget:t :meetTarget:lead
   949 label *label355
-    * op sign *tmp383 :meetTarget:t
+  950 op sign *tmp383 :meetTarget:lead
   951 op add :meetTarget:count :meetTarget:count *tmp383
   952 label *label356
   953 set :meetTarget:t :meetTarget:graphite
   954 label *label359
-    * op sign *tmp383 :meetTarget:t
+  955 op sign *tmp383 :meetTarget:graphite
   956 op add :meetTarget:count :meetTarget:count *tmp383
   957 label *label360
   958 set :meetTarget:t :meetTarget:silicon
   959 label *label363
-    * op sign *tmp383 :meetTarget:t
+  960 op sign *tmp383 :meetTarget:silicon
   961 op add :meetTarget:count :meetTarget:count *tmp383
   962 label *label364
   963 set :meetTarget:t :meetTarget:titanium
   964 label *label367
-    * op sign *tmp383 :meetTarget:t
+  965 op sign *tmp383 :meetTarget:titanium
   966 op add :meetTarget:count :meetTarget:count *tmp383
   967 label *label368
   968 set :meetTarget:t :meetTarget:metaglass
   969 label *label371
-    * op sign *tmp383 :meetTarget:t
+  970 op sign *tmp383 :meetTarget:metaglass
   971 op add :meetTarget:count :meetTarget:count *tmp383
   972 label *label372
   973 label *label288

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   939 return :supplyBase*retaddr
   940 end
   941 label *label15
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
   942 label *label351
   943 op sign *tmp383 :meetTarget:copper
   944 op add :meetTarget:count 0 *tmp383
   945 label *label352
-    * set :meetTarget:t :meetTarget:lead
   946 label *label355
   947 op sign *tmp383 :meetTarget:lead
   948 op add :meetTarget:count :meetTarget:count *tmp383
   949 label *label356
-    * set :meetTarget:t :meetTarget:graphite
   950 label *label359
   951 op sign *tmp383 :meetTarget:graphite
   952 op add :meetTarget:count :meetTarget:count *tmp383
   953 label *label360
-    * set :meetTarget:t :meetTarget:silicon
   954 label *label363
   955 op sign *tmp383 :meetTarget:silicon
   956 op add :meetTarget:count :meetTarget:count *tmp383
   957 label *label364
-    * set :meetTarget:t :meetTarget:titanium
   958 label *label367
   959 op sign *tmp383 :meetTarget:titanium
   960 op add :meetTarget:count :meetTarget:count *tmp383
   961 label *label368
-    * set :meetTarget:t :meetTarget:metaglass
   962 label *label371
   963 op sign *tmp383 :meetTarget:metaglass
   964 op add :meetTarget:count :meetTarget:count *tmp383

Modifications by Replicate loop condition at Actions.mnd:44:5 (+1 instructions):
 
   510 label *label139
   511 ucontrol within *tmp206 *tmp207 6 *tmp208
   512 jump *label141 notEqual *tmp208 false
+  513 label *label376
   514 ucontrol approach *tmp206 *tmp207 5.5
   515 label *label140
-    * jump *label139 always
+  516 ucontrol within *tmp206 *tmp207 6 *tmp208
+  517 jump *label376 equal *tmp208 false
   518 label *label141
   519 label *label137
   520 label *label136

Modifications by Replicate loop condition at Actions.mnd:89:9 (+1 instructions):
 
   532 label *label145
   533 sensor *tmp216 @unit @firstItem
   534 jump *label147 equal *tmp216 null
+  535 label *label377
   536 ucontrol itemDrop @air 1000
   537 label *label146
-    * jump *label145 always
+  538 sensor *tmp216 @unit @firstItem
+  539 jump *label377 notEqual *tmp216 null
   540 label *label147
   541 label *label135
   542 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at Actions.mnd:66:5 (+1 instructions):
 
   577 label *label165
   578 sensor *tmp231 @unit @firstItem
   579 jump *label167 equal *tmp231 null
+  580 label *label378
   581 ucontrol itemDrop @air 1000
   582 label *label166
-    * jump *label165 always
+  583 sensor *tmp231 @unit @firstItem
+  584 jump *label378 notEqual *tmp231 null
   585 label *label167
   586 label *label164
   587 label *label162

Modifications by Replicate loop condition at Actions.mnd:66:5 (+1 instructions):
 
   910 label *label276
   911 sensor *tmp371 @unit @firstItem
   912 jump *label278 equal *tmp371 null
+  913 label *label379
   914 ucontrol itemDrop @air 1000
   915 label *label277
-    * jump *label276 always
+  916 sensor *tmp371 @unit @firstItem
+  917 jump *label379 notEqual *tmp371 null
   918 label *label278
   919 label *label275
   920 label *label279

Modifications by Replicate loop condition at Actions.mnd:44:5 (+1 instructions):
 
  1054 label *label316
  1055 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
  1056 jump *label318 notEqual *tmp415 false
+ 1057 label *label380
  1058 ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5
  1059 label *label317
-    * jump *label316 always
+ 1060 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
+ 1061 jump *label380 equal *tmp415 false
  1062 label *label318
  1063 label *label314
  1064 label *label313

Modifications by Inline function call at CoreBuilder.mnd:176:5 (+6 instructions):
 
   673 write "Phase 1: supplying base" .display ".status1"
   674 label *label189
   675 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label190 (h:*label190)
-    * call *label8 *invalid :mineOre.1*retval (m:*label190) (h:*label190)
-    * label *label190
+  676 label *label381
+  677 write "Mining " .display ".status2"
+  678 write :mineOre.1:ore .display ".item2"
+  679 write "core" .display ".block2"
+  680 label *label382
+  681 set :mineOre:ore :mineOre.1:ore
+  682 set :mineOre:amount 30
+  683 set :mineOre:block .core
+  684 setaddr :mineOre*retaddr *label383 (h:*label383)
+  685 call *label7 *invalid :mineOre*retval (m:*label383) (h:*label383)
+  686 label *label383
+  687 label *label384
   688 label *label188
   689 jump *label187 always
   690 label *label186

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   675 set :mineOre.1:ore @coal
   676 label *label381
   677 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  678 write @coal .display ".item2"
   679 write "core" .display ".block2"
   680 label *label382
-    * set :mineOre:ore :mineOre.1:ore
+  681 set :mineOre:ore @coal
   682 set :mineOre:amount 30
   683 set :mineOre:block .core
   684 setaddr :mineOre*retaddr *label383 (h:*label383)

Modifications by Inline function 'depositItems' defined at Actions.mnd:79:1 (+19 instructions):
 
   498 stop
   499 label *label130
   500 end
-    * label *label6
-    * write "Depositing..." .display ".status3"
-    * label *label133
-    * sensor *tmp203 @unit @firstItem
-    * jump *label134 notEqual *tmp203 :depositItems:item
-    * sensor *tmp206 :depositItems:block @x
-    * sensor *tmp207 :depositItems:block @y
-    * write "Moving..." .display ".status3"
-    * label *label138
-    * label *label139
-    * ucontrol within *tmp206 *tmp207 6 *tmp208
-    * jump *label141 notEqual *tmp208 false
-    * label *label376
-    * ucontrol approach *tmp206 *tmp207 5.5
-    * label *label140
-    * ucontrol within *tmp206 *tmp207 6 *tmp208
-    * jump *label376 equal *tmp208 false
-    * label *label141
-    * label *label137
-    * label *label136
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label142
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label143
-    * sensor *tmp212 @unit @firstItem
-    * op mul *tmp213 *tmp212 :depositItems:cap
-    * sensor *tmp214 :depositItems:block :depositItems:item
-    * jump *label142 greaterThan *tmp213 *tmp214
-    * label *label144
-    * jump *label135 always
-    * label *label134
-    * label *label145
-    * sensor *tmp216 @unit @firstItem
-    * jump *label147 equal *tmp216 null
-    * label *label377
-    * ucontrol itemDrop @air 1000
-    * label *label146
-    * sensor *tmp216 @unit @firstItem
-    * jump *label377 notEqual *tmp216 null
-    * label *label147
-    * label *label135
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label148
-    * label *label132
-    * return :depositItems*retaddr
-    * end
   501 label *label7
   502 op min :mineOre:amount :mineOre:amount 30
   503 write :mineOre:amount .display ".transportTarget"
 
   563 ucontrol unbind
   564 set :depositItems:block :mineOre:block
   565 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label176 (h:*label176)
-    * call *label6 *invalid :depositItems*retval (m:*label176) (h:*label176)
-    * label *label176
+  566 label *label385
+  567 write "Depositing..." .display ".status3"
+  568 label *label386
+  569 sensor *tmp203 @unit @firstItem
+  570 jump *label397 notEqual *tmp203 :depositItems:item
+  571 sensor *tmp206 :depositItems:block @x
+  572 sensor *tmp207 :depositItems:block @y
+  573 write "Moving..." .display ".status3"
+  574 label *label387
+  575 label *label388
+  576 ucontrol within *tmp206 *tmp207 6 *tmp208
+  577 jump *label391 notEqual *tmp208 false
+  578 label *label389
+  579 ucontrol approach *tmp206 *tmp207 5.5
+  580 label *label390
+  581 ucontrol within *tmp206 *tmp207 6 *tmp208
+  582 jump *label389 equal *tmp208 false
+  583 label *label391
+  584 label *label392
+  585 label *label393
+  586 sensor :depositItems:cap :depositItems:block @itemCapacity
+  587 label *label394
+  588 ucontrol itemDrop :depositItems:block 30
+  589 label *label395
+  590 sensor *tmp212 @unit @firstItem
+  591 op mul *tmp213 *tmp212 :depositItems:cap
+  592 sensor *tmp214 :depositItems:block :depositItems:item
+  593 jump *label394 greaterThan *tmp213 *tmp214
+  594 label *label396
+  595 jump *label402 always
+  596 label *label397
+  597 label *label398
+  598 sensor *tmp216 @unit @firstItem
+  599 jump *label401 equal *tmp216 null
+  600 label *label399
+  601 ucontrol itemDrop @air 1000
+  602 label *label400
+  603 sensor *tmp216 @unit @firstItem
+  604 jump *label399 notEqual *tmp216 null
+  605 label *label401
+  606 label *label402
+  607 write 0 .display ".transportTarget"
+  608 write null .display ".transportItem"
+  609 label *label403
+  610 label *label404
   611 label *label149
   612 return :mineOre*retaddr
   613 end
 
   940 label *label281
   941 set :depositItems:block .core
   942 set :depositItems:item @titanium
-    * setaddr :depositItems*retaddr *label284 (h:*label284)
-    * call *label6 *invalid :depositItems*retval (m:*label284) (h:*label284)
-    * label *label284
+  943 label *label405
+  944 write "Depositing..." .display ".status3"
+  945 label *label406
+  946 sensor *tmp203 @unit @firstItem
+  947 jump *label417 notEqual *tmp203 :depositItems:item
+  948 sensor *tmp206 :depositItems:block @x
+  949 sensor *tmp207 :depositItems:block @y
+  950 write "Moving..." .display ".status3"
+  951 label *label407
+  952 label *label408
+  953 ucontrol within *tmp206 *tmp207 6 *tmp208
+  954 jump *label411 notEqual *tmp208 false
+  955 label *label409
+  956 ucontrol approach *tmp206 *tmp207 5.5
+  957 label *label410
+  958 ucontrol within *tmp206 *tmp207 6 *tmp208
+  959 jump *label409 equal *tmp208 false
+  960 label *label411
+  961 label *label412
+  962 label *label413
+  963 sensor :depositItems:cap :depositItems:block @itemCapacity
+  964 label *label414
+  965 ucontrol itemDrop :depositItems:block 30
+  966 label *label415
+  967 sensor *tmp212 @unit @firstItem
+  968 op mul *tmp213 *tmp212 :depositItems:cap
+  969 sensor *tmp214 :depositItems:block :depositItems:item
+  970 jump *label414 greaterThan *tmp213 *tmp214
+  971 label *label416
+  972 jump *label422 always
+  973 label *label417
+  974 label *label418
+  975 sensor *tmp216 @unit @firstItem
+  976 jump *label421 equal *tmp216 null
+  977 label *label419
+  978 ucontrol itemDrop @air 1000
+  979 label *label420
+  980 sensor *tmp216 @unit @firstItem
+  981 jump *label419 notEqual *tmp216 null
+  982 label *label421
+  983 label *label422
+  984 write 0 .display ".transportTarget"
+  985 write null .display ".transportItem"
+  986 label *label423
+  987 label *label424
   988 label *label265
   989 label *label235
   990 label *label191

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   567 write "Depositing..." .display ".status3"
   568 label *label386
   569 sensor *tmp203 @unit @firstItem
-    * jump *label397 notEqual *tmp203 :depositItems:item
-    * sensor *tmp206 :depositItems:block @x
-    * sensor *tmp207 :depositItems:block @y
+  570 jump *label397 notEqual *tmp203 :mineOre:ore
+  571 sensor *tmp206 :mineOre:block @x
+  572 sensor *tmp207 :mineOre:block @y
   573 write "Moving..." .display ".status3"
   574 label *label387
   575 label *label388
 
   583 label *label391
   584 label *label392
   585 label *label393
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  586 sensor :depositItems:cap :mineOre:block @itemCapacity
   587 label *label394
-    * ucontrol itemDrop :depositItems:block 30
+  588 ucontrol itemDrop :mineOre:block 30
   589 label *label395
   590 sensor *tmp212 @unit @firstItem
   591 op mul *tmp213 *tmp212 :depositItems:cap
-    * sensor *tmp214 :depositItems:block :depositItems:item
+  592 sensor *tmp214 :mineOre:block :mineOre:ore
   593 jump *label394 greaterThan *tmp213 *tmp214
   594 label *label396
   595 jump *label402 always
 
   944 write "Depositing..." .display ".status3"
   945 label *label406
   946 sensor *tmp203 @unit @firstItem
-    * jump *label417 notEqual *tmp203 :depositItems:item
-    * sensor *tmp206 :depositItems:block @x
-    * sensor *tmp207 :depositItems:block @y
+  947 jump *label417 notEqual *tmp203 @titanium
+  948 sensor *tmp206 .core @x
+  949 sensor *tmp207 .core @y
   950 write "Moving..." .display ".status3"
   951 label *label407
   952 label *label408
 
   960 label *label411
   961 label *label412
   962 label *label413
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  963 sensor :depositItems:cap .core @itemCapacity
   964 label *label414
-    * ucontrol itemDrop :depositItems:block 30
+  965 ucontrol itemDrop .core 30
   966 label *label415
   967 sensor *tmp212 @unit @firstItem
   968 op mul *tmp213 *tmp212 :depositItems:cap
-    * sensor *tmp214 :depositItems:block :depositItems:item
+  969 sensor *tmp214 .core @titanium
   970 jump *label414 greaterThan *tmp213 *tmp214
   971 label *label416
   972 jump *label422 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   561 jump *label169 lessThan *tmp241 :mineOre:amount
   562 label *label171
   563 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   564 label *label385
   565 write "Depositing..." .display ".status3"
   566 label *label386
 
   936 op land *tmp381 *tmp379 *tmp380
   937 jump *label279 notEqual *tmp381 false
   938 label *label281
-    * set :depositItems:block .core
-    * set :depositItems:item @titanium
   939 label *label405
   940 write "Depositing..." .display ".status3"
   941 label *label406

Modifications by Inline function call at Actions.mnd:135:5 (+58 instructions):
 
   617 set :mineOre:ore :mineOre.1:ore
   618 set :mineOre:amount 30
   619 set :mineOre:block .core
-    * setaddr :mineOre*retaddr *label179 (h:*label179)
-    * call *label7 *invalid :mineOre*retval (m:*label179) (h:*label179)
-    * label *label179
+  620 label *label425
+  621 op min :mineOre:amount :mineOre:amount 30
+  622 write :mineOre:amount .display ".transportTarget"
+  623 write :mineOre:ore .display ".transportItem"
+  624 label *label426
+  625 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp219 0
+  626 jump *label428 notEqual *tmp219 false
+  627 set .ERROR "Cannot locate ore"
+  628 stop
+  629 label *label427
+  630 label *label428
+  631 label *label429
+  632 label *label430
+  633 write "Moving..." .display ".status3"
+  634 label *label431
+  635 label *label432
+  636 sensor *tmp223 @unit @firstItem
+  637 jump *label433 equal *tmp223 null
+  638 ucontrol itemDrop @air 1000
+  639 label *label433
+  640 label *label434
+  641 ucontrol approach :locateOre:x :locateOre:y 5.5
+  642 label *label435
+  643 ucontrol within :locateOre:x :locateOre:y 6 *tmp226
+  644 jump *label432 equal *tmp226 false
+  645 label *label436
+  646 label *label437
+  647 sensor *tmp228 @unit @firstItem
+  648 jump *label443 equal *tmp228 :mineOre:ore
+  649 label *label438
+  650 sensor *tmp231 @unit @firstItem
+  651 jump *label441 equal *tmp231 null
+  652 label *label439
+  653 ucontrol itemDrop @air 1000
+  654 label *label440
+  655 sensor *tmp231 @unit @firstItem
+  656 jump *label439 notEqual *tmp231 null
+  657 label *label441
+  658 label *label442
+  659 label *label443
+  660 label *label444
+  661 write "Mining..." .display ".status3"
+  662 label *label445
+  663 op add :mineOre:stop @second 10
+  664 label *label446
+  665 sensor :mineOre:item @unit @firstItem
+  666 op notEqual *tmp235 :mineOre:item null
+  667 op notEqual *tmp236 :mineOre:item :mineOre:ore
+  668 op land *tmp237 *tmp235 *tmp236
+  669 jump *label447 equal *tmp237 false
+  670 jump *label452 always
+  671 label *label447
+  672 label *label448
+  673 ucontrol mine :locateOre:x :locateOre:y
+  674 jump *label449 lessThanEq @second :mineOre:stop
+  675 jump *label452 always
+  676 label *label449
+  677 label *label450
+  678 label *label451
+  679 sensor *tmp241 @unit @totalItems
+  680 jump *label446 lessThan *tmp241 :mineOre:amount
+  681 label *label452
+  682 ucontrol unbind
+  683 label *label453
+  684 write "Depositing..." .display ".status3"
+  685 label *label454
+  686 sensor *tmp203 @unit @firstItem
+  687 jump *label465 notEqual *tmp203 :mineOre:ore
+  688 sensor *tmp206 :mineOre:block @x
+  689 sensor *tmp207 :mineOre:block @y
+  690 write "Moving..." .display ".status3"
+  691 label *label455
+  692 label *label456
+  693 ucontrol within *tmp206 *tmp207 6 *tmp208
+  694 jump *label459 notEqual *tmp208 false
+  695 label *label457
+  696 ucontrol approach *tmp206 *tmp207 5.5
+  697 label *label458
+  698 ucontrol within *tmp206 *tmp207 6 *tmp208
+  699 jump *label457 equal *tmp208 false
+  700 label *label459
+  701 label *label460
+  702 label *label461
+  703 sensor :depositItems:cap :mineOre:block @itemCapacity
+  704 label *label462
+  705 ucontrol itemDrop :mineOre:block 30
+  706 label *label463
+  707 sensor *tmp212 @unit @firstItem
+  708 op mul *tmp213 *tmp212 :depositItems:cap
+  709 sensor *tmp214 :mineOre:block :mineOre:ore
+  710 jump *label462 greaterThan *tmp213 *tmp214
+  711 label *label464
+  712 jump *label470 always
+  713 label *label465
+  714 label *label466
+  715 sensor *tmp216 @unit @firstItem
+  716 jump *label469 equal *tmp216 null
+  717 label *label467
+  718 ucontrol itemDrop @air 1000
+  719 label *label468
+  720 sensor *tmp216 @unit @firstItem
+  721 jump *label467 notEqual *tmp216 null
+  722 label *label469
+  723 label *label470
+  724 write 0 .display ".transportTarget"
+  725 write null .display ".transportItem"
+  726 label *label471
+  727 label *label472
+  728 label *label473
   729 label *label177
   730 return :mineOre.1*retaddr
   731 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   618 set :mineOre:amount 30
   619 set :mineOre:block .core
   620 label *label425
-    * op min :mineOre:amount :mineOre:amount 30
-    * write :mineOre:amount .display ".transportTarget"
-    * write :mineOre:ore .display ".transportItem"
+  621 op min :mineOre:amount 30 30
+  622 write 30 .display ".transportTarget"
+  623 write :mineOre.1:ore .display ".transportItem"
   624 label *label426
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp219 0
+  625 ulocate ore core true :mineOre.1:ore :locateOre:x :locateOre:y *tmp219 0
   626 jump *label428 notEqual *tmp219 false
   627 set .ERROR "Cannot locate ore"
   628 stop
 
   645 label *label436
   646 label *label437
   647 sensor *tmp228 @unit @firstItem
-    * jump *label443 equal *tmp228 :mineOre:ore
+  648 jump *label443 equal *tmp228 :mineOre.1:ore
   649 label *label438
   650 sensor *tmp231 @unit @firstItem
   651 jump *label441 equal *tmp231 null
 
   664 label *label446
   665 sensor :mineOre:item @unit @firstItem
   666 op notEqual *tmp235 :mineOre:item null
-    * op notEqual *tmp236 :mineOre:item :mineOre:ore
+  667 op notEqual *tmp236 :mineOre:item :mineOre.1:ore
   668 op land *tmp237 *tmp235 *tmp236
   669 jump *label447 equal *tmp237 false
   670 jump *label452 always
 
   677 label *label450
   678 label *label451
   679 sensor *tmp241 @unit @totalItems
-    * jump *label446 lessThan *tmp241 :mineOre:amount
+  680 jump *label446 lessThan *tmp241 30
   681 label *label452
   682 ucontrol unbind
   683 label *label453
   684 write "Depositing..." .display ".status3"
   685 label *label454
   686 sensor *tmp203 @unit @firstItem
-    * jump *label465 notEqual *tmp203 :mineOre:ore
-    * sensor *tmp206 :mineOre:block @x
-    * sensor *tmp207 :mineOre:block @y
+  687 jump *label465 notEqual *tmp203 :mineOre.1:ore
+  688 sensor *tmp206 .core @x
+  689 sensor *tmp207 .core @y
   690 write "Moving..." .display ".status3"
   691 label *label455
   692 label *label456
 
   700 label *label459
   701 label *label460
   702 label *label461
-    * sensor :depositItems:cap :mineOre:block @itemCapacity
+  703 sensor :depositItems:cap .core @itemCapacity
   704 label *label462
-    * ucontrol itemDrop :mineOre:block 30
+  705 ucontrol itemDrop .core 30
   706 label *label463
   707 sensor *tmp212 @unit @firstItem
   708 op mul *tmp213 *tmp212 :depositItems:cap
-    * sensor *tmp214 :mineOre:block :mineOre:ore
+  709 sensor *tmp214 .core :mineOre.1:ore
   710 jump *label462 greaterThan *tmp213 *tmp214
   711 label *label464
   712 jump *label470 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   614 write :mineOre.1:ore .display ".item2"
   615 write "core" .display ".block2"
   616 label *label178
-    * set :mineOre:ore :mineOre.1:ore
-    * set :mineOre:amount 30
-    * set :mineOre:block .core
   617 label *label425
-    * op min :mineOre:amount 30 30
   618 write 30 .display ".transportTarget"
   619 write :mineOre.1:ore .display ".transportItem"
   620 label *label426

Modifications by Replicate loop condition at CoreBuilder.mnd:231:5 (+26 instructions):
 
  1183 jump *label298 always
  1184 label *label298
  1185 jump *label297 notEqual *tmp393 false
+ 1186 label *label474
  1187 setaddr :supplyBase*retaddr *label311 (h:*label311)
  1188 call *label14 *invalid :supplyBase*retval (m:*label311) (h:*label311)
  1189 label *label311
  1190 label *label296
-    * jump *label295 always
+ 1191 sensor *tmp394 .core @copper
+ 1192 jump *label475 greaterThanEq *tmp394 .targetCopper
+ 1193 set *tmp393 false
+ 1194 jump *label487 always
+ 1195 label *label475
+ 1196 label *label476
+ 1197 sensor *tmp397 .core @lead
+ 1198 jump *label477 greaterThanEq *tmp397 .targetLead
+ 1199 set *tmp393 false
+ 1200 jump *label487 always
+ 1201 label *label477
+ 1202 label *label478
+ 1203 sensor *tmp400 .core @graphite
+ 1204 jump *label479 greaterThanEq *tmp400 .targetGraphite
+ 1205 set *tmp393 false
+ 1206 jump *label487 always
+ 1207 label *label479
+ 1208 label *label480
+ 1209 sensor *tmp403 .core @silicon
+ 1210 jump *label481 greaterThanEq *tmp403 .targetSilicon
+ 1211 set *tmp393 false
+ 1212 jump *label487 always
+ 1213 label *label481
+ 1214 label *label482
+ 1215 sensor *tmp406 .core @titanium
+ 1216 jump *label483 greaterThanEq *tmp406 .targetTitanium
+ 1217 set *tmp393 false
+ 1218 jump *label487 always
+ 1219 label *label483
+ 1220 label *label484
+ 1221 sensor *tmp409 .core @metaglass
+ 1222 jump *label485 greaterThanEq *tmp409 .targetMetaglass
+ 1223 set *tmp393 false
+ 1224 jump *label487 always
+ 1225 label *label485
+ 1226 label *label486
+ 1227 set *tmp393 true
+ 1228 jump *label487 always
+ 1229 label *label487
+ 1230 jump *label474 equal *tmp393 false
  1231 label *label297
  1232 label *label285
  1233 return :meetTarget*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1144 write *tmp392 .controller ".siliconReserve"
  1145 label *label295
  1146 sensor *tmp394 .core @copper
-    * jump *label299 greaterThanEq *tmp394 .targetCopper
+ 1147 jump *label299 greaterThanEq *tmp394 :meetTarget:copper
  1148 set *tmp393 false
  1149 jump *label298 always
  1150 label *label299
 
  1156 label *label301
  1157 label *label302
  1158 sensor *tmp400 .core @graphite
-    * jump *label303 greaterThanEq *tmp400 .targetGraphite
+ 1159 jump *label303 greaterThanEq *tmp400 :meetTarget:graphite
  1160 set *tmp393 false
  1161 jump *label298 always
  1162 label *label303
  1163 label *label304
  1164 sensor *tmp403 .core @silicon
-    * jump *label305 greaterThanEq *tmp403 .targetSilicon
+ 1165 jump *label305 greaterThanEq *tmp403 :meetTarget:silicon
  1166 set *tmp393 false
  1167 jump *label298 always
  1168 label *label305
  1169 label *label306
  1170 sensor *tmp406 .core @titanium
-    * jump *label307 greaterThanEq *tmp406 .targetTitanium
+ 1171 jump *label307 greaterThanEq *tmp406 :meetTarget:titanium
  1172 set *tmp393 false
  1173 jump *label298 always
  1174 label *label307
  1175 label *label308
  1176 sensor *tmp409 .core @metaglass
-    * jump *label309 greaterThanEq *tmp409 .targetMetaglass
+ 1177 jump *label309 greaterThanEq *tmp409 :meetTarget:metaglass
  1178 set *tmp393 false
  1179 jump *label298 always
  1180 label *label309

Modifications by Replicate loop condition at CoreBuilder.mnd:475:5 (+1 instructions):
 
   267 label *label71
   268 read *tmp74 *tmp127 ".polys"
   269 jump *label73 greaterThanEq *tmp74 3
+  270 label *label488
   271 setaddr :supplyBase*retaddr *label74 (h:*label74)
   272 call *label14 *invalid :supplyBase*retval (m:*label74) (h:*label74)
   273 label *label74
   274 label *label72
-    * jump *label71 always
+  275 read *tmp74 *tmp127 ".polys"
+  276 jump *label488 lessThan *tmp74 3
   277 label *label73
   278 write 8 *tmp127 ".flareTarget"
   279 write 6 *tmp127 ".polyTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:481:5 (+1 instructions):
 
   280 label *label75
   281 read *tmp72 *tmp127 ".flares"
   282 jump *label77 greaterThanEq *tmp72 2
+  283 label *label489
   284 setaddr :supplyBase*retaddr *label78 (h:*label78)
   285 call *label14 *invalid :supplyBase*retval (m:*label78) (h:*label78)
   286 label *label78
   287 label *label76
-    * jump *label75 always
+  288 read *tmp72 *tmp127 ".flares"
+  289 jump *label489 lessThan *tmp72 2
   290 label *label77
   291 ubind @flare
   292 write @ore-titanium processor1 ".nextBlock"

Modifications by Inline function 'buildBlock' defined at CoreBuilder.mnd:271:1 (+13 instructions):
 
   142 set :buildBlock:metaglass :unpackCfg:mg
   143 set :buildBlock:rotation :unpackCfg:rotation
   144 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label46 (h:*label46)
-    * call *label17 *invalid :buildBlock*retval (m:*label46) (h:*label46)
-    * label *label46
+  145 label *label490
+  146 set :meetTarget:block :buildBlock:block
+  147 set :meetTarget:copper :buildBlock:copper
+  148 set :meetTarget:lead :buildBlock:lead
+  149 set :meetTarget:graphite :buildBlock:graphite
+  150 set :meetTarget:silicon :buildBlock:silicon
+  151 set :meetTarget:titanium :buildBlock:titanium
+  152 set :meetTarget:metaglass :buildBlock:metaglass
+  153 setaddr :meetTarget*retaddr *label491 (h:*label491)
+  154 call *label15 *invalid :meetTarget*retval (m:*label491) (h:*label491)
+  155 label *label491
+  156 set :buildBlockAt:block :buildBlock:block
+  157 set :buildBlockAt:x :buildBlock:x
+  158 set :buildBlockAt:y :buildBlock:y
+  159 set :buildBlockAt:rotation :buildBlock:rotation
+  160 set :buildBlockAt:config :buildBlock:config
+  161 set :buildBlockAt:skipError false
+  162 setaddr :buildBlockAt*retaddr *label492 (h:*label492)
+  163 call *label16 *invalid :buildBlockAt*retval (m:*label492) (h:*label492)
+  164 label *label492
+  165 set :buildBlock*retval :buildBlockAt*retval
+  166 jump *label493 always
+  167 label *label493
   168 set *tmp127 :buildBlock*retval
   169 jump *label44 always
   170 label *label44
 
  1316 label *label312
  1317 return :buildBlockAt*retaddr
  1318 end
-    * label *label17
-    * set :meetTarget:block :buildBlock:block
-    * set :meetTarget:copper :buildBlock:copper
-    * set :meetTarget:lead :buildBlock:lead
-    * set :meetTarget:graphite :buildBlock:graphite
-    * set :meetTarget:silicon :buildBlock:silicon
-    * set :meetTarget:titanium :buildBlock:titanium
-    * set :meetTarget:metaglass :buildBlock:metaglass
-    * setaddr :meetTarget*retaddr *label335 (h:*label335)
-    * call *label15 *invalid :meetTarget*retval (m:*label335) (h:*label335)
-    * label *label335
-    * set :buildBlockAt:block :buildBlock:block
-    * set :buildBlockAt:x :buildBlock:x
-    * set :buildBlockAt:y :buildBlock:y
-    * set :buildBlockAt:rotation :buildBlock:rotation
-    * set :buildBlockAt:config :buildBlock:config
-    * set :buildBlockAt:skipError false
-    * setaddr :buildBlockAt*retaddr *label336 (h:*label336)
-    * call *label16 *invalid :buildBlockAt*retval (m:*label336) (h:*label336)
-    * label *label336
-    * set :buildBlock*retval :buildBlockAt*retval
-    * jump *label334 always
-    * label *label334
-    * return :buildBlock*retaddr
-    * end
  1319 label *label18
  1320 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1321 setaddr :unpackCfg*retaddr *label338 (h:*label338)
 
  1334 set :buildBlock:metaglass :unpackCfg:mg
  1335 set :buildBlock:rotation :unpackCfg:rotation
  1336 set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label339 (h:*label339)
-    * call *label17 *invalid :buildBlock*retval (m:*label339) (h:*label339)
-    * label *label339
+ 1337 label *label494
+ 1338 set :meetTarget:block :buildBlock:block
+ 1339 set :meetTarget:copper :buildBlock:copper
+ 1340 set :meetTarget:lead :buildBlock:lead
+ 1341 set :meetTarget:graphite :buildBlock:graphite
+ 1342 set :meetTarget:silicon :buildBlock:silicon
+ 1343 set :meetTarget:titanium :buildBlock:titanium
+ 1344 set :meetTarget:metaglass :buildBlock:metaglass
+ 1345 setaddr :meetTarget*retaddr *label495 (h:*label495)
+ 1346 call *label15 *invalid :meetTarget*retval (m:*label495) (h:*label495)
+ 1347 label *label495
+ 1348 set :buildBlockAt:block :buildBlock:block
+ 1349 set :buildBlockAt:x :buildBlock:x
+ 1350 set :buildBlockAt:y :buildBlock:y
+ 1351 set :buildBlockAt:rotation :buildBlock:rotation
+ 1352 set :buildBlockAt:config :buildBlock:config
+ 1353 set :buildBlockAt:skipError false
+ 1354 setaddr :buildBlockAt*retaddr *label496 (h:*label496)
+ 1355 call *label16 *invalid :buildBlockAt*retval (m:*label496) (h:*label496)
+ 1356 label *label496
+ 1357 set :buildBlock*retval :buildBlockAt*retval
+ 1358 jump *label497 always
+ 1359 label *label497
  1360 set :buildBlockFromCfg*retval :buildBlock*retval
  1361 jump *label337 always
  1362 label *label337

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   143 set :buildBlock:rotation :unpackCfg:rotation
   144 set :buildBlock:config processor2
   145 label *label490
-    * set :meetTarget:block :buildBlock:block
-    * set :meetTarget:copper :buildBlock:copper
-    * set :meetTarget:lead :buildBlock:lead
-    * set :meetTarget:graphite :buildBlock:graphite
-    * set :meetTarget:silicon :buildBlock:silicon
-    * set :meetTarget:titanium :buildBlock:titanium
-    * set :meetTarget:metaglass :buildBlock:metaglass
+  146 set :meetTarget:block :unpackCfg:type
+  147 set :meetTarget:copper :unpackCfg:cu
+  148 set :meetTarget:lead :unpackCfg:pb
+  149 set :meetTarget:graphite :unpackCfg:gr
+  150 set :meetTarget:silicon :unpackCfg:si
+  151 set :meetTarget:titanium :unpackCfg:ti
+  152 set :meetTarget:metaglass :unpackCfg:mg
   153 setaddr :meetTarget*retaddr *label491 (h:*label491)
   154 call *label15 *invalid :meetTarget*retval (m:*label491) (h:*label491)
   155 label *label491
 
   165 set :buildBlock*retval :buildBlockAt*retval
   166 jump *label493 always
   167 label *label493
-    * set *tmp127 :buildBlock*retval
+  168 set *tmp127 :buildBlockAt*retval
   169 jump *label44 always
   170 label *label44
-    * set .controller :buildBlock*retval
-    * write processor1 :buildBlock*retval ".display"
-    * write .core :buildBlock*retval ".core"
-    * write bank1 :buildBlock*retval ".bank"
-    * write .battery :buildBlock*retval ".battery"
-    * write .generator :buildBlock*retval ".generator"
-    * write .smelter :buildBlock*retval ".smelter"
-    * write .press :buildBlock*retval ".press"
-    * write :monos :buildBlock*retval ".monos"
-    * write :flares :buildBlock*retval ".flares"
-    * write :polys :buildBlock*retval ".polys"
+  171 set .controller :buildBlockAt*retval
+  172 write processor1 :buildBlockAt*retval ".display"
+  173 write .core :buildBlockAt*retval ".core"
+  174 write bank1 :buildBlockAt*retval ".bank"
+  175 write .battery :buildBlockAt*retval ".battery"
+  176 write .generator :buildBlockAt*retval ".generator"
+  177 write .smelter :buildBlockAt*retval ".smelter"
+  178 write .press :buildBlockAt*retval ".press"
+  179 write :monos :buildBlockAt*retval ".monos"
+  180 write :flares :buildBlockAt*retval ".flares"
+  181 write :polys :buildBlockAt*retval ".polys"
   182 set :buildBlockFromCfg:cfg "g)'%)#####"
   183 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   184 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)
 
  1335 set :buildBlock:rotation :unpackCfg:rotation
  1336 set :buildBlock:config null
  1337 label *label494
-    * set :meetTarget:block :buildBlock:block
-    * set :meetTarget:copper :buildBlock:copper
-    * set :meetTarget:lead :buildBlock:lead
-    * set :meetTarget:graphite :buildBlock:graphite
-    * set :meetTarget:silicon :buildBlock:silicon
-    * set :meetTarget:titanium :buildBlock:titanium
-    * set :meetTarget:metaglass :buildBlock:metaglass
+ 1338 set :meetTarget:block :unpackCfg:type
+ 1339 set :meetTarget:copper :unpackCfg:cu
+ 1340 set :meetTarget:lead :unpackCfg:pb
+ 1341 set :meetTarget:graphite :unpackCfg:gr
+ 1342 set :meetTarget:silicon :unpackCfg:si
+ 1343 set :meetTarget:titanium :unpackCfg:ti
+ 1344 set :meetTarget:metaglass :unpackCfg:mg
  1345 setaddr :meetTarget*retaddr *label495 (h:*label495)
  1346 call *label15 *invalid :meetTarget*retval (m:*label495) (h:*label495)
  1347 label *label495
 
  1357 set :buildBlock*retval :buildBlockAt*retval
  1358 jump *label497 always
  1359 label *label497
-    * set :buildBlockFromCfg*retval :buildBlock*retval
+ 1360 set :buildBlockFromCfg*retval :buildBlockAt*retval
  1361 jump *label337 always
  1362 label *label337
  1363 return :buildBlockFromCfg*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-14 instructions):
 
   134 set :buildBlock:block :unpackCfg:type
   135 set :buildBlock:x *tmp128
   136 set :buildBlock:y *tmp129
-    * set :buildBlock:copper :unpackCfg:cu
-    * set :buildBlock:lead :unpackCfg:pb
-    * set :buildBlock:graphite :unpackCfg:gr
-    * set :buildBlock:silicon :unpackCfg:si
-    * set :buildBlock:titanium :unpackCfg:ti
-    * set :buildBlock:metaglass :unpackCfg:mg
   137 set :buildBlock:rotation :unpackCfg:rotation
   138 set :buildBlock:config processor2
   139 label *label490
 
   156 setaddr :buildBlockAt*retaddr *label492 (h:*label492)
   157 call *label16 *invalid :buildBlockAt*retval (m:*label492) (h:*label492)
   158 label *label492
-    * set :buildBlock*retval :buildBlockAt*retval
   159 jump *label493 always
   160 label *label493
   161 set *tmp127 :buildBlockAt*retval
 
  1319 set :buildBlock:block :unpackCfg:type
  1320 set :buildBlock:x *tmp438
  1321 set :buildBlock:y *tmp439
-    * set :buildBlock:copper :unpackCfg:cu
-    * set :buildBlock:lead :unpackCfg:pb
-    * set :buildBlock:graphite :unpackCfg:gr
-    * set :buildBlock:silicon :unpackCfg:si
-    * set :buildBlock:titanium :unpackCfg:ti
-    * set :buildBlock:metaglass :unpackCfg:mg
  1322 set :buildBlock:rotation :unpackCfg:rotation
  1323 set :buildBlock:config null
  1324 label *label494
 
  1341 setaddr :buildBlockAt*retaddr *label496 (h:*label496)
  1342 call *label16 *invalid :buildBlockAt*retval (m:*label496) (h:*label496)
  1343 label *label496
-    * set :buildBlock*retval :buildBlockAt*retval
  1344 jump *label497 always
  1345 label *label497
  1346 set :buildBlockFromCfg*retval :buildBlockAt*retval

Modifications by Inline function call at CoreBuilder.mnd:279:5 (+19 instructions):
 
  1311 end
  1312 label *label18
  1313 set :unpackCfg:cfg :buildBlockFromCfg:cfg
-    * setaddr :unpackCfg*retaddr *label338 (h:*label338)
-    * call *label13 *invalid :unpackCfg*retval (m:*label338) (h:*label338)
-    * label *label338
+ 1314 label *label498
+ 1315 read *tmp245 :unpackCfg:cfg 0
+ 1316 op sub *tmp246 *tmp245 35
+ 1317 lookup block :unpackCfg:type *tmp246
+ 1318 read *tmp249 :unpackCfg:cfg 1
+ 1319 op sub :unpackCfg:x *tmp249 42
+ 1320 read *tmp253 :unpackCfg:cfg 2
+ 1321 op sub :unpackCfg:y *tmp253 42
+ 1322 read *tmp257 :unpackCfg:cfg 3
+ 1323 op sub :unpackCfg:cu *tmp257 35
+ 1324 read *tmp260 :unpackCfg:cfg 4
+ 1325 op sub :unpackCfg:pb *tmp260 35
+ 1326 read *tmp263 :unpackCfg:cfg 5
+ 1327 op sub :unpackCfg:gr *tmp263 35
+ 1328 read *tmp266 :unpackCfg:cfg 6
+ 1329 op sub :unpackCfg:si *tmp266 35
+ 1330 read *tmp269 :unpackCfg:cfg 7
+ 1331 op sub :unpackCfg:ti *tmp269 35
+ 1332 read *tmp272 :unpackCfg:cfg 8
+ 1333 op sub :unpackCfg:mg *tmp272 35
+ 1334 read *tmp275 :unpackCfg:cfg 9
+ 1335 op sub :unpackCfg:rotation *tmp275 35
+ 1336 label *label499
  1337 op add *tmp438 .coreX :unpackCfg:x
  1338 op add *tmp439 .coreY :unpackCfg:y
  1339 set :buildBlock:block :unpackCfg:type

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1312 label *label18
  1313 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1314 label *label498
-    * read *tmp245 :unpackCfg:cfg 0
+ 1315 read *tmp245 :buildBlockFromCfg:cfg 0
  1316 op sub *tmp246 *tmp245 35
  1317 lookup block :unpackCfg:type *tmp246
-    * read *tmp249 :unpackCfg:cfg 1
+ 1318 read *tmp249 :buildBlockFromCfg:cfg 1
  1319 op sub :unpackCfg:x *tmp249 42
-    * read *tmp253 :unpackCfg:cfg 2
+ 1320 read *tmp253 :buildBlockFromCfg:cfg 2
  1321 op sub :unpackCfg:y *tmp253 42
-    * read *tmp257 :unpackCfg:cfg 3
+ 1322 read *tmp257 :buildBlockFromCfg:cfg 3
  1323 op sub :unpackCfg:cu *tmp257 35
-    * read *tmp260 :unpackCfg:cfg 4
+ 1324 read *tmp260 :buildBlockFromCfg:cfg 4
  1325 op sub :unpackCfg:pb *tmp260 35
-    * read *tmp263 :unpackCfg:cfg 5
+ 1326 read *tmp263 :buildBlockFromCfg:cfg 5
  1327 op sub :unpackCfg:gr *tmp263 35
-    * read *tmp266 :unpackCfg:cfg 6
+ 1328 read *tmp266 :buildBlockFromCfg:cfg 6
  1329 op sub :unpackCfg:si *tmp266 35
-    * read *tmp269 :unpackCfg:cfg 7
+ 1330 read *tmp269 :buildBlockFromCfg:cfg 7
  1331 op sub :unpackCfg:ti *tmp269 35
-    * read *tmp272 :unpackCfg:cfg 8
+ 1332 read *tmp272 :buildBlockFromCfg:cfg 8
  1333 op sub :unpackCfg:mg *tmp272 35
-    * read *tmp275 :unpackCfg:cfg 9
+ 1334 read *tmp275 :buildBlockFromCfg:cfg 9
  1335 op sub :unpackCfg:rotation *tmp275 35
  1336 label *label499
  1337 op add *tmp438 .coreX :unpackCfg:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1310 return :buildBlockAt*retaddr
  1311 end
  1312 label *label18
-    * set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1313 label *label498
  1314 read *tmp245 :buildBlockFromCfg:cfg 0
  1315 op sub *tmp246 *tmp245 35

Modifications by Inline function call at CoreBuilder.mnd:377:18 (+6 instructions):
 
    24 write false processor5 ":startPolyController*finished"
    25 write 1 processor5 "@counter"
    26 set :findUnits:type @flare
-    * setaddr :findUnits*retaddr *label25 (h:*label25)
-    * call *label20 *invalid :findUnits*retval (m:*label25) (h:*label25)
-    * label *label25
+   27 label *label500
+   28 set :findUnits:count 0
+   29 ubind :findUnits:type
+   30 set :findUnits:firstUnit @unit
+   31 jump *label504 equal :findUnits:firstUnit null
+   32 label *label501
+   33 op add :findUnits:count :findUnits:count 1
+   34 ubind :findUnits:type
+   35 label *label502
+   36 jump *label501 notEqual @unit :findUnits:firstUnit
+   37 label *label503
+   38 label *label504
+   39 label *label505
+   40 set :findUnits*retval :findUnits:count
+   41 label *label506
    42 write :findUnits:count processor1 ".displayFlares"
    43 set :flares :findUnits*retval
    44 set :findUnits:type @mono

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    26 set :findUnits:type @flare
    27 label *label500
    28 set :findUnits:count 0
-    * ubind :findUnits:type
+   29 ubind @flare
    30 set :findUnits:firstUnit @unit
    31 jump *label504 equal :findUnits:firstUnit null
    32 label *label501
    33 op add :findUnits:count :findUnits:count 1
-    * ubind :findUnits:type
+   34 ubind @flare
    35 label *label502
    36 jump *label501 notEqual @unit :findUnits:firstUnit
    37 label *label503
 
    40 set :findUnits*retval :findUnits:count
    41 label *label506
    42 write :findUnits:count processor1 ".displayFlares"
-    * set :flares :findUnits*retval
+   43 set :flares :findUnits:count
    44 set :findUnits:type @mono
    45 setaddr :findUnits*retaddr *label26 (h:*label26)
    46 call *label20 *invalid :findUnits*retval (m:*label26) (h:*label26)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
    23 write @unit processor5 ":startPolyController:aBuilder"
    24 write false processor5 ":startPolyController*finished"
    25 write 1 processor5 "@counter"
-    * set :findUnits:type @flare
    26 label *label500
    27 set :findUnits:count 0
    28 ubind @flare
 
    36 label *label503
    37 label *label504
    38 label *label505
-    * set :findUnits*retval :findUnits:count
    39 label *label506
    40 write :findUnits:count processor1 ".displayFlares"
    41 set :flares :findUnits:count

Modifications by Inline function 'findUnits' defined at CoreBuilder.mnd:341:1 (+2 instructions):
 
    40 write :findUnits:count processor1 ".displayFlares"
    41 set :flares :findUnits:count
    42 set :findUnits:type @mono
-    * setaddr :findUnits*retaddr *label26 (h:*label26)
-    * call *label20 *invalid :findUnits*retval (m:*label26) (h:*label26)
-    * label *label26
+   43 label *label507
+   44 set :findUnits:count 0
+   45 ubind :findUnits:type
+   46 set :findUnits:firstUnit @unit
+   47 jump *label511 equal :findUnits:firstUnit null
+   48 label *label508
+   49 op add :findUnits:count :findUnits:count 1
+   50 ubind :findUnits:type
+   51 label *label509
+   52 jump *label508 notEqual @unit :findUnits:firstUnit
+   53 label *label510
+   54 label *label511
+   55 label *label512
+   56 set :findUnits*retval :findUnits:count
+   57 label *label513
    58 write :findUnits:count processor1 ".displayMonos"
    59 set :monos :findUnits*retval
    60 set :findUnits:type @poly
-    * setaddr :findUnits*retaddr *label27 (h:*label27)
-    * call *label20 *invalid :findUnits*retval (m:*label27) (h:*label27)
-    * label *label27
+   61 label *label514
+   62 set :findUnits:count 0
+   63 ubind :findUnits:type
+   64 set :findUnits:firstUnit @unit
+   65 jump *label518 equal :findUnits:firstUnit null
+   66 label *label515
+   67 op add :findUnits:count :findUnits:count 1
+   68 ubind :findUnits:type
+   69 label *label516
+   70 jump *label515 notEqual @unit :findUnits:firstUnit
+   71 label *label517
+   72 label *label518
+   73 label *label519
+   74 set :findUnits*retval :findUnits:count
+   75 label *label520
    76 write :findUnits:count processor1 ".displayPolys"
    77 set :polys :findUnits*retval
    78 set :buildBlockFromCfg:cfg "#'+nA#####"
 
  1419 label *label340
  1420 return :meetTarget.1*retaddr
  1421 end
-    * label *label20
-    * set :findUnits:count 0
-    * ubind :findUnits:type
-    * set :findUnits:firstUnit @unit
-    * jump *label344 equal :findUnits:firstUnit null
-    * label *label346
-    * op add :findUnits:count :findUnits:count 1
-    * ubind :findUnits:type
-    * label *label347
-    * jump *label346 notEqual @unit :findUnits:firstUnit
-    * label *label348
-    * label *label344
-    * label *label345
-    * set :findUnits*retval :findUnits:count
-    * label *label343
-    * return :findUnits*retaddr
-    * end
  1422 label *label21
  1423 set :meetTarget:block 0
  1424 set :meetTarget:copper 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    42 set :findUnits:type @mono
    43 label *label507
    44 set :findUnits:count 0
-    * ubind :findUnits:type
+   45 ubind @mono
    46 set :findUnits:firstUnit @unit
    47 jump *label511 equal :findUnits:firstUnit null
    48 label *label508
    49 op add :findUnits:count :findUnits:count 1
-    * ubind :findUnits:type
+   50 ubind @mono
    51 label *label509
    52 jump *label508 notEqual @unit :findUnits:firstUnit
    53 label *label510
 
    56 set :findUnits*retval :findUnits:count
    57 label *label513
    58 write :findUnits:count processor1 ".displayMonos"
-    * set :monos :findUnits*retval
+   59 set :monos :findUnits:count
    60 set :findUnits:type @poly
    61 label *label514
    62 set :findUnits:count 0
-    * ubind :findUnits:type
+   63 ubind @poly
    64 set :findUnits:firstUnit @unit
    65 jump *label518 equal :findUnits:firstUnit null
    66 label *label515
    67 op add :findUnits:count :findUnits:count 1
-    * ubind :findUnits:type
+   68 ubind @poly
    69 label *label516
    70 jump *label515 notEqual @unit :findUnits:firstUnit
    71 label *label517
 
    74 set :findUnits*retval :findUnits:count
    75 label *label520
    76 write :findUnits:count processor1 ".displayPolys"
-    * set :polys :findUnits*retval
+   77 set :polys :findUnits:count
    78 set :buildBlockFromCfg:cfg "#'+nA#####"
    79 setaddr :buildBlockFromCfg*retaddr *label28 (h:*label28)
    80 call *label18 *invalid :buildBlockFromCfg*retval (m:*label28) (h:*label28)
 
   205 write .press :buildBlockAt*retval ".press"
   206 write :monos :buildBlockAt*retval ".monos"
   207 write :flares :buildBlockAt*retval ".flares"
-    * write :polys :buildBlockAt*retval ".polys"
+  208 write :findUnits*retval :buildBlockAt*retval ".polys"
   209 set :buildBlockFromCfg:cfg "g)'%)#####"
   210 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   211 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    39 label *label506
    40 write :findUnits:count processor1 ".displayFlares"
    41 set :flares :findUnits:count
-    * set :findUnits:type @mono
    42 label *label507
    43 set :findUnits:count 0
    44 ubind @mono
 
    52 label *label510
    53 label *label511
    54 label *label512
-    * set :findUnits*retval :findUnits:count
    55 label *label513
    56 write :findUnits:count processor1 ".displayMonos"
    57 set :monos :findUnits:count
-    * set :findUnits:type @poly
    58 label *label514
    59 set :findUnits:count 0
    60 ubind @poly
 
    71 set :findUnits*retval :findUnits:count
    72 label *label520
    73 write :findUnits:count processor1 ".displayPolys"
-    * set :polys :findUnits:count
    74 set :buildBlockFromCfg:cfg "#'+nA#####"
    75 setaddr :buildBlockFromCfg*retaddr *label28 (h:*label28)
    76 call *label18 *invalid :buildBlockFromCfg*retval (m:*label28) (h:*label28)
 
   201 write .press :buildBlockAt*retval ".press"
   202 write :monos :buildBlockAt*retval ".monos"
   203 write :flares :buildBlockAt*retval ".flares"
-    * write :findUnits*retval :buildBlockAt*retval ".polys"
+  204 write :findUnits:count :buildBlockAt*retval ".polys"
   205 set :buildBlockFromCfg:cfg "g)'%)#####"
   206 setaddr :buildBlockFromCfg*retaddr *label47 (h:*label47)
   207 call *label18 *invalid :buildBlockFromCfg*retval (m:*label47) (h:*label47)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
    68 label *label517
    69 label *label518
    70 label *label519
-    * set :findUnits*retval :findUnits:count
    71 label *label520
    72 write :findUnits:count processor1 ".displayPolys"
    73 set :buildBlockFromCfg:cfg "#'+nA#####"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-9 instructions):
 
   136 setaddr :buildBlockAt*retaddr *label40 (h:*label40)
   137 call *label16 *invalid :buildBlockAt*retval (m:*label40) (h:*label40)
   138 label *label40
-    * jump *label34 always
   139 label *label34
   140 set .titaniumDrill :buildBlockAt*retval
   141 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
   184 setaddr :buildBlockAt*retaddr *label492 (h:*label492)
   185 call *label16 *invalid :buildBlockAt*retval (m:*label492) (h:*label492)
   186 label *label492
-    * jump *label493 always
   187 label *label493
   188 set *tmp127 :buildBlockAt*retval
-    * jump *label44 always
   189 label *label44
   190 set .controller :buildBlockAt*retval
   191 write processor1 :buildBlockAt*retval ".display"
 
   945 sensor *tmp331 .core @titanium
   946 op sub *tmp332 .targetTitanium *tmp331
   947 op min *tmp330 7 *tmp332
-    * jump *label233 always
   948 label *label233
   949 sensor *tmp334 .titaniumDrill @titanium
   950 jump *label234 greaterThanEq *tmp334 *tmp330
 
   969 set :mineOre.1:ore @sand
   970 jump *label246 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   971 set :mineOre.1:ore @coal
-    * jump *label246 always
   972 label *label246
   973 setaddr :mineOre.1*retaddr *label247 (h:*label247)
   974 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
 
  1012 set :mineOre.1:ore @sand
  1013 jump *label262 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1014 set :mineOre.1:ore @coal
-    * jump *label262 always
  1015 label *label262
  1016 setaddr :mineOre.1*retaddr *label263 (h:*label263)
  1017 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
 
  1328 label *label333
  1329 label *label332
  1330 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label312 always
  1331 label *label312
  1332 return :buildBlockAt*retaddr
  1333 end
 
  1382 setaddr :buildBlockAt*retaddr *label496 (h:*label496)
  1383 call *label16 *invalid :buildBlockAt*retval (m:*label496) (h:*label496)
  1384 label *label496
-    * jump *label497 always
  1385 label *label497
  1386 set :buildBlockFromCfg*retval :buildBlockAt*retval
-    * jump *label337 always
  1387 label *label337
  1388 return :buildBlockFromCfg*retaddr
  1389 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1133 label *label15
  1134 label *label351
  1135 op sign *tmp383 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp383
+ 1136 set :meetTarget:count *tmp383
  1137 label *label352
  1138 label *label355
  1139 op sign *tmp383 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1132 end
  1133 label *label15
  1134 label *label351
-    * op sign *tmp383 :meetTarget:copper
-    * set :meetTarget:count *tmp383
+ 1135 op sign :meetTarget:count :meetTarget:copper
  1136 label *label352
  1137 label *label355
  1138 op sign *tmp383 :meetTarget:lead

Modifications by Inline function 'unpackCfg' defined at CoreBuilder.mnd:89:1 (+15 instructions):
 
   154 label *label43
   155 set .graphiteSurplus 100
   156 set :unpackCfg:cfg "®-.}U#U###"
-    * setaddr :unpackCfg*retaddr *label45 (h:*label45)
-    * call *label13 *invalid :unpackCfg*retval (m:*label45) (h:*label45)
-    * label *label45
+  157 label *label521
+  158 read *tmp245 :unpackCfg:cfg 0
+  159 op sub *tmp246 *tmp245 35
+  160 lookup block :unpackCfg:type *tmp246
+  161 read *tmp249 :unpackCfg:cfg 1
+  162 op sub :unpackCfg:x *tmp249 42
+  163 read *tmp253 :unpackCfg:cfg 2
+  164 op sub :unpackCfg:y *tmp253 42
+  165 read *tmp257 :unpackCfg:cfg 3
+  166 op sub :unpackCfg:cu *tmp257 35
+  167 read *tmp260 :unpackCfg:cfg 4
+  168 op sub :unpackCfg:pb *tmp260 35
+  169 read *tmp263 :unpackCfg:cfg 5
+  170 op sub :unpackCfg:gr *tmp263 35
+  171 read *tmp266 :unpackCfg:cfg 6
+  172 op sub :unpackCfg:si *tmp266 35
+  173 read *tmp269 :unpackCfg:cfg 7
+  174 op sub :unpackCfg:ti *tmp269 35
+  175 read *tmp272 :unpackCfg:cfg 8
+  176 op sub :unpackCfg:mg *tmp272 35
+  177 read *tmp275 :unpackCfg:cfg 9
+  178 op sub :unpackCfg:rotation *tmp275 35
+  179 label *label522
   180 op add *tmp128 .coreX :unpackCfg:x
   181 op add *tmp129 .coreY :unpackCfg:y
   182 set :buildBlock:block :unpackCfg:type
 
   788 label *label177
   789 return :mineOre.1*retaddr
   790 end
-    * label *label13
-    * read *tmp245 :unpackCfg:cfg 0
-    * op sub *tmp246 *tmp245 35
-    * lookup block :unpackCfg:type *tmp246
-    * read *tmp249 :unpackCfg:cfg 1
-    * op sub :unpackCfg:x *tmp249 42
-    * read *tmp253 :unpackCfg:cfg 2
-    * op sub :unpackCfg:y *tmp253 42
-    * read *tmp257 :unpackCfg:cfg 3
-    * op sub :unpackCfg:cu *tmp257 35
-    * read *tmp260 :unpackCfg:cfg 4
-    * op sub :unpackCfg:pb *tmp260 35
-    * read *tmp263 :unpackCfg:cfg 5
-    * op sub :unpackCfg:gr *tmp263 35
-    * read *tmp266 :unpackCfg:cfg 6
-    * op sub :unpackCfg:si *tmp266 35
-    * read *tmp269 :unpackCfg:cfg 7
-    * op sub :unpackCfg:ti *tmp269 35
-    * read *tmp272 :unpackCfg:cfg 8
-    * op sub :unpackCfg:mg *tmp272 35
-    * read *tmp275 :unpackCfg:cfg 9
-    * op sub :unpackCfg:rotation *tmp275 35
-    * label *label180
-    * return :unpackCfg*retaddr
-    * end
   791 label *label14
   792 jump *label182 notEqual .flareControllerStarted false
   793 read *tmp72 .controller ".flares"
 
  1383 end
  1384 label *label19
  1385 set :unpackCfg:cfg :meetTarget.1:cfg
-    * setaddr :unpackCfg*retaddr *label341 (h:*label341)
-    * call *label13 *invalid :unpackCfg*retval (m:*label341) (h:*label341)
-    * label *label341
+ 1386 label *label523
+ 1387 read *tmp245 :unpackCfg:cfg 0
+ 1388 op sub *tmp246 *tmp245 35
+ 1389 lookup block :unpackCfg:type *tmp246
+ 1390 read *tmp249 :unpackCfg:cfg 1
+ 1391 op sub :unpackCfg:x *tmp249 42
+ 1392 read *tmp253 :unpackCfg:cfg 2
+ 1393 op sub :unpackCfg:y *tmp253 42
+ 1394 read *tmp257 :unpackCfg:cfg 3
+ 1395 op sub :unpackCfg:cu *tmp257 35
+ 1396 read *tmp260 :unpackCfg:cfg 4
+ 1397 op sub :unpackCfg:pb *tmp260 35
+ 1398 read *tmp263 :unpackCfg:cfg 5
+ 1399 op sub :unpackCfg:gr *tmp263 35
+ 1400 read *tmp266 :unpackCfg:cfg 6
+ 1401 op sub :unpackCfg:si *tmp266 35
+ 1402 read *tmp269 :unpackCfg:cfg 7
+ 1403 op sub :unpackCfg:ti *tmp269 35
+ 1404 read *tmp272 :unpackCfg:cfg 8
+ 1405 op sub :unpackCfg:mg *tmp272 35
+ 1406 read *tmp275 :unpackCfg:cfg 9
+ 1407 op sub :unpackCfg:rotation *tmp275 35
+ 1408 label *label524
  1409 set :meetTarget:block :unpackCfg:type
  1410 set :meetTarget:copper :unpackCfg:cu
  1411 set :meetTarget:lead :unpackCfg:pb

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-4 instructions):
     0 set .ERROR ""
-    * set .press null
-    * set .generator null
-    * set .battery null
-    * set .smelter null
     1 set .titaniumDrill null
     2 set .unloader1 null
     3 set .leadSurplus 0
 
   151 set .graphiteSurplus 100
   152 set :unpackCfg:cfg "®-.}U#U###"
   153 label *label521
-    * read *tmp245 :unpackCfg:cfg 0
+  154 read *tmp245 "®-.}U#U###" 0
   155 op sub *tmp246 *tmp245 35
   156 lookup block :unpackCfg:type *tmp246
-    * read *tmp249 :unpackCfg:cfg 1
+  157 read *tmp249 "®-.}U#U###" 1
   158 op sub :unpackCfg:x *tmp249 42
-    * read *tmp253 :unpackCfg:cfg 2
+  159 read *tmp253 "®-.}U#U###" 2
   160 op sub :unpackCfg:y *tmp253 42
-    * read *tmp257 :unpackCfg:cfg 3
+  161 read *tmp257 "®-.}U#U###" 3
   162 op sub :unpackCfg:cu *tmp257 35
-    * read *tmp260 :unpackCfg:cfg 4
+  163 read *tmp260 "®-.}U#U###" 4
   164 op sub :unpackCfg:pb *tmp260 35
-    * read *tmp263 :unpackCfg:cfg 5
+  165 read *tmp263 "®-.}U#U###" 5
   166 op sub :unpackCfg:gr *tmp263 35
-    * read *tmp266 :unpackCfg:cfg 6
+  167 read *tmp266 "®-.}U#U###" 6
   168 op sub :unpackCfg:si *tmp266 35
-    * read *tmp269 :unpackCfg:cfg 7
+  169 read *tmp269 "®-.}U#U###" 7
   170 op sub :unpackCfg:ti *tmp269 35
-    * read *tmp272 :unpackCfg:cfg 8
+  171 read *tmp272 "®-.}U#U###" 8
   172 op sub :unpackCfg:mg *tmp272 35
-    * read *tmp275 :unpackCfg:cfg 9
+  173 read *tmp275 "®-.}U#U###" 9
   174 op sub :unpackCfg:rotation *tmp275 35
   175 label *label522
   176 op add *tmp128 .coreX :unpackCfg:x
 
  1380 label *label19
  1381 set :unpackCfg:cfg :meetTarget.1:cfg
  1382 label *label523
-    * read *tmp245 :unpackCfg:cfg 0
+ 1383 read *tmp245 :meetTarget.1:cfg 0
  1384 op sub *tmp246 *tmp245 35
  1385 lookup block :unpackCfg:type *tmp246
-    * read *tmp249 :unpackCfg:cfg 1
+ 1386 read *tmp249 :meetTarget.1:cfg 1
  1387 op sub :unpackCfg:x *tmp249 42
-    * read *tmp253 :unpackCfg:cfg 2
+ 1388 read *tmp253 :meetTarget.1:cfg 2
  1389 op sub :unpackCfg:y *tmp253 42
-    * read *tmp257 :unpackCfg:cfg 3
+ 1390 read *tmp257 :meetTarget.1:cfg 3
  1391 op sub :unpackCfg:cu *tmp257 35
-    * read *tmp260 :unpackCfg:cfg 4
+ 1392 read *tmp260 :meetTarget.1:cfg 4
  1393 op sub :unpackCfg:pb *tmp260 35
-    * read *tmp263 :unpackCfg:cfg 5
+ 1394 read *tmp263 :meetTarget.1:cfg 5
  1395 op sub :unpackCfg:gr *tmp263 35
-    * read *tmp266 :unpackCfg:cfg 6
+ 1396 read *tmp266 :meetTarget.1:cfg 6
  1397 op sub :unpackCfg:si *tmp266 35
-    * read *tmp269 :unpackCfg:cfg 7
+ 1398 read *tmp269 :meetTarget.1:cfg 7
  1399 op sub :unpackCfg:ti *tmp269 35
-    * read *tmp272 :unpackCfg:cfg 8
+ 1400 read *tmp272 :meetTarget.1:cfg 8
  1401 op sub :unpackCfg:mg *tmp272 35
-    * read *tmp275 :unpackCfg:cfg 9
+ 1402 read *tmp275 :meetTarget.1:cfg 9
  1403 op sub :unpackCfg:rotation *tmp275 35
  1404 label *label524
  1405 set :meetTarget:block :unpackCfg:type

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   149 call *label18 *invalid :buildBlockFromCfg*retval (m:*label43) (h:*label43)
   150 label *label43
   151 set .graphiteSurplus 100
-    * set :unpackCfg:cfg "®-.}U#U###"
   152 label *label521
   153 read *tmp245 "®-.}U#U###" 0
   154 op sub *tmp246 *tmp245 35
 
  1377 return :buildBlockFromCfg*retaddr
  1378 end
  1379 label *label19
-    * set :unpackCfg:cfg :meetTarget.1:cfg
  1380 label *label523
  1381 read *tmp245 :meetTarget.1:cfg 0
  1382 op sub *tmp246 *tmp245 35

Modifications by Inline function 'buildUnits' defined at CoreBuilder.mnd:354:1 (+7 instructions):
 
   236 write 30 *tmp127 ".kilnTarget"
   237 set .leadSurplus 20
   238 set .siliconSurplus 20
-    * setaddr :buildUnits*retaddr *label50 (h:*label50)
-    * call *label21 *invalid :buildUnits*retval (m:*label50) (h:*label50)
-    * label *label50
+  239 label *label525
+  240 set :meetTarget:block 0
+  241 set :meetTarget:copper 0
+  242 set :meetTarget:lead 0
+  243 set :meetTarget:graphite 0
+  244 set :meetTarget:silicon 0
+  245 set :meetTarget:titanium 0
+  246 set :meetTarget:metaglass 0
+  247 setaddr :meetTarget*retaddr *label526 (h:*label526)
+  248 call *label15 *invalid :meetTarget*retval (m:*label526) (h:*label526)
+  249 label *label526
+  250 write 0 .display ".totalTargets"
+  251 write null .display ".nextBlock"
+  252 write 0 .controller ".leadReserve"
+  253 write 0 .controller ".siliconReserve"
+  254 label *label527
   255 label *label51
   256 setaddr :supplyBase*retaddr *label54 (h:*label54)
   257 call *label14 *invalid :supplyBase*retval (m:*label54) (h:*label54)
 
   325 label *label69
   326 write :buildBlockFromCfg*retval *tmp127 ".reconstructor"
   327 write :buildBlockFromCfg*retval processor1 ".reconstructor"
-    * setaddr :buildUnits*retaddr *label70 (h:*label70)
-    * call *label21 *invalid :buildUnits*retval (m:*label70) (h:*label70)
-    * label *label70
+  328 label *label528
+  329 set :meetTarget:block 0
+  330 set :meetTarget:copper 0
+  331 set :meetTarget:lead 0
+  332 set :meetTarget:graphite 0
+  333 set :meetTarget:silicon 0
+  334 set :meetTarget:titanium 0
+  335 set :meetTarget:metaglass 0
+  336 setaddr :meetTarget*retaddr *label529 (h:*label529)
+  337 call *label15 *invalid :meetTarget*retval (m:*label529) (h:*label529)
+  338 label *label529
+  339 write 0 .display ".totalTargets"
+  340 write null .display ".nextBlock"
+  341 write 0 .controller ".leadReserve"
+  342 write 0 .controller ".siliconReserve"
+  343 label *label530
   344 set .siliconSurplus 1000
   345 set .metaglassSurplus 200
   346 write 3 *tmp127 ".polyTarget"
 
  1439 label *label340
  1440 return :meetTarget.1*retaddr
  1441 end
-    * label *label21
-    * set :meetTarget:block 0
-    * set :meetTarget:copper 0
-    * set :meetTarget:lead 0
-    * set :meetTarget:graphite 0
-    * set :meetTarget:silicon 0
-    * set :meetTarget:titanium 0
-    * set :meetTarget:metaglass 0
-    * setaddr :meetTarget*retaddr *label350 (h:*label350)
-    * call *label15 *invalid :meetTarget*retval (m:*label350) (h:*label350)
-    * label *label350
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
-    * label *label349
-    * return :buildUnits*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   247 setaddr :meetTarget*retaddr *label526 (h:*label526)
   248 call *label15 *invalid :meetTarget*retval (m:*label526) (h:*label526)
   249 label *label526
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  250 write 0 processor1 ".totalTargets"
+  251 write null processor1 ".nextBlock"
   252 write 0 .controller ".leadReserve"
   253 write 0 .controller ".siliconReserve"
   254 label *label527
 
   336 setaddr :meetTarget*retaddr *label529 (h:*label529)
   337 call *label15 *invalid :meetTarget*retval (m:*label529) (h:*label529)
   338 label *label529
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  339 write 0 processor1 ".totalTargets"
+  340 write null processor1 ".nextBlock"
   341 write 0 .controller ".leadReserve"
   342 write 0 .controller ".siliconReserve"
   343 label *label530

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    10 ubind @poly
    11 set .builder @unit
    12 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label23
    13 jump *label22 equal .core null
-    * label *label24
    14 set .display processor1
    15 set .flareController processor3
    16 write .core processor5 ":startPolyController:aCore"
    17 write @unit processor5 ":startPolyController:aBuilder"
    18 write false processor5 ":startPolyController*finished"
    19 write 1 processor5 "@counter"
-    * label *label500
    20 set :findUnits:count 0
    21 ubind @flare
    22 set :findUnits:firstUnit @unit
 
    24 label *label501
    25 op add :findUnits:count :findUnits:count 1
    26 ubind @flare
-    * label *label502
    27 jump *label501 notEqual @unit :findUnits:firstUnit
-    * label *label503
    28 label *label504
-    * label *label505
-    * label *label506
    29 write :findUnits:count processor1 ".displayFlares"
    30 set :flares :findUnits:count
-    * label *label507
    31 set :findUnits:count 0
    32 ubind @mono
    33 set :findUnits:firstUnit @unit
 
    35 label *label508
    36 op add :findUnits:count :findUnits:count 1
    37 ubind @mono
-    * label *label509
    38 jump *label508 notEqual @unit :findUnits:firstUnit
-    * label *label510
    39 label *label511
-    * label *label512
-    * label *label513
    40 write :findUnits:count processor1 ".displayMonos"
    41 set :monos :findUnits:count
-    * label *label514
    42 set :findUnits:count 0
    43 ubind @poly
    44 set :findUnits:firstUnit @unit
 
    46 label *label515
    47 op add :findUnits:count :findUnits:count 1
    48 ubind @poly
-    * label *label516
    49 jump *label515 notEqual @unit :findUnits:firstUnit
-    * label *label517
    50 label *label518
-    * label *label519
-    * label *label520
    51 write :findUnits:count processor1 ".displayPolys"
    52 set :buildBlockFromCfg:cfg "#'+nA#####"
    53 setaddr :buildBlockFromCfg*retaddr *label28 (h:*label28)
 
   102 jump *label37 notEqual :buildTitaniumDrill:result false
   103 set .ERROR "Cannot locate spot for titanium drill"
   104 stop
-    * label *label39
   105 label *label37
-    * label *label38
   106 write @pneumatic-drill processor1 ".nextBlock"
   107 set :buildBlockAt:block @pneumatic-drill
   108 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   113 setaddr :buildBlockAt*retaddr *label40 (h:*label40)
   114 call *label16 *invalid :buildBlockAt*retval (m:*label40) (h:*label40)
   115 label *label40
-    * label *label34
   116 set .titaniumDrill :buildBlockAt*retval
   117 write :buildBlockAt*retval processor1 ".titaniumDrill"
   118 set :buildBlockFromCfg:cfg "*,###A<##"
 
   129 call *label18 *invalid :buildBlockFromCfg*retval (m:*label43) (h:*label43)
   130 label *label43
   131 set .graphiteSurplus 100
-    * label *label521
   132 read *tmp245 "®-.}U#U###" 0
   133 op sub *tmp246 *tmp245 35
   134 lookup block :unpackCfg:type *tmp246
 
   150 op sub :unpackCfg:mg *tmp272 35
   151 read *tmp275 "®-.}U#U###" 9
   152 op sub :unpackCfg:rotation *tmp275 35
-    * label *label522
   153 op add *tmp128 .coreX :unpackCfg:x
   154 op add *tmp129 .coreY :unpackCfg:y
   155 set :buildBlock:block :unpackCfg:type
 
   157 set :buildBlock:y *tmp129
   158 set :buildBlock:rotation :unpackCfg:rotation
   159 set :buildBlock:config processor2
-    * label *label490
   160 set :meetTarget:block :unpackCfg:type
   161 set :meetTarget:copper :unpackCfg:cu
   162 set :meetTarget:lead :unpackCfg:pb
 
   176 setaddr :buildBlockAt*retaddr *label492 (h:*label492)
   177 call *label16 *invalid :buildBlockAt*retval (m:*label492) (h:*label492)
   178 label *label492
-    * label *label493
   179 set *tmp127 :buildBlockAt*retval
-    * label *label44
   180 set .controller :buildBlockAt*retval
   181 write processor1 :buildBlockAt*retval ".display"
   182 write .core :buildBlockAt*retval ".core"
 
   211 write 30 *tmp127 ".kilnTarget"
   212 set .leadSurplus 20
   213 set .siliconSurplus 20
-    * label *label525
   214 set :meetTarget:block 0
   215 set :meetTarget:copper 0
   216 set :meetTarget:lead 0
 
   225 write null processor1 ".nextBlock"
   226 write 0 .controller ".leadReserve"
   227 write 0 .controller ".siliconReserve"
-    * label *label527
   228 label *label51
   229 setaddr :supplyBase*retaddr *label54 (h:*label54)
   230 call *label14 *invalid :supplyBase*retval (m:*label54) (h:*label54)
 
   233 jump *label55 greaterThanEq *tmp133 300
   234 jump *label53 always
   235 label *label55
-    * label *label56
-    * label *label52
   236 read *tmp73 *tmp127 ".monos"
   237 jump *label51 lessThan *tmp73 3
   238 label *label53
 
   296 label *label69
   297 write :buildBlockFromCfg*retval *tmp127 ".reconstructor"
   298 write :buildBlockFromCfg*retval processor1 ".reconstructor"
-    * label *label528
   299 set :meetTarget:block 0
   300 set :meetTarget:copper 0
   301 set :meetTarget:lead 0
 
   310 write null processor1 ".nextBlock"
   311 write 0 .controller ".leadReserve"
   312 write 0 .controller ".siliconReserve"
-    * label *label530
   313 set .siliconSurplus 1000
   314 set .metaglassSurplus 200
   315 write 3 *tmp127 ".polyTarget"
-    * label *label71
   316 read *tmp74 *tmp127 ".polys"
   317 jump *label73 greaterThanEq *tmp74 3
   318 label *label488
   319 setaddr :supplyBase*retaddr *label74 (h:*label74)
   320 call *label14 *invalid :supplyBase*retval (m:*label74) (h:*label74)
   321 label *label74
-    * label *label72
   322 read *tmp74 *tmp127 ".polys"
   323 jump *label488 lessThan *tmp74 3
   324 label *label73
   325 write 8 *tmp127 ".flareTarget"
   326 write 6 *tmp127 ".polyTarget"
-    * label *label75
   327 read *tmp72 *tmp127 ".flares"
   328 jump *label77 greaterThanEq *tmp72 2
   329 label *label489
   330 setaddr :supplyBase*retaddr *label78 (h:*label78)
   331 call *label14 *invalid :supplyBase*retval (m:*label78) (h:*label78)
   332 label *label78
-    * label *label76
   333 read *tmp72 *tmp127 ".flares"
   334 jump *label489 lessThan *tmp72 2
   335 label *label77
 
   353 setaddr :supplyBase*retaddr *label83 (h:*label83)
   354 call *label14 *invalid :supplyBase*retval (m:*label83) (h:*label83)
   355 label *label83
-    * label *label81
   356 read *tmp164 processor4 ":findDrillLocation*finished"
   357 jump *label80 equal *tmp164 false
-    * label *label82
   358 write null processor1 ".nextBlock"
   359 ubind @flare
   360 jump *label85 notEqual @unit null
   361 jump *label84 always
   362 label *label85
-    * label *label86
   363 set :findFreeUnit:first_unit @unit
   364 label *label87
   365 sensor *tmp169 @unit @controlled
 
   372 jump *label92 notEqual *tmp172 1
   373 set :findFreeUnit:first_unit @unit
   374 label *label92
-    * label *label93
   375 label *label91
   376 ubind @flare
-    * label *label88
   377 jump *label87 notEqual :findFreeUnit:first_unit @unit
-    * label *label89
   378 label *label84
   379 write .coreX processor4 ":layoutThoriumDrill:x"
   380 write .coreY processor4 ":layoutThoriumDrill:y"
 
   387 setaddr :supplyBase*retaddr *label97 (h:*label97)
   388 call *label14 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   389 label *label97
-    * label *label95
   390 read *tmp181 processor4 ":layoutThoriumDrill*finished"
   391 jump *label94 equal *tmp181 false
-    * label *label96
   392 set :meetTarget.1:cfg "x**F#AA7##"
   393 setaddr :meetTarget.1*retaddr *label99 (h:*label99)
   394 call *label19 *invalid :meetTarget.1*retval (m:*label99) (h:*label99)
 
   401 jump *label101 notEqual :buildThoriumDrill:result false
   402 set .ERROR "Cannot locate spot for thorium drill"
   403 stop
-    * label *label103
   404 label *label101
-    * label *label102
   405 set :buildBlockAt:block @laser-drill
   406 read :buildBlockAt:x processor4 ".drillX"
   407 read :buildBlockAt:y processor4 ".drillY"
 
   416 jump *label105 greaterThanEq *tmp44 0
   417 jump *label98 always
   418 label *label105
-    * label *label106
   419 set :meetTarget.1:cfg "z%-AAA##A#"
   420 setaddr :meetTarget.1*retaddr *label107 (h:*label107)
   421 call *label19 *invalid :meetTarget.1*retval (m:*label107) (h:*label107)
 
   434 jump *label109 greaterThanEq *tmp46 0
   435 jump *label98 always
   436 label *label109
-    * label *label110
   437 set :meetTarget.1:cfg "z%-AAA##A#"
   438 setaddr :meetTarget.1*retaddr *label111 (h:*label111)
   439 call *label19 *invalid :meetTarget.1*retval (m:*label111) (h:*label111)
 
   517 setaddr :supplyBase*retaddr *label125 (h:*label125)
   518 call *label14 *invalid :supplyBase*retval (m:*label125) (h:*label125)
   519 label *label125
-    * label *label123
   520 read *tmp72 *tmp127 ".flares"
   521 read *tmp73 *tmp127 ".monos"
   522 op add *tmp201 *tmp72 *tmp73
   523 jump *label122 lessThan *tmp201 16
-    * label *label124
   524 label *label126
   525 setaddr :supplyBase*retaddr *label129 (h:*label129)
   526 call *label14 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   527 label *label129
-    * label *label127
   528 jump *label126 always
-    * label *label128
   529 ucontrol stop
   530 set .ERROR "Done"
   531 stop
-    * label *label130
   532 end
   533 label *label7
   534 op min :mineOre:amount :mineOre:amount 30
   535 write :mineOre:amount .display ".transportTarget"
   536 write :mineOre:ore .display ".transportItem"
-    * label *label150
   537 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp219 0
   538 jump *label152 notEqual *tmp219 false
   539 set .ERROR "Cannot locate ore"
   540 stop
-    * label *label154
   541 label *label152
-    * label *label153
-    * label *label151
   542 write "Moving..." .display ".status3"
-    * label *label156
   543 label *label157
   544 sensor *tmp223 @unit @firstItem
   545 jump *label160 equal *tmp223 null
   546 ucontrol itemDrop @air 1000
   547 label *label160
-    * label *label161
   548 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label158
   549 ucontrol within :locateOre:x :locateOre:y 6 *tmp226
   550 jump *label157 equal *tmp226 false
-    * label *label159
-    * label *label155
   551 sensor *tmp228 @unit @firstItem
   552 jump *label162 equal *tmp228 :mineOre:ore
-    * label *label165
   553 sensor *tmp231 @unit @firstItem
   554 jump *label167 equal *tmp231 null
   555 label *label378
   556 ucontrol itemDrop @air 1000
-    * label *label166
   557 sensor *tmp231 @unit @firstItem
   558 jump *label378 notEqual *tmp231 null
   559 label *label167
-    * label *label164
   560 label *label162
-    * label *label163
   561 write "Mining..." .display ".status3"
-    * label *label168
   562 op add :mineOre:stop @second 10
   563 label *label169
   564 sensor :mineOre:item @unit @firstItem
 
   568 jump *label172 equal *tmp237 false
   569 jump *label171 always
   570 label *label172
-    * label *label173
   571 ucontrol mine :locateOre:x :locateOre:y
   572 jump *label174 lessThanEq @second :mineOre:stop
   573 jump *label171 always
   574 label *label174
-    * label *label175
-    * label *label170
   575 sensor *tmp241 @unit @totalItems
   576 jump *label169 lessThan *tmp241 :mineOre:amount
   577 label *label171
   578 ucontrol unbind
-    * label *label385
   579 write "Depositing..." .display ".status3"
-    * label *label386
   580 sensor *tmp203 @unit @firstItem
   581 jump *label397 notEqual *tmp203 :mineOre:ore
   582 sensor *tmp206 :mineOre:block @x
   583 sensor *tmp207 :mineOre:block @y
   584 write "Moving..." .display ".status3"
-    * label *label387
-    * label *label388
   585 ucontrol within *tmp206 *tmp207 6 *tmp208
   586 jump *label391 notEqual *tmp208 false
   587 label *label389
   588 ucontrol approach *tmp206 *tmp207 5.5
-    * label *label390
   589 ucontrol within *tmp206 *tmp207 6 *tmp208
   590 jump *label389 equal *tmp208 false
   591 label *label391
-    * label *label392
-    * label *label393
   592 sensor :depositItems:cap :mineOre:block @itemCapacity
   593 label *label394
   594 ucontrol itemDrop :mineOre:block 30
-    * label *label395
   595 sensor *tmp212 @unit @firstItem
   596 op mul *tmp213 *tmp212 :depositItems:cap
   597 sensor *tmp214 :mineOre:block :mineOre:ore
   598 jump *label394 greaterThan *tmp213 *tmp214
-    * label *label396
   599 jump *label402 always
   600 label *label397
-    * label *label398
   601 sensor *tmp216 @unit @firstItem
   602 jump *label401 equal *tmp216 null
   603 label *label399
   604 ucontrol itemDrop @air 1000
-    * label *label400
   605 sensor *tmp216 @unit @firstItem
   606 jump *label399 notEqual *tmp216 null
   607 label *label401
   608 label *label402
   609 write 0 .display ".transportTarget"
   610 write null .display ".transportItem"
-    * label *label403
-    * label *label404
-    * label *label149
   611 return :mineOre*retaddr
   612 end
   613 label *label8
   614 write "Mining " .display ".status2"
   615 write :mineOre.1:ore .display ".item2"
   616 write "core" .display ".block2"
-    * label *label178
-    * label *label425
   617 write 30 .display ".transportTarget"
   618 write :mineOre.1:ore .display ".transportItem"
-    * label *label426
   619 ulocate ore core true :mineOre.1:ore :locateOre:x :locateOre:y *tmp219 0
   620 jump *label428 notEqual *tmp219 false
   621 set .ERROR "Cannot locate ore"
   622 stop
-    * label *label427
   623 label *label428
-    * label *label429
-    * label *label430
   624 write "Moving..." .display ".status3"
-    * label *label431
   625 label *label432
   626 sensor *tmp223 @unit @firstItem
   627 jump *label433 equal *tmp223 null
   628 ucontrol itemDrop @air 1000
   629 label *label433
-    * label *label434
   630 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label435
   631 ucontrol within :locateOre:x :locateOre:y 6 *tmp226
   632 jump *label432 equal *tmp226 false
-    * label *label436
-    * label *label437
   633 sensor *tmp228 @unit @firstItem
   634 jump *label443 equal *tmp228 :mineOre.1:ore
-    * label *label438
   635 sensor *tmp231 @unit @firstItem
   636 jump *label441 equal *tmp231 null
   637 label *label439
   638 ucontrol itemDrop @air 1000
-    * label *label440
   639 sensor *tmp231 @unit @firstItem
   640 jump *label439 notEqual *tmp231 null
   641 label *label441
-    * label *label442
   642 label *label443
-    * label *label444
   643 write "Mining..." .display ".status3"
-    * label *label445
   644 op add :mineOre:stop @second 10
   645 label *label446
   646 sensor :mineOre:item @unit @firstItem
 
   650 jump *label447 equal *tmp237 false
   651 jump *label452 always
   652 label *label447
-    * label *label448
   653 ucontrol mine :locateOre:x :locateOre:y
   654 jump *label449 lessThanEq @second :mineOre:stop
   655 jump *label452 always
   656 label *label449
-    * label *label450
-    * label *label451
   657 sensor *tmp241 @unit @totalItems
   658 jump *label446 lessThan *tmp241 30
   659 label *label452
   660 ucontrol unbind
-    * label *label453
   661 write "Depositing..." .display ".status3"
-    * label *label454
   662 sensor *tmp203 @unit @firstItem
   663 jump *label465 notEqual *tmp203 :mineOre.1:ore
   664 sensor *tmp206 .core @x
   665 sensor *tmp207 .core @y
   666 write "Moving..." .display ".status3"
-    * label *label455
-    * label *label456
   667 ucontrol within *tmp206 *tmp207 6 *tmp208
   668 jump *label459 notEqual *tmp208 false
   669 label *label457
   670 ucontrol approach *tmp206 *tmp207 5.5
-    * label *label458
   671 ucontrol within *tmp206 *tmp207 6 *tmp208
   672 jump *label457 equal *tmp208 false
   673 label *label459
-    * label *label460
-    * label *label461
   674 sensor :depositItems:cap .core @itemCapacity
   675 label *label462
   676 ucontrol itemDrop .core 30
-    * label *label463
   677 sensor *tmp212 @unit @firstItem
   678 op mul *tmp213 *tmp212 :depositItems:cap
   679 sensor *tmp214 .core :mineOre.1:ore
   680 jump *label462 greaterThan *tmp213 *tmp214
-    * label *label464
   681 jump *label470 always
   682 label *label465
-    * label *label466
   683 sensor *tmp216 @unit @firstItem
   684 jump *label469 equal *tmp216 null
   685 label *label467
   686 ucontrol itemDrop @air 1000
-    * label *label468
   687 sensor *tmp216 @unit @firstItem
   688 jump *label467 notEqual *tmp216 null
   689 label *label469
   690 label *label470
   691 write 0 .display ".transportTarget"
   692 write null .display ".transportItem"
-    * label *label471
-    * label *label472
-    * label *label473
-    * label *label177
   693 return :mineOre.1*retaddr
   694 end
   695 label *label14
 
   702 write false .flareController ":start*finished"
   703 write 3 .flareController "@counter"
   704 label *label184
-    * label *label185
   705 label *label182
-    * label *label183
   706 read *tmp73 .controller ".monos"
   707 jump *label186 lessThanEq *tmp73 3
   708 write "Phase 1: supplying base" .display ".status1"
-    * label *label189
   709 set :mineOre.1:ore @coal
-    * label *label381
   710 write "Mining " .display ".status2"
   711 write @coal .display ".item2"
   712 write "core" .display ".block2"
-    * label *label382
   713 set :mineOre:ore @coal
   714 set :mineOre:amount 30
   715 set :mineOre:block .core
   716 setaddr :mineOre*retaddr *label383 (h:*label383)
   717 call *label7 *invalid :mineOre*retval (m:*label383) (h:*label383)
   718 label *label383
-    * label *label384
-    * label *label188
   719 jump *label187 always
   720 label *label186
   721 set :supplyBase0:supplied false
 
   725 sensor *tmp290 .press @coal
   726 jump *label196 greaterThanEq *tmp290 5
   727 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label198
   728 write "Supplying " .display ".status2"
   729 write @coal .display ".item2"
   730 write .press .display ".block2"
-    * label *label200
   731 sensor :supplyBlock:blockCapacity .press @itemCapacity
   732 sensor *tmp294 .press @coal
   733 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp294
 
   739 call *label7 *invalid :mineOre*retval (m:*label203) (h:*label203)
   740 label *label203
   741 label *label201
-    * label *label202
-    * label *label199
   742 set :supplyBase0:supplied true
   743 label *label196
-    * label *label197
   744 label *label194
-    * label *label195
   745 sensor *tmp298 .core @silicon
   746 jump *label204 greaterThanEq *tmp298 .targetSilicon
   747 sensor *tmp301 .smelter @coal
   748 jump *label206 greaterThanEq *tmp301 5
   749 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label208
   750 write "Supplying " .display ".status2"
   751 write @coal .display ".item2"
   752 write .smelter .display ".block2"
-    * label *label210
   753 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   754 sensor *tmp305 .smelter @coal
   755 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp305
 
   761 call *label7 *invalid :mineOre*retval (m:*label213) (h:*label213)
   762 label *label213
   763 label *label211
-    * label *label212
-    * label *label209
   764 set :supplyBase0:supplied true
   765 jump *label207 always
   766 label *label206
   767 sensor *tmp309 .smelter @sand
   768 jump *label214 greaterThanEq *tmp309 5
   769 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label216
   770 write "Supplying " .display ".status2"
   771 write @sand .display ".item2"
   772 write .smelter .display ".block2"
-    * label *label218
   773 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   774 sensor *tmp313 .smelter @sand
   775 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp313
 
   781 call *label7 *invalid :mineOre*retval (m:*label221) (h:*label221)
   782 label *label221
   783 label *label219
-    * label *label220
-    * label *label217
   784 set :supplyBase0:supplied true
   785 label *label214
-    * label *label215
   786 label *label207
   787 label *label204
-    * label *label205
   788 sensor *tmp317 .battery @totalPower
   789 jump *label222 greaterThanEq *tmp317 .powerTarget
   790 sensor *tmp320 .generator @coal
   791 jump *label224 greaterThanEq *tmp320 2
   792 write "Goal 4: supplying generator" .display ".status1"
-    * label *label226
   793 write "Supplying " .display ".status2"
   794 write @coal .display ".item2"
   795 write .generator .display ".block2"
-    * label *label228
   796 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   797 sensor *tmp324 .generator @coal
   798 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp324
 
   804 call *label7 *invalid :mineOre*retval (m:*label231) (h:*label231)
   805 label *label231
   806 label *label229
-    * label *label230
-    * label *label227
   807 set :supplyBase0:supplied true
   808 label *label224
-    * label *label225
   809 label *label222
-    * label *label223
   810 label *label192
-    * label *label193
   811 set *tmp330 100
   812 sensor *tmp328 .core @titanium
   813 jump *label233 greaterThanEq *tmp328 .targetTitanium
 
   822 op mul *tmp340 .unloader1 .powerTarget
   823 jump *label238 greaterThanEq *tmp339 *tmp340
   824 write "Goal 5: supplying generator" .display ".status1"
-    * label *label240
   825 set :mineOre.1:ore @coal
   826 setaddr :mineOre.1*retaddr *label241 (h:*label241)
   827 call *label8 *invalid :mineOre.1*retval (m:*label241) (h:*label241)
 
   831 sensor *tmp343 .core @silicon
   832 jump *label242 greaterThanEq *tmp343 .targetSilicon
   833 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label244
   834 sensor :supplyBase0:coal .core @coal
   835 sensor :supplyBase0:sand .core @sand
   836 set :mineOre.1:ore @sand
 
   845 sensor *tmp350 .core @copper
   846 jump *label248 greaterThanEq *tmp350 .targetCopper
   847 write "Goal 7: copper requirement" .display ".status1"
-    * label *label250
   848 set :mineOre.1:ore @copper
   849 setaddr :mineOre.1*retaddr *label251 (h:*label251)
   850 call *label8 *invalid :mineOre.1*retval (m:*label251) (h:*label251)
 
   854 sensor *tmp353 .core @lead
   855 jump *label252 greaterThanEq *tmp353 .targetLead
   856 write "Goal 8: lead requirement" .display ".status1"
-    * label *label254
   857 set :mineOre.1:ore @lead
   858 setaddr :mineOre.1*retaddr *label255 (h:*label255)
   859 call *label8 *invalid :mineOre.1*retval (m:*label255) (h:*label255)
 
   863 sensor *tmp356 .core @metaglass
   864 jump *label256 greaterThanEq *tmp356 .targetMetaglass
   865 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label258
   866 set :mineOre.1:ore @sand
   867 setaddr :mineOre.1*retaddr *label259 (h:*label259)
   868 call *label8 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
 
   870 jump *label257 always
   871 label *label256
   872 write "Goal 10: supplying base" .display ".status1"
-    * label *label260
   873 sensor :supplyBase0:coal.1 .core @coal
   874 sensor :supplyBase0:sand.1 .core @sand
   875 set :mineOre.1:ore @sand
 
   885 label *label243
   886 label *label239
   887 label *label236
-    * label *label237
   888 jump *label235 always
   889 label *label234
   890 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label264
   891 sensor :transportStatus.2:target .titaniumDrill @itemCapacity
   892 write :transportStatus.2:target .display ".transportTarget"
   893 write @titanium .display ".transportItem"
-    * label *label266
   894 write "Fetching " .display ".status2"
   895 write @titanium .display ".item2"
   896 write .titaniumDrill .display ".block2"
-    * label *label267
   897 sensor *tmp364 .titaniumDrill @x
   898 sensor *tmp365 .titaniumDrill @y
   899 write "Moving..." .display ".status3"
-    * label *label269
   900 label *label270
   901 sensor *tmp366 @unit @firstItem
   902 jump *label273 equal *tmp366 null
   903 ucontrol itemDrop @air 1000
   904 label *label273
-    * label *label274
   905 ucontrol approach *tmp364 *tmp365 5.5
-    * label *label271
   906 ucontrol within *tmp364 *tmp365 6 *tmp369
   907 jump *label270 equal *tmp369 false
-    * label *label272
-    * label *label268
-    * label *label276
   908 sensor *tmp371 @unit @firstItem
   909 jump *label278 equal *tmp371 null
   910 label *label379
   911 ucontrol itemDrop @air 1000
-    * label *label277
   912 sensor *tmp371 @unit @firstItem
   913 jump *label379 notEqual *tmp371 null
   914 label *label278
-    * label *label275
   915 label *label279
   916 ucontrol itemTake .titaniumDrill @titanium 30
   917 sensor :fetchBlock:unitItem @unit @firstItem
 
   921 jump *label282 equal *tmp376 false
   922 ucontrol itemDrop @air 1000
   923 label *label282
-    * label *label283
-    * label *label280
   924 sensor *tmp378 @unit @titanium
   925 op lessThan *tmp379 *tmp378 30
   926 sensor *tmp380 .titaniumDrill @titanium
   927 op land *tmp381 *tmp379 *tmp380
   928 jump *label279 notEqual *tmp381 false
-    * label *label281
-    * label *label405
   929 write "Depositing..." .display ".status3"
-    * label *label406
   930 sensor *tmp203 @unit @firstItem
   931 jump *label417 notEqual *tmp203 @titanium
   932 sensor *tmp206 .core @x
   933 sensor *tmp207 .core @y
   934 write "Moving..." .display ".status3"
-    * label *label407
-    * label *label408
   935 ucontrol within *tmp206 *tmp207 6 *tmp208
   936 jump *label411 notEqual *tmp208 false
   937 label *label409
   938 ucontrol approach *tmp206 *tmp207 5.5
-    * label *label410
   939 ucontrol within *tmp206 *tmp207 6 *tmp208
   940 jump *label409 equal *tmp208 false
   941 label *label411
-    * label *label412
-    * label *label413
   942 sensor :depositItems:cap .core @itemCapacity
   943 label *label414
   944 ucontrol itemDrop .core 30
-    * label *label415
   945 sensor *tmp212 @unit @firstItem
   946 op mul *tmp213 *tmp212 :depositItems:cap
   947 sensor *tmp214 .core @titanium
   948 jump *label414 greaterThan *tmp213 *tmp214
-    * label *label416
   949 jump *label422 always
   950 label *label417
-    * label *label418
   951 sensor *tmp216 @unit @firstItem
   952 jump *label421 equal *tmp216 null
   953 label *label419
   954 ucontrol itemDrop @air 1000
-    * label *label420
   955 sensor *tmp216 @unit @firstItem
   956 jump *label419 notEqual *tmp216 null
   957 label *label421
   958 label *label422
   959 write 0 .display ".transportTarget"
   960 write null .display ".transportItem"
-    * label *label423
-    * label *label424
-    * label *label265
   961 label *label235
-    * label *label191
   962 label *label187
-    * label *label181
   963 return :supplyBase*retaddr
   964 end
   965 label *label15
-    * label *label351
   966 op sign :meetTarget:count :meetTarget:copper
-    * label *label352
-    * label *label355
   967 op sign *tmp383 :meetTarget:lead
   968 op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label356
-    * label *label359
   969 op sign *tmp383 :meetTarget:graphite
   970 op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label360
-    * label *label363
   971 op sign *tmp383 :meetTarget:silicon
   972 op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label364
-    * label *label367
   973 op sign *tmp383 :meetTarget:titanium
   974 op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label368
-    * label *label371
   975 op sign *tmp383 :meetTarget:metaglass
   976 op add :meetTarget:count :meetTarget:count *tmp383
-    * label *label372
-    * label *label288
   977 write :meetTarget:count .display ".totalTargets"
   978 write :meetTarget:block .display ".nextBlock"
   979 write :meetTarget:copper .display ".targetCopper"
 
  1000 op mul *tmp391 *tmp390 20
  1001 op add *tmp392 :meetTarget:silicon *tmp391
  1002 write *tmp392 .controller ".siliconReserve"
-    * label *label295
  1003 sensor *tmp394 .core @copper
  1004 jump *label299 greaterThanEq *tmp394 :meetTarget:copper
  1005 set *tmp393 false
  1006 jump *label298 always
  1007 label *label299
-    * label *label300
  1008 sensor *tmp397 .core @lead
  1009 jump *label301 greaterThanEq *tmp397 .targetLead
  1010 set *tmp393 false
  1011 jump *label298 always
  1012 label *label301
-    * label *label302
  1013 sensor *tmp400 .core @graphite
  1014 jump *label303 greaterThanEq *tmp400 :meetTarget:graphite
  1015 set *tmp393 false
  1016 jump *label298 always
  1017 label *label303
-    * label *label304
  1018 sensor *tmp403 .core @silicon
  1019 jump *label305 greaterThanEq *tmp403 :meetTarget:silicon
  1020 set *tmp393 false
  1021 jump *label298 always
  1022 label *label305
-    * label *label306
  1023 sensor *tmp406 .core @titanium
  1024 jump *label307 greaterThanEq *tmp406 :meetTarget:titanium
  1025 set *tmp393 false
  1026 jump *label298 always
  1027 label *label307
-    * label *label308
  1028 sensor *tmp409 .core @metaglass
  1029 jump *label309 greaterThanEq *tmp409 :meetTarget:metaglass
  1030 set *tmp393 false
  1031 jump *label298 always
  1032 label *label309
-    * label *label310
  1033 set *tmp393 true
  1034 jump *label298 always
  1035 label *label298
 
  1038 setaddr :supplyBase*retaddr *label311 (h:*label311)
  1039 call *label14 *invalid :supplyBase*retval (m:*label311) (h:*label311)
  1040 label *label311
-    * label *label296
  1041 sensor *tmp394 .core @copper
  1042 jump *label475 greaterThanEq *tmp394 .targetCopper
  1043 set *tmp393 false
  1044 jump *label487 always
  1045 label *label475
-    * label *label476
  1046 sensor *tmp397 .core @lead
  1047 jump *label477 greaterThanEq *tmp397 .targetLead
  1048 set *tmp393 false
  1049 jump *label487 always
  1050 label *label477
-    * label *label478
  1051 sensor *tmp400 .core @graphite
  1052 jump *label479 greaterThanEq *tmp400 .targetGraphite
  1053 set *tmp393 false
  1054 jump *label487 always
  1055 label *label479
-    * label *label480
  1056 sensor *tmp403 .core @silicon
  1057 jump *label481 greaterThanEq *tmp403 .targetSilicon
  1058 set *tmp393 false
  1059 jump *label487 always
  1060 label *label481
-    * label *label482
  1061 sensor *tmp406 .core @titanium
  1062 jump *label483 greaterThanEq *tmp406 .targetTitanium
  1063 set *tmp393 false
  1064 jump *label487 always
  1065 label *label483
-    * label *label484
  1066 sensor *tmp409 .core @metaglass
  1067 jump *label485 greaterThanEq *tmp409 .targetMetaglass
  1068 set *tmp393 false
  1069 jump *label487 always
  1070 label *label485
-    * label *label486
  1071 set *tmp393 true
  1072 jump *label487 always
  1073 label *label487
  1074 jump *label474 equal *tmp393 false
  1075 label *label297
-    * label *label285
  1076 return :meetTarget*retaddr
  1077 end
  1078 label *label16
  1079 write "Moving..." .display ".status3"
-    * label *label315
-    * label *label316
  1080 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
  1081 jump *label318 notEqual *tmp415 false
  1082 label *label380
  1083 ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5
-    * label *label317
  1084 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
  1085 jump *label380 equal *tmp415 false
  1086 label *label318
-    * label *label314
-    * label *label313
  1087 write "Building..." .display ".status3"
-    * label *label319
  1088 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1089 jump *label320 equal :buildBlockAt:building null
  1090 jump *label322 notEqual :buildBlockAt:type :buildBlockAt:block
  1091 set :buildBlockAt*retval :buildBlockAt:building
  1092 jump *label312 always
  1093 label *label322
-    * label *label323
  1094 jump *label324 equal :buildBlockAt:skipError false
  1095 set :buildBlockAt*retval null
  1096 jump *label312 always
  1097 label *label324
-    * label *label325
  1098 set .ERROR "Cannot build at ("
  1099 stop
-    * label *label326
  1100 label *label320
-    * label *label321
  1101 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1102 wait 0.25
  1103 label *label327
 
  1106 set :buildBlockAt*retval null
  1107 jump *label312 always
  1108 label *label330
-    * label *label331
-    * label *label328
  1109 jump *label327 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label329
  1110 sensor :log:encodedId :buildBlockAt:block @id
  1111 read *tmp90 bank1 511
  1112 op sub *tmp431 *tmp90 1
 
  1115 op mul *tmp436 *tmp435 1000
  1116 op add *tmp437 :log:encodedId *tmp436
  1117 write *tmp437 bank1 *tmp431
-    * label *label333
-    * label *label332
  1118 set :buildBlockAt*retval :buildBlockAt:building
  1119 label *label312
  1120 return :buildBlockAt*retaddr
  1121 end
  1122 label *label18
-    * label *label498
  1123 read *tmp245 :buildBlockFromCfg:cfg 0
  1124 op sub *tmp246 *tmp245 35
  1125 lookup block :unpackCfg:type *tmp246
 
  1141 op sub :unpackCfg:mg *tmp272 35
  1142 read *tmp275 :buildBlockFromCfg:cfg 9
  1143 op sub :unpackCfg:rotation *tmp275 35
-    * label *label499
  1144 op add *tmp438 .coreX :unpackCfg:x
  1145 op add *tmp439 .coreY :unpackCfg:y
  1146 set :buildBlock:block :unpackCfg:type
 
  1148 set :buildBlock:y *tmp439
  1149 set :buildBlock:rotation :unpackCfg:rotation
  1150 set :buildBlock:config null
-    * label *label494
  1151 set :meetTarget:block :unpackCfg:type
  1152 set :meetTarget:copper :unpackCfg:cu
  1153 set :meetTarget:lead :unpackCfg:pb
 
  1167 setaddr :buildBlockAt*retaddr *label496 (h:*label496)
  1168 call *label16 *invalid :buildBlockAt*retval (m:*label496) (h:*label496)
  1169 label *label496
-    * label *label497
  1170 set :buildBlockFromCfg*retval :buildBlockAt*retval
-    * label *label337
  1171 return :buildBlockFromCfg*retaddr
  1172 end
  1173 label *label19
-    * label *label523
  1174 read *tmp245 :meetTarget.1:cfg 0
  1175 op sub *tmp246 *tmp245 35
  1176 lookup block :unpackCfg:type *tmp246
 
  1192 op sub :unpackCfg:mg *tmp272 35
  1193 read *tmp275 :meetTarget.1:cfg 9
  1194 op sub :unpackCfg:rotation *tmp275 35
-    * label *label524
  1195 set :meetTarget:block :unpackCfg:type
  1196 set :meetTarget:copper :unpackCfg:cu
  1197 set :meetTarget:lead :unpackCfg:pb
 
  1202 setaddr :meetTarget*retaddr *label342 (h:*label342)
  1203 call *label15 *invalid :meetTarget*retval (m:*label342) (h:*label342)
  1204 label *label342
-    * label *label340
  1205 return :meetTarget.1*retaddr
  1206 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   230 call *label14 *invalid :supplyBase*retval (m:*label54) (h:*label54)
   231 label *label54
   232 sensor *tmp133 .battery @totalPower
-    * jump *label55 greaterThanEq *tmp133 300
-    * jump *label53 always
+  233 jump *label53 lessThan *tmp133 300
   234 label *label55
   235 read *tmp73 *tmp127 ".monos"
   236 jump *label51 lessThan *tmp73 3
 
   356 jump *label80 equal *tmp164 false
   357 write null processor1 ".nextBlock"
   358 ubind @flare
-    * jump *label85 notEqual @unit null
-    * jump *label84 always
+  359 jump *label84 equal @unit null
   360 label *label85
   361 set :findFreeUnit:first_unit @unit
   362 label *label87
 
   411 label *label104
   412 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   413 read *tmp44 processor4 ".water1X"
-    * jump *label105 greaterThanEq *tmp44 0
-    * jump *label98 always
+  414 jump *label98 lessThan *tmp44 0
   415 label *label105
   416 set :meetTarget.1:cfg "z%-AAA##A#"
   417 setaddr :meetTarget.1*retaddr *label107 (h:*label107)
 
   428 call *label16 *invalid :buildBlockAt*retval (m:*label108) (h:*label108)
   429 label *label108
   430 read *tmp46 processor4 ".water2X"
-    * jump *label109 greaterThanEq *tmp46 0
-    * jump *label98 always
+  431 jump *label98 lessThan *tmp46 0
   432 label *label109
   433 set :meetTarget.1:cfg "z%-AAA##A#"
   434 setaddr :meetTarget.1*retaddr *label111 (h:*label111)
 
   561 op notEqual *tmp235 :mineOre:item null
   562 op notEqual *tmp236 :mineOre:item :mineOre:ore
   563 op land *tmp237 *tmp235 *tmp236
-    * jump *label172 equal *tmp237 false
-    * jump *label171 always
+  564 jump *label171 notEqual *tmp237 false
   565 label *label172
   566 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label174 lessThanEq @second :mineOre:stop
-    * jump *label171 always
+  567 jump *label171 greaterThan @second :mineOre:stop
   568 label *label174
   569 sensor *tmp241 @unit @totalItems
   570 jump *label169 lessThan *tmp241 :mineOre:amount
 
   641 op notEqual *tmp235 :mineOre:item null
   642 op notEqual *tmp236 :mineOre:item :mineOre.1:ore
   643 op land *tmp237 *tmp235 *tmp236
-    * jump *label447 equal *tmp237 false
-    * jump *label452 always
+  644 jump *label452 notEqual *tmp237 false
   645 label *label447
   646 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label449 lessThanEq @second :mineOre:stop
-    * jump *label452 always
+  647 jump *label452 greaterThan @second :mineOre:stop
   648 label *label449
   649 sensor *tmp241 @unit @totalItems
   650 jump *label446 lessThan *tmp241 30

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   231 label *label54
   232 sensor *tmp133 .battery @totalPower
   233 jump *label53 lessThan *tmp133 300
-    * label *label55
   234 read *tmp73 *tmp127 ".monos"
   235 jump *label51 lessThan *tmp73 3
   236 label *label53
 
   356 write null processor1 ".nextBlock"
   357 ubind @flare
   358 jump *label84 equal @unit null
-    * label *label85
   359 set :findFreeUnit:first_unit @unit
   360 label *label87
   361 sensor *tmp169 @unit @controlled
 
   410 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   411 read *tmp44 processor4 ".water1X"
   412 jump *label98 lessThan *tmp44 0
-    * label *label105
   413 set :meetTarget.1:cfg "z%-AAA##A#"
   414 setaddr :meetTarget.1*retaddr *label107 (h:*label107)
   415 call *label19 *invalid :meetTarget.1*retval (m:*label107) (h:*label107)
 
   426 label *label108
   427 read *tmp46 processor4 ".water2X"
   428 jump *label98 lessThan *tmp46 0
-    * label *label109
   429 set :meetTarget.1:cfg "z%-AAA##A#"
   430 setaddr :meetTarget.1*retaddr *label111 (h:*label111)
   431 call *label19 *invalid :meetTarget.1*retval (m:*label111) (h:*label111)
 
   558 op notEqual *tmp236 :mineOre:item :mineOre:ore
   559 op land *tmp237 *tmp235 *tmp236
   560 jump *label171 notEqual *tmp237 false
-    * label *label172
   561 ucontrol mine :locateOre:x :locateOre:y
   562 jump *label171 greaterThan @second :mineOre:stop
-    * label *label174
   563 sensor *tmp241 @unit @totalItems
   564 jump *label169 lessThan *tmp241 :mineOre:amount
   565 label *label171
 
   636 op notEqual *tmp236 :mineOre:item :mineOre.1:ore
   637 op land *tmp237 *tmp235 *tmp236
   638 jump *label452 notEqual *tmp237 false
-    * label *label447
   639 ucontrol mine :locateOre:x :locateOre:y
   640 jump *label452 greaterThan @second :mineOre:stop
-    * label *label449
   641 sensor *tmp241 @unit @totalItems
   642 jump *label446 lessThan *tmp241 30
   643 label *label452

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   700 setaddr :mineOre*retaddr *label383 (h:*label383)
   701 call *label7 *invalid :mineOre*retval (m:*label383) (h:*label383)
   702 label *label383
-    * jump *label187 always
+  703 return :supplyBase*retaddr
   704 label *label186
   705 set :supplyBase0:supplied false
   706 jump *label192 notEqual .unloader1 null
 
   801 label *label233
   802 sensor *tmp334 .titaniumDrill @titanium
   803 jump *label234 greaterThanEq *tmp334 *tmp330
-    * jump *label236 notEqual :supplyBase0:supplied false
+  804 jump *label235 notEqual :supplyBase0:supplied false
   805 sensor *tmp339 .battery @totalPower
   806 op mul *tmp340 .unloader1 .powerTarget
   807 jump *label238 greaterThanEq *tmp339 *tmp340
 
   810 setaddr :mineOre.1*retaddr *label241 (h:*label241)
   811 call *label8 *invalid :mineOre.1*retval (m:*label241) (h:*label241)
   812 label *label241
-    * jump *label239 always
+  813 return :supplyBase*retaddr
   814 label *label238
   815 sensor *tmp343 .core @silicon
   816 jump *label242 greaterThanEq *tmp343 .targetSilicon
 
   824 setaddr :mineOre.1*retaddr *label247 (h:*label247)
   825 call *label8 *invalid :mineOre.1*retval (m:*label247) (h:*label247)
   826 label *label247
-    * jump *label243 always
+  827 return :supplyBase*retaddr
   828 label *label242
   829 sensor *tmp350 .core @copper
   830 jump *label248 greaterThanEq *tmp350 .targetCopper
 
   833 setaddr :mineOre.1*retaddr *label251 (h:*label251)
   834 call *label8 *invalid :mineOre.1*retval (m:*label251) (h:*label251)
   835 label *label251
-    * jump *label249 always
+  836 return :supplyBase*retaddr
   837 label *label248
   838 sensor *tmp353 .core @lead
   839 jump *label252 greaterThanEq *tmp353 .targetLead
 
   842 setaddr :mineOre.1*retaddr *label255 (h:*label255)
   843 call *label8 *invalid :mineOre.1*retval (m:*label255) (h:*label255)
   844 label *label255
-    * jump *label253 always
+  845 return :supplyBase*retaddr
   846 label *label252
   847 sensor *tmp356 .core @metaglass
   848 jump *label256 greaterThanEq *tmp356 .targetMetaglass
 
   851 setaddr :mineOre.1*retaddr *label259 (h:*label259)
   852 call *label8 *invalid :mineOre.1*retval (m:*label259) (h:*label259)
   853 label *label259
-    * jump *label257 always
+  854 return :supplyBase*retaddr
   855 label *label256
   856 write "Goal 10: supplying base" .display ".status1"
   857 sensor :supplyBase0:coal.1 .core @coal
 
   869 label *label243
   870 label *label239
   871 label *label236
-    * jump *label235 always
+  872 return :supplyBase*retaddr
   873 label *label234
   874 write "Goal 11: Fetching titanium" .display ".status1"
   875 sensor :transportStatus.2:target .titaniumDrill @itemCapacity
 
  1073 jump *label320 equal :buildBlockAt:building null
  1074 jump *label322 notEqual :buildBlockAt:type :buildBlockAt:block
  1075 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label312 always
+ 1076 return :buildBlockAt*retaddr
  1077 label *label322
  1078 jump *label324 equal :buildBlockAt:skipError false
  1079 set :buildBlockAt*retval null
-    * jump *label312 always
+ 1080 return :buildBlockAt*retaddr
  1081 label *label324
  1082 set .ERROR "Cannot build at ("
  1083 stop
 
  1088 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1089 jump *label330 notEqual :buildBlockAt:building null
  1090 set :buildBlockAt*retval null
-    * jump *label312 always
+ 1091 return :buildBlockAt*retaddr
  1092 label *label330
  1093 jump *label327 notEqual :buildBlockAt:type :buildBlockAt:block
  1094 sensor :log:encodedId :buildBlockAt:block @id

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-12 instructions):
 
   362 jump *label90 notEqual *tmp169 0
   363 ucontrol flag 0
   364 jump *label84 always
-    * jump *label91 always
   365 label *label90
   366 sensor *tmp172 :findFreeUnit:first_unit @dead
   367 jump *label92 notEqual *tmp172 1
 
   517 call *label14 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   518 label *label129
   519 jump *label126 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   520 label *label7
   521 op min :mineOre:amount :mineOre:amount 30
   522 write :mineOre:amount .display ".transportTarget"
 
   592 write 0 .display ".transportTarget"
   593 write null .display ".transportItem"
   594 return :mineOre*retaddr
-    * end
   595 label *label8
   596 write "Mining " .display ".status2"
   597 write :mineOre.1:ore .display ".item2"
 
   669 write 0 .display ".transportTarget"
   670 write null .display ".transportItem"
   671 return :mineOre.1*retaddr
-    * end
   672 label *label14
   673 jump *label182 notEqual .flareControllerStarted false
   674 read *tmp72 .controller ".flares"
 
   856 setaddr :mineOre.1*retaddr *label263 (h:*label263)
   857 call *label8 *invalid :mineOre.1*retval (m:*label263) (h:*label263)
   858 label *label263
-    * label *label257
-    * label *label253
-    * label *label249
-    * label *label243
-    * label *label239
-    * label *label236
   859 return :supplyBase*retaddr
   860 label *label234
   861 write "Goal 11: Fetching titanium" .display ".status1"
 
   930 write 0 .display ".transportTarget"
   931 write null .display ".transportItem"
   932 label *label235
-    * label *label187
   933 return :supplyBase*retaddr
-    * end
   934 label *label15
   935 op sign :meetTarget:count :meetTarget:copper
   936 op sign *tmp383 :meetTarget:lead
 
  1043 jump *label474 equal *tmp393 false
  1044 label *label297
  1045 return :meetTarget*retaddr
-    * end
  1046 label *label16
  1047 write "Moving..." .display ".status3"
  1048 ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415
 
  1084 op add *tmp437 :log:encodedId *tmp436
  1085 write *tmp437 bank1 *tmp431
  1086 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label312
  1087 return :buildBlockAt*retaddr
-    * end
  1088 label *label18
  1089 read *tmp245 :buildBlockFromCfg:cfg 0
  1090 op sub *tmp246 *tmp245 35
 
  1135 label *label496
  1136 set :buildBlockFromCfg*retval :buildBlockAt*retval
  1137 return :buildBlockFromCfg*retaddr
-    * end
  1138 label *label19
  1139 read *tmp245 :meetTarget.1:cfg 0
  1140 op sub *tmp246 *tmp245 35
 
  1168 call *label15 *invalid :meetTarget*retval (m:*label342) (h:*label342)
  1169 label *label342
  1170 return :meetTarget.1*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   367 jump *label92 notEqual *tmp172 1
   368 set :findFreeUnit:first_unit @unit
   369 label *label92
-    * label *label91
   370 ubind @flare
   371 jump *label87 notEqual :findFreeUnit:first_unit @unit
   372 label *label84

Final code before resolving virtual instructions:

    0:  jump *label531 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 processor5
    2:  draw triangle .ERROR .battery .builder .controller .core .coreX
    3:  draw triangle .coreY .display .flareController .flareControllerStarted .generator .graphiteSurplus
    4:  draw triangle .leadSurplus .metaglassSurplus .powerTarget .press .siliconSurplus .smelter
    5:  draw triangle .targetCopper .targetGraphite .targetLead .targetMetaglass .targetSilicon .targetTitanium
    6:  draw triangle .titaniumDrill .unloader1 :flares :monos :buildBlock:block :buildBlock:config
    7:  draw triangle :buildBlock:rotation :buildBlock:x :buildBlock:y :buildBlockAt:block :buildBlockAt:building :buildBlockAt:config
    8:  draw triangle :buildBlockAt:rotation :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y :buildBlockFromCfg:cfg
    9:  draw triangle :buildThoriumDrill:result :buildThoriumDrill:thoriumDrill :buildThoriumDrill:thoriumGenerator :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result
   10:  draw triangle :depositItems:cap :fetchBlock:unitItem :findFreeUnit:first_unit :findUnits:count :findUnits:firstUnit :locateOre:x
   11:  draw triangle :locateOre:y :log:encodedId :meetTarget:block :meetTarget.1:cfg :meetTarget:copper :meetTarget:count
   12:  draw triangle :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon :meetTarget:titanium :mineOre:amount
   13:  draw triangle :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore :mineOre:stop :supplyBase0:coal.1
   14:  draw triangle :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity
   15:  draw triangle :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing :supplyBlock.2:missing :supplyBlock.3:missing
   16:  draw triangle :transportStatus.2:target :unpackCfg:cu :unpackCfg:gr :unpackCfg:mg :unpackCfg:pb :unpackCfg:rotation
   17:  draw triangle :unpackCfg:si :unpackCfg:ti :unpackCfg:type :unpackCfg:x :unpackCfg:y 0
        label *label531
   18:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   19:  set .titaniumDrill null                                      CoreBuilder.mnd: var
   20:  set .unloader1 null                                          ...
   21:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   22:  set .graphiteSurplus 20                                      ...
   23:  set .siliconSurplus 20                                       ...
   24:  set .metaglassSurplus 20                                     ...
   25:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   26:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label22                                               CoreBuilder.mnd: do
   27:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   28:  set .builder @unit                                           ...
   29:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   30:  jump *label22 equal .core null                               CoreBuilder.mnd: do
   31:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   32:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   33:  write .core processor5 ":startPolyController:aCore"          CoreBuilder.mnd: async(polyController.startPolyController(core, @unit));
   34:  write @unit processor5 ":startPolyController:aBuilder"       ...
   35:  write false processor5 ":startPolyController*finished"       ...
   36:  write 1 processor5 "@counter"                                ...
   37:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
   38:  ubind @flare                                                 CoreBuilder.mnd: var firstUnit = ubind(type);
   39:  set :findUnits:firstUnit @unit                               ...
   40:  jump *label504 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label501                                              CoreBuilder.mnd: do
   41:  op add :findUnits:count :findUnits:count 1                   ...
   42:  ubind @flare                                                 CoreBuilder.mnd: ubind(type);
   43:  jump *label501 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label504                                              CoreBuilder.mnd: if firstUnit != null then
   44:  write :findUnits:count processor1 ".displayFlares"           CoreBuilder.mnd: var flares = findUnits(@flare, out display.displayFlares);
   45:  set :flares :findUnits:count                                 ...
   46:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
   47:  ubind @mono                                                  CoreBuilder.mnd: var firstUnit = ubind(type);
   48:  set :findUnits:firstUnit @unit                               ...
   49:  jump *label511 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label508                                              CoreBuilder.mnd: do
   50:  op add :findUnits:count :findUnits:count 1                   ...
   51:  ubind @mono                                                  CoreBuilder.mnd: ubind(type);
   52:  jump *label508 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label511                                              CoreBuilder.mnd: if firstUnit != null then
   53:  write :findUnits:count processor1 ".displayMonos"            CoreBuilder.mnd: var monos = findUnits(@mono, out display.displayMonos);
   54:  set :monos :findUnits:count                                  ...
   55:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
   56:  ubind @poly                                                  CoreBuilder.mnd: var firstUnit = ubind(type);
   57:  set :findUnits:firstUnit @unit                               ...
   58:  jump *label518 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label515                                              CoreBuilder.mnd: do
   59:  op add :findUnits:count :findUnits:count 1                   ...
   60:  ubind @poly                                                  CoreBuilder.mnd: ubind(type);
   61:  jump *label515 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label518                                              CoreBuilder.mnd: if firstUnit != null then
   62:  write :findUnits:count processor1 ".displayPolys"            CoreBuilder.mnd: var polys = findUnits(@poly, out display.displayPolys);
   63:  set :buildBlockFromCfg:cfg "#'+nA#####"                      CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   64:  setaddr :buildBlockFromCfg*retaddr *label28                  ...
   65:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label28                                               ...
   66:  set .press :buildBlockFromCfg*retval                         ...
   67:  set :buildBlockFromCfg:cfg "k*/(7#####"                      CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   68:  setaddr :buildBlockFromCfg*retaddr *label29                  ...
   69:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label29                                               ...
   70:  set .battery :buildBlockFromCfg*retval                       ...
   71:  set :buildBlockFromCfg:cfg "k+/(7#####"                      CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   72:  setaddr :buildBlockFromCfg*retaddr *label30                  ...
   73:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label30                                               ...
   74:  set :buildBlockFromCfg:cfg "m*.<2#####"                      CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   75:  setaddr :buildBlockFromCfg*retaddr *label31                  ...
   76:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label31                                               ...
   77:  set .generator :buildBlockFromCfg*retval                     ...
   78:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   79:  set :buildBlockFromCfg:cfg "%+-A<#####"                      CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   80:  setaddr :buildBlockFromCfg*retaddr *label32                  ...
   81:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label32                                               ...
   82:  set .smelter :buildBlockFromCfg*retval                       ...
   83:  set :buildBlockFromCfg:cfg "T+,%%#####"                      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   84:  setaddr :buildBlockFromCfg*retaddr *label33                  ...
   85:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label33                                               ...
   86:  set :meetTarget.1:cfg "w**5#-####"                           CoreBuilder.mnd: meetTarget(cfg);
   87:  setaddr :meetTarget.1*retaddr *label35                       ...
   88:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label35                                               ...
   89:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   90:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   91:  write .coreY processor4 ":findDrillLocation:y"               ...
   92:  write @unit processor4 ":findDrillLocation:unit"             ...
   93:  write @titanium processor4 ":findDrillLocation:item"         ...
   94:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   95:  write 2 processor4 ":findDrillLocation:size"                 ...
   96:  write 4 processor4 ":findDrillLocation:limit"                ...
   97:  write false processor4 ":findDrillLocation*finished"         ...
   98:  write 1 processor4 "@counter"                                ...
        label *label36                                               ...
   99:  wait 1e-15                                                   ...
  100:  read *tmp120 processor4 ":findDrillLocation*finished"        ...
  101:  jump *label36 equal *tmp120 false                            ...
  102:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  103:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  104:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  105:  jump *label37 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  106:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  107:  stop                                                         Actions.mnd: stopProcessor();
        label *label37                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  108:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  109:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  110:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  111:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  112:  set :buildBlockAt:rotation null                              ...
  113:  set :buildBlockAt:config 0                                   ...
  114:  set :buildBlockAt:skipError false                            ...
  115:  setaddr :buildBlockAt*retaddr *label40                       ...
  116:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label40                                               ...
  117:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(PNEUMATIC_DRILL);
  118:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  119:  set :buildBlockFromCfg:cfg "*,###A<##"                      CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
  120:  setaddr :buildBlockFromCfg*retaddr *label41                  ...
  121:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label41                                               ...
  122:  set .unloader1 :buildBlockFromCfg*retval                     ...
  123:  set :buildBlockFromCfg:cfg "T),%%#####"                      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
  124:  setaddr :buildBlockFromCfg*retaddr *label42                  ...
  125:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label42                                               ...
  126:  set :buildBlockFromCfg:cfg "W*-'%#####"                      CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
  127:  setaddr :buildBlockFromCfg*retaddr *label43                  ...
  128:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label43                                               ...
  129:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  130:  read *tmp245 "®-.}U#U###" 0                                  CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  131:  op sub *tmp246 *tmp245 35                                    ...
  132:  lookup block :unpackCfg:type *tmp246                         ...
  133:  read *tmp249 "®-.}U#U###" 1                                  CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  134:  op sub :unpackCfg:x *tmp249 42                               ...
  135:  read *tmp253 "®-.}U#U###" 2                                  CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  136:  op sub :unpackCfg:y *tmp253 42                               ...
  137:  read *tmp257 "®-.}U#U###" 3                                  CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  138:  op sub :unpackCfg:cu *tmp257 35                              ...
  139:  read *tmp260 "®-.}U#U###" 4                                  CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  140:  op sub :unpackCfg:pb *tmp260 35                              ...
  141:  read *tmp263 "®-.}U#U###" 5                                  CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  142:  op sub :unpackCfg:gr *tmp263 35                              ...
  143:  read *tmp266 "®-.}U#U###" 6                                  CoreBuilder.mnd: si = char(cfg, index++) - 35;
  144:  op sub :unpackCfg:si *tmp266 35                              ...
  145:  read *tmp269 "®-.}U#U###" 7                                  CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  146:  op sub :unpackCfg:ti *tmp269 35                              ...
  147:  read *tmp272 "®-.}U#U###" 8                                  CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  148:  op sub :unpackCfg:mg *tmp272 35                              ...
  149:  read *tmp275 "®-.}U#U###" 9                                  CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  150:  op sub :unpackCfg:rotation *tmp275 35                        ...
  151:  op add *tmp128 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, rotation, config);
  152:  op add *tmp129 .coreY :unpackCfg:y                           ...
  153:  set :buildBlock:block :unpackCfg:type                        ...
  154:  set :buildBlock:x *tmp128                                    ...
  155:  set :buildBlock:y *tmp129                                    ...
  156:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  157:  set :buildBlock:config processor2                            ...
  158:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  159:  set :meetTarget:copper :unpackCfg:cu                         ...
  160:  set :meetTarget:lead :unpackCfg:pb                           ...
  161:  set :meetTarget:graphite :unpackCfg:gr                       ...
  162:  set :meetTarget:silicon :unpackCfg:si                        ...
  163:  set :meetTarget:titanium :unpackCfg:ti                       ...
  164:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  165:  setaddr :meetTarget*retaddr *label491                        ...
  166:  call *label15 *invalid :meetTarget*retval                    ...
        label *label491                                              ...
  167:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  168:  set :buildBlockAt:x :buildBlock:x                            ...
  169:  set :buildBlockAt:y :buildBlock:y                            ...
  170:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  171:  set :buildBlockAt:config :buildBlock:config                  ...
  172:  set :buildBlockAt:skipError false                            ...
  173:  setaddr :buildBlockAt*retaddr *label492                      ...
  174:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label492                                              ...
  175:  set *tmp127 :buildBlockAt*retval                             CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, rotation, config);
  176:  set .controller :buildBlockAt*retval                         CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
  177:  write processor1 :buildBlockAt*retval ".display"             CoreBuilder.mnd: controller.display = display;
  178:  write .core :buildBlockAt*retval ".core"                     CoreBuilder.mnd: controller.core = core;
  179:  write bank1 :buildBlockAt*retval ".bank"                     CoreBuilder.mnd: controller.bank = bank1;
  180:  write .battery :buildBlockAt*retval ".battery"               CoreBuilder.mnd: controller.battery = battery;
  181:  write .generator :buildBlockAt*retval ".generator"           CoreBuilder.mnd: controller.generator = generator;
  182:  write .smelter :buildBlockAt*retval ".smelter"               CoreBuilder.mnd: controller.smelter = smelter;
  183:  write .press :buildBlockAt*retval ".press"                   CoreBuilder.mnd: controller.press = press;
  184:  write :monos :buildBlockAt*retval ".monos"                   CoreBuilder.mnd: controller.monos = monos;
  185:  write :flares :buildBlockAt*retval ".flares"                 CoreBuilder.mnd: controller.flares = flares;
  186:  write :findUnits:count :buildBlockAt*retval ".polys"         CoreBuilder.mnd: controller.polys = polys;
  187:  set :buildBlockFromCfg:cfg "g)'%)#####"                      CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  188:  setaddr :buildBlockFromCfg*retaddr *label47                  ...
  189:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label47                                               ...
  190:  set :buildBlockFromCfg:cfg "(*###A<##"                      CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  191:  setaddr :buildBlockFromCfg*retaddr *label48                  ...
  192:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label48                                               ...
  193:  write :buildBlockFromCfg*retval *tmp127 ".unloader2"         ...
  194:  set :buildBlockFromCfg:cfg "'(_i####&"                      CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  195:  setaddr :buildBlockFromCfg*retaddr *label49                  ...
  196:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label49                                               ...
  197:  write :buildBlockFromCfg*retval *tmp127 ".factory"           CoreBuilder.mnd: controller.factory = factory;
  198:  write :buildBlockFromCfg*retval processor1 ".factory"        CoreBuilder.mnd: display.factory = factory;
  199:  write 1 *tmp127 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 1;
  200:  write 3 *tmp127 ".monoTarget"                                CoreBuilder.mnd: controller.monoTarget = 3;
  201:  write 0 *tmp127 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 0;
  202:  write 85 *tmp127 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  203:  write 150 *tmp127 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  204:  write 30 *tmp127 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  205:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  206:  set .siliconSurplus 20                                       ...
  207:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  208:  set :meetTarget:copper 0                                     ...
  209:  set :meetTarget:lead 0                                       ...
  210:  set :meetTarget:graphite 0                                   ...
  211:  set :meetTarget:silicon 0                                    ...
  212:  set :meetTarget:titanium 0                                   ...
  213:  set :meetTarget:metaglass 0                                  ...
  214:  setaddr :meetTarget*retaddr *label526                        ...
  215:  call *label15 *invalid :meetTarget*retval                    ...
        label *label526                                              ...
  216:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  217:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  218:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  219:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
        label *label51                                               CoreBuilder.mnd: do
  220:  setaddr :supplyBase*retaddr *label54                         CoreBuilder.mnd: supplyBase();
  221:  call *label14 *invalid :supplyBase*retval                    ...
        label *label54                                               ...
  222:  sensor *tmp133 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  223:  jump *label53 lessThan *tmp133 300                           ...
  224:  read *tmp73 *tmp127 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  225:  jump *label51 lessThan *tmp73 3                              CoreBuilder.mnd: do
        label *label53                                               ...
  226:  set .siliconSurplus 100                                      CoreBuilder.mnd: siliconSurplus = 100;
  227:  set :buildBlockFromCfg:cfg ",)###A<##"                      CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  228:  setaddr :buildBlockFromCfg*retaddr *label57                  ...
  229:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label57                                               ...
  230:  set :buildBlockFromCfg:cfg "T,*%%#####"                      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  231:  setaddr :buildBlockFromCfg*retaddr *label58                  ...
  232:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label58                                               ...
  233:  set :buildBlockFromCfg:cfg "',+_AA####"                      CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  234:  setaddr :buildBlockFromCfg*retaddr *label59                  ...
  235:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label59                                               ...
  236:  write :buildBlockFromCfg*retval *tmp127 ".kiln"              CoreBuilder.mnd: controller.kiln = kiln;
  237:  set :buildBlockFromCfg:cfg "z%-AAA##A#"                      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  238:  setaddr :buildBlockFromCfg*retaddr *label60                  ...
  239:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label60                                               ...
  240:  set :buildBlockFromCfg:cfg "W'*'%#####"                      CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  241:  setaddr :buildBlockFromCfg*retaddr *label61                  ...
  242:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label61                                               ...
  243:  set :buildBlockFromCfg:cfg "W&*'%#####"                      CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  244:  setaddr :buildBlockFromCfg*retaddr *label62                  ...
  245:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label62                                               ...
  246:  set :buildBlockFromCfg:cfg "o%+FK<A###"                      CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  247:  setaddr :buildBlockFromCfg*retaddr *label63                  ...
  248:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label63                                               ...
  249:  write :buildBlockFromCfg*retval *tmp127 ".generator2"        ...
  250:  set :buildBlockFromCfg:cfg "$(.#U<##"                      CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  251:  setaddr :buildBlockFromCfg*retaddr *label64                  ...
  252:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label64                                               ...
  253:  write :buildBlockFromCfg*retval *tmp127 ".multipress"        ...
  254:  set :buildBlockFromCfg:cfg "z%/AAA##A#"                      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT2);
  255:  setaddr :buildBlockFromCfg*retaddr *label65                  ...
  256:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label65                                               ...
  257:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  258:  set :buildBlockFromCfg:cfg " '%-#2####"                      CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  259:  setaddr :buildBlockFromCfg*retaddr *label66                  ...
  260:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label66                                               ...
  261:  write :buildBlockFromCfg*retval *tmp127 ".payloadRouter"     ...
  262:  set :buildBlockFromCfg:cfg "*(###A<##"                      CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  263:  setaddr :buildBlockFromCfg*retaddr *label67                  ...
  264:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label67                                               ...
  265:  set :buildBlockFromCfg:cfg "X*''%#####"                      CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  266:  setaddr :buildBlockFromCfg*retaddr *label68                  ...
  267:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label68                                               ...
  268:  set :buildBlockFromCfg:cfg "*%ë#}###"                      CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  269:  setaddr :buildBlockFromCfg*retaddr *label69                  ...
  270:  call *label18 *invalid :buildBlockFromCfg*retval             ...
        label *label69                                               ...
  271:  write :buildBlockFromCfg*retval *tmp127 ".reconstructor"     CoreBuilder.mnd: controller.reconstructor = reconstructor;
  272:  write :buildBlockFromCfg*retval processor1 ".reconstructor"  CoreBuilder.mnd: display.reconstructor = reconstructor;
  273:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  274:  set :meetTarget:copper 0                                     ...
  275:  set :meetTarget:lead 0                                       ...
  276:  set :meetTarget:graphite 0                                   ...
  277:  set :meetTarget:silicon 0                                    ...
  278:  set :meetTarget:titanium 0                                   ...
  279:  set :meetTarget:metaglass 0                                  ...
  280:  setaddr :meetTarget*retaddr *label529                        ...
  281:  call *label15 *invalid :meetTarget*retval                    ...
        label *label529                                              ...
  282:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  283:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  284:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  285:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  286:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  287:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  288:  write 3 *tmp127 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 3;
  289:  read *tmp74 *tmp127 ".polys"                                 CoreBuilder.mnd: while controller.polys < 3 do
  290:  jump *label73 greaterThanEq *tmp74 3                         ...
        label *label488                                              ...
  291:  setaddr :supplyBase*retaddr *label74                         CoreBuilder.mnd: supplyBase();
  292:  call *label14 *invalid :supplyBase*retval                    ...
        label *label74                                               ...
  293:  read *tmp74 *tmp127 ".polys"                                 CoreBuilder.mnd: while controller.polys < 3 do
  294:  jump *label488 lessThan *tmp74 3                             ...
        label *label73                                               ...
  295:  write 8 *tmp127 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 8;
  296:  write 6 *tmp127 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 6;
  297:  read *tmp72 *tmp127 ".flares"                                CoreBuilder.mnd: while controller.flares < 2 do
  298:  jump *label77 greaterThanEq *tmp72 2                         ...
        label *label489                                              ...
  299:  setaddr :supplyBase*retaddr *label78                         CoreBuilder.mnd: supplyBase();
  300:  call *label14 *invalid :supplyBase*retval                    ...
        label *label78                                               ...
  301:  read *tmp72 *tmp127 ".flares"                                CoreBuilder.mnd: while controller.flares < 2 do
  302:  jump *label489 lessThan *tmp72 2                             ...
        label *label77                                               ...
  303:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  304:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  305:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9);
  306:  write .coreY processor4 ":findDrillLocation:y"               ...
  307:  write @unit processor4 ":findDrillLocation:unit"             ...
  308:  write @titanium processor4 ":findDrillLocation:item"         ...
  309:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  310:  write 4 processor4 ":findDrillLocation:size"                 ...
  311:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  312:  write false processor4 ":findDrillLocation*finished"         ...
  313:  write 1 processor4 "@counter"                                ...
        label *label79                                               ...
  314:  wait 1e-15                                                   ...
  315:  read *tmp162 processor4 ":findDrillLocation*finished"        ...
  316:  jump *label79 equal *tmp162 false                            ...
  317:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label80                                               CoreBuilder.mnd: do
  318:  setaddr :supplyBase*retaddr *label83                         CoreBuilder.mnd: supplyBase();
  319:  call *label14 *invalid :supplyBase*retval                    ...
        label *label83                                               ...
  320:  read *tmp164 processor4 ":findDrillLocation*finished"        CoreBuilder.mnd: while !finished(oreLocator.findDrillLocation);
  321:  jump *label80 equal *tmp164 false                            CoreBuilder.mnd: do
  322:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  323:  ubind @flare                                                 *units: ubind(unit_type);
  324:  jump *label84 equal @unit null                               *units: if @unit == null then return null; end;
  325:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label87                                               *units: do
  326:  sensor *tmp169 @unit @controlled                             *units: if @unit.@controlled == 0 then
  327:  jump *label90 notEqual *tmp169 0                             ...
  328:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  329:  jump *label84 always 0 0                                     *units: return @unit;
        label *label90                                               *units: if @unit.@controlled == 0 then
  330:  sensor *tmp172 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  331:  jump *label92 notEqual *tmp172 1                             ...
  332:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label92                                               *units: elsif first_unit.@dead == 1 then
  333:  ubind @flare                                                 *units: ubind(unit_type);
  334:  jump *label87 notEqual :findFreeUnit:first_unit @unit        *units: do
        label *label84                                               CoreBuilder.mnd: findFreeUnit(@flare, 0);
  335:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  336:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  337:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  338:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  339:  write false processor4 ":layoutThoriumDrill*finished"        ...
  340:  write 2 processor4 "@counter"                                ...
  341:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label94                                               CoreBuilder.mnd: do
  342:  setaddr :supplyBase*retaddr *label97                         CoreBuilder.mnd: supplyBase();
  343:  call *label14 *invalid :supplyBase*retval                    ...
        label *label97                                               ...
  344:  read *tmp181 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  345:  jump *label94 equal *tmp181 false                            CoreBuilder.mnd: do
  346:  set :meetTarget.1:cfg "x**F#AA7##"                           CoreBuilder.mnd: meetTarget(LASER_DRILL);
  347:  setaddr :meetTarget.1*retaddr *label99                       ...
  348:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label99                                               ...
        label *label100                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  349:  wait 1e-15                                                   ...
  350:  read *tmp183 processor4 ":layoutThoriumDrill*finished"       ...
  351:  jump *label100 equal *tmp183 false                           ...
  352:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  353:  jump *label101 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  354:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  355:  stop                                                         Actions.mnd: stopProcessor();
        label *label101                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  356:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: var thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  357:  read :buildBlockAt:x processor4 ".drillX"                    ...
  358:  read :buildBlockAt:y processor4 ".drillY"                    ...
  359:  set :buildBlockAt:rotation null                              ...
  360:  set :buildBlockAt:config 0                                   ...
  361:  set :buildBlockAt:skipError false                            ...
  362:  setaddr :buildBlockAt*retaddr *label104                      ...
  363:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label104                                              ...
  364:  set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval     ...
  365:  read *tmp44 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  366:  jump *label98 lessThan *tmp44 0                              ...
  367:  set :meetTarget.1:cfg "z%-AAA##A#"                           CoreBuilder.mnd: meetTarget(WATER_EXT);
  368:  setaddr :meetTarget.1*retaddr *label107                      ...
  369:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label107                                              ...
  370:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  371:  read *tmp44 processor4 ".water1X"                            ...
  372:  set :buildBlockAt:x *tmp44                                   ...
  373:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  374:  set :buildBlockAt:rotation null                              ...
  375:  set :buildBlockAt:config 0                                   ...
  376:  set :buildBlockAt:skipError false                            ...
  377:  setaddr :buildBlockAt*retaddr *label108                      ...
  378:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label108                                              ...
  379:  read *tmp46 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  380:  jump *label98 lessThan *tmp46 0                              ...
  381:  set :meetTarget.1:cfg "z%-AAA##A#"                           CoreBuilder.mnd: meetTarget(WATER_EXT);
  382:  setaddr :meetTarget.1*retaddr *label111                      ...
  383:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label111                                              ...
  384:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  385:  read *tmp46 processor4 ".water2X"                            ...
  386:  set :buildBlockAt:x *tmp46                                   ...
  387:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  388:  set :buildBlockAt:rotation null                              ...
  389:  set :buildBlockAt:config 0                                   ...
  390:  set :buildBlockAt:skipError false                            ...
  391:  setaddr :buildBlockAt*retaddr *label112                      ...
  392:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label112                                              ...
  393:  set :meetTarget.1:cfg "z%-AAA##A#"                           CoreBuilder.mnd: meetTarget(WATER_EXT);
  394:  setaddr :meetTarget.1*retaddr *label113                      ...
  395:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label113                                              ...
  396:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: var thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  397:  read :buildBlockAt:x processor4 ".generatorX"                ...
  398:  read :buildBlockAt:y processor4 ".generatorY"                ...
  399:  set :buildBlockAt:rotation null                              ...
  400:  set :buildBlockAt:config 0                                   ...
  401:  set :buildBlockAt:skipError false                            ...
  402:  setaddr :buildBlockAt*retaddr *label114                      ...
  403:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label114                                              ...
  404:  set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval ...
  405:  set :meetTarget.1:cfg "g)'%)#####"                           CoreBuilder.mnd: meetTarget(POWER_NODE);
  406:  setaddr :meetTarget.1*retaddr *label115                      ...
  407:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label115                                              ...
  408:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  409:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  410:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  411:  set :buildBlockAt:rotation null                              ...
  412:  set :buildBlockAt:config 0                                   ...
  413:  set :buildBlockAt:skipError false                            ...
  414:  setaddr :buildBlockAt*retaddr *label116                      ...
  415:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label116                                              ...
  416:  set :meetTarget.1:cfg "r**#-#+###"                           CoreBuilder.mnd: meetTarget(SOLAR_PANEL);
  417:  setaddr :meetTarget.1*retaddr *label117                      ...
  418:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label117                                              ...
  419:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  420:  read :buildBlockAt:x processor4 ".panelX"                    ...
  421:  read :buildBlockAt:y processor4 ".panelY"                    ...
  422:  set :buildBlockAt:rotation null                              ...
  423:  set :buildBlockAt:config 0                                   ...
  424:  set :buildBlockAt:skipError false                            ...
  425:  setaddr :buildBlockAt*retaddr *label118                      ...
  426:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label118                                              ...
  427:  set :meetTarget.1:cfg "k*/(7#####"                           CoreBuilder.mnd: meetTarget(BATTERY1);
  428:  setaddr :meetTarget.1*retaddr *label119                      ...
  429:  call *label19 *invalid :meetTarget.1*retval                  ...
        label *label119                                              ...
  430:  set :buildBlockAt:block @battery                             CoreBuilder.mnd: buildBlockAt(@battery, oreLocator.batteryX, oreLocator.batteryY, null, 0, false);
  431:  read :buildBlockAt:x processor4 ".batteryX"                  ...
  432:  read :buildBlockAt:y processor4 ".batteryY"                  ...
  433:  set :buildBlockAt:rotation null                              ...
  434:  set :buildBlockAt:config 0                                   ...
  435:  set :buildBlockAt:skipError false                            ...
  436:  setaddr :buildBlockAt*retaddr *label120                      ...
  437:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label120                                              ...
  438:  write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDr CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  439:  write :buildThoriumDrill:thoriumDrill processor3 ":addThoriu CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  440:  write :buildThoriumDrill:thoriumGenerator processor3 ":addTh ...
  441:  write false processor3 ":addThoriumDrill*finished"           ...
  442:  write 1 processor3 "@counter"                                ...
        label *label121                                              ...
  443:  wait 1e-15                                                   ...
  444:  read *tmp200 processor3 ":addThoriumDrill*finished"          ...
  445:  jump *label121 equal *tmp200 false                           ...
        label *label98                                               CoreBuilder.mnd: buildThoriumDrill();
  446:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  447:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label122                                              CoreBuilder.mnd: do
  448:  setaddr :supplyBase*retaddr *label125                        CoreBuilder.mnd: supplyBase();
  449:  call *label14 *invalid :supplyBase*retval                    ...
        label *label125                                              ...
  450:  read *tmp72 *tmp127 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  451:  read *tmp73 *tmp127 ".monos"                                 ...
  452:  op add *tmp201 *tmp72 *tmp73                                 ...
  453:  jump *label122 lessThan *tmp201 16                           CoreBuilder.mnd: do
        label *label126                                              CoreBuilder.mnd: while true do
  454:  setaddr :supplyBase*retaddr *label129                        CoreBuilder.mnd: supplyBase();
  455:  call *label14 *invalid :supplyBase*retval                    ...
        label *label129                                              ...
  456:  jump *label126 always 0 0                                    CoreBuilder.mnd: while true do
        label *label7                                                Actions.mnd: void mineOre(ore, amount, block)
  457:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  458:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  459:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  460:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  461:  jump *label152 notEqual *tmp219 false                        ...
  462:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  463:  stop                                                         Actions.mnd: stopProcessor();
        label *label152                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  464:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label157                                              Actions.mnd: do
  465:  sensor *tmp223 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  466:  jump *label160 equal *tmp223 null                            ...
  467:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label160                                              ...
  468:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  469:  ucontrol within :locateOre:x :locateOre:y 6 *tmp226 0        Actions.mnd: while !within(x, y, RADIUS);
  470:  jump *label157 equal *tmp226 false                           Actions.mnd: do
  471:  sensor *tmp228 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  472:  jump *label162 equal *tmp228 :mineOre:ore                    ...
  473:  sensor *tmp231 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  474:  jump *label167 equal *tmp231 null                            ...
        label *label378                                              ...
  475:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  476:  sensor *tmp231 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  477:  jump *label378 notEqual *tmp231 null                         ...
        label *label167                                              ...
        label *label162                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  478:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  479:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label169                                              Actions.mnd: do
  480:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  481:  op notEqual *tmp235 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  482:  op notEqual *tmp236 :mineOre:item :mineOre:ore               ...
  483:  op land *tmp237 *tmp235 *tmp236                              ...
  484:  jump *label171 notEqual *tmp237 false                        ...
  485:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  486:  jump *label171 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  487:  sensor *tmp241 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  488:  jump *label169 lessThan *tmp241 :mineOre:amount              Actions.mnd: do
        label *label171                                              ...
  489:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  490:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  491:  sensor *tmp203 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  492:  jump *label397 notEqual *tmp203 :mineOre:ore                 ...
  493:  sensor *tmp206 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  494:  sensor *tmp207 :mineOre:block @y                             ...
  495:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  496:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  497:  jump *label391 notEqual *tmp208 false                        ...
        label *label389                                              ...
  498:  ucontrol approach *tmp206 *tmp207 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  499:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  500:  jump *label389 equal *tmp208 false                           ...
        label *label391                                              ...
  501:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label394                                              Actions.mnd: do
  502:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  503:  sensor *tmp212 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  504:  op mul *tmp213 *tmp212 :depositItems:cap                     ...
  505:  sensor *tmp214 :mineOre:block :mineOre:ore                   ...
  506:  jump *label394 greaterThan *tmp213 *tmp214                   Actions.mnd: do
  507:  jump *label402 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label397                                              ...
  508:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  509:  jump *label401 equal *tmp216 null                            ...
        label *label399                                              ...
  510:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  511:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  512:  jump *label399 notEqual *tmp216 null                         ...
        label *label401                                              ...
        label *label402                                              Actions.mnd: if @unit.@firstItem == item then
  513:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  514:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  515:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label8                                                Actions.mnd: void mineOre(ore)
  516:  write "Mining " .display ".status2"                          Actions.mnd: display.status2  = text;
  517:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2  = item;
  518:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  519:  write 30 .display ".transportTarget"                         Actions.mnd: display.transportTarget = target;
  520:  write :mineOre.1:ore .display ".transportItem"               Actions.mnd: display.transportItem = item;
  521:  ulocate ore core true :mineOre.1:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  522:  jump *label428 notEqual *tmp219 false                        ...
  523:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  524:  stop                                                         Actions.mnd: stopProcessor();
        label *label428                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  525:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label432                                              Actions.mnd: do
  526:  sensor *tmp223 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  527:  jump *label433 equal *tmp223 null                            ...
  528:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label433                                              ...
  529:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  530:  ucontrol within :locateOre:x :locateOre:y 6 *tmp226 0        Actions.mnd: while !within(x, y, RADIUS);
  531:  jump *label432 equal *tmp226 false                           Actions.mnd: do
  532:  sensor *tmp228 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  533:  jump *label443 equal *tmp228 :mineOre.1:ore                  ...
  534:  sensor *tmp231 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  535:  jump *label441 equal *tmp231 null                            ...
        label *label439                                              ...
  536:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  537:  sensor *tmp231 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  538:  jump *label439 notEqual *tmp231 null                         ...
        label *label441                                              ...
        label *label443                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  539:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  540:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label446                                              Actions.mnd: do
  541:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  542:  op notEqual *tmp235 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  543:  op notEqual *tmp236 :mineOre:item :mineOre.1:ore             ...
  544:  op land *tmp237 *tmp235 *tmp236                              ...
  545:  jump *label452 notEqual *tmp237 false                        ...
  546:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  547:  jump *label452 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  548:  sensor *tmp241 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  549:  jump *label446 lessThan *tmp241 30                           Actions.mnd: do
        label *label452                                              ...
  550:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  551:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  552:  sensor *tmp203 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  553:  jump *label465 notEqual *tmp203 :mineOre.1:ore               ...
  554:  sensor *tmp206 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  555:  sensor *tmp207 .core @y                                      ...
  556:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  557:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  558:  jump *label459 notEqual *tmp208 false                        ...
        label *label457                                              ...
  559:  ucontrol approach *tmp206 *tmp207 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  560:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  561:  jump *label457 equal *tmp208 false                           ...
        label *label459                                              ...
  562:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label462                                              Actions.mnd: do
  563:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  564:  sensor *tmp212 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  565:  op mul *tmp213 *tmp212 :depositItems:cap                     ...
  566:  sensor *tmp214 .core :mineOre.1:ore                          ...
  567:  jump *label462 greaterThan *tmp213 *tmp214                   Actions.mnd: do
  568:  jump *label470 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label465                                              ...
  569:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  570:  jump *label469 equal *tmp216 null                            ...
        label *label467                                              ...
  571:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  572:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  573:  jump *label467 notEqual *tmp216 null                         ...
        label *label469                                              ...
        label *label470                                              Actions.mnd: if @unit.@firstItem == item then
  574:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  575:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  576:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label14                                               CoreBuilder.mnd: void supplyBase()
  577:  jump *label182 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  578:  read *tmp72 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  579:  jump *label184 lessThanEq *tmp72 0                           ...
  580:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  581:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  582:  write .titaniumDrill .flareController ":start:drill"         ...
  583:  write false .flareController ":start*finished"               ...
  584:  write 3 .flareController "@counter"                          ...
        label *label184                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label182                                              CoreBuilder.mnd: if !flareControllerStarted then
  585:  read *tmp73 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  586:  jump *label186 lessThanEq *tmp73 3                           ...
  587:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  588:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  589:  write "Mining " .display ".status2"                          Actions.mnd: display.status2  = text;
  590:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  591:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  592:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  593:  set :mineOre:amount 30                                       ...
  594:  set :mineOre:block .core                                     ...
  595:  setaddr :mineOre*retaddr *label383                           ...
  596:  call *label7 *invalid :mineOre*retval                        ...
        label *label383                                              ...
  597:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label186                                              ...
  598:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  599:  jump *label192 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  600:  sensor *tmp287 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  601:  jump *label194 greaterThanEq *tmp287 .targetGraphite         ...
  602:  sensor *tmp290 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  603:  jump *label196 greaterThanEq *tmp290 5                       ...
  604:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  605:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  606:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  607:  write .press .display ".block2"                              Actions.mnd: display.block2 = block;
  608:  sensor :supplyBlock:blockCapacity .press @itemCapacity       Actions.mnd: var blockCapacity = block.@itemCapacity;
  609:  sensor *tmp294 .press @coal                                  Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  610:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  611:  jump *label201 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  612:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  613:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  614:  set :mineOre:block .press                                    ...
  615:  setaddr :mineOre*retaddr *label203                           ...
  616:  call *label7 *invalid :mineOre*retval                        ...
        label *label203                                              ...
        label *label201                                              Actions.mnd: if missing > 0 then
  617:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label196                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label194                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  618:  sensor *tmp298 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  619:  jump *label204 greaterThanEq *tmp298 .targetSilicon          ...
  620:  sensor *tmp301 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  621:  jump *label206 greaterThanEq *tmp301 5                       ...
  622:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  623:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  624:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  625:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  626:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   Actions.mnd: var blockCapacity = block.@itemCapacity;
  627:  sensor *tmp305 .smelter @coal                                Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  628:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  629:  jump *label211 lessThanEq :supplyBlock.1:missing 0           Actions.mnd: if missing > 0 then
  630:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  631:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  632:  set :mineOre:block .smelter                                  ...
  633:  setaddr :mineOre*retaddr *label213                           ...
  634:  call *label7 *invalid :mineOre*retval                        ...
        label *label213                                              ...
        label *label211                                              Actions.mnd: if missing > 0 then
  635:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  636:  jump *label207 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label206                                              ...
  637:  sensor *tmp309 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  638:  jump *label214 greaterThanEq *tmp309 5                       ...
  639:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  640:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  641:  write @sand .display ".item2"                                Actions.mnd: display.item2  = item;
  642:  write .smelter .display ".block2"                            Actions.mnd: display.block2 = block;
  643:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   Actions.mnd: var blockCapacity = block.@itemCapacity;
  644:  sensor *tmp313 .smelter @sand                                Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  645:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  646:  jump *label219 lessThanEq :supplyBlock.2:missing 0           Actions.mnd: if missing > 0 then
  647:  set :mineOre:ore @sand                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  648:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  649:  set :mineOre:block .smelter                                  ...
  650:  setaddr :mineOre*retaddr *label221                           ...
  651:  call *label7 *invalid :mineOre*retval                        ...
        label *label221                                              ...
        label *label219                                              Actions.mnd: if missing > 0 then
  652:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label214                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label207                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label204                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  653:  sensor *tmp317 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  654:  jump *label222 greaterThanEq *tmp317 .powerTarget            ...
  655:  sensor *tmp320 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  656:  jump *label224 greaterThanEq *tmp320 2                       ...
  657:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  658:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2  = text;
  659:  write @coal .display ".item2"                                Actions.mnd: display.item2  = item;
  660:  write .generator .display ".block2"                          Actions.mnd: display.block2 = block;
  661:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity Actions.mnd: var blockCapacity = block.@itemCapacity;
  662:  sensor *tmp324 .generator @coal                              Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  663:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  664:  jump *label229 lessThanEq :supplyBlock.3:missing 0           Actions.mnd: if missing > 0 then
  665:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  666:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  667:  set :mineOre:block .generator                                ...
  668:  setaddr :mineOre*retaddr *label231                           ...
  669:  call *label7 *invalid :mineOre*retval                        ...
        label *label231                                              ...
        label *label229                                              Actions.mnd: if missing > 0 then
  670:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label224                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label222                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label192                                              CoreBuilder.mnd: if unloader1 == null then
  671:  set *tmp330 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  672:  sensor *tmp328 .core @titanium                               ...
  673:  jump *label233 greaterThanEq *tmp328 .targetTitanium         ...
  674:  sensor *tmp331 .core @titanium                               ...
  675:  op sub *tmp332 .targetTitanium *tmp331                       ...
  676:  op min *tmp330 7 *tmp332                                     ...
        label *label233                                              ...
  677:  sensor *tmp334 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  678:  jump *label234 greaterThanEq *tmp334 *tmp330                 ...
  679:  jump *label235 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  680:  sensor *tmp339 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  681:  op mul *tmp340 .unloader1 .powerTarget                       ...
  682:  jump *label238 greaterThanEq *tmp339 *tmp340                 ...
  683:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  684:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  685:  setaddr :mineOre.1*retaddr *label241                         ...
  686:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label241                                              ...
  687:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label238                                              ...
  688:  sensor *tmp343 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  689:  jump *label242 greaterThanEq *tmp343 .targetSilicon          ...
  690:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  691:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  692:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  693:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  694:  jump *label246 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  695:  set :mineOre.1:ore @coal                                     ...
        label *label246                                              ...
  696:  setaddr :mineOre.1*retaddr *label247                         CoreBuilder.mnd: mineOre(ore);
  697:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label247                                              ...
  698:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label242                                              ...
  699:  sensor *tmp350 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  700:  jump *label248 greaterThanEq *tmp350 .targetCopper           ...
  701:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  702:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  703:  setaddr :mineOre.1*retaddr *label251                         ...
  704:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label251                                              ...
  705:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label248                                              ...
  706:  sensor *tmp353 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  707:  jump *label252 greaterThanEq *tmp353 .targetLead             ...
  708:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  709:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  710:  setaddr :mineOre.1*retaddr *label255                         ...
  711:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label255                                              ...
  712:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label252                                              ...
  713:  sensor *tmp356 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  714:  jump *label256 greaterThanEq *tmp356 .targetMetaglass        ...
  715:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  716:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  717:  setaddr :mineOre.1*retaddr *label259                         ...
  718:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label259                                              ...
  719:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label256                                              ...
  720:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  721:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  722:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  723:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  724:  jump *label262 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  725:  set :mineOre.1:ore @coal                                     ...
        label *label262                                              ...
  726:  setaddr :mineOre.1*retaddr *label263                         CoreBuilder.mnd: mineOre(ore);
  727:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label263                                              ...
  728:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label234                                              ...
  729:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  730:  sensor :transportStatus.2:target .titaniumDrill @itemCapacit Actions.mnd: transportStatus(block.@itemCapacity, item);
  731:  write :transportStatus.2:target .display ".transportTarget"  Actions.mnd: display.transportTarget = target;
  732:  write @titanium .display ".transportItem"                    Actions.mnd: display.transportItem = item;
  733:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2  = text;
  734:  write @titanium .display ".item2"                            Actions.mnd: display.item2  = item;
  735:  write .titaniumDrill .display ".block2"                      Actions.mnd: display.block2 = block;
  736:  sensor *tmp364 .titaniumDrill @x                             Actions.mnd: moveToEmpty(block.@x, block.@y);
  737:  sensor *tmp365 .titaniumDrill @y                             ...
  738:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label270                                              Actions.mnd: do
  739:  sensor *tmp366 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  740:  jump *label273 equal *tmp366 null                            ...
  741:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label273                                              ...
  742:  ucontrol approach *tmp364 *tmp365 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  743:  ucontrol within *tmp364 *tmp365 6 *tmp369 0                  Actions.mnd: while !within(x, y, RADIUS);
  744:  jump *label270 equal *tmp369 false                           Actions.mnd: do
  745:  sensor *tmp371 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  746:  jump *label278 equal *tmp371 null                            ...
        label *label379                                              ...
  747:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  748:  sensor *tmp371 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  749:  jump *label379 notEqual *tmp371 null                         ...
        label *label278                                              ...
        label *label279                                              Actions.mnd: do
  750:  ucontrol itemTake .titaniumDrill @titanium 30 0 0            Actions.mnd: itemTake(block, item, capacity);
  751:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  752:  op notEqual *tmp374 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  753:  op notEqual *tmp375 :fetchBlock:unitItem @titanium           ...
  754:  op land *tmp376 *tmp374 *tmp375                              ...
  755:  jump *label282 equal *tmp376 false                           ...
  756:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label282                                              Actions.mnd: if unitItem != null and unitItem != item then
  757:  sensor *tmp378 @unit @titanium                               Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  758:  op lessThan *tmp379 *tmp378 30                               ...
  759:  sensor *tmp380 .titaniumDrill @titanium                      ...
  760:  op land *tmp381 *tmp379 *tmp380                              ...
  761:  jump *label279 notEqual *tmp381 false                        Actions.mnd: do
  762:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  763:  sensor *tmp203 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  764:  jump *label417 notEqual *tmp203 @titanium                    ...
  765:  sensor *tmp206 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  766:  sensor *tmp207 .core @y                                      ...
  767:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  768:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  769:  jump *label411 notEqual *tmp208 false                        ...
        label *label409                                              ...
  770:  ucontrol approach *tmp206 *tmp207 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  771:  ucontrol within *tmp206 *tmp207 6 *tmp208 0                  Actions.mnd: while !within(x, y, radius) do
  772:  jump *label409 equal *tmp208 false                           ...
        label *label411                                              ...
  773:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label414                                              Actions.mnd: do
  774:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  775:  sensor *tmp212 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  776:  op mul *tmp213 *tmp212 :depositItems:cap                     ...
  777:  sensor *tmp214 .core @titanium                               ...
  778:  jump *label414 greaterThan *tmp213 *tmp214                   Actions.mnd: do
  779:  jump *label422 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label417                                              ...
  780:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  781:  jump *label421 equal *tmp216 null                            ...
        label *label419                                              ...
  782:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  783:  sensor *tmp216 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  784:  jump *label419 notEqual *tmp216 null                         ...
        label *label421                                              ...
        label *label422                                              Actions.mnd: if @unit.@firstItem == item then
  785:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  786:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label235                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  787:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label15                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  788:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  789:  op sign *tmp383 :meetTarget:lead 0                           ...
  790:  op add :meetTarget:count :meetTarget:count *tmp383           ...
  791:  op sign *tmp383 :meetTarget:graphite 0                       ...
  792:  op add :meetTarget:count :meetTarget:count *tmp383           ...
  793:  op sign *tmp383 :meetTarget:silicon 0                        ...
  794:  op add :meetTarget:count :meetTarget:count *tmp383           ...
  795:  op sign *tmp383 :meetTarget:titanium 0                       ...
  796:  op add :meetTarget:count :meetTarget:count *tmp383           ...
  797:  op sign *tmp383 :meetTarget:metaglass 0                      ...
  798:  op add :meetTarget:count :meetTarget:count *tmp383           ...
  799:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  800:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  801:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  802:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  803:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  804:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  805:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  806:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  807:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  808:  op add *tmp384 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  809:  op add .targetLead *tmp384 1                                 ...
  810:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  811:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  812:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  813:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  814:  op add *tmp386 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  815:  write *tmp386 .controller ".pressTarget"                     ...
  816:  op add *tmp387 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  817:  write *tmp387 .controller ".smelterTarget"                   ...
  818:  op add *tmp388 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  819:  write *tmp388 .controller ".kilnTarget"                      ...
  820:  write *tmp384 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  821:  op sign *tmp390 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  822:  op mul *tmp391 *tmp390 20                                    ...
  823:  op add *tmp392 :meetTarget:silicon *tmp391                   ...
  824:  write *tmp392 .controller ".siliconReserve"                  ...
  825:  sensor *tmp394 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  826:  jump *label299 greaterThanEq *tmp394 :meetTarget:copper      ...
  827:  set *tmp393 false                                            ...
  828:  jump *label298 always 0 0                                    ...
        label *label299                                              ...
  829:  sensor *tmp397 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  830:  jump *label301 greaterThanEq *tmp397 .targetLead             ...
  831:  set *tmp393 false                                            ...
  832:  jump *label298 always 0 0                                    ...
        label *label301                                              ...
  833:  sensor *tmp400 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  834:  jump *label303 greaterThanEq *tmp400 :meetTarget:graphite    ...
  835:  set *tmp393 false                                            ...
  836:  jump *label298 always 0 0                                    ...
        label *label303                                              ...
  837:  sensor *tmp403 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  838:  jump *label305 greaterThanEq *tmp403 :meetTarget:silicon     ...
  839:  set *tmp393 false                                            ...
  840:  jump *label298 always 0 0                                    ...
        label *label305                                              ...
  841:  sensor *tmp406 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  842:  jump *label307 greaterThanEq *tmp406 :meetTarget:titanium    ...
  843:  set *tmp393 false                                            ...
  844:  jump *label298 always 0 0                                    ...
        label *label307                                              ...
  845:  sensor *tmp409 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  846:  jump *label309 greaterThanEq *tmp409 :meetTarget:metaglass   ...
  847:  set *tmp393 false                                            ...
  848:  jump *label298 always 0 0                                    ...
        label *label309                                              ...
  849:  set *tmp393 true                                             CoreBuilder.mnd: return true;
  850:  jump *label298 always 0 0                                    ...
        label *label298                                              CoreBuilder.mnd: while !targetMet() do
  851:  jump *label297 notEqual *tmp393 false                        ...
        label *label474                                              ...
  852:  setaddr :supplyBase*retaddr *label311                        CoreBuilder.mnd: supplyBase();
  853:  call *label14 *invalid :supplyBase*retval                    ...
        label *label311                                              ...
  854:  sensor *tmp394 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  855:  jump *label475 greaterThanEq *tmp394 .targetCopper           ...
  856:  set *tmp393 false                                            ...
  857:  jump *label487 always 0 0                                    ...
        label *label475                                              ...
  858:  sensor *tmp397 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  859:  jump *label477 greaterThanEq *tmp397 .targetLead             ...
  860:  set *tmp393 false                                            ...
  861:  jump *label487 always 0 0                                    ...
        label *label477                                              ...
  862:  sensor *tmp400 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  863:  jump *label479 greaterThanEq *tmp400 .targetGraphite         ...
  864:  set *tmp393 false                                            ...
  865:  jump *label487 always 0 0                                    ...
        label *label479                                              ...
  866:  sensor *tmp403 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  867:  jump *label481 greaterThanEq *tmp403 .targetSilicon          ...
  868:  set *tmp393 false                                            ...
  869:  jump *label487 always 0 0                                    ...
        label *label481                                              ...
  870:  sensor *tmp406 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  871:  jump *label483 greaterThanEq *tmp406 .targetTitanium         ...
  872:  set *tmp393 false                                            ...
  873:  jump *label487 always 0 0                                    ...
        label *label483                                              ...
  874:  sensor *tmp409 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  875:  jump *label485 greaterThanEq *tmp409 .targetMetaglass        ...
  876:  set *tmp393 false                                            ...
  877:  jump *label487 always 0 0                                    ...
        label *label485                                              ...
  878:  set *tmp393 true                                             CoreBuilder.mnd: return true;
  879:  jump *label487 always 0 0                                    ...
        label *label487                                              CoreBuilder.mnd: while !targetMet() do
  880:  jump *label474 equal *tmp393 false                           ...
        label *label297                                              ...
  881:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label16                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  882:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  883:  ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415 0  Actions.mnd: while !within(x, y, radius) do
  884:  jump *label318 notEqual *tmp415 false                        ...
        label *label380                                              ...
  885:  ucontrol approach :buildBlockAt:x :buildBlockAt:y 5.5 0 0    Actions.mnd: approach(x, y, radius - 0.5);
  886:  ucontrol within :buildBlockAt:x :buildBlockAt:y 6 *tmp415 0  Actions.mnd: while !within(x, y, radius) do
  887:  jump *label380 equal *tmp415 false                           ...
        label *label318                                              ...
  888:  write "Building..." .display ".status3"                      Actions.mnd: display.status3 = text;
  889:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  890:  jump *label320 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  891:  jump *label322 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  892:  set :buildBlockAt*retval :buildBlockAt:building              ...
  893:  return :buildBlockAt*retaddr                                 ...
        label *label322                                              ...
  894:  jump *label324 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  895:  set :buildBlockAt*retval null                                ...
  896:  return :buildBlockAt*retaddr                                 ...
        label *label324                                              ...
  897:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  898:  stop                                                         Actions.mnd: stopProcessor();
        label *label320                                              CoreBuilder.mnd: if building != null then
  899:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  900:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label327                                              CoreBuilder.mnd: do
  901:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  902:  jump *label330 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  903:  set :buildBlockAt*retval null                                ...
  904:  return :buildBlockAt*retaddr                                 ...
        label *label330                                              ...
  905:  jump *label327 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  906:  sensor :log:encodedId :buildBlockAt:block @id                CoreBuilder.mnd: log(block.@id);
  907:  read *tmp90 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(@second * 1000) * 1000;
  908:  op sub *tmp431 *tmp90 1                                      ...
  909:  write *tmp431 bank1 511                                      ...
  910:  op idiv *tmp435 @second 0.001                                ...
  911:  op mul *tmp436 *tmp435 1000                                  ...
  912:  op add *tmp437 :log:encodedId *tmp436                        ...
  913:  write *tmp437 bank1 *tmp431                                  ...
  914:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  915:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label18                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  916:  read *tmp245 :buildBlockFromCfg:cfg 0                        CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  917:  op sub *tmp246 *tmp245 35                                    ...
  918:  lookup block :unpackCfg:type *tmp246                         ...
  919:  read *tmp249 :buildBlockFromCfg:cfg 1                        CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  920:  op sub :unpackCfg:x *tmp249 42                               ...
  921:  read *tmp253 :buildBlockFromCfg:cfg 2                        CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  922:  op sub :unpackCfg:y *tmp253 42                               ...
  923:  read *tmp257 :buildBlockFromCfg:cfg 3                        CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  924:  op sub :unpackCfg:cu *tmp257 35                              ...
  925:  read *tmp260 :buildBlockFromCfg:cfg 4                        CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  926:  op sub :unpackCfg:pb *tmp260 35                              ...
  927:  read *tmp263 :buildBlockFromCfg:cfg 5                        CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  928:  op sub :unpackCfg:gr *tmp263 35                              ...
  929:  read *tmp266 :buildBlockFromCfg:cfg 6                        CoreBuilder.mnd: si = char(cfg, index++) - 35;
  930:  op sub :unpackCfg:si *tmp266 35                              ...
  931:  read *tmp269 :buildBlockFromCfg:cfg 7                        CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  932:  op sub :unpackCfg:ti *tmp269 35                              ...
  933:  read *tmp272 :buildBlockFromCfg:cfg 8                        CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  934:  op sub :unpackCfg:mg *tmp272 35                              ...
  935:  read *tmp275 :buildBlockFromCfg:cfg 9                        CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  936:  op sub :unpackCfg:rotation *tmp275 35                        ...
  937:  op add *tmp438 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, rotation, null);
  938:  op add *tmp439 .coreY :unpackCfg:y                           ...
  939:  set :buildBlock:block :unpackCfg:type                        ...
  940:  set :buildBlock:x *tmp438                                    ...
  941:  set :buildBlock:y *tmp439                                    ...
  942:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  943:  set :buildBlock:config null                                  ...
  944:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  945:  set :meetTarget:copper :unpackCfg:cu                         ...
  946:  set :meetTarget:lead :unpackCfg:pb                           ...
  947:  set :meetTarget:graphite :unpackCfg:gr                       ...
  948:  set :meetTarget:silicon :unpackCfg:si                        ...
  949:  set :meetTarget:titanium :unpackCfg:ti                       ...
  950:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  951:  setaddr :meetTarget*retaddr *label495                        ...
  952:  call *label15 *invalid :meetTarget*retval                    ...
        label *label495                                              ...
  953:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  954:  set :buildBlockAt:x :buildBlock:x                            ...
  955:  set :buildBlockAt:y :buildBlock:y                            ...
  956:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  957:  set :buildBlockAt:config :buildBlock:config                  ...
  958:  set :buildBlockAt:skipError false                            ...
  959:  setaddr :buildBlockAt*retaddr *label496                      ...
  960:  call *label16 *invalid :buildBlockAt*retval                  ...
        label *label496                                              ...
  961:  set :buildBlockFromCfg*retval :buildBlockAt*retval           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, rotation, null);
  962:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg)
        label *label19                                               CoreBuilder.mnd: void meetTarget(cfg)
  963:  read *tmp245 :meetTarget.1:cfg 0                             CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  964:  op sub *tmp246 *tmp245 35                                    ...
  965:  lookup block :unpackCfg:type *tmp246                         ...
  966:  read *tmp249 :meetTarget.1:cfg 1                             CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  967:  op sub :unpackCfg:x *tmp249 42                               ...
  968:  read *tmp253 :meetTarget.1:cfg 2                             CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  969:  op sub :unpackCfg:y *tmp253 42                               ...
  970:  read *tmp257 :meetTarget.1:cfg 3                             CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  971:  op sub :unpackCfg:cu *tmp257 35                              ...
  972:  read *tmp260 :meetTarget.1:cfg 4                             CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  973:  op sub :unpackCfg:pb *tmp260 35                              ...
  974:  read *tmp263 :meetTarget.1:cfg 5                             CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  975:  op sub :unpackCfg:gr *tmp263 35                              ...
  976:  read *tmp266 :meetTarget.1:cfg 6                             CoreBuilder.mnd: si = char(cfg, index++) - 35;
  977:  op sub :unpackCfg:si *tmp266 35                              ...
  978:  read *tmp269 :meetTarget.1:cfg 7                             CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  979:  op sub :unpackCfg:ti *tmp269 35                              ...
  980:  read *tmp272 :meetTarget.1:cfg 8                             CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  981:  op sub :unpackCfg:mg *tmp272 35                              ...
  982:  read *tmp275 :meetTarget.1:cfg 9                             CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  983:  op sub :unpackCfg:rotation *tmp275 35                        ...
  984:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg);
  985:  set :meetTarget:copper :unpackCfg:cu                         ...
  986:  set :meetTarget:lead :unpackCfg:pb                           ...
  987:  set :meetTarget:graphite :unpackCfg:gr                       ...
  988:  set :meetTarget:silicon :unpackCfg:si                        ...
  989:  set :meetTarget:titanium :unpackCfg:ti                       ...
  990:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  991:  setaddr :meetTarget*retaddr *label342                        ...
  992:  call *label15 *invalid :meetTarget*retval                    ...
        label *label342                                              ...
  993:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)


Performance: parsed in 877 ms, compiled in 425 ms, optimized in 2,257 ms, run in 7 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (11 steps):
The program didn't generate any output.
Execution exception at instruction 27: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
