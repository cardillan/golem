  1468 instructions before optimizations.
    58 instructions eliminated by Temp Variables Elimination (2 iterations).
   107 instructions eliminated by Dead Code Elimination (9 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
    47 instructions eliminated by Jump Optimization (5 iterations).
    54 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     6 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
   352 instructions eliminated by Data Flow Optimization (4 passes, 17 iterations).
    19 loops improved by Loop Hoisting.
    23 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
    62 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
     8 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by JumpThreading.
    47 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   872 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 82):
    Replicate loop condition at CoreBuilder.mnd:124:5            size    +1, benefit   615473.6, efficiency 615473.633
    Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221
  * Unroll iteration loop at CoreBuilder.mnd:321:5               size   -11, benefit    10350.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 91):
  * Replicate loop condition at CoreBuilder.mnd:124:5            size    +1, benefit   615473.6, efficiency 615473.633 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 90):
  * Replicate loop condition at CoreBuilder.mnd:142:5            size    +1, benefit   391982.4, efficiency 391982.422 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 89):
  * Replicate loop condition at CoreBuilder.mnd:166:9            size    +1, benefit   195991.2, efficiency 195991.211 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 88):
  * Replicate loop condition at CoreBuilder.mnd:334:5            size   +21, benefit    11250.0, efficiency    535.714 (+21 instructions)
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 67):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
  ! Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 2: speed optimization selection (cost limit 108):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +169, benefit     6250.0, efficiency     36.982
  * Unroll iteration loop at CoreBuilder.mnd:435:13              size   +77, benefit    11875.0, efficiency    154.221 (+56 instructions)

Pass 2: speed optimization selection (cost limit 52):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 3: speed optimization selection (cost limit 52):
  ! Unroll loop at CoreBuilder.mnd:429:5                         size  +393, benefit     6250.0, efficiency     15.903

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-71 instructions):
 
   186 setaddr :buildBlock*retaddr *label41 (h:*label41)
   187 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   188 label *label41
-    * set *tmp28 :buildBlock*retval
   189 jump *label36 always
   190 label *label38
   191 multijump *tmp29 0 0 (m:marker3)
   192 multilabel *label40 (m:marker3)
   193 label *label39
-    * set *tmp28 null
   194 label *label36
   195 set :buildBlockFromCfg.4:block @silicon-smelter
   196 set :buildBlockFromCfg.4:offsetX 1.5
 
   268 op or *tmp45 *tmp41 *tmp44
   269 jump *label59 equal *tmp45 false
   270 jump *label57 always
-    * set *tmp46 null
   271 jump *label60 always
   272 label *label59
-    * set *tmp46 null
   273 label *label60
   274 sensor *tmp48 @unit @x
   275 op sin *tmp49 :locateOreAway:angle
 
   286 label *label62
   287 op add :locateOreAway:distance :locateOreAway:distance 4
   288 op add :locateOreAway:angle :locateOreAway:angle 45
-    * set *tmp47 :locateOreAway:angle
   289 label *label61
   290 label *label56
   291 jump *label55 always
   292 label *label57
-    * set *tmp38 null
   293 label *label54
   294 set :buildTitaniumDrillCfg:x :locateOreAway:x
   295 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   345 label *label75
   346 set *tmp61 null
   347 label *label76
-    * set *tmp57 *tmp61
   348 label *label74
   349 set :buildTitaniumDrillCfg:count :checkOre:count
   350 op add *tmp63 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   362 label *label78
   363 set *tmp68 null
   364 label *label79
-    * set *tmp64 *tmp68
   365 label *label77
   366 set :buildTitaniumDrillCfg:count :checkOre.1:count
   367 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
 
   379 label *label81
   380 set *tmp75 null
   381 label *label82
-    * set *tmp71 *tmp75
   382 label *label80
   383 set :buildTitaniumDrillCfg:count :checkOre.2:count
   384 op add *tmp77 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   397 label *label84
   398 set *tmp83 null
   399 label *label85
-    * set *tmp79 *tmp83
   400 label *label83
   401 set :buildTitaniumDrillCfg:count :checkOre.3:count
   402 op greaterThan *tmp85 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
   412 label *label88
   413 set *tmp88 null
   414 label *label89
-    * set *tmp86 *tmp88
   415 jump *label87 always
   416 label *label86
-    * set *tmp86 null
   417 label *label87
   418 label *label68
   419 multijump *tmp56 0 0 (m:marker5)
 
   445 jump *label93 equal *tmp95 false
   446 set *tmp37 :buildTitaniumDrillCfg:result
   447 jump *label49 always
-    * set *tmp96 null
   448 jump *label94 always
   449 label *label93
-    * set *tmp96 null
   450 label *label94
   451 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   452 jump *label52 always
-    * set *tmp90 null
   453 jump *label91 always
   454 label *label90
-    * set *tmp90 null
   455 label *label91
   456 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   457 op greaterThan *tmp97 :buildTitaniumDrillCfg:attempts 5
 
   471 label *label98
   472 op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
   473 op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
-    * set *tmp99 :buildTitaniumDrillCfg:angle
   474 label *label97
   475 set :buildTitaniumDrillCfg:attempts 0
   476 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
   477 op max *tmp109 *tmp108 1
   478 set :buildTitaniumDrillCfg:minimum *tmp109
-    * set *tmp98 :buildTitaniumDrillCfg:minimum
   479 jump *label96 always
   480 label *label95
-    * set *tmp98 null
   481 label *label96
   482 label *label51
   483 jump *label50 always
 
   558 setaddr :buildBlock*retaddr *label110 (h:*label110)
   559 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   560 label *label110
-    * set *tmp114 :buildBlock*retval
   561 jump *label105 always
   562 label *label107
   563 multijump *tmp115 0 0 (m:marker7)
   564 multilabel *label109 (m:marker7)
   565 label *label108
-    * set *tmp114 null
   566 label *label105
   567 set :buildBlockFromCfg.7:block @micro-processor
   568 set :buildBlockFromCfg.7:offsetX 1
 
   723 setaddr :buildBlock*retaddr *label134 (h:*label134)
   724 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   725 label *label134
-    * set *tmp131 :buildBlock*retval
   726 jump *label129 always
   727 label *label131
   728 multijump *tmp132 0 0 (m:marker11)
   729 multilabel *label133 (m:marker11)
   730 label *label132
-    * set *tmp131 null
   731 label *label129
   732 write @mono .processor ".unitToProduce"
   733 set :buildBlockFromCfg.11:block @unloader
 
   761 setaddr :buildBlock*retaddr *label140 (h:*label140)
   762 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   763 label *label140
-    * set *tmp135 :buildBlock*retval
   764 jump *label135 always
   765 label *label137
   766 multijump *tmp136 0 0 (m:marker12)
   767 multilabel *label139 (m:marker12)
   768 label *label138
-    * set *tmp135 null
   769 label *label135
   770 set :buildBlockFromCfg.12:block @kiln
   771 set :buildBlockFromCfg.12:offsetX 3.5
 
   798 setaddr :buildBlock*retaddr *label146 (h:*label146)
   799 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   800 label *label146
-    * set *tmp139 :buildBlock*retval
   801 jump *label141 always
   802 label *label143
   803 multijump *tmp140 0 0 (m:marker13)
   804 multilabel *label145 (m:marker13)
   805 label *label144
-    * set *tmp139 null
   806 label *label141
   807 write .kiln .processor ".kiln"
   808 set :buildBlockFromCfg.13:block @junction
 
   836 setaddr :buildBlock*retaddr *label152 (h:*label152)
   837 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   838 label *label152
-    * set *tmp143 :buildBlock*retval
   839 jump *label147 always
   840 label *label149
   841 multijump *tmp144 0 0 (m:marker14)
   842 multilabel *label151 (m:marker14)
   843 label *label150
-    * set *tmp143 null
   844 label *label147
   845 set :buildBlockFromCfg.14:block @water-extractor
   846 set :buildBlockFromCfg.14:offsetX -3.5
 
   873 setaddr :buildBlock*retaddr *label158 (h:*label158)
   874 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   875 label *label158
-    * set *tmp147 :buildBlock*retval
   876 jump *label153 always
   877 label *label155
   878 multijump *tmp148 0 0 (m:marker15)
   879 multilabel *label157 (m:marker15)
   880 label *label156
-    * set *tmp147 null
   881 label *label153
   882 set :buildBlockFromCfg.15:block @steam-generator
   883 set :buildBlockFromCfg.15:offsetX -3.5
 
   951 setaddr :buildBlock*retaddr *label170 (h:*label170)
   952 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   953 label *label170
-    * set *tmp155 :buildBlock*retval
   954 jump *label165 always
   955 label *label167
   956 multijump *tmp156 0 0 (m:marker17)
   957 multilabel *label169 (m:marker17)
   958 label *label168
-    * set *tmp155 null
   959 label *label165
   960 label *label171
   961 jump *label173 equal true false
 
  1018 op notEqual *tmp166 *tmp165 null
  1019 jump *label184 equal *tmp166 false
  1020 ucontrol itemDrop @air 1000
-    * set *tmp167 null
  1021 jump *label185 always
  1022 label *label184
-    * set *tmp167 null
  1023 label *label185
  1024 set :moveTo.1:x :moveToEmpty:x
  1025 set :moveTo.1:y :moveToEmpty:y
 
  1077 op greaterThanEq *tmp180 *tmp179 :depositItems:cap
  1078 jump *label202 equal *tmp180 false
  1079 jump *label201 always
-    * set *tmp181 null
  1080 jump *label203 always
  1081 label *label202
-    * set *tmp181 null
  1082 label *label203
  1083 label *label200
  1084 sensor *tmp182 @unit @firstItem
  1085 op notEqual *tmp183 *tmp182 null
  1086 jump *label199 notEqual *tmp183 false
  1087 label *label201
-    * set *tmp174 null
  1088 jump *label195 always
  1089 label *label194
  1090 label *label204
 
  1095 label *label205
  1096 jump *label204 always
  1097 label *label206
-    * set *tmp174 null
  1098 label *label195
  1099 set .transportTarget 0
  1100 label *label192
 
  1110 printflush message1
  1111 stop
  1112 label *label210
-    * set *tmp189 null
  1113 jump *label209 always
  1114 label *label208
-    * set *tmp189 null
  1115 label *label209
  1116 label *label207
  1117 return :locateOre*retaddr
 
  1141 op land *tmp193 *tmp191 *tmp192
  1142 jump *label218 equal *tmp193 false
  1143 jump *label217 always
-    * set *tmp194 null
  1144 jump *label219 always
  1145 label *label218
-    * set *tmp194 null
  1146 label *label219
  1147 ucontrol mine :mineOre:x :mineOre:y
  1148 label *label216
 
  1198 op land *tmp204 *tmp202 *tmp203
  1199 jump *label229 equal *tmp204 false
  1200 ucontrol itemDrop @air 1000
-    * set *tmp205 null
  1201 jump *label230 always
  1202 label *label229
-    * set *tmp205 null
  1203 label *label230
  1204 label *label227
  1205 sensor *tmp206 @unit :fetchBlock:item
 
  1251 setaddr :mineOre*retaddr *label244 (h:*label244)
  1252 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1253 label *label244
-    * set *tmp222 null
  1254 jump *label243 always
  1255 label *label242
-    * set *tmp222 null
  1256 label *label243
  1257 label *label240
  1258 set :supplyBlocks:supplied true
 
  1261 label *label237
  1262 set *tmp217 null
  1263 label *label238
-    * set *tmp214 *tmp217
  1264 jump *label236 always
  1265 label *label235
-    * set *tmp214 null
  1266 label *label236
  1267 sensor *tmp223 .core @silicon
  1268 op lessThan *tmp224 *tmp223 .updatedSiliconTarget
 
  1294 setaddr :mineOre*retaddr *label254 (h:*label254)
  1295 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1296 label *label254
-    * set *tmp233 null
  1297 jump *label253 always
  1298 label *label252
-    * set *tmp233 null
  1299 label *label253
  1300 label *label250
  1301 set :supplyBlocks:supplied true
 
  1329 setaddr :mineOre*retaddr *label262 (h:*label262)
  1330 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1331 label *label262
-    * set *tmp241 null
  1332 jump *label261 always
  1333 label *label260
-    * set *tmp241 null
  1334 label *label261
  1335 label *label258
  1336 set :supplyBlocks:supplied true
 
  1341 label *label256
  1342 set *tmp228 *tmp236
  1343 label *label248
-    * set *tmp225 *tmp228
  1344 jump *label246 always
  1345 label *label245
-    * set *tmp225 null
  1346 label *label246
  1347 sensor *tmp242 .battery @totalPower
  1348 op lessThan *tmp243 *tmp242 .powerTarget
 
  1371 setaddr :mineOre*retaddr *label270 (h:*label270)
  1372 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1373 label *label270
-    * set *tmp249 null
  1374 jump *label269 always
  1375 label *label268
-    * set *tmp249 null
  1376 label *label269
  1377 label *label266
  1378 set :supplyBlocks:supplied true
 
  1381 label *label263
  1382 set *tmp244 null
  1383 label *label264
-    * set *tmp211 *tmp244
  1384 jump *label234 always
  1385 label *label233
  1386 op notEqual *tmp250 .processor null
 
  1406 label *label271
  1407 set *tmp251 null
  1408 label *label272
-    * set *tmp211 *tmp251
  1409 label *label234
  1410 sensor *tmp255 .titanium_drill @titanium
  1411 op lessThan *tmp256 *tmp255 .titaniumTrigger
 
  1543 label *label287
  1544 set *tmp260 *tmp267
  1545 label *label280
-    * set *tmp257 *tmp260
  1546 jump *label278 always
  1547 label *label277
  1548 set :status1.10:text "Fetching titanium"
 
  1553 setaddr :fetchBlock*retaddr *label309 (h:*label309)
  1554 call *label8 *invalid :fetchBlock*retval (m:*label309) (h:*label309)
  1555 label *label309
-    * set *tmp257 null
  1556 label *label278
  1557 label *label232
  1558 return :supplyBlocks*retaddr
 
  1602 set .updatedGraphiteTarget *tmp284
  1603 op max *tmp285 10 .siliconTarget
  1604 set .updatedSiliconTarget *tmp285
-    * set *tmp283 .updatedSiliconTarget
  1605 jump *label321 always
  1606 label *label320
  1607 op add *tmp286 .graphiteTarget 30
 
  1610 write *tmp287 .processor ".smelterTarget"
  1611 op add *tmp288 .metaglassTarget 30
  1612 write *tmp288 .processor ".kilnTarget"
-    * set *tmp283 *tmp288
  1613 label *label321
  1614 sensor *tmp289 .core @titanium
  1615 op add *tmp290 .titaniumTarget 10
 
  1671 jump *label333 equal *tmp319 false
  1672 set :buildBlockAt*retval :buildBlockAt:building
  1673 jump *label328 always
-    * set *tmp320 null
  1674 jump *label334 always
  1675 label *label333
-    * set *tmp320 null
  1676 label *label334
  1677 jump *label335 equal :buildBlockAt:skipError false
  1678 set :buildBlockAt*retval null
  1679 jump *label328 always
-    * set *tmp321 null
  1680 jump *label336 always
  1681 label *label335
-    * set *tmp321 null
  1682 label *label336
  1683 print "[salmon]"
  1684 print "Cannot build at ("
 
  1690 printflush message1
  1691 stop
  1692 label *label337
-    * set *tmp318 null
  1693 jump *label332 always
  1694 label *label331
-    * set *tmp318 null
  1695 label *label332
  1696 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1697 wait 0.25
 
  1701 op equal *tmp324 :buildBlockAt:building null
  1702 jump *label341 equal *tmp324 false
  1703 jump *label340 always
-    * set *tmp325 null
  1704 jump *label342 always
  1705 label *label341
-    * set *tmp325 null
  1706 label *label342
  1707 label *label339
  1708 op notEqual *tmp326 :buildBlockAt:type :buildBlockAt:block

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-20 instructions):
 
   340 jump *label75 equal *tmp60 false
   341 set *tmp62 :checkOre:count
   342 op add :checkOre:count :checkOre:count 1
-    * set *tmp61 *tmp62
   343 jump *label76 always
   344 label *label75
-    * set *tmp61 null
   345 label *label76
   346 label *label74
   347 set :buildTitaniumDrillCfg:count :checkOre:count
 
   355 jump *label78 equal *tmp67 false
   356 set *tmp69 :checkOre.1:count
   357 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp68 *tmp69
   358 jump *label79 always
   359 label *label78
-    * set *tmp68 null
   360 label *label79
   361 label *label77
   362 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
   370 jump *label81 equal *tmp74 false
   371 set *tmp76 :checkOre.2:count
   372 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp75 *tmp76
   373 jump *label82 always
   374 label *label81
-    * set *tmp75 null
   375 label *label82
   376 label *label80
   377 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
   386 jump *label84 equal *tmp82 false
   387 set *tmp84 :checkOre.3:count
   388 op add :checkOre.3:count :checkOre.3:count 1
-    * set *tmp83 *tmp84
   389 jump *label85 always
   390 label *label84
-    * set *tmp83 null
   391 label *label85
   392 label *label83
   393 set :buildTitaniumDrillCfg:count :checkOre.3:count
 
   399 op greaterThanEq *tmp87 :buildTitaniumDrillCfg:count 4
   400 jump *label88 equal *tmp87 false
   401 jump *label66 always
-    * set *tmp88 null
   402 jump *label89 always
   403 label *label88
-    * set *tmp88 null
   404 label *label89
   405 jump *label87 always
   406 label *label86
 
  1246 label *label243
  1247 label *label240
  1248 set :supplyBlocks:supplied true
-    * set *tmp217 :supplyBlocks:supplied
  1249 jump *label238 always
  1250 label *label237
-    * set *tmp217 null
  1251 label *label238
  1252 jump *label236 always
  1253 label *label235
 
  1287 label *label253
  1288 label *label250
  1289 set :supplyBlocks:supplied true
-    * set *tmp228 :supplyBlocks:supplied
  1290 jump *label248 always
  1291 label *label247
  1292 sensor *tmp234 .smelter @sand
 
  1326 label *label255
  1327 set *tmp236 null
  1328 label *label256
-    * set *tmp228 *tmp236
  1329 label *label248
  1330 jump *label246 always
  1331 label *label245
 
  1362 label *label269
  1363 label *label266
  1364 set :supplyBlocks:supplied true
-    * set *tmp244 :supplyBlocks:supplied
  1365 jump *label264 always
  1366 label *label263
-    * set *tmp244 null
  1367 label *label264
  1368 jump *label234 always
  1369 label *label233
 
  1385 label *label273
  1386 set *tmp254 null
  1387 label *label274
-    * set *tmp251 *tmp254
  1388 jump *label272 always
  1389 label *label271
-    * set *tmp251 null
  1390 label *label272
  1391 label *label234
  1392 sensor *tmp255 .titanium_drill @titanium
 
  1421 setaddr :mineOre.1*retaddr *label285 (h:*label285)
  1422 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
  1423 label *label285
-    * set *tmp260 null
  1424 jump *label280 always
  1425 label *label279
  1426 sensor *tmp265 .core @copper
 
  1522 label *label292
  1523 set *tmp267 *tmp270
  1524 label *label287
-    * set *tmp260 *tmp267
  1525 label *label280
  1526 jump *label278 always
  1527 label *label277

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   338 ucontrol getBlock :checkOre:x :checkOre:y *tmp59 *tmp58 :checkOre:floor
   339 op equal *tmp60 :checkOre:floor :checkOre:ore
   340 jump *label75 equal *tmp60 false
-    * set *tmp62 :checkOre:count
   341 op add :checkOre:count :checkOre:count 1
   342 jump *label76 always
   343 label *label75
 
   352 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp66 *tmp65 :checkOre.1:floor
   353 op equal *tmp67 :checkOre.1:floor :checkOre.1:ore
   354 jump *label78 equal *tmp67 false
-    * set *tmp69 :checkOre.1:count
   355 op add :checkOre.1:count :checkOre.1:count 1
   356 jump *label79 always
   357 label *label78
 
   366 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp73 *tmp72 :checkOre.2:floor
   367 op equal *tmp74 :checkOre.2:floor :checkOre.2:ore
   368 jump *label81 equal *tmp74 false
-    * set *tmp76 :checkOre.2:count
   369 op add :checkOre.2:count :checkOre.2:count 1
   370 jump *label82 always
   371 label *label81
 
   381 ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp81 *tmp80 :checkOre.3:floor
   382 op equal *tmp82 :checkOre.3:floor :checkOre.3:ore
   383 jump *label84 equal *tmp82 false
-    * set *tmp84 :checkOre.3:count
   384 op add :checkOre.3:count :checkOre.3:count 1
   385 jump *label85 always
   386 label *label84
 
  1317 label *label261
  1318 label *label258
  1319 set :supplyBlocks:supplied true
-    * set *tmp236 :supplyBlocks:supplied
  1320 jump *label256 always
  1321 label *label255
-    * set *tmp236 null
  1322 label *label256
  1323 label *label248
  1324 jump *label246 always
 
  1374 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
  1375 label *label276
  1376 jump *label232 always
-    * set *tmp254 null
  1377 jump *label274 always
  1378 label *label273
-    * set *tmp254 null
  1379 label *label274
  1380 jump *label272 always
  1381 label *label271
 
  1432 setaddr :mineOre.1*retaddr *label290 (h:*label290)
  1433 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
  1434 label *label290
-    * set *tmp267 null
  1435 jump *label287 always
  1436 label *label286
  1437 sensor *tmp268 .core @lead
 
  1511 label *label297
  1512 set *tmp270 *tmp273
  1513 label *label292
-    * set *tmp267 *tmp270
  1514 label *label287
  1515 label *label280
  1516 jump *label278 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1451 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1452 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1453 label *label295
-    * set *tmp270 null
  1454 jump *label292 always
  1455 label *label291
  1456 sensor *tmp271 .core @metaglass
 
  1508 label *label302
  1509 set *tmp273 *tmp275
  1510 label *label297
-    * set *tmp270 *tmp273
  1511 label *label292
  1512 label *label287
  1513 label *label280

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1470 setaddr :mineOre.1*retaddr *label300 (h:*label300)
  1471 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
  1472 label *label300
-    * set *tmp273 null
  1473 jump *label297 always
  1474 label *label296
  1475 op equal *tmp274 :supplyBlocks:supplied false
 
  1505 label *label301
  1506 set *tmp275 null
  1507 label *label302
-    * set *tmp273 *tmp275
  1508 label *label297
  1509 label *label292
  1510 label *label287

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1500 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1501 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1502 label *label307
-    * set *tmp275 null
  1503 jump *label302 always
  1504 label *label301
-    * set *tmp275 null
  1505 label *label302
  1506 label *label297
  1507 label *label292

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-58 instructions):
 
    28 label *label13
    29 label *label15
    30 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp14 *tmp13
-    * set .core *tmp13
+   31 ulocate building core false @copper .coreX .coreY 0 .core
    32 label *label16
    33 op equal *tmp15 .core null
    34 jump *label15 notEqual *tmp15 false
 
    46 set :buildBlockFromCfg:config null
    47 setaddr *tmp17 *label22
    48 label *label19
-    * op add *tmp18 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp18
-    * op add *tmp19 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp19
+   49 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   50 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    51 set :buildBlock:block :buildBlockFromCfg:block
    52 set :buildBlock:x :buildBlockFromCfg:x
    53 set :buildBlock:y :buildBlockFromCfg:y
 
    84 set :buildBlockFromCfg.1:config null
    85 setaddr *tmp21 *label28
    86 label *label25
-    * op add *tmp22 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp22
-    * op add *tmp23 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp23
+   87 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   88 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    89 set :buildBlock:block :buildBlockFromCfg.1:block
    90 set :buildBlock:x :buildBlockFromCfg.1:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
 
   122 set :buildBlockFromCfg.2:config null
   123 setaddr *tmp25 *label34
   124 label *label31
-    * op add *tmp26 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp26
-    * op add *tmp27 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp27
+  125 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  126 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   127 set :buildBlock:block :buildBlockFromCfg.2:block
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
 
   161 set :buildBlockFromCfg.3:config null
   162 setaddr *tmp29 *label40
   163 label *label37
-    * op add *tmp30 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp30
-    * op add *tmp31 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp31
+  164 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  165 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   166 set :buildBlock:block :buildBlockFromCfg.3:block
   167 set :buildBlock:x :buildBlockFromCfg.3:x
   168 set :buildBlock:y :buildBlockFromCfg.3:y
 
   196 set :buildBlockFromCfg.4:config null
   197 setaddr *tmp33 *label46
   198 label *label43
-    * op add *tmp34 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp34
-    * op add *tmp35 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp35
+  199 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  200 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   201 set :buildBlock:block :buildBlockFromCfg.4:block
   202 set :buildBlock:x :buildBlockFromCfg.4:x
   203 set :buildBlock:y :buildBlockFromCfg.4:y
 
   324 set :checkOre:y :buildTitaniumDrillCfg:ay
   325 set :checkOre:ore @ore-titanium
   326 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp59 *tmp58 :checkOre:floor
+  327 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   328 op equal *tmp60 :checkOre:floor :checkOre:ore
   329 jump *label75 equal *tmp60 false
   330 op add :checkOre:count :checkOre:count 1
 
   333 label *label76
   334 label *label74
   335 set :buildTitaniumDrillCfg:count :checkOre:count
-    * op add *tmp63 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:x *tmp63
+  336 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   337 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   338 set :checkOre.1:ore @ore-titanium
   339 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp66 *tmp65 :checkOre.1:floor
+  340 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   341 op equal *tmp67 :checkOre.1:floor :checkOre.1:ore
   342 jump *label78 equal *tmp67 false
   343 op add :checkOre.1:count :checkOre.1:count 1
 
   351 set :checkOre.2:y *tmp70
   352 set :checkOre.2:ore @ore-titanium
   353 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp73 *tmp72 :checkOre.2:floor
+  354 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   355 op equal *tmp74 :checkOre.2:floor :checkOre.2:ore
   356 jump *label81 equal *tmp74 false
   357 op add :checkOre.2:count :checkOre.2:count 1
 
   366 set :checkOre.3:y *tmp78
   367 set :checkOre.3:ore @ore-titanium
   368 set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp81 *tmp80 :checkOre.3:floor
+  369 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   370 op equal *tmp82 :checkOre.3:floor :checkOre.3:ore
   371 jump *label84 equal *tmp82 false
   372 op add :checkOre.3:count :checkOre.3:count 1
 
   400 op greaterThan *tmp89 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   401 jump *label90 equal *tmp89 false
   402 op div *tmp91 :buildTitaniumDrillCfg:dx 2
-    * op add *tmp92 :buildTitaniumDrillCfg:ax *tmp91
-    * set :buildTitaniumDrillCfg:ax *tmp92
+  403 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp91
   404 op div *tmp93 :buildTitaniumDrillCfg:dy 2
-    * op add *tmp94 :buildTitaniumDrillCfg:ay *tmp93
-    * set :buildTitaniumDrillCfg:ay *tmp94
+  405 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp93
   406 set :buildBlockAt:block @pneumatic-drill
   407 set :buildBlockAt:x :buildTitaniumDrillCfg:ax
   408 set :buildBlockAt:y :buildTitaniumDrillCfg:ay
 
   446 label *label97
   447 set :buildTitaniumDrillCfg:attempts 0
   448 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
-    * op max *tmp109 *tmp108 1
-    * set :buildTitaniumDrillCfg:minimum *tmp109
+  449 op max :buildTitaniumDrillCfg:minimum *tmp108 1
   450 jump *label96 always
   451 label *label95
   452 label *label96
 
   471 set :buildBlockFromCfg.5:config null
   472 setaddr *tmp111 *label103
   473 label *label100
-    * op add *tmp112 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp112
-    * op add *tmp113 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp113
+  474 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  475 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   476 set :buildBlock:block :buildBlockFromCfg.5:block
   477 set :buildBlock:x :buildBlockFromCfg.5:x
   478 set :buildBlock:y :buildBlockFromCfg.5:y
 
   509 set :buildBlockFromCfg.6:config null
   510 setaddr *tmp115 *label109
   511 label *label106
-    * op add *tmp116 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp116
-    * op add *tmp117 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp117
+  512 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  513 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   514 set :buildBlock:block :buildBlockFromCfg.6:block
   515 set :buildBlock:x :buildBlockFromCfg.6:x
   516 set :buildBlock:y :buildBlockFromCfg.6:y
 
   544 set :buildBlockFromCfg.7:config processor1
   545 setaddr *tmp119 *label115
   546 label *label112
-    * op add *tmp120 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp120
-    * op add *tmp121 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp121
+  547 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  548 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   549 set :buildBlock:block :buildBlockFromCfg.7:block
   550 set :buildBlock:x :buildBlockFromCfg.7:x
   551 set :buildBlock:y :buildBlockFromCfg.7:y
 
   569 set *tmp118 null
   570 label *label111
   571 set .processor *tmp118
-    * set *tmp122 .core
-    * write *tmp122 .processor ".core"
+  572 write .core .processor ".core"
   573 write .battery .processor ".battery"
   574 write .generator .processor ".generator"
   575 write .smelter .processor ".smelter"
 
   587 set :buildBlockFromCfg.8:config @mono
   588 setaddr *tmp124 *label121
   589 label *label118
-    * op add *tmp125 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp125
-    * op add *tmp126 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp126
+  590 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  591 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   592 set :buildBlock:block :buildBlockFromCfg.8:block
   593 set :buildBlock:x :buildBlockFromCfg.8:x
   594 set :buildBlock:y :buildBlockFromCfg.8:y
 
   626 set :buildBlockFromCfg.9:config null
   627 setaddr *tmp128 *label127
   628 label *label124
-    * op add *tmp129 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp129
-    * op add *tmp130 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp130
+  629 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  630 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   631 set :buildBlock:block :buildBlockFromCfg.9:block
   632 set :buildBlock:x :buildBlockFromCfg.9:x
   633 set :buildBlock:y :buildBlockFromCfg.9:y
 
   665 set :buildBlockFromCfg.10:config null
   666 setaddr *tmp132 *label133
   667 label *label130
-    * op add *tmp133 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp133
-    * op add *tmp134 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp134
+  668 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  669 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   670 set :buildBlock:block :buildBlockFromCfg.10:block
   671 set :buildBlock:x :buildBlockFromCfg.10:x
   672 set :buildBlock:y :buildBlockFromCfg.10:y
 
   701 set :buildBlockFromCfg.11:config null
   702 setaddr *tmp136 *label139
   703 label *label136
-    * op add *tmp137 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp137
-    * op add *tmp138 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp138
+  704 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  705 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   706 set :buildBlock:block :buildBlockFromCfg.11:block
   707 set :buildBlock:x :buildBlockFromCfg.11:x
   708 set :buildBlock:y :buildBlockFromCfg.11:y
 
   736 set :buildBlockFromCfg.12:config null
   737 setaddr *tmp140 *label145
   738 label *label142
-    * op add *tmp141 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp141
-    * op add *tmp142 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp142
+  739 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  740 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   741 set :buildBlock:block :buildBlockFromCfg.12:block
   742 set :buildBlock:x :buildBlockFromCfg.12:x
   743 set :buildBlock:y :buildBlockFromCfg.12:y
 
   772 set :buildBlockFromCfg.13:config null
   773 setaddr *tmp144 *label151
   774 label *label148
-    * op add *tmp145 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp145
-    * op add *tmp146 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp146
+  775 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  776 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   777 set :buildBlock:block :buildBlockFromCfg.13:block
   778 set :buildBlock:x :buildBlockFromCfg.13:x
   779 set :buildBlock:y :buildBlockFromCfg.13:y
 
   807 set :buildBlockFromCfg.14:config null
   808 setaddr *tmp148 *label157
   809 label *label154
-    * op add *tmp149 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp149
-    * op add *tmp150 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp150
+  810 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  811 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   812 set :buildBlock:block :buildBlockFromCfg.14:block
   813 set :buildBlock:x :buildBlockFromCfg.14:x
   814 set :buildBlock:y :buildBlockFromCfg.14:y
 
   842 set :buildBlockFromCfg.15:config null
   843 setaddr *tmp152 *label163
   844 label *label160
-    * op add *tmp153 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp153
-    * op add *tmp154 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp154
+  845 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  846 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   847 set :buildBlock:block :buildBlockFromCfg.15:block
   848 set :buildBlock:x :buildBlockFromCfg.15:x
   849 set :buildBlock:y :buildBlockFromCfg.15:y
 
   881 set :buildBlockFromCfg.16:config @coal
   882 setaddr *tmp156 *label169
   883 label *label166
-    * op add *tmp157 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp157
-    * op add *tmp158 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp158
+  884 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  885 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   886 set :buildBlock:block :buildBlockFromCfg.16:block
   887 set :buildBlock:x :buildBlockFromCfg.16:x
   888 set :buildBlock:y :buildBlockFromCfg.16:y
 
   925 print .status2
   926 print .status3
   927 print .item2
-    * set *tmp159 .block2
-    * print *tmp159
+  928 print .block2
   929 label *label14
   930 wait 1e12
   931 jump *label13 always
 
  1014 setaddr :moveToBlock*retaddr *label198 (h:*label198)
  1015 call *label3 *invalid :moveToBlock*retval (m:*label198) (h:*label198)
  1016 label *label198
-    * sensor *tmp178 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp178
+ 1017 sensor :depositItems:cap :depositItems:block @itemCapacity
  1018 label *label199
  1019 ucontrol itemDrop :depositItems:block 30
  1020 sensor *tmp179 :depositItems:block :depositItems:item
 
  1045 return :depositItems*retaddr
  1046 end
  1047 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp186 *tmp187
+ 1048 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp186 0
  1049 op equal *tmp188 *tmp186 false
  1050 jump *label208 equal *tmp188 false
  1051 print "[salmon]"
 
  1078 set .status3 :status3.2:text
  1079 label *label214
  1080 label *label215
-    * sensor *tmp190 @unit @firstItem
-    * set :mineOre:item *tmp190
+ 1081 sensor :mineOre:item @unit @firstItem
  1082 op notEqual *tmp191 :mineOre:item null
  1083 op notEqual *tmp192 :mineOre:item :mineOre:ore
  1084 op land *tmp193 *tmp191 *tmp192
 
  1104 return :mineOre*retaddr
  1105 end
  1106 label *label7
-    * set *tmp197 :mineOre.1:ore
-    * set :mineOre:ore *tmp197
+ 1107 set :mineOre:ore :mineOre.1:ore
  1108 set :mineOre:amount 30
  1109 set :mineOre:block .core
  1110 setaddr :mineOre*retaddr *label222 (h:*label222)
 
  1114 return :mineOre.1*retaddr
  1115 end
  1116 label *label8
-    * sensor *tmp198 :fetchBlock:block @itemCapacity
-    * set .transportTarget *tmp198
+ 1117 sensor .transportTarget :fetchBlock:block @itemCapacity
  1118 set .transportItem :fetchBlock:item
  1119 set :status2:text "Fetching "
  1120 set :status2:item :fetchBlock:item
 
  1132 label *label225
  1133 label *label226
  1134 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp201 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp201
+ 1135 sensor :fetchBlock:unitItem @unit @firstItem
  1136 op notEqual *tmp202 :fetchBlock:unitItem null
  1137 op notEqual *tmp203 :fetchBlock:unitItem :fetchBlock:item
  1138 op land *tmp204 *tmp202 *tmp203
 
  1181 label *label241
  1182 sensor *tmp218 :supplyBlock:block @itemCapacity
  1183 sensor *tmp219 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp220 *tmp218 *tmp219
-    * set :supplyBlock:missing *tmp220
+ 1184 op sub :supplyBlock:missing *tmp218 *tmp219
  1185 op greaterThan *tmp221 :supplyBlock:missing 0
  1186 jump *label242 equal *tmp221 false
  1187 set :mineOre:ore :supplyBlock:ore
 
  1221 label *label251
  1222 sensor *tmp229 :supplyBlock.1:block @itemCapacity
  1223 sensor *tmp230 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp231 *tmp229 *tmp230
-    * set :supplyBlock.1:missing *tmp231
+ 1224 op sub :supplyBlock.1:missing *tmp229 *tmp230
  1225 op greaterThan *tmp232 :supplyBlock.1:missing 0
  1226 jump *label252 equal *tmp232 false
  1227 set :mineOre:ore :supplyBlock.1:ore
 
  1254 label *label259
  1255 sensor *tmp237 :supplyBlock.2:block @itemCapacity
  1256 sensor *tmp238 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp239 *tmp237 *tmp238
-    * set :supplyBlock.2:missing *tmp239
+ 1257 op sub :supplyBlock.2:missing *tmp237 *tmp238
  1258 op greaterThan *tmp240 :supplyBlock.2:missing 0
  1259 jump *label260 equal *tmp240 false
  1260 set :mineOre:ore :supplyBlock.2:ore
 
  1292 label *label267
  1293 sensor *tmp245 :supplyBlock.3:block @itemCapacity
  1294 sensor *tmp246 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp247 *tmp245 *tmp246
-    * set :supplyBlock.3:missing *tmp247
+ 1295 op sub :supplyBlock.3:missing *tmp245 *tmp246
  1296 op greaterThan *tmp248 :supplyBlock.3:missing 0
  1297 jump *label268 equal *tmp248 false
  1298 set :mineOre:ore :supplyBlock.3:ore
 
  1340 set :status1.5:text "Meeting the silicon target"
  1341 set .status1 :status1.5:text
  1342 label *label281
-    * sensor *tmp261 .core @coal
-    * set :supplyBlocks:coal *tmp261
-    * sensor *tmp262 .core @sand
-    * set :supplyBlocks:sand *tmp262
+ 1343 sensor :supplyBlocks:coal .core @coal
+ 1344 sensor :supplyBlocks:sand .core @sand
  1345 op lessThan *tmp263 :supplyBlocks:coal :supplyBlocks:sand
  1346 jump *label282 equal *tmp263 false
  1347 set *tmp264 @coal
 
  1425 set :status1.9:text "Supplying base"
  1426 set .status1 :status1.9:text
  1427 label *label303
-    * sensor *tmp276 .core @coal
-    * set :supplyBlocks:coal.1 *tmp276
-    * sensor *tmp277 .core @sand
-    * set :supplyBlocks:sand.1 *tmp277
+ 1428 sensor :supplyBlocks:coal.1 .core @coal
+ 1429 sensor :supplyBlocks:sand.1 .core @sand
  1430 op lessThanEq *tmp278 :supplyBlocks:coal.1 :supplyBlocks:sand.1
  1431 jump *label304 equal *tmp278 false
  1432 set *tmp279 @coal
 
  1508 set .totalTargets :meetTarget:count
  1509 op equal *tmp282 .processor null
  1510 jump *label320 equal *tmp282 false
-    * op max *tmp284 10 .graphiteTarget
-    * set .updatedGraphiteTarget *tmp284
-    * op max *tmp285 10 .siliconTarget
-    * set .updatedSiliconTarget *tmp285
+ 1511 op max .updatedGraphiteTarget 10 .graphiteTarget
+ 1512 op max .updatedSiliconTarget 10 .siliconTarget
  1513 jump *label321 always
  1514 label *label320
  1515 op add *tmp286 .graphiteTarget 30
 
  1571 set :status3.3:text "Building..."
  1572 set .status3 :status3.3:text
  1573 label *label330
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp315 *tmp316
-    * set :buildBlockAt:building *tmp315
+ 1574 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1575 op notEqual *tmp317 :buildBlockAt:building null
  1576 jump *label331 equal *tmp317 false
  1577 op equal *tmp319 :buildBlockAt:type :buildBlockAt:block
 
  1603 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1604 wait 0.25
  1605 label *label338
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp322 *tmp323
-    * set :buildBlockAt:building *tmp322
+ 1606 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1607 op equal *tmp324 :buildBlockAt:building null
  1608 jump *label341 equal *tmp324 false
  1609 jump *label340 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
   226 set :buildTitaniumDrillCfg:attempts 0
   227 set :buildTitaniumDrillCfg:minimum 3
   228 label *label50
-    * jump *label52 equal true false
   229 set :meetTarget:block @pneumatic-drill
   230 set :meetTarget:copper 18
   231 set :meetTarget:lead 0
 
   240 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   241 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   242 label *label55
-    * jump *label57 equal true false
   243 set :locateOre:ore :locateOreAway:ore
   244 setaddr :locateOre*retaddr *label58 (h:*label58)
   245 call *label5 *invalid :locateOre*retval (m:*label58) (h:*label58)
 
   902 label *label168
   903 label *label165
   904 label *label171
-    * jump *label173 equal true false
   905 setaddr :supplyBlocks*retaddr *label174 (h:*label174)
   906 call *label9 *invalid :supplyBlocks*retval (m:*label174) (h:*label174)
   907 label *label174

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-47 instructions):
 
    30 ubind @poly
    31 ulocate building core false @copper .coreX .coreY 0 .core
    32 label *label16
-    * op equal *tmp15 .core null
-    * jump *label15 notEqual *tmp15 false
+   33 jump *label15 equal .core null
    34 label *label17
    35 set :buildBlockFromCfg:block @graphite-press
    36 set :buildBlockFromCfg:offsetX -1.5
 
   322 set :checkOre:ore @ore-titanium
   323 set :checkOre:count :buildTitaniumDrillCfg:count
   324 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp60 :checkOre:floor :checkOre:ore
-    * jump *label75 equal *tmp60 false
+  325 jump *label75 notEqual :checkOre:floor :checkOre:ore
   326 op add :checkOre:count :checkOre:count 1
   327 jump *label76 always
   328 label *label75
 
   334 set :checkOre.1:ore @ore-titanium
   335 set :checkOre.1:count :buildTitaniumDrillCfg:count
   336 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp67 :checkOre.1:floor :checkOre.1:ore
-    * jump *label78 equal *tmp67 false
+  337 jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
   338 op add :checkOre.1:count :checkOre.1:count 1
   339 jump *label79 always
   340 label *label78
 
   347 set :checkOre.2:ore @ore-titanium
   348 set :checkOre.2:count :buildTitaniumDrillCfg:count
   349 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp74 :checkOre.2:floor :checkOre.2:ore
-    * jump *label81 equal *tmp74 false
+  350 jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
   351 op add :checkOre.2:count :checkOre.2:count 1
   352 jump *label82 always
   353 label *label81
 
   361 set :checkOre.3:ore @ore-titanium
   362 set :checkOre.3:count :buildTitaniumDrillCfg:count
   363 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * op equal *tmp82 :checkOre.3:floor :checkOre.3:ore
-    * jump *label84 equal *tmp82 false
+  364 jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
   365 op add :checkOre.3:count :checkOre.3:count 1
   366 jump *label85 always
   367 label *label84
   368 label *label85
   369 label *label83
   370 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * op greaterThan *tmp85 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label86 equal *tmp85 false
+  371 jump *label86 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
   372 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   373 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
   374 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp87 :buildTitaniumDrillCfg:count 4
-    * jump *label88 equal *tmp87 false
+  375 jump *label88 lessThan :buildTitaniumDrillCfg:count 4
   376 jump *label66 always
   377 jump *label89 always
   378 label *label88
 
   388 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   389 jump *label64 always
   390 label *label66
-    * op greaterThan *tmp89 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
-    * jump *label90 equal *tmp89 false
+  391 jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   392 op div *tmp91 :buildTitaniumDrillCfg:dx 2
   393 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp91
   394 op div *tmp93 :buildTitaniumDrillCfg:dy 2
 
   403 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   404 label *label92
   405 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp95 :buildTitaniumDrillCfg:result null
-    * jump *label93 equal *tmp95 false
+  406 jump *label93 equal :buildTitaniumDrillCfg:result null
   407 set *tmp37 :buildTitaniumDrillCfg:result
   408 jump *label49 always
   409 jump *label94 always
 
   415 label *label90
   416 label *label91
   417 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp97 :buildTitaniumDrillCfg:attempts 5
-    * jump *label95 equal *tmp97 false
+  418 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
   419 sensor *tmp100 @unit @x
   420 op sin *tmp101 :buildTitaniumDrillCfg:angle
   421 op mul *tmp102 *tmp101 :buildTitaniumDrillCfg:distance
 
   923 label *label177
   924 label *label178
   925 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
-    * op equal *tmp161 *tmp160 false
-    * jump *label180 equal *tmp161 false
+  926 jump *label180 notEqual *tmp160 false
   927 op sub *tmp162 :moveTo:radius 0.5
   928 ucontrol approach :moveTo:x :moveTo:y *tmp162
   929 label *label179
 
   946 end
   947 label *label2
   948 sensor *tmp165 @unit @firstItem
-    * op notEqual *tmp166 *tmp165 null
-    * jump *label184 equal *tmp166 false
+  949 jump *label184 equal *tmp165 null
   950 ucontrol itemDrop @air 1000
   951 jump *label185 always
   952 label *label184
 
   958 label *label186
   959 label *label187
   960 sensor *tmp168 @unit @firstItem
-    * op notEqual *tmp169 *tmp168 null
-    * jump *label189 equal *tmp169 false
+  961 jump *label189 equal *tmp168 null
   962 ucontrol itemDrop @air 1000
   963 label *label188
   964 jump *label187 always
 
   983 set .status3 :status3.1:text
   984 label *label193
   985 sensor *tmp172 @unit @firstItem
-    * op equal *tmp173 *tmp172 :depositItems:item
-    * jump *label194 equal *tmp173 false
+  986 jump *label194 notEqual *tmp172 :depositItems:item
   987 op equal *tmp175 :depositItems:block .core
   988 op land *tmp176 :depositItems:fromMining *tmp175
   989 jump *label196 equal *tmp176 false
 
  1001 label *label199
  1002 ucontrol itemDrop :depositItems:block 30
  1003 sensor *tmp179 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp180 *tmp179 :depositItems:cap
-    * jump *label202 equal *tmp180 false
+ 1004 jump *label202 lessThan *tmp179 :depositItems:cap
  1005 jump *label201 always
  1006 jump *label203 always
  1007 label *label202
  1008 label *label203
  1009 label *label200
  1010 sensor *tmp182 @unit @firstItem
-    * op notEqual *tmp183 *tmp182 null
-    * jump *label199 notEqual *tmp183 false
+ 1011 jump *label199 notEqual *tmp182 null
  1012 label *label201
  1013 jump *label195 always
  1014 label *label194
  1015 label *label204
  1016 sensor *tmp184 @unit @firstItem
-    * op notEqual *tmp185 *tmp184 null
-    * jump *label206 equal *tmp185 false
+ 1017 jump *label206 equal *tmp184 null
  1018 ucontrol itemDrop @air 1000
  1019 label *label205
  1020 jump *label204 always
 
  1026 end
  1027 label *label5
  1028 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp186 0
-    * op equal *tmp188 *tmp186 false
-    * jump *label208 equal *tmp188 false
+ 1029 jump *label208 notEqual *tmp186 false
  1030 print "[salmon]"
  1031 print "Cannot locate "
  1032 print :locateOre:ore
 
  1069 ucontrol mine :mineOre:x :mineOre:y
  1070 label *label216
  1071 sensor *tmp195 @unit @totalItems
-    * op lessThan *tmp196 *tmp195 :mineOre:amount
-    * jump *label215 notEqual *tmp196 false
+ 1072 jump *label215 lessThan *tmp195 :mineOre:amount
  1073 label *label217
  1074 ucontrol unbind
  1075 set :depositItems:block :mineOre:block
 
  1137 end
  1138 label *label9
  1139 set :supplyBlocks:supplied false
-    * op equal *tmp210 .unloader1 null
-    * jump *label233 equal *tmp210 false
+ 1140 jump *label233 notEqual .unloader1 null
  1141 sensor *tmp212 .core @graphite
-    * op lessThan *tmp213 *tmp212 .updatedGraphiteTarget
-    * jump *label235 equal *tmp213 false
+ 1142 jump *label235 greaterThanEq *tmp212 .updatedGraphiteTarget
  1143 sensor *tmp215 .press @coal
-    * op lessThan *tmp216 *tmp215 5
-    * jump *label237 equal *tmp216 false
+ 1144 jump *label237 greaterThanEq *tmp215 5
  1145 set :status1:text "Meeting the graphite target"
  1146 set .status1 :status1:text
  1147 label *label239
 
  1157 sensor *tmp218 :supplyBlock:block @itemCapacity
  1158 sensor *tmp219 :supplyBlock:block :supplyBlock:ore
  1159 op sub :supplyBlock:missing *tmp218 *tmp219
-    * op greaterThan *tmp221 :supplyBlock:missing 0
-    * jump *label242 equal *tmp221 false
+ 1160 jump *label242 lessThanEq :supplyBlock:missing 0
  1161 set :mineOre:ore :supplyBlock:ore
  1162 set :mineOre:amount :supplyBlock:missing
  1163 set :mineOre:block :supplyBlock:block
 
  1176 label *label235
  1177 label *label236
  1178 sensor *tmp223 .core @silicon
-    * op lessThan *tmp224 *tmp223 .updatedSiliconTarget
-    * jump *label245 equal *tmp224 false
+ 1179 jump *label245 greaterThanEq *tmp223 .updatedSiliconTarget
  1180 sensor *tmp226 .smelter @coal
-    * op lessThan *tmp227 *tmp226 5
-    * jump *label247 equal *tmp227 false
+ 1181 jump *label247 greaterThanEq *tmp226 5
  1182 set :status1.1:text "Meeting the silicon target (coal)"
  1183 set .status1 :status1.1:text
  1184 label *label249
 
  1194 sensor *tmp229 :supplyBlock.1:block @itemCapacity
  1195 sensor *tmp230 :supplyBlock.1:block :supplyBlock.1:ore
  1196 op sub :supplyBlock.1:missing *tmp229 *tmp230
-    * op greaterThan *tmp232 :supplyBlock.1:missing 0
-    * jump *label252 equal *tmp232 false
+ 1197 jump *label252 lessThanEq :supplyBlock.1:missing 0
  1198 set :mineOre:ore :supplyBlock.1:ore
  1199 set :mineOre:amount :supplyBlock.1:missing
  1200 set :mineOre:block :supplyBlock.1:block
 
  1209 jump *label248 always
  1210 label *label247
  1211 sensor *tmp234 .smelter @sand
-    * op lessThan *tmp235 *tmp234 5
-    * jump *label255 equal *tmp235 false
+ 1212 jump *label255 greaterThanEq *tmp234 5
  1213 set :status1.2:text "Meeting the silicon target (sand)"
  1214 set .status1 :status1.2:text
  1215 label *label257
 
  1225 sensor *tmp237 :supplyBlock.2:block @itemCapacity
  1226 sensor *tmp238 :supplyBlock.2:block :supplyBlock.2:ore
  1227 op sub :supplyBlock.2:missing *tmp237 *tmp238
-    * op greaterThan *tmp240 :supplyBlock.2:missing 0
-    * jump *label260 equal *tmp240 false
+ 1228 jump *label260 lessThanEq :supplyBlock.2:missing 0
  1229 set :mineOre:ore :supplyBlock.2:ore
  1230 set :mineOre:amount :supplyBlock.2:missing
  1231 set :mineOre:block :supplyBlock.2:block
 
  1245 label *label245
  1246 label *label246
  1247 sensor *tmp242 .battery @totalPower
-    * op lessThan *tmp243 *tmp242 .powerTarget
-    * jump *label263 equal *tmp243 false
+ 1248 jump *label263 greaterThanEq *tmp242 .powerTarget
  1249 set :status1.3:text "Supplying generator"
  1250 set .status1 :status1.3:text
  1251 label *label265
 
  1261 sensor *tmp245 :supplyBlock.3:block @itemCapacity
  1262 sensor *tmp246 :supplyBlock.3:block :supplyBlock.3:ore
  1263 op sub :supplyBlock.3:missing *tmp245 *tmp246
-    * op greaterThan *tmp248 :supplyBlock.3:missing 0
-    * jump *label268 equal *tmp248 false
+ 1264 jump *label268 lessThanEq :supplyBlock.3:missing 0
  1265 set :mineOre:ore :supplyBlock.3:ore
  1266 set :mineOre:amount :supplyBlock.3:missing
  1267 set :mineOre:block :supplyBlock.3:block
 
  1278 label *label264
  1279 jump *label234 always
  1280 label *label233
-    * op notEqual *tmp250 .processor null
-    * jump *label271 equal *tmp250 false
+ 1281 jump *label271 equal .processor null
  1282 sensor *tmp252 .core @coal
-    * op lessThan *tmp253 *tmp252 10
-    * jump *label273 equal *tmp253 false
+ 1283 jump *label273 greaterThanEq *tmp252 10
  1284 set :status1.4:text "Supplying base"
  1285 set .status1 :status1.4:text
  1286 label *label275
 
  1297 label *label272
  1298 label *label234
  1299 sensor *tmp255 .titanium_drill @titanium
-    * op lessThan *tmp256 *tmp255 .titaniumTrigger
-    * jump *label277 equal *tmp256 false
+ 1300 jump *label277 greaterThanEq *tmp255 .titaniumTrigger
  1301 sensor *tmp258 .core @silicon
-    * op lessThan *tmp259 *tmp258 .siliconTarget
-    * jump *label279 equal *tmp259 false
+ 1302 jump *label279 greaterThanEq *tmp258 .siliconTarget
  1303 set :status1.5:text "Meeting the silicon target"
  1304 set .status1 :status1.5:text
  1305 label *label281
  1306 sensor :supplyBlocks:coal .core @coal
  1307 sensor :supplyBlocks:sand .core @sand
-    * op lessThan *tmp263 :supplyBlocks:coal :supplyBlocks:sand
-    * jump *label282 equal *tmp263 false
+ 1308 jump *label282 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
  1309 set *tmp264 @coal
  1310 jump *label283 always
  1311 label *label282
 
  1326 jump *label280 always
  1327 label *label279
  1328 sensor *tmp265 .core @copper
-    * op lessThan *tmp266 *tmp265 .copperTarget
-    * jump *label286 equal *tmp266 false
+ 1329 jump *label286 greaterThanEq *tmp265 .copperTarget
  1330 set :status1.6:text "Meeting the copper target"
  1331 set .status1 :status1.6:text
  1332 label *label288
 
  1344 jump *label287 always
  1345 label *label286
  1346 sensor *tmp268 .core @lead
-    * op lessThan *tmp269 *tmp268 .leadTarget
-    * jump *label291 equal *tmp269 false
+ 1347 jump *label291 greaterThanEq *tmp268 .leadTarget
  1348 set :status1.7:text "Meeting the lead target"
  1349 set .status1 :status1.7:text
  1350 label *label293
 
  1362 jump *label292 always
  1363 label *label291
  1364 sensor *tmp271 .core @metaglass
-    * op lessThan *tmp272 *tmp271 .metaglassTarget
-    * jump *label296 equal *tmp272 false
+ 1365 jump *label296 greaterThanEq *tmp271 .metaglassTarget
  1366 set :status1.8:text "Meeting the metaglass target"
  1367 set .status1 :status1.8:text
  1368 label *label298
 
  1379 label *label300
  1380 jump *label297 always
  1381 label *label296
-    * op equal *tmp274 :supplyBlocks:supplied false
-    * jump *label301 equal *tmp274 false
+ 1382 jump *label301 notEqual :supplyBlocks:supplied false
  1383 set :status1.9:text "Supplying base"
  1384 set .status1 :status1.9:text
  1385 label *label303
  1386 sensor :supplyBlocks:coal.1 .core @coal
  1387 sensor :supplyBlocks:sand.1 .core @sand
-    * op lessThanEq *tmp278 :supplyBlocks:coal.1 :supplyBlocks:sand.1
-    * jump *label304 equal *tmp278 false
+ 1388 jump *label304 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
  1389 set *tmp279 @coal
  1390 jump *label305 always
  1391 label *label304
 
  1463 multilabel *label319 (m:marker18)
  1464 label *label313
  1465 set .totalTargets :meetTarget:count
-    * op equal *tmp282 .processor null
-    * jump *label320 equal *tmp282 false
+ 1466 jump *label320 notEqual .processor null
  1467 op max .updatedGraphiteTarget 10 .graphiteTarget
  1468 op max .updatedSiliconTarget 10 .siliconTarget
  1469 jump *label321 always
 
  1477 label *label321
  1478 sensor *tmp289 .core @titanium
  1479 op add *tmp290 .titaniumTarget 10
-    * op lessThan *tmp291 *tmp289 *tmp290
-    * jump *label322 equal *tmp291 false
+ 1480 jump *label322 greaterThanEq *tmp289 *tmp290
  1481 set *tmp292 7
  1482 jump *label323 always
  1483 label *label322
 
  1506 sensor *tmp311 .core @metaglass
  1507 op lessThan *tmp312 *tmp311 .metaglassTarget
  1508 op or *tmp314 *tmp309 *tmp312
-    * op notEqual *tmp313 *tmp314 false
-    * jump *label326 equal *tmp313 false
+ 1509 jump *label326 equal *tmp314 false
  1510 setaddr :supplyBlocks*retaddr *label327 (h:*label327)
  1511 call *label9 *invalid :supplyBlocks*retval (m:*label327) (h:*label327)
  1512 label *label327
 
  1526 set .status3 :status3.3:text
  1527 label *label330
  1528 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp317 :buildBlockAt:building null
-    * jump *label331 equal *tmp317 false
-    * op equal *tmp319 :buildBlockAt:type :buildBlockAt:block
-    * jump *label333 equal *tmp319 false
+ 1529 jump *label331 equal :buildBlockAt:building null
+ 1530 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1531 set :buildBlockAt*retval :buildBlockAt:building
  1532 jump *label328 always
  1533 jump *label334 always
 
  1556 wait 0.25
  1557 label *label338
  1558 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp324 :buildBlockAt:building null
-    * jump *label341 equal *tmp324 false
+ 1559 jump *label341 notEqual :buildBlockAt:building null
  1560 jump *label340 always
  1561 jump *label342 always
  1562 label *label341
  1563 label *label342
  1564 label *label339
-    * op notEqual *tmp326 :buildBlockAt:type :buildBlockAt:block
-    * jump *label338 notEqual *tmp326 false
+ 1565 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1566 label *label340
  1567 set :buildBlockAt*retval :buildBlockAt:building
  1568 jump *label328 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-31 instructions):
 
   254 op or *tmp45 *tmp41 *tmp44
   255 jump *label59 equal *tmp45 false
   256 jump *label57 always
-    * jump *label60 always
   257 label *label59
   258 label *label60
   259 sensor *tmp48 @unit @x
 
   323 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   324 jump *label75 notEqual :checkOre:floor :checkOre:ore
   325 op add :checkOre:count :checkOre:count 1
-    * jump *label76 always
   326 label *label75
   327 label *label76
   328 label *label74
 
   334 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   335 jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
   336 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label79 always
   337 label *label78
   338 label *label79
   339 label *label77
 
   346 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   347 jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
   348 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label82 always
   349 label *label81
   350 label *label82
   351 label *label80
 
   359 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   360 jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
   361 op add :checkOre.3:count :checkOre.3:count 1
-    * jump *label85 always
   362 label *label84
   363 label *label85
   364 label *label83
 
   369 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
   370 jump *label88 lessThan :buildTitaniumDrillCfg:count 4
   371 jump *label66 always
-    * jump *label89 always
   372 label *label88
   373 label *label89
-    * jump *label87 always
   374 label *label86
   375 label *label87
   376 label *label68
 
   399 jump *label93 equal :buildTitaniumDrillCfg:result null
   400 set *tmp37 :buildTitaniumDrillCfg:result
   401 jump *label49 always
-    * jump *label94 always
   402 label *label93
   403 label *label94
   404 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   405 jump *label52 always
-    * jump *label91 always
   406 label *label90
   407 label *label91
   408 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
   426 set :buildTitaniumDrillCfg:attempts 0
   427 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
   428 op max :buildTitaniumDrillCfg:minimum *tmp108 1
-    * jump *label96 always
   429 label *label95
   430 label *label96
   431 label *label51
 
   938 sensor *tmp165 @unit @firstItem
   939 jump *label184 equal *tmp165 null
   940 ucontrol itemDrop @air 1000
-    * jump *label185 always
   941 label *label184
   942 label *label185
   943 set :moveTo.1:x :moveToEmpty:x
 
   992 sensor *tmp179 :depositItems:block :depositItems:item
   993 jump *label202 lessThan *tmp179 :depositItems:cap
   994 jump *label201 always
-    * jump *label203 always
   995 label *label202
   996 label *label203
   997 label *label200
 
  1021 printflush message1
  1022 stop
  1023 label *label210
-    * jump *label209 always
  1024 label *label208
  1025 label *label209
  1026 label *label207
 
  1050 op land *tmp193 *tmp191 *tmp192
  1051 jump *label218 equal *tmp193 false
  1052 jump *label217 always
-    * jump *label219 always
  1053 label *label218
  1054 label *label219
  1055 ucontrol mine :mineOre:x :mineOre:y
 
  1102 op land *tmp204 *tmp202 *tmp203
  1103 jump *label229 equal *tmp204 false
  1104 ucontrol itemDrop @air 1000
-    * jump *label230 always
  1105 label *label229
  1106 label *label230
  1107 label *label227
 
  1149 setaddr :mineOre*retaddr *label244 (h:*label244)
  1150 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1151 label *label244
-    * jump *label243 always
  1152 label *label242
  1153 label *label243
  1154 label *label240
  1155 set :supplyBlocks:supplied true
-    * jump *label238 always
  1156 label *label237
  1157 label *label238
-    * jump *label236 always
  1158 label *label235
  1159 label *label236
  1160 sensor *tmp223 .core @silicon
 
  1183 setaddr :mineOre*retaddr *label254 (h:*label254)
  1184 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1185 label *label254
-    * jump *label253 always
  1186 label *label252
  1187 label *label253
  1188 label *label250
 
  1213 setaddr :mineOre*retaddr *label262 (h:*label262)
  1214 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1215 label *label262
-    * jump *label261 always
  1216 label *label260
  1217 label *label261
  1218 label *label258
  1219 set :supplyBlocks:supplied true
-    * jump *label256 always
  1220 label *label255
  1221 label *label256
  1222 label *label248
-    * jump *label246 always
  1223 label *label245
  1224 label *label246
  1225 sensor *tmp242 .battery @totalPower
 
  1246 setaddr :mineOre*retaddr *label270 (h:*label270)
  1247 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1248 label *label270
-    * jump *label269 always
  1249 label *label268
  1250 label *label269
  1251 label *label266
  1252 set :supplyBlocks:supplied true
-    * jump *label264 always
  1253 label *label263
  1254 label *label264
  1255 jump *label234 always
 
  1265 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
  1266 label *label276
  1267 jump *label232 always
-    * jump *label274 always
  1268 label *label273
  1269 label *label274
-    * jump *label272 always
  1270 label *label271
  1271 label *label272
  1272 label *label234
 
  1377 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1378 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1379 label *label307
-    * jump *label302 always
  1380 label *label301
  1381 label *label302
  1382 label *label297
 
  1503 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1504 set :buildBlockAt*retval :buildBlockAt:building
  1505 jump *label328 always
-    * jump *label334 always
  1506 label *label333
  1507 label *label334
  1508 jump *label335 equal :buildBlockAt:skipError false
  1509 set :buildBlockAt*retval null
  1510 jump *label328 always
-    * jump *label336 always
  1511 label *label335
  1512 label *label336
  1513 print "[salmon]"
 
  1520 printflush message1
  1521 stop
  1522 label *label337
-    * jump *label332 always
  1523 label *label331
  1524 label *label332
  1525 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1528 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1529 jump *label341 notEqual :buildBlockAt:building null
  1530 jump *label340 always
-    * jump *label342 always
  1531 label *label341
  1532 label *label342
  1533 label *label339

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-31 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
     6 set .kiln null
     7 set .nextBlock ""
     8 set .copperTarget 0
 
    40 set :buildBlockFromCfg:metaglass 0
    41 set :buildBlockFromCfg:rotation 0
    42 set :buildBlockFromCfg:config null
-    * setaddr *tmp17 *label22
    43 label *label19
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   44 op add :buildBlockFromCfg:x .coreX -1.5
+   45 op add :buildBlockFromCfg:y .coreY 2.5
+   46 set :buildBlock:block @graphite-press
    47 set :buildBlock:x :buildBlockFromCfg:x
    48 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   49 set :buildBlock:copper 75
+   50 set :buildBlock:lead 30
+   51 set :buildBlock:graphite 0
+   52 set :buildBlock:silicon 0
+   53 set :buildBlock:titanium 0
+   54 set :buildBlock:metaglass 0
+   55 set :buildBlock:rotation 0
+   56 set :buildBlock:config null
    57 setaddr :buildBlock*retaddr *label23 (h:*label23)
    58 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    59 label *label23
 
    63 multijump *tmp17 0 0 (m:marker0)
    64 multilabel *label22 (m:marker0)
    65 label *label21
-    * set *tmp16 null
    66 label *label18
    67 set .press *tmp16
    68 set :buildBlockFromCfg.1:block @battery
 
    76 set :buildBlockFromCfg.1:metaglass 0
    77 set :buildBlockFromCfg.1:rotation 0
    78 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp21 *label28
    79 label *label25
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   80 op add :buildBlockFromCfg.1:x .coreX 0
+   81 op add :buildBlockFromCfg.1:y .coreY 4
+   82 set :buildBlock:block @battery
    83 set :buildBlock:x :buildBlockFromCfg.1:x
    84 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   85 set :buildBlock:copper 5
+   86 set :buildBlock:lead 20
+   87 set :buildBlock:graphite 0
+   88 set :buildBlock:silicon 0
+   89 set :buildBlock:titanium 0
+   90 set :buildBlock:metaglass 0
+   91 set :buildBlock:rotation 0
+   92 set :buildBlock:config null
    93 setaddr :buildBlock*retaddr *label29 (h:*label29)
    94 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    95 label *label29
 
    99 multijump *tmp21 0 0 (m:marker1)
   100 multilabel *label28 (m:marker1)
   101 label *label27
-    * set *tmp20 null
   102 label *label24
   103 set .battery *tmp20
   104 set :buildBlockFromCfg.2:block @combustion-generator
 
   112 set :buildBlockFromCfg.2:metaglass 0
   113 set :buildBlockFromCfg.2:rotation 0
   114 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp25 *label34
   115 label *label31
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  116 op add :buildBlockFromCfg.2:x .coreX 0
+  117 op add :buildBlockFromCfg.2:y .coreY 3
+  118 set :buildBlock:block @combustion-generator
   119 set :buildBlock:x :buildBlockFromCfg.2:x
   120 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  121 set :buildBlock:copper 25
+  122 set :buildBlock:lead 15
+  123 set :buildBlock:graphite 0
+  124 set :buildBlock:silicon 0
+  125 set :buildBlock:titanium 0
+  126 set :buildBlock:metaglass 0
+  127 set :buildBlock:rotation 0
+  128 set :buildBlock:config null
   129 setaddr :buildBlock*retaddr *label35 (h:*label35)
   130 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
   131 label *label35
 
   135 multijump *tmp25 0 0 (m:marker2)
   136 multilabel *label34 (m:marker2)
   137 label *label33
-    * set *tmp24 null
   138 label *label30
   139 set .generator *tmp24
   140 set .powerTarget 400
 
   149 set :buildBlockFromCfg.3:metaglass 0
   150 set :buildBlockFromCfg.3:rotation 0
   151 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp29 *label40
   152 label *label37
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  153 op add :buildBlockFromCfg.3:x .coreX -1
+  154 op add :buildBlockFromCfg.3:y .coreY 4
+  155 set :buildBlock:block @battery
   156 set :buildBlock:x :buildBlockFromCfg.3:x
   157 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  158 set :buildBlock:copper 5
+  159 set :buildBlock:lead 20
+  160 set :buildBlock:graphite 0
+  161 set :buildBlock:silicon 0
+  162 set :buildBlock:titanium 0
+  163 set :buildBlock:metaglass 0
+  164 set :buildBlock:rotation 0
+  165 set :buildBlock:config null
   166 setaddr :buildBlock*retaddr *label41 (h:*label41)
   167 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   168 label *label41
 
   183 set :buildBlockFromCfg.4:metaglass 0
   184 set :buildBlockFromCfg.4:rotation 0
   185 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp33 *label46
   186 label *label43
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  187 op add :buildBlockFromCfg.4:x .coreX 1.5
+  188 op add :buildBlockFromCfg.4:y .coreY 2.5
+  189 set :buildBlock:block @silicon-smelter
   190 set :buildBlock:x :buildBlockFromCfg.4:x
   191 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  192 set :buildBlock:copper 30
+  193 set :buildBlock:lead 25
+  194 set :buildBlock:graphite 0
+  195 set :buildBlock:silicon 0
+  196 set :buildBlock:titanium 0
+  197 set :buildBlock:metaglass 0
+  198 set :buildBlock:rotation 0
+  199 set :buildBlock:config null
   200 setaddr :buildBlock*retaddr *label47 (h:*label47)
   201 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   202 label *label47
 
   206 multijump *tmp33 0 0 (m:marker4)
   207 multilabel *label46 (m:marker4)
   208 label *label45
-    * set *tmp32 null
   209 label *label42
   210 set .smelter *tmp32
   211 set :buildTitaniumDrillCfg:distance 32
 
   227 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   228 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   229 label *label55
-    * set :locateOre:ore :locateOreAway:ore
+  230 set :locateOre:ore @titanium
   231 setaddr :locateOre*retaddr *label58 (h:*label58)
   232 call *label5 *invalid :locateOre*retval (m:*label58) (h:*label58)
   233 label *label58
   234 set :locateOreAway:x :locateOre:x
   235 set :locateOreAway:y :locateOre:y
-    * op sub *tmp39 :locateOreAway:x .coreX
+  236 op sub *tmp39 :locateOre:x .coreX
   237 op abs *tmp40 *tmp39
   238 op greaterThanEq *tmp41 *tmp40 8
-    * op sub *tmp42 :locateOreAway:y .coreY
+  239 op sub *tmp42 :locateOre:y .coreY
   240 op abs *tmp43 *tmp42
   241 op greaterThanEq *tmp44 *tmp43 8
   242 op or *tmp45 *tmp41 *tmp44
 
   268 set :buildTitaniumDrillCfg:y :locateOreAway:y
   269 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   270 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  271 set :moveTo.1:x :locateOreAway:x
+  272 set :moveTo.1:y :locateOreAway:y
   273 setaddr :moveTo.1*retaddr *label63 (h:*label63)
   274 call *label1 *invalid :moveTo.1*retval (m:*label63) (h:*label63)
   275 label *label63
-    * set :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:x
-    * set :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:y
+  276 set :buildTitaniumDrillCfg:ax :locateOreAway:x
+  277 set :buildTitaniumDrillCfg:ay :locateOreAway:y
   278 set :buildTitaniumDrillCfg:best 0
   279 set :buildTitaniumDrillCfg:dx 0
   280 set :buildTitaniumDrillCfg:dy 0
 
   307 set :checkOre:x :buildTitaniumDrillCfg:ax
   308 set :checkOre:y :buildTitaniumDrillCfg:ay
   309 set :checkOre:ore @ore-titanium
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * jump *label75 notEqual :checkOre:floor :checkOre:ore
-    * op add :checkOre:count :checkOre:count 1
+  310 set :checkOre:count 0
+  311 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  312 jump *label75 notEqual :checkOre:floor @ore-titanium
+  313 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   314 label *label75
   315 label *label76
   316 label *label74
 
   318 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   319 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   320 set :checkOre.1:ore @ore-titanium
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * jump *label78 notEqual :checkOre.1:floor :checkOre.1:ore
-    * op add :checkOre.1:count :checkOre.1:count 1
+  321 set :checkOre.1:count :checkOre:count
+  322 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  323 jump *label78 notEqual :checkOre.1:floor @ore-titanium
+  324 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   325 label *label78
   326 label *label79
   327 label *label77
 
   330 set :checkOre.2:x :buildTitaniumDrillCfg:ax
   331 set :checkOre.2:y *tmp70
   332 set :checkOre.2:ore @ore-titanium
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * jump *label81 notEqual :checkOre.2:floor :checkOre.2:ore
-    * op add :checkOre.2:count :checkOre.2:count 1
+  333 set :checkOre.2:count :checkOre.1:count
+  334 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
+  335 jump *label81 notEqual :checkOre.2:floor @ore-titanium
+  336 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   337 label *label81
   338 label *label82
   339 label *label80
   340 set :buildTitaniumDrillCfg:count :checkOre.2:count
   341 op add *tmp77 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   342 op add *tmp78 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x *tmp77
-    * set :checkOre.3:y *tmp78
+  343 set :checkOre.3:x :checkOre.1:x
+  344 set :checkOre.3:y *tmp70
   345 set :checkOre.3:ore @ore-titanium
-    * set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * jump *label84 notEqual :checkOre.3:floor :checkOre.3:ore
-    * op add :checkOre.3:count :checkOre.3:count 1
+  346 set :checkOre.3:count :checkOre.2:count
+  347 ucontrol getBlock *tmp77 *tmp78 0 0 :checkOre.3:floor
+  348 jump *label84 notEqual :checkOre.3:floor @ore-titanium
+  349 op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
   350 label *label84
   351 label *label85
   352 label *label83
   353 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * jump *label86 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  354 jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   355 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   356 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label88 lessThan :buildTitaniumDrillCfg:count 4
+  357 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  358 jump *label88 lessThan :checkOre.3:count 4
   359 jump *label66 always
   360 label *label88
   361 label *label89
 
   384 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   385 label *label92
   386 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label93 equal :buildTitaniumDrillCfg:result null
-    * set *tmp37 :buildTitaniumDrillCfg:result
+  387 jump *label93 equal :buildBlockAt*retval null
+  388 set *tmp37 :buildBlockAt*retval
   389 jump *label49 always
   390 label *label93
   391 label *label94
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
+  392 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   393 jump *label52 always
   394 label *label90
   395 label *label91
   396 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   397 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
   398 sensor *tmp100 @unit @x
-    * op sin *tmp101 :buildTitaniumDrillCfg:angle
-    * op mul *tmp102 *tmp101 :buildTitaniumDrillCfg:distance
+  399 op sin *tmp101 :locateOreAway:angle
+  400 op mul *tmp102 *tmp101 :locateOreAway:distance
   401 op add *tmp103 *tmp100 *tmp102
   402 sensor *tmp104 @unit @y
-    * op cos *tmp105 :buildTitaniumDrillCfg:angle
-    * op mul *tmp106 *tmp105 :buildTitaniumDrillCfg:distance
+  403 op cos *tmp105 :locateOreAway:angle
+  404 op mul *tmp106 *tmp105 :locateOreAway:distance
   405 op add *tmp107 *tmp104 *tmp106
   406 set :moveTo.1:x *tmp103
   407 set :moveTo.1:y *tmp107
   408 setaddr :moveTo.1*retaddr *label98 (h:*label98)
   409 call *label1 *invalid :moveTo.1*retval (m:*label98) (h:*label98)
   410 label *label98
-    * op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
-    * op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
+  411 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
+  412 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
   413 label *label97
   414 set :buildTitaniumDrillCfg:attempts 0
   415 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
 
   423 label *label49
   424 set *tmp36 *tmp37
   425 label *label48
-    * set .titanium_drill *tmp36
+  426 set .titanium_drill *tmp37
   427 set :buildBlockFromCfg.5:block @unloader
   428 set :buildBlockFromCfg.5:offsetX 0
   429 set :buildBlockFromCfg.5:offsetY 2
 
   435 set :buildBlockFromCfg.5:metaglass 0
   436 set :buildBlockFromCfg.5:rotation 0
   437 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp111 *label103
   438 label *label100
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  439 op add :buildBlockFromCfg.5:x .coreX 0
+  440 op add :buildBlockFromCfg.5:y .coreY 2
+  441 set :buildBlock:block @unloader
   442 set :buildBlock:x :buildBlockFromCfg.5:x
   443 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  444 set :buildBlock:copper 0
+  445 set :buildBlock:lead 0
+  446 set :buildBlock:graphite 0
+  447 set :buildBlock:silicon 30
+  448 set :buildBlock:titanium 25
+  449 set :buildBlock:metaglass 0
+  450 set :buildBlock:rotation 0
+  451 set :buildBlock:config null
   452 setaddr :buildBlock*retaddr *label104 (h:*label104)
   453 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   454 label *label104
 
   458 multijump *tmp111 0 0 (m:marker6)
   459 multilabel *label103 (m:marker6)
   460 label *label102
-    * set *tmp110 null
   461 label *label99
   462 set .unloader1 *tmp110
   463 set :buildBlockFromCfg.6:block @power-node
 
   471 set :buildBlockFromCfg.6:metaglass 0
   472 set :buildBlockFromCfg.6:rotation 0
   473 set :buildBlockFromCfg.6:config null
-    * setaddr *tmp115 *label109
   474 label *label106
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  475 op add :buildBlockFromCfg.6:x .coreX -1
+  476 op add :buildBlockFromCfg.6:y .coreY -2
+  477 set :buildBlock:block @power-node
   478 set :buildBlock:x :buildBlockFromCfg.6:x
   479 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  480 set :buildBlock:copper 2
+  481 set :buildBlock:lead 6
+  482 set :buildBlock:graphite 0
+  483 set :buildBlock:silicon 0
+  484 set :buildBlock:titanium 0
+  485 set :buildBlock:metaglass 0
+  486 set :buildBlock:rotation 0
+  487 set :buildBlock:config null
   488 setaddr :buildBlock*retaddr *label110 (h:*label110)
   489 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   490 label *label110
 
   505 set :buildBlockFromCfg.7:metaglass 0
   506 set :buildBlockFromCfg.7:rotation 0
   507 set :buildBlockFromCfg.7:config processor1
-    * setaddr *tmp119 *label115
   508 label *label112
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  509 op add :buildBlockFromCfg.7:x .coreX 1
+  510 op add :buildBlockFromCfg.7:y .coreY 4
+  511 set :buildBlock:block @micro-processor
   512 set :buildBlock:x :buildBlockFromCfg.7:x
   513 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  514 set :buildBlock:copper 90
+  515 set :buildBlock:lead 50
+  516 set :buildBlock:graphite 0
+  517 set :buildBlock:silicon 50
+  518 set :buildBlock:titanium 0
+  519 set :buildBlock:metaglass 0
+  520 set :buildBlock:rotation 0
+  521 set :buildBlock:config processor1
   522 setaddr :buildBlock*retaddr *label116 (h:*label116)
   523 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   524 label *label116
 
   528 multijump *tmp119 0 0 (m:marker8)
   529 multilabel *label115 (m:marker8)
   530 label *label114
-    * set *tmp118 null
   531 label *label111
   532 set .processor *tmp118
-    * write .core .processor ".core"
-    * write .battery .processor ".battery"
-    * write .generator .processor ".generator"
-    * write .smelter .processor ".smelter"
-    * write .press .processor ".press"
+  533 write .core *tmp118 ".core"
+  534 write *tmp20 *tmp118 ".battery"
+  535 write *tmp24 *tmp118 ".generator"
+  536 write *tmp32 *tmp118 ".smelter"
+  537 write *tmp16 *tmp118 ".press"
   538 set :buildBlockFromCfg.8:block @air-factory
   539 set :buildBlockFromCfg.8:offsetX -4
   540 set :buildBlockFromCfg.8:offsetY -1
 
   546 set :buildBlockFromCfg.8:metaglass 0
   547 set :buildBlockFromCfg.8:rotation 3
   548 set :buildBlockFromCfg.8:config @mono
-    * setaddr *tmp124 *label121
   549 label *label118
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  550 op add :buildBlockFromCfg.8:x .coreX -4
+  551 op add :buildBlockFromCfg.8:y .coreY -1
+  552 set :buildBlock:block @air-factory
   553 set :buildBlock:x :buildBlockFromCfg.8:x
   554 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  555 set :buildBlock:copper 60
+  556 set :buildBlock:lead 70
+  557 set :buildBlock:graphite 0
+  558 set :buildBlock:silicon 0
+  559 set :buildBlock:titanium 0
+  560 set :buildBlock:metaglass 0
+  561 set :buildBlock:rotation 3
+  562 set :buildBlock:config @mono
   563 setaddr :buildBlock*retaddr *label122 (h:*label122)
   564 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   565 label *label122
 
   569 multijump *tmp124 0 0 (m:marker9)
   570 multilabel *label121 (m:marker9)
   571 label *label120
-    * set *tmp123 null
   572 label *label117
   573 set .factory *tmp123
-    * write .factory .processor ".factory"
+  574 write *tmp123 *tmp118 ".factory"
   575 set :buildBlockFromCfg.9:block @unloader
   576 set :buildBlockFromCfg.9:offsetX -2
   577 set :buildBlockFromCfg.9:offsetY 1
 
   583 set :buildBlockFromCfg.9:metaglass 0
   584 set :buildBlockFromCfg.9:rotation 0
   585 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp128 *label127
   586 label *label124
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  587 op add :buildBlockFromCfg.9:x .coreX -2
+  588 op add :buildBlockFromCfg.9:y .coreY 1
+  589 set :buildBlock:block @unloader
   590 set :buildBlock:x :buildBlockFromCfg.9:x
   591 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  592 set :buildBlock:copper 0
+  593 set :buildBlock:lead 0
+  594 set :buildBlock:graphite 0
+  595 set :buildBlock:silicon 30
+  596 set :buildBlock:titanium 25
+  597 set :buildBlock:metaglass 0
+  598 set :buildBlock:rotation 0
+  599 set :buildBlock:config null
   600 setaddr :buildBlock*retaddr *label128 (h:*label128)
   601 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   602 label *label128
 
   606 multijump *tmp128 0 0 (m:marker10)
   607 multilabel *label127 (m:marker10)
   608 label *label126
-    * set *tmp127 null
   609 label *label123
   610 set .unloader2 *tmp127
-    * write .unloader2 .processor ".unloader2"
+  611 write *tmp127 *tmp118 ".unloader2"
   612 set :buildBlockFromCfg.10:block @overflow-gate
   613 set :buildBlockFromCfg.10:offsetX -3
   614 set :buildBlockFromCfg.10:offsetY 1
 
   620 set :buildBlockFromCfg.10:metaglass 0
   621 set :buildBlockFromCfg.10:rotation 0
   622 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp132 *label133
   623 label *label130
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  624 op add :buildBlockFromCfg.10:x .coreX -3
+  625 op add :buildBlockFromCfg.10:y .coreY 1
+  626 set :buildBlock:block @overflow-gate
   627 set :buildBlock:x :buildBlockFromCfg.10:x
   628 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  629 set :buildBlock:copper 4
+  630 set :buildBlock:lead 2
+  631 set :buildBlock:graphite 0
+  632 set :buildBlock:silicon 0
+  633 set :buildBlock:titanium 0
+  634 set :buildBlock:metaglass 0
+  635 set :buildBlock:rotation 0
+  636 set :buildBlock:config null
   637 setaddr :buildBlock*retaddr *label134 (h:*label134)
   638 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   639 label *label134
 
   643 multilabel *label133 (m:marker11)
   644 label *label132
   645 label *label129
-    * write @mono .processor ".unitToProduce"
+  646 write @mono *tmp118 ".unitToProduce"
   647 set :buildBlockFromCfg.11:block @unloader
   648 set :buildBlockFromCfg.11:offsetX 2
   649 set :buildBlockFromCfg.11:offsetY 0
 
   655 set :buildBlockFromCfg.11:metaglass 0
   656 set :buildBlockFromCfg.11:rotation 0
   657 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp136 *label139
   658 label *label136
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  659 op add :buildBlockFromCfg.11:x .coreX 2
+  660 op add :buildBlockFromCfg.11:y .coreY 0
+  661 set :buildBlock:block @unloader
   662 set :buildBlock:x :buildBlockFromCfg.11:x
   663 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  664 set :buildBlock:copper 0
+  665 set :buildBlock:lead 0
+  666 set :buildBlock:graphite 0
+  667 set :buildBlock:silicon 30
+  668 set :buildBlock:titanium 25
+  669 set :buildBlock:metaglass 0
+  670 set :buildBlock:rotation 0
+  671 set :buildBlock:config null
   672 setaddr :buildBlock*retaddr *label140 (h:*label140)
   673 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   674 label *label140
 
   689 set :buildBlockFromCfg.12:metaglass 0
   690 set :buildBlockFromCfg.12:rotation 0
   691 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp140 *label145
   692 label *label142
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  693 op add :buildBlockFromCfg.12:x .coreX 3.5
+  694 op add :buildBlockFromCfg.12:y .coreY 0.5
+  695 set :buildBlock:block @kiln
   696 set :buildBlock:x :buildBlockFromCfg.12:x
   697 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  698 set :buildBlock:copper 60
+  699 set :buildBlock:lead 30
+  700 set :buildBlock:graphite 30
+  701 set :buildBlock:silicon 0
+  702 set :buildBlock:titanium 0
+  703 set :buildBlock:metaglass 0
+  704 set :buildBlock:rotation 0
+  705 set :buildBlock:config null
   706 setaddr :buildBlock*retaddr *label146 (h:*label146)
   707 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   708 label *label146
 
   712 multilabel *label145 (m:marker13)
   713 label *label144
   714 label *label141
-    * write .kiln .processor ".kiln"
+  715 write null *tmp118 ".kiln"
   716 set :buildBlockFromCfg.13:block @junction
   717 set :buildBlockFromCfg.13:offsetX 2
   718 set :buildBlockFromCfg.13:offsetY 1
 
   724 set :buildBlockFromCfg.13:metaglass 0
   725 set :buildBlockFromCfg.13:rotation 0
   726 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp144 *label151
   727 label *label148
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  728 op add :buildBlockFromCfg.13:x .coreX 2
+  729 op add :buildBlockFromCfg.13:y .coreY 1
+  730 set :buildBlock:block @junction
   731 set :buildBlock:x :buildBlockFromCfg.13:x
   732 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  733 set :buildBlock:copper 3
+  734 set :buildBlock:lead 0
+  735 set :buildBlock:graphite 0
+  736 set :buildBlock:silicon 0
+  737 set :buildBlock:titanium 0
+  738 set :buildBlock:metaglass 0
+  739 set :buildBlock:rotation 0
+  740 set :buildBlock:config null
   741 setaddr :buildBlock*retaddr *label152 (h:*label152)
   742 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   743 label *label152
 
   758 set :buildBlockFromCfg.14:metaglass 30
   759 set :buildBlockFromCfg.14:rotation 0
   760 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp148 *label157
   761 label *label154
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  762 op add :buildBlockFromCfg.14:x .coreX -3.5
+  763 op add :buildBlockFromCfg.14:y .coreY 4.5
+  764 set :buildBlock:block @water-extractor
   765 set :buildBlock:x :buildBlockFromCfg.14:x
   766 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  767 set :buildBlock:copper 30
+  768 set :buildBlock:lead 30
+  769 set :buildBlock:graphite 30
+  770 set :buildBlock:silicon 0
+  771 set :buildBlock:titanium 0
+  772 set :buildBlock:metaglass 30
+  773 set :buildBlock:rotation 0
+  774 set :buildBlock:config null
   775 setaddr :buildBlock*retaddr *label158 (h:*label158)
   776 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   777 label *label158
 
   792 set :buildBlockFromCfg.15:metaglass 0
   793 set :buildBlockFromCfg.15:rotation 0
   794 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp152 *label163
   795 label *label160
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  796 op add :buildBlockFromCfg.15:x .coreX -3.5
+  797 op add :buildBlockFromCfg.15:y .coreY 2.5
+  798 set :buildBlock:block @steam-generator
   799 set :buildBlock:x :buildBlockFromCfg.15:x
   800 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  801 set :buildBlock:copper 35
+  802 set :buildBlock:lead 40
+  803 set :buildBlock:graphite 25
+  804 set :buildBlock:silicon 30
+  805 set :buildBlock:titanium 0
+  806 set :buildBlock:metaglass 0
+  807 set :buildBlock:rotation 0
+  808 set :buildBlock:config null
   809 setaddr :buildBlock*retaddr *label164 (h:*label164)
   810 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   811 label *label164
 
   815 multijump *tmp152 0 0 (m:marker16)
   816 multilabel *label163 (m:marker16)
   817 label *label162
-    * set *tmp151 null
   818 label *label159
   819 set .generator2 *tmp151
-    * write .generator2 .processor ".generator2"
+  820 write *tmp151 *tmp118 ".generator2"
   821 set :buildBlockFromCfg.16:block @sorter
   822 set :buildBlockFromCfg.16:offsetX -4
   823 set :buildBlockFromCfg.16:offsetY 1
 
   829 set :buildBlockFromCfg.16:metaglass 0
   830 set :buildBlockFromCfg.16:rotation 0
   831 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp156 *label169
   832 label *label166
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  833 op add :buildBlockFromCfg.16:x .coreX -4
+  834 op add :buildBlockFromCfg.16:y .coreY 1
+  835 set :buildBlock:block @sorter
   836 set :buildBlock:x :buildBlockFromCfg.16:x
   837 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  838 set :buildBlock:copper 2
+  839 set :buildBlock:lead 2
+  840 set :buildBlock:graphite 0
+  841 set :buildBlock:silicon 0
+  842 set :buildBlock:titanium 0
+  843 set :buildBlock:metaglass 0
+  844 set :buildBlock:rotation 0
+  845 set :buildBlock:config @coal
   846 setaddr :buildBlock*retaddr *label170 (h:*label170)
   847 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   848 label *label170
 
   880 end
   881 label *label0
   882 set :status3:text "Moving..."
-    * set .status3 :status3:text
+  883 set .status3 "Moving..."
   884 label *label177
   885 label *label178
   886 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
 
   896 label *label1
   897 set *tmp163 :moveTo.1:x
   898 set *tmp164 :moveTo.1:y
-    * set :moveTo:x *tmp163
-    * set :moveTo:y *tmp164
+  899 set :moveTo:x :moveTo.1:x
+  900 set :moveTo:y :moveTo.1:y
   901 set :moveTo:radius 5
   902 setaddr :moveTo*retaddr *label182 (h:*label182)
   903 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
 
   940 end
   941 label *label4
   942 set :status3.1:text "Depositing..."
-    * set .status3 :status3.1:text
+  943 set .status3 "Depositing..."
   944 label *label193
   945 sensor *tmp172 @unit @firstItem
   946 jump *label194 notEqual *tmp172 :depositItems:item
 
  1006 label *label212
  1007 set :mineOre:x :locateOre:x
  1008 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1009 set :moveToEmpty:x :locateOre:x
+ 1010 set :moveToEmpty:y :locateOre:y
  1011 setaddr :moveToEmpty*retaddr *label213 (h:*label213)
  1012 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
  1013 label *label213
  1014 set :status3.2:text "Mining..."
-    * set .status3 :status3.2:text
+ 1015 set .status3 "Mining..."
  1016 label *label214
  1017 label *label215
  1018 sensor :mineOre:item @unit @firstItem
 
  1054 set :status2:text "Fetching "
  1055 set :status2:item :fetchBlock:item
  1056 set :status2:block :fetchBlock:block
-    * set .status2 :status2:text
-    * set .item2 :status2:item
-    * set .block2 :status2:block
+ 1057 set .status2 "Fetching "
+ 1058 set .item2 :fetchBlock:item
+ 1059 set .block2 :fetchBlock:block
  1060 label *label224
  1061 sensor *tmp199 :fetchBlock:block @x
  1062 sensor *tmp200 :fetchBlock:block @y
 
  1099 sensor *tmp215 .press @coal
  1100 jump *label237 greaterThanEq *tmp215 5
  1101 set :status1:text "Meeting the graphite target"
-    * set .status1 :status1:text
+ 1102 set .status1 "Meeting the graphite target"
  1103 label *label239
  1104 set :supplyBlock:block .press
  1105 set :supplyBlock:ore @coal
  1106 set :status2.1:text "Supplying "
-    * set :status2.1:item :supplyBlock:ore
-    * set :status2.1:block :supplyBlock:block
-    * set .status2 :status2.1:text
-    * set .item2 :status2.1:item
-    * set .block2 :status2.1:block
+ 1107 set :status2.1:item @coal
+ 1108 set :status2.1:block .press
+ 1109 set .status2 "Supplying "
+ 1110 set .item2 :supplyBlock:ore
+ 1111 set .block2 :supplyBlock:block
  1112 label *label241
-    * sensor *tmp218 :supplyBlock:block @itemCapacity
-    * sensor *tmp219 :supplyBlock:block :supplyBlock:ore
+ 1113 sensor *tmp218 .press @itemCapacity
+ 1114 sensor *tmp219 .press @coal
  1115 op sub :supplyBlock:missing *tmp218 *tmp219
  1116 jump *label242 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1117 set :mineOre:ore @coal
  1118 set :mineOre:amount :supplyBlock:missing
-    * set :mineOre:block :supplyBlock:block
+ 1119 set :mineOre:block .press
  1120 setaddr :mineOre*retaddr *label244 (h:*label244)
  1121 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
  1122 label *label244
 
  1133 sensor *tmp226 .smelter @coal
  1134 jump *label247 greaterThanEq *tmp226 5
  1135 set :status1.1:text "Meeting the silicon target (coal)"
-    * set .status1 :status1.1:text
+ 1136 set .status1 "Meeting the silicon target (coal)"
  1137 label *label249
  1138 set :supplyBlock.1:block .smelter
  1139 set :supplyBlock.1:ore @coal
  1140 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock.1:ore
-    * set :status2.2:block :supplyBlock.1:block
-    * set .status2 :status2.2:text
-    * set .item2 :status2.2:item
-    * set .block2 :status2.2:block
+ 1141 set :status2.2:item @coal
+ 1142 set :status2.2:block .smelter
+ 1143 set .status2 "Supplying "
+ 1144 set .item2 :supplyBlock.1:ore
+ 1145 set .block2 :supplyBlock.1:block
  1146 label *label251
-    * sensor *tmp229 :supplyBlock.1:block @itemCapacity
-    * sensor *tmp230 :supplyBlock.1:block :supplyBlock.1:ore
+ 1147 sensor *tmp229 .smelter @itemCapacity
+ 1148 sensor *tmp230 .smelter @coal
  1149 op sub :supplyBlock.1:missing *tmp229 *tmp230
  1150 jump *label252 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1151 set :mineOre:ore @coal
  1152 set :mineOre:amount :supplyBlock.1:missing
-    * set :mineOre:block :supplyBlock.1:block
+ 1153 set :mineOre:block .smelter
  1154 setaddr :mineOre*retaddr *label254 (h:*label254)
  1155 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
  1156 label *label254
 
  1163 sensor *tmp234 .smelter @sand
  1164 jump *label255 greaterThanEq *tmp234 5
  1165 set :status1.2:text "Meeting the silicon target (sand)"
-    * set .status1 :status1.2:text
+ 1166 set .status1 "Meeting the silicon target (sand)"
  1167 label *label257
  1168 set :supplyBlock.2:block .smelter
  1169 set :supplyBlock.2:ore @sand
  1170 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.2:ore
-    * set :status2.3:block :supplyBlock.2:block
-    * set .status2 :status2.3:text
-    * set .item2 :status2.3:item
-    * set .block2 :status2.3:block
+ 1171 set :status2.3:item @sand
+ 1172 set :status2.3:block .smelter
+ 1173 set .status2 "Supplying "
+ 1174 set .item2 :supplyBlock.2:ore
+ 1175 set .block2 :supplyBlock.2:block
  1176 label *label259
-    * sensor *tmp237 :supplyBlock.2:block @itemCapacity
-    * sensor *tmp238 :supplyBlock.2:block :supplyBlock.2:ore
+ 1177 sensor *tmp237 .smelter @itemCapacity
+ 1178 sensor *tmp238 .smelter @sand
  1179 op sub :supplyBlock.2:missing *tmp237 *tmp238
  1180 jump *label260 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1181 set :mineOre:ore @sand
  1182 set :mineOre:amount :supplyBlock.2:missing
-    * set :mineOre:block :supplyBlock.2:block
+ 1183 set :mineOre:block .smelter
  1184 setaddr :mineOre*retaddr *label262 (h:*label262)
  1185 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
  1186 label *label262
 
  1196 sensor *tmp242 .battery @totalPower
  1197 jump *label263 greaterThanEq *tmp242 .powerTarget
  1198 set :status1.3:text "Supplying generator"
-    * set .status1 :status1.3:text
+ 1199 set .status1 "Supplying generator"
  1200 label *label265
  1201 set :supplyBlock.3:block .generator
  1202 set :supplyBlock.3:ore @coal
  1203 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.3:ore
-    * set :status2.4:block :supplyBlock.3:block
-    * set .status2 :status2.4:text
-    * set .item2 :status2.4:item
-    * set .block2 :status2.4:block
+ 1204 set :status2.4:item @coal
+ 1205 set :status2.4:block .generator
+ 1206 set .status2 "Supplying "
+ 1207 set .item2 :supplyBlock.3:ore
+ 1208 set .block2 :supplyBlock.3:block
  1209 label *label267
-    * sensor *tmp245 :supplyBlock.3:block @itemCapacity
-    * sensor *tmp246 :supplyBlock.3:block :supplyBlock.3:ore
+ 1210 sensor *tmp245 .generator @itemCapacity
+ 1211 sensor *tmp246 .generator @coal
  1212 op sub :supplyBlock.3:missing *tmp245 *tmp246
  1213 jump *label268 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1214 set :mineOre:ore @coal
  1215 set :mineOre:amount :supplyBlock.3:missing
-    * set :mineOre:block :supplyBlock.3:block
+ 1216 set :mineOre:block .generator
  1217 setaddr :mineOre*retaddr *label270 (h:*label270)
  1218 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
  1219 label *label270
 
  1229 sensor *tmp252 .core @coal
  1230 jump *label273 greaterThanEq *tmp252 10
  1231 set :status1.4:text "Supplying base"
-    * set .status1 :status1.4:text
+ 1232 set .status1 "Supplying base"
  1233 label *label275
  1234 set :mineOre.1:ore @coal
  1235 setaddr :mineOre.1*retaddr *label276 (h:*label276)
 
  1246 sensor *tmp258 .core @silicon
  1247 jump *label279 greaterThanEq *tmp258 .siliconTarget
  1248 set :status1.5:text "Meeting the silicon target"
-    * set .status1 :status1.5:text
+ 1249 set .status1 "Meeting the silicon target"
  1250 label *label281
  1251 sensor :supplyBlocks:coal .core @coal
  1252 sensor :supplyBlocks:sand .core @sand
 
  1258 label *label283
  1259 set :supplyBlocks:ore *tmp264
  1260 set :status2.5:text "Mining "
-    * set :status2.5:item :supplyBlocks:ore
+ 1261 set :status2.5:item *tmp264
  1262 set :status2.5:block "core"
-    * set .status2 :status2.5:text
-    * set .item2 :status2.5:item
-    * set .block2 :status2.5:block
+ 1263 set .status2 "Mining "
+ 1264 set .item2 :supplyBlocks:ore
+ 1265 set .block2 "core"
  1266 label *label284
-    * set :mineOre.1:ore :supplyBlocks:ore
+ 1267 set :mineOre.1:ore *tmp264
  1268 setaddr :mineOre.1*retaddr *label285 (h:*label285)
  1269 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
  1270 label *label285
 
  1273 sensor *tmp265 .core @copper
  1274 jump *label286 greaterThanEq *tmp265 .copperTarget
  1275 set :status1.6:text "Meeting the copper target"
-    * set .status1 :status1.6:text
+ 1276 set .status1 "Meeting the copper target"
  1277 label *label288
  1278 set :status2.6:text "Mining "
  1279 set :status2.6:item @copper
  1280 set :status2.6:block "core"
-    * set .status2 :status2.6:text
-    * set .item2 :status2.6:item
-    * set .block2 :status2.6:block
+ 1281 set .status2 "Mining "
+ 1282 set .item2 @copper
+ 1283 set .block2 "core"
  1284 label *label289
  1285 set :mineOre.1:ore @copper
  1286 setaddr :mineOre.1*retaddr *label290 (h:*label290)
 
  1291 sensor *tmp268 .core @lead
  1292 jump *label291 greaterThanEq *tmp268 .leadTarget
  1293 set :status1.7:text "Meeting the lead target"
-    * set .status1 :status1.7:text
+ 1294 set .status1 "Meeting the lead target"
  1295 label *label293
  1296 set :status2.7:text "Mining "
  1297 set :status2.7:item @lead
  1298 set :status2.7:block "core"
-    * set .status2 :status2.7:text
-    * set .item2 :status2.7:item
-    * set .block2 :status2.7:block
+ 1299 set .status2 "Mining "
+ 1300 set .item2 @lead
+ 1301 set .block2 "core"
  1302 label *label294
  1303 set :mineOre.1:ore @lead
  1304 setaddr :mineOre.1*retaddr *label295 (h:*label295)
 
  1309 sensor *tmp271 .core @metaglass
  1310 jump *label296 greaterThanEq *tmp271 .metaglassTarget
  1311 set :status1.8:text "Meeting the metaglass target"
-    * set .status1 :status1.8:text
+ 1312 set .status1 "Meeting the metaglass target"
  1313 label *label298
  1314 set :status2.8:text "Mining "
  1315 set :status2.8:item @sand
  1316 set :status2.8:block "core"
-    * set .status2 :status2.8:text
-    * set .item2 :status2.8:item
-    * set .block2 :status2.8:block
+ 1317 set .status2 "Mining "
+ 1318 set .item2 @sand
+ 1319 set .block2 "core"
  1320 label *label299
  1321 set :mineOre.1:ore @sand
  1322 setaddr :mineOre.1*retaddr *label300 (h:*label300)
 
  1326 label *label296
  1327 jump *label301 notEqual :supplyBlocks:supplied false
  1328 set :status1.9:text "Supplying base"
-    * set .status1 :status1.9:text
+ 1329 set .status1 "Supplying base"
  1330 label *label303
  1331 sensor :supplyBlocks:coal.1 .core @coal
  1332 sensor :supplyBlocks:sand.1 .core @sand
 
  1338 label *label305
  1339 set :supplyBlocks:ore.1 *tmp279
  1340 set :status2.9:text "Mining "
-    * set :status2.9:item :supplyBlocks:ore.1
+ 1341 set :status2.9:item *tmp279
  1342 set :status2.9:block "core"
-    * set .status2 :status2.9:text
-    * set .item2 :status2.9:item
-    * set .block2 :status2.9:block
+ 1343 set .status2 "Mining "
+ 1344 set .item2 :supplyBlocks:ore.1
+ 1345 set .block2 "core"
  1346 label *label306
-    * set :mineOre.1:ore :supplyBlocks:ore.1
+ 1347 set :mineOre.1:ore *tmp279
  1348 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1349 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1350 label *label307
 
  1357 jump *label278 always
  1358 label *label277
  1359 set :status1.10:text "Fetching titanium"
-    * set .status1 :status1.10:text
+ 1360 set .status1 "Fetching titanium"
  1361 label *label308
  1362 set :fetchBlock:block .titanium_drill
  1363 set :fetchBlock:item @titanium
 
  1467 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1468 label *label329
  1469 set :status3.3:text "Building..."
-    * set .status3 :status3.3:text
+ 1470 set .status3 "Building..."
  1471 label *label330
  1472 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1473 jump *label331 equal :buildBlockAt:building null
 
  1506 label *label340
  1507 set :buildBlockAt*retval :buildBlockAt:building
  1508 jump *label328 always
-    * set :buildBlockAt*retval null
  1509 label *label328
  1510 return :buildBlockAt*retaddr
  1511 end
 
  1531 label *label345
  1532 set :buildBlock*retval :buildBlockAt*retval
  1533 jump *label343 always
-    * set :buildBlock*retval null
  1534 label *label343
  1535 return :buildBlock*retaddr
  1536 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-255 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .kiln null
     6 set .nextBlock ""
     7 set .copperTarget 0
     8 set .leadTarget 0
 
    28 label *label16
    29 jump *label15 equal .core null
    30 label *label17
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    31 label *label19
    32 op add :buildBlockFromCfg:x .coreX -1.5
    33 op add :buildBlockFromCfg:y .coreY 2.5
 
    53 label *label21
    54 label *label18
    55 set .press *tmp16
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    56 label *label25
    57 op add :buildBlockFromCfg.1:x .coreX 0
    58 op add :buildBlockFromCfg.1:y .coreY 4
 
    78 label *label27
    79 label *label24
    80 set .battery *tmp20
-    * set :buildBlockFromCfg.2:block @combustion-generator
-    * set :buildBlockFromCfg.2:offsetX 0
-    * set :buildBlockFromCfg.2:offsetY 3
-    * set :buildBlockFromCfg.2:copper 25
-    * set :buildBlockFromCfg.2:lead 15
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    81 label *label31
    82 op add :buildBlockFromCfg.2:x .coreX 0
    83 op add :buildBlockFromCfg.2:y .coreY 3
 
   104 label *label30
   105 set .generator *tmp24
   106 set .powerTarget 400
-    * set :buildBlockFromCfg.3:block @battery
-    * set :buildBlockFromCfg.3:offsetX -1
-    * set :buildBlockFromCfg.3:offsetY 4
-    * set :buildBlockFromCfg.3:copper 5
-    * set :buildBlockFromCfg.3:lead 20
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   107 label *label37
   108 op add :buildBlockFromCfg.3:x .coreX -1
   109 op add :buildBlockFromCfg.3:y .coreY 4
 
   127 multilabel *label40 (m:marker3)
   128 label *label39
   129 label *label36
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   130 label *label43
   131 op add :buildBlockFromCfg.4:x .coreX 1.5
   132 op add :buildBlockFromCfg.4:y .coreY 2.5
 
   167 setaddr :meetTarget*retaddr *label53 (h:*label53)
   168 call *label10 *invalid :meetTarget*retval (m:*label53) (h:*label53)
   169 label *label53
-    * set :locateOreAway:ore @titanium
   170 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   171 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   172 label *label55
 
   207 jump *label55 always
   208 label *label57
   209 label *label54
-    * set :buildTitaniumDrillCfg:x :locateOreAway:x
-    * set :buildTitaniumDrillCfg:y :locateOreAway:y
   210 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   211 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   212 set :moveTo.1:x :locateOreAway:x
 
   245 setaddr *tmp56 *label73
   246 label *label67
   247 set :buildTitaniumDrillCfg:count 0
-    * set :checkOre:x :buildTitaniumDrillCfg:ax
-    * set :checkOre:y :buildTitaniumDrillCfg:ay
-    * set :checkOre:ore @ore-titanium
   248 set :checkOre:count 0
   249 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   250 jump *label75 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  251 op add :checkOre:count 0 1
   252 label *label75
   253 label *label76
   254 label *label74
   255 set :buildTitaniumDrillCfg:count :checkOre:count
   256 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:y :buildTitaniumDrillCfg:ay
-    * set :checkOre.1:ore @ore-titanium
   257 set :checkOre.1:count :checkOre:count
   258 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   259 jump *label78 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  260 op add :checkOre.1:count :checkOre:count 1
   261 label *label78
   262 label *label79
   263 label *label77
   264 set :buildTitaniumDrillCfg:count :checkOre.1:count
   265 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :buildTitaniumDrillCfg:ax
-    * set :checkOre.2:y *tmp70
-    * set :checkOre.2:ore @ore-titanium
   266 set :checkOre.2:count :checkOre.1:count
   267 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   268 jump *label81 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  269 op add :checkOre.2:count :checkOre.1:count 1
   270 label *label81
   271 label *label82
   272 label *label80
   273 set :buildTitaniumDrillCfg:count :checkOre.2:count
   274 op add *tmp77 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   275 op add *tmp78 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x :checkOre.1:x
-    * set :checkOre.3:y *tmp70
-    * set :checkOre.3:ore @ore-titanium
   276 set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock *tmp77 *tmp78 0 0 :checkOre.3:floor
+  277 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   278 jump *label84 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
+  279 op add :checkOre.3:count :checkOre.2:count 1
   280 label *label84
   281 label *label85
   282 label *label83
-    * set :buildTitaniumDrillCfg:count :checkOre.3:count
   283 jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   284 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   285 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
 
   312 setaddr :buildBlockAt*retaddr *label92 (h:*label92)
   313 call *label11 *invalid :buildBlockAt*retval (m:*label92) (h:*label92)
   314 label *label92
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   315 jump *label93 equal :buildBlockAt*retval null
   316 set *tmp37 :buildBlockAt*retval
   317 jump *label49 always
 
   349 label *label52
   350 set *tmp37 null
   351 label *label49
-    * set *tmp36 *tmp37
   352 label *label48
   353 set .titanium_drill *tmp37
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
   354 label *label100
   355 op add :buildBlockFromCfg.5:x .coreX 0
   356 op add :buildBlockFromCfg.5:y .coreY 2
 
   376 label *label102
   377 label *label99
   378 set .unloader1 *tmp110
-    * set :buildBlockFromCfg.6:block @power-node
-    * set :buildBlockFromCfg.6:offsetX -1
-    * set :buildBlockFromCfg.6:offsetY -2
-    * set :buildBlockFromCfg.6:copper 2
-    * set :buildBlockFromCfg.6:lead 6
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 0
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config null
   379 label *label106
   380 op add :buildBlockFromCfg.6:x .coreX -1
   381 op add :buildBlockFromCfg.6:y .coreY -2
 
   399 multilabel *label109 (m:marker7)
   400 label *label108
   401 label *label105
-    * set :buildBlockFromCfg.7:block @micro-processor
-    * set :buildBlockFromCfg.7:offsetX 1
-    * set :buildBlockFromCfg.7:offsetY 4
-    * set :buildBlockFromCfg.7:copper 90
-    * set :buildBlockFromCfg.7:lead 50
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 50
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config processor1
   402 label *label112
   403 op add :buildBlockFromCfg.7:x .coreX 1
   404 op add :buildBlockFromCfg.7:y .coreY 4
 
   429 write *tmp24 *tmp118 ".generator"
   430 write *tmp32 *tmp118 ".smelter"
   431 write *tmp16 *tmp118 ".press"
-    * set :buildBlockFromCfg.8:block @air-factory
-    * set :buildBlockFromCfg.8:offsetX -4
-    * set :buildBlockFromCfg.8:offsetY -1
-    * set :buildBlockFromCfg.8:copper 60
-    * set :buildBlockFromCfg.8:lead 70
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 3
-    * set :buildBlockFromCfg.8:config @mono
   432 label *label118
   433 op add :buildBlockFromCfg.8:x .coreX -4
   434 op add :buildBlockFromCfg.8:y .coreY -1
 
   453 multilabel *label121 (m:marker9)
   454 label *label120
   455 label *label117
-    * set .factory *tmp123
   456 write *tmp123 *tmp118 ".factory"
-    * set :buildBlockFromCfg.9:block @unloader
-    * set :buildBlockFromCfg.9:offsetX -2
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 0
-    * set :buildBlockFromCfg.9:lead 0
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 30
-    * set :buildBlockFromCfg.9:titanium 25
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   457 label *label124
   458 op add :buildBlockFromCfg.9:x .coreX -2
   459 op add :buildBlockFromCfg.9:y .coreY 1
 
   478 multilabel *label127 (m:marker10)
   479 label *label126
   480 label *label123
-    * set .unloader2 *tmp127
   481 write *tmp127 *tmp118 ".unloader2"
-    * set :buildBlockFromCfg.10:block @overflow-gate
-    * set :buildBlockFromCfg.10:offsetX -3
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 4
-    * set :buildBlockFromCfg.10:lead 2
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   482 label *label130
   483 op add :buildBlockFromCfg.10:x .coreX -3
   484 op add :buildBlockFromCfg.10:y .coreY 1
 
   503 label *label132
   504 label *label129
   505 write @mono *tmp118 ".unitToProduce"
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   506 label *label136
   507 op add :buildBlockFromCfg.11:x .coreX 2
   508 op add :buildBlockFromCfg.11:y .coreY 0
 
   526 multilabel *label139 (m:marker12)
   527 label *label138
   528 label *label135
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   529 label *label142
   530 op add :buildBlockFromCfg.12:x .coreX 3.5
   531 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   550 label *label144
   551 label *label141
   552 write null *tmp118 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   553 label *label148
   554 op add :buildBlockFromCfg.13:x .coreX 2
   555 op add :buildBlockFromCfg.13:y .coreY 1
 
   573 multilabel *label151 (m:marker14)
   574 label *label150
   575 label *label147
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   576 label *label154
   577 op add :buildBlockFromCfg.14:x .coreX -3.5
   578 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   596 multilabel *label157 (m:marker15)
   597 label *label156
   598 label *label153
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   599 label *label160
   600 op add :buildBlockFromCfg.15:x .coreX -3.5
   601 op add :buildBlockFromCfg.15:y .coreY 2.5
 
   620 multilabel *label163 (m:marker16)
   621 label *label162
   622 label *label159
-    * set .generator2 *tmp151
   623 write *tmp151 *tmp118 ".generator2"
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   624 label *label166
   625 op add :buildBlockFromCfg.16:x .coreX -4
   626 op add :buildBlockFromCfg.16:y .coreY 1
 
   671 jump *label13 always
   672 end
   673 label *label0
-    * set :status3:text "Moving..."
   674 set .status3 "Moving..."
   675 label *label177
   676 label *label178
 
   685 return :moveTo*retaddr
   686 end
   687 label *label1
-    * set *tmp163 :moveTo.1:x
-    * set *tmp164 :moveTo.1:y
   688 set :moveTo:x :moveTo.1:x
   689 set :moveTo:y :moveTo.1:y
   690 set :moveTo:radius 5
 
   728 return :moveToBlock*retaddr
   729 end
   730 label *label4
-    * set :status3.1:text "Depositing..."
   731 set .status3 "Depositing..."
   732 label *label193
   733 sensor *tmp172 @unit @firstItem
 
   799 setaddr :moveToEmpty*retaddr *label213 (h:*label213)
   800 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
   801 label *label213
-    * set :status3.2:text "Mining..."
   802 set .status3 "Mining..."
   803 label *label214
   804 label *label215
 
   838 label *label8
   839 sensor .transportTarget :fetchBlock:block @itemCapacity
   840 set .transportItem :fetchBlock:item
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   841 set .status2 "Fetching "
   842 set .item2 :fetchBlock:item
   843 set .block2 :fetchBlock:block
 
   882 jump *label235 greaterThanEq *tmp212 .updatedGraphiteTarget
   883 sensor *tmp215 .press @coal
   884 jump *label237 greaterThanEq *tmp215 5
-    * set :status1:text "Meeting the graphite target"
   885 set .status1 "Meeting the graphite target"
   886 label *label239
   887 set :supplyBlock:block .press
   888 set :supplyBlock:ore @coal
-    * set :status2.1:text "Supplying "
-    * set :status2.1:item @coal
-    * set :status2.1:block .press
   889 set .status2 "Supplying "
-    * set .item2 :supplyBlock:ore
-    * set .block2 :supplyBlock:block
+  890 set .item2 @coal
+  891 set .block2 .press
   892 label *label241
   893 sensor *tmp218 .press @itemCapacity
   894 sensor *tmp219 .press @coal
 
   912 jump *label245 greaterThanEq *tmp223 .updatedSiliconTarget
   913 sensor *tmp226 .smelter @coal
   914 jump *label247 greaterThanEq *tmp226 5
-    * set :status1.1:text "Meeting the silicon target (coal)"
   915 set .status1 "Meeting the silicon target (coal)"
   916 label *label249
   917 set :supplyBlock.1:block .smelter
   918 set :supplyBlock.1:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .smelter
   919 set .status2 "Supplying "
-    * set .item2 :supplyBlock.1:ore
-    * set .block2 :supplyBlock.1:block
+  920 set .item2 @coal
+  921 set .block2 .smelter
   922 label *label251
   923 sensor *tmp229 .smelter @itemCapacity
   924 sensor *tmp230 .smelter @coal
 
   938 label *label247
   939 sensor *tmp234 .smelter @sand
   940 jump *label255 greaterThanEq *tmp234 5
-    * set :status1.2:text "Meeting the silicon target (sand)"
   941 set .status1 "Meeting the silicon target (sand)"
   942 label *label257
   943 set :supplyBlock.2:block .smelter
   944 set :supplyBlock.2:ore @sand
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @sand
-    * set :status2.3:block .smelter
   945 set .status2 "Supplying "
-    * set .item2 :supplyBlock.2:ore
-    * set .block2 :supplyBlock.2:block
+  946 set .item2 @sand
+  947 set .block2 .smelter
   948 label *label259
   949 sensor *tmp237 .smelter @itemCapacity
   950 sensor *tmp238 .smelter @sand
 
   967 label *label246
   968 sensor *tmp242 .battery @totalPower
   969 jump *label263 greaterThanEq *tmp242 .powerTarget
-    * set :status1.3:text "Supplying generator"
   970 set .status1 "Supplying generator"
   971 label *label265
   972 set :supplyBlock.3:block .generator
   973 set :supplyBlock.3:ore @coal
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @coal
-    * set :status2.4:block .generator
   974 set .status2 "Supplying "
-    * set .item2 :supplyBlock.3:ore
-    * set .block2 :supplyBlock.3:block
+  975 set .item2 @coal
+  976 set .block2 .generator
   977 label *label267
   978 sensor *tmp245 .generator @itemCapacity
   979 sensor *tmp246 .generator @coal
 
   996 jump *label271 equal .processor null
   997 sensor *tmp252 .core @coal
   998 jump *label273 greaterThanEq *tmp252 10
-    * set :status1.4:text "Supplying base"
   999 set .status1 "Supplying base"
  1000 label *label275
  1001 set :mineOre.1:ore @coal
 
  1012 jump *label277 greaterThanEq *tmp255 .titaniumTrigger
  1013 sensor *tmp258 .core @silicon
  1014 jump *label279 greaterThanEq *tmp258 .siliconTarget
-    * set :status1.5:text "Meeting the silicon target"
  1015 set .status1 "Meeting the silicon target"
  1016 label *label281
  1017 sensor :supplyBlocks:coal .core @coal
 
  1023 set *tmp264 @sand
  1024 label *label283
  1025 set :supplyBlocks:ore *tmp264
-    * set :status2.5:text "Mining "
-    * set :status2.5:item *tmp264
-    * set :status2.5:block "core"
  1026 set .status2 "Mining "
-    * set .item2 :supplyBlocks:ore
+ 1027 set .item2 *tmp264
  1028 set .block2 "core"
  1029 label *label284
  1030 set :mineOre.1:ore *tmp264
 
  1035 label *label279
  1036 sensor *tmp265 .core @copper
  1037 jump *label286 greaterThanEq *tmp265 .copperTarget
-    * set :status1.6:text "Meeting the copper target"
  1038 set .status1 "Meeting the copper target"
  1039 label *label288
-    * set :status2.6:text "Mining "
-    * set :status2.6:item @copper
-    * set :status2.6:block "core"
  1040 set .status2 "Mining "
  1041 set .item2 @copper
  1042 set .block2 "core"
 
  1049 label *label286
  1050 sensor *tmp268 .core @lead
  1051 jump *label291 greaterThanEq *tmp268 .leadTarget
-    * set :status1.7:text "Meeting the lead target"
  1052 set .status1 "Meeting the lead target"
  1053 label *label293
-    * set :status2.7:text "Mining "
-    * set :status2.7:item @lead
-    * set :status2.7:block "core"
  1054 set .status2 "Mining "
  1055 set .item2 @lead
  1056 set .block2 "core"
 
  1063 label *label291
  1064 sensor *tmp271 .core @metaglass
  1065 jump *label296 greaterThanEq *tmp271 .metaglassTarget
-    * set :status1.8:text "Meeting the metaglass target"
  1066 set .status1 "Meeting the metaglass target"
  1067 label *label298
-    * set :status2.8:text "Mining "
-    * set :status2.8:item @sand
-    * set :status2.8:block "core"
  1068 set .status2 "Mining "
  1069 set .item2 @sand
  1070 set .block2 "core"
 
  1076 jump *label297 always
  1077 label *label296
  1078 jump *label301 notEqual :supplyBlocks:supplied false
-    * set :status1.9:text "Supplying base"
  1079 set .status1 "Supplying base"
  1080 label *label303
  1081 sensor :supplyBlocks:coal.1 .core @coal
 
  1087 set *tmp279 @sand
  1088 label *label305
  1089 set :supplyBlocks:ore.1 *tmp279
-    * set :status2.9:text "Mining "
-    * set :status2.9:item *tmp279
-    * set :status2.9:block "core"
  1090 set .status2 "Mining "
-    * set .item2 :supplyBlocks:ore.1
+ 1091 set .item2 *tmp279
  1092 set .block2 "core"
  1093 label *label306
  1094 set :mineOre.1:ore *tmp279
 
  1103 label *label280
  1104 jump *label278 always
  1105 label *label277
-    * set :status1.10:text "Fetching titanium"
  1106 set .status1 "Fetching titanium"
  1107 label *label308
  1108 set :fetchBlock:block .titanium_drill
 
  1212 setaddr :moveTo.1*retaddr *label329 (h:*label329)
  1213 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1214 label *label329
-    * set :status3.3:text "Building..."
  1215 set .status3 "Building..."
  1216 label *label330
  1217 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-16 instructions):
 
   244 set :buildTitaniumDrillCfg:yy -1
   245 setaddr *tmp56 *label73
   246 label *label67
-    * set :buildTitaniumDrillCfg:count 0
   247 set :checkOre:count 0
   248 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   249 jump *label75 notEqual :checkOre:floor @ore-titanium
 
   251 label *label75
   252 label *label76
   253 label *label74
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   254 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   255 set :checkOre.1:count :checkOre:count
   256 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
 
   259 label *label78
   260 label *label79
   261 label *label77
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
   262 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   263 set :checkOre.2:count :checkOre.1:count
   264 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
 
   267 label *label81
   268 label *label82
   269 label *label80
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op add *tmp77 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * op add *tmp78 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   270 set :checkOre.3:count :checkOre.2:count
   271 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   272 jump *label84 notEqual :checkOre.3:floor @ore-titanium
 
   878 jump *label237 greaterThanEq *tmp215 5
   879 set .status1 "Meeting the graphite target"
   880 label *label239
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   881 set .status2 "Supplying "
   882 set .item2 @coal
   883 set .block2 .press
 
   906 jump *label247 greaterThanEq *tmp226 5
   907 set .status1 "Meeting the silicon target (coal)"
   908 label *label249
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   909 set .status2 "Supplying "
   910 set .item2 @coal
   911 set .block2 .smelter
 
   930 jump *label255 greaterThanEq *tmp234 5
   931 set .status1 "Meeting the silicon target (sand)"
   932 label *label257
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   933 set .status2 "Supplying "
   934 set .item2 @sand
   935 set .block2 .smelter
 
   957 jump *label263 greaterThanEq *tmp242 .powerTarget
   958 set .status1 "Supplying generator"
   959 label *label265
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   960 set .status2 "Supplying "
   961 set .item2 @coal
   962 set .block2 .generator
 
  1008 label *label282
  1009 set *tmp264 @sand
  1010 label *label283
-    * set :supplyBlocks:ore *tmp264
  1011 set .status2 "Mining "
  1012 set .item2 *tmp264
  1013 set .block2 "core"
 
  1071 label *label304
  1072 set *tmp279 @sand
  1073 label *label305
-    * set :supplyBlocks:ore.1 *tmp279
  1074 set .status2 "Mining "
  1075 set .item2 *tmp279
  1076 set .block2 "core"

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    21 set .status3 ""
    22 set .titaniumTrigger 7
    23 set *signature "0:v1"
+   24 set .powerTarget 400
    25 label *label13
    26 label *label15
    27 ubind @poly
 
    29 label *label16
    30 jump *label15 equal .core null
    31 label *label17
+   32 set :buildBlock:block @graphite-press
+   33 set :buildBlock:copper 75
+   34 set :buildBlock:lead 30
+   35 set :buildBlock:graphite 0
+   36 set :buildBlock:silicon 0
+   37 set :buildBlock:titanium 0
+   38 set :buildBlock:metaglass 0
+   39 set :buildBlock:rotation 0
+   40 set :buildBlock:config null
+   41 setaddr :buildBlock*retaddr *label23 (h:*label23)
    42 label *label19
    43 op add :buildBlockFromCfg:x .coreX -1.5
    44 op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
    45 set :buildBlock:x :buildBlockFromCfg:x
    46 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label23 (h:*label23)
    47 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    48 label *label23
    49 set *tmp16 :buildBlock*retval
 
    54 label *label21
    55 label *label18
    56 set .press *tmp16
+   57 set :buildBlock:block @battery
+   58 set :buildBlock:copper 5
+   59 set :buildBlock:lead 20
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
+   66 setaddr :buildBlock*retaddr *label29 (h:*label29)
    67 label *label25
    68 op add :buildBlockFromCfg.1:x .coreX 0
    69 op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
    70 set :buildBlock:x :buildBlockFromCfg.1:x
    71 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label29 (h:*label29)
    72 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    73 label *label29
    74 set *tmp20 :buildBlock*retval
 
    79 label *label27
    80 label *label24
    81 set .battery *tmp20
+   82 set :buildBlock:block @combustion-generator
+   83 set :buildBlock:copper 25
+   84 set :buildBlock:lead 15
+   85 set :buildBlock:graphite 0
+   86 set :buildBlock:silicon 0
+   87 set :buildBlock:titanium 0
+   88 set :buildBlock:metaglass 0
+   89 set :buildBlock:rotation 0
+   90 set :buildBlock:config null
+   91 setaddr :buildBlock*retaddr *label35 (h:*label35)
    92 label *label31
    93 op add :buildBlockFromCfg.2:x .coreX 0
    94 op add :buildBlockFromCfg.2:y .coreY 3
-    * set :buildBlock:block @combustion-generator
    95 set :buildBlock:x :buildBlockFromCfg.2:x
    96 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label35 (h:*label35)
    97 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    98 label *label35
    99 set *tmp24 :buildBlock*retval
 
   104 label *label33
   105 label *label30
   106 set .generator *tmp24
-    * set .powerTarget 400
+  107 set :buildBlock:block @battery
+  108 set :buildBlock:copper 5
+  109 set :buildBlock:lead 20
+  110 set :buildBlock:graphite 0
+  111 set :buildBlock:silicon 0
+  112 set :buildBlock:titanium 0
+  113 set :buildBlock:metaglass 0
+  114 set :buildBlock:rotation 0
+  115 set :buildBlock:config null
+  116 setaddr :buildBlock*retaddr *label41 (h:*label41)
   117 label *label37
   118 op add :buildBlockFromCfg.3:x .coreX -1
   119 op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:block @battery
   120 set :buildBlock:x :buildBlockFromCfg.3:x
   121 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label41 (h:*label41)
   122 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   123 label *label41
   124 jump *label36 always
 
   127 multilabel *label40 (m:marker3)
   128 label *label39
   129 label *label36
+  130 set :buildBlock:block @silicon-smelter
+  131 set :buildBlock:copper 30
+  132 set :buildBlock:lead 25
+  133 set :buildBlock:graphite 0
+  134 set :buildBlock:silicon 0
+  135 set :buildBlock:titanium 0
+  136 set :buildBlock:metaglass 0
+  137 set :buildBlock:rotation 0
+  138 set :buildBlock:config null
+  139 setaddr :buildBlock*retaddr *label47 (h:*label47)
   140 label *label43
   141 op add :buildBlockFromCfg.4:x .coreX 1.5
   142 op add :buildBlockFromCfg.4:y .coreY 2.5
-    * set :buildBlock:block @silicon-smelter
   143 set :buildBlock:x :buildBlockFromCfg.4:x
   144 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label47 (h:*label47)
   145 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   146 label *label47
   147 set *tmp32 :buildBlock*retval
 
   345 label *label49
   346 label *label48
   347 set .titanium_drill *tmp37
+  348 set :buildBlock:block @unloader
+  349 set :buildBlock:copper 0
+  350 set :buildBlock:lead 0
+  351 set :buildBlock:graphite 0
+  352 set :buildBlock:silicon 30
+  353 set :buildBlock:titanium 25
+  354 set :buildBlock:metaglass 0
+  355 set :buildBlock:rotation 0
+  356 set :buildBlock:config null
+  357 setaddr :buildBlock*retaddr *label104 (h:*label104)
   358 label *label100
   359 op add :buildBlockFromCfg.5:x .coreX 0
   360 op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
   361 set :buildBlock:x :buildBlockFromCfg.5:x
   362 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label104 (h:*label104)
   363 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   364 label *label104
   365 set *tmp110 :buildBlock*retval
 
   370 label *label102
   371 label *label99
   372 set .unloader1 *tmp110
+  373 set :buildBlock:block @power-node
+  374 set :buildBlock:copper 2
+  375 set :buildBlock:lead 6
+  376 set :buildBlock:graphite 0
+  377 set :buildBlock:silicon 0
+  378 set :buildBlock:titanium 0
+  379 set :buildBlock:metaglass 0
+  380 set :buildBlock:rotation 0
+  381 set :buildBlock:config null
+  382 setaddr :buildBlock*retaddr *label110 (h:*label110)
   383 label *label106
   384 op add :buildBlockFromCfg.6:x .coreX -1
   385 op add :buildBlockFromCfg.6:y .coreY -2
-    * set :buildBlock:block @power-node
   386 set :buildBlock:x :buildBlockFromCfg.6:x
   387 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label110 (h:*label110)
   388 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   389 label *label110
   390 jump *label105 always
 
   393 multilabel *label109 (m:marker7)
   394 label *label108
   395 label *label105
+  396 set :buildBlock:block @micro-processor
+  397 set :buildBlock:copper 90
+  398 set :buildBlock:lead 50
+  399 set :buildBlock:graphite 0
+  400 set :buildBlock:silicon 50
+  401 set :buildBlock:titanium 0
+  402 set :buildBlock:metaglass 0
+  403 set :buildBlock:rotation 0
+  404 setaddr :buildBlock*retaddr *label116 (h:*label116)
   405 label *label112
   406 op add :buildBlockFromCfg.7:x .coreX 1
   407 op add :buildBlockFromCfg.7:y .coreY 4
-    * set :buildBlock:block @micro-processor
   408 set :buildBlock:x :buildBlockFromCfg.7:x
   409 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   410 set :buildBlock:config processor1
-    * setaddr :buildBlock*retaddr *label116 (h:*label116)
   411 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   412 label *label116
   413 set *tmp118 :buildBlock*retval
 
   423 write *tmp24 *tmp118 ".generator"
   424 write *tmp32 *tmp118 ".smelter"
   425 write *tmp16 *tmp118 ".press"
+  426 set :buildBlock:block @air-factory
+  427 set :buildBlock:copper 60
+  428 set :buildBlock:lead 70
+  429 set :buildBlock:graphite 0
+  430 set :buildBlock:silicon 0
+  431 set :buildBlock:titanium 0
+  432 set :buildBlock:metaglass 0
+  433 set :buildBlock:rotation 3
+  434 set :buildBlock:config @mono
+  435 setaddr :buildBlock*retaddr *label122 (h:*label122)
   436 label *label118
   437 op add :buildBlockFromCfg.8:x .coreX -4
   438 op add :buildBlockFromCfg.8:y .coreY -1
-    * set :buildBlock:block @air-factory
   439 set :buildBlock:x :buildBlockFromCfg.8:x
   440 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label122 (h:*label122)
   441 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   442 label *label122
   443 set *tmp123 :buildBlock*retval
 
   448 label *label120
   449 label *label117
   450 write *tmp123 *tmp118 ".factory"
+  451 set :buildBlock:block @unloader
+  452 set :buildBlock:copper 0
+  453 set :buildBlock:lead 0
+  454 set :buildBlock:graphite 0
+  455 set :buildBlock:silicon 30
+  456 set :buildBlock:titanium 25
+  457 set :buildBlock:metaglass 0
+  458 set :buildBlock:rotation 0
+  459 set :buildBlock:config null
+  460 setaddr :buildBlock*retaddr *label128 (h:*label128)
   461 label *label124
   462 op add :buildBlockFromCfg.9:x .coreX -2
   463 op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:block @unloader
   464 set :buildBlock:x :buildBlockFromCfg.9:x
   465 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label128 (h:*label128)
   466 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   467 label *label128
   468 set *tmp127 :buildBlock*retval
 
   473 label *label126
   474 label *label123
   475 write *tmp127 *tmp118 ".unloader2"
+  476 set :buildBlock:block @overflow-gate
+  477 set :buildBlock:copper 4
+  478 set :buildBlock:lead 2
+  479 set :buildBlock:graphite 0
+  480 set :buildBlock:silicon 0
+  481 set :buildBlock:titanium 0
+  482 set :buildBlock:metaglass 0
+  483 set :buildBlock:rotation 0
+  484 set :buildBlock:config null
+  485 setaddr :buildBlock*retaddr *label134 (h:*label134)
   486 label *label130
   487 op add :buildBlockFromCfg.10:x .coreX -3
   488 op add :buildBlockFromCfg.10:y .coreY 1
-    * set :buildBlock:block @overflow-gate
   489 set :buildBlock:x :buildBlockFromCfg.10:x
   490 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label134 (h:*label134)
   491 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   492 label *label134
   493 jump *label129 always
 
   497 label *label132
   498 label *label129
   499 write @mono *tmp118 ".unitToProduce"
+  500 set :buildBlock:block @unloader
+  501 set :buildBlock:copper 0
+  502 set :buildBlock:lead 0
+  503 set :buildBlock:graphite 0
+  504 set :buildBlock:silicon 30
+  505 set :buildBlock:titanium 25
+  506 set :buildBlock:metaglass 0
+  507 set :buildBlock:rotation 0
+  508 set :buildBlock:config null
+  509 setaddr :buildBlock*retaddr *label140 (h:*label140)
   510 label *label136
   511 op add :buildBlockFromCfg.11:x .coreX 2
   512 op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
   513 set :buildBlock:x :buildBlockFromCfg.11:x
   514 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label140 (h:*label140)
   515 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   516 label *label140
   517 jump *label135 always
 
   520 multilabel *label139 (m:marker12)
   521 label *label138
   522 label *label135
+  523 set :buildBlock:block @kiln
+  524 set :buildBlock:copper 60
+  525 set :buildBlock:lead 30
+  526 set :buildBlock:graphite 30
+  527 set :buildBlock:silicon 0
+  528 set :buildBlock:titanium 0
+  529 set :buildBlock:metaglass 0
+  530 set :buildBlock:rotation 0
+  531 set :buildBlock:config null
+  532 setaddr :buildBlock*retaddr *label146 (h:*label146)
   533 label *label142
   534 op add :buildBlockFromCfg.12:x .coreX 3.5
   535 op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
   536 set :buildBlock:x :buildBlockFromCfg.12:x
   537 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label146 (h:*label146)
   538 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   539 label *label146
   540 jump *label141 always
 
   544 label *label144
   545 label *label141
   546 write null *tmp118 ".kiln"
+  547 set :buildBlock:block @junction
+  548 set :buildBlock:copper 3
+  549 set :buildBlock:lead 0
+  550 set :buildBlock:graphite 0
+  551 set :buildBlock:silicon 0
+  552 set :buildBlock:titanium 0
+  553 set :buildBlock:metaglass 0
+  554 set :buildBlock:rotation 0
+  555 set :buildBlock:config null
+  556 setaddr :buildBlock*retaddr *label152 (h:*label152)
   557 label *label148
   558 op add :buildBlockFromCfg.13:x .coreX 2
   559 op add :buildBlockFromCfg.13:y .coreY 1
-    * set :buildBlock:block @junction
   560 set :buildBlock:x :buildBlockFromCfg.13:x
   561 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label152 (h:*label152)
   562 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   563 label *label152
   564 jump *label147 always
 
   567 multilabel *label151 (m:marker14)
   568 label *label150
   569 label *label147
+  570 set :buildBlock:block @water-extractor
+  571 set :buildBlock:copper 30
+  572 set :buildBlock:lead 30
+  573 set :buildBlock:graphite 30
+  574 set :buildBlock:silicon 0
+  575 set :buildBlock:titanium 0
+  576 set :buildBlock:metaglass 30
+  577 set :buildBlock:rotation 0
+  578 set :buildBlock:config null
+  579 setaddr :buildBlock*retaddr *label158 (h:*label158)
   580 label *label154
   581 op add :buildBlockFromCfg.14:x .coreX -3.5
   582 op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
   583 set :buildBlock:x :buildBlockFromCfg.14:x
   584 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label158 (h:*label158)
   585 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   586 label *label158
   587 jump *label153 always
 
   590 multilabel *label157 (m:marker15)
   591 label *label156
   592 label *label153
+  593 set :buildBlock:block @steam-generator
+  594 set :buildBlock:copper 35
+  595 set :buildBlock:lead 40
+  596 set :buildBlock:graphite 25
+  597 set :buildBlock:silicon 30
+  598 set :buildBlock:titanium 0
+  599 set :buildBlock:metaglass 0
+  600 set :buildBlock:rotation 0
+  601 set :buildBlock:config null
+  602 setaddr :buildBlock*retaddr *label164 (h:*label164)
   603 label *label160
   604 op add :buildBlockFromCfg.15:x .coreX -3.5
   605 op add :buildBlockFromCfg.15:y .coreY 2.5
-    * set :buildBlock:block @steam-generator
   606 set :buildBlock:x :buildBlockFromCfg.15:x
   607 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label164 (h:*label164)
   608 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   609 label *label164
   610 set *tmp151 :buildBlock*retval
 
   615 label *label162
   616 label *label159
   617 write *tmp151 *tmp118 ".generator2"
+  618 set :buildBlock:block @sorter
+  619 set :buildBlock:copper 2
+  620 set :buildBlock:lead 2
+  621 set :buildBlock:graphite 0
+  622 set :buildBlock:silicon 0
+  623 set :buildBlock:titanium 0
+  624 set :buildBlock:metaglass 0
+  625 set :buildBlock:rotation 0
+  626 set :buildBlock:config @coal
+  627 setaddr :buildBlock*retaddr *label170 (h:*label170)
   628 label *label166
   629 op add :buildBlockFromCfg.16:x .coreX -4
   630 op add :buildBlockFromCfg.16:y .coreY 1
-    * set :buildBlock:block @sorter
   631 set :buildBlock:x :buildBlockFromCfg.16:x
   632 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label170 (h:*label170)
   633 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   634 label *label170
   635 jump *label165 always
 
   667 label *label0
   668 set .status3 "Moving..."
   669 label *label177
+  670 op sub *tmp162 :moveTo:radius 0.5
   671 label *label178
   672 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
   673 jump *label180 notEqual *tmp160 false
-    * op sub *tmp162 :moveTo:radius 0.5
   674 ucontrol approach :moveTo:x :moveTo:y *tmp162
   675 label *label179
   676 jump *label178 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   221 set :buildTitaniumDrillCfg:dy 0
   222 set :buildTitaniumDrillCfg:searches 0
   223 label *label64
-    * jump *label66 greaterThanEq :buildTitaniumDrillCfg:searches 5
+  224 label *label346
   225 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   226 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   227 set :buildTitaniumDrillCfg:best 0
 
   290 label *label69
   291 label *label65
   292 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
-    * jump *label64 always
+  293 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
   294 label *label66
   295 jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   296 op div *tmp91 :buildTitaniumDrillCfg:dx 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
   726 label *label193
   727 sensor *tmp172 @unit @firstItem
   728 jump *label194 notEqual *tmp172 :depositItems:item
+  729 set *tmp177 5
   730 op equal *tmp175 :depositItems:block .core
   731 op land *tmp176 :depositItems:fromMining *tmp175
-    * jump *label196 equal *tmp176 false
+  732 jump *label197 equal *tmp176 false
   733 set *tmp177 7
   734 jump *label197 always
-    * label *label196
-    * set *tmp177 5
   735 label *label197
   736 set :moveToBlock:block :depositItems:block
   737 set :moveToBlock:radius *tmp177
 
  1001 label *label281
  1002 sensor :supplyBlocks:coal .core @coal
  1003 sensor :supplyBlocks:sand .core @sand
-    * jump *label282 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
+ 1004 set *tmp264 @sand
+ 1005 jump *label283 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
  1006 set *tmp264 @coal
  1007 jump *label283 always
-    * label *label282
-    * set *tmp264 @sand
  1008 label *label283
  1009 set .status2 "Mining "
  1010 set .item2 *tmp264
 
  1063 label *label303
  1064 sensor :supplyBlocks:coal.1 .core @coal
  1065 sensor :supplyBlocks:sand.1 .core @sand
-    * jump *label304 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
+ 1066 set *tmp279 @sand
+ 1067 jump *label305 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
  1068 set *tmp279 @coal
  1069 jump *label305 always
-    * label *label304
-    * set *tmp279 @sand
  1070 label *label305
  1071 set .status2 "Mining "
  1072 set .item2 *tmp279
 
  1146 op add *tmp288 .metaglassTarget 30
  1147 write *tmp288 .processor ".kilnTarget"
  1148 label *label321
+ 1149 set .titaniumTrigger 100
  1150 sensor *tmp289 .core @titanium
  1151 op add *tmp290 .titaniumTarget 10
-    * jump *label322 greaterThanEq *tmp289 *tmp290
-    * set *tmp292 7
+ 1152 jump *label323 greaterThanEq *tmp289 *tmp290
+ 1153 set .titaniumTrigger 7
  1154 jump *label323 always
-    * label *label322
-    * set *tmp292 100
  1155 label *label323
-    * set .titaniumTrigger *tmp292
  1156 label *label324
  1157 sensor *tmp293 .core @copper
  1158 op lessThan *tmp294 *tmp293 .copperTarget

Modifications by Unroll iteration loop at CoreBuilder.mnd:321:5 (-2 instructions):
 
  1104 set .titaniumTarget :meetTarget:titanium
  1105 set .metaglassTarget :meetTarget:metaglass
  1106 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp280 *label314
-    * jump *label311 always
-    * multilabel *label314 (m:marker18)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp280 *label315
-    * jump *label311 always
-    * multilabel *label315 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp280 *label316
-    * jump *label311 always
-    * multilabel *label316 (m:marker18)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp280 *label317
-    * jump *label311 always
-    * multilabel *label317 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp280 *label318
-    * jump *label311 always
-    * multilabel *label318 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp280 *label319
-    * label *label311
-    * op sign *tmp281 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label312
-    * multijump *tmp280 0 0 (m:marker18)
-    * multilabel *label319 (m:marker18)
-    * label *label313
+ 1107 set :meetTarget:t :meetTarget:copper
+ 1108 label *label347
+ 1109 op sign *tmp281 :meetTarget:t
+ 1110 op add :meetTarget:count :meetTarget:count *tmp281
+ 1111 label *label348
+ 1112 set :meetTarget:t :meetTarget:lead
+ 1113 label *label351
+ 1114 op sign *tmp281 :meetTarget:t
+ 1115 op add :meetTarget:count :meetTarget:count *tmp281
+ 1116 label *label352
+ 1117 set :meetTarget:t :meetTarget:graphite
+ 1118 label *label355
+ 1119 op sign *tmp281 :meetTarget:t
+ 1120 op add :meetTarget:count :meetTarget:count *tmp281
+ 1121 label *label356
+ 1122 set :meetTarget:t :meetTarget:silicon
+ 1123 label *label359
+ 1124 op sign *tmp281 :meetTarget:t
+ 1125 op add :meetTarget:count :meetTarget:count *tmp281
+ 1126 label *label360
+ 1127 set :meetTarget:t :meetTarget:titanium
+ 1128 label *label363
+ 1129 op sign *tmp281 :meetTarget:t
+ 1130 op add :meetTarget:count :meetTarget:count *tmp281
+ 1131 label *label364
+ 1132 set :meetTarget:t :meetTarget:metaglass
+ 1133 label *label367
+ 1134 op sign *tmp281 :meetTarget:t
+ 1135 op add :meetTarget:count :meetTarget:count *tmp281
+ 1136 label *label368
+ 1137 label *label313
  1138 set .totalTargets :meetTarget:count
  1139 jump *label320 notEqual .processor null
  1140 op max .updatedGraphiteTarget 10 .graphiteTarget

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1106 set :meetTarget:count 0
  1107 set :meetTarget:t :meetTarget:copper
  1108 label *label347
-    * op sign *tmp281 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp281
+ 1109 op sign *tmp281 :meetTarget:copper
+ 1110 op add :meetTarget:count 0 *tmp281
  1111 label *label348
  1112 set :meetTarget:t :meetTarget:lead
  1113 label *label351
-    * op sign *tmp281 :meetTarget:t
+ 1114 op sign *tmp281 :meetTarget:lead
  1115 op add :meetTarget:count :meetTarget:count *tmp281
  1116 label *label352
  1117 set :meetTarget:t :meetTarget:graphite
  1118 label *label355
-    * op sign *tmp281 :meetTarget:t
+ 1119 op sign *tmp281 :meetTarget:graphite
  1120 op add :meetTarget:count :meetTarget:count *tmp281
  1121 label *label356
  1122 set :meetTarget:t :meetTarget:silicon
  1123 label *label359
-    * op sign *tmp281 :meetTarget:t
+ 1124 op sign *tmp281 :meetTarget:silicon
  1125 op add :meetTarget:count :meetTarget:count *tmp281
  1126 label *label360
  1127 set :meetTarget:t :meetTarget:titanium
  1128 label *label363
-    * op sign *tmp281 :meetTarget:t
+ 1129 op sign *tmp281 :meetTarget:titanium
  1130 op add :meetTarget:count :meetTarget:count *tmp281
  1131 label *label364
  1132 set :meetTarget:t :meetTarget:metaglass
  1133 label *label367
-    * op sign *tmp281 :meetTarget:t
+ 1134 op sign *tmp281 :meetTarget:metaglass
  1135 op add :meetTarget:count :meetTarget:count *tmp281
  1136 label *label368
  1137 label *label313

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1103 set .siliconTarget :meetTarget:silicon
  1104 set .titaniumTarget :meetTarget:titanium
  1105 set .metaglassTarget :meetTarget:metaglass
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1106 label *label347
  1107 op sign *tmp281 :meetTarget:copper
  1108 op add :meetTarget:count 0 *tmp281
  1109 label *label348
-    * set :meetTarget:t :meetTarget:lead
  1110 label *label351
  1111 op sign *tmp281 :meetTarget:lead
  1112 op add :meetTarget:count :meetTarget:count *tmp281
  1113 label *label352
-    * set :meetTarget:t :meetTarget:graphite
  1114 label *label355
  1115 op sign *tmp281 :meetTarget:graphite
  1116 op add :meetTarget:count :meetTarget:count *tmp281
  1117 label *label356
-    * set :meetTarget:t :meetTarget:silicon
  1118 label *label359
  1119 op sign *tmp281 :meetTarget:silicon
  1120 op add :meetTarget:count :meetTarget:count *tmp281
  1121 label *label360
-    * set :meetTarget:t :meetTarget:titanium
  1122 label *label363
  1123 op sign *tmp281 :meetTarget:titanium
  1124 op add :meetTarget:count :meetTarget:count *tmp281
  1125 label *label364
-    * set :meetTarget:t :meetTarget:metaglass
  1126 label *label367
  1127 op sign *tmp281 :meetTarget:metaglass
  1128 op add :meetTarget:count :meetTarget:count *tmp281

Modifications by Replicate loop condition at CoreBuilder.mnd:124:5 (+1 instructions):
 
   671 label *label178
   672 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
   673 jump *label180 notEqual *tmp160 false
+  674 label *label372
   675 ucontrol approach :moveTo:x :moveTo:y *tmp162
   676 label *label179
-    * jump *label178 always
+  677 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
+  678 jump *label372 equal *tmp160 false
   679 label *label180
   680 label *label176
   681 return :moveTo*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:142:5 (+1 instructions):
 
   704 label *label187
   705 sensor *tmp168 @unit @firstItem
   706 jump *label189 equal *tmp168 null
+  707 label *label373
   708 ucontrol itemDrop @air 1000
   709 label *label188
-    * jump *label187 always
+  710 sensor *tmp168 @unit @firstItem
+  711 jump *label373 notEqual *tmp168 null
   712 label *label189
   713 label *label183
   714 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:166:9 (+1 instructions):
 
   759 label *label204
   760 sensor *tmp184 @unit @firstItem
   761 jump *label206 equal *tmp184 null
+  762 label *label374
   763 ucontrol itemDrop @air 1000
   764 label *label205
-    * jump *label204 always
+  765 sensor *tmp184 @unit @firstItem
+  766 jump *label374 notEqual *tmp184 null
   767 label *label206
   768 label *label195
   769 set .transportTarget 0

Modifications by Replicate loop condition at CoreBuilder.mnd:334:5 (+21 instructions):
 
  1177 op lessThan *tmp312 *tmp311 .metaglassTarget
  1178 op or *tmp314 *tmp309 *tmp312
  1179 jump *label326 equal *tmp314 false
+ 1180 label *label375
  1181 setaddr :supplyBlocks*retaddr *label327 (h:*label327)
  1182 call *label9 *invalid :supplyBlocks*retval (m:*label327) (h:*label327)
  1183 label *label327
  1184 label *label325
-    * jump *label324 always
+ 1185 sensor *tmp293 .core @copper
+ 1186 op lessThan *tmp294 *tmp293 .copperTarget
+ 1187 sensor *tmp295 .core @lead
+ 1188 op lessThan *tmp296 *tmp295 .leadTarget
+ 1189 op or *tmp298 *tmp294 *tmp296
+ 1190 op notEqual *tmp297 *tmp298 false
+ 1191 sensor *tmp299 .core @graphite
+ 1192 op lessThan *tmp300 *tmp299 .graphiteTarget
+ 1193 op or *tmp302 *tmp297 *tmp300
+ 1194 op notEqual *tmp301 *tmp302 false
+ 1195 sensor *tmp303 .core @silicon
+ 1196 op lessThan *tmp304 *tmp303 .siliconTarget
+ 1197 op or *tmp306 *tmp301 *tmp304
+ 1198 op notEqual *tmp305 *tmp306 false
+ 1199 sensor *tmp307 .core @titanium
+ 1200 op lessThan *tmp308 *tmp307 .titaniumTarget
+ 1201 op or *tmp310 *tmp305 *tmp308
+ 1202 op notEqual *tmp309 *tmp310 false
+ 1203 sensor *tmp311 .core @metaglass
+ 1204 op lessThan *tmp312 *tmp311 .metaglassTarget
+ 1205 op or *tmp314 *tmp309 *tmp312
+ 1206 jump *label375 notEqual *tmp314 false
  1207 label *label326
  1208 label *label310
  1209 return :meetTarget*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   735 op land *tmp176 :depositItems:fromMining *tmp175
   736 jump *label197 equal *tmp176 false
   737 set *tmp177 7
-    * jump *label197 always
   738 label *label197
   739 set :moveToBlock:block :depositItems:block
   740 set :moveToBlock:radius *tmp177
 
  1009 set *tmp264 @sand
  1010 jump *label283 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
  1011 set *tmp264 @coal
-    * jump *label283 always
  1012 label *label283
  1013 set .status2 "Mining "
  1014 set .item2 *tmp264
 
  1070 set *tmp279 @sand
  1071 jump *label305 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
  1072 set *tmp279 @coal
-    * jump *label305 always
  1073 label *label305
  1074 set .status2 "Mining "
  1075 set .item2 *tmp279
 
  1149 op add *tmp290 .titaniumTarget 10
  1150 jump *label323 greaterThanEq *tmp289 *tmp290
  1151 set .titaniumTrigger 7
-    * jump *label323 always
  1152 label *label323
  1153 label *label324
  1154 sensor *tmp293 .core @copper
 
  1248 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1249 label *label340
  1250 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label328 always
  1251 label *label328
  1252 return :buildBlockAt*retaddr
  1253 end
 
  1272 call *label11 *invalid :buildBlockAt*retval (m:*label345) (h:*label345)
  1273 label *label345
  1274 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label343 always
  1275 label *label343
  1276 return :buildBlock*retaddr
  1277 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label29 (h:*label29)
    67 label *label25
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   68 set :buildBlockFromCfg.1:x .coreX
    69 op add :buildBlockFromCfg.1:y .coreY 4
    70 set :buildBlock:x :buildBlockFromCfg.1:x
    71 set :buildBlock:y :buildBlockFromCfg.1:y
 
    90 set :buildBlock:config null
    91 setaddr :buildBlock*retaddr *label35 (h:*label35)
    92 label *label31
-    * op add :buildBlockFromCfg.2:x .coreX 0
+   93 set :buildBlockFromCfg.2:x .coreX
    94 op add :buildBlockFromCfg.2:y .coreY 3
    95 set :buildBlock:x :buildBlockFromCfg.2:x
    96 set :buildBlock:y :buildBlockFromCfg.2:y
 
   247 set :checkOre:count 0
   248 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   249 jump *label75 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  250 set :checkOre:count 1
   251 label *label75
   252 label *label76
   253 label *label74
 
   356 set :buildBlock:config null
   357 setaddr :buildBlock*retaddr *label104 (h:*label104)
   358 label *label100
-    * op add :buildBlockFromCfg.5:x .coreX 0
+  359 set :buildBlockFromCfg.5:x .coreX
   360 op add :buildBlockFromCfg.5:y .coreY 2
   361 set :buildBlock:x :buildBlockFromCfg.5:x
   362 set :buildBlock:y :buildBlockFromCfg.5:y
 
   509 setaddr :buildBlock*retaddr *label140 (h:*label140)
   510 label *label136
   511 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  512 set :buildBlockFromCfg.11:y .coreY
   513 set :buildBlock:x :buildBlockFromCfg.11:x
   514 set :buildBlock:y :buildBlockFromCfg.11:y
   515 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
 
  1108 set .metaglassTarget :meetTarget:metaglass
  1109 label *label347
  1110 op sign *tmp281 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp281
+ 1111 set :meetTarget:count *tmp281
  1112 label *label348
  1113 label *label351
  1114 op sign *tmp281 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-35 instructions):
 
    40 set :buildBlock:config null
    41 setaddr :buildBlock*retaddr *label23 (h:*label23)
    42 label *label19
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
+   43 op add :buildBlock:x .coreX -1.5
+   44 op add :buildBlock:y .coreY 2.5
    45 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    46 label *label23
    47 set *tmp16 :buildBlock*retval
 
    63 set :buildBlock:config null
    64 setaddr :buildBlock*retaddr *label29 (h:*label29)
    65 label *label25
-    * set :buildBlockFromCfg.1:x .coreX
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
+   66 set :buildBlock:x .coreX
+   67 op add :buildBlock:y .coreY 4
    68 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    69 label *label29
    70 set *tmp20 :buildBlock*retval
 
    86 set :buildBlock:config null
    87 setaddr :buildBlock*retaddr *label35 (h:*label35)
    88 label *label31
-    * set :buildBlockFromCfg.2:x .coreX
-    * op add :buildBlockFromCfg.2:y .coreY 3
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
+   89 set :buildBlock:x .coreX
+   90 op add :buildBlock:y .coreY 3
    91 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    92 label *label35
    93 set *tmp24 :buildBlock*retval
 
   109 set :buildBlock:config null
   110 setaddr :buildBlock*retaddr *label41 (h:*label41)
   111 label *label37
-    * op add :buildBlockFromCfg.3:x .coreX -1
-    * op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.3:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
+  112 op add :buildBlock:x .coreX -1
+  113 op add :buildBlock:y .coreY 4
   114 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   115 label *label41
   116 jump *label36 always
 
   130 set :buildBlock:config null
   131 setaddr :buildBlock*retaddr *label47 (h:*label47)
   132 label *label43
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  133 op add :buildBlock:x .coreX 1.5
+  134 op add :buildBlock:y .coreY 2.5
   135 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   136 label *label47
   137 set *tmp32 :buildBlock*retval
 
   346 set :buildBlock:config null
   347 setaddr :buildBlock*retaddr *label104 (h:*label104)
   348 label *label100
-    * set :buildBlockFromCfg.5:x .coreX
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:x :buildBlockFromCfg.5:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
+  349 set :buildBlock:x .coreX
+  350 op add :buildBlock:y .coreY 2
   351 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   352 label *label104
   353 set *tmp110 :buildBlock*retval
 
   369 set :buildBlock:config null
   370 setaddr :buildBlock*retaddr *label110 (h:*label110)
   371 label *label106
-    * op add :buildBlockFromCfg.6:x .coreX -1
-    * op add :buildBlockFromCfg.6:y .coreY -2
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  372 op add :buildBlock:x .coreX -1
+  373 op add :buildBlock:y .coreY -2
   374 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   375 label *label110
   376 jump *label105 always
 
   389 set :buildBlock:rotation 0
   390 setaddr :buildBlock*retaddr *label116 (h:*label116)
   391 label *label112
-    * op add :buildBlockFromCfg.7:x .coreX 1
-    * op add :buildBlockFromCfg.7:y .coreY 4
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
+  392 op add :buildBlock:x .coreX 1
+  393 op add :buildBlock:y .coreY 4
   394 set :buildBlock:config processor1
   395 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   396 label *label116
 
   418 set :buildBlock:config @mono
   419 setaddr :buildBlock*retaddr *label122 (h:*label122)
   420 label *label118
-    * op add :buildBlockFromCfg.8:x .coreX -4
-    * op add :buildBlockFromCfg.8:y .coreY -1
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  421 op add :buildBlock:x .coreX -4
+  422 op add :buildBlock:y .coreY -1
   423 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   424 label *label122
   425 set *tmp123 :buildBlock*retval
 
   441 set :buildBlock:config null
   442 setaddr :buildBlock*retaddr *label128 (h:*label128)
   443 label *label124
-    * op add :buildBlockFromCfg.9:x .coreX -2
-    * op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  444 op add :buildBlock:x .coreX -2
+  445 op add :buildBlock:y .coreY 1
   446 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   447 label *label128
   448 set *tmp127 :buildBlock*retval
 
   464 set :buildBlock:config null
   465 setaddr :buildBlock*retaddr *label134 (h:*label134)
   466 label *label130
-    * op add :buildBlockFromCfg.10:x .coreX -3
-    * op add :buildBlockFromCfg.10:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  467 op add :buildBlock:x .coreX -3
+  468 op add :buildBlock:y .coreY 1
   469 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   470 label *label134
   471 jump *label129 always
 
   486 set :buildBlock:config null
   487 setaddr :buildBlock*retaddr *label140 (h:*label140)
   488 label *label136
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  489 op add :buildBlock:x .coreX 2
+  490 set :buildBlock:y .coreY
   491 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   492 label *label140
   493 jump *label135 always
 
   507 set :buildBlock:config null
   508 setaddr :buildBlock*retaddr *label146 (h:*label146)
   509 label *label142
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
+  510 op add :buildBlock:x .coreX 3.5
+  511 op add :buildBlock:y .coreY 0.5
   512 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   513 label *label146
   514 jump *label141 always
 
   529 set :buildBlock:config null
   530 setaddr :buildBlock*retaddr *label152 (h:*label152)
   531 label *label148
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  532 op add :buildBlock:x .coreX 2
+  533 op add :buildBlock:y .coreY 1
   534 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   535 label *label152
   536 jump *label147 always
 
   550 set :buildBlock:config null
   551 setaddr :buildBlock*retaddr *label158 (h:*label158)
   552 label *label154
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
+  553 op add :buildBlock:x .coreX -3.5
+  554 op add :buildBlock:y .coreY 4.5
   555 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   556 label *label158
   557 jump *label153 always
 
   571 set :buildBlock:config null
   572 setaddr :buildBlock*retaddr *label164 (h:*label164)
   573 label *label160
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  574 op add :buildBlock:x .coreX -3.5
+  575 op add :buildBlock:y .coreY 2.5
   576 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   577 label *label164
   578 set *tmp151 :buildBlock*retval
 
   594 set :buildBlock:config @coal
   595 setaddr :buildBlock*retaddr *label170 (h:*label170)
   596 label *label166
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  597 op add :buildBlock:x .coreX -4
+  598 op add :buildBlock:y .coreY 1
   599 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   600 label *label170
   601 jump *label165 always
 
  1073 set .titaniumTarget :meetTarget:titanium
  1074 set .metaglassTarget :meetTarget:metaglass
  1075 label *label347
-    * op sign *tmp281 :meetTarget:copper
-    * set :meetTarget:count *tmp281
+ 1076 op sign :meetTarget:count :meetTarget:copper
  1077 label *label348
  1078 label *label351
  1079 op sign *tmp281 :meetTarget:lead

Modifications by Unroll iteration loop at CoreBuilder.mnd:435:13 (+64 instructions):
 
   215 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   216 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   217 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp56 *label70
-    * jump *label67 always
-    * multilabel *label70 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp56 *label71
-    * jump *label67 always
-    * multilabel *label71 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp56 *label72
-    * jump *label67 always
-    * multilabel *label72 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp56 *label73
-    * label *label67
-    * set :checkOre:count 0
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
-    * jump *label75 notEqual :checkOre:floor @ore-titanium
-    * set :checkOre:count 1
-    * label *label75
-    * label *label76
-    * label *label74
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
-    * jump *label78 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label78
-    * label *label79
-    * label *label77
-    * op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
-    * jump *label81 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label81
-    * label *label82
-    * label *label80
-    * set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
-    * jump *label84 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :checkOre.2:count 1
-    * label *label84
-    * label *label85
-    * label *label83
-    * jump *label86 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label88 lessThan :checkOre.3:count 4
-    * jump *label66 always
-    * label *label88
-    * label *label89
-    * label *label86
-    * label *label87
-    * label *label68
-    * multijump *tmp56 0 0 (m:marker5)
-    * multilabel *label73 (m:marker5)
-    * label *label69
+  218 set :buildTitaniumDrillCfg:xx 1
+  219 set :buildTitaniumDrillCfg:yy 1
+  220 label *label376
+  221 set :checkOre:count 0
+  222 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  223 jump *label377 notEqual :checkOre:floor @ore-titanium
+  224 set :checkOre:count 1
+  225 label *label377
+  226 label *label378
+  227 label *label379
+  228 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  229 set :checkOre.1:count :checkOre:count
+  230 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  231 jump *label380 notEqual :checkOre.1:floor @ore-titanium
+  232 op add :checkOre.1:count :checkOre:count 1
+  233 label *label380
+  234 label *label381
+  235 label *label382
+  236 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  237 set :checkOre.2:count :checkOre.1:count
+  238 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
+  239 jump *label383 notEqual :checkOre.2:floor @ore-titanium
+  240 op add :checkOre.2:count :checkOre.1:count 1
+  241 label *label383
+  242 label *label384
+  243 label *label385
+  244 set :checkOre.3:count :checkOre.2:count
+  245 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
+  246 jump *label386 notEqual :checkOre.3:floor @ore-titanium
+  247 op add :checkOre.3:count :checkOre.2:count 1
+  248 label *label386
+  249 label *label387
+  250 label *label388
+  251 jump *label391 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  252 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  253 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  254 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  255 jump *label389 lessThan :checkOre.3:count 4
+  256 jump *label66 always
+  257 label *label389
+  258 label *label390
+  259 label *label391
+  260 label *label392
+  261 label *label393
+  262 set :buildTitaniumDrillCfg:xx 1
+  263 set :buildTitaniumDrillCfg:yy -1
+  264 label *label396
+  265 set :checkOre:count 0
+  266 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  267 jump *label397 notEqual :checkOre:floor @ore-titanium
+  268 set :checkOre:count 1
+  269 label *label397
+  270 label *label398
+  271 label *label399
+  272 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  273 set :checkOre.1:count :checkOre:count
+  274 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  275 jump *label400 notEqual :checkOre.1:floor @ore-titanium
+  276 op add :checkOre.1:count :checkOre:count 1
+  277 label *label400
+  278 label *label401
+  279 label *label402
+  280 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  281 set :checkOre.2:count :checkOre.1:count
+  282 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
+  283 jump *label403 notEqual :checkOre.2:floor @ore-titanium
+  284 op add :checkOre.2:count :checkOre.1:count 1
+  285 label *label403
+  286 label *label404
+  287 label *label405
+  288 set :checkOre.3:count :checkOre.2:count
+  289 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
+  290 jump *label406 notEqual :checkOre.3:floor @ore-titanium
+  291 op add :checkOre.3:count :checkOre.2:count 1
+  292 label *label406
+  293 label *label407
+  294 label *label408
+  295 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  296 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  297 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  298 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  299 jump *label409 lessThan :checkOre.3:count 4
+  300 jump *label66 always
+  301 label *label409
+  302 label *label410
+  303 label *label411
+  304 label *label412
+  305 label *label413
+  306 set :buildTitaniumDrillCfg:xx -1
+  307 set :buildTitaniumDrillCfg:yy 1
+  308 label *label416
+  309 set :checkOre:count 0
+  310 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  311 jump *label417 notEqual :checkOre:floor @ore-titanium
+  312 set :checkOre:count 1
+  313 label *label417
+  314 label *label418
+  315 label *label419
+  316 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  317 set :checkOre.1:count :checkOre:count
+  318 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  319 jump *label420 notEqual :checkOre.1:floor @ore-titanium
+  320 op add :checkOre.1:count :checkOre:count 1
+  321 label *label420
+  322 label *label421
+  323 label *label422
+  324 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  325 set :checkOre.2:count :checkOre.1:count
+  326 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
+  327 jump *label423 notEqual :checkOre.2:floor @ore-titanium
+  328 op add :checkOre.2:count :checkOre.1:count 1
+  329 label *label423
+  330 label *label424
+  331 label *label425
+  332 set :checkOre.3:count :checkOre.2:count
+  333 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
+  334 jump *label426 notEqual :checkOre.3:floor @ore-titanium
+  335 op add :checkOre.3:count :checkOre.2:count 1
+  336 label *label426
+  337 label *label427
+  338 label *label428
+  339 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  340 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  341 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  342 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  343 jump *label429 lessThan :checkOre.3:count 4
+  344 jump *label66 always
+  345 label *label429
+  346 label *label430
+  347 label *label431
+  348 label *label432
+  349 label *label433
+  350 set :buildTitaniumDrillCfg:xx -1
+  351 set :buildTitaniumDrillCfg:yy -1
+  352 label *label436
+  353 set :checkOre:count 0
+  354 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  355 jump *label437 notEqual :checkOre:floor @ore-titanium
+  356 set :checkOre:count 1
+  357 label *label437
+  358 label *label438
+  359 label *label439
+  360 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  361 set :checkOre.1:count :checkOre:count
+  362 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  363 jump *label440 notEqual :checkOre.1:floor @ore-titanium
+  364 op add :checkOre.1:count :checkOre:count 1
+  365 label *label440
+  366 label *label441
+  367 label *label442
+  368 op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  369 set :checkOre.2:count :checkOre.1:count
+  370 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
+  371 jump *label443 notEqual :checkOre.2:floor @ore-titanium
+  372 op add :checkOre.2:count :checkOre.1:count 1
+  373 label *label443
+  374 label *label444
+  375 label *label445
+  376 set :checkOre.3:count :checkOre.2:count
+  377 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
+  378 jump *label446 notEqual :checkOre.3:floor @ore-titanium
+  379 op add :checkOre.3:count :checkOre.2:count 1
+  380 label *label446
+  381 label *label447
+  382 label *label448
+  383 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  384 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  385 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  386 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  387 jump *label449 lessThan :checkOre.3:count 4
+  388 jump *label66 always
+  389 label *label449
+  390 label *label450
+  391 label *label451
+  392 label *label452
+  393 label *label453
+  394 label *label69
   395 label *label65
   396 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   397 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   225 label *label377
   226 label *label378
   227 label *label379
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  228 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   229 set :checkOre.1:count :checkOre:count
   230 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   231 jump *label380 notEqual :checkOre.1:floor @ore-titanium
 
   233 label *label380
   234 label *label381
   235 label *label382
-    * op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  236 op add *tmp70 :buildTitaniumDrillCfg:ay 1
   237 set :checkOre.2:count :checkOre.1:count
   238 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   239 jump *label383 notEqual :checkOre.2:floor @ore-titanium
 
   248 label *label386
   249 label *label387
   250 label *label388
-    * jump *label391 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  251 jump *label391 lessThanEq :checkOre.3:count 0
+  252 set :buildTitaniumDrillCfg:dx 1
+  253 set :buildTitaniumDrillCfg:dy 1
   254 set :buildTitaniumDrillCfg:best :checkOre.3:count
   255 jump *label389 lessThan :checkOre.3:count 4
   256 jump *label66 always
 
   269 label *label397
   270 label *label398
   271 label *label399
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  272 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   273 set :checkOre.1:count :checkOre:count
   274 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   275 jump *label400 notEqual :checkOre.1:floor @ore-titanium
 
   277 label *label400
   278 label *label401
   279 label *label402
-    * op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  280 op add *tmp70 :buildTitaniumDrillCfg:ay -1
   281 set :checkOre.2:count :checkOre.1:count
   282 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   283 jump *label403 notEqual :checkOre.2:floor @ore-titanium
 
   293 label *label407
   294 label *label408
   295 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  296 set :buildTitaniumDrillCfg:dx 1
+  297 set :buildTitaniumDrillCfg:dy -1
   298 set :buildTitaniumDrillCfg:best :checkOre.3:count
   299 jump *label409 lessThan :checkOre.3:count 4
   300 jump *label66 always
 
   313 label *label417
   314 label *label418
   315 label *label419
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  316 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   317 set :checkOre.1:count :checkOre:count
   318 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   319 jump *label420 notEqual :checkOre.1:floor @ore-titanium
 
   321 label *label420
   322 label *label421
   323 label *label422
-    * op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  324 op add *tmp70 :buildTitaniumDrillCfg:ay 1
   325 set :checkOre.2:count :checkOre.1:count
   326 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   327 jump *label423 notEqual :checkOre.2:floor @ore-titanium
 
   337 label *label427
   338 label *label428
   339 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  340 set :buildTitaniumDrillCfg:dx -1
+  341 set :buildTitaniumDrillCfg:dy 1
   342 set :buildTitaniumDrillCfg:best :checkOre.3:count
   343 jump *label429 lessThan :checkOre.3:count 4
   344 jump *label66 always
 
   357 label *label437
   358 label *label438
   359 label *label439
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  360 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   361 set :checkOre.1:count :checkOre:count
   362 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   363 jump *label440 notEqual :checkOre.1:floor @ore-titanium
 
   365 label *label440
   366 label *label441
   367 label *label442
-    * op add *tmp70 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  368 op add *tmp70 :buildTitaniumDrillCfg:ay -1
   369 set :checkOre.2:count :checkOre.1:count
   370 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   371 jump *label443 notEqual :checkOre.2:floor @ore-titanium
 
   381 label *label447
   382 label *label448
   383 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  384 set :buildTitaniumDrillCfg:dx -1
+  385 set :buildTitaniumDrillCfg:dy -1
   386 set :buildTitaniumDrillCfg:best :checkOre.3:count
   387 jump *label449 lessThan :checkOre.3:count 4
   388 jump *label66 always

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-8 instructions):
 
   215 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   216 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   217 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   218 label *label376
   219 set :checkOre:count 0
   220 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   257 label *label391
   258 label *label392
   259 label *label393
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   260 label *label396
   261 set :checkOre:count 0
   262 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   299 label *label411
   300 label *label412
   301 label *label413
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   302 label *label416
   303 set :checkOre:count 0
   304 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   341 label *label431
   342 label *label432
   343 label *label433
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   344 label *label436
   345 set :checkOre:count 0
   346 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    26 label *label15
    27 ubind @poly
    28 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label16
    29 jump *label15 equal .core null
-    * label *label17
    30 set :buildBlock:block @graphite-press
    31 set :buildBlock:copper 75
    32 set :buildBlock:lead 30
 
    37 set :buildBlock:rotation 0
    38 set :buildBlock:config null
    39 setaddr :buildBlock*retaddr *label23 (h:*label23)
-    * label *label19
    40 op add :buildBlock:x .coreX -1.5
    41 op add :buildBlock:y .coreY 2.5
    42 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    43 label *label23
    44 set *tmp16 :buildBlock*retval
    45 jump *label18 always
-    * label *label20
    46 multijump *tmp17 0 0 (m:marker0)
    47 multilabel *label22 (m:marker0)
-    * label *label21
    48 label *label18
    49 set .press *tmp16
    50 set :buildBlock:block @battery
 
    57 set :buildBlock:rotation 0
    58 set :buildBlock:config null
    59 setaddr :buildBlock*retaddr *label29 (h:*label29)
-    * label *label25
    60 set :buildBlock:x .coreX
    61 op add :buildBlock:y .coreY 4
    62 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    63 label *label29
    64 set *tmp20 :buildBlock*retval
    65 jump *label24 always
-    * label *label26
    66 multijump *tmp21 0 0 (m:marker1)
    67 multilabel *label28 (m:marker1)
-    * label *label27
    68 label *label24
    69 set .battery *tmp20
    70 set :buildBlock:block @combustion-generator
 
    77 set :buildBlock:rotation 0
    78 set :buildBlock:config null
    79 setaddr :buildBlock*retaddr *label35 (h:*label35)
-    * label *label31
    80 set :buildBlock:x .coreX
    81 op add :buildBlock:y .coreY 3
    82 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    83 label *label35
    84 set *tmp24 :buildBlock*retval
    85 jump *label30 always
-    * label *label32
    86 multijump *tmp25 0 0 (m:marker2)
    87 multilabel *label34 (m:marker2)
-    * label *label33
    88 label *label30
    89 set .generator *tmp24
    90 set :buildBlock:block @battery
 
    97 set :buildBlock:rotation 0
    98 set :buildBlock:config null
    99 setaddr :buildBlock*retaddr *label41 (h:*label41)
-    * label *label37
   100 op add :buildBlock:x .coreX -1
   101 op add :buildBlock:y .coreY 4
   102 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
   103 label *label41
   104 jump *label36 always
-    * label *label38
   105 multijump *tmp29 0 0 (m:marker3)
   106 multilabel *label40 (m:marker3)
-    * label *label39
   107 label *label36
   108 set :buildBlock:block @silicon-smelter
   109 set :buildBlock:copper 30
 
   115 set :buildBlock:rotation 0
   116 set :buildBlock:config null
   117 setaddr :buildBlock*retaddr *label47 (h:*label47)
-    * label *label43
   118 op add :buildBlock:x .coreX 1.5
   119 op add :buildBlock:y .coreY 2.5
   120 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   121 label *label47
   122 set *tmp32 :buildBlock*retval
   123 jump *label42 always
-    * label *label44
   124 multijump *tmp33 0 0 (m:marker4)
   125 multilabel *label46 (m:marker4)
-    * label *label45
   126 label *label42
   127 set .smelter *tmp32
   128 set :buildTitaniumDrillCfg:distance 32
 
   159 jump *label59 equal *tmp45 false
   160 jump *label57 always
   161 label *label59
-    * label *label60
   162 sensor *tmp48 @unit @x
   163 op sin *tmp49 :locateOreAway:angle
   164 op mul *tmp50 *tmp49 :locateOreAway:distance
 
   174 label *label62
   175 op add :locateOreAway:distance :locateOreAway:distance 4
   176 op add :locateOreAway:angle :locateOreAway:angle 45
-    * label *label61
-    * label *label56
   177 jump *label55 always
   178 label *label57
-    * label *label54
   179 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   180 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   181 set :moveTo.1:x :locateOreAway:x
 
   189 set :buildTitaniumDrillCfg:dx 0
   190 set :buildTitaniumDrillCfg:dy 0
   191 set :buildTitaniumDrillCfg:searches 0
-    * label *label64
   192 label *label346
   193 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   194 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   195 set :buildTitaniumDrillCfg:best 0
-    * label *label376
   196 set :checkOre:count 0
   197 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   198 jump *label377 notEqual :checkOre:floor @ore-titanium
   199 set :checkOre:count 1
   200 label *label377
-    * label *label378
-    * label *label379
   201 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   202 set :checkOre.1:count :checkOre:count
   203 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   204 jump *label380 notEqual :checkOre.1:floor @ore-titanium
   205 op add :checkOre.1:count :checkOre:count 1
   206 label *label380
-    * label *label381
-    * label *label382
   207 op add *tmp70 :buildTitaniumDrillCfg:ay 1
   208 set :checkOre.2:count :checkOre.1:count
   209 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   210 jump *label383 notEqual :checkOre.2:floor @ore-titanium
   211 op add :checkOre.2:count :checkOre.1:count 1
   212 label *label383
-    * label *label384
-    * label *label385
   213 set :checkOre.3:count :checkOre.2:count
   214 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   215 jump *label386 notEqual :checkOre.3:floor @ore-titanium
   216 op add :checkOre.3:count :checkOre.2:count 1
   217 label *label386
-    * label *label387
-    * label *label388
   218 jump *label391 lessThanEq :checkOre.3:count 0
   219 set :buildTitaniumDrillCfg:dx 1
   220 set :buildTitaniumDrillCfg:dy 1
 
   222 jump *label389 lessThan :checkOre.3:count 4
   223 jump *label66 always
   224 label *label389
-    * label *label390
   225 label *label391
-    * label *label392
-    * label *label393
-    * label *label396
   226 set :checkOre:count 0
   227 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   228 jump *label397 notEqual :checkOre:floor @ore-titanium
   229 set :checkOre:count 1
   230 label *label397
-    * label *label398
-    * label *label399
   231 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   232 set :checkOre.1:count :checkOre:count
   233 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   234 jump *label400 notEqual :checkOre.1:floor @ore-titanium
   235 op add :checkOre.1:count :checkOre:count 1
   236 label *label400
-    * label *label401
-    * label *label402
   237 op add *tmp70 :buildTitaniumDrillCfg:ay -1
   238 set :checkOre.2:count :checkOre.1:count
   239 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   240 jump *label403 notEqual :checkOre.2:floor @ore-titanium
   241 op add :checkOre.2:count :checkOre.1:count 1
   242 label *label403
-    * label *label404
-    * label *label405
   243 set :checkOre.3:count :checkOre.2:count
   244 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   245 jump *label406 notEqual :checkOre.3:floor @ore-titanium
   246 op add :checkOre.3:count :checkOre.2:count 1
   247 label *label406
-    * label *label407
-    * label *label408
   248 jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   249 set :buildTitaniumDrillCfg:dx 1
   250 set :buildTitaniumDrillCfg:dy -1
 
   252 jump *label409 lessThan :checkOre.3:count 4
   253 jump *label66 always
   254 label *label409
-    * label *label410
   255 label *label411
-    * label *label412
-    * label *label413
-    * label *label416
   256 set :checkOre:count 0
   257 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   258 jump *label417 notEqual :checkOre:floor @ore-titanium
   259 set :checkOre:count 1
   260 label *label417
-    * label *label418
-    * label *label419
   261 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   262 set :checkOre.1:count :checkOre:count
   263 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   264 jump *label420 notEqual :checkOre.1:floor @ore-titanium
   265 op add :checkOre.1:count :checkOre:count 1
   266 label *label420
-    * label *label421
-    * label *label422
   267 op add *tmp70 :buildTitaniumDrillCfg:ay 1
   268 set :checkOre.2:count :checkOre.1:count
   269 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   270 jump *label423 notEqual :checkOre.2:floor @ore-titanium
   271 op add :checkOre.2:count :checkOre.1:count 1
   272 label *label423
-    * label *label424
-    * label *label425
   273 set :checkOre.3:count :checkOre.2:count
   274 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   275 jump *label426 notEqual :checkOre.3:floor @ore-titanium
   276 op add :checkOre.3:count :checkOre.2:count 1
   277 label *label426
-    * label *label427
-    * label *label428
   278 jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   279 set :buildTitaniumDrillCfg:dx -1
   280 set :buildTitaniumDrillCfg:dy 1
 
   282 jump *label429 lessThan :checkOre.3:count 4
   283 jump *label66 always
   284 label *label429
-    * label *label430
   285 label *label431
-    * label *label432
-    * label *label433
-    * label *label436
   286 set :checkOre:count 0
   287 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   288 jump *label437 notEqual :checkOre:floor @ore-titanium
   289 set :checkOre:count 1
   290 label *label437
-    * label *label438
-    * label *label439
   291 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   292 set :checkOre.1:count :checkOre:count
   293 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   294 jump *label440 notEqual :checkOre.1:floor @ore-titanium
   295 op add :checkOre.1:count :checkOre:count 1
   296 label *label440
-    * label *label441
-    * label *label442
   297 op add *tmp70 :buildTitaniumDrillCfg:ay -1
   298 set :checkOre.2:count :checkOre.1:count
   299 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :checkOre.2:floor
   300 jump *label443 notEqual :checkOre.2:floor @ore-titanium
   301 op add :checkOre.2:count :checkOre.1:count 1
   302 label *label443
-    * label *label444
-    * label *label445
   303 set :checkOre.3:count :checkOre.2:count
   304 ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor
   305 jump *label446 notEqual :checkOre.3:floor @ore-titanium
   306 op add :checkOre.3:count :checkOre.2:count 1
   307 label *label446
-    * label *label447
-    * label *label448
   308 jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   309 set :buildTitaniumDrillCfg:dx -1
   310 set :buildTitaniumDrillCfg:dy -1
 
   312 jump *label449 lessThan :checkOre.3:count 4
   313 jump *label66 always
   314 label *label449
-    * label *label450
   315 label *label451
-    * label *label452
-    * label *label453
-    * label *label69
-    * label *label65
   316 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   317 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
   318 label *label66
 
   334 set *tmp37 :buildBlockAt*retval
   335 jump *label49 always
   336 label *label93
-    * label *label94
   337 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   338 jump *label52 always
   339 label *label90
-    * label *label91
   340 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   341 jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
   342 sensor *tmp100 @unit @x
 
   354 label *label98
   355 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
   356 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
-    * label *label97
   357 set :buildTitaniumDrillCfg:attempts 0
   358 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
   359 op max :buildTitaniumDrillCfg:minimum *tmp108 1
   360 label *label95
-    * label *label96
-    * label *label51
   361 jump *label50 always
   362 label *label52
   363 set *tmp37 null
   364 label *label49
-    * label *label48
   365 set .titanium_drill *tmp37
   366 set :buildBlock:block @unloader
   367 set :buildBlock:copper 0
 
   373 set :buildBlock:rotation 0
   374 set :buildBlock:config null
   375 setaddr :buildBlock*retaddr *label104 (h:*label104)
-    * label *label100
   376 set :buildBlock:x .coreX
   377 op add :buildBlock:y .coreY 2
   378 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   379 label *label104
   380 set *tmp110 :buildBlock*retval
   381 jump *label99 always
-    * label *label101
   382 multijump *tmp111 0 0 (m:marker6)
   383 multilabel *label103 (m:marker6)
-    * label *label102
   384 label *label99
   385 set .unloader1 *tmp110
   386 set :buildBlock:block @power-node
 
   393 set :buildBlock:rotation 0
   394 set :buildBlock:config null
   395 setaddr :buildBlock*retaddr *label110 (h:*label110)
-    * label *label106
   396 op add :buildBlock:x .coreX -1
   397 op add :buildBlock:y .coreY -2
   398 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   399 label *label110
   400 jump *label105 always
-    * label *label107
   401 multijump *tmp115 0 0 (m:marker7)
   402 multilabel *label109 (m:marker7)
-    * label *label108
   403 label *label105
   404 set :buildBlock:block @micro-processor
   405 set :buildBlock:copper 90
 
   410 set :buildBlock:metaglass 0
   411 set :buildBlock:rotation 0
   412 setaddr :buildBlock*retaddr *label116 (h:*label116)
-    * label *label112
   413 op add :buildBlock:x .coreX 1
   414 op add :buildBlock:y .coreY 4
   415 set :buildBlock:config processor1
 
   417 label *label116
   418 set *tmp118 :buildBlock*retval
   419 jump *label111 always
-    * label *label113
   420 multijump *tmp119 0 0 (m:marker8)
   421 multilabel *label115 (m:marker8)
-    * label *label114
   422 label *label111
   423 set .processor *tmp118
   424 write .core *tmp118 ".core"
 
   436 set :buildBlock:rotation 3
   437 set :buildBlock:config @mono
   438 setaddr :buildBlock*retaddr *label122 (h:*label122)
-    * label *label118
   439 op add :buildBlock:x .coreX -4
   440 op add :buildBlock:y .coreY -1
   441 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   442 label *label122
   443 set *tmp123 :buildBlock*retval
   444 jump *label117 always
-    * label *label119
   445 multijump *tmp124 0 0 (m:marker9)
   446 multilabel *label121 (m:marker9)
-    * label *label120
   447 label *label117
   448 write *tmp123 *tmp118 ".factory"
   449 set :buildBlock:block @unloader
 
   456 set :buildBlock:rotation 0
   457 set :buildBlock:config null
   458 setaddr :buildBlock*retaddr *label128 (h:*label128)
-    * label *label124
   459 op add :buildBlock:x .coreX -2
   460 op add :buildBlock:y .coreY 1
   461 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   462 label *label128
   463 set *tmp127 :buildBlock*retval
   464 jump *label123 always
-    * label *label125
   465 multijump *tmp128 0 0 (m:marker10)
   466 multilabel *label127 (m:marker10)
-    * label *label126
   467 label *label123
   468 write *tmp127 *tmp118 ".unloader2"
   469 set :buildBlock:block @overflow-gate
 
   476 set :buildBlock:rotation 0
   477 set :buildBlock:config null
   478 setaddr :buildBlock*retaddr *label134 (h:*label134)
-    * label *label130
   479 op add :buildBlock:x .coreX -3
   480 op add :buildBlock:y .coreY 1
   481 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   482 label *label134
   483 jump *label129 always
-    * label *label131
   484 multijump *tmp132 0 0 (m:marker11)
   485 multilabel *label133 (m:marker11)
-    * label *label132
   486 label *label129
   487 write @mono *tmp118 ".unitToProduce"
   488 set :buildBlock:block @unloader
 
   495 set :buildBlock:rotation 0
   496 set :buildBlock:config null
   497 setaddr :buildBlock*retaddr *label140 (h:*label140)
-    * label *label136
   498 op add :buildBlock:x .coreX 2
   499 set :buildBlock:y .coreY
   500 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   501 label *label140
   502 jump *label135 always
-    * label *label137
   503 multijump *tmp136 0 0 (m:marker12)
   504 multilabel *label139 (m:marker12)
-    * label *label138
   505 label *label135
   506 set :buildBlock:block @kiln
   507 set :buildBlock:copper 60
 
   513 set :buildBlock:rotation 0
   514 set :buildBlock:config null
   515 setaddr :buildBlock*retaddr *label146 (h:*label146)
-    * label *label142
   516 op add :buildBlock:x .coreX 3.5
   517 op add :buildBlock:y .coreY 0.5
   518 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   519 label *label146
   520 jump *label141 always
-    * label *label143
   521 multijump *tmp140 0 0 (m:marker13)
   522 multilabel *label145 (m:marker13)
-    * label *label144
   523 label *label141
   524 write null *tmp118 ".kiln"
   525 set :buildBlock:block @junction
 
   532 set :buildBlock:rotation 0
   533 set :buildBlock:config null
   534 setaddr :buildBlock*retaddr *label152 (h:*label152)
-    * label *label148
   535 op add :buildBlock:x .coreX 2
   536 op add :buildBlock:y .coreY 1
   537 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   538 label *label152
   539 jump *label147 always
-    * label *label149
   540 multijump *tmp144 0 0 (m:marker14)
   541 multilabel *label151 (m:marker14)
-    * label *label150
   542 label *label147
   543 set :buildBlock:block @water-extractor
   544 set :buildBlock:copper 30
 
   550 set :buildBlock:rotation 0
   551 set :buildBlock:config null
   552 setaddr :buildBlock*retaddr *label158 (h:*label158)
-    * label *label154
   553 op add :buildBlock:x .coreX -3.5
   554 op add :buildBlock:y .coreY 4.5
   555 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   556 label *label158
   557 jump *label153 always
-    * label *label155
   558 multijump *tmp148 0 0 (m:marker15)
   559 multilabel *label157 (m:marker15)
-    * label *label156
   560 label *label153
   561 set :buildBlock:block @steam-generator
   562 set :buildBlock:copper 35
 
   568 set :buildBlock:rotation 0
   569 set :buildBlock:config null
   570 setaddr :buildBlock*retaddr *label164 (h:*label164)
-    * label *label160
   571 op add :buildBlock:x .coreX -3.5
   572 op add :buildBlock:y .coreY 2.5
   573 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   574 label *label164
   575 set *tmp151 :buildBlock*retval
   576 jump *label159 always
-    * label *label161
   577 multijump *tmp152 0 0 (m:marker16)
   578 multilabel *label163 (m:marker16)
-    * label *label162
   579 label *label159
   580 write *tmp151 *tmp118 ".generator2"
   581 set :buildBlock:block @sorter
 
   588 set :buildBlock:rotation 0
   589 set :buildBlock:config @coal
   590 setaddr :buildBlock*retaddr *label170 (h:*label170)
-    * label *label166
   591 op add :buildBlock:x .coreX -4
   592 op add :buildBlock:y .coreY 1
   593 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   594 label *label170
   595 jump *label165 always
-    * label *label167
   596 multijump *tmp156 0 0 (m:marker17)
   597 multilabel *label169 (m:marker17)
-    * label *label168
   598 label *label165
   599 label *label171
   600 setaddr :supplyBlocks*retaddr *label174 (h:*label174)
   601 call *label9 *invalid :supplyBlocks*retval (m:*label174) (h:*label174)
   602 label *label174
-    * label *label172
   603 jump *label171 always
-    * label *label173
   604 ucontrol stop
   605 print "[salmon]"
   606 print "Done"
   607 printflush message1
   608 stop
-    * label *label175
   609 print .nextBlock
   610 print .totalTargets
   611 print .transportTarget
 
   615 print .status3
   616 print .item2
   617 print .block2
-    * label *label14
   618 wait 1e12
   619 jump *label13 always
   620 end
   621 label *label0
   622 set .status3 "Moving..."
-    * label *label177
   623 op sub *tmp162 :moveTo:radius 0.5
-    * label *label178
   624 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
   625 jump *label180 notEqual *tmp160 false
   626 label *label372
   627 ucontrol approach :moveTo:x :moveTo:y *tmp162
-    * label *label179
   628 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160
   629 jump *label372 equal *tmp160 false
   630 label *label180
-    * label *label176
   631 return :moveTo*retaddr
   632 end
   633 label *label1
 
   637 setaddr :moveTo*retaddr *label182 (h:*label182)
   638 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
   639 label *label182
-    * label *label181
   640 return :moveTo.1*retaddr
   641 end
   642 label *label2
 
   644 jump *label184 equal *tmp165 null
   645 ucontrol itemDrop @air 1000
   646 label *label184
-    * label *label185
   647 set :moveTo.1:x :moveToEmpty:x
   648 set :moveTo.1:y :moveToEmpty:y
   649 setaddr :moveTo.1*retaddr *label186 (h:*label186)
   650 call *label1 *invalid :moveTo.1*retval (m:*label186) (h:*label186)
   651 label *label186
-    * label *label187
   652 sensor *tmp168 @unit @firstItem
   653 jump *label189 equal *tmp168 null
   654 label *label373
   655 ucontrol itemDrop @air 1000
-    * label *label188
   656 sensor *tmp168 @unit @firstItem
   657 jump *label373 notEqual *tmp168 null
   658 label *label189
-    * label *label183
   659 return :moveToEmpty*retaddr
   660 end
   661 label *label3
 
   667 setaddr :moveTo*retaddr *label191 (h:*label191)
   668 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   669 label *label191
-    * label *label190
   670 return :moveToBlock*retaddr
   671 end
   672 label *label4
   673 set .status3 "Depositing..."
-    * label *label193
   674 sensor *tmp172 @unit @firstItem
   675 jump *label194 notEqual *tmp172 :depositItems:item
   676 set *tmp177 5
 
   691 jump *label202 lessThan *tmp179 :depositItems:cap
   692 jump *label201 always
   693 label *label202
-    * label *label203
-    * label *label200
   694 sensor *tmp182 @unit @firstItem
   695 jump *label199 notEqual *tmp182 null
   696 label *label201
   697 jump *label195 always
   698 label *label194
-    * label *label204
   699 sensor *tmp184 @unit @firstItem
   700 jump *label206 equal *tmp184 null
   701 label *label374
   702 ucontrol itemDrop @air 1000
-    * label *label205
   703 sensor *tmp184 @unit @firstItem
   704 jump *label374 notEqual *tmp184 null
   705 label *label206
   706 label *label195
   707 set .transportTarget 0
-    * label *label192
   708 return :depositItems*retaddr
   709 end
   710 label *label5
 
   715 print :locateOre:ore
   716 printflush message1
   717 stop
-    * label *label210
   718 label *label208
-    * label *label209
-    * label *label207
   719 return :locateOre*retaddr
   720 end
   721 label *label6
 
   733 call *label2 *invalid :moveToEmpty*retval (m:*label213) (h:*label213)
   734 label *label213
   735 set .status3 "Mining..."
-    * label *label214
   736 label *label215
   737 sensor :mineOre:item @unit @firstItem
   738 op notEqual *tmp191 :mineOre:item null
 
   741 jump *label218 equal *tmp193 false
   742 jump *label217 always
   743 label *label218
-    * label *label219
   744 ucontrol mine :mineOre:x :mineOre:y
-    * label *label216
   745 sensor *tmp195 @unit @totalItems
   746 jump *label215 lessThan *tmp195 :mineOre:amount
   747 label *label217
 
   752 setaddr :depositItems*retaddr *label220 (h:*label220)
   753 call *label4 *invalid :depositItems*retval (m:*label220) (h:*label220)
   754 label *label220
-    * label *label211
   755 return :mineOre*retaddr
   756 end
   757 label *label7
 
   761 setaddr :mineOre*retaddr *label222 (h:*label222)
   762 call *label6 *invalid :mineOre*retval (m:*label222) (h:*label222)
   763 label *label222
-    * label *label221
   764 return :mineOre.1*retaddr
   765 end
   766 label *label8
 
   769 set .status2 "Fetching "
   770 set .item2 :fetchBlock:item
   771 set .block2 :fetchBlock:block
-    * label *label224
   772 sensor *tmp199 :fetchBlock:block @x
   773 sensor *tmp200 :fetchBlock:block @y
   774 set :moveToEmpty:x *tmp199
 
   785 jump *label229 equal *tmp204 false
   786 ucontrol itemDrop @air 1000
   787 label *label229
-    * label *label230
-    * label *label227
   788 sensor *tmp206 @unit :fetchBlock:item
   789 op lessThan *tmp207 *tmp206 30
   790 sensor *tmp208 :fetchBlock:block :fetchBlock:item
   791 op land *tmp209 *tmp207 *tmp208
   792 jump *label226 notEqual *tmp209 false
-    * label *label228
   793 set :depositItems:block .core
   794 set :depositItems:item :fetchBlock:item
   795 set :depositItems:fromMining false
   796 setaddr :depositItems*retaddr *label231 (h:*label231)
   797 call *label4 *invalid :depositItems*retval (m:*label231) (h:*label231)
   798 label *label231
-    * label *label223
   799 return :fetchBlock*retaddr
   800 end
   801 label *label9
 
   806 sensor *tmp215 .press @coal
   807 jump *label237 greaterThanEq *tmp215 5
   808 set .status1 "Meeting the graphite target"
-    * label *label239
   809 set .status2 "Supplying "
   810 set .item2 @coal
   811 set .block2 .press
-    * label *label241
   812 sensor *tmp218 .press @itemCapacity
   813 sensor *tmp219 .press @coal
   814 op sub :supplyBlock:missing *tmp218 *tmp219
 
   820 call *label6 *invalid :mineOre*retval (m:*label244) (h:*label244)
   821 label *label244
   822 label *label242
-    * label *label243
-    * label *label240
   823 set :supplyBlocks:supplied true
   824 label *label237
-    * label *label238
   825 label *label235
-    * label *label236
   826 sensor *tmp223 .core @silicon
   827 jump *label245 greaterThanEq *tmp223 .updatedSiliconTarget
   828 sensor *tmp226 .smelter @coal
   829 jump *label247 greaterThanEq *tmp226 5
   830 set .status1 "Meeting the silicon target (coal)"
-    * label *label249
   831 set .status2 "Supplying "
   832 set .item2 @coal
   833 set .block2 .smelter
-    * label *label251
   834 sensor *tmp229 .smelter @itemCapacity
   835 sensor *tmp230 .smelter @coal
   836 op sub :supplyBlock.1:missing *tmp229 *tmp230
 
   842 call *label6 *invalid :mineOre*retval (m:*label254) (h:*label254)
   843 label *label254
   844 label *label252
-    * label *label253
-    * label *label250
   845 set :supplyBlocks:supplied true
   846 jump *label248 always
   847 label *label247
   848 sensor *tmp234 .smelter @sand
   849 jump *label255 greaterThanEq *tmp234 5
   850 set .status1 "Meeting the silicon target (sand)"
-    * label *label257
   851 set .status2 "Supplying "
   852 set .item2 @sand
   853 set .block2 .smelter
-    * label *label259
   854 sensor *tmp237 .smelter @itemCapacity
   855 sensor *tmp238 .smelter @sand
   856 op sub :supplyBlock.2:missing *tmp237 *tmp238
 
   862 call *label6 *invalid :mineOre*retval (m:*label262) (h:*label262)
   863 label *label262
   864 label *label260
-    * label *label261
-    * label *label258
   865 set :supplyBlocks:supplied true
   866 label *label255
-    * label *label256
   867 label *label248
   868 label *label245
-    * label *label246
   869 sensor *tmp242 .battery @totalPower
   870 jump *label263 greaterThanEq *tmp242 .powerTarget
   871 set .status1 "Supplying generator"
-    * label *label265
   872 set .status2 "Supplying "
   873 set .item2 @coal
   874 set .block2 .generator
-    * label *label267
   875 sensor *tmp245 .generator @itemCapacity
   876 sensor *tmp246 .generator @coal
   877 op sub :supplyBlock.3:missing *tmp245 *tmp246
 
   883 call *label6 *invalid :mineOre*retval (m:*label270) (h:*label270)
   884 label *label270
   885 label *label268
-    * label *label269
-    * label *label266
   886 set :supplyBlocks:supplied true
   887 label *label263
-    * label *label264
   888 jump *label234 always
   889 label *label233
   890 jump *label271 equal .processor null
   891 sensor *tmp252 .core @coal
   892 jump *label273 greaterThanEq *tmp252 10
   893 set .status1 "Supplying base"
-    * label *label275
   894 set :mineOre.1:ore @coal
   895 setaddr :mineOre.1*retaddr *label276 (h:*label276)
   896 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
   897 label *label276
   898 jump *label232 always
   899 label *label273
-    * label *label274
   900 label *label271
-    * label *label272
   901 label *label234
   902 sensor *tmp255 .titanium_drill @titanium
   903 jump *label277 greaterThanEq *tmp255 .titaniumTrigger
   904 sensor *tmp258 .core @silicon
   905 jump *label279 greaterThanEq *tmp258 .siliconTarget
   906 set .status1 "Meeting the silicon target"
-    * label *label281
   907 sensor :supplyBlocks:coal .core @coal
   908 sensor :supplyBlocks:sand .core @sand
   909 set *tmp264 @sand
 
   913 set .status2 "Mining "
   914 set .item2 *tmp264
   915 set .block2 "core"
-    * label *label284
   916 set :mineOre.1:ore *tmp264
   917 setaddr :mineOre.1*retaddr *label285 (h:*label285)
   918 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
 
   922 sensor *tmp265 .core @copper
   923 jump *label286 greaterThanEq *tmp265 .copperTarget
   924 set .status1 "Meeting the copper target"
-    * label *label288
   925 set .status2 "Mining "
   926 set .item2 @copper
   927 set .block2 "core"
-    * label *label289
   928 set :mineOre.1:ore @copper
   929 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   930 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
 
   934 sensor *tmp268 .core @lead
   935 jump *label291 greaterThanEq *tmp268 .leadTarget
   936 set .status1 "Meeting the lead target"
-    * label *label293
   937 set .status2 "Mining "
   938 set .item2 @lead
   939 set .block2 "core"
-    * label *label294
   940 set :mineOre.1:ore @lead
   941 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   942 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
   946 sensor *tmp271 .core @metaglass
   947 jump *label296 greaterThanEq *tmp271 .metaglassTarget
   948 set .status1 "Meeting the metaglass target"
-    * label *label298
   949 set .status2 "Mining "
   950 set .item2 @sand
   951 set .block2 "core"
-    * label *label299
   952 set :mineOre.1:ore @sand
   953 setaddr :mineOre.1*retaddr *label300 (h:*label300)
   954 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
 
   957 label *label296
   958 jump *label301 notEqual :supplyBlocks:supplied false
   959 set .status1 "Supplying base"
-    * label *label303
   960 sensor :supplyBlocks:coal.1 .core @coal
   961 sensor :supplyBlocks:sand.1 .core @sand
   962 set *tmp279 @sand
 
   966 set .status2 "Mining "
   967 set .item2 *tmp279
   968 set .block2 "core"
-    * label *label306
   969 set :mineOre.1:ore *tmp279
   970 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   971 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   972 label *label307
   973 label *label301
-    * label *label302
   974 label *label297
   975 label *label292
   976 label *label287
 
   978 jump *label278 always
   979 label *label277
   980 set .status1 "Fetching titanium"
-    * label *label308
   981 set :fetchBlock:block .titanium_drill
   982 set :fetchBlock:item @titanium
   983 setaddr :fetchBlock*retaddr *label309 (h:*label309)
 
   995 set .siliconTarget :meetTarget:silicon
   996 set .titaniumTarget :meetTarget:titanium
   997 set .metaglassTarget :meetTarget:metaglass
-    * label *label347
   998 op sign :meetTarget:count :meetTarget:copper
-    * label *label348
-    * label *label351
   999 op sign *tmp281 :meetTarget:lead
  1000 op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label352
-    * label *label355
  1001 op sign *tmp281 :meetTarget:graphite
  1002 op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label356
-    * label *label359
  1003 op sign *tmp281 :meetTarget:silicon
  1004 op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label360
-    * label *label363
  1005 op sign *tmp281 :meetTarget:titanium
  1006 op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label364
-    * label *label367
  1007 op sign *tmp281 :meetTarget:metaglass
  1008 op add :meetTarget:count :meetTarget:count *tmp281
-    * label *label368
-    * label *label313
  1009 set .totalTargets :meetTarget:count
  1010 jump *label320 notEqual .processor null
  1011 op max .updatedGraphiteTarget 10 .graphiteTarget
 
  1025 jump *label323 greaterThanEq *tmp289 *tmp290
  1026 set .titaniumTrigger 7
  1027 label *label323
-    * label *label324
  1028 sensor *tmp293 .core @copper
  1029 op lessThan *tmp294 *tmp293 .copperTarget
  1030 sensor *tmp295 .core @lead
 
  1051 setaddr :supplyBlocks*retaddr *label327 (h:*label327)
  1052 call *label9 *invalid :supplyBlocks*retval (m:*label327) (h:*label327)
  1053 label *label327
-    * label *label325
  1054 sensor *tmp293 .core @copper
  1055 op lessThan *tmp294 *tmp293 .copperTarget
  1056 sensor *tmp295 .core @lead
 
  1074 op or *tmp314 *tmp309 *tmp312
  1075 jump *label375 notEqual *tmp314 false
  1076 label *label326
-    * label *label310
  1077 return :meetTarget*retaddr
  1078 end
  1079 label *label11
 
  1083 call *label1 *invalid :moveTo.1*retval (m:*label329) (h:*label329)
  1084 label *label329
  1085 set .status3 "Building..."
-    * label *label330
  1086 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1087 jump *label331 equal :buildBlockAt:building null
  1088 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1089 set :buildBlockAt*retval :buildBlockAt:building
  1090 jump *label328 always
  1091 label *label333
-    * label *label334
  1092 jump *label335 equal :buildBlockAt:skipError false
  1093 set :buildBlockAt*retval null
  1094 jump *label328 always
  1095 label *label335
-    * label *label336
  1096 print "[salmon]"
  1097 print "Cannot build at ("
  1098 print :buildBlockAt:x
 
  1102 print :buildBlockAt:building
  1103 printflush message1
  1104 stop
-    * label *label337
  1105 label *label331
-    * label *label332
  1106 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1107 wait 0.25
  1108 label *label338
 
  1110 jump *label341 notEqual :buildBlockAt:building null
  1111 jump *label340 always
  1112 label *label341
-    * label *label342
-    * label *label339
  1113 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1114 label *label340
  1115 set :buildBlockAt*retval :buildBlockAt:building
 
  1137 call *label11 *invalid :buildBlockAt*retval (m:*label345) (h:*label345)
  1138 label *label345
  1139 set :buildBlock*retval :buildBlockAt*retval
-    * label *label343
  1140 return :buildBlock*retaddr
  1141 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   156 op abs *tmp43 *tmp42
   157 op greaterThanEq *tmp44 *tmp43 8
   158 op or *tmp45 *tmp41 *tmp44
-    * jump *label59 equal *tmp45 false
-    * jump *label57 always
+  159 jump *label57 notEqual *tmp45 false
   160 label *label59
   161 sensor *tmp48 @unit @x
   162 op sin *tmp49 :locateOreAway:angle
 
   218 set :buildTitaniumDrillCfg:dx 1
   219 set :buildTitaniumDrillCfg:dy 1
   220 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label389 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  221 jump *label66 greaterThanEq :checkOre.3:count 4
   222 label *label389
   223 label *label391
   224 set :checkOre:count 0
 
   247 set :buildTitaniumDrillCfg:dx 1
   248 set :buildTitaniumDrillCfg:dy -1
   249 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label409 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  250 jump *label66 greaterThanEq :checkOre.3:count 4
   251 label *label409
   252 label *label411
   253 set :checkOre:count 0
 
   276 set :buildTitaniumDrillCfg:dx -1
   277 set :buildTitaniumDrillCfg:dy 1
   278 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label429 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  279 jump *label66 greaterThanEq :checkOre.3:count 4
   280 label *label429
   281 label *label431
   282 set :checkOre:count 0
 
   305 set :buildTitaniumDrillCfg:dx -1
   306 set :buildTitaniumDrillCfg:dy -1
   307 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label449 lessThan :checkOre.3:count 4
-    * jump *label66 always
+  308 jump *label66 greaterThanEq :checkOre.3:count 4
   309 label *label449
   310 label *label451
   311 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
 
   683 label *label199
   684 ucontrol itemDrop :depositItems:block 30
   685 sensor *tmp179 :depositItems:block :depositItems:item
-    * jump *label202 lessThan *tmp179 :depositItems:cap
-    * jump *label201 always
+  686 jump *label201 greaterThanEq *tmp179 :depositItems:cap
   687 label *label202
   688 sensor *tmp182 @unit @firstItem
   689 jump *label199 notEqual *tmp182 null
 
   732 op notEqual *tmp191 :mineOre:item null
   733 op notEqual *tmp192 :mineOre:item :mineOre:ore
   734 op land *tmp193 *tmp191 *tmp192
-    * jump *label218 equal *tmp193 false
-    * jump *label217 always
+  735 jump *label217 notEqual *tmp193 false
   736 label *label218
   737 ucontrol mine :mineOre:x :mineOre:y
   738 sensor *tmp195 @unit @totalItems
 
  1100 wait 0.25
  1101 label *label338
  1102 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label341 notEqual :buildBlockAt:building null
-    * jump *label340 always
+ 1103 jump *label340 equal :buildBlockAt:building null
  1104 label *label341
  1105 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1106 label *label340

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   157 op greaterThanEq *tmp44 *tmp43 8
   158 op or *tmp45 *tmp41 *tmp44
   159 jump *label57 notEqual *tmp45 false
-    * label *label59
   160 sensor *tmp48 @unit @x
   161 op sin *tmp49 :locateOreAway:angle
   162 op mul *tmp50 *tmp49 :locateOreAway:distance
 
   218 set :buildTitaniumDrillCfg:dy 1
   219 set :buildTitaniumDrillCfg:best :checkOre.3:count
   220 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label389
   221 label *label391
   222 set :checkOre:count 0
   223 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   246 set :buildTitaniumDrillCfg:dy -1
   247 set :buildTitaniumDrillCfg:best :checkOre.3:count
   248 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label409
   249 label *label411
   250 set :checkOre:count 0
   251 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   274 set :buildTitaniumDrillCfg:dy 1
   275 set :buildTitaniumDrillCfg:best :checkOre.3:count
   276 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label429
   277 label *label431
   278 set :checkOre:count 0
   279 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   302 set :buildTitaniumDrillCfg:dy -1
   303 set :buildTitaniumDrillCfg:best :checkOre.3:count
   304 jump *label66 greaterThanEq :checkOre.3:count 4
-    * label *label449
   305 label *label451
   306 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   307 jump *label346 lessThan :buildTitaniumDrillCfg:searches 5
 
   679 ucontrol itemDrop :depositItems:block 30
   680 sensor *tmp179 :depositItems:block :depositItems:item
   681 jump *label201 greaterThanEq *tmp179 :depositItems:cap
-    * label *label202
   682 sensor *tmp182 @unit @firstItem
   683 jump *label199 notEqual *tmp182 null
   684 label *label201
 
   727 op notEqual *tmp192 :mineOre:item :mineOre:ore
   728 op land *tmp193 *tmp191 *tmp192
   729 jump *label217 notEqual *tmp193 false
-    * label *label218
   730 ucontrol mine :mineOre:x :mineOre:y
   731 sensor *tmp195 @unit @totalItems
   732 jump *label215 lessThan *tmp195 :mineOre:amount
 
  1094 label *label338
  1095 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1096 jump *label340 equal :buildBlockAt:building null
-    * label *label341
  1097 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1098 label *label340
  1099 set :buildBlockAt*retval :buildBlockAt:building

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   328 jump *label52 always
   329 label *label90
   330 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label95 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  331 jump *label50 lessThanEq :buildTitaniumDrillCfg:attempts 5
   332 sensor *tmp100 @unit @x
   333 op sin *tmp101 :locateOreAway:angle
   334 op mul *tmp102 *tmp101 :locateOreAway:distance
 
   678 label *label199
   679 ucontrol itemDrop :depositItems:block 30
   680 sensor *tmp179 :depositItems:block :depositItems:item
-    * jump *label201 greaterThanEq *tmp179 :depositItems:cap
+  681 jump *label195 greaterThanEq *tmp179 :depositItems:cap
   682 sensor *tmp182 @unit @firstItem
   683 jump *label199 notEqual *tmp182 null
   684 label *label201
 
   853 label *label248
   854 label *label245
   855 sensor *tmp242 .battery @totalPower
-    * jump *label263 greaterThanEq *tmp242 .powerTarget
+  856 jump *label234 greaterThanEq *tmp242 .powerTarget
   857 set .status1 "Supplying generator"
   858 set .status2 "Supplying "
   859 set .item2 @coal
 
   881 setaddr :mineOre.1*retaddr *label276 (h:*label276)
   882 call *label7 *invalid :mineOre.1*retval (m:*label276) (h:*label276)
   883 label *label276
-    * jump *label232 always
+  884 return :supplyBlocks*retaddr
   885 label *label273
   886 label *label271
   887 label *label234
 
   903 setaddr :mineOre.1*retaddr *label285 (h:*label285)
   904 call *label7 *invalid :mineOre.1*retval (m:*label285) (h:*label285)
   905 label *label285
-    * jump *label280 always
+  906 return :supplyBlocks*retaddr
   907 label *label279
   908 sensor *tmp265 .core @copper
   909 jump *label286 greaterThanEq *tmp265 .copperTarget
 
   915 setaddr :mineOre.1*retaddr *label290 (h:*label290)
   916 call *label7 *invalid :mineOre.1*retval (m:*label290) (h:*label290)
   917 label *label290
-    * jump *label287 always
+  918 return :supplyBlocks*retaddr
   919 label *label286
   920 sensor *tmp268 .core @lead
   921 jump *label291 greaterThanEq *tmp268 .leadTarget
 
   927 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   928 call *label7 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
   929 label *label295
-    * jump *label292 always
+  930 return :supplyBlocks*retaddr
   931 label *label291
   932 sensor *tmp271 .core @metaglass
   933 jump *label296 greaterThanEq *tmp271 .metaglassTarget
 
   939 setaddr :mineOre.1*retaddr *label300 (h:*label300)
   940 call *label7 *invalid :mineOre.1*retval (m:*label300) (h:*label300)
   941 label *label300
-    * jump *label297 always
+  942 return :supplyBlocks*retaddr
   943 label *label296
-    * jump *label301 notEqual :supplyBlocks:supplied false
+  944 jump *label278 notEqual :supplyBlocks:supplied false
   945 set .status1 "Supplying base"
   946 sensor :supplyBlocks:coal.1 .core @coal
   947 sensor :supplyBlocks:sand.1 .core @sand
 
   961 label *label292
   962 label *label287
   963 label *label280
-    * jump *label278 always
+  964 return :supplyBlocks*retaddr
   965 label *label277
   966 set .status1 "Fetching titanium"
   967 set :fetchBlock:block .titanium_drill
 
  1073 jump *label331 equal :buildBlockAt:building null
  1074 jump *label333 notEqual :buildBlockAt:type :buildBlockAt:block
  1075 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label328 always
+ 1076 return :buildBlockAt*retaddr
  1077 label *label333
  1078 jump *label335 equal :buildBlockAt:skipError false
  1079 set :buildBlockAt*retval null
-    * jump *label328 always
+ 1080 return :buildBlockAt*retaddr
  1081 label *label335
  1082 print "[salmon]"
  1083 print "Cannot build at ("

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-47 instructions):
 
    43 label *label23
    44 set *tmp16 :buildBlock*retval
    45 jump *label18 always
-    * multijump *tmp17 0 0 (m:marker0)
-    * multilabel *label22 (m:marker0)
    46 label *label18
    47 set .press *tmp16
    48 set :buildBlock:block @battery
 
    61 label *label29
    62 set *tmp20 :buildBlock*retval
    63 jump *label24 always
-    * multijump *tmp21 0 0 (m:marker1)
-    * multilabel *label28 (m:marker1)
    64 label *label24
    65 set .battery *tmp20
    66 set :buildBlock:block @combustion-generator
 
    79 label *label35
    80 set *tmp24 :buildBlock*retval
    81 jump *label30 always
-    * multijump *tmp25 0 0 (m:marker2)
-    * multilabel *label34 (m:marker2)
    82 label *label30
    83 set .generator *tmp24
    84 set :buildBlock:block @battery
 
    96 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    97 label *label41
    98 jump *label36 always
-    * multijump *tmp29 0 0 (m:marker3)
-    * multilabel *label40 (m:marker3)
    99 label *label36
   100 set :buildBlock:block @silicon-smelter
   101 set :buildBlock:copper 30
 
   113 label *label47
   114 set *tmp32 :buildBlock*retval
   115 jump *label42 always
-    * multijump *tmp33 0 0 (m:marker4)
-    * multilabel *label46 (m:marker4)
   116 label *label42
   117 set .smelter *tmp32
   118 set :buildTitaniumDrillCfg:distance 32
 
   337 set :buildTitaniumDrillCfg:attempts 0
   338 op sub *tmp108 :buildTitaniumDrillCfg:minimum 1
   339 op max :buildTitaniumDrillCfg:minimum *tmp108 1
-    * label *label95
   340 jump *label50 always
   341 label *label52
   342 set *tmp37 null
 
   358 label *label104
   359 set *tmp110 :buildBlock*retval
   360 jump *label99 always
-    * multijump *tmp111 0 0 (m:marker6)
-    * multilabel *label103 (m:marker6)
   361 label *label99
   362 set .unloader1 *tmp110
   363 set :buildBlock:block @power-node
 
   375 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   376 label *label110
   377 jump *label105 always
-    * multijump *tmp115 0 0 (m:marker7)
-    * multilabel *label109 (m:marker7)
   378 label *label105
   379 set :buildBlock:block @micro-processor
   380 set :buildBlock:copper 90
 
   392 label *label116
   393 set *tmp118 :buildBlock*retval
   394 jump *label111 always
-    * multijump *tmp119 0 0 (m:marker8)
-    * multilabel *label115 (m:marker8)
   395 label *label111
   396 set .processor *tmp118
   397 write .core *tmp118 ".core"
 
   415 label *label122
   416 set *tmp123 :buildBlock*retval
   417 jump *label117 always
-    * multijump *tmp124 0 0 (m:marker9)
-    * multilabel *label121 (m:marker9)
   418 label *label117
   419 write *tmp123 *tmp118 ".factory"
   420 set :buildBlock:block @unloader
 
   433 label *label128
   434 set *tmp127 :buildBlock*retval
   435 jump *label123 always
-    * multijump *tmp128 0 0 (m:marker10)
-    * multilabel *label127 (m:marker10)
   436 label *label123
   437 write *tmp127 *tmp118 ".unloader2"
   438 set :buildBlock:block @overflow-gate
 
   450 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   451 label *label134
   452 jump *label129 always
-    * multijump *tmp132 0 0 (m:marker11)
-    * multilabel *label133 (m:marker11)
   453 label *label129
   454 write @mono *tmp118 ".unitToProduce"
   455 set :buildBlock:block @unloader
 
   467 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   468 label *label140
   469 jump *label135 always
-    * multijump *tmp136 0 0 (m:marker12)
-    * multilabel *label139 (m:marker12)
   470 label *label135
   471 set :buildBlock:block @kiln
   472 set :buildBlock:copper 60
 
   483 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   484 label *label146
   485 jump *label141 always
-    * multijump *tmp140 0 0 (m:marker13)
-    * multilabel *label145 (m:marker13)
   486 label *label141
   487 write null *tmp118 ".kiln"
   488 set :buildBlock:block @junction
 
   500 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   501 label *label152
   502 jump *label147 always
-    * multijump *tmp144 0 0 (m:marker14)
-    * multilabel *label151 (m:marker14)
   503 label *label147
   504 set :buildBlock:block @water-extractor
   505 set :buildBlock:copper 30
 
   516 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   517 label *label158
   518 jump *label153 always
-    * multijump *tmp148 0 0 (m:marker15)
-    * multilabel *label157 (m:marker15)
   519 label *label153
   520 set :buildBlock:block @steam-generator
   521 set :buildBlock:copper 35
 
   533 label *label164
   534 set *tmp151 :buildBlock*retval
   535 jump *label159 always
-    * multijump *tmp152 0 0 (m:marker16)
-    * multilabel *label163 (m:marker16)
   536 label *label159
   537 write *tmp151 *tmp118 ".generator2"
   538 set :buildBlock:block @sorter
 
   550 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   551 label *label170
   552 jump *label165 always
-    * multijump *tmp156 0 0 (m:marker17)
-    * multilabel *label169 (m:marker17)
   553 label *label165
   554 label *label171
   555 setaddr :supplyBlocks*retaddr *label174 (h:*label174)
   556 call *label9 *invalid :supplyBlocks*retval (m:*label174) (h:*label174)
   557 label *label174
   558 jump *label171 always
-    * ucontrol stop
-    * print "[salmon]"
-    * print "Done"
-    * printflush message1
-    * stop
-    * print .nextBlock
-    * print .totalTargets
-    * print .transportTarget
-    * print .transportItem
-    * print .status1
-    * print .status2
-    * print .status3
-    * print .item2
-    * print .block2
-    * wait 1e12
-    * jump *label13 always
-    * end
   559 label *label0
   560 set .status3 "Moving..."
   561 op sub *tmp162 :moveTo:radius 0.5
 
   567 jump *label372 equal *tmp160 false
   568 label *label180
   569 return :moveTo*retaddr
-    * end
   570 label *label1
   571 set :moveTo:x :moveTo.1:x
   572 set :moveTo:y :moveTo.1:y
 
   575 call *label0 *invalid :moveTo*retval (m:*label182) (h:*label182)
   576 label *label182
   577 return :moveTo.1*retaddr
-    * end
   578 label *label2
   579 sensor *tmp165 @unit @firstItem
   580 jump *label184 equal *tmp165 null
 
   593 jump *label373 notEqual *tmp168 null
   594 label *label189
   595 return :moveToEmpty*retaddr
-    * end
   596 label *label3
   597 sensor *tmp170 :moveToBlock:block @x
   598 sensor *tmp171 :moveToBlock:block @y
 
   603 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   604 label *label191
   605 return :moveToBlock*retaddr
-    * end
   606 label *label4
   607 set .status3 "Depositing..."
   608 sensor *tmp172 @unit @firstItem
 
   625 jump *label195 greaterThanEq *tmp179 :depositItems:cap
   626 sensor *tmp182 @unit @firstItem
   627 jump *label199 notEqual *tmp182 null
-    * label *label201
   628 jump *label195 always
   629 label *label194
   630 sensor *tmp184 @unit @firstItem
 
   637 label *label195
   638 set .transportTarget 0
   639 return :depositItems*retaddr
-    * end
   640 label *label5
   641 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp186 0
   642 jump *label208 notEqual *tmp186 false
 
   647 stop
   648 label *label208
   649 return :locateOre*retaddr
-    * end
   650 label *label6
   651 set .transportTarget :mineOre:amount
   652 set .transportItem :mineOre:ore
 
   680 call *label4 *invalid :depositItems*retval (m:*label220) (h:*label220)
   681 label *label220
   682 return :mineOre*retaddr
-    * end
   683 label *label7
   684 set :mineOre:ore :mineOre.1:ore
   685 set :mineOre:amount 30
 
   688 call *label6 *invalid :mineOre*retval (m:*label222) (h:*label222)
   689 label *label222
   690 return :mineOre.1*retaddr
-    * end
   691 label *label8
   692 sensor .transportTarget :fetchBlock:block @itemCapacity
   693 set .transportItem :fetchBlock:item
 
   722 call *label4 *invalid :depositItems*retval (m:*label231) (h:*label231)
   723 label *label231
   724 return :fetchBlock*retaddr
-    * end
   725 label *label9
   726 set :supplyBlocks:supplied false
   727 jump *label233 notEqual .unloader1 null
 
   808 label *label270
   809 label *label268
   810 set :supplyBlocks:supplied true
-    * label *label263
   811 jump *label234 always
   812 label *label233
   813 jump *label271 equal .processor null
 
   893 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   894 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   895 label *label307
-    * label *label301
-    * label *label297
-    * label *label292
-    * label *label287
-    * label *label280
   896 return :supplyBlocks*retaddr
   897 label *label277
   898 set .status1 "Fetching titanium"
 
   902 call *label8 *invalid :fetchBlock*retval (m:*label309) (h:*label309)
   903 label *label309
   904 label *label278
-    * label *label232
   905 return :supplyBlocks*retaddr
-    * end
   906 label *label10
   907 set .nextBlock :meetTarget:block
   908 set .copperTarget :meetTarget:copper
 
   991 jump *label375 notEqual *tmp314 false
   992 label *label326
   993 return :meetTarget*retaddr
-    * end
   994 label *label11
   995 set :moveTo.1:x :buildBlockAt:x
   996 set :moveTo.1:y :buildBlockAt:y
 
  1026 jump *label338 notEqual :buildBlockAt:type :buildBlockAt:block
  1027 label *label340
  1028 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label328
  1029 return :buildBlockAt*retaddr
-    * end
  1030 label *label12
  1031 set :meetTarget:block :buildBlock:block
  1032 set :meetTarget:copper :buildBlock:copper
 
  1049 label *label345
  1050 set :buildBlock*retval :buildBlockAt*retval
  1051 return :buildBlock*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
    22 set .titaniumTrigger 7
    23 set *signature "0:v1"
    24 set .powerTarget 400
-    * label *label13
    25 label *label15
    26 ubind @poly
    27 ulocate building core false @copper .coreX .coreY 0 .core

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    41 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    42 label *label23
    43 set *tmp16 :buildBlock*retval
-    * jump *label18 always
    44 label *label18
    45 set .press *tmp16
    46 set :buildBlock:block @battery
 
    58 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    59 label *label29
    60 set *tmp20 :buildBlock*retval
-    * jump *label24 always
    61 label *label24
    62 set .battery *tmp20
    63 set :buildBlock:block @combustion-generator
 
    75 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    76 label *label35
    77 set *tmp24 :buildBlock*retval
-    * jump *label30 always
    78 label *label30
    79 set .generator *tmp24
    80 set :buildBlock:block @battery
 
    91 op add :buildBlock:y .coreY 4
    92 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    93 label *label41
-    * jump *label36 always
    94 label *label36
    95 set :buildBlock:block @silicon-smelter
    96 set :buildBlock:copper 30
 
   107 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   108 label *label47
   109 set *tmp32 :buildBlock*retval
-    * jump *label42 always
   110 label *label42
   111 set .smelter *tmp32
   112 set :buildTitaniumDrillCfg:distance 32
 
   351 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   352 label *label104
   353 set *tmp110 :buildBlock*retval
-    * jump *label99 always
   354 label *label99
   355 set .unloader1 *tmp110
   356 set :buildBlock:block @power-node
 
   367 op add :buildBlock:y .coreY -2
   368 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   369 label *label110
-    * jump *label105 always
   370 label *label105
   371 set :buildBlock:block @micro-processor
   372 set :buildBlock:copper 90
 
   383 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   384 label *label116
   385 set *tmp118 :buildBlock*retval
-    * jump *label111 always
   386 label *label111
   387 set .processor *tmp118
   388 write .core *tmp118 ".core"
 
   405 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   406 label *label122
   407 set *tmp123 :buildBlock*retval
-    * jump *label117 always
   408 label *label117
   409 write *tmp123 *tmp118 ".factory"
   410 set :buildBlock:block @unloader
 
   422 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   423 label *label128
   424 set *tmp127 :buildBlock*retval
-    * jump *label123 always
   425 label *label123
   426 write *tmp127 *tmp118 ".unloader2"
   427 set :buildBlock:block @overflow-gate
 
   438 op add :buildBlock:y .coreY 1
   439 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   440 label *label134
-    * jump *label129 always
   441 label *label129
   442 write @mono *tmp118 ".unitToProduce"
   443 set :buildBlock:block @unloader
 
   454 set :buildBlock:y .coreY
   455 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   456 label *label140
-    * jump *label135 always
   457 label *label135
   458 set :buildBlock:block @kiln
   459 set :buildBlock:copper 60
 
   469 op add :buildBlock:y .coreY 0.5
   470 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   471 label *label146
-    * jump *label141 always
   472 label *label141
   473 write null *tmp118 ".kiln"
   474 set :buildBlock:block @junction
 
   485 op add :buildBlock:y .coreY 1
   486 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   487 label *label152
-    * jump *label147 always
   488 label *label147
   489 set :buildBlock:block @water-extractor
   490 set :buildBlock:copper 30
 
   500 op add :buildBlock:y .coreY 4.5
   501 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   502 label *label158
-    * jump *label153 always
   503 label *label153
   504 set :buildBlock:block @steam-generator
   505 set :buildBlock:copper 35
 
   516 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   517 label *label164
   518 set *tmp151 :buildBlock*retval
-    * jump *label159 always
   519 label *label159
   520 write *tmp151 *tmp118 ".generator2"
   521 set :buildBlock:block @sorter
 
   532 op add :buildBlock:y .coreY 1
   533 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   534 label *label170
-    * jump *label165 always
   535 label *label165
   536 label *label171
   537 setaddr :supplyBlocks*retaddr *label174 (h:*label174)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    41 call *label12 *invalid :buildBlock*retval (m:*label23) (h:*label23)
    42 label *label23
    43 set *tmp16 :buildBlock*retval
-    * label *label18
    44 set .press *tmp16
    45 set :buildBlock:block @battery
    46 set :buildBlock:copper 5
 
    57 call *label12 *invalid :buildBlock*retval (m:*label29) (h:*label29)
    58 label *label29
    59 set *tmp20 :buildBlock*retval
-    * label *label24
    60 set .battery *tmp20
    61 set :buildBlock:block @combustion-generator
    62 set :buildBlock:copper 25
 
    73 call *label12 *invalid :buildBlock*retval (m:*label35) (h:*label35)
    74 label *label35
    75 set *tmp24 :buildBlock*retval
-    * label *label30
    76 set .generator *tmp24
    77 set :buildBlock:block @battery
    78 set :buildBlock:copper 5
 
    88 op add :buildBlock:y .coreY 4
    89 call *label12 *invalid :buildBlock*retval (m:*label41) (h:*label41)
    90 label *label41
-    * label *label36
    91 set :buildBlock:block @silicon-smelter
    92 set :buildBlock:copper 30
    93 set :buildBlock:lead 25
 
   103 call *label12 *invalid :buildBlock*retval (m:*label47) (h:*label47)
   104 label *label47
   105 set *tmp32 :buildBlock*retval
-    * label *label42
   106 set .smelter *tmp32
   107 set :buildTitaniumDrillCfg:distance 32
   108 set :buildTitaniumDrillCfg:angle 0
 
   346 call *label12 *invalid :buildBlock*retval (m:*label104) (h:*label104)
   347 label *label104
   348 set *tmp110 :buildBlock*retval
-    * label *label99
   349 set .unloader1 *tmp110
   350 set :buildBlock:block @power-node
   351 set :buildBlock:copper 2
 
   361 op add :buildBlock:y .coreY -2
   362 call *label12 *invalid :buildBlock*retval (m:*label110) (h:*label110)
   363 label *label110
-    * label *label105
   364 set :buildBlock:block @micro-processor
   365 set :buildBlock:copper 90
   366 set :buildBlock:lead 50
 
   376 call *label12 *invalid :buildBlock*retval (m:*label116) (h:*label116)
   377 label *label116
   378 set *tmp118 :buildBlock*retval
-    * label *label111
   379 set .processor *tmp118
   380 write .core *tmp118 ".core"
   381 write *tmp20 *tmp118 ".battery"
 
   397 call *label12 *invalid :buildBlock*retval (m:*label122) (h:*label122)
   398 label *label122
   399 set *tmp123 :buildBlock*retval
-    * label *label117
   400 write *tmp123 *tmp118 ".factory"
   401 set :buildBlock:block @unloader
   402 set :buildBlock:copper 0
 
   413 call *label12 *invalid :buildBlock*retval (m:*label128) (h:*label128)
   414 label *label128
   415 set *tmp127 :buildBlock*retval
-    * label *label123
   416 write *tmp127 *tmp118 ".unloader2"
   417 set :buildBlock:block @overflow-gate
   418 set :buildBlock:copper 4
 
   428 op add :buildBlock:y .coreY 1
   429 call *label12 *invalid :buildBlock*retval (m:*label134) (h:*label134)
   430 label *label134
-    * label *label129
   431 write @mono *tmp118 ".unitToProduce"
   432 set :buildBlock:block @unloader
   433 set :buildBlock:copper 0
 
   443 set :buildBlock:y .coreY
   444 call *label12 *invalid :buildBlock*retval (m:*label140) (h:*label140)
   445 label *label140
-    * label *label135
   446 set :buildBlock:block @kiln
   447 set :buildBlock:copper 60
   448 set :buildBlock:lead 30
 
   457 op add :buildBlock:y .coreY 0.5
   458 call *label12 *invalid :buildBlock*retval (m:*label146) (h:*label146)
   459 label *label146
-    * label *label141
   460 write null *tmp118 ".kiln"
   461 set :buildBlock:block @junction
   462 set :buildBlock:copper 3
 
   472 op add :buildBlock:y .coreY 1
   473 call *label12 *invalid :buildBlock*retval (m:*label152) (h:*label152)
   474 label *label152
-    * label *label147
   475 set :buildBlock:block @water-extractor
   476 set :buildBlock:copper 30
   477 set :buildBlock:lead 30
 
   486 op add :buildBlock:y .coreY 4.5
   487 call *label12 *invalid :buildBlock*retval (m:*label158) (h:*label158)
   488 label *label158
-    * label *label153
   489 set :buildBlock:block @steam-generator
   490 set :buildBlock:copper 35
   491 set :buildBlock:lead 40
 
   501 call *label12 *invalid :buildBlock*retval (m:*label164) (h:*label164)
   502 label *label164
   503 set *tmp151 :buildBlock*retval
-    * label *label159
   504 write *tmp151 *tmp118 ".generator2"
   505 set :buildBlock:block @sorter
   506 set :buildBlock:copper 2
 
   516 op add :buildBlock:y .coreY 1
   517 call *label12 *invalid :buildBlock*retval (m:*label170) (h:*label170)
   518 label *label170
-    * label *label165
   519 label *label171
   520 setaddr :supplyBlocks*retaddr *label174 (h:*label174)
   521 call *label9 *invalid :supplyBlocks*retval (m:*label174) (h:*label174)

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   605 label *label5
   606 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp186 0
   607 jump *label208 notEqual *tmp186 false
-    * print "[salmon]"
-    * print "Cannot locate "
+  608 print "[salmon]Cannot locate "
   609 print :locateOre:ore
   610 printflush message1
   611 stop
 
   972 set :buildBlockAt*retval null
   973 return :buildBlockAt*retaddr
   974 label *label335
-    * print "[salmon]"
-    * print "Cannot build at ("
-    * print :buildBlockAt:x
-    * print ", "
-    * print :buildBlockAt:y
-    * print "), tile already contains "
+  975 print "[salmon]Cannot build at ({0}, {0}), tile already contains "
+  976 format :buildBlockAt:x
+  977 format :buildBlockAt:y
   978 print :buildBlockAt:building
   979 printflush message1
   980 stop

Final code before resolving virtual instructions:

    0:  jump *label457 always 0 0                                    CoreBuilder.mnd: var
    1:  draw triangle message1 processor1 .battery .block2 .copperTa ...
    2:  draw triangle .coreX .coreY .generator .graphiteTarget .item ...
    3:  draw triangle .metaglassTarget .nextBlock .powerTarget .pres ...
    4:  draw triangle .smelter .status1 .status2 .status3 .titaniumT ...
    5:  draw triangle .titanium_drill .totalTargets .transportItem . ...
    6:  draw triangle .updatedSiliconTarget :buildBlock:block :build ...
    7:  draw triangle :buildBlock:metaglass :buildBlock:rotation :bu ...
    8:  draw triangle :buildBlockAt:block :buildBlockAt:building :bu ...
    9:  draw triangle :buildBlockAt:x :buildBlockAt:y :buildTitanium ...
   10:  draw triangle :buildTitaniumDrillCfg:best :buildTitaniumDril ...
   11:  draw triangle :checkOre.2:count :checkOre.1:count :checkOre. ...
   12:  draw triangle :checkOre.3:floor :checkOre:floor :checkOre.1: ...
   13:  draw triangle :depositItems:item :fetchBlock:block :fetchBlo ...
   14:  draw triangle :locateOre:y :locateOreAway:angle :locateOreAw ...
   15:  draw triangle :meetTarget:copper :meetTarget:count :meetTarg ...
   16:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre: ...
   17:  draw triangle :mineOre:x :mineOre:y :moveTo:radius :moveTo.1 ...
   18:  draw triangle :moveTo:y :moveToBlock:block :moveToBlock:radi ...
   19:  draw triangle :supplyBlock:missing :supplyBlock.2:missing :s ...
   20:  draw triangle :supplyBlocks:sand.1 :supplyBlocks:supplied 0  ...
        label *label457                                              ...
   21:  set .press null                                              ...
   22:  set .generator null                                          ...
   23:  set .battery null                                            ...
   24:  set .smelter null                                            ...
   25:  set .titanium_drill null                                     ...
   26:  set .unloader1 null                                          ...
   27:  set .nextBlock ""                                            CoreBuilder.mnd: remote var
   28:  set .copperTarget 0                                          ...
   29:  set .leadTarget 0                                            ...
   30:  set .graphiteTarget 0                                        ...
   31:  set .siliconTarget 0                                         ...
   32:  set .titaniumTarget 0                                        ...
   33:  set .metaglassTarget 0                                       ...
   34:  set .totalTargets 0                                          ...
   35:  set .powerTarget 0                                           ...
   36:  set .transportTarget 0                                       ...
   37:  set .transportItem null                                      ...
   38:  set .status1 ""                                              ...
   39:  set .status2 ""                                              ...
   40:  set .item2 ""                                                ...
   41:  set .block2 ""                                               ...
   42:  set .status3 ""                                              ...
   43:  set .titaniumTrigger 7                                       CoreBuilder.mnd: var
   44:  set *signature "0:v1"                                        CoreBuilder.mnd: #set target = 8;
   45:  set .powerTarget 400                                         ...
        label *label15                                               CoreBuilder.mnd: do
   46:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   47:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   48:  jump *label15 equal .core null                               CoreBuilder.mnd: do
   49:  set :buildBlock:block @graphite-press                        CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   50:  set :buildBlock:copper 75                                    ...
   51:  set :buildBlock:lead 30                                      ...
   52:  set :buildBlock:graphite 0                                   ...
   53:  set :buildBlock:silicon 0                                    ...
   54:  set :buildBlock:titanium 0                                   ...
   55:  set :buildBlock:metaglass 0                                  ...
   56:  set :buildBlock:rotation 0                                   ...
   57:  set :buildBlock:config null                                  ...
   58:  setaddr :buildBlock*retaddr *label23                         ...
   59:  op add :buildBlock:x .coreX -1.5                             CoreBuilder.mnd: var x = coreX + offsetX;
   60:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
   61:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label23                                               ...
   62:  set *tmp16 :buildBlock*retval                                ...
   63:  set .press *tmp16                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   64:  set :buildBlock:block @battery                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   65:  set :buildBlock:copper 5                                     ...
   66:  set :buildBlock:lead 20                                      ...
   67:  set :buildBlock:graphite 0                                   ...
   68:  set :buildBlock:silicon 0                                    ...
   69:  set :buildBlock:titanium 0                                   ...
   70:  set :buildBlock:metaglass 0                                  ...
   71:  set :buildBlock:rotation 0                                   ...
   72:  set :buildBlock:config null                                  ...
   73:  setaddr :buildBlock*retaddr *label29                         ...
   74:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
   75:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
   76:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label29                                               ...
   77:  set *tmp20 :buildBlock*retval                                ...
   78:  set .battery *tmp20                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   79:  set :buildBlock:block @combustion-generator                  CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   80:  set :buildBlock:copper 25                                    ...
   81:  set :buildBlock:lead 15                                      ...
   82:  set :buildBlock:graphite 0                                   ...
   83:  set :buildBlock:silicon 0                                    ...
   84:  set :buildBlock:titanium 0                                   ...
   85:  set :buildBlock:metaglass 0                                  ...
   86:  set :buildBlock:rotation 0                                   ...
   87:  set :buildBlock:config null                                  ...
   88:  setaddr :buildBlock*retaddr *label35                         ...
   89:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
   90:  op add :buildBlock:y .coreY 3                                CoreBuilder.mnd: var y = coreY + offsetY;
   91:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label35                                               ...
   92:  set *tmp24 :buildBlock*retval                                ...
   93:  set .generator *tmp24                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   94:  set :buildBlock:block @battery                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   95:  set :buildBlock:copper 5                                     ...
   96:  set :buildBlock:lead 20                                      ...
   97:  set :buildBlock:graphite 0                                   ...
   98:  set :buildBlock:silicon 0                                    ...
   99:  set :buildBlock:titanium 0                                   ...
  100:  set :buildBlock:metaglass 0                                  ...
  101:  set :buildBlock:rotation 0                                   ...
  102:  set :buildBlock:config null                                  ...
  103:  setaddr :buildBlock*retaddr *label41                         ...
  104:  op add :buildBlock:x .coreX -1                               CoreBuilder.mnd: var x = coreX + offsetX;
  105:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
  106:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label41                                               ...
  107:  set :buildBlock:block @silicon-smelter                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  108:  set :buildBlock:copper 30                                    ...
  109:  set :buildBlock:lead 25                                      ...
  110:  set :buildBlock:graphite 0                                   ...
  111:  set :buildBlock:silicon 0                                    ...
  112:  set :buildBlock:titanium 0                                   ...
  113:  set :buildBlock:metaglass 0                                  ...
  114:  set :buildBlock:rotation 0                                   ...
  115:  set :buildBlock:config null                                  ...
  116:  setaddr :buildBlock*retaddr *label47                         ...
  117:  op add :buildBlock:x .coreX 1.5                              CoreBuilder.mnd: var x = coreX + offsetX;
  118:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  119:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label47                                               ...
  120:  set *tmp32 :buildBlock*retval                                ...
  121:  set .smelter *tmp32                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  122:  set :buildTitaniumDrillCfg:distance 32                       CoreBuilder.mnd: var distance = 32;
  123:  set :buildTitaniumDrillCfg:angle 0                           CoreBuilder.mnd: var angle = 0;
  124:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
  125:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: var minimum = 3;
        label *label50                                               CoreBuilder.mnd: while true do
  126:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  127:  set :meetTarget:copper 18                                    ...
  128:  set :meetTarget:lead 0                                       ...
  129:  set :meetTarget:graphite 10                                  ...
  130:  set :meetTarget:silicon 0                                    ...
  131:  set :meetTarget:titanium 0                                   ...
  132:  set :meetTarget:metaglass 0                                  ...
  133:  setaddr :meetTarget*retaddr *label53                         ...
  134:  call *label10 *invalid :meetTarget*retval                    ...
        label *label53                                               ...
  135:  set :locateOreAway:distance :buildTitaniumDrillCfg:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  136:  set :locateOreAway:angle :buildTitaniumDrillCfg:angle        ...
        label *label55                                               CoreBuilder.mnd: while true do
  137:  set :locateOre:ore @titanium                                 CoreBuilder.mnd: locateOre(ore, out x, out y);
  138:  setaddr :locateOre*retaddr *label58                          ...
  139:  call *label5 *invalid :locateOre*retval                      ...
        label *label58                                               ...
  140:  set :locateOreAway:x :locateOre:x                            ...
  141:  set :locateOreAway:y :locateOre:y                            ...
  142:  op sub *tmp39 :locateOre:x .coreX                            CoreBuilder.mnd: if abs(x - coreX) >= 8 or abs(y - coreY) >= 8 then break; end;
  143:  op abs *tmp40 *tmp39 0                                       ...
  144:  op greaterThanEq *tmp41 *tmp40 8                             ...
  145:  op sub *tmp42 :locateOre:y .coreY                            ...
  146:  op abs *tmp43 *tmp42 0                                       ...
  147:  op greaterThanEq *tmp44 *tmp43 8                             ...
  148:  op or *tmp45 *tmp41 *tmp44                                   ...
  149:  jump *label57 notEqual *tmp45 false                          ...
  150:  sensor *tmp48 @unit @x                                       CoreBuilder.mnd: moveTo(@unit.@x + sin(angle) * distance, @unit.@y + cos(angle) * distance);
  151:  op sin *tmp49 :locateOreAway:angle 0                         ...
  152:  op mul *tmp50 *tmp49 :locateOreAway:distance                 ...
  153:  op add *tmp51 *tmp48 *tmp50                                  ...
  154:  sensor *tmp52 @unit @y                                       ...
  155:  op cos *tmp53 :locateOreAway:angle 0                         ...
  156:  op mul *tmp54 *tmp53 :locateOreAway:distance                 ...
  157:  op add *tmp55 *tmp52 *tmp54                                  ...
  158:  set :moveTo.1:x *tmp51                                       ...
  159:  set :moveTo.1:y *tmp55                                       ...
  160:  setaddr :moveTo.1*retaddr *label62                           ...
  161:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label62                                               ...
  162:  op add :locateOreAway:distance :locateOreAway:distance 4     CoreBuilder.mnd: distance += 4;
  163:  op add :locateOreAway:angle :locateOreAway:angle 45          CoreBuilder.mnd: angle += 45;
  164:  jump *label55 always 0 0                                     CoreBuilder.mnd: while true do
        label *label57                                               ...
  165:  set :buildTitaniumDrillCfg:distance :locateOreAway:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  166:  set :buildTitaniumDrillCfg:angle :locateOreAway:angle        ...
  167:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  168:  set :moveTo.1:y :locateOreAway:y                             ...
  169:  setaddr :moveTo.1*retaddr *label63                           ...
  170:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label63                                               ...
  171:  set :buildTitaniumDrillCfg:ax :locateOreAway:x               CoreBuilder.mnd: var ax = x, ay = y;
  172:  set :buildTitaniumDrillCfg:ay :locateOreAway:y               ...
  173:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, dx = 0, dy = 0;
  174:  set :buildTitaniumDrillCfg:dx 0                              ...
  175:  set :buildTitaniumDrillCfg:dy 0                              ...
  176:  set :buildTitaniumDrillCfg:searches 0                        CoreBuilder.mnd: SearchLoop:
        label *label346                                              ...
  177:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax : CoreBuilder.mnd: ax += dx;
  178:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay : CoreBuilder.mnd: ay += dy;
  179:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: best = 0;
  180:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  181:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  182:  jump *label377 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  183:  set :checkOre:count 1                                        ...
        label *label377                                              ...
  184:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  185:  set :checkOre.1:count :checkOre:count                        ...
  186:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  187:  jump *label380 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  188:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label380                                              ...
  189:  op add *tmp70 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  190:  set :checkOre.2:count :checkOre.1:count                      ...
  191:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  192:  jump *label383 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  193:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label383                                              ...
  194:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  195:  ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  196:  jump *label386 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  197:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label386                                              ...
  198:  jump *label391 lessThanEq :checkOre.3:count 0                CoreBuilder.mnd: if count > best then
  199:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  200:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  201:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  202:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label391                                              CoreBuilder.mnd: if count > best then
  203:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  204:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  205:  jump *label397 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  206:  set :checkOre:count 1                                        ...
        label *label397                                              ...
  207:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  208:  set :checkOre.1:count :checkOre:count                        ...
  209:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  210:  jump *label400 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  211:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label400                                              ...
  212:  op add *tmp70 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  213:  set :checkOre.2:count :checkOre.1:count                      ...
  214:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  215:  jump *label403 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  216:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label403                                              ...
  217:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  218:  ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  219:  jump *label406 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  220:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label406                                              ...
  221:  jump *label411 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  222:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  223:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  224:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  225:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label411                                              CoreBuilder.mnd: if count > best then
  226:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  227:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  228:  jump *label417 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  229:  set :checkOre:count 1                                        ...
        label *label417                                              ...
  230:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  231:  set :checkOre.1:count :checkOre:count                        ...
  232:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  233:  jump *label420 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  234:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label420                                              ...
  235:  op add *tmp70 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  236:  set :checkOre.2:count :checkOre.1:count                      ...
  237:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  238:  jump *label423 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  239:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label423                                              ...
  240:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  241:  ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  242:  jump *label426 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  243:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label426                                              ...
  244:  jump *label431 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  245:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  246:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  247:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  248:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label431                                              CoreBuilder.mnd: if count > best then
  249:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  250:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  251:  jump *label437 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  252:  set :checkOre:count 1                                        ...
        label *label437                                              ...
  253:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  254:  set :checkOre.1:count :checkOre:count                        ...
  255:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  256:  jump *label440 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  257:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label440                                              ...
  258:  op add *tmp70 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  259:  set :checkOre.2:count :checkOre.1:count                      ...
  260:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp70 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  261:  jump *label443 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  262:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label443                                              ...
  263:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  264:  ucontrol getBlock :checkOre.1:x *tmp70 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  265:  jump *label446 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  266:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label446                                              ...
  267:  jump *label451 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  268:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  269:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  270:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  271:  jump *label66 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label451                                              CoreBuilder.mnd: if count > best then
  272:  op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCf CoreBuilder.mnd: SearchLoop:
  273:  jump *label346 lessThan :buildTitaniumDrillCfg:searches 5    ...
        label *label66                                               ...
  274:  jump *label90 lessThanEq :buildTitaniumDrillCfg:best :buildT CoreBuilder.mnd: if best > minimum then
  275:  op div *tmp91 :buildTitaniumDrillCfg:dx 2                    CoreBuilder.mnd: ax = ax + dx / 2;
  276:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax * ...
  277:  op div *tmp93 :buildTitaniumDrillCfg:dy 2                    CoreBuilder.mnd: ay = ay + dy / 2;
  278:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay * ...
  279:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, ax, ay, null, 0, true);
  280:  set :buildBlockAt:x :buildTitaniumDrillCfg:ax                ...
  281:  set :buildBlockAt:y :buildTitaniumDrillCfg:ay                ...
  282:  set :buildBlockAt:rotation null                              ...
  283:  set :buildBlockAt:config 0                                   ...
  284:  set :buildBlockAt:skipError true                             ...
  285:  setaddr :buildBlockAt*retaddr *label92                       ...
  286:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label92                                               ...
  287:  jump *label93 equal :buildBlockAt*retval null                CoreBuilder.mnd: if result != null then return result; end;
  288:  set *tmp37 :buildBlockAt*retval                              ...
  289:  jump *label49 always 0 0                                     ...
        label *label93                                               ...
  290:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  291:  jump *label52 always 0 0                                     CoreBuilder.mnd: break;
        label *label90                                               CoreBuilder.mnd: if best > minimum then
  292:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  293:  jump *label50 lessThanEq :buildTitaniumDrillCfg:attempts 5   ...
  294:  sensor *tmp100 @unit @x                                      CoreBuilder.mnd: moveTo(@unit.@x + sin(angle) * distance, @unit.@y + cos(angle) * distance);
  295:  op sin *tmp101 :locateOreAway:angle 0                        ...
  296:  op mul *tmp102 *tmp101 :locateOreAway:distance               ...
  297:  op add *tmp103 *tmp100 *tmp102                               ...
  298:  sensor *tmp104 @unit @y                                      ...
  299:  op cos *tmp105 :locateOreAway:angle 0                        ...
  300:  op mul *tmp106 *tmp105 :locateOreAway:distance               ...
  301:  op add *tmp107 *tmp104 *tmp106                               ...
  302:  set :moveTo.1:x *tmp103                                      ...
  303:  set :moveTo.1:y *tmp107                                      ...
  304:  setaddr :moveTo.1*retaddr *label98                           ...
  305:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label98                                               ...
  306:  op add :buildTitaniumDrillCfg:distance :locateOreAway:distan CoreBuilder.mnd: distance += 4;
  307:  op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45  CoreBuilder.mnd: angle += 45;
  308:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  309:  op sub *tmp108 :buildTitaniumDrillCfg:minimum 1              CoreBuilder.mnd: minimum = max(minimum - 1, 1);
  310:  op max :buildTitaniumDrillCfg:minimum *tmp108 1              ...
  311:  jump *label50 always 0 0                                     CoreBuilder.mnd: while true do
        label *label52                                               ...
  312:  set *tmp37 null                                              CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEU_DRILL);
        label *label49                                               ...
  313:  set .titanium_drill *tmp37                                   CoreBuilder.mnd: titanium_drill = buildTitaniumDrill();
  314:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  315:  set :buildBlock:copper 0                                     ...
  316:  set :buildBlock:lead 0                                       ...
  317:  set :buildBlock:graphite 0                                   ...
  318:  set :buildBlock:silicon 30                                   ...
  319:  set :buildBlock:titanium 25                                  ...
  320:  set :buildBlock:metaglass 0                                  ...
  321:  set :buildBlock:rotation 0                                   ...
  322:  set :buildBlock:config null                                  ...
  323:  setaddr :buildBlock*retaddr *label104                        ...
  324:  set :buildBlock:x .coreX                                     CoreBuilder.mnd: var x = coreX + offsetX;
  325:  op add :buildBlock:y .coreY 2                                CoreBuilder.mnd: var y = coreY + offsetY;
  326:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label104                                              ...
  327:  set *tmp110 :buildBlock*retval                               ...
  328:  set .unloader1 *tmp110                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  329:  set :buildBlock:block @power-node                            CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  330:  set :buildBlock:copper 2                                     ...
  331:  set :buildBlock:lead 6                                       ...
  332:  set :buildBlock:graphite 0                                   ...
  333:  set :buildBlock:silicon 0                                    ...
  334:  set :buildBlock:titanium 0                                   ...
  335:  set :buildBlock:metaglass 0                                  ...
  336:  set :buildBlock:rotation 0                                   ...
  337:  set :buildBlock:config null                                  ...
  338:  setaddr :buildBlock*retaddr *label110                        ...
  339:  op add :buildBlock:x .coreX -1                               CoreBuilder.mnd: var x = coreX + offsetX;
  340:  op add :buildBlock:y .coreY -2                               CoreBuilder.mnd: var y = coreY + offsetY;
  341:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label110                                              ...
  342:  set :buildBlock:block @micro-processor                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  343:  set :buildBlock:copper 90                                    ...
  344:  set :buildBlock:lead 50                                      ...
  345:  set :buildBlock:graphite 0                                   ...
  346:  set :buildBlock:silicon 50                                   ...
  347:  set :buildBlock:titanium 0                                   ...
  348:  set :buildBlock:metaglass 0                                  ...
  349:  set :buildBlock:rotation 0                                   ...
  350:  setaddr :buildBlock*retaddr *label116                        ...
  351:  op add :buildBlock:x .coreX 1                                CoreBuilder.mnd: var x = coreX + offsetX;
  352:  op add :buildBlock:y .coreY 4                                CoreBuilder.mnd: var y = coreY + offsetY;
  353:  set :buildBlock:config processor1                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  354:  call *label12 *invalid :buildBlock*retval                    ...
        label *label116                                              ...
  355:  set *tmp118 :buildBlock*retval                               ...
  356:  set .processor *tmp118                                       CoreBuilder.mnd: processor = buildBlockFromCfg(ref PROCESSOR);
  357:  write .core *tmp118 ".core"                                  CoreBuilder.mnd: processor.core = core;
  358:  write *tmp20 *tmp118 ".battery"                              CoreBuilder.mnd: processor.battery = battery;
  359:  write *tmp24 *tmp118 ".generator"                            CoreBuilder.mnd: processor.generator = generator;
  360:  write *tmp32 *tmp118 ".smelter"                              CoreBuilder.mnd: processor.smelter = smelter;
  361:  write *tmp16 *tmp118 ".press"                                CoreBuilder.mnd: processor.press = press;
  362:  set :buildBlock:block @air-factory                           CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  363:  set :buildBlock:copper 60                                    ...
  364:  set :buildBlock:lead 70                                      ...
  365:  set :buildBlock:graphite 0                                   ...
  366:  set :buildBlock:silicon 0                                    ...
  367:  set :buildBlock:titanium 0                                   ...
  368:  set :buildBlock:metaglass 0                                  ...
  369:  set :buildBlock:rotation 3                                   ...
  370:  set :buildBlock:config @mono                                 ...
  371:  setaddr :buildBlock*retaddr *label122                        ...
  372:  op add :buildBlock:x .coreX -4                               CoreBuilder.mnd: var x = coreX + offsetX;
  373:  op add :buildBlock:y .coreY -1                               CoreBuilder.mnd: var y = coreY + offsetY;
  374:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label122                                              ...
  375:  set *tmp123 :buildBlock*retval                               ...
  376:  write *tmp123 *tmp118 ".factory"                             CoreBuilder.mnd: processor.factory = factory;
  377:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  378:  set :buildBlock:copper 0                                     ...
  379:  set :buildBlock:lead 0                                       ...
  380:  set :buildBlock:graphite 0                                   ...
  381:  set :buildBlock:silicon 30                                   ...
  382:  set :buildBlock:titanium 25                                  ...
  383:  set :buildBlock:metaglass 0                                  ...
  384:  set :buildBlock:rotation 0                                   ...
  385:  set :buildBlock:config null                                  ...
  386:  setaddr :buildBlock*retaddr *label128                        ...
  387:  op add :buildBlock:x .coreX -2                               CoreBuilder.mnd: var x = coreX + offsetX;
  388:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  389:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label128                                              ...
  390:  set *tmp127 :buildBlock*retval                               ...
  391:  write *tmp127 *tmp118 ".unloader2"                           CoreBuilder.mnd: processor.unloader2 = unloader2;
  392:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  393:  set :buildBlock:copper 4                                     ...
  394:  set :buildBlock:lead 2                                       ...
  395:  set :buildBlock:graphite 0                                   ...
  396:  set :buildBlock:silicon 0                                    ...
  397:  set :buildBlock:titanium 0                                   ...
  398:  set :buildBlock:metaglass 0                                  ...
  399:  set :buildBlock:rotation 0                                   ...
  400:  set :buildBlock:config null                                  ...
  401:  setaddr :buildBlock*retaddr *label134                        ...
  402:  op add :buildBlock:x .coreX -3                               CoreBuilder.mnd: var x = coreX + offsetX;
  403:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  404:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label134                                              ...
  405:  write @mono *tmp118 ".unitToProduce"                         CoreBuilder.mnd: processor.unitToProduce = @mono;
  406:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  407:  set :buildBlock:copper 0                                     ...
  408:  set :buildBlock:lead 0                                       ...
  409:  set :buildBlock:graphite 0                                   ...
  410:  set :buildBlock:silicon 30                                   ...
  411:  set :buildBlock:titanium 25                                  ...
  412:  set :buildBlock:metaglass 0                                  ...
  413:  set :buildBlock:rotation 0                                   ...
  414:  set :buildBlock:config null                                  ...
  415:  setaddr :buildBlock*retaddr *label140                        ...
  416:  op add :buildBlock:x .coreX 2                                CoreBuilder.mnd: var x = coreX + offsetX;
  417:  set :buildBlock:y .coreY                                     CoreBuilder.mnd: var y = coreY + offsetY;
  418:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label140                                              ...
  419:  set :buildBlock:block @kiln                                  CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  420:  set :buildBlock:copper 60                                    ...
  421:  set :buildBlock:lead 30                                      ...
  422:  set :buildBlock:graphite 30                                  ...
  423:  set :buildBlock:silicon 0                                    ...
  424:  set :buildBlock:titanium 0                                   ...
  425:  set :buildBlock:metaglass 0                                  ...
  426:  set :buildBlock:rotation 0                                   ...
  427:  set :buildBlock:config null                                  ...
  428:  setaddr :buildBlock*retaddr *label146                        ...
  429:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: var x = coreX + offsetX;
  430:  op add :buildBlock:y .coreY 0.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  431:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label146                                              ...
  432:  write null *tmp118 ".kiln"                                   CoreBuilder.mnd: processor.kiln = kiln;
  433:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  434:  set :buildBlock:copper 3                                     ...
  435:  set :buildBlock:lead 0                                       ...
  436:  set :buildBlock:graphite 0                                   ...
  437:  set :buildBlock:silicon 0                                    ...
  438:  set :buildBlock:titanium 0                                   ...
  439:  set :buildBlock:metaglass 0                                  ...
  440:  set :buildBlock:rotation 0                                   ...
  441:  set :buildBlock:config null                                  ...
  442:  setaddr :buildBlock*retaddr *label152                        ...
  443:  op add :buildBlock:x .coreX 2                                CoreBuilder.mnd: var x = coreX + offsetX;
  444:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  445:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label152                                              ...
  446:  set :buildBlock:block @water-extractor                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  447:  set :buildBlock:copper 30                                    ...
  448:  set :buildBlock:lead 30                                      ...
  449:  set :buildBlock:graphite 30                                  ...
  450:  set :buildBlock:silicon 0                                    ...
  451:  set :buildBlock:titanium 0                                   ...
  452:  set :buildBlock:metaglass 30                                 ...
  453:  set :buildBlock:rotation 0                                   ...
  454:  set :buildBlock:config null                                  ...
  455:  setaddr :buildBlock*retaddr *label158                        ...
  456:  op add :buildBlock:x .coreX -3.5                             CoreBuilder.mnd: var x = coreX + offsetX;
  457:  op add :buildBlock:y .coreY 4.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  458:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label158                                              ...
  459:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  460:  set :buildBlock:copper 35                                    ...
  461:  set :buildBlock:lead 40                                      ...
  462:  set :buildBlock:graphite 25                                  ...
  463:  set :buildBlock:silicon 30                                   ...
  464:  set :buildBlock:titanium 0                                   ...
  465:  set :buildBlock:metaglass 0                                  ...
  466:  set :buildBlock:rotation 0                                   ...
  467:  set :buildBlock:config null                                  ...
  468:  setaddr :buildBlock*retaddr *label164                        ...
  469:  op add :buildBlock:x .coreX -3.5                             CoreBuilder.mnd: var x = coreX + offsetX;
  470:  op add :buildBlock:y .coreY 2.5                              CoreBuilder.mnd: var y = coreY + offsetY;
  471:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label164                                              ...
  472:  set *tmp151 :buildBlock*retval                               ...
  473:  write *tmp151 *tmp118 ".generator2"                          CoreBuilder.mnd: processor.generator2 = generator2;
  474:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  475:  set :buildBlock:copper 2                                     ...
  476:  set :buildBlock:lead 2                                       ...
  477:  set :buildBlock:graphite 0                                   ...
  478:  set :buildBlock:silicon 0                                    ...
  479:  set :buildBlock:titanium 0                                   ...
  480:  set :buildBlock:metaglass 0                                  ...
  481:  set :buildBlock:rotation 0                                   ...
  482:  set :buildBlock:config @coal                                 ...
  483:  setaddr :buildBlock*retaddr *label170                        ...
  484:  op add :buildBlock:x .coreX -4                               CoreBuilder.mnd: var x = coreX + offsetX;
  485:  op add :buildBlock:y .coreY 1                                CoreBuilder.mnd: var y = coreY + offsetY;
  486:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label170                                              ...
        label *label171                                              CoreBuilder.mnd: while true do
  487:  setaddr :supplyBlocks*retaddr *label174                      CoreBuilder.mnd: supplyBlocks();
  488:  call *label9 *invalid :supplyBlocks*retval                   ...
        label *label174                                              ...
  489:  jump *label171 always 0 0                                    CoreBuilder.mnd: while true do
        label *label0                                                CoreBuilder.mnd: void moveTo(x, y, radius)
  490:  set .status3 "Moving..."                                     CoreBuilder.mnd: status3 = text;
  491:  op sub *tmp162 :moveTo:radius 0.5                            CoreBuilder.mnd: while !within(x, y, radius) do
  492:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160 0 ...
  493:  jump *label180 notEqual *tmp160 false                        ...
        label *label372                                              ...
  494:  ucontrol approach :moveTo:x :moveTo:y *tmp162 0 0            CoreBuilder.mnd: approach(x, y, radius - 0.5);
  495:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp160 0 CoreBuilder.mnd: while !within(x, y, radius) do
  496:  jump *label372 equal *tmp160 false                           ...
        label *label180                                              ...
  497:  return :moveTo*retaddr                                       CoreBuilder.mnd: void moveTo(x, y, radius)
        label *label1                                                CoreBuilder.mnd: void moveTo(x, y)
  498:  set :moveTo:x :moveTo.1:x                                    CoreBuilder.mnd: moveTo(x, y, REGULAR_RADIUS);
  499:  set :moveTo:y :moveTo.1:y                                    ...
  500:  set :moveTo:radius 5                                         ...
  501:  setaddr :moveTo*retaddr *label182                            ...
  502:  call *label0 *invalid :moveTo*retval                         ...
        label *label182                                              ...
  503:  return :moveTo.1*retaddr                                     CoreBuilder.mnd: void moveTo(x, y)
        label *label2                                                CoreBuilder.mnd: void moveToEmpty(x, y)
  504:  sensor *tmp165 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  505:  jump *label184 equal *tmp165 null                            ...
  506:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label184                                              ...
  507:  set :moveTo.1:x :moveToEmpty:x                               CoreBuilder.mnd: moveTo(x, y);
  508:  set :moveTo.1:y :moveToEmpty:y                               ...
  509:  setaddr :moveTo.1*retaddr *label186                          ...
  510:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label186                                              ...
  511:  sensor *tmp168 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  512:  jump *label189 equal *tmp168 null                            ...
        label *label373                                              ...
  513:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  514:  sensor *tmp168 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  515:  jump *label373 notEqual *tmp168 null                         ...
        label *label189                                              ...
  516:  return :moveToEmpty*retaddr                                  CoreBuilder.mnd: void moveToEmpty(x, y)
        label *label3                                                CoreBuilder.mnd: void moveToBlock(block, radius)
  517:  sensor *tmp170 :moveToBlock:block @x                         CoreBuilder.mnd: moveTo(block.@x, block.@y, radius);
  518:  sensor *tmp171 :moveToBlock:block @y                         ...
  519:  set :moveTo:x *tmp170                                        ...
  520:  set :moveTo:y *tmp171                                        ...
  521:  set :moveTo:radius :moveToBlock:radius                       ...
  522:  setaddr :moveTo*retaddr *label191                            ...
  523:  call *label0 *invalid :moveTo*retval                         ...
        label *label191                                              ...
  524:  return :moveToBlock*retaddr                                  CoreBuilder.mnd: void moveToBlock(block, radius)
        label *label4                                                CoreBuilder.mnd: void depositItems(block, item, fromMining)
  525:  set .status3 "Depositing..."                                 CoreBuilder.mnd: status3 = text;
  526:  sensor *tmp172 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem == item then
  527:  jump *label194 notEqual *tmp172 :depositItems:item           ...
  528:  set *tmp177 5                                                CoreBuilder.mnd: moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
  529:  op equal *tmp175 :depositItems:block .core                   ...
  530:  op land *tmp176 :depositItems:fromMining *tmp175             ...
  531:  jump *label197 equal *tmp176 false                           ...
  532:  set *tmp177 7                                                ...
        label *label197                                              ...
  533:  set :moveToBlock:block :depositItems:block                   ...
  534:  set :moveToBlock:radius *tmp177                              ...
  535:  setaddr :moveToBlock*retaddr *label198                       ...
  536:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label198                                              ...
  537:  sensor :depositItems:cap :depositItems:block @itemCapacity   CoreBuilder.mnd: var cap = block.@itemCapacity;
        label *label199                                              CoreBuilder.mnd: do
  538:  ucontrol itemDrop :depositItems:block 30 0 0 0               CoreBuilder.mnd: itemDrop(block, capacity);
  539:  sensor *tmp179 :depositItems:block :depositItems:item        CoreBuilder.mnd: if block.sensor(item) >= cap then break; end;
  540:  jump *label195 greaterThanEq *tmp179 :depositItems:cap       ...
  541:  sensor *tmp182 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null;
  542:  jump *label199 notEqual *tmp182 null                         CoreBuilder.mnd: do
  543:  jump *label195 always 0 0                                    CoreBuilder.mnd: if @unit.@firstItem == item then
        label *label194                                              ...
  544:  sensor *tmp184 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  545:  jump *label206 equal *tmp184 null                            ...
        label *label374                                              ...
  546:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  547:  sensor *tmp184 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  548:  jump *label374 notEqual *tmp184 null                         ...
        label *label206                                              ...
        label *label195                                              CoreBuilder.mnd: if @unit.@firstItem == item then
  549:  set .transportTarget 0                                       CoreBuilder.mnd: transportTarget = 0;
  550:  return :depositItems*retaddr                                 CoreBuilder.mnd: void depositItems(block, item, fromMining)
        label *label5                                                CoreBuilder.mnd: void locateOre(ore, out x, out y)
  551:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  552:  jump *label208 notEqual *tmp186 false                        ...
  553:  print "[salmon]Cannot locate "                               CoreBuilder.mnd: print("[salmon]", text);
  554:  print :locateOre:ore                                         ...
  555:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  556:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label208                                              CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  557:  return :locateOre*retaddr                                    CoreBuilder.mnd: void locateOre(ore, out x, out y)
        label *label6                                                CoreBuilder.mnd: void mineOre(ore, amount, block)
  558:  set .transportTarget :mineOre:amount                         CoreBuilder.mnd: transportTarget = amount;
  559:  set .transportItem :mineOre:ore                              CoreBuilder.mnd: transportItem = ore;
  560:  set :locateOre:ore :mineOre:ore                              CoreBuilder.mnd: locateOre(ore, out x, out y);
  561:  setaddr :locateOre*retaddr *label212                         ...
  562:  call *label5 *invalid :locateOre*retval                      ...
        label *label212                                              ...
  563:  set :mineOre:x :locateOre:x                                  ...
  564:  set :mineOre:y :locateOre:y                                  ...
  565:  set :moveToEmpty:x :locateOre:x                              CoreBuilder.mnd: moveToEmpty(x, y);
  566:  set :moveToEmpty:y :locateOre:y                              ...
  567:  setaddr :moveToEmpty*retaddr *label213                       ...
  568:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label213                                              ...
  569:  set .status3 "Mining..."                                     CoreBuilder.mnd: status3 = text;
        label *label215                                              CoreBuilder.mnd: do
  570:  sensor :mineOre:item @unit @firstItem                        CoreBuilder.mnd: var item = @unit.@firstItem;
  571:  op notEqual *tmp191 :mineOre:item null                       CoreBuilder.mnd: if item != null && item != ore then break; end;
  572:  op notEqual *tmp192 :mineOre:item :mineOre:ore               ...
  573:  op land *tmp193 *tmp191 *tmp192                              ...
  574:  jump *label217 notEqual *tmp193 false                        ...
  575:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    CoreBuilder.mnd: mine(x, y);
  576:  sensor *tmp195 @unit @totalItems                             CoreBuilder.mnd: while @unit.@totalItems < amount;
  577:  jump *label215 lessThan *tmp195 :mineOre:amount              CoreBuilder.mnd: do
        label *label217                                              ...
  578:  ucontrol unbind 0 0 0 0 0                                    CoreBuilder.mnd: unbind();
  579:  set :depositItems:block :mineOre:block                       CoreBuilder.mnd: depositItems(block, ore, true);
  580:  set :depositItems:item :mineOre:ore                          ...
  581:  set :depositItems:fromMining true                            ...
  582:  setaddr :depositItems*retaddr *label220                      ...
  583:  call *label4 *invalid :depositItems*retval                   ...
        label *label220                                              ...
  584:  return :mineOre*retaddr                                      CoreBuilder.mnd: void mineOre(ore, amount, block)
        label *label7                                                CoreBuilder.mnd: void mineOre(ore)
  585:  set :mineOre:ore :mineOre.1:ore                              CoreBuilder.mnd: mineOre(ore, capacity, core);
  586:  set :mineOre:amount 30                                       ...
  587:  set :mineOre:block .core                                     ...
  588:  setaddr :mineOre*retaddr *label222                           ...
  589:  call *label6 *invalid :mineOre*retval                        ...
        label *label222                                              ...
  590:  return :mineOre.1*retaddr                                    CoreBuilder.mnd: void mineOre(ore)
        label *label8                                                CoreBuilder.mnd: void fetchBlock(block, item)
  591:  sensor .transportTarget :fetchBlock:block @itemCapacity      CoreBuilder.mnd: transportTarget = block.@itemCapacity;
  592:  set .transportItem :fetchBlock:item                          CoreBuilder.mnd: transportItem = item;
  593:  set .status2 "Fetching "                                     CoreBuilder.mnd: status2 = text;
  594:  set .item2 :fetchBlock:item                                  CoreBuilder.mnd: item2 = item;
  595:  set .block2 :fetchBlock:block                                CoreBuilder.mnd: block2 = block;
  596:  sensor *tmp199 :fetchBlock:block @x                          CoreBuilder.mnd: moveToEmpty(block.@x, block.@y);
  597:  sensor *tmp200 :fetchBlock:block @y                          ...
  598:  set :moveToEmpty:x *tmp199                                   ...
  599:  set :moveToEmpty:y *tmp200                                   ...
  600:  setaddr :moveToEmpty*retaddr *label225                       ...
  601:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label225                                              ...
        label *label226                                              CoreBuilder.mnd: do
  602:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  CoreBuilder.mnd: itemTake(block, item, capacity);
  603:  sensor :fetchBlock:unitItem @unit @firstItem                 CoreBuilder.mnd: var unitItem = @unit.@firstItem;
  604:  op notEqual *tmp202 :fetchBlock:unitItem null                CoreBuilder.mnd: if unitItem != null and unitItem != item then
  605:  op notEqual *tmp203 :fetchBlock:unitItem :fetchBlock:item    ...
  606:  op land *tmp204 *tmp202 *tmp203                              ...
  607:  jump *label229 equal *tmp204 false                           ...
  608:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
        label *label229                                              CoreBuilder.mnd: if unitItem != null and unitItem != item then
  609:  sensor *tmp206 @unit :fetchBlock:item                        CoreBuilder.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  610:  op lessThan *tmp207 *tmp206 30                               ...
  611:  sensor *tmp208 :fetchBlock:block :fetchBlock:item            ...
  612:  op land *tmp209 *tmp207 *tmp208                              ...
  613:  jump *label226 notEqual *tmp209 false                        CoreBuilder.mnd: do
  614:  set :depositItems:block .core                                CoreBuilder.mnd: depositItems(core, item, false);
  615:  set :depositItems:item :fetchBlock:item                      ...
  616:  set :depositItems:fromMining false                           ...
  617:  setaddr :depositItems*retaddr *label231                      ...
  618:  call *label4 *invalid :depositItems*retval                   ...
        label *label231                                              ...
  619:  return :fetchBlock*retaddr                                   CoreBuilder.mnd: void fetchBlock(block, item)
        label *label9                                                CoreBuilder.mnd: void supplyBlocks()
  620:  set :supplyBlocks:supplied false                             CoreBuilder.mnd: var supplied = false;
  621:  jump *label233 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  622:  sensor *tmp212 .core @graphite                               CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  623:  jump *label235 greaterThanEq *tmp212 .updatedGraphiteTarget  ...
  624:  sensor *tmp215 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  625:  jump *label237 greaterThanEq *tmp215 5                       ...
  626:  set .status1 "Meeting the graphite target"                   CoreBuilder.mnd: status1 = text;
  627:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  628:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  629:  set .block2 .press                                           CoreBuilder.mnd: block2 = block;
  630:  sensor *tmp218 .press @itemCapacity                          CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  631:  sensor *tmp219 .press @coal                                  ...
  632:  op sub :supplyBlock:missing *tmp218 *tmp219                  ...
  633:  jump *label242 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  634:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  635:  set :mineOre:amount :supplyBlock:missing                     ...
  636:  set :mineOre:block .press                                    ...
  637:  setaddr :mineOre*retaddr *label244                           ...
  638:  call *label6 *invalid :mineOre*retval                        ...
        label *label244                                              ...
        label *label242                                              CoreBuilder.mnd: if missing > 0 then
  639:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
        label *label237                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label235                                              CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  640:  sensor *tmp223 .core @silicon                                CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  641:  jump *label245 greaterThanEq *tmp223 .updatedSiliconTarget   ...
  642:  sensor *tmp226 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  643:  jump *label247 greaterThanEq *tmp226 5                       ...
  644:  set .status1 "Meeting the silicon target (coal)"             CoreBuilder.mnd: status1 = text;
  645:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  646:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  647:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  648:  sensor *tmp229 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  649:  sensor *tmp230 .smelter @coal                                ...
  650:  op sub :supplyBlock.1:missing *tmp229 *tmp230                ...
  651:  jump *label252 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  652:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  653:  set :mineOre:amount :supplyBlock.1:missing                   ...
  654:  set :mineOre:block .smelter                                  ...
  655:  setaddr :mineOre*retaddr *label254                           ...
  656:  call *label6 *invalid :mineOre*retval                        ...
        label *label254                                              ...
        label *label252                                              CoreBuilder.mnd: if missing > 0 then
  657:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
  658:  jump *label248 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label247                                              ...
  659:  sensor *tmp234 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  660:  jump *label255 greaterThanEq *tmp234 5                       ...
  661:  set .status1 "Meeting the silicon target (sand)"             CoreBuilder.mnd: status1 = text;
  662:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  663:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  664:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  665:  sensor *tmp237 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  666:  sensor *tmp238 .smelter @sand                                ...
  667:  op sub :supplyBlock.2:missing *tmp237 *tmp238                ...
  668:  jump *label260 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  669:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  670:  set :mineOre:amount :supplyBlock.2:missing                   ...
  671:  set :mineOre:block .smelter                                  ...
  672:  setaddr :mineOre*retaddr *label262                           ...
  673:  call *label6 *invalid :mineOre*retval                        ...
        label *label262                                              ...
        label *label260                                              CoreBuilder.mnd: if missing > 0 then
  674:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
        label *label255                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label248                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label245                                              CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  675:  sensor *tmp242 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  676:  jump *label234 greaterThanEq *tmp242 .powerTarget            ...
  677:  set .status1 "Supplying generator"                           CoreBuilder.mnd: status1 = text;
  678:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  679:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  680:  set .block2 .generator                                       CoreBuilder.mnd: block2 = block;
  681:  sensor *tmp245 .generator @itemCapacity                      CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  682:  sensor *tmp246 .generator @coal                              ...
  683:  op sub :supplyBlock.3:missing *tmp245 *tmp246                ...
  684:  jump *label268 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  685:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  686:  set :mineOre:amount :supplyBlock.3:missing                   ...
  687:  set :mineOre:block .generator                                ...
  688:  setaddr :mineOre*retaddr *label270                           ...
  689:  call *label6 *invalid :mineOre*retval                        ...
        label *label270                                              ...
        label *label268                                              CoreBuilder.mnd: if missing > 0 then
  690:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
  691:  jump *label234 always 0 0                                    CoreBuilder.mnd: if unloader1 == null then
        label *label233                                              ...
  692:  jump *label271 equal .processor null                         CoreBuilder.mnd: elsif processor != null then
  693:  sensor *tmp252 .core @coal                                   CoreBuilder.mnd: if core.@coal < 10 then
  694:  jump *label273 greaterThanEq *tmp252 10                      ...
  695:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  696:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  697:  setaddr :mineOre.1*retaddr *label276                         ...
  698:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label276                                              ...
  699:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: return;
        label *label273                                              CoreBuilder.mnd: if core.@coal < 10 then
        label *label271                                              CoreBuilder.mnd: elsif processor != null then
        label *label234                                              CoreBuilder.mnd: if unloader1 == null then
  700:  sensor *tmp255 .titanium_drill @titanium                     CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  701:  jump *label277 greaterThanEq *tmp255 .titaniumTrigger        ...
  702:  sensor *tmp258 .core @silicon                                CoreBuilder.mnd: if core.@silicon < siliconTarget then
  703:  jump *label279 greaterThanEq *tmp258 .siliconTarget          ...
  704:  set .status1 "Meeting the silicon target"                    CoreBuilder.mnd: status1 = text;
  705:  sensor :supplyBlocks:coal .core @coal                        CoreBuilder.mnd: var coal = core.@coal;
  706:  sensor :supplyBlocks:sand .core @sand                        CoreBuilder.mnd: var sand = core.@sand;
  707:  set *tmp264 @sand                                            CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  708:  jump *label283 greaterThanEq :supplyBlocks:coal :supplyBlock ...
  709:  set *tmp264 @coal                                            ...
        label *label283                                              ...
  710:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  711:  set .item2 *tmp264                                           CoreBuilder.mnd: item2 = item;
  712:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  713:  set :mineOre.1:ore *tmp264                                   CoreBuilder.mnd: mineOre(ore);
  714:  setaddr :mineOre.1*retaddr *label285                         ...
  715:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label285                                              ...
  716:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: if core.@silicon < siliconTarget then
        label *label279                                              ...
  717:  sensor *tmp265 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
  718:  jump *label286 greaterThanEq *tmp265 .copperTarget           ...
  719:  set .status1 "Meeting the copper target"                     CoreBuilder.mnd: status1 = text;
  720:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  721:  set .item2 @copper                                           CoreBuilder.mnd: item2 = item;
  722:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  723:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  724:  setaddr :mineOre.1*retaddr *label290                         ...
  725:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label290                                              ...
  726:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
        label *label286                                              ...
  727:  sensor *tmp268 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
  728:  jump *label291 greaterThanEq *tmp268 .leadTarget             ...
  729:  set .status1 "Meeting the lead target"                       CoreBuilder.mnd: status1 = text;
  730:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  731:  set .item2 @lead                                             CoreBuilder.mnd: item2 = item;
  732:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  733:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  734:  setaddr :mineOre.1*retaddr *label295                         ...
  735:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label295                                              ...
  736:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@lead < leadTarget then
        label *label291                                              ...
  737:  sensor *tmp271 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
  738:  jump *label296 greaterThanEq *tmp271 .metaglassTarget        ...
  739:  set .status1 "Meeting the metaglass target"                  CoreBuilder.mnd: status1 = text;
  740:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  741:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  742:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  743:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  744:  setaddr :mineOre.1*retaddr *label300                         ...
  745:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label300                                              ...
  746:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
        label *label296                                              ...
  747:  jump *label278 notEqual :supplyBlocks:supplied false         CoreBuilder.mnd: elsif !supplied then
  748:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  749:  sensor :supplyBlocks:coal.1 .core @coal                      CoreBuilder.mnd: var coal = core.@coal;
  750:  sensor :supplyBlocks:sand.1 .core @sand                      CoreBuilder.mnd: var sand = core.@sand;
  751:  set *tmp279 @sand                                            CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  752:  jump *label305 greaterThan :supplyBlocks:coal.1 :supplyBlock ...
  753:  set *tmp279 @coal                                            ...
        label *label305                                              ...
  754:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  755:  set .item2 *tmp279                                           CoreBuilder.mnd: item2 = item;
  756:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  757:  set :mineOre.1:ore *tmp279                                   CoreBuilder.mnd: mineOre(ore);
  758:  setaddr :mineOre.1*retaddr *label307                         ...
  759:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label307                                              ...
  760:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
        label *label277                                              ...
  761:  set .status1 "Fetching titanium"                             CoreBuilder.mnd: status1 = text;
  762:  set :fetchBlock:block .titanium_drill                        CoreBuilder.mnd: fetchBlock(titanium_drill, @titanium);
  763:  set :fetchBlock:item @titanium                               ...
  764:  setaddr :fetchBlock*retaddr *label309                        ...
  765:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label309                                              ...
        label *label278                                              CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  766:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: void supplyBlocks()
        label *label10                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  767:  set .nextBlock :meetTarget:block                             CoreBuilder.mnd: nextBlock = block;
  768:  set .copperTarget :meetTarget:copper                         CoreBuilder.mnd: copperTarget = copper;
  769:  set .leadTarget :meetTarget:lead                             CoreBuilder.mnd: leadTarget = lead;
  770:  set .graphiteTarget :meetTarget:graphite                     CoreBuilder.mnd: graphiteTarget = graphite;
  771:  set .siliconTarget :meetTarget:silicon                       CoreBuilder.mnd: siliconTarget = silicon;
  772:  set .titaniumTarget :meetTarget:titanium                     CoreBuilder.mnd: titaniumTarget = titanium;
  773:  set .metaglassTarget :meetTarget:metaglass                   CoreBuilder.mnd: metaglassTarget = metaglass;
  774:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  775:  op sign *tmp281 :meetTarget:lead 0                           ...
  776:  op add :meetTarget:count :meetTarget:count *tmp281           ...
  777:  op sign *tmp281 :meetTarget:graphite 0                       ...
  778:  op add :meetTarget:count :meetTarget:count *tmp281           ...
  779:  op sign *tmp281 :meetTarget:silicon 0                        ...
  780:  op add :meetTarget:count :meetTarget:count *tmp281           ...
  781:  op sign *tmp281 :meetTarget:titanium 0                       ...
  782:  op add :meetTarget:count :meetTarget:count *tmp281           ...
  783:  op sign *tmp281 :meetTarget:metaglass 0                      ...
  784:  op add :meetTarget:count :meetTarget:count *tmp281           ...
  785:  set .totalTargets :meetTarget:count                          CoreBuilder.mnd: totalTargets = count;
  786:  jump *label320 notEqual .processor null                      CoreBuilder.mnd: if processor == null then
  787:  op max .updatedGraphiteTarget 10 .graphiteTarget             CoreBuilder.mnd: updatedGraphiteTarget = max(10, graphiteTarget);
  788:  op max .updatedSiliconTarget 10 .siliconTarget               CoreBuilder.mnd: updatedSiliconTarget = max(10, siliconTarget);
  789:  jump *label321 always 0 0                                    CoreBuilder.mnd: if processor == null then
        label *label320                                              ...
  790:  op add *tmp286 .graphiteTarget 30                            CoreBuilder.mnd: processor.pressTarget = graphiteTarget + 30;
  791:  write *tmp286 .processor ".pressTarget"                      ...
  792:  op add *tmp287 .siliconTarget 30                             CoreBuilder.mnd: processor.smelterTarget = siliconTarget + 30;
  793:  write *tmp287 .processor ".smelterTarget"                    ...
  794:  op add *tmp288 .metaglassTarget 30                           CoreBuilder.mnd: processor.kilnTarget = metaglassTarget + 30;
  795:  write *tmp288 .processor ".kilnTarget"                       ...
        label *label321                                              CoreBuilder.mnd: if processor == null then
  796:  set .titaniumTrigger 100                                     CoreBuilder.mnd: titaniumTrigger = core.@titanium < titaniumTarget + 10 ? 7 : 100;
  797:  sensor *tmp289 .core @titanium                               ...
  798:  op add *tmp290 .titaniumTarget 10                            ...
  799:  jump *label323 greaterThanEq *tmp289 *tmp290                 ...
  800:  set .titaniumTrigger 7                                       ...
        label *label323                                              ...
  801:  sensor *tmp293 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  802:  op lessThan *tmp294 *tmp293 .copperTarget                    ...
  803:  sensor *tmp295 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  804:  op lessThan *tmp296 *tmp295 .leadTarget                      ...
  805:  op or *tmp298 *tmp294 *tmp296                                ...
  806:  op notEqual *tmp297 *tmp298 false                            ...
  807:  sensor *tmp299 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  808:  op lessThan *tmp300 *tmp299 .graphiteTarget                  ...
  809:  op or *tmp302 *tmp297 *tmp300                                ...
  810:  op notEqual *tmp301 *tmp302 false                            ...
  811:  sensor *tmp303 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  812:  op lessThan *tmp304 *tmp303 .siliconTarget                   ...
  813:  op or *tmp306 *tmp301 *tmp304                                ...
  814:  op notEqual *tmp305 *tmp306 false                            ...
  815:  sensor *tmp307 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  816:  op lessThan *tmp308 *tmp307 .titaniumTarget                  ...
  817:  op or *tmp310 *tmp305 *tmp308                                ...
  818:  op notEqual *tmp309 *tmp310 false                            ...
  819:  sensor *tmp311 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  820:  op lessThan *tmp312 *tmp311 .metaglassTarget                 ...
  821:  op or *tmp314 *tmp309 *tmp312                                ...
  822:  jump *label326 equal *tmp314 false                           CoreBuilder.mnd: while core.@copper < copperTarget
        label *label375                                              ...
  823:  setaddr :supplyBlocks*retaddr *label327                      CoreBuilder.mnd: supplyBlocks();
  824:  call *label9 *invalid :supplyBlocks*retval                   ...
        label *label327                                              ...
  825:  sensor *tmp293 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  826:  op lessThan *tmp294 *tmp293 .copperTarget                    ...
  827:  sensor *tmp295 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  828:  op lessThan *tmp296 *tmp295 .leadTarget                      ...
  829:  op or *tmp298 *tmp294 *tmp296                                ...
  830:  op notEqual *tmp297 *tmp298 false                            ...
  831:  sensor *tmp299 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  832:  op lessThan *tmp300 *tmp299 .graphiteTarget                  ...
  833:  op or *tmp302 *tmp297 *tmp300                                ...
  834:  op notEqual *tmp301 *tmp302 false                            ...
  835:  sensor *tmp303 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  836:  op lessThan *tmp304 *tmp303 .siliconTarget                   ...
  837:  op or *tmp306 *tmp301 *tmp304                                ...
  838:  op notEqual *tmp305 *tmp306 false                            ...
  839:  sensor *tmp307 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  840:  op lessThan *tmp308 *tmp307 .titaniumTarget                  ...
  841:  op or *tmp310 *tmp305 *tmp308                                ...
  842:  op notEqual *tmp309 *tmp310 false                            ...
  843:  sensor *tmp311 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  844:  op lessThan *tmp312 *tmp311 .metaglassTarget                 ...
  845:  op or *tmp314 *tmp309 *tmp312                                ...
  846:  jump *label375 notEqual *tmp314 false                        CoreBuilder.mnd: while core.@copper < copperTarget
        label *label326                                              ...
  847:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label11                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  848:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  849:  set :moveTo.1:y :buildBlockAt:y                              ...
  850:  setaddr :moveTo.1*retaddr *label329                          ...
  851:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label329                                              ...
  852:  set .status3 "Building..."                                   CoreBuilder.mnd: status3 = text;
  853:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  854:  jump *label331 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  855:  jump *label333 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  856:  set :buildBlockAt*retval :buildBlockAt:building              ...
  857:  return :buildBlockAt*retaddr                                 ...
        label *label333                                              ...
  858:  jump *label335 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  859:  set :buildBlockAt*retval null                                ...
  860:  return :buildBlockAt*retaddr                                 ...
        label *label335                                              ...
  861:  print "[salmon]Cannot build at ({0}, {0}), tile already cont CoreBuilder.mnd: print("[salmon]", text);
  862:  format :buildBlockAt:x                                       ...
  863:  format :buildBlockAt:y                                       ...
  864:  print :buildBlockAt:building                                 ...
  865:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  866:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label331                                              CoreBuilder.mnd: if building != null then
  867:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  868:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label338                                              CoreBuilder.mnd: do
  869:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  870:  jump *label340 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  871:  jump *label338 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label340                                              ...
  872:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  873:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label12                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  874:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  875:  set :meetTarget:copper :buildBlock:copper                    ...
  876:  set :meetTarget:lead :buildBlock:lead                        ...
  877:  set :meetTarget:graphite :buildBlock:graphite                ...
  878:  set :meetTarget:silicon :buildBlock:silicon                  ...
  879:  set :meetTarget:titanium :buildBlock:titanium                ...
  880:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  881:  setaddr :meetTarget*retaddr *label344                        ...
  882:  call *label10 *invalid :meetTarget*retval                    ...
        label *label344                                              ...
  883:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  884:  set :buildBlockAt:x :buildBlock:x                            ...
  885:  set :buildBlockAt:y :buildBlock:y                            ...
  886:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  887:  set :buildBlockAt:config :buildBlock:config                  ...
  888:  set :buildBlockAt:skipError false                            ...
  889:  setaddr :buildBlockAt*retaddr *label345                      ...
  890:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label345                                              ...
  891:  set :buildBlock*retval :buildBlockAt*retval                  ...
  892:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)


Performance: parsed in 408 ms, compiled in 259 ms, optimized in 2,001 ms, run in 10 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (27 steps):
The program didn't generate any output.
Execution exception at instruction 46: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
