  1527 instructions before optimizations.
    59 instructions eliminated by Temp Variables Elimination (2 iterations).
   114 instructions eliminated by Dead Code Elimination (10 iterations).
     3 instructions eliminated by Jump Normalization (5 iterations).
    51 instructions eliminated by Jump Optimization (5 iterations).
    56 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     7 instructions modified by Expression Optimization (3 iterations).
     3 instructions eliminated by If Expression Optimization (3 iterations).
   402 instructions eliminated by Data Flow Optimization (5 passes, 32 iterations).
    18 loops improved by Loop Hoisting.
    31 instructions added by Loop Optimization (3 iterations).
     5 loops improved by Loop Optimization.
    62 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
     8 instructions eliminated by Jump Straightening (5 iterations).
    11 instructions updated by JumpThreading.
    39 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   881 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 114):
    Replicate loop condition at CoreBuilder.mnd:119:5            size    +1, benefit   165137.9, efficiency 165137.891
    Replicate loop condition at CoreBuilder.mnd:139:5            size    +1, benefit   275488.3, efficiency 275488.281
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   137744.1, efficiency 137744.141
    Replicate loop condition at CoreBuilder.mnd:337:5            size   +29, benefit    11300.0, efficiency    389.655
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221
  * Unroll iteration loop at CoreBuilder.mnd:311:5               size   -11, benefit    10396.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 123):
    Replicate loop condition at CoreBuilder.mnd:119:5            size    +1, benefit   165137.9, efficiency 165137.891
  * Replicate loop condition at CoreBuilder.mnd:139:5            size    +1, benefit   275488.3, efficiency 275488.281 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   137744.1, efficiency 137744.141
    Replicate loop condition at CoreBuilder.mnd:337:5            size   +29, benefit    11300.0, efficiency    389.655
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 122):
  * Replicate loop condition at CoreBuilder.mnd:119:5            size    +1, benefit   165137.9, efficiency 165137.891 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   137744.1, efficiency 137744.141
    Replicate loop condition at CoreBuilder.mnd:337:5            size   +29, benefit    11300.0, efficiency    389.655
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 121):
  * Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   137744.1, efficiency 137744.141 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:337:5            size   +29, benefit    11300.0, efficiency    389.655
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 120):
  * Replicate loop condition at CoreBuilder.mnd:337:5            size   +29, benefit    11300.0, efficiency    389.655 (+29 instructions)
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
    Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221

Pass 1: speed optimization selection (cost limit 91):
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +169, benefit     6250.0, efficiency     36.982
  * Unroll iteration loop at CoreBuilder.mnd:441:13              size   +77, benefit    11875.0, efficiency    154.221 (+56 instructions)

Pass 1: speed optimization selection (cost limit 35):
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 2: speed optimization selection (cost limit 51):
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +393, benefit     6250.0, efficiency     15.903

Pass 3: speed optimization selection (cost limit 51):
  ! Unroll loop at CoreBuilder.mnd:435:5                         size  +393, benefit     6250.0, efficiency     15.903

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-73 instructions):
 
   147 setaddr :buildBlock*retaddr *label38 (h:*label38)
   148 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
   149 label *label38
-    * set *tmp43 :buildBlock*retval
   150 jump *label33 always
   151 label *label35
   152 multijump *tmp44 0 0 (m:marker2)
   153 multilabel *label37 (m:marker2)
   154 label *label36
-    * set *tmp43 null
   155 label *label33
   156 set :buildBlockFromCfg.3:block @combustion-generator
   157 set :buildBlockFromCfg.3:offsetX 0
 
   272 op or *tmp64 *tmp60 *tmp63
   273 jump *label62 equal *tmp64 false
   274 jump *label60 always
-    * set *tmp65 null
   275 jump *label63 always
   276 label *label62
-    * set *tmp65 null
   277 label *label63
   278 op sin *tmp67 :locateOreAway:angle
   279 op mul *tmp68 *tmp67 :locateOreAway:distance
 
   288 label *label65
   289 op add :locateOreAway:distance :locateOreAway:distance 4
   290 op add :locateOreAway:angle :locateOreAway:angle 45
-    * set *tmp66 :locateOreAway:angle
   291 label *label64
   292 label *label59
   293 jump *label58 always
   294 label *label60
-    * set *tmp57 null
   295 label *label57
   296 set :buildTitaniumDrillCfg:x :locateOreAway:x
   297 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   347 label *label78
   348 set *tmp78 null
   349 label *label79
-    * set *tmp74 *tmp78
   350 label *label77
   351 set :buildTitaniumDrillCfg:count :checkOre:count
   352 op add *tmp80 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   364 label *label81
   365 set *tmp85 null
   366 label *label82
-    * set *tmp81 *tmp85
   367 label *label80
   368 set :buildTitaniumDrillCfg:count :checkOre.1:count
   369 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
 
   381 label *label84
   382 set *tmp92 null
   383 label *label85
-    * set *tmp88 *tmp92
   384 label *label83
   385 set :buildTitaniumDrillCfg:count :checkOre.2:count
   386 op add *tmp94 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
 
   399 label *label87
   400 set *tmp100 null
   401 label *label88
-    * set *tmp96 *tmp100
   402 label *label86
   403 set :buildTitaniumDrillCfg:count :checkOre.3:count
   404 op greaterThan *tmp102 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
   414 label *label91
   415 set *tmp105 null
   416 label *label92
-    * set *tmp103 *tmp105
   417 jump *label90 always
   418 label *label89
-    * set *tmp103 null
   419 label *label90
   420 label *label71
   421 multijump *tmp73 0 0 (m:marker5)
 
   455 jump *label98 equal *tmp120 false
   456 set *tmp56 :buildTitaniumDrillCfg:result
   457 jump *label52 always
-    * set *tmp121 null
   458 jump *label99 always
   459 label *label98
-    * set *tmp121 null
   460 label *label99
   461 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   462 set *tmp119 null
 
   466 set :buildTitaniumDrillCfg:minimum 3
   467 set *tmp119 :buildTitaniumDrillCfg:minimum
   468 label *label96
-    * set *tmp107 *tmp119
   469 jump *label94 always
   470 label *label93
-    * set *tmp107 null
   471 label *label94
   472 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   473 op greaterThan *tmp122 :buildTitaniumDrillCfg:attempts 5
 
   485 label *label103
   486 op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
   487 op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
-    * set *tmp124 :buildTitaniumDrillCfg:angle
   488 label *label102
   489 set :buildTitaniumDrillCfg:attempts 0
   490 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
   491 op max *tmp132 *tmp131 1
   492 set :buildTitaniumDrillCfg:minimum *tmp132
-    * set *tmp123 :buildTitaniumDrillCfg:minimum
   493 jump *label101 always
   494 label *label100
-    * set *tmp123 null
   495 label *label101
   496 label *label54
   497 jump *label53 always
 
   617 setaddr :buildBlock*retaddr *label121 (h:*label121)
   618 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   619 label *label121
-    * set *tmp141 :buildBlock*retval
   620 jump *label116 always
   621 label *label118
   622 multijump *tmp142 0 0 (m:marker8)
   623 multilabel *label120 (m:marker8)
   624 label *label119
-    * set *tmp141 null
   625 label *label116
   626 set :buildBlockFromCfg.8:block @air-factory
   627 set :buildBlockFromCfg.8:offsetX -4
 
   736 setaddr :buildBlock*retaddr *label139 (h:*label139)
   737 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   738 label *label139
-    * set *tmp153 :buildBlock*retval
   739 jump *label134 always
   740 label *label136
   741 multijump *tmp154 0 0 (m:marker11)
   742 multilabel *label138 (m:marker11)
   743 label *label137
-    * set *tmp153 null
   744 label *label134
   745 set :buildUnit:type @flare
   746 set :buildUnit:lead 0
 
   750 call *label13 *invalid :buildUnit*retval (m:*label141) (h:*label141)
   751 label *label141
   752 set .flares :buildUnit:count
-    * set *tmp157 :buildUnit*retval
   753 label *label140
   754 set :buildUnit:type @mono
   755 set :buildUnit:lead 15
 
   759 call *label13 *invalid :buildUnit*retval (m:*label143) (h:*label143)
   760 label *label143
   761 set .monos :buildUnit:count
-    * set *tmp158 :buildUnit*retval
   762 label *label142
   763 set :buildBlockFromCfg.11:block @unloader
   764 set :buildBlockFromCfg.11:offsetX 2
 
   791 setaddr :buildBlock*retaddr *label149 (h:*label149)
   792 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   793 label *label149
-    * set *tmp159 :buildBlock*retval
   794 jump *label144 always
   795 label *label146
   796 multijump *tmp160 0 0 (m:marker12)
   797 multilabel *label148 (m:marker12)
   798 label *label147
-    * set *tmp159 null
   799 label *label144
   800 set :buildBlockFromCfg.12:block @kiln
   801 set :buildBlockFromCfg.12:offsetX 3.5
 
   828 setaddr :buildBlock*retaddr *label155 (h:*label155)
   829 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   830 label *label155
-    * set *tmp163 :buildBlock*retval
   831 jump *label150 always
   832 label *label152
   833 multijump *tmp164 0 0 (m:marker13)
   834 multilabel *label154 (m:marker13)
   835 label *label153
-    * set *tmp163 null
   836 label *label150
   837 write .kiln .processor ".kiln"
   838 set :buildBlockFromCfg.13:block @junction
 
   866 setaddr :buildBlock*retaddr *label161 (h:*label161)
   867 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   868 label *label161
-    * set *tmp167 :buildBlock*retval
   869 jump *label156 always
   870 label *label158
   871 multijump *tmp168 0 0 (m:marker14)
   872 multilabel *label160 (m:marker14)
   873 label *label159
-    * set *tmp167 null
   874 label *label156
   875 set :buildBlockFromCfg.14:block @water-extractor
   876 set :buildBlockFromCfg.14:offsetX -3.5
 
   903 setaddr :buildBlock*retaddr *label167 (h:*label167)
   904 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   905 label *label167
-    * set *tmp171 :buildBlock*retval
   906 jump *label162 always
   907 label *label164
   908 multijump *tmp172 0 0 (m:marker15)
   909 multilabel *label166 (m:marker15)
   910 label *label165
-    * set *tmp171 null
   911 label *label162
   912 set :buildBlockFromCfg.15:block @steam-generator
   913 set :buildBlockFromCfg.15:offsetX -3.5
 
   981 setaddr :buildBlock*retaddr *label179 (h:*label179)
   982 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   983 label *label179
-    * set *tmp179 :buildBlock*retval
   984 jump *label174 always
   985 label *label176
   986 multijump *tmp180 0 0 (m:marker17)
   987 multilabel *label178 (m:marker17)
   988 label *label177
-    * set *tmp179 null
   989 label *label174
   990 label *label180
   991 jump *label182 equal true false
 
  1039 op notEqual *tmp189 *tmp188 null
  1040 jump *label197 equal *tmp189 false
  1041 ucontrol itemDrop @air 1000
-    * set *tmp190 null
  1042 jump *label198 always
  1043 label *label197
-    * set *tmp190 null
  1044 label *label198
  1045 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
  1046 label *label195
 
  1099 op greaterThanEq *tmp205 *tmp204 :depositItems:cap
  1100 jump *label214 equal *tmp205 false
  1101 jump *label213 always
-    * set *tmp206 null
  1102 jump *label215 always
  1103 label *label214
-    * set *tmp206 null
  1104 label *label215
  1105 label *label212
  1106 sensor *tmp207 @unit @firstItem
  1107 op notEqual *tmp208 *tmp207 null
  1108 jump *label211 notEqual *tmp208 false
  1109 label *label213
-    * set *tmp199 null
  1110 jump *label207 always
  1111 label *label206
  1112 label *label216
 
  1117 label *label217
  1118 jump *label216 always
  1119 label *label218
-    * set *tmp199 null
  1120 label *label207
  1121 write 0 .display ".transportTarget"
  1122 write null .display ".transportItem"
 
  1133 printflush message1
  1134 stop
  1135 label *label222
-    * set *tmp214 null
  1136 jump *label221 always
  1137 label *label220
-    * set *tmp214 null
  1138 label *label221
  1139 label *label219
  1140 return :locateOre*retaddr
 
  1164 op land *tmp218 *tmp216 *tmp217
  1165 jump *label230 equal *tmp218 false
  1166 jump *label229 always
-    * set *tmp219 null
  1167 jump *label231 always
  1168 label *label230
-    * set *tmp219 null
  1169 label *label231
  1170 ucontrol mine :mineOre:x :mineOre:y
  1171 label *label228
 
  1228 op land *tmp229 *tmp227 *tmp228
  1229 jump *label242 equal *tmp229 false
  1230 ucontrol itemDrop @air 1000
-    * set *tmp230 null
  1231 jump *label243 always
  1232 label *label242
-    * set *tmp230 null
  1233 label *label243
  1234 label *label240
  1235 sensor *tmp231 @unit :fetchBlock:item
 
  1281 setaddr :mineOre*retaddr *label257 (h:*label257)
  1282 call *label6 *invalid :mineOre*retval (m:*label257) (h:*label257)
  1283 label *label257
-    * set *tmp247 null
  1284 jump *label256 always
  1285 label *label255
-    * set *tmp247 null
  1286 label *label256
  1287 label *label253
  1288 set :supplyBase:supplied true
 
  1291 label *label250
  1292 set *tmp242 null
  1293 label *label251
-    * set *tmp239 *tmp242
  1294 jump *label249 always
  1295 label *label248
-    * set *tmp239 null
  1296 label *label249
  1297 sensor *tmp248 .core @silicon
  1298 op lessThan *tmp249 *tmp248 .siliconTarget
 
  1324 setaddr :mineOre*retaddr *label267 (h:*label267)
  1325 call *label6 *invalid :mineOre*retval (m:*label267) (h:*label267)
  1326 label *label267
-    * set *tmp258 null
  1327 jump *label266 always
  1328 label *label265
-    * set *tmp258 null
  1329 label *label266
  1330 label *label263
  1331 set :supplyBase:supplied true
 
  1359 setaddr :mineOre*retaddr *label275 (h:*label275)
  1360 call *label6 *invalid :mineOre*retval (m:*label275) (h:*label275)
  1361 label *label275
-    * set *tmp266 null
  1362 jump *label274 always
  1363 label *label273
-    * set *tmp266 null
  1364 label *label274
  1365 label *label271
  1366 set :supplyBase:supplied true
 
  1371 label *label269
  1372 set *tmp253 *tmp261
  1373 label *label261
-    * set *tmp250 *tmp253
  1374 jump *label259 always
  1375 label *label258
-    * set *tmp250 null
  1376 label *label259
  1377 sensor *tmp267 .battery @totalPower
  1378 op lessThan *tmp268 *tmp267 .powerTarget
 
  1404 setaddr :mineOre*retaddr *label285 (h:*label285)
  1405 call *label6 *invalid :mineOre*retval (m:*label285) (h:*label285)
  1406 label *label285
-    * set *tmp277 null
  1407 jump *label284 always
  1408 label *label283
-    * set *tmp277 null
  1409 label *label284
  1410 label *label281
  1411 set :supplyBase:supplied true
 
  1419 label *label276
  1420 set *tmp269 null
  1421 label *label277
-    * set *tmp236 *tmp269
  1422 jump *label247 always
  1423 label *label246
-    * set *tmp236 null
  1424 label *label247
  1425 sensor *tmp278 .titanium_drill @titanium
  1426 op lessThan *tmp279 *tmp278 .titaniumTrigger
 
  1538 label *label288
  1539 set *tmp282 null
  1540 label *label289
-    * set *tmp280 *tmp282
  1541 jump *label287 always
  1542 label *label286
  1543 set :status1.10:text "Goal 11: Fetching titanium"
 
  1548 setaddr :fetchBlock*retaddr *label317 (h:*label317)
  1549 call *label8 *invalid :fetchBlock*retval (m:*label317) (h:*label317)
  1550 label *label317
-    * set *tmp280 null
  1551 label *label287
  1552 label *label245
  1553 return :supplyBase*retaddr
 
  1681 jump *label339 equal *tmp354 false
  1682 set :buildBlockAt*retval :buildBlockAt:building
  1683 jump *label334 always
-    * set *tmp355 null
  1684 jump *label340 always
  1685 label *label339
-    * set *tmp355 null
  1686 label *label340
  1687 jump *label341 equal :buildBlockAt:skipError false
  1688 set :buildBlockAt*retval null
  1689 jump *label334 always
-    * set *tmp356 null
  1690 jump *label342 always
  1691 label *label341
-    * set *tmp356 null
  1692 label *label342
  1693 print "[salmon]"
  1694 print "Cannot build at ("
 
  1700 printflush message1
  1701 stop
  1702 label *label343
-    * set *tmp353 null
  1703 jump *label338 always
  1704 label *label337
-    * set *tmp353 null
  1705 label *label338
  1706 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1707 wait 0.25
 
  1711 op equal *tmp359 :buildBlockAt:building null
  1712 jump *label347 equal *tmp359 false
  1713 jump *label346 always
-    * set *tmp360 null
  1714 jump *label348 always
  1715 label *label347
-    * set *tmp360 null
  1716 label *label348
  1717 label *label345
  1718 op notEqual *tmp361 :buildBlockAt:type :buildBlockAt:block
 
  1813 op notEqual *tmp369 @unit :findUnits:firstUnit
  1814 jump *label365 notEqual *tmp369 false
  1815 label *label367
-    * set *tmp368 null
  1816 jump *label364 always
  1817 label *label363
-    * set *tmp368 null
  1818 label *label364
  1819 label *label362
  1820 return :findUnits*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   342 jump *label78 equal *tmp77 false
   343 set *tmp79 :checkOre:count
   344 op add :checkOre:count :checkOre:count 1
-    * set *tmp78 *tmp79
   345 jump *label79 always
   346 label *label78
-    * set *tmp78 null
   347 label *label79
   348 label *label77
   349 set :buildTitaniumDrillCfg:count :checkOre:count
 
   357 jump *label81 equal *tmp84 false
   358 set *tmp86 :checkOre.1:count
   359 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp85 *tmp86
   360 jump *label82 always
   361 label *label81
-    * set *tmp85 null
   362 label *label82
   363 label *label80
   364 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
   372 jump *label84 equal *tmp91 false
   373 set *tmp93 :checkOre.2:count
   374 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp92 *tmp93
   375 jump *label85 always
   376 label *label84
-    * set *tmp92 null
   377 label *label85
   378 label *label83
   379 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
   388 jump *label87 equal *tmp99 false
   389 set *tmp101 :checkOre.3:count
   390 op add :checkOre.3:count :checkOre.3:count 1
-    * set *tmp100 *tmp101
   391 jump *label88 always
   392 label *label87
-    * set *tmp100 null
   393 label *label88
   394 label *label86
   395 set :buildTitaniumDrillCfg:count :checkOre.3:count
 
   401 op greaterThanEq *tmp104 :buildTitaniumDrillCfg:count 4
   402 jump *label91 equal *tmp104 false
   403 jump *label69 always
-    * set *tmp105 null
   404 jump *label92 always
   405 label *label91
-    * set *tmp105 null
   406 label *label92
   407 jump *label90 always
   408 label *label89
 
   449 label *label98
   450 label *label99
   451 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * set *tmp119 null
   452 jump *label96 always
   453 label *label95
   454 set :buildTitaniumDrillCfg:attempts 1000
   455 set :buildTitaniumDrillCfg:minimum 3
-    * set *tmp119 :buildTitaniumDrillCfg:minimum
   456 label *label96
   457 jump *label94 always
   458 label *label93
 
  1274 label *label256
  1275 label *label253
  1276 set :supplyBase:supplied true
-    * set *tmp242 :supplyBase:supplied
  1277 jump *label251 always
  1278 label *label250
-    * set *tmp242 null
  1279 label *label251
  1280 jump *label249 always
  1281 label *label248
 
  1315 label *label266
  1316 label *label263
  1317 set :supplyBase:supplied true
-    * set *tmp253 :supplyBase:supplied
  1318 jump *label261 always
  1319 label *label260
  1320 sensor *tmp259 .smelter @sand
 
  1354 label *label268
  1355 set *tmp261 null
  1356 label *label269
-    * set *tmp253 *tmp261
  1357 label *label261
  1358 jump *label259 always
  1359 label *label258
 
  1398 label *label278
  1399 set *tmp272 null
  1400 label *label279
-    * set *tmp269 *tmp272
  1401 jump *label277 always
  1402 label *label276
-    * set *tmp269 null
  1403 label *label277
  1404 jump *label247 always
  1405 label *label246
 
  1515 label *label295
  1516 set *tmp285 *tmp288
  1517 label *label291
-    * set *tmp282 *tmp285
  1518 jump *label289 always
  1519 label *label288
-    * set *tmp282 null
  1520 label *label289
  1521 jump *label287 always
  1522 label *label286
 
  1773 label *label361
  1774 set :buildUnit:result @unit
  1775 ubind .mainUnit
-    * set :buildUnit*retval :buildUnit:result
  1776 jump *label352 always
-    * set :buildUnit*retval null
  1777 label *label352
  1778 return :buildUnit*retaddr
  1779 end

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
   340 ucontrol getBlock :checkOre:x :checkOre:y *tmp76 *tmp75 :checkOre:floor
   341 op equal *tmp77 :checkOre:floor :checkOre:ore
   342 jump *label78 equal *tmp77 false
-    * set *tmp79 :checkOre:count
   343 op add :checkOre:count :checkOre:count 1
   344 jump *label79 always
   345 label *label78
 
   354 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp83 *tmp82 :checkOre.1:floor
   355 op equal *tmp84 :checkOre.1:floor :checkOre.1:ore
   356 jump *label81 equal *tmp84 false
-    * set *tmp86 :checkOre.1:count
   357 op add :checkOre.1:count :checkOre.1:count 1
   358 jump *label82 always
   359 label *label81
 
   368 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp90 *tmp89 :checkOre.2:floor
   369 op equal *tmp91 :checkOre.2:floor :checkOre.2:ore
   370 jump *label84 equal *tmp91 false
-    * set *tmp93 :checkOre.2:count
   371 op add :checkOre.2:count :checkOre.2:count 1
   372 jump *label85 always
   373 label *label84
 
   383 ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp98 *tmp97 :checkOre.3:floor
   384 op equal *tmp99 :checkOre.3:floor :checkOre.3:ore
   385 jump *label87 equal *tmp99 false
-    * set *tmp101 :checkOre.3:count
   386 op add :checkOre.3:count :checkOre.3:count 1
   387 jump *label88 always
   388 label *label87
 
  1345 label *label274
  1346 label *label271
  1347 set :supplyBase:supplied true
-    * set *tmp261 :supplyBase:supplied
  1348 jump *label269 always
  1349 label *label268
-    * set *tmp261 null
  1350 label *label269
  1351 label *label261
  1352 jump *label259 always
 
  1387 label *label284
  1388 label *label281
  1389 set :supplyBase:supplied true
-    * set *tmp272 :supplyBase:supplied
  1390 jump *label279 always
  1391 label *label278
-    * set *tmp272 null
  1392 label *label279
  1393 jump *label277 always
  1394 label *label276
 
  1411 setaddr :mineOre.1*retaddr *label293 (h:*label293)
  1412 call *label7 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
  1413 label *label293
-    * set *tmp285 null
  1414 jump *label291 always
  1415 label *label290
  1416 sensor *tmp286 .core @silicon
 
  1504 label *label301
  1505 set *tmp288 *tmp295
  1506 label *label295
-    * set *tmp285 *tmp288
  1507 label *label291
  1508 jump *label289 always
  1509 label *label288
 
  1761 setaddr :moveTo.1*retaddr *label361 (h:*label361)
  1762 call *label1 *invalid :moveTo.1*retval (m:*label361) (h:*label361)
  1763 label *label361
-    * set :buildUnit:result @unit
  1764 ubind .mainUnit
  1765 jump *label352 always
  1766 label *label352

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1435 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1436 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
  1437 label *label299
-    * set *tmp288 null
  1438 jump *label295 always
  1439 label *label294
  1440 sensor *tmp293 .core @copper
 
  1501 label *label305
  1502 set *tmp295 *tmp298
  1503 label *label301
-    * set *tmp288 *tmp295
  1504 label *label295
  1505 label *label291
  1506 jump *label289 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1447 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1448 call *label7 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
  1449 label *label303
-    * set *tmp295 null
  1450 jump *label301 always
  1451 label *label300
  1452 sensor *tmp296 .core @lead
 
  1498 label *label309
  1499 set *tmp298 *tmp301
  1500 label *label305
-    * set *tmp295 *tmp298
  1501 label *label301
  1502 label *label295
  1503 label *label291

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1459 setaddr :mineOre.1*retaddr *label307 (h:*label307)
  1460 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
  1461 label *label307
-    * set *tmp298 null
  1462 jump *label305 always
  1463 label *label304
  1464 sensor *tmp299 .core @metaglass
 
  1495 label *label315
  1496 set *tmp301 null
  1497 label *label309
-    * set *tmp298 *tmp301
  1498 label *label305
  1499 label *label301
  1500 label *label295

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1471 setaddr :mineOre.1*retaddr *label311 (h:*label311)
  1472 call *label7 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
  1473 label *label311
-    * set *tmp301 null
  1474 jump *label309 always
  1475 label *label308
  1476 set :status1.9:text "Goal 10: Supplying base"
 
  1492 setaddr :mineOre.1*retaddr *label315 (h:*label315)
  1493 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
  1494 label *label315
-    * set *tmp301 null
  1495 label *label309
  1496 label *label305
  1497 label *label301

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-59 instructions):
 
    12 set .polys 0
    13 label *label15
    14 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp32 *tmp31
-    * set .core *tmp31
+   15 ulocate building core false @copper .coreX .coreY 0 .core
    16 label *label16
    17 op equal *tmp33 .core null
    18 jump *label15 notEqual *tmp33 false
    19 label *label17
-    * set *tmp34 @unit
-    * set .mainUnit *tmp34
+   20 set .mainUnit @unit
    21 set .display processor1
    22 set :findUnits:type @mono
    23 setaddr :findUnits*retaddr *label18 (h:*label18)
 
    47 set :buildBlockFromCfg:config null
    48 setaddr *tmp36 *label25
    49 label *label22
-    * op add *tmp37 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp37
-    * op add *tmp38 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp38
+   50 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   51 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    52 set :buildBlock:block :buildBlockFromCfg:block
    53 set :buildBlock:x :buildBlockFromCfg:x
    54 set :buildBlock:y :buildBlockFromCfg:y
 
    85 set :buildBlockFromCfg.1:config null
    86 setaddr *tmp40 *label31
    87 label *label28
-    * op add *tmp41 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp41
-    * op add *tmp42 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp42
+   88 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   89 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    90 set :buildBlock:block :buildBlockFromCfg.1:block
    91 set :buildBlock:x :buildBlockFromCfg.1:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
 
   123 set :buildBlockFromCfg.2:config null
   124 setaddr *tmp44 *label37
   125 label *label34
-    * op add *tmp45 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp45
-    * op add *tmp46 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp46
+  126 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  127 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   128 set :buildBlock:block :buildBlockFromCfg.2:block
   129 set :buildBlock:x :buildBlockFromCfg.2:x
   130 set :buildBlock:y :buildBlockFromCfg.2:y
 
   158 set :buildBlockFromCfg.3:config null
   159 setaddr *tmp48 *label43
   160 label *label40
-    * op add *tmp49 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp49
-    * op add *tmp50 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp50
+  161 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  162 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   163 set :buildBlock:block :buildBlockFromCfg.3:block
   164 set :buildBlock:x :buildBlockFromCfg.3:x
   165 set :buildBlock:y :buildBlockFromCfg.3:y
 
   197 set :buildBlockFromCfg.4:config null
   198 setaddr *tmp52 *label49
   199 label *label46
-    * op add *tmp53 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp53
-    * op add *tmp54 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp54
+  200 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  201 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   202 set :buildBlock:block :buildBlockFromCfg.4:block
   203 set :buildBlock:x :buildBlockFromCfg.4:x
   204 set :buildBlock:y :buildBlockFromCfg.4:y
 
   325 set :checkOre:y :buildTitaniumDrillCfg:ay
   326 set :checkOre:ore @ore-titanium
   327 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp76 *tmp75 :checkOre:floor
+  328 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   329 op equal *tmp77 :checkOre:floor :checkOre:ore
   330 jump *label78 equal *tmp77 false
   331 op add :checkOre:count :checkOre:count 1
 
   334 label *label79
   335 label *label77
   336 set :buildTitaniumDrillCfg:count :checkOre:count
-    * op add *tmp80 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:x *tmp80
+  337 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   338 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   339 set :checkOre.1:ore @ore-titanium
   340 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp83 *tmp82 :checkOre.1:floor
+  341 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   342 op equal *tmp84 :checkOre.1:floor :checkOre.1:ore
   343 jump *label81 equal *tmp84 false
   344 op add :checkOre.1:count :checkOre.1:count 1
 
   352 set :checkOre.2:y *tmp87
   353 set :checkOre.2:ore @ore-titanium
   354 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp90 *tmp89 :checkOre.2:floor
+  355 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   356 op equal *tmp91 :checkOre.2:floor :checkOre.2:ore
   357 jump *label84 equal *tmp91 false
   358 op add :checkOre.2:count :checkOre.2:count 1
 
   367 set :checkOre.3:y *tmp95
   368 set :checkOre.3:ore @ore-titanium
   369 set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y *tmp98 *tmp97 :checkOre.3:floor
+  370 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   371 op equal *tmp99 :checkOre.3:floor :checkOre.3:ore
   372 jump *label87 equal *tmp99 false
   373 op add :checkOre.3:count :checkOre.3:count 1
 
   401 op greaterThan *tmp106 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   402 jump *label93 equal *tmp106 false
   403 op div *tmp108 :buildTitaniumDrillCfg:dx 2
-    * op add *tmp109 :buildTitaniumDrillCfg:ax *tmp108
-    * set :buildTitaniumDrillCfg:ax *tmp109
+  404 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp108
   405 op div *tmp110 :buildTitaniumDrillCfg:dy 2
-    * op add *tmp111 :buildTitaniumDrillCfg:ay *tmp110
-    * set :buildTitaniumDrillCfg:ay *tmp111
+  406 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp110
   407 op sub *tmp112 :buildTitaniumDrillCfg:x .coreX
   408 op abs *tmp113 *tmp112
   409 op greaterThanEq *tmp114 *tmp113 10
 
   457 label *label102
   458 set :buildTitaniumDrillCfg:attempts 0
   459 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
-    * op max *tmp132 *tmp131 1
-    * set :buildTitaniumDrillCfg:minimum *tmp132
+  460 op max :buildTitaniumDrillCfg:minimum *tmp131 1
   461 jump *label101 always
   462 label *label100
   463 label *label101
 
   482 set :buildBlockFromCfg.5:config null
   483 setaddr *tmp134 *label108
   484 label *label105
-    * op add *tmp135 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp135
-    * op add *tmp136 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp136
+  485 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  486 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   487 set :buildBlock:block :buildBlockFromCfg.5:block
   488 set :buildBlock:x :buildBlockFromCfg.5:x
   489 set :buildBlock:y :buildBlockFromCfg.5:y
 
   520 set :buildBlockFromCfg.6:config processor2
   521 setaddr *tmp138 *label114
   522 label *label111
-    * op add *tmp139 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp139
-    * op add *tmp140 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp140
+  523 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  524 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   525 set :buildBlock:block :buildBlockFromCfg.6:block
   526 set :buildBlock:x :buildBlockFromCfg.6:x
   527 set :buildBlock:y :buildBlockFromCfg.6:y
 
   563 set :buildBlockFromCfg.7:config null
   564 setaddr *tmp142 *label120
   565 label *label117
-    * op add *tmp143 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp143
-    * op add *tmp144 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp144
+  566 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  567 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   568 set :buildBlock:block :buildBlockFromCfg.7:block
   569 set :buildBlock:x :buildBlockFromCfg.7:x
   570 set :buildBlock:y :buildBlockFromCfg.7:y
 
   598 set :buildBlockFromCfg.8:config @mono
   599 setaddr *tmp146 *label126
   600 label *label123
-    * op add *tmp147 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp147
-    * op add *tmp148 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp148
+  601 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  602 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   603 set :buildBlock:block :buildBlockFromCfg.8:block
   604 set :buildBlock:x :buildBlockFromCfg.8:x
   605 set :buildBlock:y :buildBlockFromCfg.8:y
 
   637 set :buildBlockFromCfg.9:config null
   638 setaddr *tmp150 *label132
   639 label *label129
-    * op add *tmp151 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp151
-    * op add *tmp152 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp152
+  640 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  641 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   642 set :buildBlock:block :buildBlockFromCfg.9:block
   643 set :buildBlock:x :buildBlockFromCfg.9:x
   644 set :buildBlock:y :buildBlockFromCfg.9:y
 
   676 set :buildBlockFromCfg.10:config null
   677 setaddr *tmp154 *label138
   678 label *label135
-    * op add *tmp155 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp155
-    * op add *tmp156 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp156
+  679 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  680 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   681 set :buildBlock:block :buildBlockFromCfg.10:block
   682 set :buildBlock:x :buildBlockFromCfg.10:x
   683 set :buildBlock:y :buildBlockFromCfg.10:y
 
   729 set :buildBlockFromCfg.11:config null
   730 setaddr *tmp160 *label148
   731 label *label145
-    * op add *tmp161 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp161
-    * op add *tmp162 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp162
+  732 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  733 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   734 set :buildBlock:block :buildBlockFromCfg.11:block
   735 set :buildBlock:x :buildBlockFromCfg.11:x
   736 set :buildBlock:y :buildBlockFromCfg.11:y
 
   764 set :buildBlockFromCfg.12:config null
   765 setaddr *tmp164 *label154
   766 label *label151
-    * op add *tmp165 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp165
-    * op add *tmp166 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp166
+  767 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  768 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   769 set :buildBlock:block :buildBlockFromCfg.12:block
   770 set :buildBlock:x :buildBlockFromCfg.12:x
   771 set :buildBlock:y :buildBlockFromCfg.12:y
 
   800 set :buildBlockFromCfg.13:config null
   801 setaddr *tmp168 *label160
   802 label *label157
-    * op add *tmp169 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp169
-    * op add *tmp170 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp170
+  803 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  804 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   805 set :buildBlock:block :buildBlockFromCfg.13:block
   806 set :buildBlock:x :buildBlockFromCfg.13:x
   807 set :buildBlock:y :buildBlockFromCfg.13:y
 
   835 set :buildBlockFromCfg.14:config null
   836 setaddr *tmp172 *label166
   837 label *label163
-    * op add *tmp173 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp173
-    * op add *tmp174 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp174
+  838 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  839 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   840 set :buildBlock:block :buildBlockFromCfg.14:block
   841 set :buildBlock:x :buildBlockFromCfg.14:x
   842 set :buildBlock:y :buildBlockFromCfg.14:y
 
   870 set :buildBlockFromCfg.15:config null
   871 setaddr *tmp176 *label172
   872 label *label169
-    * op add *tmp177 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp177
-    * op add *tmp178 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp178
+  873 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  874 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   875 set :buildBlock:block :buildBlockFromCfg.15:block
   876 set :buildBlock:x :buildBlockFromCfg.15:x
   877 set :buildBlock:y :buildBlockFromCfg.15:y
 
   909 set :buildBlockFromCfg.16:config @coal
   910 setaddr *tmp180 *label178
   911 label *label175
-    * op add *tmp181 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp181
-    * op add *tmp182 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp182
+  912 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  913 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   914 set :buildBlock:block :buildBlockFromCfg.16:block
   915 set :buildBlock:x :buildBlockFromCfg.16:x
   916 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1035 setaddr :moveToBlock*retaddr *label210 (h:*label210)
  1036 call *label3 *invalid :moveToBlock*retval (m:*label210) (h:*label210)
  1037 label *label210
-    * sensor *tmp203 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp203
+ 1038 sensor :depositItems:cap :depositItems:block @itemCapacity
  1039 label *label211
  1040 ucontrol itemDrop :depositItems:block 30
  1041 sensor *tmp204 :depositItems:block :depositItems:item
 
  1067 return :depositItems*retaddr
  1068 end
  1069 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp211 *tmp212
+ 1070 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp211 0
  1071 op equal *tmp213 *tmp211 false
  1072 jump *label220 equal *tmp213 false
  1073 print "[salmon]"
 
  1100 write :status3.3:text .display ".status3"
  1101 label *label226
  1102 label *label227
-    * sensor *tmp215 @unit @firstItem
-    * set :mineOre:item *tmp215
+ 1103 sensor :mineOre:item @unit @firstItem
  1104 op notEqual *tmp216 :mineOre:item null
  1105 op notEqual *tmp217 :mineOre:item :mineOre:ore
  1106 op land *tmp218 *tmp216 *tmp217
 
  1133 write :status2:item .display ".item2"
  1134 write :status2:block .display ".block2"
  1135 label *label234
-    * set *tmp222 :mineOre.1:ore
-    * set :mineOre:ore *tmp222
+ 1136 set :mineOre:ore :mineOre.1:ore
  1137 set :mineOre:amount 30
  1138 set :mineOre:block .core
  1139 setaddr :mineOre*retaddr *label235 (h:*label235)
 
  1162 label *label238
  1163 label *label239
  1164 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp226 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp226
+ 1165 sensor :fetchBlock:unitItem @unit @firstItem
  1166 op notEqual *tmp227 :fetchBlock:unitItem null
  1167 op notEqual *tmp228 :fetchBlock:unitItem :fetchBlock:item
  1168 op land *tmp229 *tmp227 *tmp228
 
  1211 label *label254
  1212 sensor *tmp243 :supplyBlock:block @itemCapacity
  1213 sensor *tmp244 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp245 *tmp243 *tmp244
-    * set :supplyBlock:missing *tmp245
+ 1214 op sub :supplyBlock:missing *tmp243 *tmp244
  1215 op greaterThan *tmp246 :supplyBlock:missing 0
  1216 jump *label255 equal *tmp246 false
  1217 set :mineOre:ore :supplyBlock:ore
 
  1251 label *label264
  1252 sensor *tmp254 :supplyBlock.1:block @itemCapacity
  1253 sensor *tmp255 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp256 *tmp254 *tmp255
-    * set :supplyBlock.1:missing *tmp256
+ 1254 op sub :supplyBlock.1:missing *tmp254 *tmp255
  1255 op greaterThan *tmp257 :supplyBlock.1:missing 0
  1256 jump *label265 equal *tmp257 false
  1257 set :mineOre:ore :supplyBlock.1:ore
 
  1284 label *label272
  1285 sensor *tmp262 :supplyBlock.2:block @itemCapacity
  1286 sensor *tmp263 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp264 *tmp262 *tmp263
-    * set :supplyBlock.2:missing *tmp264
+ 1287 op sub :supplyBlock.2:missing *tmp262 *tmp263
  1288 op greaterThan *tmp265 :supplyBlock.2:missing 0
  1289 jump *label273 equal *tmp265 false
  1290 set :mineOre:ore :supplyBlock.2:ore
 
  1325 label *label282
  1326 sensor *tmp273 :supplyBlock.3:block @itemCapacity
  1327 sensor *tmp274 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp275 *tmp273 *tmp274
-    * set :supplyBlock.3:missing *tmp275
+ 1328 op sub :supplyBlock.3:missing *tmp273 *tmp274
  1329 op greaterThan *tmp276 :supplyBlock.3:missing 0
  1330 jump *label283 equal *tmp276 false
  1331 set :mineOre:ore :supplyBlock.3:ore
 
  1371 set :status1.5:text "Goal 6: Meeting the silicon target"
  1372 write :status1.5:text .display ".status1"
  1373 label *label296
-    * sensor *tmp289 .core @coal
-    * set :supplyBase:coal *tmp289
-    * sensor *tmp290 .core @sand
-    * set :supplyBase:sand *tmp290
+ 1374 sensor :supplyBase:coal .core @coal
+ 1375 sensor :supplyBase:sand .core @sand
  1376 op lessThan *tmp291 :supplyBase:coal :supplyBase:sand
  1377 jump *label297 equal *tmp291 false
  1378 set *tmp292 @coal
 
  1426 set :status1.9:text "Goal 10: Supplying base"
  1427 write :status1.9:text .display ".status1"
  1428 label *label312
-    * sensor *tmp302 .core @coal
-    * set :supplyBase:coal.1 *tmp302
-    * sensor *tmp303 .core @sand
-    * set :supplyBase:sand.1 *tmp303
+ 1429 sensor :supplyBase:coal.1 .core @coal
+ 1430 sensor :supplyBase:sand.1 .core @sand
  1431 op lessThanEq *tmp304 :supplyBase:coal.1 :supplyBase:sand.1
  1432 jump *label313 equal *tmp304 false
  1433 set *tmp305 @coal
 
  1463 return :supplyBase*retaddr
  1464 end
  1465 label *label10
-    * op max *tmp306 :meetTarget:lead :meetTarget:factoryLead
-    * set :meetTarget:totalLead *tmp306
-    * op max *tmp307 :meetTarget:silicon :meetTarget:factorySilicon
-    * set :meetTarget:totalSilicon *tmp307
+ 1466 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
+ 1467 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
  1468 set :meetTarget:count 0
  1469 set :meetTarget:t :meetTarget:copper
  1470 setaddr *tmp308 *label322
 
  1508 write .flares .display ".flares"
  1509 set .copperTarget :meetTarget:copper
  1510 op mul *tmp310 .factory 10
-    * op add *tmp311 :meetTarget:lead *tmp310
-    * set .leadTarget *tmp311
+ 1511 op add .leadTarget :meetTarget:lead *tmp310
  1512 set .graphiteTarget :meetTarget:graphite
  1513 op mul *tmp312 .factory 10
-    * op add *tmp313 :meetTarget:silicon *tmp312
-    * set .siliconTarget *tmp313
+ 1514 op add .siliconTarget :meetTarget:silicon *tmp312
  1515 set .titaniumTarget :meetTarget:titanium
  1516 set .metaglassTarget :meetTarget:metaglass
  1517 op add *tmp314 .graphiteTarget 20
 
  1579 set :status3.4:text "Building..."
  1580 write :status3.4:text .display ".status3"
  1581 label *label336
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp350 *tmp351
-    * set :buildBlockAt:building *tmp350
+ 1582 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1583 op notEqual *tmp352 :buildBlockAt:building null
  1584 jump *label337 equal *tmp352 false
  1585 op equal *tmp354 :buildBlockAt:type :buildBlockAt:block
 
  1611 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1612 wait 0.25
  1613 label *label344
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp357 *tmp358
-    * set :buildBlockAt:building *tmp357
+ 1614 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1615 op equal *tmp359 :buildBlockAt:building null
  1616 jump *label347 equal *tmp359 false
  1617 jump *label346 always
 
  1689 op add :buildUnit:count :buildUnit:count 1
  1690 ucontrol flag :buildUnit:count
  1691 op mul *tmp365 10 :buildUnit:count
-    * op add *tmp366 .coreX *tmp365
-    * set :moveTo.1:x *tmp366
+ 1692 op add :moveTo.1:x .coreX *tmp365
  1693 set :moveTo.1:y .coreY
  1694 setaddr :moveTo.1*retaddr *label361 (h:*label361)
  1695 call *label1 *invalid :moveTo.1*retval (m:*label361) (h:*label361)

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
   227 set :buildTitaniumDrillCfg:attempts 0
   228 set :buildTitaniumDrillCfg:minimum 3
   229 label *label53
-    * jump *label55 equal true false
   230 set :meetTarget:block @pneumatic-drill
   231 set :meetTarget:copper 18
   232 set :meetTarget:lead 0
 
   243 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   244 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   245 label *label58
-    * jump *label60 equal true false
   246 set :locateOre:ore :locateOreAway:ore
   247 setaddr :locateOre*retaddr *label61 (h:*label61)
   248 call *label5 *invalid :locateOre*retval (m:*label61) (h:*label61)
 
   930 label *label177
   931 label *label174
   932 label *label180
-    * jump *label182 equal true false
   933 setaddr :supplyBase*retaddr *label183 (h:*label183)
   934 call *label9 *invalid :supplyBase*retval (m:*label183) (h:*label183)
   935 label *label183

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-51 instructions):
 
    14 ubind @poly
    15 ulocate building core false @copper .coreX .coreY 0 .core
    16 label *label16
-    * op equal *tmp33 .core null
-    * jump *label15 notEqual *tmp33 false
+   17 jump *label15 equal .core null
    18 label *label17
    19 set .mainUnit @unit
    20 set .display processor1
 
   323 set :checkOre:ore @ore-titanium
   324 set :checkOre:count :buildTitaniumDrillCfg:count
   325 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp77 :checkOre:floor :checkOre:ore
-    * jump *label78 equal *tmp77 false
+  326 jump *label78 notEqual :checkOre:floor :checkOre:ore
   327 op add :checkOre:count :checkOre:count 1
   328 jump *label79 always
   329 label *label78
 
   335 set :checkOre.1:ore @ore-titanium
   336 set :checkOre.1:count :buildTitaniumDrillCfg:count
   337 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp84 :checkOre.1:floor :checkOre.1:ore
-    * jump *label81 equal *tmp84 false
+  338 jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
   339 op add :checkOre.1:count :checkOre.1:count 1
   340 jump *label82 always
   341 label *label81
 
   348 set :checkOre.2:ore @ore-titanium
   349 set :checkOre.2:count :buildTitaniumDrillCfg:count
   350 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp91 :checkOre.2:floor :checkOre.2:ore
-    * jump *label84 equal *tmp91 false
+  351 jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
   352 op add :checkOre.2:count :checkOre.2:count 1
   353 jump *label85 always
   354 label *label84
 
   362 set :checkOre.3:ore @ore-titanium
   363 set :checkOre.3:count :buildTitaniumDrillCfg:count
   364 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * op equal *tmp99 :checkOre.3:floor :checkOre.3:ore
-    * jump *label87 equal *tmp99 false
+  365 jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
   366 op add :checkOre.3:count :checkOre.3:count 1
   367 jump *label88 always
   368 label *label87
   369 label *label88
   370 label *label86
   371 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * op greaterThan *tmp102 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label89 equal *tmp102 false
+  372 jump *label89 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
   373 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   374 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
   375 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp104 :buildTitaniumDrillCfg:count 4
-    * jump *label91 equal *tmp104 false
+  376 jump *label91 lessThan :buildTitaniumDrillCfg:count 4
   377 jump *label69 always
   378 jump *label92 always
   379 label *label91
 
   389 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   390 jump *label67 always
   391 label *label69
-    * op greaterThan *tmp106 :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
-    * jump *label93 equal *tmp106 false
+  392 jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   393 op div *tmp108 :buildTitaniumDrillCfg:dx 2
   394 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp108
   395 op div *tmp110 :buildTitaniumDrillCfg:dy 2
 
   412 call *label11 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   413 label *label97
   414 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp120 :buildTitaniumDrillCfg:result null
-    * jump *label98 equal *tmp120 false
+  415 jump *label98 equal :buildTitaniumDrillCfg:result null
   416 set *tmp56 :buildTitaniumDrillCfg:result
   417 jump *label52 always
   418 jump *label99 always
 
   428 label *label93
   429 label *label94
   430 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp122 :buildTitaniumDrillCfg:attempts 5
-    * jump *label100 equal *tmp122 false
+  431 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
   432 op sin *tmp125 :buildTitaniumDrillCfg:angle
   433 op mul *tmp126 *tmp125 :buildTitaniumDrillCfg:distance
   434 op add *tmp127 .coreX *tmp126
 
   939 label *label186
   940 label *label187
   941 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
-    * op equal *tmp184 *tmp183 false
-    * jump *label189 equal *tmp184 false
+  942 jump *label189 notEqual *tmp183 false
   943 op sub *tmp185 :moveTo:radius 0.5
   944 ucontrol approach :moveTo:x :moveTo:y *tmp185
   945 label *label188
 
   966 label *label193
   967 label *label194
   968 sensor *tmp188 @unit @firstItem
-    * op notEqual *tmp189 *tmp188 null
-    * jump *label197 equal *tmp189 false
+  969 jump *label197 equal *tmp188 null
   970 ucontrol itemDrop @air 1000
   971 jump *label198 always
   972 label *label197
 
   974 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
   975 label *label195
   976 ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp191
-    * op equal *tmp192 *tmp191 false
-    * jump *label194 notEqual *tmp192 false
+  977 jump *label194 equal *tmp191 false
   978 label *label196
   979 label *label199
   980 sensor *tmp193 @unit @firstItem
-    * op notEqual *tmp194 *tmp193 null
-    * jump *label201 equal *tmp194 false
+  981 jump *label201 equal *tmp193 null
   982 ucontrol itemDrop @air 1000
   983 label *label200
   984 jump *label199 always
 
  1003 write :status3.2:text .display ".status3"
  1004 label *label205
  1005 sensor *tmp197 @unit @firstItem
-    * op equal *tmp198 *tmp197 :depositItems:item
-    * jump *label206 equal *tmp198 false
+ 1006 jump *label206 notEqual *tmp197 :depositItems:item
  1007 op equal *tmp200 :depositItems:block .core
  1008 op land *tmp201 :depositItems:fromMining *tmp200
  1009 jump *label208 equal *tmp201 false
 
  1021 label *label211
  1022 ucontrol itemDrop :depositItems:block 30
  1023 sensor *tmp204 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp205 *tmp204 :depositItems:cap
-    * jump *label214 equal *tmp205 false
+ 1024 jump *label214 lessThan *tmp204 :depositItems:cap
  1025 jump *label213 always
  1026 jump *label215 always
  1027 label *label214
  1028 label *label215
  1029 label *label212
  1030 sensor *tmp207 @unit @firstItem
-    * op notEqual *tmp208 *tmp207 null
-    * jump *label211 notEqual *tmp208 false
+ 1031 jump *label211 notEqual *tmp207 null
  1032 label *label213
  1033 jump *label207 always
  1034 label *label206
  1035 label *label216
  1036 sensor *tmp209 @unit @firstItem
-    * op notEqual *tmp210 *tmp209 null
-    * jump *label218 equal *tmp210 false
+ 1037 jump *label218 equal *tmp209 null
  1038 ucontrol itemDrop @air 1000
  1039 label *label217
  1040 jump *label216 always
 
  1047 end
  1048 label *label5
  1049 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp211 0
-    * op equal *tmp213 *tmp211 false
-    * jump *label220 equal *tmp213 false
+ 1050 jump *label220 notEqual *tmp211 false
  1051 print "[salmon]"
  1052 print "Cannot locate "
  1053 print :locateOre:ore
 
  1090 ucontrol mine :mineOre:x :mineOre:y
  1091 label *label228
  1092 sensor *tmp220 @unit @totalItems
-    * op lessThan *tmp221 *tmp220 :mineOre:amount
-    * jump *label227 notEqual *tmp221 false
+ 1093 jump *label227 lessThan *tmp220 :mineOre:amount
  1094 label *label229
  1095 ucontrol unbind
  1096 set :depositItems:block :mineOre:block
 
  1166 end
  1167 label *label9
  1168 set :supplyBase:supplied false
-    * op equal *tmp235 .unloader1 null
-    * jump *label246 equal *tmp235 false
+ 1169 jump *label246 notEqual .unloader1 null
  1170 sensor *tmp237 .core @graphite
-    * op lessThan *tmp238 *tmp237 .graphiteTarget
-    * jump *label248 equal *tmp238 false
+ 1171 jump *label248 greaterThanEq *tmp237 .graphiteTarget
  1172 sensor *tmp240 .press @coal
-    * op lessThan *tmp241 *tmp240 5
-    * jump *label250 equal *tmp241 false
+ 1173 jump *label250 greaterThanEq *tmp240 5
  1174 set :status1:text "Goal 1: Meeting the graphite target"
  1175 write :status1:text .display ".status1"
  1176 label *label252
 
  1186 sensor *tmp243 :supplyBlock:block @itemCapacity
  1187 sensor *tmp244 :supplyBlock:block :supplyBlock:ore
  1188 op sub :supplyBlock:missing *tmp243 *tmp244
-    * op greaterThan *tmp246 :supplyBlock:missing 0
-    * jump *label255 equal *tmp246 false
+ 1189 jump *label255 lessThanEq :supplyBlock:missing 0
  1190 set :mineOre:ore :supplyBlock:ore
  1191 set :mineOre:amount :supplyBlock:missing
  1192 set :mineOre:block :supplyBlock:block
 
  1205 label *label248
  1206 label *label249
  1207 sensor *tmp248 .core @silicon
-    * op lessThan *tmp249 *tmp248 .siliconTarget
-    * jump *label258 equal *tmp249 false
+ 1208 jump *label258 greaterThanEq *tmp248 .siliconTarget
  1209 sensor *tmp251 .smelter @coal
-    * op lessThan *tmp252 *tmp251 5
-    * jump *label260 equal *tmp252 false
+ 1210 jump *label260 greaterThanEq *tmp251 5
  1211 set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
  1212 write :status1.1:text .display ".status1"
  1213 label *label262
 
  1223 sensor *tmp254 :supplyBlock.1:block @itemCapacity
  1224 sensor *tmp255 :supplyBlock.1:block :supplyBlock.1:ore
  1225 op sub :supplyBlock.1:missing *tmp254 *tmp255
-    * op greaterThan *tmp257 :supplyBlock.1:missing 0
-    * jump *label265 equal *tmp257 false
+ 1226 jump *label265 lessThanEq :supplyBlock.1:missing 0
  1227 set :mineOre:ore :supplyBlock.1:ore
  1228 set :mineOre:amount :supplyBlock.1:missing
  1229 set :mineOre:block :supplyBlock.1:block
 
  1238 jump *label261 always
  1239 label *label260
  1240 sensor *tmp259 .smelter @sand
-    * op lessThan *tmp260 *tmp259 5
-    * jump *label268 equal *tmp260 false
+ 1241 jump *label268 greaterThanEq *tmp259 5
  1242 set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
  1243 write :status1.2:text .display ".status1"
  1244 label *label270
 
  1254 sensor *tmp262 :supplyBlock.2:block @itemCapacity
  1255 sensor *tmp263 :supplyBlock.2:block :supplyBlock.2:ore
  1256 op sub :supplyBlock.2:missing *tmp262 *tmp263
-    * op greaterThan *tmp265 :supplyBlock.2:missing 0
-    * jump *label273 equal *tmp265 false
+ 1257 jump *label273 lessThanEq :supplyBlock.2:missing 0
  1258 set :mineOre:ore :supplyBlock.2:ore
  1259 set :mineOre:amount :supplyBlock.2:missing
  1260 set :mineOre:block :supplyBlock.2:block
 
  1274 label *label258
  1275 label *label259
  1276 sensor *tmp267 .battery @totalPower
-    * op lessThan *tmp268 *tmp267 .powerTarget
-    * jump *label276 equal *tmp268 false
+ 1277 jump *label276 greaterThanEq *tmp267 .powerTarget
  1278 sensor *tmp270 .generator @coal
-    * op lessThan *tmp271 *tmp270 4
-    * jump *label278 equal *tmp271 false
+ 1279 jump *label278 greaterThanEq *tmp270 4
  1280 set :status1.3:text "Goal 4: Supplying generator"
  1281 write :status1.3:text .display ".status1"
  1282 label *label280
 
  1292 sensor *tmp273 :supplyBlock.3:block @itemCapacity
  1293 sensor *tmp274 :supplyBlock.3:block :supplyBlock.3:ore
  1294 op sub :supplyBlock.3:missing *tmp273 *tmp274
-    * op greaterThan *tmp276 :supplyBlock.3:missing 0
-    * jump *label283 equal *tmp276 false
+ 1295 jump *label283 lessThanEq :supplyBlock.3:missing 0
  1296 set :mineOre:ore :supplyBlock.3:ore
  1297 set :mineOre:amount :supplyBlock.3:missing
  1298 set :mineOre:block :supplyBlock.3:block
 
  1314 label *label246
  1315 label *label247
  1316 sensor *tmp278 .titanium_drill @titanium
-    * op lessThan *tmp279 *tmp278 .titaniumTrigger
-    * jump *label286 equal *tmp279 false
-    * op equal *tmp281 :supplyBase:supplied false
-    * jump *label288 equal *tmp281 false
+ 1317 jump *label286 greaterThanEq *tmp278 .titaniumTrigger
+ 1318 jump *label288 notEqual :supplyBase:supplied false
  1319 sensor *tmp283 .battery @totalPower
-    * op lessThan *tmp284 *tmp283 .powerTarget
-    * jump *label290 equal *tmp284 false
+ 1320 jump *label290 greaterThanEq *tmp283 .powerTarget
  1321 set :status1.4:text "Goal 5: Supplying generator (5)"
  1322 write :status1.4:text .display ".status1"
  1323 label *label292
 
  1328 jump *label291 always
  1329 label *label290
  1330 sensor *tmp286 .core @silicon
-    * op lessThan *tmp287 *tmp286 .siliconTarget
-    * jump *label294 equal *tmp287 false
+ 1331 jump *label294 greaterThanEq *tmp286 .siliconTarget
  1332 set :status1.5:text "Goal 6: Meeting the silicon target"
  1333 write :status1.5:text .display ".status1"
  1334 label *label296
  1335 sensor :supplyBase:coal .core @coal
  1336 sensor :supplyBase:sand .core @sand
-    * op lessThan *tmp291 :supplyBase:coal :supplyBase:sand
-    * jump *label297 equal *tmp291 false
+ 1337 jump *label297 greaterThanEq :supplyBase:coal :supplyBase:sand
  1338 set *tmp292 @coal
  1339 jump *label298 always
  1340 label *label297
 
  1348 jump *label295 always
  1349 label *label294
  1350 sensor *tmp293 .core @copper
-    * op lessThan *tmp294 *tmp293 .copperTarget
-    * jump *label300 equal *tmp294 false
+ 1351 jump *label300 greaterThanEq *tmp293 .copperTarget
  1352 set :status1.6:text "Goal 7: Meeting the copper target"
  1353 write :status1.6:text .display ".status1"
  1354 label *label302
 
  1359 jump *label301 always
  1360 label *label300
  1361 sensor *tmp296 .core @lead
-    * op lessThan *tmp297 *tmp296 .leadTarget
-    * jump *label304 equal *tmp297 false
+ 1362 jump *label304 greaterThanEq *tmp296 .leadTarget
  1363 set :status1.7:text "Goal 8: Meeting the lead target"
  1364 write :status1.7:text .display ".status1"
  1365 label *label306
 
  1370 jump *label305 always
  1371 label *label304
  1372 sensor *tmp299 .core @metaglass
-    * op lessThan *tmp300 *tmp299 .metaglassTarget
-    * jump *label308 equal *tmp300 false
+ 1373 jump *label308 greaterThanEq *tmp299 .metaglassTarget
  1374 set :status1.8:text "Goal 9: Meeting the metaglass target"
  1375 write :status1.8:text .display ".status1"
  1376 label *label310
 
  1385 label *label312
  1386 sensor :supplyBase:coal.1 .core @coal
  1387 sensor :supplyBase:sand.1 .core @sand
-    * op lessThanEq *tmp304 :supplyBase:coal.1 :supplyBase:sand.1
-    * jump *label313 equal *tmp304 false
+ 1388 jump *label313 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1389 set *tmp305 @coal
  1390 jump *label314 always
  1391 label *label313
 
  1477 op add *tmp316 .metaglassTarget 20
  1478 write *tmp316 .processor ".kilnTarget"
  1479 sensor *tmp317 .core @titanium
-    * op lessThan *tmp318 *tmp317 .titaniumTarget
-    * jump *label328 equal *tmp318 false
+ 1480 jump *label328 greaterThanEq *tmp317 .titaniumTarget
  1481 set *tmp319 7
  1482 jump *label329 always
  1483 label *label328
 
  1514 sensor *tmp346 .factory @silicon
  1515 op lessThan *tmp347 *tmp346 :meetTarget:factorySilicon
  1516 op or *tmp349 *tmp344 *tmp347
-    * op notEqual *tmp348 *tmp349 false
-    * jump *label332 equal *tmp348 false
+ 1517 jump *label332 equal *tmp349 false
  1518 setaddr :supplyBase*retaddr *label333 (h:*label333)
  1519 call *label9 *invalid :supplyBase*retval (m:*label333) (h:*label333)
  1520 label *label333
 
  1534 write :status3.4:text .display ".status3"
  1535 label *label336
  1536 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp352 :buildBlockAt:building null
-    * jump *label337 equal *tmp352 false
-    * op equal *tmp354 :buildBlockAt:type :buildBlockAt:block
-    * jump *label339 equal *tmp354 false
+ 1537 jump *label337 equal :buildBlockAt:building null
+ 1538 jump *label339 notEqual :buildBlockAt:type :buildBlockAt:block
  1539 set :buildBlockAt*retval :buildBlockAt:building
  1540 jump *label334 always
  1541 jump *label340 always
 
  1564 wait 0.25
  1565 label *label344
  1566 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp359 :buildBlockAt:building null
-    * jump *label347 equal *tmp359 false
+ 1567 jump *label347 notEqual :buildBlockAt:building null
  1568 jump *label346 always
  1569 jump *label348 always
  1570 label *label347
  1571 label *label348
  1572 label *label345
-    * op notEqual *tmp361 :buildBlockAt:type :buildBlockAt:block
-    * jump *label344 notEqual *tmp361 false
+ 1573 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1574 label *label346
  1575 set :buildBlockAt*retval :buildBlockAt:building
  1576 jump *label334 always
 
  1626 label *label357
  1627 label *label355
  1628 read *tmp30 .processor ".unitToProduce"
-    * op notEqual *tmp362 *tmp30 null
-    * jump *label354 notEqual *tmp362 false
+ 1629 jump *label354 notEqual *tmp30 null
  1630 label *label356
  1631 label *label358
  1632 ubind :buildUnit:type
  1633 label *label359
  1634 sensor *tmp363 @unit @flag
-    * op notEqual *tmp364 *tmp363 null
-    * jump *label358 notEqual *tmp364 false
+ 1635 jump *label358 notEqual *tmp363 null
  1636 label *label360
  1637 op add :buildUnit:count :buildUnit:count 1
  1638 ucontrol flag :buildUnit:count
 
  1651 set :findUnits:count 0
  1652 ubind :findUnits:type
  1653 set :findUnits:firstUnit @unit
-    * op notEqual *tmp367 :findUnits:firstUnit null
-    * jump *label363 equal *tmp367 false
+ 1654 jump *label363 equal :findUnits:firstUnit null
  1655 label *label365
  1656 op add :findUnits:count :findUnits:count 1
  1657 ucontrol flag :findUnits:count
  1658 ubind :findUnits:type
  1659 label *label366
-    * op notEqual *tmp369 @unit :findUnits:firstUnit
-    * jump *label365 notEqual *tmp369 false
+ 1660 jump *label365 notEqual @unit :findUnits:firstUnit
  1661 label *label367
  1662 jump *label364 always
  1663 label *label363

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-33 instructions):
 
   257 op or *tmp64 *tmp60 *tmp63
   258 jump *label62 equal *tmp64 false
   259 jump *label60 always
-    * jump *label63 always
   260 label *label62
   261 label *label63
   262 op sin *tmp67 :locateOreAway:angle
 
   324 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   325 jump *label78 notEqual :checkOre:floor :checkOre:ore
   326 op add :checkOre:count :checkOre:count 1
-    * jump *label79 always
   327 label *label78
   328 label *label79
   329 label *label77
 
   335 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   336 jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
   337 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label82 always
   338 label *label81
   339 label *label82
   340 label *label80
 
   347 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
   348 jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
   349 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label85 always
   350 label *label84
   351 label *label85
   352 label *label83
 
   360 ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
   361 jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
   362 op add :checkOre.3:count :checkOre.3:count 1
-    * jump *label88 always
   363 label *label87
   364 label *label88
   365 label *label86
 
   370 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
   371 jump *label91 lessThan :buildTitaniumDrillCfg:count 4
   372 jump *label69 always
-    * jump *label92 always
   373 label *label91
   374 label *label92
-    * jump *label90 always
   375 label *label89
   376 label *label90
   377 label *label71
 
   408 jump *label98 equal :buildTitaniumDrillCfg:result null
   409 set *tmp56 :buildTitaniumDrillCfg:result
   410 jump *label52 always
-    * jump *label99 always
   411 label *label98
   412 label *label99
   413 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
 
   416 set :buildTitaniumDrillCfg:attempts 1000
   417 set :buildTitaniumDrillCfg:minimum 3
   418 label *label96
-    * jump *label94 always
   419 label *label93
   420 label *label94
   421 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
   437 set :buildTitaniumDrillCfg:attempts 0
   438 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
   439 op max :buildTitaniumDrillCfg:minimum *tmp131 1
-    * jump *label101 always
   440 label *label100
   441 label *label101
   442 label *label54
 
   958 sensor *tmp188 @unit @firstItem
   959 jump *label197 equal *tmp188 null
   960 ucontrol itemDrop @air 1000
-    * jump *label198 always
   961 label *label197
   962 label *label198
   963 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
 
  1012 sensor *tmp204 :depositItems:block :depositItems:item
  1013 jump *label214 lessThan *tmp204 :depositItems:cap
  1014 jump *label213 always
-    * jump *label215 always
  1015 label *label214
  1016 label *label215
  1017 label *label212
 
  1042 printflush message1
  1043 stop
  1044 label *label222
-    * jump *label221 always
  1045 label *label220
  1046 label *label221
  1047 label *label219
 
  1071 op land *tmp218 *tmp216 *tmp217
  1072 jump *label230 equal *tmp218 false
  1073 jump *label229 always
-    * jump *label231 always
  1074 label *label230
  1075 label *label231
  1076 ucontrol mine :mineOre:x :mineOre:y
 
  1131 op land *tmp229 *tmp227 *tmp228
  1132 jump *label242 equal *tmp229 false
  1133 ucontrol itemDrop @air 1000
-    * jump *label243 always
  1134 label *label242
  1135 label *label243
  1136 label *label240
 
  1178 setaddr :mineOre*retaddr *label257 (h:*label257)
  1179 call *label6 *invalid :mineOre*retval (m:*label257) (h:*label257)
  1180 label *label257
-    * jump *label256 always
  1181 label *label255
  1182 label *label256
  1183 label *label253
  1184 set :supplyBase:supplied true
-    * jump *label251 always
  1185 label *label250
  1186 label *label251
-    * jump *label249 always
  1187 label *label248
  1188 label *label249
  1189 sensor *tmp248 .core @silicon
 
  1212 setaddr :mineOre*retaddr *label267 (h:*label267)
  1213 call *label6 *invalid :mineOre*retval (m:*label267) (h:*label267)
  1214 label *label267
-    * jump *label266 always
  1215 label *label265
  1216 label *label266
  1217 label *label263
 
  1242 setaddr :mineOre*retaddr *label275 (h:*label275)
  1243 call *label6 *invalid :mineOre*retval (m:*label275) (h:*label275)
  1244 label *label275
-    * jump *label274 always
  1245 label *label273
  1246 label *label274
  1247 label *label271
  1248 set :supplyBase:supplied true
-    * jump *label269 always
  1249 label *label268
  1250 label *label269
  1251 label *label261
-    * jump *label259 always
  1252 label *label258
  1253 label *label259
  1254 sensor *tmp267 .battery @totalPower
 
  1277 setaddr :mineOre*retaddr *label285 (h:*label285)
  1278 call *label6 *invalid :mineOre*retval (m:*label285) (h:*label285)
  1279 label *label285
-    * jump *label284 always
  1280 label *label283
  1281 label *label284
  1282 label *label281
  1283 set :supplyBase:supplied true
-    * jump *label279 always
  1284 label *label278
  1285 label *label279
-    * jump *label277 always
  1286 label *label276
  1287 label *label277
-    * jump *label247 always
  1288 label *label246
  1289 label *label247
  1290 sensor *tmp278 .titanium_drill @titanium
 
  1375 label *label301
  1376 label *label295
  1377 label *label291
-    * jump *label289 always
  1378 label *label288
  1379 label *label289
  1380 jump *label287 always
 
  1511 jump *label339 notEqual :buildBlockAt:type :buildBlockAt:block
  1512 set :buildBlockAt*retval :buildBlockAt:building
  1513 jump *label334 always
-    * jump *label340 always
  1514 label *label339
  1515 label *label340
  1516 jump *label341 equal :buildBlockAt:skipError false
  1517 set :buildBlockAt*retval null
  1518 jump *label334 always
-    * jump *label342 always
  1519 label *label341
  1520 label *label342
  1521 print "[salmon]"
 
  1528 printflush message1
  1529 stop
  1530 label *label343
-    * jump *label338 always
  1531 label *label337
  1532 label *label338
  1533 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1536 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1537 jump *label347 notEqual :buildBlockAt:building null
  1538 jump *label346 always
-    * jump *label348 always
  1539 label *label347
  1540 label *label348
  1541 label *label345
 
  1612 call *label1 *invalid :moveTo.1*retval (m:*label361) (h:*label361)
  1613 label *label361
  1614 ubind .mainUnit
-    * jump *label352 always
  1615 label *label352
  1616 return :buildUnit*retaddr
  1617 end
 
  1627 label *label366
  1628 jump *label365 notEqual @unit :findUnits:firstUnit
  1629 label *label367
-    * jump *label364 always
  1630 label *label363
  1631 label *label364
  1632 label *label362

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-33 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .unloader2 null
     6 set .factory null
-    * set .generator2 null
     7 set .kiln null
-    * set .monos 0
-    * set .flares 0
-    * set .polys 0
     8 label *label15
     9 ubind @poly
    10 ulocate building core false @copper .coreX .coreY 0 .core
 
    39 set :buildBlockFromCfg:metaglass 0
    40 set :buildBlockFromCfg:rotation 0
    41 set :buildBlockFromCfg:config null
-    * setaddr *tmp36 *label25
    42 label *label22
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   43 op add :buildBlockFromCfg:x .coreX -1.5
+   44 op add :buildBlockFromCfg:y .coreY 2.5
+   45 set :buildBlock:block @graphite-press
    46 set :buildBlock:x :buildBlockFromCfg:x
    47 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   48 set :buildBlock:copper 75
+   49 set :buildBlock:lead 30
+   50 set :buildBlock:graphite 0
+   51 set :buildBlock:silicon 0
+   52 set :buildBlock:titanium 0
+   53 set :buildBlock:metaglass 0
+   54 set :buildBlock:rotation 0
+   55 set :buildBlock:config null
    56 setaddr :buildBlock*retaddr *label26 (h:*label26)
    57 call *label12 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    58 label *label26
 
    62 multijump *tmp36 0 0 (m:marker0)
    63 multilabel *label25 (m:marker0)
    64 label *label24
-    * set *tmp35 null
    65 label *label21
    66 set .press *tmp35
    67 set :buildBlockFromCfg.1:block @battery
 
    75 set :buildBlockFromCfg.1:metaglass 0
    76 set :buildBlockFromCfg.1:rotation 0
    77 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp40 *label31
    78 label *label28
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   79 op add :buildBlockFromCfg.1:x .coreX 0
+   80 op add :buildBlockFromCfg.1:y .coreY 4
+   81 set :buildBlock:block @battery
    82 set :buildBlock:x :buildBlockFromCfg.1:x
    83 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   84 set :buildBlock:copper 5
+   85 set :buildBlock:lead 20
+   86 set :buildBlock:graphite 0
+   87 set :buildBlock:silicon 0
+   88 set :buildBlock:titanium 0
+   89 set :buildBlock:metaglass 0
+   90 set :buildBlock:rotation 0
+   91 set :buildBlock:config null
    92 setaddr :buildBlock*retaddr *label32 (h:*label32)
    93 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    94 label *label32
 
    98 multijump *tmp40 0 0 (m:marker1)
    99 multilabel *label31 (m:marker1)
   100 label *label30
-    * set *tmp39 null
   101 label *label27
   102 set .battery *tmp39
   103 set :buildBlockFromCfg.2:block @battery
 
   111 set :buildBlockFromCfg.2:metaglass 0
   112 set :buildBlockFromCfg.2:rotation 0
   113 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp44 *label37
   114 label *label34
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  115 op add :buildBlockFromCfg.2:x .coreX -1
+  116 op add :buildBlockFromCfg.2:y .coreY 4
+  117 set :buildBlock:block @battery
   118 set :buildBlock:x :buildBlockFromCfg.2:x
   119 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  120 set :buildBlock:copper 5
+  121 set :buildBlock:lead 20
+  122 set :buildBlock:graphite 0
+  123 set :buildBlock:silicon 0
+  124 set :buildBlock:titanium 0
+  125 set :buildBlock:metaglass 0
+  126 set :buildBlock:rotation 0
+  127 set :buildBlock:config null
   128 setaddr :buildBlock*retaddr *label38 (h:*label38)
   129 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
   130 label *label38
 
   145 set :buildBlockFromCfg.3:metaglass 0
   146 set :buildBlockFromCfg.3:rotation 0
   147 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp48 *label43
   148 label *label40
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  149 op add :buildBlockFromCfg.3:x .coreX 0
+  150 op add :buildBlockFromCfg.3:y .coreY 3
+  151 set :buildBlock:block @combustion-generator
   152 set :buildBlock:x :buildBlockFromCfg.3:x
   153 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  154 set :buildBlock:copper 25
+  155 set :buildBlock:lead 15
+  156 set :buildBlock:graphite 0
+  157 set :buildBlock:silicon 0
+  158 set :buildBlock:titanium 0
+  159 set :buildBlock:metaglass 0
+  160 set :buildBlock:rotation 0
+  161 set :buildBlock:config null
   162 setaddr :buildBlock*retaddr *label44 (h:*label44)
   163 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   164 label *label44
 
   168 multijump *tmp48 0 0 (m:marker3)
   169 multilabel *label43 (m:marker3)
   170 label *label42
-    * set *tmp47 null
   171 label *label39
   172 set .generator *tmp47
   173 set .powerTarget 400
 
   182 set :buildBlockFromCfg.4:metaglass 0
   183 set :buildBlockFromCfg.4:rotation 0
   184 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp52 *label49
   185 label *label46
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  186 op add :buildBlockFromCfg.4:x .coreX 1.5
+  187 op add :buildBlockFromCfg.4:y .coreY 2.5
+  188 set :buildBlock:block @silicon-smelter
   189 set :buildBlock:x :buildBlockFromCfg.4:x
   190 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  191 set :buildBlock:copper 30
+  192 set :buildBlock:lead 25
+  193 set :buildBlock:graphite 0
+  194 set :buildBlock:silicon 0
+  195 set :buildBlock:titanium 0
+  196 set :buildBlock:metaglass 0
+  197 set :buildBlock:rotation 0
+  198 set :buildBlock:config null
   199 setaddr :buildBlock*retaddr *label50 (h:*label50)
   200 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   201 label *label50
 
   205 multijump *tmp52 0 0 (m:marker4)
   206 multilabel *label49 (m:marker4)
   207 label *label48
-    * set *tmp51 null
   208 label *label45
   209 set .smelter *tmp51
   210 set :buildTitaniumDrillCfg:distance 32
 
   228 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   229 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   230 label *label58
-    * set :locateOre:ore :locateOreAway:ore
+  231 set :locateOre:ore @titanium
   232 setaddr :locateOre*retaddr *label61 (h:*label61)
   233 call *label5 *invalid :locateOre*retval (m:*label61) (h:*label61)
   234 label *label61
   235 set :locateOreAway:x :locateOre:x
   236 set :locateOreAway:y :locateOre:y
-    * op sub *tmp58 :locateOreAway:x .coreX
+  237 op sub *tmp58 :locateOre:x .coreX
   238 op abs *tmp59 *tmp58
   239 op greaterThanEq *tmp60 *tmp59 10
-    * op sub *tmp61 :locateOreAway:y .coreY
+  240 op sub *tmp61 :locateOre:y .coreY
   241 op abs *tmp62 *tmp61
   242 op greaterThanEq *tmp63 *tmp62 10
   243 op or *tmp64 *tmp60 *tmp63
 
   267 set :buildTitaniumDrillCfg:y :locateOreAway:y
   268 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   269 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  270 set :moveTo.1:x :locateOreAway:x
+  271 set :moveTo.1:y :locateOreAway:y
   272 setaddr :moveTo.1*retaddr *label66 (h:*label66)
   273 call *label1 *invalid :moveTo.1*retval (m:*label66) (h:*label66)
   274 label *label66
-    * set :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:x
-    * set :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:y
+  275 set :buildTitaniumDrillCfg:ax :locateOreAway:x
+  276 set :buildTitaniumDrillCfg:ay :locateOreAway:y
   277 set :buildTitaniumDrillCfg:best 0
   278 set :buildTitaniumDrillCfg:dx 0
   279 set :buildTitaniumDrillCfg:dy 0
 
   306 set :checkOre:x :buildTitaniumDrillCfg:ax
   307 set :checkOre:y :buildTitaniumDrillCfg:ay
   308 set :checkOre:ore @ore-titanium
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * jump *label78 notEqual :checkOre:floor :checkOre:ore
-    * op add :checkOre:count :checkOre:count 1
+  309 set :checkOre:count 0
+  310 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  311 jump *label78 notEqual :checkOre:floor @ore-titanium
+  312 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   313 label *label78
   314 label *label79
   315 label *label77
 
   317 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   318 set :checkOre.1:y :buildTitaniumDrillCfg:ay
   319 set :checkOre.1:ore @ore-titanium
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * jump *label81 notEqual :checkOre.1:floor :checkOre.1:ore
-    * op add :checkOre.1:count :checkOre.1:count 1
+  320 set :checkOre.1:count :checkOre:count
+  321 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  322 jump *label81 notEqual :checkOre.1:floor @ore-titanium
+  323 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   324 label *label81
   325 label *label82
   326 label *label80
 
   329 set :checkOre.2:x :buildTitaniumDrillCfg:ax
   330 set :checkOre.2:y *tmp87
   331 set :checkOre.2:ore @ore-titanium
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * jump *label84 notEqual :checkOre.2:floor :checkOre.2:ore
-    * op add :checkOre.2:count :checkOre.2:count 1
+  332 set :checkOre.2:count :checkOre.1:count
+  333 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
+  334 jump *label84 notEqual :checkOre.2:floor @ore-titanium
+  335 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   336 label *label84
   337 label *label85
   338 label *label83
   339 set :buildTitaniumDrillCfg:count :checkOre.2:count
   340 op add *tmp94 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   341 op add *tmp95 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x *tmp94
-    * set :checkOre.3:y *tmp95
+  342 set :checkOre.3:x :checkOre.1:x
+  343 set :checkOre.3:y *tmp87
   344 set :checkOre.3:ore @ore-titanium
-    * set :checkOre.3:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.3:x :checkOre.3:y 0 0 :checkOre.3:floor
-    * jump *label87 notEqual :checkOre.3:floor :checkOre.3:ore
-    * op add :checkOre.3:count :checkOre.3:count 1
+  345 set :checkOre.3:count :checkOre.2:count
+  346 ucontrol getBlock *tmp94 *tmp95 0 0 :checkOre.3:floor
+  347 jump *label87 notEqual :checkOre.3:floor @ore-titanium
+  348 op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
   349 label *label87
   350 label *label88
   351 label *label86
   352 set :buildTitaniumDrillCfg:count :checkOre.3:count
-    * jump *label89 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  353 jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   354 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   355 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label91 lessThan :buildTitaniumDrillCfg:count 4
+  356 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  357 jump *label91 lessThan :checkOre.3:count 4
   358 jump *label69 always
   359 label *label91
   360 label *label92
 
   373 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax *tmp108
   374 op div *tmp110 :buildTitaniumDrillCfg:dy 2
   375 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay *tmp110
-    * op sub *tmp112 :buildTitaniumDrillCfg:x .coreX
+  376 op sub *tmp112 :locateOreAway:x .coreX
   377 op abs *tmp113 *tmp112
   378 op greaterThanEq *tmp114 *tmp113 10
-    * op sub *tmp115 :buildTitaniumDrillCfg:y .coreY
+  379 op sub *tmp115 :locateOreAway:y .coreY
   380 op abs *tmp116 *tmp115
   381 op greaterThanEq *tmp117 *tmp116 10
   382 op or *tmp118 *tmp114 *tmp117
 
   391 call *label11 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   392 label *label97
   393 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label98 equal :buildTitaniumDrillCfg:result null
-    * set *tmp56 :buildTitaniumDrillCfg:result
+  394 jump *label98 equal :buildBlockAt*retval null
+  395 set *tmp56 :buildBlockAt*retval
   396 jump *label52 always
   397 label *label98
   398 label *label99
-    * ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
+  399 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   400 jump *label96 always
   401 label *label95
   402 set :buildTitaniumDrillCfg:attempts 1000
 
   406 label *label94
   407 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   408 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
-    * op sin *tmp125 :buildTitaniumDrillCfg:angle
-    * op mul *tmp126 *tmp125 :buildTitaniumDrillCfg:distance
+  409 op sin *tmp125 :locateOreAway:angle
+  410 op mul *tmp126 *tmp125 :locateOreAway:distance
   411 op add *tmp127 .coreX *tmp126
-    * op cos *tmp128 :buildTitaniumDrillCfg:angle
-    * op mul *tmp129 *tmp128 :buildTitaniumDrillCfg:distance
+  412 op cos *tmp128 :locateOreAway:angle
+  413 op mul *tmp129 *tmp128 :locateOreAway:distance
   414 op add *tmp130 .coreY *tmp129
   415 set :moveTo.1:x *tmp127
   416 set :moveTo.1:y *tmp130
   417 setaddr :moveTo.1*retaddr *label103 (h:*label103)
   418 call *label1 *invalid :moveTo.1*retval (m:*label103) (h:*label103)
   419 label *label103
-    * op add :buildTitaniumDrillCfg:distance :buildTitaniumDrillCfg:distance 4
-    * op add :buildTitaniumDrillCfg:angle :buildTitaniumDrillCfg:angle 45
+  420 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
+  421 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
   422 label *label102
   423 set :buildTitaniumDrillCfg:attempts 0
   424 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
 
   432 label *label52
   433 set *tmp55 *tmp56
   434 label *label51
-    * set .titanium_drill *tmp55
+  435 set .titanium_drill *tmp56
   436 set :buildBlockFromCfg.5:block @unloader
   437 set :buildBlockFromCfg.5:offsetX 0
   438 set :buildBlockFromCfg.5:offsetY 2
 
   444 set :buildBlockFromCfg.5:metaglass 0
   445 set :buildBlockFromCfg.5:rotation 0
   446 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp134 *label108
   447 label *label105
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  448 op add :buildBlockFromCfg.5:x .coreX 0
+  449 op add :buildBlockFromCfg.5:y .coreY 2
+  450 set :buildBlock:block @unloader
   451 set :buildBlock:x :buildBlockFromCfg.5:x
   452 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  453 set :buildBlock:copper 0
+  454 set :buildBlock:lead 0
+  455 set :buildBlock:graphite 0
+  456 set :buildBlock:silicon 30
+  457 set :buildBlock:titanium 25
+  458 set :buildBlock:metaglass 0
+  459 set :buildBlock:rotation 0
+  460 set :buildBlock:config null
   461 setaddr :buildBlock*retaddr *label109 (h:*label109)
   462 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   463 label *label109
 
   467 multijump *tmp134 0 0 (m:marker6)
   468 multilabel *label108 (m:marker6)
   469 label *label107
-    * set *tmp133 null
   470 label *label104
   471 set .unloader1 *tmp133
   472 set :buildBlockFromCfg.6:block @micro-processor
 
   480 set :buildBlockFromCfg.6:metaglass 0
   481 set :buildBlockFromCfg.6:rotation 0
   482 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp138 *label114
   483 label *label111
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  484 op add :buildBlockFromCfg.6:x .coreX 1
+  485 op add :buildBlockFromCfg.6:y .coreY 4
+  486 set :buildBlock:block @micro-processor
   487 set :buildBlock:x :buildBlockFromCfg.6:x
   488 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  489 set :buildBlock:copper 90
+  490 set :buildBlock:lead 50
+  491 set :buildBlock:graphite 0
+  492 set :buildBlock:silicon 50
+  493 set :buildBlock:titanium 0
+  494 set :buildBlock:metaglass 0
+  495 set :buildBlock:rotation 0
+  496 set :buildBlock:config processor2
   497 setaddr :buildBlock*retaddr *label115 (h:*label115)
   498 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   499 label *label115
 
   503 multijump *tmp138 0 0 (m:marker7)
   504 multilabel *label114 (m:marker7)
   505 label *label113
-    * set *tmp137 null
   506 label *label110
   507 set .processor *tmp137
-    * write .core .processor ".core"
-    * write .battery .processor ".battery"
-    * write .generator .processor ".generator"
-    * write .smelter .processor ".smelter"
-    * write .press .processor ".press"
+  508 write .core *tmp137 ".core"
+  509 write *tmp39 *tmp137 ".battery"
+  510 write *tmp47 *tmp137 ".generator"
+  511 write *tmp51 *tmp137 ".smelter"
+  512 write *tmp35 *tmp137 ".press"
   513 set :buildBlockFromCfg.7:block @power-node
   514 set :buildBlockFromCfg.7:offsetX -2
   515 set :buildBlockFromCfg.7:offsetY -1
 
   521 set :buildBlockFromCfg.7:metaglass 0
   522 set :buildBlockFromCfg.7:rotation 0
   523 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp142 *label120
   524 label *label117
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  525 op add :buildBlockFromCfg.7:x .coreX -2
+  526 op add :buildBlockFromCfg.7:y .coreY -1
+  527 set :buildBlock:block @power-node
   528 set :buildBlock:x :buildBlockFromCfg.7:x
   529 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  530 set :buildBlock:copper 2
+  531 set :buildBlock:lead 6
+  532 set :buildBlock:graphite 0
+  533 set :buildBlock:silicon 0
+  534 set :buildBlock:titanium 0
+  535 set :buildBlock:metaglass 0
+  536 set :buildBlock:rotation 0
+  537 set :buildBlock:config null
   538 setaddr :buildBlock*retaddr *label121 (h:*label121)
   539 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   540 label *label121
 
   555 set :buildBlockFromCfg.8:metaglass 0
   556 set :buildBlockFromCfg.8:rotation 3
   557 set :buildBlockFromCfg.8:config @mono
-    * setaddr *tmp146 *label126
   558 label *label123
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  559 op add :buildBlockFromCfg.8:x .coreX -4
+  560 op add :buildBlockFromCfg.8:y .coreY -1
+  561 set :buildBlock:block @air-factory
   562 set :buildBlock:x :buildBlockFromCfg.8:x
   563 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  564 set :buildBlock:copper 60
+  565 set :buildBlock:lead 70
+  566 set :buildBlock:graphite 0
+  567 set :buildBlock:silicon 0
+  568 set :buildBlock:titanium 0
+  569 set :buildBlock:metaglass 0
+  570 set :buildBlock:rotation 3
+  571 set :buildBlock:config @mono
   572 setaddr :buildBlock*retaddr *label127 (h:*label127)
   573 call *label12 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   574 label *label127
 
   578 multijump *tmp146 0 0 (m:marker9)
   579 multilabel *label126 (m:marker9)
   580 label *label125
-    * set *tmp145 null
   581 label *label122
   582 set .factory *tmp145
-    * write .factory .processor ".factory"
+  583 write *tmp145 *tmp137 ".factory"
   584 set :buildBlockFromCfg.9:block @unloader
   585 set :buildBlockFromCfg.9:offsetX -2
   586 set :buildBlockFromCfg.9:offsetY 1
 
   592 set :buildBlockFromCfg.9:metaglass 0
   593 set :buildBlockFromCfg.9:rotation 0
   594 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp150 *label132
   595 label *label129
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  596 op add :buildBlockFromCfg.9:x .coreX -2
+  597 op add :buildBlockFromCfg.9:y .coreY 1
+  598 set :buildBlock:block @unloader
   599 set :buildBlock:x :buildBlockFromCfg.9:x
   600 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  601 set :buildBlock:copper 0
+  602 set :buildBlock:lead 0
+  603 set :buildBlock:graphite 0
+  604 set :buildBlock:silicon 30
+  605 set :buildBlock:titanium 25
+  606 set :buildBlock:metaglass 0
+  607 set :buildBlock:rotation 0
+  608 set :buildBlock:config null
   609 setaddr :buildBlock*retaddr *label133 (h:*label133)
   610 call *label12 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   611 label *label133
 
   615 multijump *tmp150 0 0 (m:marker10)
   616 multilabel *label132 (m:marker10)
   617 label *label131
-    * set *tmp149 null
   618 label *label128
   619 set .unloader2 *tmp149
-    * write .unloader2 .processor ".unloader2"
+  620 write *tmp149 *tmp137 ".unloader2"
   621 set :buildBlockFromCfg.10:block @overflow-gate
   622 set :buildBlockFromCfg.10:offsetX -3
   623 set :buildBlockFromCfg.10:offsetY 1
 
   629 set :buildBlockFromCfg.10:metaglass 0
   630 set :buildBlockFromCfg.10:rotation 0
   631 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp154 *label138
   632 label *label135
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  633 op add :buildBlockFromCfg.10:x .coreX -3
+  634 op add :buildBlockFromCfg.10:y .coreY 1
+  635 set :buildBlock:block @overflow-gate
   636 set :buildBlock:x :buildBlockFromCfg.10:x
   637 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  638 set :buildBlock:copper 4
+  639 set :buildBlock:lead 2
+  640 set :buildBlock:graphite 0
+  641 set :buildBlock:silicon 0
+  642 set :buildBlock:titanium 0
+  643 set :buildBlock:metaglass 0
+  644 set :buildBlock:rotation 0
+  645 set :buildBlock:config null
   646 setaddr :buildBlock*retaddr *label139 (h:*label139)
   647 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   648 label *label139
 
   681 set :buildBlockFromCfg.11:metaglass 0
   682 set :buildBlockFromCfg.11:rotation 0
   683 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp160 *label148
   684 label *label145
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  685 op add :buildBlockFromCfg.11:x .coreX 2
+  686 op add :buildBlockFromCfg.11:y .coreY 0
+  687 set :buildBlock:block @unloader
   688 set :buildBlock:x :buildBlockFromCfg.11:x
   689 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  690 set :buildBlock:copper 0
+  691 set :buildBlock:lead 0
+  692 set :buildBlock:graphite 0
+  693 set :buildBlock:silicon 30
+  694 set :buildBlock:titanium 25
+  695 set :buildBlock:metaglass 0
+  696 set :buildBlock:rotation 0
+  697 set :buildBlock:config null
   698 setaddr :buildBlock*retaddr *label149 (h:*label149)
   699 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   700 label *label149
 
   715 set :buildBlockFromCfg.12:metaglass 0
   716 set :buildBlockFromCfg.12:rotation 0
   717 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp164 *label154
   718 label *label151
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  719 op add :buildBlockFromCfg.12:x .coreX 3.5
+  720 op add :buildBlockFromCfg.12:y .coreY 0.5
+  721 set :buildBlock:block @kiln
   722 set :buildBlock:x :buildBlockFromCfg.12:x
   723 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  724 set :buildBlock:copper 60
+  725 set :buildBlock:lead 30
+  726 set :buildBlock:graphite 30
+  727 set :buildBlock:silicon 0
+  728 set :buildBlock:titanium 0
+  729 set :buildBlock:metaglass 0
+  730 set :buildBlock:rotation 0
+  731 set :buildBlock:config null
   732 setaddr :buildBlock*retaddr *label155 (h:*label155)
   733 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   734 label *label155
 
   738 multilabel *label154 (m:marker13)
   739 label *label153
   740 label *label150
-    * write .kiln .processor ".kiln"
+  741 write null *tmp137 ".kiln"
   742 set :buildBlockFromCfg.13:block @junction
   743 set :buildBlockFromCfg.13:offsetX 2
   744 set :buildBlockFromCfg.13:offsetY 1
 
   750 set :buildBlockFromCfg.13:metaglass 0
   751 set :buildBlockFromCfg.13:rotation 0
   752 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp168 *label160
   753 label *label157
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  754 op add :buildBlockFromCfg.13:x .coreX 2
+  755 op add :buildBlockFromCfg.13:y .coreY 1
+  756 set :buildBlock:block @junction
   757 set :buildBlock:x :buildBlockFromCfg.13:x
   758 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  759 set :buildBlock:copper 3
+  760 set :buildBlock:lead 0
+  761 set :buildBlock:graphite 0
+  762 set :buildBlock:silicon 0
+  763 set :buildBlock:titanium 0
+  764 set :buildBlock:metaglass 0
+  765 set :buildBlock:rotation 0
+  766 set :buildBlock:config null
   767 setaddr :buildBlock*retaddr *label161 (h:*label161)
   768 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   769 label *label161
 
   784 set :buildBlockFromCfg.14:metaglass 30
   785 set :buildBlockFromCfg.14:rotation 0
   786 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp172 *label166
   787 label *label163
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  788 op add :buildBlockFromCfg.14:x .coreX -3.5
+  789 op add :buildBlockFromCfg.14:y .coreY 4.5
+  790 set :buildBlock:block @water-extractor
   791 set :buildBlock:x :buildBlockFromCfg.14:x
   792 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  793 set :buildBlock:copper 30
+  794 set :buildBlock:lead 30
+  795 set :buildBlock:graphite 30
+  796 set :buildBlock:silicon 0
+  797 set :buildBlock:titanium 0
+  798 set :buildBlock:metaglass 30
+  799 set :buildBlock:rotation 0
+  800 set :buildBlock:config null
   801 setaddr :buildBlock*retaddr *label167 (h:*label167)
   802 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   803 label *label167
 
   818 set :buildBlockFromCfg.15:metaglass 0
   819 set :buildBlockFromCfg.15:rotation 0
   820 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp176 *label172
   821 label *label169
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  822 op add :buildBlockFromCfg.15:x .coreX -3.5
+  823 op add :buildBlockFromCfg.15:y .coreY 2.5
+  824 set :buildBlock:block @steam-generator
   825 set :buildBlock:x :buildBlockFromCfg.15:x
   826 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  827 set :buildBlock:copper 35
+  828 set :buildBlock:lead 40
+  829 set :buildBlock:graphite 25
+  830 set :buildBlock:silicon 30
+  831 set :buildBlock:titanium 0
+  832 set :buildBlock:metaglass 0
+  833 set :buildBlock:rotation 0
+  834 set :buildBlock:config null
   835 setaddr :buildBlock*retaddr *label173 (h:*label173)
   836 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   837 label *label173
 
   841 multijump *tmp176 0 0 (m:marker16)
   842 multilabel *label172 (m:marker16)
   843 label *label171
-    * set *tmp175 null
   844 label *label168
   845 set .generator2 *tmp175
-    * write .generator2 .processor ".generator2"
+  846 write *tmp175 *tmp137 ".generator2"
   847 set :buildBlockFromCfg.16:block @sorter
   848 set :buildBlockFromCfg.16:offsetX -4
   849 set :buildBlockFromCfg.16:offsetY 1
 
   855 set :buildBlockFromCfg.16:metaglass 0
   856 set :buildBlockFromCfg.16:rotation 0
   857 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp180 *label178
   858 label *label175
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  859 op add :buildBlockFromCfg.16:x .coreX -4
+  860 op add :buildBlockFromCfg.16:y .coreY 1
+  861 set :buildBlock:block @sorter
   862 set :buildBlock:x :buildBlockFromCfg.16:x
   863 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  864 set :buildBlock:copper 2
+  865 set :buildBlock:lead 2
+  866 set :buildBlock:graphite 0
+  867 set :buildBlock:silicon 0
+  868 set :buildBlock:titanium 0
+  869 set :buildBlock:metaglass 0
+  870 set :buildBlock:rotation 0
+  871 set :buildBlock:config @coal
   872 setaddr :buildBlock*retaddr *label179 (h:*label179)
   873 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   874 label *label179
 
   894 end
   895 label *label0
   896 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  897 write "Moving..." .display ".status3"
   898 label *label186
   899 label *label187
   900 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
 
   910 label *label1
   911 set *tmp186 :moveTo.1:x
   912 set *tmp187 :moveTo.1:y
-    * set :moveTo:x *tmp186
-    * set :moveTo:y *tmp187
+  913 set :moveTo:x :moveTo.1:x
+  914 set :moveTo:y :moveTo.1:y
   915 set :moveTo:radius 5
   916 setaddr :moveTo*retaddr *label191 (h:*label191)
   917 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
 
   921 end
   922 label *label2
   923 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  924 write "Moving..." .display ".status3"
   925 label *label193
   926 label *label194
   927 sensor *tmp188 @unit @firstItem
 
   958 end
   959 label *label4
   960 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+  961 write "Depositing..." .display ".status3"
   962 label *label205
   963 sensor *tmp197 @unit @firstItem
   964 jump *label206 notEqual *tmp197 :depositItems:item
 
  1025 label *label224
  1026 set :mineOre:x :locateOre:x
  1027 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1028 set :moveToEmpty:x :locateOre:x
+ 1029 set :moveToEmpty:y :locateOre:y
  1030 setaddr :moveToEmpty*retaddr *label225 (h:*label225)
  1031 call *label2 *invalid :moveToEmpty*retval (m:*label225) (h:*label225)
  1032 label *label225
  1033 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1034 write "Mining..." .display ".status3"
  1035 label *label226
  1036 label *label227
  1037 sensor :mineOre:item @unit @firstItem
 
  1061 set :status2:text "Mining "
  1062 set :status2:item :mineOre.1:ore
  1063 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1064 write "Mining " .display ".status2"
+ 1065 write :mineOre.1:ore .display ".item2"
+ 1066 write "core" .display ".block2"
  1067 label *label234
  1068 set :mineOre:ore :mineOre.1:ore
  1069 set :mineOre:amount 30
 
  1081 set :status2.1:text "Fetching "
  1082 set :status2.1:item :fetchBlock:item
  1083 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1084 write "Fetching " .display ".status2"
+ 1085 write :fetchBlock:item .display ".item2"
+ 1086 write :fetchBlock:block .display ".block2"
  1087 label *label237
  1088 sensor *tmp224 :fetchBlock:block @x
  1089 sensor *tmp225 :fetchBlock:block @y
 
  1126 sensor *tmp240 .press @coal
  1127 jump *label250 greaterThanEq *tmp240 5
  1128 set :status1:text "Goal 1: Meeting the graphite target"
-    * write :status1:text .display ".status1"
+ 1129 write "Goal 1: Meeting the graphite target" .display ".status1"
  1130 label *label252
  1131 set :supplyBlock:block .press
  1132 set :supplyBlock:ore @coal
  1133 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1134 set :status2.2:item @coal
+ 1135 set :status2.2:block .press
+ 1136 write "Supplying " .display ".status2"
+ 1137 write :supplyBlock:ore .display ".item2"
+ 1138 write :supplyBlock:block .display ".block2"
  1139 label *label254
-    * sensor *tmp243 :supplyBlock:block @itemCapacity
-    * sensor *tmp244 :supplyBlock:block :supplyBlock:ore
+ 1140 sensor *tmp243 .press @itemCapacity
+ 1141 sensor *tmp244 .press @coal
  1142 op sub :supplyBlock:missing *tmp243 *tmp244
  1143 jump *label255 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1144 set :mineOre:ore @coal
  1145 set :mineOre:amount :supplyBlock:missing
-    * set :mineOre:block :supplyBlock:block
+ 1146 set :mineOre:block .press
  1147 setaddr :mineOre*retaddr *label257 (h:*label257)
  1148 call *label6 *invalid :mineOre*retval (m:*label257) (h:*label257)
  1149 label *label257
 
  1160 sensor *tmp251 .smelter @coal
  1161 jump *label260 greaterThanEq *tmp251 5
  1162 set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
-    * write :status1.1:text .display ".status1"
+ 1163 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
  1164 label *label262
  1165 set :supplyBlock.1:block .smelter
  1166 set :supplyBlock.1:ore @coal
  1167 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1168 set :status2.3:item @coal
+ 1169 set :status2.3:block .smelter
+ 1170 write "Supplying " .display ".status2"
+ 1171 write :supplyBlock.1:ore .display ".item2"
+ 1172 write :supplyBlock.1:block .display ".block2"
  1173 label *label264
-    * sensor *tmp254 :supplyBlock.1:block @itemCapacity
-    * sensor *tmp255 :supplyBlock.1:block :supplyBlock.1:ore
+ 1174 sensor *tmp254 .smelter @itemCapacity
+ 1175 sensor *tmp255 .smelter @coal
  1176 op sub :supplyBlock.1:missing *tmp254 *tmp255
  1177 jump *label265 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1178 set :mineOre:ore @coal
  1179 set :mineOre:amount :supplyBlock.1:missing
-    * set :mineOre:block :supplyBlock.1:block
+ 1180 set :mineOre:block .smelter
  1181 setaddr :mineOre*retaddr *label267 (h:*label267)
  1182 call *label6 *invalid :mineOre*retval (m:*label267) (h:*label267)
  1183 label *label267
 
  1190 sensor *tmp259 .smelter @sand
  1191 jump *label268 greaterThanEq *tmp259 5
  1192 set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
-    * write :status1.2:text .display ".status1"
+ 1193 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
  1194 label *label270
  1195 set :supplyBlock.2:block .smelter
  1196 set :supplyBlock.2:ore @sand
  1197 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1198 set :status2.4:item @sand
+ 1199 set :status2.4:block .smelter
+ 1200 write "Supplying " .display ".status2"
+ 1201 write :supplyBlock.2:ore .display ".item2"
+ 1202 write :supplyBlock.2:block .display ".block2"
  1203 label *label272
-    * sensor *tmp262 :supplyBlock.2:block @itemCapacity
-    * sensor *tmp263 :supplyBlock.2:block :supplyBlock.2:ore
+ 1204 sensor *tmp262 .smelter @itemCapacity
+ 1205 sensor *tmp263 .smelter @sand
  1206 op sub :supplyBlock.2:missing *tmp262 *tmp263
  1207 jump *label273 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1208 set :mineOre:ore @sand
  1209 set :mineOre:amount :supplyBlock.2:missing
-    * set :mineOre:block :supplyBlock.2:block
+ 1210 set :mineOre:block .smelter
  1211 setaddr :mineOre*retaddr *label275 (h:*label275)
  1212 call *label6 *invalid :mineOre*retval (m:*label275) (h:*label275)
  1213 label *label275
 
  1225 sensor *tmp270 .generator @coal
  1226 jump *label278 greaterThanEq *tmp270 4
  1227 set :status1.3:text "Goal 4: Supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1228 write "Goal 4: Supplying generator" .display ".status1"
  1229 label *label280
  1230 set :supplyBlock.3:block .generator
  1231 set :supplyBlock.3:ore @coal
  1232 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1233 set :status2.5:item @coal
+ 1234 set :status2.5:block .generator
+ 1235 write "Supplying " .display ".status2"
+ 1236 write :supplyBlock.3:ore .display ".item2"
+ 1237 write :supplyBlock.3:block .display ".block2"
  1238 label *label282
-    * sensor *tmp273 :supplyBlock.3:block @itemCapacity
-    * sensor *tmp274 :supplyBlock.3:block :supplyBlock.3:ore
+ 1239 sensor *tmp273 .generator @itemCapacity
+ 1240 sensor *tmp274 .generator @coal
  1241 op sub :supplyBlock.3:missing *tmp273 *tmp274
  1242 jump *label283 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1243 set :mineOre:ore @coal
  1244 set :mineOre:amount :supplyBlock.3:missing
-    * set :mineOre:block :supplyBlock.3:block
+ 1245 set :mineOre:block .generator
  1246 setaddr :mineOre*retaddr *label285 (h:*label285)
  1247 call *label6 *invalid :mineOre*retval (m:*label285) (h:*label285)
  1248 label *label285
 
  1262 sensor *tmp283 .battery @totalPower
  1263 jump *label290 greaterThanEq *tmp283 .powerTarget
  1264 set :status1.4:text "Goal 5: Supplying generator (5)"
-    * write :status1.4:text .display ".status1"
+ 1265 write "Goal 5: Supplying generator (5)" .display ".status1"
  1266 label *label292
  1267 set :mineOre.1:ore @coal
  1268 setaddr :mineOre.1*retaddr *label293 (h:*label293)
 
  1273 sensor *tmp286 .core @silicon
  1274 jump *label294 greaterThanEq *tmp286 .siliconTarget
  1275 set :status1.5:text "Goal 6: Meeting the silicon target"
-    * write :status1.5:text .display ".status1"
+ 1276 write "Goal 6: Meeting the silicon target" .display ".status1"
  1277 label *label296
  1278 sensor :supplyBase:coal .core @coal
  1279 sensor :supplyBase:sand .core @sand
 
  1284 set *tmp292 @sand
  1285 label *label298
  1286 set :supplyBase:ore *tmp292
-    * set :mineOre.1:ore :supplyBase:ore
+ 1287 set :mineOre.1:ore *tmp292
  1288 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1289 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
  1290 label *label299
 
  1293 sensor *tmp293 .core @copper
  1294 jump *label300 greaterThanEq *tmp293 .copperTarget
  1295 set :status1.6:text "Goal 7: Meeting the copper target"
-    * write :status1.6:text .display ".status1"
+ 1296 write "Goal 7: Meeting the copper target" .display ".status1"
  1297 label *label302
  1298 set :mineOre.1:ore @copper
  1299 setaddr :mineOre.1*retaddr *label303 (h:*label303)
 
  1304 sensor *tmp296 .core @lead
  1305 jump *label304 greaterThanEq *tmp296 .leadTarget
  1306 set :status1.7:text "Goal 8: Meeting the lead target"
-    * write :status1.7:text .display ".status1"
+ 1307 write "Goal 8: Meeting the lead target" .display ".status1"
  1308 label *label306
  1309 set :mineOre.1:ore @lead
  1310 setaddr :mineOre.1*retaddr *label307 (h:*label307)
 
  1315 sensor *tmp299 .core @metaglass
  1316 jump *label308 greaterThanEq *tmp299 .metaglassTarget
  1317 set :status1.8:text "Goal 9: Meeting the metaglass target"
-    * write :status1.8:text .display ".status1"
+ 1318 write "Goal 9: Meeting the metaglass target" .display ".status1"
  1319 label *label310
  1320 set :mineOre.1:ore @sand
  1321 setaddr :mineOre.1*retaddr *label311 (h:*label311)
 
  1324 jump *label309 always
  1325 label *label308
  1326 set :status1.9:text "Goal 10: Supplying base"
-    * write :status1.9:text .display ".status1"
+ 1327 write "Goal 10: Supplying base" .display ".status1"
  1328 label *label312
  1329 sensor :supplyBase:coal.1 .core @coal
  1330 sensor :supplyBase:sand.1 .core @sand
 
  1335 set *tmp305 @sand
  1336 label *label314
  1337 set :supplyBase:ore.1 *tmp305
-    * set :mineOre.1:ore :supplyBase:ore.1
+ 1338 set :mineOre.1:ore *tmp305
  1339 setaddr :mineOre.1*retaddr *label315 (h:*label315)
  1340 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
  1341 label *label315
 
  1349 jump *label287 always
  1350 label *label286
  1351 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1352 write "Goal 11: Fetching titanium" .display ".status1"
  1353 label *label316
  1354 set :fetchBlock:block .titanium_drill
  1355 set :fetchBlock:item @titanium
 
  1409 op add .leadTarget :meetTarget:lead *tmp310
  1410 set .graphiteTarget :meetTarget:graphite
  1411 op mul *tmp312 .factory 10
-    * op add .siliconTarget :meetTarget:silicon *tmp312
+ 1412 op add .siliconTarget :meetTarget:silicon *tmp310
  1413 set .titaniumTarget :meetTarget:titanium
  1414 set .metaglassTarget :meetTarget:metaglass
-    * op add *tmp314 .graphiteTarget 20
+ 1415 op add *tmp314 :meetTarget:graphite 20
  1416 write *tmp314 .processor ".pressTarget"
  1417 op add *tmp315 .siliconTarget 20
  1418 write *tmp315 .processor ".smelterTarget"
-    * op add *tmp316 .metaglassTarget 20
+ 1419 op add *tmp316 :meetTarget:metaglass 20
  1420 write *tmp316 .processor ".kilnTarget"
  1421 sensor *tmp317 .core @titanium
-    * jump *label328 greaterThanEq *tmp317 .titaniumTarget
+ 1422 jump *label328 greaterThanEq *tmp317 :meetTarget:titanium
  1423 set *tmp319 7
  1424 jump *label329 always
  1425 label *label328
 
  1473 call *label1 *invalid :moveTo.1*retval (m:*label335) (h:*label335)
  1474 label *label335
  1475 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1476 write "Building..." .display ".status3"
  1477 label *label336
  1478 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1479 jump *label337 equal :buildBlockAt:building null
 
  1512 label *label346
  1513 set :buildBlockAt*retval :buildBlockAt:building
  1514 jump *label334 always
-    * set :buildBlockAt*retval null
  1515 label *label334
  1516 return :buildBlockAt*retaddr
  1517 end
 
  1539 label *label351
  1540 set :buildBlock*retval :buildBlockAt*retval
  1541 jump *label349 always
-    * set :buildBlock*retval null
  1542 label *label349
  1543 return :buildBlock*retaddr
  1544 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-255 instructions):
 
     4 set .titanium_drill null
     5 set .unloader1 null
     6 set .factory null
-    * set .kiln null
     7 label *label15
     8 ubind @poly
     9 ulocate building core false @copper .coreX .coreY 0 .core
 
    27 call *label14 *invalid :findUnits*retval (m:*label20) (h:*label20)
    28 label *label20
    29 set .polys :findUnits:count
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    30 label *label22
    31 op add :buildBlockFromCfg:x .coreX -1.5
    32 op add :buildBlockFromCfg:y .coreY 2.5
 
    52 label *label24
    53 label *label21
    54 set .press *tmp35
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    55 label *label28
    56 op add :buildBlockFromCfg.1:x .coreX 0
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    77 label *label30
    78 label *label27
    79 set .battery *tmp39
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    80 label *label34
    81 op add :buildBlockFromCfg.2:x .coreX -1
    82 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    83 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   84 set :buildBlock:y :buildBlockFromCfg.1:y
    85 set :buildBlock:graphite 0
    86 set :buildBlock:silicon 0
    87 set :buildBlock:titanium 0
 
    97 multilabel *label37 (m:marker2)
    98 label *label36
    99 label *label33
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   100 label *label40
   101 op add :buildBlockFromCfg.3:x .coreX 0
   102 op add :buildBlockFromCfg.3:y .coreY 3
   103 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  104 set :buildBlock:x :buildBlockFromCfg.1:x
   105 set :buildBlock:y :buildBlockFromCfg.3:y
   106 set :buildBlock:copper 25
   107 set :buildBlock:lead 15
 
   123 label *label39
   124 set .generator *tmp47
   125 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   126 label *label46
   127 op add :buildBlockFromCfg.4:x .coreX 1.5
   128 op add :buildBlockFromCfg.4:y .coreY 2.5
   129 set :buildBlock:block @silicon-smelter
   130 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  131 set :buildBlock:y :buildBlockFromCfg:y
   132 set :buildBlock:copper 30
   133 set :buildBlock:lead 25
   134 set :buildBlock:graphite 0
 
   165 setaddr :meetTarget*retaddr *label56 (h:*label56)
   166 call *label10 *invalid :meetTarget*retval (m:*label56) (h:*label56)
   167 label *label56
-    * set :locateOreAway:ore @titanium
   168 set :locateOreAway:distance :buildTitaniumDrillCfg:distance
   169 set :locateOreAway:angle :buildTitaniumDrillCfg:angle
   170 label *label58
 
   203 jump *label58 always
   204 label *label60
   205 label *label57
-    * set :buildTitaniumDrillCfg:x :locateOreAway:x
-    * set :buildTitaniumDrillCfg:y :locateOreAway:y
   206 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   207 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   208 set :moveTo.1:x :locateOreAway:x
 
   241 setaddr *tmp73 *label76
   242 label *label70
   243 set :buildTitaniumDrillCfg:count 0
-    * set :checkOre:x :buildTitaniumDrillCfg:ax
-    * set :checkOre:y :buildTitaniumDrillCfg:ay
-    * set :checkOre:ore @ore-titanium
   244 set :checkOre:count 0
   245 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   246 jump *label78 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  247 op add :checkOre:count 0 1
   248 label *label78
   249 label *label79
   250 label *label77
   251 set :buildTitaniumDrillCfg:count :checkOre:count
   252 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:y :buildTitaniumDrillCfg:ay
-    * set :checkOre.1:ore @ore-titanium
   253 set :checkOre.1:count :checkOre:count
   254 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   255 jump *label81 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  256 op add :checkOre.1:count :checkOre:count 1
   257 label *label81
   258 label *label82
   259 label *label80
   260 set :buildTitaniumDrillCfg:count :checkOre.1:count
   261 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :buildTitaniumDrillCfg:ax
-    * set :checkOre.2:y *tmp87
-    * set :checkOre.2:ore @ore-titanium
   262 set :checkOre.2:count :checkOre.1:count
   263 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   264 jump *label84 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  265 op add :checkOre.2:count :checkOre.1:count 1
   266 label *label84
   267 label *label85
   268 label *label83
   269 set :buildTitaniumDrillCfg:count :checkOre.2:count
   270 op add *tmp94 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   271 op add *tmp95 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.3:x :checkOre.1:x
-    * set :checkOre.3:y *tmp87
-    * set :checkOre.3:ore @ore-titanium
   272 set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock *tmp94 *tmp95 0 0 :checkOre.3:floor
+  273 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   274 jump *label87 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :buildTitaniumDrillCfg:count 1
+  275 op add :checkOre.3:count :checkOre.2:count 1
   276 label *label87
   277 label *label88
   278 label *label86
-    * set :buildTitaniumDrillCfg:count :checkOre.3:count
   279 jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   280 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
   281 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
 
   316 setaddr :buildBlockAt*retaddr *label97 (h:*label97)
   317 call *label11 *invalid :buildBlockAt*retval (m:*label97) (h:*label97)
   318 label *label97
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   319 jump *label98 equal :buildBlockAt*retval null
   320 set *tmp56 :buildBlockAt*retval
   321 jump *label52 always
 
   355 label *label55
   356 set *tmp56 null
   357 label *label52
-    * set *tmp55 *tmp56
   358 label *label51
   359 set .titanium_drill *tmp56
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
   360 label *label105
   361 op add :buildBlockFromCfg.5:x .coreX 0
   362 op add :buildBlockFromCfg.5:y .coreY 2
   363 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  364 set :buildBlock:x :buildBlockFromCfg.1:x
   365 set :buildBlock:y :buildBlockFromCfg.5:y
   366 set :buildBlock:copper 0
   367 set :buildBlock:lead 0
 
   382 label *label107
   383 label *label104
   384 set .unloader1 *tmp133
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   385 label *label111
   386 op add :buildBlockFromCfg.6:x .coreX 1
   387 op add :buildBlockFromCfg.6:y .coreY 4
   388 set :buildBlock:block @micro-processor
   389 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  390 set :buildBlock:y :buildBlockFromCfg.1:y
   391 set :buildBlock:copper 90
   392 set :buildBlock:lead 50
   393 set :buildBlock:graphite 0
 
   412 write *tmp47 *tmp137 ".generator"
   413 write *tmp51 *tmp137 ".smelter"
   414 write *tmp35 *tmp137 ".press"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   415 label *label117
   416 op add :buildBlockFromCfg.7:x .coreX -2
   417 op add :buildBlockFromCfg.7:y .coreY -1
 
   435 multilabel *label120 (m:marker8)
   436 label *label119
   437 label *label116
-    * set :buildBlockFromCfg.8:block @air-factory
-    * set :buildBlockFromCfg.8:offsetX -4
-    * set :buildBlockFromCfg.8:offsetY -1
-    * set :buildBlockFromCfg.8:copper 60
-    * set :buildBlockFromCfg.8:lead 70
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 3
-    * set :buildBlockFromCfg.8:config @mono
   438 label *label123
   439 op add :buildBlockFromCfg.8:x .coreX -4
   440 op add :buildBlockFromCfg.8:y .coreY -1
   441 set :buildBlock:block @air-factory
   442 set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  443 set :buildBlock:y :buildBlockFromCfg.7:y
   444 set :buildBlock:copper 60
   445 set :buildBlock:lead 70
   446 set :buildBlock:graphite 0
 
   461 label *label122
   462 set .factory *tmp145
   463 write *tmp145 *tmp137 ".factory"
-    * set :buildBlockFromCfg.9:block @unloader
-    * set :buildBlockFromCfg.9:offsetX -2
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 0
-    * set :buildBlockFromCfg.9:lead 0
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 30
-    * set :buildBlockFromCfg.9:titanium 25
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   464 label *label129
   465 op add :buildBlockFromCfg.9:x .coreX -2
   466 op add :buildBlockFromCfg.9:y .coreY 1
   467 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.9:x
+  468 set :buildBlock:x :buildBlockFromCfg.7:x
   469 set :buildBlock:y :buildBlockFromCfg.9:y
   470 set :buildBlock:copper 0
   471 set :buildBlock:lead 0
 
   485 multilabel *label132 (m:marker10)
   486 label *label131
   487 label *label128
-    * set .unloader2 *tmp149
   488 write *tmp149 *tmp137 ".unloader2"
-    * set :buildBlockFromCfg.10:block @overflow-gate
-    * set :buildBlockFromCfg.10:offsetX -3
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 4
-    * set :buildBlockFromCfg.10:lead 2
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   489 label *label135
   490 op add :buildBlockFromCfg.10:x .coreX -3
   491 op add :buildBlockFromCfg.10:y .coreY 1
   492 set :buildBlock:block @overflow-gate
   493 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  494 set :buildBlock:y :buildBlockFromCfg.9:y
   495 set :buildBlock:copper 4
   496 set :buildBlock:lead 2
   497 set :buildBlock:graphite 0
 
   527 label *label143
   528 set .monos :buildUnit:count
   529 label *label142
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   530 label *label145
   531 op add :buildBlockFromCfg.11:x .coreX 2
   532 op add :buildBlockFromCfg.11:y .coreY 0
 
   535 set :buildBlock:y :buildBlockFromCfg.11:y
   536 set :buildBlock:copper 0
   537 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   538 set :buildBlock:silicon 30
   539 set :buildBlock:titanium 25
   540 set :buildBlock:metaglass 0
 
   549 multilabel *label148 (m:marker12)
   550 label *label147
   551 label *label144
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   552 label *label151
   553 op add :buildBlockFromCfg.12:x .coreX 3.5
   554 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   573 label *label153
   574 label *label150
   575 write null *tmp137 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   576 label *label157
   577 op add :buildBlockFromCfg.13:x .coreX 2
   578 op add :buildBlockFromCfg.13:y .coreY 1
   579 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  580 set :buildBlock:x :buildBlockFromCfg.11:x
+  581 set :buildBlock:y :buildBlockFromCfg.9:y
   582 set :buildBlock:copper 3
   583 set :buildBlock:lead 0
   584 set :buildBlock:graphite 0
 
   596 multilabel *label160 (m:marker14)
   597 label *label159
   598 label *label156
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   599 label *label163
   600 op add :buildBlockFromCfg.14:x .coreX -3.5
   601 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   605 set :buildBlock:copper 30
   606 set :buildBlock:lead 30
   607 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   608 set :buildBlock:titanium 0
   609 set :buildBlock:metaglass 30
   610 set :buildBlock:rotation 0
 
   618 multilabel *label166 (m:marker15)
   619 label *label165
   620 label *label162
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   621 label *label169
   622 op add :buildBlockFromCfg.15:x .coreX -3.5
   623 op add :buildBlockFromCfg.15:y .coreY 2.5
   624 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  625 set :buildBlock:x :buildBlockFromCfg.14:x
+  626 set :buildBlock:y :buildBlockFromCfg:y
   627 set :buildBlock:copper 35
   628 set :buildBlock:lead 40
   629 set :buildBlock:graphite 25
 
   631 set :buildBlock:titanium 0
   632 set :buildBlock:metaglass 0
   633 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   634 setaddr :buildBlock*retaddr *label173 (h:*label173)
   635 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   636 label *label173
 
   641 multilabel *label172 (m:marker16)
   642 label *label171
   643 label *label168
-    * set .generator2 *tmp175
   644 write *tmp175 *tmp137 ".generator2"
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   645 label *label175
   646 op add :buildBlockFromCfg.16:x .coreX -4
   647 op add :buildBlockFromCfg.16:y .coreY 1
   648 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  649 set :buildBlock:x :buildBlockFromCfg.8:x
+  650 set :buildBlock:y :buildBlockFromCfg.9:y
   651 set :buildBlock:copper 2
   652 set :buildBlock:lead 2
   653 set :buildBlock:graphite 0
   654 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   655 set :buildBlock:config @coal
   656 setaddr :buildBlock*retaddr *label179 (h:*label179)
   657 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
 
   677 label *label184
   678 end
   679 label *label0
-    * set :status3:text "Moving..."
   680 write "Moving..." .display ".status3"
   681 label *label186
   682 label *label187
 
   691 return :moveTo*retaddr
   692 end
   693 label *label1
-    * set *tmp186 :moveTo.1:x
-    * set *tmp187 :moveTo.1:y
   694 set :moveTo:x :moveTo.1:x
   695 set :moveTo:y :moveTo.1:y
   696 set :moveTo:radius 5
 
   701 return :moveTo.1*retaddr
   702 end
   703 label *label2
-    * set :status3.1:text "Moving..."
   704 write "Moving..." .display ".status3"
   705 label *label193
   706 label *label194
 
   737 return :moveToBlock*retaddr
   738 end
   739 label *label4
-    * set :status3.2:text "Depositing..."
   740 write "Depositing..." .display ".status3"
   741 label *label205
   742 sensor *tmp197 @unit @firstItem
 
   809 setaddr :moveToEmpty*retaddr *label225 (h:*label225)
   810 call *label2 *invalid :moveToEmpty*retval (m:*label225) (h:*label225)
   811 label *label225
-    * set :status3.3:text "Mining..."
   812 write "Mining..." .display ".status3"
   813 label *label226
   814 label *label227
 
   836 return :mineOre*retaddr
   837 end
   838 label *label7
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   839 write "Mining " .display ".status2"
   840 write :mineOre.1:ore .display ".item2"
   841 write "core" .display ".block2"
 
   853 sensor *tmp223 :fetchBlock:block @itemCapacity
   854 write *tmp223 .display ".transportTarget"
   855 write :fetchBlock:item .display ".transportItem"
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   856 write "Fetching " .display ".status2"
   857 write :fetchBlock:item .display ".item2"
   858 write :fetchBlock:block .display ".block2"
 
   897 jump *label248 greaterThanEq *tmp237 .graphiteTarget
   898 sensor *tmp240 .press @coal
   899 jump *label250 greaterThanEq *tmp240 5
-    * set :status1:text "Goal 1: Meeting the graphite target"
   900 write "Goal 1: Meeting the graphite target" .display ".status1"
   901 label *label252
   902 set :supplyBlock:block .press
   903 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
   904 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  905 write @coal .display ".item2"
+  906 write .press .display ".block2"
   907 label *label254
   908 sensor *tmp243 .press @itemCapacity
   909 sensor *tmp244 .press @coal
 
   927 jump *label258 greaterThanEq *tmp248 .siliconTarget
   928 sensor *tmp251 .smelter @coal
   929 jump *label260 greaterThanEq *tmp251 5
-    * set :status1.1:text "Goal 2: Meeting the silicon target (coal)"
   930 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
   931 label *label262
   932 set :supplyBlock.1:block .smelter
   933 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
   934 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+  935 write @coal .display ".item2"
+  936 write .smelter .display ".block2"
   937 label *label264
   938 sensor *tmp254 .smelter @itemCapacity
   939 sensor *tmp255 .smelter @coal
 
   953 label *label260
   954 sensor *tmp259 .smelter @sand
   955 jump *label268 greaterThanEq *tmp259 5
-    * set :status1.2:text "Goal 3: Meeting the silicon target (sand)"
   956 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
   957 label *label270
   958 set :supplyBlock.2:block .smelter
   959 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
   960 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+  961 write @sand .display ".item2"
+  962 write .smelter .display ".block2"
   963 label *label272
   964 sensor *tmp262 .smelter @itemCapacity
   965 sensor *tmp263 .smelter @sand
 
   984 jump *label276 greaterThanEq *tmp267 .powerTarget
   985 sensor *tmp270 .generator @coal
   986 jump *label278 greaterThanEq *tmp270 4
-    * set :status1.3:text "Goal 4: Supplying generator"
   987 write "Goal 4: Supplying generator" .display ".status1"
   988 label *label280
   989 set :supplyBlock.3:block .generator
   990 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
   991 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+  992 write @coal .display ".item2"
+  993 write .generator .display ".block2"
   994 label *label282
   995 sensor *tmp273 .generator @itemCapacity
   996 sensor *tmp274 .generator @coal
 
  1017 jump *label288 notEqual :supplyBase:supplied false
  1018 sensor *tmp283 .battery @totalPower
  1019 jump *label290 greaterThanEq *tmp283 .powerTarget
-    * set :status1.4:text "Goal 5: Supplying generator (5)"
  1020 write "Goal 5: Supplying generator (5)" .display ".status1"
  1021 label *label292
  1022 set :mineOre.1:ore @coal
 
  1027 label *label290
  1028 sensor *tmp286 .core @silicon
  1029 jump *label294 greaterThanEq *tmp286 .siliconTarget
-    * set :status1.5:text "Goal 6: Meeting the silicon target"
  1030 write "Goal 6: Meeting the silicon target" .display ".status1"
  1031 label *label296
  1032 sensor :supplyBase:coal .core @coal
 
  1037 label *label297
  1038 set *tmp292 @sand
  1039 label *label298
-    * set :supplyBase:ore *tmp292
  1040 set :mineOre.1:ore *tmp292
  1041 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1042 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
 
  1045 label *label294
  1046 sensor *tmp293 .core @copper
  1047 jump *label300 greaterThanEq *tmp293 .copperTarget
-    * set :status1.6:text "Goal 7: Meeting the copper target"
  1048 write "Goal 7: Meeting the copper target" .display ".status1"
  1049 label *label302
  1050 set :mineOre.1:ore @copper
 
  1055 label *label300
  1056 sensor *tmp296 .core @lead
  1057 jump *label304 greaterThanEq *tmp296 .leadTarget
-    * set :status1.7:text "Goal 8: Meeting the lead target"
  1058 write "Goal 8: Meeting the lead target" .display ".status1"
  1059 label *label306
  1060 set :mineOre.1:ore @lead
 
  1065 label *label304
  1066 sensor *tmp299 .core @metaglass
  1067 jump *label308 greaterThanEq *tmp299 .metaglassTarget
-    * set :status1.8:text "Goal 9: Meeting the metaglass target"
  1068 write "Goal 9: Meeting the metaglass target" .display ".status1"
  1069 label *label310
  1070 set :mineOre.1:ore @sand
 
  1073 label *label311
  1074 jump *label309 always
  1075 label *label308
-    * set :status1.9:text "Goal 10: Supplying base"
  1076 write "Goal 10: Supplying base" .display ".status1"
  1077 label *label312
  1078 sensor :supplyBase:coal.1 .core @coal
 
  1083 label *label313
  1084 set *tmp305 @sand
  1085 label *label314
-    * set :supplyBase:ore.1 *tmp305
  1086 set :mineOre.1:ore *tmp305
  1087 setaddr :mineOre.1*retaddr *label315 (h:*label315)
  1088 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
 
  1096 label *label289
  1097 jump *label287 always
  1098 label *label286
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1099 write "Goal 11: Fetching titanium" .display ".status1"
  1100 label *label316
  1101 set :fetchBlock:block .titanium_drill
 
  1155 op mul *tmp310 .factory 10
  1156 op add .leadTarget :meetTarget:lead *tmp310
  1157 set .graphiteTarget :meetTarget:graphite
-    * op mul *tmp312 .factory 10
  1158 op add .siliconTarget :meetTarget:silicon *tmp310
  1159 set .titaniumTarget :meetTarget:titanium
  1160 set .metaglassTarget :meetTarget:metaglass
 
  1218 setaddr :moveTo.1*retaddr *label335 (h:*label335)
  1219 call *label1 *invalid :moveTo.1*retval (m:*label335) (h:*label335)
  1220 label *label335
-    * set :status3.4:text "Building..."
  1221 write "Building..." .display ".status3"
  1222 label *label336
  1223 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-34 instructions):
 
    79 set .battery *tmp39
    80 label *label34
    81 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    82 set :buildBlock:x :buildBlockFromCfg.2:x
    83 set :buildBlock:y :buildBlockFromCfg.1:y
    84 set :buildBlock:graphite 0
 
    97 label *label36
    98 label *label33
    99 label *label40
-    * op add :buildBlockFromCfg.3:x .coreX 0
   100 op add :buildBlockFromCfg.3:y .coreY 3
   101 set :buildBlock:block @combustion-generator
   102 set :buildBlock:x :buildBlockFromCfg.1:x
 
   123 set .powerTarget 400
   124 label *label46
   125 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   126 set :buildBlock:block @silicon-smelter
   127 set :buildBlock:x :buildBlockFromCfg.4:x
   128 set :buildBlock:y :buildBlockFromCfg:y
 
   237 set :buildTitaniumDrillCfg:yy -1
   238 setaddr *tmp73 *label76
   239 label *label70
-    * set :buildTitaniumDrillCfg:count 0
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   242 jump *label78 notEqual :checkOre:floor @ore-titanium
 
   244 label *label78
   245 label *label79
   246 label *label77
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   247 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
   248 set :checkOre.1:count :checkOre:count
   249 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
 
   252 label *label81
   253 label *label82
   254 label *label80
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
   255 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   256 set :checkOre.2:count :checkOre.1:count
   257 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
 
   260 label *label84
   261 label *label85
   262 label *label83
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op add *tmp94 :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * op add *tmp95 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
   263 set :checkOre.3:count :checkOre.2:count
   264 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   265 jump *label87 notEqual :checkOre.3:floor @ore-titanium
 
   349 label *label51
   350 set .titanium_drill *tmp56
   351 label *label105
-    * op add :buildBlockFromCfg.5:x .coreX 0
   352 op add :buildBlockFromCfg.5:y .coreY 2
   353 set :buildBlock:block @unloader
   354 set :buildBlock:x :buildBlockFromCfg.1:x
 
   374 set .unloader1 *tmp133
   375 label *label111
   376 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   377 set :buildBlock:block @micro-processor
   378 set :buildBlock:x :buildBlockFromCfg.6:x
   379 set :buildBlock:y :buildBlockFromCfg.1:y
 
   426 label *label116
   427 label *label123
   428 op add :buildBlockFromCfg.8:x .coreX -4
-    * op add :buildBlockFromCfg.8:y .coreY -1
   429 set :buildBlock:block @air-factory
   430 set :buildBlock:x :buildBlockFromCfg.8:x
   431 set :buildBlock:y :buildBlockFromCfg.7:y
 
   450 set .factory *tmp145
   451 write *tmp145 *tmp137 ".factory"
   452 label *label129
-    * op add :buildBlockFromCfg.9:x .coreX -2
   453 op add :buildBlockFromCfg.9:y .coreY 1
   454 set :buildBlock:block @unloader
   455 set :buildBlock:x :buildBlockFromCfg.7:x
 
   475 write *tmp149 *tmp137 ".unloader2"
   476 label *label135
   477 op add :buildBlockFromCfg.10:x .coreX -3
-    * op add :buildBlockFromCfg.10:y .coreY 1
   478 set :buildBlock:block @overflow-gate
   479 set :buildBlock:x :buildBlockFromCfg.10:x
   480 set :buildBlock:y :buildBlockFromCfg.9:y
   481 set :buildBlock:copper 4
   482 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   483 set :buildBlock:silicon 0
   484 set :buildBlock:titanium 0
   485 set :buildBlock:metaglass 0
 
   559 label *label150
   560 write null *tmp137 ".kiln"
   561 label *label157
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   562 set :buildBlock:block @junction
   563 set :buildBlock:x :buildBlockFromCfg.11:x
   564 set :buildBlock:y :buildBlockFromCfg.9:y
   565 set :buildBlock:copper 3
   566 set :buildBlock:lead 0
   567 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   568 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   569 set :buildBlock:rotation 0
   570 set :buildBlock:config null
   571 setaddr :buildBlock*retaddr *label161 (h:*label161)
 
   589 set :buildBlock:titanium 0
   590 set :buildBlock:metaglass 30
   591 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   592 setaddr :buildBlock*retaddr *label167 (h:*label167)
   593 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   594 label *label167
 
   599 label *label165
   600 label *label162
   601 label *label169
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   602 set :buildBlock:block @steam-generator
   603 set :buildBlock:x :buildBlockFromCfg.14:x
   604 set :buildBlock:y :buildBlockFromCfg:y
 
   606 set :buildBlock:lead 40
   607 set :buildBlock:graphite 25
   608 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   609 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   610 setaddr :buildBlock*retaddr *label173 (h:*label173)
   611 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   612 label *label173
 
   619 label *label168
   620 write *tmp175 *tmp137 ".generator2"
   621 label *label175
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   622 set :buildBlock:block @sorter
   623 set :buildBlock:x :buildBlockFromCfg.8:x
   624 set :buildBlock:y :buildBlockFromCfg.9:y
 
   873 jump *label250 greaterThanEq *tmp240 5
   874 write "Goal 1: Meeting the graphite target" .display ".status1"
   875 label *label252
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   876 write "Supplying " .display ".status2"
   877 write @coal .display ".item2"
   878 write .press .display ".block2"
 
   901 jump *label260 greaterThanEq *tmp251 5
   902 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
   903 label *label262
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   904 write "Supplying " .display ".status2"
   905 write @coal .display ".item2"
   906 write .smelter .display ".block2"
 
   925 jump *label268 greaterThanEq *tmp259 5
   926 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
   927 label *label270
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   928 write "Supplying " .display ".status2"
   929 write @sand .display ".item2"
   930 write .smelter .display ".block2"
 
   954 jump *label278 greaterThanEq *tmp270 4
   955 write "Goal 4: Supplying generator" .display ".status1"
   956 label *label280
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   957 write "Supplying " .display ".status2"
   958 write @coal .display ".item2"
   959 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   432 set :buildBlock:copper 60
   433 set :buildBlock:lead 70
   434 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   435 set :buildBlock:titanium 0
   436 set :buildBlock:metaglass 0
   437 set :buildBlock:rotation 3
 
   455 set :buildBlock:y :buildBlockFromCfg.9:y
   456 set :buildBlock:copper 0
   457 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   458 set :buildBlock:silicon 30
   459 set :buildBlock:titanium 25
   460 set :buildBlock:metaglass 0
 
   543 set :buildBlock:graphite 30
   544 set :buildBlock:silicon 0
   545 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   546 set :buildBlock:rotation 0
   547 set :buildBlock:config null
   548 setaddr :buildBlock*retaddr *label155 (h:*label155)
 
   564 set :buildBlock:graphite 0
   565 set :buildBlock:titanium 0
   566 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   567 setaddr :buildBlock*retaddr *label161 (h:*label161)
   568 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   569 label *label161
 
   582 set :buildBlock:copper 30
   583 set :buildBlock:lead 30
   584 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   585 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   586 setaddr :buildBlock*retaddr *label167 (h:*label167)
   587 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   588 label *label167

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   129 set :buildBlock:copper 30
   130 set :buildBlock:lead 25
   131 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   132 set :buildBlock:titanium 0
   133 set :buildBlock:metaglass 0
   134 set :buildBlock:rotation 0
 
   430 set :buildBlock:y :buildBlockFromCfg.7:y
   431 set :buildBlock:copper 60
   432 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   433 set :buildBlock:titanium 0
   434 set :buildBlock:metaglass 0
   435 set :buildBlock:rotation 3
 
   518 set :buildBlock:lead 0
   519 set :buildBlock:silicon 30
   520 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   521 set :buildBlock:rotation 0
   522 set :buildBlock:config null
   523 setaddr :buildBlock*retaddr *label149 (h:*label149)
 
   541 set :buildBlock:silicon 0
   542 set :buildBlock:titanium 0
   543 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   544 setaddr :buildBlock*retaddr *label155 (h:*label155)
   545 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   546 label *label155
 
   558 set :buildBlock:copper 3
   559 set :buildBlock:lead 0
   560 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   561 setaddr :buildBlock*retaddr *label161 (h:*label161)
   562 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   563 label *label161

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   104 set :buildBlock:copper 25
   105 set :buildBlock:lead 15
   106 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   107 set :buildBlock:titanium 0
   108 set :buildBlock:metaglass 0
   109 set :buildBlock:rotation 0
 
   407 set :buildBlock:y :buildBlockFromCfg.7:y
   408 set :buildBlock:copper 2
   409 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   410 set :buildBlock:silicon 0
   411 set :buildBlock:titanium 0
   412 set :buildBlock:metaglass 0
 
   428 set :buildBlock:y :buildBlockFromCfg.7:y
   429 set :buildBlock:copper 60
   430 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
   431 set :buildBlock:metaglass 0
   432 set :buildBlock:rotation 3
   433 set :buildBlock:config @mono
 
   475 set :buildBlock:lead 2
   476 set :buildBlock:silicon 0
   477 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   478 set :buildBlock:rotation 0
   479 set :buildBlock:config null
   480 setaddr :buildBlock*retaddr *label139 (h:*label139)
 
   515 set :buildBlock:silicon 30
   516 set :buildBlock:titanium 25
   517 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   518 setaddr :buildBlock*retaddr *label149 (h:*label149)
   519 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   520 label *label149
 
   535 set :buildBlock:graphite 30
   536 set :buildBlock:silicon 0
   537 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   538 setaddr :buildBlock*retaddr *label155 (h:*label155)
   539 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   540 label *label155

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    82 set :buildBlock:x :buildBlockFromCfg.2:x
    83 set :buildBlock:y :buildBlockFromCfg.1:y
    84 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    85 set :buildBlock:titanium 0
    86 set :buildBlock:metaglass 0
    87 set :buildBlock:rotation 0
 
   376 set :buildBlock:y :buildBlockFromCfg.1:y
   377 set :buildBlock:copper 90
   378 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   379 set :buildBlock:silicon 50
   380 set :buildBlock:titanium 0
   381 set :buildBlock:metaglass 0
 
   406 set :buildBlock:copper 2
   407 set :buildBlock:lead 6
   408 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   409 set :buildBlock:metaglass 0
   410 set :buildBlock:rotation 0
   411 set :buildBlock:config null
 
   449 set :buildBlock:lead 0
   450 set :buildBlock:silicon 30
   451 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   452 set :buildBlock:rotation 0
   453 set :buildBlock:config null
   454 setaddr :buildBlock*retaddr *label133 (h:*label133)
 
   472 set :buildBlock:silicon 0
   473 set :buildBlock:titanium 0
   474 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   475 setaddr :buildBlock*retaddr *label139 (h:*label139)
   476 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   477 label *label139
 
   509 set :buildBlock:lead 0
   510 set :buildBlock:silicon 30
   511 set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
   512 setaddr :buildBlock*retaddr *label149 (h:*label149)
   513 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   514 label *label149

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
    63 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    64 set :buildBlock:titanium 0
    65 set :buildBlock:metaglass 0
    66 set :buildBlock:rotation 0
 
   126 set :buildBlock:copper 30
   127 set :buildBlock:lead 25
   128 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   129 set :buildBlock:metaglass 0
   130 set :buildBlock:rotation 0
   131 set :buildBlock:config null
 
   350 set :buildBlock:y :buildBlockFromCfg.5:y
   351 set :buildBlock:copper 0
   352 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   353 set :buildBlock:silicon 30
   354 set :buildBlock:titanium 25
   355 set :buildBlock:metaglass 0
   356 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   357 setaddr :buildBlock*retaddr *label109 (h:*label109)
   358 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   359 label *label109
 
   421 set :buildBlock:y :buildBlockFromCfg.7:y
   422 set :buildBlock:copper 60
   423 set :buildBlock:lead 70
-    * set :buildBlock:metaglass 0
   424 set :buildBlock:rotation 3
   425 set :buildBlock:config @mono
   426 setaddr :buildBlock*retaddr *label127 (h:*label127)
 
   466 set :buildBlock:lead 2
   467 set :buildBlock:silicon 0
   468 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   469 setaddr :buildBlock*retaddr *label139 (h:*label139)
   470 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   471 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   102 set :buildBlock:copper 25
   103 set :buildBlock:lead 15
   104 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   105 set :buildBlock:metaglass 0
   106 set :buildBlock:rotation 0
   107 set :buildBlock:config null
 
   124 set :buildBlock:y :buildBlockFromCfg:y
   125 set :buildBlock:copper 30
   126 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   127 set :buildBlock:metaglass 0
   128 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   129 setaddr :buildBlock*retaddr *label50 (h:*label50)
   130 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   131 label *label50
 
   399 set :buildBlock:copper 2
   400 set :buildBlock:lead 6
   401 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   402 set :buildBlock:config null
   403 setaddr :buildBlock*retaddr *label121 (h:*label121)
   404 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    81 set :buildBlock:x :buildBlockFromCfg.2:x
    82 set :buildBlock:y :buildBlockFromCfg.1:y
    83 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    84 set :buildBlock:metaglass 0
    85 set :buildBlock:rotation 0
    86 set :buildBlock:config null
 
   100 set :buildBlock:y :buildBlockFromCfg.3:y
   101 set :buildBlock:copper 25
   102 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   103 set :buildBlock:metaglass 0
   104 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   105 setaddr :buildBlock*retaddr *label44 (h:*label44)
   106 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   107 label *label44
 
   368 set :buildBlock:lead 50
   369 set :buildBlock:silicon 50
   370 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   371 set :buildBlock:config processor2
   372 setaddr :buildBlock*retaddr *label115 (h:*label115)
   373 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
    63 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    64 set :buildBlock:metaglass 0
    65 set :buildBlock:rotation 0
    66 set :buildBlock:config null
 
    79 op add :buildBlockFromCfg.2:x .coreX -1
    80 set :buildBlock:x :buildBlockFromCfg.2:x
    81 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    82 set :buildBlock:metaglass 0
    83 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    84 setaddr :buildBlock*retaddr *label38 (h:*label38)
    85 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    86 label *label38
 
   343 set :buildBlock:lead 0
   344 set :buildBlock:silicon 30
   345 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   346 setaddr :buildBlock*retaddr *label109 (h:*label109)
   347 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   348 label *label109

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    60 set :buildBlock:y :buildBlockFromCfg.1:y
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    63 set :buildBlock:metaglass 0
    64 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    65 setaddr :buildBlock*retaddr *label32 (h:*label32)
    66 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    67 label *label32
 
   116 set :buildBlock:y :buildBlockFromCfg:y
   117 set :buildBlock:copper 30
   118 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   119 setaddr :buildBlock*retaddr *label50 (h:*label50)
   120 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   121 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
    95 set :buildBlock:y :buildBlockFromCfg.3:y
    96 set :buildBlock:copper 25
    97 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    98 setaddr :buildBlock*retaddr *label44 (h:*label44)
    99 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
   100 label *label44

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    77 op add :buildBlockFromCfg.2:x .coreX -1
    78 set :buildBlock:x :buildBlockFromCfg.2:x
    79 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    80 setaddr :buildBlock*retaddr *label38 (h:*label38)
    81 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    82 label *label38

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    60 set :buildBlock:y :buildBlockFromCfg.1:y
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    63 setaddr :buildBlock*retaddr *label32 (h:*label32)
    64 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    65 label *label32

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    27 call *label14 *invalid :findUnits*retval (m:*label20) (h:*label20)
    28 label *label20
    29 set .polys :findUnits:count
+   30 op add :buildBlockFromCfg:x .coreX -1.5
+   31 op add :buildBlockFromCfg:y .coreY 2.5
+   32 set :buildBlock:block @graphite-press
+   33 set :buildBlock:x :buildBlockFromCfg:x
+   34 set :buildBlock:y :buildBlockFromCfg:y
+   35 set :buildBlock:copper 75
+   36 set :buildBlock:lead 30
+   37 set :buildBlock:graphite 0
+   38 set :buildBlock:silicon 0
+   39 set :buildBlock:titanium 0
+   40 set :buildBlock:metaglass 0
+   41 set :buildBlock:rotation 0
+   42 set :buildBlock:config null
+   43 setaddr :buildBlock*retaddr *label26 (h:*label26)
    44 label *label22
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label26 (h:*label26)
    45 call *label12 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    46 label *label26
    47 set *tmp35 :buildBlock*retval
 
    52 label *label24
    53 label *label21
    54 set .press *tmp35
+   55 op add :buildBlockFromCfg.1:x .coreX 0
+   56 op add :buildBlockFromCfg.1:y .coreY 4
+   57 set :buildBlock:block @battery
+   58 set :buildBlock:x :buildBlockFromCfg.1:x
+   59 set :buildBlock:y :buildBlockFromCfg.1:y
+   60 set :buildBlock:copper 5
+   61 set :buildBlock:lead 20
+   62 setaddr :buildBlock*retaddr *label32 (h:*label32)
    63 label *label28
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label32 (h:*label32)
    64 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    65 label *label32
    66 set *tmp39 :buildBlock*retval
 
    71 label *label30
    72 label *label27
    73 set .battery *tmp39
+   74 op add :buildBlockFromCfg.2:x .coreX -1
+   75 set :buildBlock:x :buildBlockFromCfg.2:x
+   76 set :buildBlock:y :buildBlockFromCfg.1:y
+   77 setaddr :buildBlock*retaddr *label38 (h:*label38)
    78 label *label34
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label38 (h:*label38)
    79 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    80 label *label38
    81 jump *label33 always
 
    84 multilabel *label37 (m:marker2)
    85 label *label36
    86 label *label33
+   87 op add :buildBlockFromCfg.3:y .coreY 3
+   88 set :buildBlock:block @combustion-generator
+   89 set :buildBlock:x :buildBlockFromCfg.1:x
+   90 set :buildBlock:y :buildBlockFromCfg.3:y
+   91 set :buildBlock:copper 25
+   92 set :buildBlock:lead 15
+   93 setaddr :buildBlock*retaddr *label44 (h:*label44)
    94 label *label40
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label44 (h:*label44)
    95 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    96 label *label44
    97 set *tmp47 :buildBlock*retval
 
   103 label *label39
   104 set .generator *tmp47
   105 set .powerTarget 400
+  106 op add :buildBlockFromCfg.4:x .coreX 1.5
+  107 set :buildBlock:block @silicon-smelter
+  108 set :buildBlock:x :buildBlockFromCfg.4:x
+  109 set :buildBlock:y :buildBlockFromCfg:y
+  110 set :buildBlock:copper 30
+  111 set :buildBlock:lead 25
+  112 setaddr :buildBlock*retaddr *label50 (h:*label50)
   113 label *label46
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label50 (h:*label50)
   114 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
   115 label *label50
   116 set *tmp51 :buildBlock*retval
 
   324 label *label52
   325 label *label51
   326 set .titanium_drill *tmp56
+  327 op add :buildBlockFromCfg.5:y .coreY 2
+  328 set :buildBlock:block @unloader
+  329 set :buildBlock:x :buildBlockFromCfg.1:x
+  330 set :buildBlock:y :buildBlockFromCfg.5:y
+  331 set :buildBlock:copper 0
+  332 set :buildBlock:lead 0
+  333 set :buildBlock:silicon 30
+  334 set :buildBlock:titanium 25
+  335 setaddr :buildBlock*retaddr *label109 (h:*label109)
   336 label *label105
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label109 (h:*label109)
   337 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   338 label *label109
   339 set *tmp133 :buildBlock*retval
 
   344 label *label107
   345 label *label104
   346 set .unloader1 *tmp133
+  347 op add :buildBlockFromCfg.6:x .coreX 1
+  348 set :buildBlock:block @micro-processor
+  349 set :buildBlock:x :buildBlockFromCfg.6:x
+  350 set :buildBlock:y :buildBlockFromCfg.1:y
+  351 set :buildBlock:copper 90
+  352 set :buildBlock:lead 50
+  353 set :buildBlock:silicon 50
+  354 set :buildBlock:titanium 0
+  355 setaddr :buildBlock*retaddr *label115 (h:*label115)
   356 label *label111
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   357 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   358 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   359 label *label115
   360 set *tmp137 :buildBlock*retval
 
   370 write *tmp47 *tmp137 ".generator"
   371 write *tmp51 *tmp137 ".smelter"
   372 write *tmp35 *tmp137 ".press"
+  373 op add :buildBlockFromCfg.7:x .coreX -2
+  374 op add :buildBlockFromCfg.7:y .coreY -1
+  375 set :buildBlock:block @power-node
+  376 set :buildBlock:x :buildBlockFromCfg.7:x
+  377 set :buildBlock:y :buildBlockFromCfg.7:y
+  378 set :buildBlock:copper 2
+  379 set :buildBlock:lead 6
+  380 set :buildBlock:silicon 0
+  381 set :buildBlock:config null
+  382 setaddr :buildBlock*retaddr *label121 (h:*label121)
   383 label *label117
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   384 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   385 label *label121
   386 jump *label116 always
 
   389 multilabel *label120 (m:marker8)
   390 label *label119
   391 label *label116
+  392 op add :buildBlockFromCfg.8:x .coreX -4
+  393 set :buildBlock:block @air-factory
+  394 set :buildBlock:x :buildBlockFromCfg.8:x
+  395 set :buildBlock:y :buildBlockFromCfg.7:y
+  396 set :buildBlock:copper 60
+  397 set :buildBlock:lead 70
+  398 set :buildBlock:rotation 3
+  399 set :buildBlock:config @mono
+  400 setaddr :buildBlock*retaddr *label127 (h:*label127)
   401 label *label123
-    * op add :buildBlockFromCfg.8:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   402 call *label12 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   403 label *label127
   404 set *tmp145 :buildBlock*retval
 
   410 label *label122
   411 set .factory *tmp145
   412 write *tmp145 *tmp137 ".factory"
+  413 op add :buildBlockFromCfg.9:y .coreY 1
+  414 set :buildBlock:block @unloader
+  415 set :buildBlock:x :buildBlockFromCfg.7:x
+  416 set :buildBlock:y :buildBlockFromCfg.9:y
+  417 set :buildBlock:copper 0
+  418 set :buildBlock:lead 0
+  419 set :buildBlock:silicon 30
+  420 set :buildBlock:titanium 25
+  421 set :buildBlock:rotation 0
+  422 set :buildBlock:config null
+  423 setaddr :buildBlock*retaddr *label133 (h:*label133)
   424 label *label129
-    * op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   425 call *label12 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   426 label *label133
   427 set *tmp149 :buildBlock*retval
 
   432 label *label131
   433 label *label128
   434 write *tmp149 *tmp137 ".unloader2"
+  435 op add :buildBlockFromCfg.10:x .coreX -3
+  436 set :buildBlock:block @overflow-gate
+  437 set :buildBlock:x :buildBlockFromCfg.10:x
+  438 set :buildBlock:y :buildBlockFromCfg.9:y
+  439 set :buildBlock:copper 4
+  440 set :buildBlock:lead 2
+  441 set :buildBlock:silicon 0
+  442 set :buildBlock:titanium 0
+  443 setaddr :buildBlock*retaddr *label139 (h:*label139)
   444 label *label135
-    * op add :buildBlockFromCfg.10:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   445 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   446 label *label139
   447 jump *label134 always
 
   468 label *label143
   469 set .monos :buildUnit:count
   470 label *label142
+  471 op add :buildBlockFromCfg.11:x .coreX 2
+  472 op add :buildBlockFromCfg.11:y .coreY 0
+  473 set :buildBlock:block @unloader
+  474 set :buildBlock:x :buildBlockFromCfg.11:x
+  475 set :buildBlock:y :buildBlockFromCfg.11:y
+  476 set :buildBlock:copper 0
+  477 set :buildBlock:lead 0
+  478 set :buildBlock:silicon 30
+  479 set :buildBlock:titanium 25
+  480 setaddr :buildBlock*retaddr *label149 (h:*label149)
   481 label *label145
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label149 (h:*label149)
   482 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   483 label *label149
   484 jump *label144 always
 
   487 multilabel *label148 (m:marker12)
   488 label *label147
   489 label *label144
+  490 op add :buildBlockFromCfg.12:x .coreX 3.5
+  491 op add :buildBlockFromCfg.12:y .coreY 0.5
+  492 set :buildBlock:block @kiln
+  493 set :buildBlock:x :buildBlockFromCfg.12:x
+  494 set :buildBlock:y :buildBlockFromCfg.12:y
+  495 set :buildBlock:copper 60
+  496 set :buildBlock:lead 30
+  497 set :buildBlock:graphite 30
+  498 set :buildBlock:silicon 0
+  499 set :buildBlock:titanium 0
+  500 setaddr :buildBlock*retaddr *label155 (h:*label155)
   501 label *label151
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label155 (h:*label155)
   502 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   503 label *label155
   504 jump *label150 always
 
   508 label *label153
   509 label *label150
   510 write null *tmp137 ".kiln"
+  511 set :buildBlock:block @junction
+  512 set :buildBlock:x :buildBlockFromCfg.11:x
+  513 set :buildBlock:y :buildBlockFromCfg.9:y
+  514 set :buildBlock:copper 3
+  515 set :buildBlock:lead 0
+  516 set :buildBlock:graphite 0
+  517 setaddr :buildBlock*retaddr *label161 (h:*label161)
   518 label *label157
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label161 (h:*label161)
   519 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   520 label *label161
   521 jump *label156 always
 
   524 multilabel *label160 (m:marker14)
   525 label *label159
   526 label *label156
+  527 op add :buildBlockFromCfg.14:x .coreX -3.5
+  528 op add :buildBlockFromCfg.14:y .coreY 4.5
+  529 set :buildBlock:block @water-extractor
+  530 set :buildBlock:x :buildBlockFromCfg.14:x
+  531 set :buildBlock:y :buildBlockFromCfg.14:y
+  532 set :buildBlock:copper 30
+  533 set :buildBlock:lead 30
+  534 set :buildBlock:graphite 30
+  535 set :buildBlock:metaglass 30
+  536 setaddr :buildBlock*retaddr *label167 (h:*label167)
   537 label *label163
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label167 (h:*label167)
   538 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   539 label *label167
   540 jump *label162 always
 
   543 multilabel *label166 (m:marker15)
   544 label *label165
   545 label *label162
+  546 set :buildBlock:block @steam-generator
+  547 set :buildBlock:x :buildBlockFromCfg.14:x
+  548 set :buildBlock:y :buildBlockFromCfg:y
+  549 set :buildBlock:copper 35
+  550 set :buildBlock:lead 40
+  551 set :buildBlock:graphite 25
+  552 set :buildBlock:silicon 30
+  553 set :buildBlock:metaglass 0
+  554 setaddr :buildBlock*retaddr *label173 (h:*label173)
   555 label *label169
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label173 (h:*label173)
   556 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   557 label *label173
   558 set *tmp175 :buildBlock*retval
 
   563 label *label171
   564 label *label168
   565 write *tmp175 *tmp137 ".generator2"
+  566 set :buildBlock:block @sorter
+  567 set :buildBlock:x :buildBlockFromCfg.8:x
+  568 set :buildBlock:y :buildBlockFromCfg.9:y
+  569 set :buildBlock:copper 2
+  570 set :buildBlock:lead 2
+  571 set :buildBlock:graphite 0
+  572 set :buildBlock:silicon 0
+  573 set :buildBlock:config @coal
+  574 setaddr :buildBlock*retaddr *label179 (h:*label179)
   575 label *label175
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label179 (h:*label179)
   576 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   577 label *label179
   578 jump *label174 always
 
   598 label *label0
   599 write "Moving..." .display ".status3"
   600 label *label186
+  601 op sub *tmp185 :moveTo:radius 0.5
   602 label *label187
   603 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
   604 jump *label189 notEqual *tmp183 false
-    * op sub *tmp185 :moveTo:radius 0.5
   605 ucontrol approach :moveTo:x :moveTo:y *tmp185
   606 label *label188
   607 jump *label187 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   190 set :buildTitaniumDrillCfg:dy 0
   191 set :buildTitaniumDrillCfg:searches 0
   192 label *label67
-    * jump *label69 greaterThanEq :buildTitaniumDrillCfg:searches 5
+  193 label *label368
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
 
   259 label *label72
   260 label *label68
   261 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
-    * jump *label67 always
+  262 jump *label368 lessThan :buildTitaniumDrillCfg:searches 5
   263 label *label69
   264 jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:minimum
   265 op div *tmp108 :buildTitaniumDrillCfg:dx 2

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-3 instructions):
 
   660 label *label205
   661 sensor *tmp197 @unit @firstItem
   662 jump *label206 notEqual *tmp197 :depositItems:item
+  663 set *tmp202 5
   664 op equal *tmp200 :depositItems:block .core
   665 op land *tmp201 :depositItems:fromMining *tmp200
-    * jump *label208 equal *tmp201 false
+  666 jump *label209 equal *tmp201 false
   667 set *tmp202 7
   668 jump *label209 always
-    * label *label208
-    * set *tmp202 5
   669 label *label209
   670 set :moveToBlock:block :depositItems:block
   671 set :moveToBlock:radius *tmp202
 
   941 label *label296
   942 sensor :supplyBase:coal .core @coal
   943 sensor :supplyBase:sand .core @sand
-    * jump *label297 greaterThanEq :supplyBase:coal :supplyBase:sand
-    * set *tmp292 @coal
+  944 set :mineOre.1:ore @sand
+  945 jump *label298 greaterThanEq :supplyBase:coal :supplyBase:sand
+  946 set :mineOre.1:ore @coal
   947 jump *label298 always
-    * label *label297
-    * set *tmp292 @sand
   948 label *label298
-    * set :mineOre.1:ore *tmp292
   949 setaddr :mineOre.1*retaddr *label299 (h:*label299)
   950 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
   951 label *label299
 
   985 label *label312
   986 sensor :supplyBase:coal.1 .core @coal
   987 sensor :supplyBase:sand.1 .core @sand
-    * jump *label313 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
-    * set *tmp305 @coal
+  988 set :mineOre.1:ore @sand
+  989 jump *label314 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
+  990 set :mineOre.1:ore @coal
   991 jump *label314 always
-    * label *label313
-    * set *tmp305 @sand
   992 label *label314
-    * set :mineOre.1:ore *tmp305
   993 setaddr :mineOre.1*retaddr *label315 (h:*label315)
   994 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
   995 label *label315
 
  1070 write *tmp315 .processor ".smelterTarget"
  1071 op add *tmp316 :meetTarget:metaglass 20
  1072 write *tmp316 .processor ".kilnTarget"
+ 1073 set .titaniumTrigger 100
  1074 sensor *tmp317 .core @titanium
-    * jump *label328 greaterThanEq *tmp317 :meetTarget:titanium
-    * set *tmp319 7
+ 1075 jump *label329 greaterThanEq *tmp317 :meetTarget:titanium
+ 1076 set .titaniumTrigger 7
  1077 jump *label329 always
-    * label *label328
-    * set *tmp319 100
  1078 label *label329
-    * set .titaniumTrigger *tmp319
  1079 label *label330
  1080 sensor *tmp320 .core @copper
  1081 op lessThan *tmp321 *tmp320 .copperTarget

Modifications by Unroll iteration loop at CoreBuilder.mnd:311:5 (-2 instructions):
 
  1017 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
  1018 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
  1019 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp308 *label322
-    * jump *label319 always
-    * multilabel *label322 (m:marker18)
-    * set :meetTarget:t :meetTarget:totalLead
-    * setaddr *tmp308 *label323
-    * jump *label319 always
-    * multilabel *label323 (m:marker18)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp308 *label324
-    * jump *label319 always
-    * multilabel *label324 (m:marker18)
-    * set :meetTarget:t :meetTarget:totalSilicon
-    * setaddr *tmp308 *label325
-    * jump *label319 always
-    * multilabel *label325 (m:marker18)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp308 *label326
-    * jump *label319 always
-    * multilabel *label326 (m:marker18)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp308 *label327
-    * label *label319
-    * op sign *tmp309 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label320
-    * multijump *tmp308 0 0 (m:marker18)
-    * multilabel *label327 (m:marker18)
-    * label *label321
+ 1020 set :meetTarget:t :meetTarget:copper
+ 1021 label *label369
+ 1022 op sign *tmp309 :meetTarget:t
+ 1023 op add :meetTarget:count :meetTarget:count *tmp309
+ 1024 label *label370
+ 1025 set :meetTarget:t :meetTarget:totalLead
+ 1026 label *label373
+ 1027 op sign *tmp309 :meetTarget:t
+ 1028 op add :meetTarget:count :meetTarget:count *tmp309
+ 1029 label *label374
+ 1030 set :meetTarget:t :meetTarget:graphite
+ 1031 label *label377
+ 1032 op sign *tmp309 :meetTarget:t
+ 1033 op add :meetTarget:count :meetTarget:count *tmp309
+ 1034 label *label378
+ 1035 set :meetTarget:t :meetTarget:totalSilicon
+ 1036 label *label381
+ 1037 op sign *tmp309 :meetTarget:t
+ 1038 op add :meetTarget:count :meetTarget:count *tmp309
+ 1039 label *label382
+ 1040 set :meetTarget:t :meetTarget:titanium
+ 1041 label *label385
+ 1042 op sign *tmp309 :meetTarget:t
+ 1043 op add :meetTarget:count :meetTarget:count *tmp309
+ 1044 label *label386
+ 1045 set :meetTarget:t :meetTarget:metaglass
+ 1046 label *label389
+ 1047 op sign *tmp309 :meetTarget:t
+ 1048 op add :meetTarget:count :meetTarget:count *tmp309
+ 1049 label *label390
+ 1050 label *label321
  1051 write :meetTarget:count .display ".totalTargets"
  1052 write :meetTarget:block .display ".nextBlock"
  1053 write :meetTarget:copper .display ".copperTarget"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1019 set :meetTarget:count 0
  1020 set :meetTarget:t :meetTarget:copper
  1021 label *label369
-    * op sign *tmp309 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp309
+ 1022 op sign *tmp309 :meetTarget:copper
+ 1023 op add :meetTarget:count 0 *tmp309
  1024 label *label370
  1025 set :meetTarget:t :meetTarget:totalLead
  1026 label *label373
-    * op sign *tmp309 :meetTarget:t
+ 1027 op sign *tmp309 :meetTarget:totalLead
  1028 op add :meetTarget:count :meetTarget:count *tmp309
  1029 label *label374
  1030 set :meetTarget:t :meetTarget:graphite
  1031 label *label377
-    * op sign *tmp309 :meetTarget:t
+ 1032 op sign *tmp309 :meetTarget:graphite
  1033 op add :meetTarget:count :meetTarget:count *tmp309
  1034 label *label378
  1035 set :meetTarget:t :meetTarget:totalSilicon
  1036 label *label381
-    * op sign *tmp309 :meetTarget:t
+ 1037 op sign *tmp309 :meetTarget:totalSilicon
  1038 op add :meetTarget:count :meetTarget:count *tmp309
  1039 label *label382
  1040 set :meetTarget:t :meetTarget:titanium
  1041 label *label385
-    * op sign *tmp309 :meetTarget:t
+ 1042 op sign *tmp309 :meetTarget:titanium
  1043 op add :meetTarget:count :meetTarget:count *tmp309
  1044 label *label386
  1045 set :meetTarget:t :meetTarget:metaglass
  1046 label *label389
-    * op sign *tmp309 :meetTarget:t
+ 1047 op sign *tmp309 :meetTarget:metaglass
  1048 op add :meetTarget:count :meetTarget:count *tmp309
  1049 label *label390
  1050 label *label321

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1016 label *label10
  1017 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
  1018 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1019 label *label369
  1020 op sign *tmp309 :meetTarget:copper
  1021 op add :meetTarget:count 0 *tmp309
  1022 label *label370
-    * set :meetTarget:t :meetTarget:totalLead
  1023 label *label373
  1024 op sign *tmp309 :meetTarget:totalLead
  1025 op add :meetTarget:count :meetTarget:count *tmp309
  1026 label *label374
-    * set :meetTarget:t :meetTarget:graphite
  1027 label *label377
  1028 op sign *tmp309 :meetTarget:graphite
  1029 op add :meetTarget:count :meetTarget:count *tmp309
  1030 label *label378
-    * set :meetTarget:t :meetTarget:totalSilicon
  1031 label *label381
  1032 op sign *tmp309 :meetTarget:totalSilicon
  1033 op add :meetTarget:count :meetTarget:count *tmp309
  1034 label *label382
-    * set :meetTarget:t :meetTarget:titanium
  1035 label *label385
  1036 op sign *tmp309 :meetTarget:titanium
  1037 op add :meetTarget:count :meetTarget:count *tmp309
  1038 label *label386
-    * set :meetTarget:t :meetTarget:metaglass
  1039 label *label389
  1040 op sign *tmp309 :meetTarget:metaglass
  1041 op add :meetTarget:count :meetTarget:count *tmp309

Modifications by Replicate loop condition at CoreBuilder.mnd:139:5 (+1 instructions):
 
   636 label *label199
   637 sensor *tmp193 @unit @firstItem
   638 jump *label201 equal *tmp193 null
+  639 label *label394
   640 ucontrol itemDrop @air 1000
   641 label *label200
-    * jump *label199 always
+  642 sensor *tmp193 @unit @firstItem
+  643 jump *label394 notEqual *tmp193 null
   644 label *label201
   645 label *label192
   646 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:119:5 (+1 instructions):
 
   602 label *label187
   603 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
   604 jump *label189 notEqual *tmp183 false
+  605 label *label395
   606 ucontrol approach :moveTo:x :moveTo:y *tmp185
   607 label *label188
-    * jump *label187 always
+  608 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
+  609 jump *label395 equal *tmp183 false
   610 label *label189
   611 label *label185
   612 return :moveTo*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:163:9 (+1 instructions):
 
   693 label *label216
   694 sensor *tmp209 @unit @firstItem
   695 jump *label218 equal *tmp209 null
+  696 label *label396
   697 ucontrol itemDrop @air 1000
   698 label *label217
-    * jump *label216 always
+  699 sensor *tmp209 @unit @firstItem
+  700 jump *label396 notEqual *tmp209 null
   701 label *label218
   702 label *label207
   703 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:337:5 (+29 instructions):
 
  1108 op lessThan *tmp347 *tmp346 :meetTarget:factorySilicon
  1109 op or *tmp349 *tmp344 *tmp347
  1110 jump *label332 equal *tmp349 false
+ 1111 label *label397
  1112 setaddr :supplyBase*retaddr *label333 (h:*label333)
  1113 call *label9 *invalid :supplyBase*retval (m:*label333) (h:*label333)
  1114 label *label333
  1115 label *label331
-    * jump *label330 always
+ 1116 sensor *tmp320 .core @copper
+ 1117 op lessThan *tmp321 *tmp320 .copperTarget
+ 1118 sensor *tmp322 .core @lead
+ 1119 op lessThan *tmp323 *tmp322 .leadTarget
+ 1120 op or *tmp325 *tmp321 *tmp323
+ 1121 op notEqual *tmp324 *tmp325 false
+ 1122 sensor *tmp326 .core @graphite
+ 1123 op lessThan *tmp327 *tmp326 .graphiteTarget
+ 1124 op or *tmp329 *tmp324 *tmp327
+ 1125 op notEqual *tmp328 *tmp329 false
+ 1126 sensor *tmp330 .core @silicon
+ 1127 op lessThan *tmp331 *tmp330 .siliconTarget
+ 1128 op or *tmp333 *tmp328 *tmp331
+ 1129 op notEqual *tmp332 *tmp333 false
+ 1130 sensor *tmp334 .core @titanium
+ 1131 op lessThan *tmp335 *tmp334 .titaniumTarget
+ 1132 op or *tmp337 *tmp332 *tmp335
+ 1133 op notEqual *tmp336 *tmp337 false
+ 1134 sensor *tmp338 .core @metaglass
+ 1135 op lessThan *tmp339 *tmp338 .metaglassTarget
+ 1136 op or *tmp341 *tmp336 *tmp339
+ 1137 op notEqual *tmp340 *tmp341 false
+ 1138 sensor *tmp342 .factory @lead
+ 1139 op lessThan *tmp343 *tmp342 :meetTarget:factoryLead
+ 1140 op or *tmp345 *tmp340 *tmp343
+ 1141 op notEqual *tmp344 *tmp345 false
+ 1142 sensor *tmp346 .factory @silicon
+ 1143 op lessThan *tmp347 *tmp346 :meetTarget:factorySilicon
+ 1144 op or *tmp349 *tmp344 *tmp347
+ 1145 jump *label397 notEqual *tmp349 false
  1146 label *label332
  1147 label *label318
  1148 return :meetTarget*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1079 label *label329
  1080 label *label330
  1081 sensor *tmp320 .core @copper
-    * op lessThan *tmp321 *tmp320 .copperTarget
+ 1082 op lessThan *tmp321 *tmp320 :meetTarget:copper
  1083 sensor *tmp322 .core @lead
  1084 op lessThan *tmp323 *tmp322 .leadTarget
  1085 op or *tmp325 *tmp321 *tmp323
  1086 op notEqual *tmp324 *tmp325 false
  1087 sensor *tmp326 .core @graphite
-    * op lessThan *tmp327 *tmp326 .graphiteTarget
+ 1088 op lessThan *tmp327 *tmp326 :meetTarget:graphite
  1089 op or *tmp329 *tmp324 *tmp327
  1090 op notEqual *tmp328 *tmp329 false
  1091 sensor *tmp330 .core @silicon
 
  1093 op or *tmp333 *tmp328 *tmp331
  1094 op notEqual *tmp332 *tmp333 false
  1095 sensor *tmp334 .core @titanium
-    * op lessThan *tmp335 *tmp334 .titaniumTarget
+ 1096 op lessThan *tmp335 *tmp334 :meetTarget:titanium
  1097 op or *tmp337 *tmp332 *tmp335
  1098 op notEqual *tmp336 *tmp337 false
  1099 sensor *tmp338 .core @metaglass
-    * op lessThan *tmp339 *tmp338 .metaglassTarget
+ 1100 op lessThan *tmp339 *tmp338 :meetTarget:metaglass
  1101 op or *tmp341 *tmp336 *tmp339
  1102 op notEqual *tmp340 *tmp341 false
  1103 sensor *tmp342 .factory @lead

Modifications by Unroll iteration loop at CoreBuilder.mnd:441:13 (+64 instructions):
 
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp73 *label73
-    * jump *label70 always
-    * multilabel *label73 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp73 *label74
-    * jump *label70 always
-    * multilabel *label74 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp73 *label75
-    * jump *label70 always
-    * multilabel *label75 (m:marker5)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp73 *label76
-    * label *label70
-    * set :checkOre:count 0
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
-    * jump *label78 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
-    * label *label78
-    * label *label79
-    * label *label77
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
-    * jump *label81 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label81
-    * label *label82
-    * label *label80
-    * op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
-    * jump *label84 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label84
-    * label *label85
-    * label *label83
-    * set :checkOre.3:count :checkOre.2:count
-    * ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
-    * jump *label87 notEqual :checkOre.3:floor @ore-titanium
-    * op add :checkOre.3:count :checkOre.2:count 1
-    * label *label87
-    * label *label88
-    * label *label86
-    * jump *label89 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label91 lessThan :checkOre.3:count 4
-    * jump *label69 always
-    * label *label91
-    * label *label92
-    * label *label89
-    * label *label90
-    * label *label71
-    * multijump *tmp73 0 0 (m:marker5)
-    * multilabel *label76 (m:marker5)
-    * label *label72
+  197 set :buildTitaniumDrillCfg:xx 1
+  198 set :buildTitaniumDrillCfg:yy 1
+  199 label *label398
+  200 set :checkOre:count 0
+  201 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  202 jump *label399 notEqual :checkOre:floor @ore-titanium
+  203 op add :checkOre:count 0 1
+  204 label *label399
+  205 label *label400
+  206 label *label401
+  207 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  208 set :checkOre.1:count :checkOre:count
+  209 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  210 jump *label402 notEqual :checkOre.1:floor @ore-titanium
+  211 op add :checkOre.1:count :checkOre:count 1
+  212 label *label402
+  213 label *label403
+  214 label *label404
+  215 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  216 set :checkOre.2:count :checkOre.1:count
+  217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
+  218 jump *label405 notEqual :checkOre.2:floor @ore-titanium
+  219 op add :checkOre.2:count :checkOre.1:count 1
+  220 label *label405
+  221 label *label406
+  222 label *label407
+  223 set :checkOre.3:count :checkOre.2:count
+  224 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
+  225 jump *label408 notEqual :checkOre.3:floor @ore-titanium
+  226 op add :checkOre.3:count :checkOre.2:count 1
+  227 label *label408
+  228 label *label409
+  229 label *label410
+  230 jump *label413 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  231 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  232 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  233 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  234 jump *label411 lessThan :checkOre.3:count 4
+  235 jump *label69 always
+  236 label *label411
+  237 label *label412
+  238 label *label413
+  239 label *label414
+  240 label *label415
+  241 set :buildTitaniumDrillCfg:xx 1
+  242 set :buildTitaniumDrillCfg:yy -1
+  243 label *label418
+  244 set :checkOre:count 0
+  245 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  246 jump *label419 notEqual :checkOre:floor @ore-titanium
+  247 op add :checkOre:count 0 1
+  248 label *label419
+  249 label *label420
+  250 label *label421
+  251 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  252 set :checkOre.1:count :checkOre:count
+  253 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  254 jump *label422 notEqual :checkOre.1:floor @ore-titanium
+  255 op add :checkOre.1:count :checkOre:count 1
+  256 label *label422
+  257 label *label423
+  258 label *label424
+  259 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  260 set :checkOre.2:count :checkOre.1:count
+  261 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
+  262 jump *label425 notEqual :checkOre.2:floor @ore-titanium
+  263 op add :checkOre.2:count :checkOre.1:count 1
+  264 label *label425
+  265 label *label426
+  266 label *label427
+  267 set :checkOre.3:count :checkOre.2:count
+  268 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
+  269 jump *label428 notEqual :checkOre.3:floor @ore-titanium
+  270 op add :checkOre.3:count :checkOre.2:count 1
+  271 label *label428
+  272 label *label429
+  273 label *label430
+  274 jump *label433 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  275 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  276 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  277 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  278 jump *label431 lessThan :checkOre.3:count 4
+  279 jump *label69 always
+  280 label *label431
+  281 label *label432
+  282 label *label433
+  283 label *label434
+  284 label *label435
+  285 set :buildTitaniumDrillCfg:xx -1
+  286 set :buildTitaniumDrillCfg:yy 1
+  287 label *label438
+  288 set :checkOre:count 0
+  289 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  290 jump *label439 notEqual :checkOre:floor @ore-titanium
+  291 op add :checkOre:count 0 1
+  292 label *label439
+  293 label *label440
+  294 label *label441
+  295 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  296 set :checkOre.1:count :checkOre:count
+  297 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  298 jump *label442 notEqual :checkOre.1:floor @ore-titanium
+  299 op add :checkOre.1:count :checkOre:count 1
+  300 label *label442
+  301 label *label443
+  302 label *label444
+  303 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  304 set :checkOre.2:count :checkOre.1:count
+  305 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
+  306 jump *label445 notEqual :checkOre.2:floor @ore-titanium
+  307 op add :checkOre.2:count :checkOre.1:count 1
+  308 label *label445
+  309 label *label446
+  310 label *label447
+  311 set :checkOre.3:count :checkOre.2:count
+  312 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
+  313 jump *label448 notEqual :checkOre.3:floor @ore-titanium
+  314 op add :checkOre.3:count :checkOre.2:count 1
+  315 label *label448
+  316 label *label449
+  317 label *label450
+  318 jump *label453 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  319 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  320 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  321 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  322 jump *label451 lessThan :checkOre.3:count 4
+  323 jump *label69 always
+  324 label *label451
+  325 label *label452
+  326 label *label453
+  327 label *label454
+  328 label *label455
+  329 set :buildTitaniumDrillCfg:xx -1
+  330 set :buildTitaniumDrillCfg:yy -1
+  331 label *label458
+  332 set :checkOre:count 0
+  333 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
+  334 jump *label459 notEqual :checkOre:floor @ore-titanium
+  335 op add :checkOre:count 0 1
+  336 label *label459
+  337 label *label460
+  338 label *label461
+  339 op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  340 set :checkOre.1:count :checkOre:count
+  341 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
+  342 jump *label462 notEqual :checkOre.1:floor @ore-titanium
+  343 op add :checkOre.1:count :checkOre:count 1
+  344 label *label462
+  345 label *label463
+  346 label *label464
+  347 op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  348 set :checkOre.2:count :checkOre.1:count
+  349 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
+  350 jump *label465 notEqual :checkOre.2:floor @ore-titanium
+  351 op add :checkOre.2:count :checkOre.1:count 1
+  352 label *label465
+  353 label *label466
+  354 label *label467
+  355 set :checkOre.3:count :checkOre.2:count
+  356 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
+  357 jump *label468 notEqual :checkOre.3:floor @ore-titanium
+  358 op add :checkOre.3:count :checkOre.2:count 1
+  359 label *label468
+  360 label *label469
+  361 label *label470
+  362 jump *label473 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
+  363 set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
+  364 set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  365 set :buildTitaniumDrillCfg:best :checkOre.3:count
+  366 jump *label471 lessThan :checkOre.3:count 4
+  367 jump *label69 always
+  368 label *label471
+  369 label *label472
+  370 label *label473
+  371 label *label474
+  372 label *label475
+  373 label *label72
   374 label *label68
   375 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   376 jump *label368 lessThan :buildTitaniumDrillCfg:searches 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   204 label *label399
   205 label *label400
   206 label *label401
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  207 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   208 set :checkOre.1:count :checkOre:count
   209 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   210 jump *label402 notEqual :checkOre.1:floor @ore-titanium
 
   212 label *label402
   213 label *label403
   214 label *label404
-    * op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  215 op add *tmp87 :buildTitaniumDrillCfg:ay 1
   216 set :checkOre.2:count :checkOre.1:count
   217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   218 jump *label405 notEqual :checkOre.2:floor @ore-titanium
 
   227 label *label408
   228 label *label409
   229 label *label410
-    * jump *label413 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  230 jump *label413 lessThanEq :checkOre.3:count 0
+  231 set :buildTitaniumDrillCfg:dx 1
+  232 set :buildTitaniumDrillCfg:dy 1
   233 set :buildTitaniumDrillCfg:best :checkOre.3:count
   234 jump *label411 lessThan :checkOre.3:count 4
   235 jump *label69 always
 
   248 label *label419
   249 label *label420
   250 label *label421
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  251 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   252 set :checkOre.1:count :checkOre:count
   253 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   254 jump *label422 notEqual :checkOre.1:floor @ore-titanium
 
   256 label *label422
   257 label *label423
   258 label *label424
-    * op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  259 op add *tmp87 :buildTitaniumDrillCfg:ay -1
   260 set :checkOre.2:count :checkOre.1:count
   261 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   262 jump *label425 notEqual :checkOre.2:floor @ore-titanium
 
   272 label *label429
   273 label *label430
   274 jump *label433 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  275 set :buildTitaniumDrillCfg:dx 1
+  276 set :buildTitaniumDrillCfg:dy -1
   277 set :buildTitaniumDrillCfg:best :checkOre.3:count
   278 jump *label431 lessThan :checkOre.3:count 4
   279 jump *label69 always
 
   292 label *label439
   293 label *label440
   294 label *label441
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  295 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   296 set :checkOre.1:count :checkOre:count
   297 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   298 jump *label442 notEqual :checkOre.1:floor @ore-titanium
 
   300 label *label442
   301 label *label443
   302 label *label444
-    * op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  303 op add *tmp87 :buildTitaniumDrillCfg:ay 1
   304 set :checkOre.2:count :checkOre.1:count
   305 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   306 jump *label445 notEqual :checkOre.2:floor @ore-titanium
 
   316 label *label449
   317 label *label450
   318 jump *label453 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  319 set :buildTitaniumDrillCfg:dx -1
+  320 set :buildTitaniumDrillCfg:dy 1
   321 set :buildTitaniumDrillCfg:best :checkOre.3:count
   322 jump *label451 lessThan :checkOre.3:count 4
   323 jump *label69 always
 
   336 label *label459
   337 label *label460
   338 label *label461
-    * op add :checkOre.1:x :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:xx
+  339 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   340 set :checkOre.1:count :checkOre:count
   341 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   342 jump *label462 notEqual :checkOre.1:floor @ore-titanium
 
   344 label *label462
   345 label *label463
   346 label *label464
-    * op add *tmp87 :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:yy
+  347 op add *tmp87 :buildTitaniumDrillCfg:ay -1
   348 set :checkOre.2:count :checkOre.1:count
   349 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   350 jump *label465 notEqual :checkOre.2:floor @ore-titanium
 
   360 label *label469
   361 label *label470
   362 jump *label473 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:dx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:dy :buildTitaniumDrillCfg:yy
+  363 set :buildTitaniumDrillCfg:dx -1
+  364 set :buildTitaniumDrillCfg:dy -1
   365 set :buildTitaniumDrillCfg:best :checkOre.3:count
   366 jump *label471 lessThan :checkOre.3:count 4
   367 jump *label69 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   194 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   195 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   196 set :buildTitaniumDrillCfg:best 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   197 label *label398
   198 set :checkOre:count 0
   199 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   236 label *label413
   237 label *label414
   238 label *label415
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   239 label *label418
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   278 label *label433
   279 label *label434
   280 label *label435
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   281 label *label438
   282 set :checkOre:count 0
   283 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   320 label *label453
   321 label *label454
   322 label *label455
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   323 label *label458
   324 set :checkOre:count 0
   325 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   775 op land *tmp201 :depositItems:fromMining *tmp200
   776 jump *label209 equal *tmp201 false
   777 set *tmp202 7
-    * jump *label209 always
   778 label *label209
   779 set :moveToBlock:block :depositItems:block
   780 set :moveToBlock:radius *tmp202
 
  1055 set :mineOre.1:ore @sand
  1056 jump *label298 greaterThanEq :supplyBase:coal :supplyBase:sand
  1057 set :mineOre.1:ore @coal
-    * jump *label298 always
  1058 label *label298
  1059 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1060 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
 
  1098 set :mineOre.1:ore @sand
  1099 jump *label314 greaterThan :supplyBase:coal.1 :supplyBase:sand.1
  1100 set :mineOre.1:ore @coal
-    * jump *label314 always
  1101 label *label314
  1102 setaddr :mineOre.1*retaddr *label315 (h:*label315)
  1103 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
 
  1178 sensor *tmp317 .core @titanium
  1179 jump *label329 greaterThanEq *tmp317 :meetTarget:titanium
  1180 set .titaniumTrigger 7
-    * jump *label329 always
  1181 label *label329
  1182 label *label330
  1183 sensor *tmp320 .core @copper
 
  1293 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1294 label *label346
  1295 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label334 always
  1296 label *label334
  1297 return :buildBlockAt*retaddr
  1298 end
 
  1319 call *label11 *invalid :buildBlockAt*retval (m:*label351) (h:*label351)
  1320 label *label351
  1321 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label349 always
  1322 label *label349
  1323 return :buildBlock*retaddr
  1324 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    52 label *label24
    53 label *label21
    54 set .press *tmp35
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   55 set :buildBlockFromCfg.1:x .coreX
    56 op add :buildBlockFromCfg.1:y .coreY 4
    57 set :buildBlock:block @battery
    58 set :buildBlock:x :buildBlockFromCfg.1:x
 
   198 set :checkOre:count 0
   199 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   200 jump *label399 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  201 set :checkOre:count 1
   202 label *label399
   203 label *label400
   204 label *label401
 
   240 set :checkOre:count 0
   241 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   242 jump *label419 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  243 set :checkOre:count 1
   244 label *label419
   245 label *label420
   246 label *label421
 
   282 set :checkOre:count 0
   283 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   284 jump *label439 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  285 set :checkOre:count 1
   286 label *label439
   287 label *label440
   288 label *label441
 
   324 set :checkOre:count 0
   325 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   326 jump *label459 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  327 set :checkOre:count 1
   328 label *label459
   329 label *label460
   330 label *label461
 
   575 set .monos :buildUnit:count
   576 label *label142
   577 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  578 set :buildBlockFromCfg.11:y .coreY
   579 set :buildBlock:block @unloader
   580 set :buildBlock:x :buildBlockFromCfg.11:x
   581 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1127 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
  1128 label *label369
  1129 op sign *tmp309 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp309
+ 1130 set :meetTarget:count *tmp309
  1131 label *label370
  1132 label *label373
  1133 op sign *tmp309 :meetTarget:totalLead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-9 instructions):
 
   430 label *label52
   431 label *label51
   432 set .titanium_drill *tmp56
-    * op add :buildBlockFromCfg.5:y .coreY 2
+  433 op add :buildBlock:y .coreY 2
   434 set :buildBlock:block @unloader
   435 set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
   436 set :buildBlock:copper 0
   437 set :buildBlock:lead 0
   438 set :buildBlock:silicon 30
 
   441 label *label105
   442 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   443 label *label109
-    * set *tmp133 :buildBlock*retval
+  444 set .unloader1 :buildBlock*retval
   445 jump *label104 always
   446 label *label106
   447 multijump *tmp134 0 0 (m:marker6)
   448 multilabel *label108 (m:marker6)
   449 label *label107
   450 label *label104
-    * set .unloader1 *tmp133
-    * op add :buildBlockFromCfg.6:x .coreX 1
+  451 op add :buildBlock:x .coreX 1
   452 set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
   453 set :buildBlock:y :buildBlockFromCfg.1:y
   454 set :buildBlock:copper 90
   455 set :buildBlock:lead 50
 
   535 label *label131
   536 label *label128
   537 write *tmp149 *tmp137 ".unloader2"
-    * op add :buildBlockFromCfg.10:x .coreX -3
+  538 op add :buildBlock:x .coreX -3
   539 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.10:x
   540 set :buildBlock:y :buildBlockFromCfg.9:y
   541 set :buildBlock:copper 4
   542 set :buildBlock:lead 2
 
   571 set .monos :buildUnit:count
   572 label *label142
   573 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
+  574 set :buildBlock:y .coreY
   575 set :buildBlock:block @unloader
   576 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
   577 set :buildBlock:copper 0
   578 set :buildBlock:lead 0
   579 set :buildBlock:silicon 30
 
   588 multilabel *label148 (m:marker12)
   589 label *label147
   590 label *label144
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
+  591 op add :buildBlock:x .coreX 3.5
+  592 op add :buildBlock:y .coreY 0.5
   593 set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
   594 set :buildBlock:copper 60
   595 set :buildBlock:lead 30
   596 set :buildBlock:graphite 30
 
   624 label *label159
   625 label *label156
   626 op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
+  627 op add :buildBlock:y .coreY 4.5
   628 set :buildBlock:block @water-extractor
   629 set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
   630 set :buildBlock:copper 30
   631 set :buildBlock:lead 30
   632 set :buildBlock:graphite 30
 
  1118 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
  1119 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
  1120 label *label369
-    * op sign *tmp309 :meetTarget:copper
-    * set :meetTarget:count *tmp309
+ 1121 op sign :meetTarget:count :meetTarget:copper
  1122 label *label370
  1123 label *label373
  1124 op sign *tmp309 :meetTarget:totalLead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    55 set :buildBlockFromCfg.1:x .coreX
    56 op add :buildBlockFromCfg.1:y .coreY 4
    57 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   58 set :buildBlock:x .coreX
    59 set :buildBlock:y :buildBlockFromCfg.1:y
    60 set :buildBlock:copper 5
    61 set :buildBlock:lead 20
 
    86 label *label33
    87 op add :buildBlockFromCfg.3:y .coreY 3
    88 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   89 set :buildBlock:x .coreX
    90 set :buildBlock:y :buildBlockFromCfg.3:y
    91 set :buildBlock:copper 25
    92 set :buildBlock:lead 15
 
   432 set .titanium_drill *tmp56
   433 op add :buildBlock:y .coreY 2
   434 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  435 set :buildBlock:x .coreX
   436 set :buildBlock:copper 0
   437 set :buildBlock:lead 0
   438 set :buildBlock:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    52 label *label24
    53 label *label21
    54 set .press *tmp35
-    * set :buildBlockFromCfg.1:x .coreX
    55 op add :buildBlockFromCfg.1:y .coreY 4
    56 set :buildBlock:block @battery
    57 set :buildBlock:x .coreX

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     7 label *label15
     8 ubind @poly
     9 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label16
    10 jump *label15 equal .core null
-    * label *label17
    11 set .mainUnit @unit
    12 set .display processor1
    13 set :findUnits:type @mono
 
    39 set :buildBlock:rotation 0
    40 set :buildBlock:config null
    41 setaddr :buildBlock*retaddr *label26 (h:*label26)
-    * label *label22
    42 call *label12 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp35 :buildBlock*retval
    45 jump *label21 always
-    * label *label23
    46 multijump *tmp36 0 0 (m:marker0)
    47 multilabel *label25 (m:marker0)
-    * label *label24
    48 label *label21
    49 set .press *tmp35
    50 op add :buildBlockFromCfg.1:y .coreY 4
 
    54 set :buildBlock:copper 5
    55 set :buildBlock:lead 20
    56 setaddr :buildBlock*retaddr *label32 (h:*label32)
-    * label *label28
    57 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    58 label *label32
    59 set *tmp39 :buildBlock*retval
    60 jump *label27 always
-    * label *label29
    61 multijump *tmp40 0 0 (m:marker1)
    62 multilabel *label31 (m:marker1)
-    * label *label30
    63 label *label27
    64 set .battery *tmp39
    65 op add :buildBlockFromCfg.2:x .coreX -1
    66 set :buildBlock:x :buildBlockFromCfg.2:x
    67 set :buildBlock:y :buildBlockFromCfg.1:y
    68 setaddr :buildBlock*retaddr *label38 (h:*label38)
-    * label *label34
    69 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    70 label *label38
    71 jump *label33 always
-    * label *label35
    72 multijump *tmp44 0 0 (m:marker2)
    73 multilabel *label37 (m:marker2)
-    * label *label36
    74 label *label33
    75 op add :buildBlockFromCfg.3:y .coreY 3
    76 set :buildBlock:block @combustion-generator
 
    79 set :buildBlock:copper 25
    80 set :buildBlock:lead 15
    81 setaddr :buildBlock*retaddr *label44 (h:*label44)
-    * label *label40
    82 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    83 label *label44
    84 set *tmp47 :buildBlock*retval
    85 jump *label39 always
-    * label *label41
    86 multijump *tmp48 0 0 (m:marker3)
    87 multilabel *label43 (m:marker3)
-    * label *label42
    88 label *label39
    89 set .generator *tmp47
    90 set .powerTarget 400
 
    95 set :buildBlock:copper 30
    96 set :buildBlock:lead 25
    97 setaddr :buildBlock*retaddr *label50 (h:*label50)
-    * label *label46
    98 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    99 label *label50
   100 set *tmp51 :buildBlock*retval
   101 jump *label45 always
-    * label *label47
   102 multijump *tmp52 0 0 (m:marker4)
   103 multilabel *label49 (m:marker4)
-    * label *label48
   104 label *label45
   105 set .smelter *tmp51
   106 set :buildTitaniumDrillCfg:distance 32
 
   139 jump *label62 equal *tmp64 false
   140 jump *label60 always
   141 label *label62
-    * label *label63
   142 op sin *tmp67 :locateOreAway:angle
   143 op mul *tmp68 *tmp67 :locateOreAway:distance
   144 op add *tmp69 .coreX *tmp68
 
   152 label *label65
   153 op add :locateOreAway:distance :locateOreAway:distance 4
   154 op add :locateOreAway:angle :locateOreAway:angle 45
-    * label *label64
-    * label *label59
   155 jump *label58 always
   156 label *label60
-    * label *label57
   157 set :buildTitaniumDrillCfg:distance :locateOreAway:distance
   158 set :buildTitaniumDrillCfg:angle :locateOreAway:angle
   159 set :moveTo.1:x :locateOreAway:x
 
   167 set :buildTitaniumDrillCfg:dx 0
   168 set :buildTitaniumDrillCfg:dy 0
   169 set :buildTitaniumDrillCfg:searches 0
-    * label *label67
   170 label *label368
   171 op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:dx
   172 op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:dy
   173 set :buildTitaniumDrillCfg:best 0
-    * label *label398
   174 set :checkOre:count 0
   175 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   176 jump *label399 notEqual :checkOre:floor @ore-titanium
   177 set :checkOre:count 1
   178 label *label399
-    * label *label400
-    * label *label401
   179 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   180 set :checkOre.1:count :checkOre:count
   181 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   182 jump *label402 notEqual :checkOre.1:floor @ore-titanium
   183 op add :checkOre.1:count :checkOre:count 1
   184 label *label402
-    * label *label403
-    * label *label404
   185 op add *tmp87 :buildTitaniumDrillCfg:ay 1
   186 set :checkOre.2:count :checkOre.1:count
   187 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   188 jump *label405 notEqual :checkOre.2:floor @ore-titanium
   189 op add :checkOre.2:count :checkOre.1:count 1
   190 label *label405
-    * label *label406
-    * label *label407
   191 set :checkOre.3:count :checkOre.2:count
   192 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   193 jump *label408 notEqual :checkOre.3:floor @ore-titanium
   194 op add :checkOre.3:count :checkOre.2:count 1
   195 label *label408
-    * label *label409
-    * label *label410
   196 jump *label413 lessThanEq :checkOre.3:count 0
   197 set :buildTitaniumDrillCfg:dx 1
   198 set :buildTitaniumDrillCfg:dy 1
 
   200 jump *label411 lessThan :checkOre.3:count 4
   201 jump *label69 always
   202 label *label411
-    * label *label412
   203 label *label413
-    * label *label414
-    * label *label415
-    * label *label418
   204 set :checkOre:count 0
   205 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   206 jump *label419 notEqual :checkOre:floor @ore-titanium
   207 set :checkOre:count 1
   208 label *label419
-    * label *label420
-    * label *label421
   209 op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1
   210 set :checkOre.1:count :checkOre:count
   211 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   212 jump *label422 notEqual :checkOre.1:floor @ore-titanium
   213 op add :checkOre.1:count :checkOre:count 1
   214 label *label422
-    * label *label423
-    * label *label424
   215 op add *tmp87 :buildTitaniumDrillCfg:ay -1
   216 set :checkOre.2:count :checkOre.1:count
   217 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   218 jump *label425 notEqual :checkOre.2:floor @ore-titanium
   219 op add :checkOre.2:count :checkOre.1:count 1
   220 label *label425
-    * label *label426
-    * label *label427
   221 set :checkOre.3:count :checkOre.2:count
   222 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   223 jump *label428 notEqual :checkOre.3:floor @ore-titanium
   224 op add :checkOre.3:count :checkOre.2:count 1
   225 label *label428
-    * label *label429
-    * label *label430
   226 jump *label433 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   227 set :buildTitaniumDrillCfg:dx 1
   228 set :buildTitaniumDrillCfg:dy -1
 
   230 jump *label431 lessThan :checkOre.3:count 4
   231 jump *label69 always
   232 label *label431
-    * label *label432
   233 label *label433
-    * label *label434
-    * label *label435
-    * label *label438
   234 set :checkOre:count 0
   235 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   236 jump *label439 notEqual :checkOre:floor @ore-titanium
   237 set :checkOre:count 1
   238 label *label439
-    * label *label440
-    * label *label441
   239 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   240 set :checkOre.1:count :checkOre:count
   241 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   242 jump *label442 notEqual :checkOre.1:floor @ore-titanium
   243 op add :checkOre.1:count :checkOre:count 1
   244 label *label442
-    * label *label443
-    * label *label444
   245 op add *tmp87 :buildTitaniumDrillCfg:ay 1
   246 set :checkOre.2:count :checkOre.1:count
   247 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   248 jump *label445 notEqual :checkOre.2:floor @ore-titanium
   249 op add :checkOre.2:count :checkOre.1:count 1
   250 label *label445
-    * label *label446
-    * label *label447
   251 set :checkOre.3:count :checkOre.2:count
   252 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   253 jump *label448 notEqual :checkOre.3:floor @ore-titanium
   254 op add :checkOre.3:count :checkOre.2:count 1
   255 label *label448
-    * label *label449
-    * label *label450
   256 jump *label453 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   257 set :buildTitaniumDrillCfg:dx -1
   258 set :buildTitaniumDrillCfg:dy 1
 
   260 jump *label451 lessThan :checkOre.3:count 4
   261 jump *label69 always
   262 label *label451
-    * label *label452
   263 label *label453
-    * label *label454
-    * label *label455
-    * label *label458
   264 set :checkOre:count 0
   265 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
   266 jump *label459 notEqual :checkOre:floor @ore-titanium
   267 set :checkOre:count 1
   268 label *label459
-    * label *label460
-    * label *label461
   269 op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1
   270 set :checkOre.1:count :checkOre:count
   271 ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0 0 :checkOre.1:floor
   272 jump *label462 notEqual :checkOre.1:floor @ore-titanium
   273 op add :checkOre.1:count :checkOre:count 1
   274 label *label462
-    * label *label463
-    * label *label464
   275 op add *tmp87 :buildTitaniumDrillCfg:ay -1
   276 set :checkOre.2:count :checkOre.1:count
   277 ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :checkOre.2:floor
   278 jump *label465 notEqual :checkOre.2:floor @ore-titanium
   279 op add :checkOre.2:count :checkOre.1:count 1
   280 label *label465
-    * label *label466
-    * label *label467
   281 set :checkOre.3:count :checkOre.2:count
   282 ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor
   283 jump *label468 notEqual :checkOre.3:floor @ore-titanium
   284 op add :checkOre.3:count :checkOre.2:count 1
   285 label *label468
-    * label *label469
-    * label *label470
   286 jump *label473 lessThanEq :checkOre.3:count :buildTitaniumDrillCfg:best
   287 set :buildTitaniumDrillCfg:dx -1
   288 set :buildTitaniumDrillCfg:dy -1
 
   290 jump *label471 lessThan :checkOre.3:count 4
   291 jump *label69 always
   292 label *label471
-    * label *label472
   293 label *label473
-    * label *label474
-    * label *label475
-    * label *label72
-    * label *label68
   294 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   295 jump *label368 lessThan :buildTitaniumDrillCfg:searches 5
   296 label *label69
 
   320 set *tmp56 :buildBlockAt*retval
   321 jump *label52 always
   322 label *label98
-    * label *label99
   323 ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 null
   324 jump *label96 always
   325 label *label95
 
   327 set :buildTitaniumDrillCfg:minimum 3
   328 label *label96
   329 label *label93
-    * label *label94
   330 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   331 jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
   332 op sin *tmp125 :locateOreAway:angle
 
   342 label *label103
   343 op add :buildTitaniumDrillCfg:distance :locateOreAway:distance 4
   344 op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45
-    * label *label102
   345 set :buildTitaniumDrillCfg:attempts 0
   346 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
   347 op max :buildTitaniumDrillCfg:minimum *tmp131 1
   348 label *label100
-    * label *label101
-    * label *label54
   349 jump *label53 always
-    * label *label55
   350 set *tmp56 null
   351 label *label52
-    * label *label51
   352 set .titanium_drill *tmp56
   353 op add :buildBlock:y .coreY 2
   354 set :buildBlock:block @unloader
 
   358 set :buildBlock:silicon 30
   359 set :buildBlock:titanium 25
   360 setaddr :buildBlock*retaddr *label109 (h:*label109)
-    * label *label105
   361 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   362 label *label109
   363 set .unloader1 :buildBlock*retval
   364 jump *label104 always
-    * label *label106
   365 multijump *tmp134 0 0 (m:marker6)
   366 multilabel *label108 (m:marker6)
-    * label *label107
   367 label *label104
   368 op add :buildBlock:x .coreX 1
   369 set :buildBlock:block @micro-processor
 
   373 set :buildBlock:silicon 50
   374 set :buildBlock:titanium 0
   375 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   376 set :buildBlock:config processor2
   377 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   378 label *label115
   379 set *tmp137 :buildBlock*retval
   380 jump *label110 always
-    * label *label112
   381 multijump *tmp138 0 0 (m:marker7)
   382 multilabel *label114 (m:marker7)
-    * label *label113
   383 label *label110
   384 set .processor *tmp137
   385 write .core *tmp137 ".core"
 
   397 set :buildBlock:silicon 0
   398 set :buildBlock:config null
   399 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   400 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   401 label *label121
   402 jump *label116 always
-    * label *label118
   403 multijump *tmp142 0 0 (m:marker8)
   404 multilabel *label120 (m:marker8)
-    * label *label119
   405 label *label116
   406 op add :buildBlockFromCfg.8:x .coreX -4
   407 set :buildBlock:block @air-factory
 
   412 set :buildBlock:rotation 3
   413 set :buildBlock:config @mono
   414 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   415 call *label12 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   416 label *label127
   417 set *tmp145 :buildBlock*retval
   418 jump *label122 always
-    * label *label124
   419 multijump *tmp146 0 0 (m:marker9)
   420 multilabel *label126 (m:marker9)
-    * label *label125
   421 label *label122
   422 set .factory *tmp145
   423 write *tmp145 *tmp137 ".factory"
 
   432 set :buildBlock:rotation 0
   433 set :buildBlock:config null
   434 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   435 call *label12 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   436 label *label133
   437 set *tmp149 :buildBlock*retval
   438 jump *label128 always
-    * label *label130
   439 multijump *tmp150 0 0 (m:marker10)
   440 multilabel *label132 (m:marker10)
-    * label *label131
   441 label *label128
   442 write *tmp149 *tmp137 ".unloader2"
   443 op add :buildBlock:x .coreX -3
 
   448 set :buildBlock:silicon 0
   449 set :buildBlock:titanium 0
   450 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   451 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   452 label *label139
   453 jump *label134 always
-    * label *label136
   454 multijump *tmp154 0 0 (m:marker11)
   455 multilabel *label138 (m:marker11)
-    * label *label137
   456 label *label134
   457 set :buildUnit:type @flare
   458 set :buildUnit:lead 0
 
   462 call *label13 *invalid :buildUnit*retval (m:*label141) (h:*label141)
   463 label *label141
   464 set .flares :buildUnit:count
-    * label *label140
   465 set :buildUnit:type @mono
   466 set :buildUnit:lead 15
   467 set :buildUnit:silicon 30
 
   470 call *label13 *invalid :buildUnit*retval (m:*label143) (h:*label143)
   471 label *label143
   472 set .monos :buildUnit:count
-    * label *label142
   473 op add :buildBlockFromCfg.11:x .coreX 2
   474 set :buildBlock:y .coreY
   475 set :buildBlock:block @unloader
 
   479 set :buildBlock:silicon 30
   480 set :buildBlock:titanium 25
   481 setaddr :buildBlock*retaddr *label149 (h:*label149)
-    * label *label145
   482 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   483 label *label149
   484 jump *label144 always
-    * label *label146
   485 multijump *tmp160 0 0 (m:marker12)
   486 multilabel *label148 (m:marker12)
-    * label *label147
   487 label *label144
   488 op add :buildBlock:x .coreX 3.5
   489 op add :buildBlock:y .coreY 0.5
 
   494 set :buildBlock:silicon 0
   495 set :buildBlock:titanium 0
   496 setaddr :buildBlock*retaddr *label155 (h:*label155)
-    * label *label151
   497 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   498 label *label155
   499 jump *label150 always
-    * label *label152
   500 multijump *tmp164 0 0 (m:marker13)
   501 multilabel *label154 (m:marker13)
-    * label *label153
   502 label *label150
   503 write null *tmp137 ".kiln"
   504 set :buildBlock:block @junction
 
   508 set :buildBlock:lead 0
   509 set :buildBlock:graphite 0
   510 setaddr :buildBlock*retaddr *label161 (h:*label161)
-    * label *label157
   511 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   512 label *label161
   513 jump *label156 always
-    * label *label158
   514 multijump *tmp168 0 0 (m:marker14)
   515 multilabel *label160 (m:marker14)
-    * label *label159
   516 label *label156
   517 op add :buildBlockFromCfg.14:x .coreX -3.5
   518 op add :buildBlock:y .coreY 4.5
 
   523 set :buildBlock:graphite 30
   524 set :buildBlock:metaglass 30
   525 setaddr :buildBlock*retaddr *label167 (h:*label167)
-    * label *label163
   526 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   527 label *label167
   528 jump *label162 always
-    * label *label164
   529 multijump *tmp172 0 0 (m:marker15)
   530 multilabel *label166 (m:marker15)
-    * label *label165
   531 label *label162
   532 set :buildBlock:block @steam-generator
   533 set :buildBlock:x :buildBlockFromCfg.14:x
 
   538 set :buildBlock:silicon 30
   539 set :buildBlock:metaglass 0
   540 setaddr :buildBlock*retaddr *label173 (h:*label173)
-    * label *label169
   541 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   542 label *label173
   543 set *tmp175 :buildBlock*retval
   544 jump *label168 always
-    * label *label170
   545 multijump *tmp176 0 0 (m:marker16)
   546 multilabel *label172 (m:marker16)
-    * label *label171
   547 label *label168
   548 write *tmp175 *tmp137 ".generator2"
   549 set :buildBlock:block @sorter
 
   555 set :buildBlock:silicon 0
   556 set :buildBlock:config @coal
   557 setaddr :buildBlock*retaddr *label179 (h:*label179)
-    * label *label175
   558 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   559 label *label179
   560 jump *label174 always
-    * label *label176
   561 multijump *tmp180 0 0 (m:marker17)
   562 multilabel *label178 (m:marker17)
-    * label *label177
   563 label *label174
   564 label *label180
   565 setaddr :supplyBase*retaddr *label183 (h:*label183)
   566 call *label9 *invalid :supplyBase*retval (m:*label183) (h:*label183)
   567 label *label183
-    * label *label181
   568 jump *label180 always
-    * label *label182
   569 ucontrol stop
   570 print "[salmon]"
   571 print "Done"
   572 printflush message1
   573 stop
-    * label *label184
   574 end
   575 label *label0
   576 write "Moving..." .display ".status3"
-    * label *label186
   577 op sub *tmp185 :moveTo:radius 0.5
-    * label *label187
   578 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
   579 jump *label189 notEqual *tmp183 false
   580 label *label395
   581 ucontrol approach :moveTo:x :moveTo:y *tmp185
-    * label *label188
   582 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183
   583 jump *label395 equal *tmp183 false
   584 label *label189
-    * label *label185
   585 return :moveTo*retaddr
   586 end
   587 label *label1
 
   591 setaddr :moveTo*retaddr *label191 (h:*label191)
   592 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   593 label *label191
-    * label *label190
   594 return :moveTo.1*retaddr
   595 end
   596 label *label2
   597 write "Moving..." .display ".status3"
-    * label *label193
   598 label *label194
   599 sensor *tmp188 @unit @firstItem
   600 jump *label197 equal *tmp188 null
   601 ucontrol itemDrop @air 1000
   602 label *label197
-    * label *label198
   603 ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5
-    * label *label195
   604 ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp191
   605 jump *label194 equal *tmp191 false
-    * label *label196
-    * label *label199
   606 sensor *tmp193 @unit @firstItem
   607 jump *label201 equal *tmp193 null
   608 label *label394
   609 ucontrol itemDrop @air 1000
-    * label *label200
   610 sensor *tmp193 @unit @firstItem
   611 jump *label394 notEqual *tmp193 null
   612 label *label201
-    * label *label192
   613 return :moveToEmpty*retaddr
   614 end
   615 label *label3
 
   621 setaddr :moveTo*retaddr *label203 (h:*label203)
   622 call *label0 *invalid :moveTo*retval (m:*label203) (h:*label203)
   623 label *label203
-    * label *label202
   624 return :moveToBlock*retaddr
   625 end
   626 label *label4
   627 write "Depositing..." .display ".status3"
-    * label *label205
   628 sensor *tmp197 @unit @firstItem
   629 jump *label206 notEqual *tmp197 :depositItems:item
   630 set *tmp202 5
 
   645 jump *label214 lessThan *tmp204 :depositItems:cap
   646 jump *label213 always
   647 label *label214
-    * label *label215
-    * label *label212
   648 sensor *tmp207 @unit @firstItem
   649 jump *label211 notEqual *tmp207 null
   650 label *label213
   651 jump *label207 always
   652 label *label206
-    * label *label216
   653 sensor *tmp209 @unit @firstItem
   654 jump *label218 equal *tmp209 null
   655 label *label396
   656 ucontrol itemDrop @air 1000
-    * label *label217
   657 sensor *tmp209 @unit @firstItem
   658 jump *label396 notEqual *tmp209 null
   659 label *label218
   660 label *label207
   661 write 0 .display ".transportTarget"
   662 write null .display ".transportItem"
-    * label *label204
   663 return :depositItems*retaddr
   664 end
   665 label *label5
 
   670 print :locateOre:ore
   671 printflush message1
   672 stop
-    * label *label222
   673 label *label220
-    * label *label221
-    * label *label219
   674 return :locateOre*retaddr
   675 end
   676 label *label6
 
   688 call *label2 *invalid :moveToEmpty*retval (m:*label225) (h:*label225)
   689 label *label225
   690 write "Mining..." .display ".status3"
-    * label *label226
   691 label *label227
   692 sensor :mineOre:item @unit @firstItem
   693 op notEqual *tmp216 :mineOre:item null
 
   696 jump *label230 equal *tmp218 false
   697 jump *label229 always
   698 label *label230
-    * label *label231
   699 ucontrol mine :mineOre:x :mineOre:y
-    * label *label228
   700 sensor *tmp220 @unit @totalItems
   701 jump *label227 lessThan *tmp220 :mineOre:amount
   702 label *label229
 
   707 setaddr :depositItems*retaddr *label232 (h:*label232)
   708 call *label4 *invalid :depositItems*retval (m:*label232) (h:*label232)
   709 label *label232
-    * label *label223
   710 return :mineOre*retaddr
   711 end
   712 label *label7
   713 write "Mining " .display ".status2"
   714 write :mineOre.1:ore .display ".item2"
   715 write "core" .display ".block2"
-    * label *label234
   716 set :mineOre:ore :mineOre.1:ore
   717 set :mineOre:amount 30
   718 set :mineOre:block .core
   719 setaddr :mineOre*retaddr *label235 (h:*label235)
   720 call *label6 *invalid :mineOre*retval (m:*label235) (h:*label235)
   721 label *label235
-    * label *label233
   722 return :mineOre.1*retaddr
   723 end
   724 label *label8
 
   728 write "Fetching " .display ".status2"
   729 write :fetchBlock:item .display ".item2"
   730 write :fetchBlock:block .display ".block2"
-    * label *label237
   731 sensor *tmp224 :fetchBlock:block @x
   732 sensor *tmp225 :fetchBlock:block @y
   733 set :moveToEmpty:x *tmp224
 
   744 jump *label242 equal *tmp229 false
   745 ucontrol itemDrop @air 1000
   746 label *label242
-    * label *label243
-    * label *label240
   747 sensor *tmp231 @unit :fetchBlock:item
   748 op lessThan *tmp232 *tmp231 30
   749 sensor *tmp233 :fetchBlock:block :fetchBlock:item
   750 op land *tmp234 *tmp232 *tmp233
   751 jump *label239 notEqual *tmp234 false
-    * label *label241
   752 set :depositItems:block .core
   753 set :depositItems:item :fetchBlock:item
   754 set :depositItems:fromMining false
   755 setaddr :depositItems*retaddr *label244 (h:*label244)
   756 call *label4 *invalid :depositItems*retval (m:*label244) (h:*label244)
   757 label *label244
-    * label *label236
   758 return :fetchBlock*retaddr
   759 end
   760 label *label9
 
   765 sensor *tmp240 .press @coal
   766 jump *label250 greaterThanEq *tmp240 5
   767 write "Goal 1: Meeting the graphite target" .display ".status1"
-    * label *label252
   768 write "Supplying " .display ".status2"
   769 write @coal .display ".item2"
   770 write .press .display ".block2"
-    * label *label254
   771 sensor *tmp243 .press @itemCapacity
   772 sensor *tmp244 .press @coal
   773 op sub :supplyBlock:missing *tmp243 *tmp244
 
   779 call *label6 *invalid :mineOre*retval (m:*label257) (h:*label257)
   780 label *label257
   781 label *label255
-    * label *label256
-    * label *label253
   782 set :supplyBase:supplied true
   783 label *label250
-    * label *label251
   784 label *label248
-    * label *label249
   785 sensor *tmp248 .core @silicon
   786 jump *label258 greaterThanEq *tmp248 .siliconTarget
   787 sensor *tmp251 .smelter @coal
   788 jump *label260 greaterThanEq *tmp251 5
   789 write "Goal 2: Meeting the silicon target (coal)" .display ".status1"
-    * label *label262
   790 write "Supplying " .display ".status2"
   791 write @coal .display ".item2"
   792 write .smelter .display ".block2"
-    * label *label264
   793 sensor *tmp254 .smelter @itemCapacity
   794 sensor *tmp255 .smelter @coal
   795 op sub :supplyBlock.1:missing *tmp254 *tmp255
 
   801 call *label6 *invalid :mineOre*retval (m:*label267) (h:*label267)
   802 label *label267
   803 label *label265
-    * label *label266
-    * label *label263
   804 set :supplyBase:supplied true
   805 jump *label261 always
   806 label *label260
   807 sensor *tmp259 .smelter @sand
   808 jump *label268 greaterThanEq *tmp259 5
   809 write "Goal 3: Meeting the silicon target (sand)" .display ".status1"
-    * label *label270
   810 write "Supplying " .display ".status2"
   811 write @sand .display ".item2"
   812 write .smelter .display ".block2"
-    * label *label272
   813 sensor *tmp262 .smelter @itemCapacity
   814 sensor *tmp263 .smelter @sand
   815 op sub :supplyBlock.2:missing *tmp262 *tmp263
 
   821 call *label6 *invalid :mineOre*retval (m:*label275) (h:*label275)
   822 label *label275
   823 label *label273
-    * label *label274
-    * label *label271
   824 set :supplyBase:supplied true
   825 label *label268
-    * label *label269
   826 label *label261
   827 label *label258
-    * label *label259
   828 sensor *tmp267 .battery @totalPower
   829 jump *label276 greaterThanEq *tmp267 .powerTarget
   830 sensor *tmp270 .generator @coal
   831 jump *label278 greaterThanEq *tmp270 4
   832 write "Goal 4: Supplying generator" .display ".status1"
-    * label *label280
   833 write "Supplying " .display ".status2"
   834 write @coal .display ".item2"
   835 write .generator .display ".block2"
-    * label *label282
   836 sensor *tmp273 .generator @itemCapacity
   837 sensor *tmp274 .generator @coal
   838 op sub :supplyBlock.3:missing *tmp273 *tmp274
 
   844 call *label6 *invalid :mineOre*retval (m:*label285) (h:*label285)
   845 label *label285
   846 label *label283
-    * label *label284
-    * label *label281
   847 set :supplyBase:supplied true
   848 label *label278
-    * label *label279
   849 label *label276
-    * label *label277
   850 label *label246
-    * label *label247
   851 sensor *tmp278 .titanium_drill @titanium
   852 jump *label286 greaterThanEq *tmp278 .titaniumTrigger
   853 jump *label288 notEqual :supplyBase:supplied false
   854 sensor *tmp283 .battery @totalPower
   855 jump *label290 greaterThanEq *tmp283 .powerTarget
   856 write "Goal 5: Supplying generator (5)" .display ".status1"
-    * label *label292
   857 set :mineOre.1:ore @coal
   858 setaddr :mineOre.1*retaddr *label293 (h:*label293)
   859 call *label7 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
 
   863 sensor *tmp286 .core @silicon
   864 jump *label294 greaterThanEq *tmp286 .siliconTarget
   865 write "Goal 6: Meeting the silicon target" .display ".status1"
-    * label *label296
   866 sensor :supplyBase:coal .core @coal
   867 sensor :supplyBase:sand .core @sand
   868 set :mineOre.1:ore @sand
 
   877 sensor *tmp293 .core @copper
   878 jump *label300 greaterThanEq *tmp293 .copperTarget
   879 write "Goal 7: Meeting the copper target" .display ".status1"
-    * label *label302
   880 set :mineOre.1:ore @copper
   881 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   882 call *label7 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
 
   886 sensor *tmp296 .core @lead
   887 jump *label304 greaterThanEq *tmp296 .leadTarget
   888 write "Goal 8: Meeting the lead target" .display ".status1"
-    * label *label306
   889 set :mineOre.1:ore @lead
   890 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   891 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
 
   895 sensor *tmp299 .core @metaglass
   896 jump *label308 greaterThanEq *tmp299 .metaglassTarget
   897 write "Goal 9: Meeting the metaglass target" .display ".status1"
-    * label *label310
   898 set :mineOre.1:ore @sand
   899 setaddr :mineOre.1*retaddr *label311 (h:*label311)
   900 call *label7 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
 
   902 jump *label309 always
   903 label *label308
   904 write "Goal 10: Supplying base" .display ".status1"
-    * label *label312
   905 sensor :supplyBase:coal.1 .core @coal
   906 sensor :supplyBase:sand.1 .core @sand
   907 set :mineOre.1:ore @sand
 
   917 label *label295
   918 label *label291
   919 label *label288
-    * label *label289
   920 jump *label287 always
   921 label *label286
   922 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label316
   923 set :fetchBlock:block .titanium_drill
   924 set :fetchBlock:item @titanium
   925 setaddr :fetchBlock*retaddr *label317 (h:*label317)
   926 call *label8 *invalid :fetchBlock*retval (m:*label317) (h:*label317)
   927 label *label317
   928 label *label287
-    * label *label245
   929 return :supplyBase*retaddr
   930 end
   931 label *label10
   932 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
   933 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
-    * label *label369
   934 op sign :meetTarget:count :meetTarget:copper
-    * label *label370
-    * label *label373
   935 op sign *tmp309 :meetTarget:totalLead
   936 op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label374
-    * label *label377
   937 op sign *tmp309 :meetTarget:graphite
   938 op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label378
-    * label *label381
   939 op sign *tmp309 :meetTarget:totalSilicon
   940 op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label382
-    * label *label385
   941 op sign *tmp309 :meetTarget:titanium
   942 op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label386
-    * label *label389
   943 op sign *tmp309 :meetTarget:metaglass
   944 op add :meetTarget:count :meetTarget:count *tmp309
-    * label *label390
-    * label *label321
   945 write :meetTarget:count .display ".totalTargets"
   946 write :meetTarget:block .display ".nextBlock"
   947 write :meetTarget:copper .display ".copperTarget"
 
   971 jump *label329 greaterThanEq *tmp317 :meetTarget:titanium
   972 set .titaniumTrigger 7
   973 label *label329
-    * label *label330
   974 sensor *tmp320 .core @copper
   975 op lessThan *tmp321 *tmp320 :meetTarget:copper
   976 sensor *tmp322 .core @lead
 
  1005 setaddr :supplyBase*retaddr *label333 (h:*label333)
  1006 call *label9 *invalid :supplyBase*retval (m:*label333) (h:*label333)
  1007 label *label333
-    * label *label331
  1008 sensor *tmp320 .core @copper
  1009 op lessThan *tmp321 *tmp320 .copperTarget
  1010 sensor *tmp322 .core @lead
 
  1036 op or *tmp349 *tmp344 *tmp347
  1037 jump *label397 notEqual *tmp349 false
  1038 label *label332
-    * label *label318
  1039 return :meetTarget*retaddr
  1040 end
  1041 label *label11
 
  1045 call *label1 *invalid :moveTo.1*retval (m:*label335) (h:*label335)
  1046 label *label335
  1047 write "Building..." .display ".status3"
-    * label *label336
  1048 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1049 jump *label337 equal :buildBlockAt:building null
  1050 jump *label339 notEqual :buildBlockAt:type :buildBlockAt:block
  1051 set :buildBlockAt*retval :buildBlockAt:building
  1052 jump *label334 always
  1053 label *label339
-    * label *label340
  1054 jump *label341 equal :buildBlockAt:skipError false
  1055 set :buildBlockAt*retval null
  1056 jump *label334 always
  1057 label *label341
-    * label *label342
  1058 print "[salmon]"
  1059 print "Cannot build at ("
  1060 print :buildBlockAt:x
 
  1064 print :buildBlockAt:building
  1065 printflush message1
  1066 stop
-    * label *label343
  1067 label *label337
-    * label *label338
  1068 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1069 wait 0.25
  1070 label *label344
 
  1072 jump *label347 notEqual :buildBlockAt:building null
  1073 jump *label346 always
  1074 label *label347
-    * label *label348
-    * label *label345
  1075 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1076 label *label346
  1077 set :buildBlockAt*retval :buildBlockAt:building
 
  1101 call *label11 *invalid :buildBlockAt*retval (m:*label351) (h:*label351)
  1102 label *label351
  1103 set :buildBlock*retval :buildBlockAt*retval
-    * label *label349
  1104 return :buildBlock*retaddr
  1105 end
  1106 label *label13
 
  1121 setaddr :supplyBase*retaddr *label357 (h:*label357)
  1122 call *label9 *invalid :supplyBase*retval (m:*label357) (h:*label357)
  1123 label *label357
-    * label *label355
  1124 read *tmp30 .processor ".unitToProduce"
  1125 jump *label354 notEqual *tmp30 null
-    * label *label356
  1126 label *label358
  1127 ubind :buildUnit:type
-    * label *label359
  1128 sensor *tmp363 @unit @flag
  1129 jump *label358 notEqual *tmp363 null
-    * label *label360
  1130 op add :buildUnit:count :buildUnit:count 1
  1131 ucontrol flag :buildUnit:count
  1132 op mul *tmp365 10 :buildUnit:count
 
  1136 call *label1 *invalid :moveTo.1*retval (m:*label361) (h:*label361)
  1137 label *label361
  1138 ubind .mainUnit
-    * label *label352
  1139 return :buildUnit*retaddr
  1140 end
  1141 label *label14
 
  1147 op add :findUnits:count :findUnits:count 1
  1148 ucontrol flag :findUnits:count
  1149 ubind :findUnits:type
-    * label *label366
  1150 jump *label365 notEqual @unit :findUnits:firstUnit
-    * label *label367
  1151 label *label363
-    * label *label364
-    * label *label362
  1152 return :findUnits*retaddr
  1153 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-8 instructions):
 
   136 op abs *tmp62 *tmp61
   137 op greaterThanEq *tmp63 *tmp62 10
   138 op or *tmp64 *tmp60 *tmp63
-    * jump *label62 equal *tmp64 false
-    * jump *label60 always
+  139 jump *label60 notEqual *tmp64 false
   140 label *label62
   141 op sin *tmp67 :locateOreAway:angle
   142 op mul *tmp68 *tmp67 :locateOreAway:distance
 
   196 set :buildTitaniumDrillCfg:dx 1
   197 set :buildTitaniumDrillCfg:dy 1
   198 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label411 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  199 jump *label69 greaterThanEq :checkOre.3:count 4
   200 label *label411
   201 label *label413
   202 set :checkOre:count 0
 
   225 set :buildTitaniumDrillCfg:dx 1
   226 set :buildTitaniumDrillCfg:dy -1
   227 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label431 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  228 jump *label69 greaterThanEq :checkOre.3:count 4
   229 label *label431
   230 label *label433
   231 set :checkOre:count 0
 
   254 set :buildTitaniumDrillCfg:dx -1
   255 set :buildTitaniumDrillCfg:dy 1
   256 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label451 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  257 jump *label69 greaterThanEq :checkOre.3:count 4
   258 label *label451
   259 label *label453
   260 set :checkOre:count 0
 
   283 set :buildTitaniumDrillCfg:dx -1
   284 set :buildTitaniumDrillCfg:dy -1
   285 set :buildTitaniumDrillCfg:best :checkOre.3:count
-    * jump *label471 lessThan :checkOre.3:count 4
-    * jump *label69 always
+  286 jump *label69 greaterThanEq :checkOre.3:count 4
   287 label *label471
   288 label *label473
   289 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
 
   637 label *label211
   638 ucontrol itemDrop :depositItems:block 30
   639 sensor *tmp204 :depositItems:block :depositItems:item
-    * jump *label214 lessThan *tmp204 :depositItems:cap
-    * jump *label213 always
+  640 jump *label213 greaterThanEq *tmp204 :depositItems:cap
   641 label *label214
   642 sensor *tmp207 @unit @firstItem
   643 jump *label211 notEqual *tmp207 null
 
   687 op notEqual *tmp216 :mineOre:item null
   688 op notEqual *tmp217 :mineOre:item :mineOre:ore
   689 op land *tmp218 *tmp216 *tmp217
-    * jump *label230 equal *tmp218 false
-    * jump *label229 always
+  690 jump *label229 notEqual *tmp218 false
   691 label *label230
   692 ucontrol mine :mineOre:x :mineOre:y
   693 sensor *tmp220 @unit @totalItems
 
  1062 wait 0.25
  1063 label *label344
  1064 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label347 notEqual :buildBlockAt:building null
-    * jump *label346 always
+ 1065 jump *label346 equal :buildBlockAt:building null
  1066 label *label347
  1067 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1068 label *label346

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   137 op greaterThanEq *tmp63 *tmp62 10
   138 op or *tmp64 *tmp60 *tmp63
   139 jump *label60 notEqual *tmp64 false
-    * label *label62
   140 op sin *tmp67 :locateOreAway:angle
   141 op mul *tmp68 *tmp67 :locateOreAway:distance
   142 op add *tmp69 .coreX *tmp68
 
   196 set :buildTitaniumDrillCfg:dy 1
   197 set :buildTitaniumDrillCfg:best :checkOre.3:count
   198 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label411
   199 label *label413
   200 set :checkOre:count 0
   201 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   224 set :buildTitaniumDrillCfg:dy -1
   225 set :buildTitaniumDrillCfg:best :checkOre.3:count
   226 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label431
   227 label *label433
   228 set :checkOre:count 0
   229 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   252 set :buildTitaniumDrillCfg:dy 1
   253 set :buildTitaniumDrillCfg:best :checkOre.3:count
   254 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label451
   255 label *label453
   256 set :checkOre:count 0
   257 ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ay 0 0 :checkOre:floor
 
   280 set :buildTitaniumDrillCfg:dy -1
   281 set :buildTitaniumDrillCfg:best :checkOre.3:count
   282 jump *label69 greaterThanEq :checkOre.3:count 4
-    * label *label471
   283 label *label473
   284 op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCfg:searches 1
   285 jump *label368 lessThan :buildTitaniumDrillCfg:searches 5
 
   633 ucontrol itemDrop :depositItems:block 30
   634 sensor *tmp204 :depositItems:block :depositItems:item
   635 jump *label213 greaterThanEq *tmp204 :depositItems:cap
-    * label *label214
   636 sensor *tmp207 @unit @firstItem
   637 jump *label211 notEqual *tmp207 null
   638 label *label213
 
   682 op notEqual *tmp217 :mineOre:item :mineOre:ore
   683 op land *tmp218 *tmp216 *tmp217
   684 jump *label229 notEqual *tmp218 false
-    * label *label230
   685 ucontrol mine :mineOre:x :mineOre:y
   686 sensor *tmp220 @unit @totalItems
   687 jump *label227 lessThan *tmp220 :mineOre:amount
 
  1056 label *label344
  1057 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1058 jump *label346 equal :buildBlockAt:building null
-    * label *label347
  1059 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1060 label *label346
  1061 set :buildBlockAt*retval :buildBlockAt:building

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   318 label *label96
   319 label *label93
   320 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label100 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  321 jump *label53 lessThanEq :buildTitaniumDrillCfg:attempts 5
   322 op sin *tmp125 :locateOreAway:angle
   323 op mul *tmp126 *tmp125 :locateOreAway:distance
   324 op add *tmp127 .coreX *tmp126
 
   632 label *label211
   633 ucontrol itemDrop :depositItems:block 30
   634 sensor *tmp204 :depositItems:block :depositItems:item
-    * jump *label213 greaterThanEq *tmp204 :depositItems:cap
+  635 jump *label207 greaterThanEq *tmp204 :depositItems:cap
   636 sensor *tmp207 @unit @firstItem
   637 jump *label211 notEqual *tmp207 null
   638 label *label213
 
   836 label *label246
   837 sensor *tmp278 .titanium_drill @titanium
   838 jump *label286 greaterThanEq *tmp278 .titaniumTrigger
-    * jump *label288 notEqual :supplyBase:supplied false
+  839 jump *label287 notEqual :supplyBase:supplied false
   840 sensor *tmp283 .battery @totalPower
   841 jump *label290 greaterThanEq *tmp283 .powerTarget
   842 write "Goal 5: Supplying generator (5)" .display ".status1"
 
   844 setaddr :mineOre.1*retaddr *label293 (h:*label293)
   845 call *label7 *invalid :mineOre.1*retval (m:*label293) (h:*label293)
   846 label *label293
-    * jump *label291 always
+  847 return :supplyBase*retaddr
   848 label *label290
   849 sensor *tmp286 .core @silicon
   850 jump *label294 greaterThanEq *tmp286 .siliconTarget
 
   858 setaddr :mineOre.1*retaddr *label299 (h:*label299)
   859 call *label7 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
   860 label *label299
-    * jump *label295 always
+  861 return :supplyBase*retaddr
   862 label *label294
   863 sensor *tmp293 .core @copper
   864 jump *label300 greaterThanEq *tmp293 .copperTarget
 
   867 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   868 call *label7 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
   869 label *label303
-    * jump *label301 always
+  870 return :supplyBase*retaddr
   871 label *label300
   872 sensor *tmp296 .core @lead
   873 jump *label304 greaterThanEq *tmp296 .leadTarget
 
   876 setaddr :mineOre.1*retaddr *label307 (h:*label307)
   877 call *label7 *invalid :mineOre.1*retval (m:*label307) (h:*label307)
   878 label *label307
-    * jump *label305 always
+  879 return :supplyBase*retaddr
   880 label *label304
   881 sensor *tmp299 .core @metaglass
   882 jump *label308 greaterThanEq *tmp299 .metaglassTarget
 
   885 setaddr :mineOre.1*retaddr *label311 (h:*label311)
   886 call *label7 *invalid :mineOre.1*retval (m:*label311) (h:*label311)
   887 label *label311
-    * jump *label309 always
+  888 return :supplyBase*retaddr
   889 label *label308
   890 write "Goal 10: Supplying base" .display ".status1"
   891 sensor :supplyBase:coal.1 .core @coal
 
   903 label *label295
   904 label *label291
   905 label *label288
-    * jump *label287 always
+  906 return :supplyBase*retaddr
   907 label *label286
   908 write "Goal 11: Fetching titanium" .display ".status1"
   909 set :fetchBlock:block .titanium_drill
 
  1035 jump *label337 equal :buildBlockAt:building null
  1036 jump *label339 notEqual :buildBlockAt:type :buildBlockAt:block
  1037 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label334 always
+ 1038 return :buildBlockAt*retaddr
  1039 label *label339
  1040 jump *label341 equal :buildBlockAt:skipError false
  1041 set :buildBlockAt*retval null
-    * jump *label334 always
+ 1042 return :buildBlockAt*retaddr
  1043 label *label341
  1044 print "[salmon]"
  1045 print "Cannot build at ("

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-39 instructions):
 
    43 label *label26
    44 set *tmp35 :buildBlock*retval
    45 jump *label21 always
-    * multijump *tmp36 0 0 (m:marker0)
-    * multilabel *label25 (m:marker0)
    46 label *label21
    47 set .press *tmp35
    48 op add :buildBlockFromCfg.1:y .coreY 4
 
    56 label *label32
    57 set *tmp39 :buildBlock*retval
    58 jump *label27 always
-    * multijump *tmp40 0 0 (m:marker1)
-    * multilabel *label31 (m:marker1)
    59 label *label27
    60 set .battery *tmp39
    61 op add :buildBlockFromCfg.2:x .coreX -1
 
    65 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    66 label *label38
    67 jump *label33 always
-    * multijump *tmp44 0 0 (m:marker2)
-    * multilabel *label37 (m:marker2)
    68 label *label33
    69 op add :buildBlockFromCfg.3:y .coreY 3
    70 set :buildBlock:block @combustion-generator
 
    77 label *label44
    78 set *tmp47 :buildBlock*retval
    79 jump *label39 always
-    * multijump *tmp48 0 0 (m:marker3)
-    * multilabel *label43 (m:marker3)
    80 label *label39
    81 set .generator *tmp47
    82 set .powerTarget 400
 
    91 label *label50
    92 set *tmp51 :buildBlock*retval
    93 jump *label45 always
-    * multijump *tmp52 0 0 (m:marker4)
-    * multilabel *label49 (m:marker4)
    94 label *label45
    95 set .smelter *tmp51
    96 set :buildTitaniumDrillCfg:distance 32
 
   325 set :buildTitaniumDrillCfg:attempts 0
   326 op sub *tmp131 :buildTitaniumDrillCfg:minimum 1
   327 op max :buildTitaniumDrillCfg:minimum *tmp131 1
-    * label *label100
   328 jump *label53 always
-    * set *tmp56 null
   329 label *label52
   330 set .titanium_drill *tmp56
   331 op add :buildBlock:y .coreY 2
 
   340 label *label109
   341 set .unloader1 :buildBlock*retval
   342 jump *label104 always
-    * multijump *tmp134 0 0 (m:marker6)
-    * multilabel *label108 (m:marker6)
   343 label *label104
   344 op add :buildBlock:x .coreX 1
   345 set :buildBlock:block @micro-processor
 
   354 label *label115
   355 set *tmp137 :buildBlock*retval
   356 jump *label110 always
-    * multijump *tmp138 0 0 (m:marker7)
-    * multilabel *label114 (m:marker7)
   357 label *label110
   358 set .processor *tmp137
   359 write .core *tmp137 ".core"
 
   374 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   375 label *label121
   376 jump *label116 always
-    * multijump *tmp142 0 0 (m:marker8)
-    * multilabel *label120 (m:marker8)
   377 label *label116
   378 op add :buildBlockFromCfg.8:x .coreX -4
   379 set :buildBlock:block @air-factory
 
   388 label *label127
   389 set *tmp145 :buildBlock*retval
   390 jump *label122 always
-    * multijump *tmp146 0 0 (m:marker9)
-    * multilabel *label126 (m:marker9)
   391 label *label122
   392 set .factory *tmp145
   393 write *tmp145 *tmp137 ".factory"
 
   406 label *label133
   407 set *tmp149 :buildBlock*retval
   408 jump *label128 always
-    * multijump *tmp150 0 0 (m:marker10)
-    * multilabel *label132 (m:marker10)
   409 label *label128
   410 write *tmp149 *tmp137 ".unloader2"
   411 op add :buildBlock:x .coreX -3
 
   419 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   420 label *label139
   421 jump *label134 always
-    * multijump *tmp154 0 0 (m:marker11)
-    * multilabel *label138 (m:marker11)
   422 label *label134
   423 set :buildUnit:type @flare
   424 set :buildUnit:lead 0
 
   448 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   449 label *label149
   450 jump *label144 always
-    * multijump *tmp160 0 0 (m:marker12)
-    * multilabel *label148 (m:marker12)
   451 label *label144
   452 op add :buildBlock:x .coreX 3.5
   453 op add :buildBlock:y .coreY 0.5
 
   461 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   462 label *label155
   463 jump *label150 always
-    * multijump *tmp164 0 0 (m:marker13)
-    * multilabel *label154 (m:marker13)
   464 label *label150
   465 write null *tmp137 ".kiln"
   466 set :buildBlock:block @junction
 
   473 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   474 label *label161
   475 jump *label156 always
-    * multijump *tmp168 0 0 (m:marker14)
-    * multilabel *label160 (m:marker14)
   476 label *label156
   477 op add :buildBlockFromCfg.14:x .coreX -3.5
   478 op add :buildBlock:y .coreY 4.5
 
   486 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   487 label *label167
   488 jump *label162 always
-    * multijump *tmp172 0 0 (m:marker15)
-    * multilabel *label166 (m:marker15)
   489 label *label162
   490 set :buildBlock:block @steam-generator
   491 set :buildBlock:x :buildBlockFromCfg.14:x
 
   500 label *label173
   501 set *tmp175 :buildBlock*retval
   502 jump *label168 always
-    * multijump *tmp176 0 0 (m:marker16)
-    * multilabel *label172 (m:marker16)
   503 label *label168
   504 write *tmp175 *tmp137 ".generator2"
   505 set :buildBlock:block @sorter
 
   514 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   515 label *label179
   516 jump *label174 always
-    * multijump *tmp180 0 0 (m:marker17)
-    * multilabel *label178 (m:marker17)
   517 label *label174
   518 label *label180
   519 setaddr :supplyBase*retaddr *label183 (h:*label183)
   520 call *label9 *invalid :supplyBase*retval (m:*label183) (h:*label183)
   521 label *label183
   522 jump *label180 always
-    * ucontrol stop
-    * print "[salmon]"
-    * print "Done"
-    * printflush message1
-    * stop
-    * end
   523 label *label0
   524 write "Moving..." .display ".status3"
   525 op sub *tmp185 :moveTo:radius 0.5
 
   531 jump *label395 equal *tmp183 false
   532 label *label189
   533 return :moveTo*retaddr
-    * end
   534 label *label1
   535 set :moveTo:x :moveTo.1:x
   536 set :moveTo:y :moveTo.1:y
 
   539 call *label0 *invalid :moveTo*retval (m:*label191) (h:*label191)
   540 label *label191
   541 return :moveTo.1*retaddr
-    * end
   542 label *label2
   543 write "Moving..." .display ".status3"
   544 label *label194
 
   557 jump *label394 notEqual *tmp193 null
   558 label *label201
   559 return :moveToEmpty*retaddr
-    * end
   560 label *label3
   561 sensor *tmp195 :moveToBlock:block @x
   562 sensor *tmp196 :moveToBlock:block @y
 
   567 call *label0 *invalid :moveTo*retval (m:*label203) (h:*label203)
   568 label *label203
   569 return :moveToBlock*retaddr
-    * end
   570 label *label4
   571 write "Depositing..." .display ".status3"
   572 sensor *tmp197 @unit @firstItem
 
   589 jump *label207 greaterThanEq *tmp204 :depositItems:cap
   590 sensor *tmp207 @unit @firstItem
   591 jump *label211 notEqual *tmp207 null
-    * label *label213
   592 jump *label207 always
   593 label *label206
   594 sensor *tmp209 @unit @firstItem
 
   602 write 0 .display ".transportTarget"
   603 write null .display ".transportItem"
   604 return :depositItems*retaddr
-    * end
   605 label *label5
   606 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp211 0
   607 jump *label220 notEqual *tmp211 false
 
   612 stop
   613 label *label220
   614 return :locateOre*retaddr
-    * end
   615 label *label6
   616 write :mineOre:amount .display ".transportTarget"
   617 write :mineOre:ore .display ".transportItem"
 
   645 call *label4 *invalid :depositItems*retval (m:*label232) (h:*label232)
   646 label *label232
   647 return :mineOre*retaddr
-    * end
   648 label *label7
   649 write "Mining " .display ".status2"
   650 write :mineOre.1:ore .display ".item2"
 
   656 call *label6 *invalid :mineOre*retval (m:*label235) (h:*label235)
   657 label *label235
   658 return :mineOre.1*retaddr
-    * end
   659 label *label8
   660 sensor *tmp223 :fetchBlock:block @itemCapacity
   661 write *tmp223 .display ".transportTarget"
 
   691 call *label4 *invalid :depositItems*retval (m:*label244) (h:*label244)
   692 label *label244
   693 return :fetchBlock*retaddr
-    * end
   694 label *label9
   695 set :supplyBase:supplied false
   696 jump *label246 notEqual .unloader1 null
 
   845 setaddr :mineOre.1*retaddr *label315 (h:*label315)
   846 call *label7 *invalid :mineOre.1*retval (m:*label315) (h:*label315)
   847 label *label315
-    * label *label309
-    * label *label305
-    * label *label301
-    * label *label295
-    * label *label291
-    * label *label288
   848 return :supplyBase*retaddr
   849 label *label286
   850 write "Goal 11: Fetching titanium" .display ".status1"
 
   855 label *label317
   856 label *label287
   857 return :supplyBase*retaddr
-    * end
   858 label *label10
   859 op max :meetTarget:totalLead :meetTarget:lead :meetTarget:factoryLead
   860 op max :meetTarget:totalSilicon :meetTarget:silicon :meetTarget:factorySilicon
 
   964 jump *label397 notEqual *tmp349 false
   965 label *label332
   966 return :meetTarget*retaddr
-    * end
   967 label *label11
   968 set :moveTo.1:x :buildBlockAt:x
   969 set :moveTo.1:y :buildBlockAt:y
 
   999 jump *label344 notEqual :buildBlockAt:type :buildBlockAt:block
  1000 label *label346
  1001 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label334
  1002 return :buildBlockAt*retaddr
-    * end
  1003 label *label12
  1004 set :meetTarget:block :buildBlock:block
  1005 set :meetTarget:copper :buildBlock:copper
 
  1024 label *label351
  1025 set :buildBlock*retval :buildBlockAt*retval
  1026 return :buildBlock*retaddr
-    * end
  1027 label *label13
  1028 set :meetTarget:block :buildUnit:type
  1029 set :meetTarget:copper 0
 
  1058 label *label361
  1059 ubind .mainUnit
  1060 return :buildUnit*retaddr
-    * end
  1061 label *label14
  1062 set :findUnits:count 0
  1063 ubind :findUnits:type
 
  1070 jump *label365 notEqual @unit :findUnits:firstUnit
  1071 label *label363
  1072 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    42 call *label12 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp35 :buildBlock*retval
-    * jump *label21 always
    45 label *label21
    46 set .press *tmp35
    47 op add :buildBlockFromCfg.1:y .coreY 4
 
    54 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    55 label *label32
    56 set *tmp39 :buildBlock*retval
-    * jump *label27 always
    57 label *label27
    58 set .battery *tmp39
    59 op add :buildBlockFromCfg.2:x .coreX -1
 
    62 setaddr :buildBlock*retaddr *label38 (h:*label38)
    63 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    64 label *label38
-    * jump *label33 always
    65 label *label33
    66 op add :buildBlockFromCfg.3:y .coreY 3
    67 set :buildBlock:block @combustion-generator
 
    73 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    74 label *label44
    75 set *tmp47 :buildBlock*retval
-    * jump *label39 always
    76 label *label39
    77 set .generator *tmp47
    78 set .powerTarget 400
 
    86 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    87 label *label50
    88 set *tmp51 :buildBlock*retval
-    * jump *label45 always
    89 label *label45
    90 set .smelter *tmp51
    91 set :buildTitaniumDrillCfg:distance 32
 
   334 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   335 label *label109
   336 set .unloader1 :buildBlock*retval
-    * jump *label104 always
   337 label *label104
   338 op add :buildBlock:x .coreX 1
   339 set :buildBlock:block @micro-processor
 
   347 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   348 label *label115
   349 set *tmp137 :buildBlock*retval
-    * jump *label110 always
   350 label *label110
   351 set .processor *tmp137
   352 write .core *tmp137 ".core"
 
   366 setaddr :buildBlock*retaddr *label121 (h:*label121)
   367 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   368 label *label121
-    * jump *label116 always
   369 label *label116
   370 op add :buildBlockFromCfg.8:x .coreX -4
   371 set :buildBlock:block @air-factory
 
   379 call *label12 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   380 label *label127
   381 set *tmp145 :buildBlock*retval
-    * jump *label122 always
   382 label *label122
   383 set .factory *tmp145
   384 write *tmp145 *tmp137 ".factory"
 
   396 call *label12 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   397 label *label133
   398 set *tmp149 :buildBlock*retval
-    * jump *label128 always
   399 label *label128
   400 write *tmp149 *tmp137 ".unloader2"
   401 op add :buildBlock:x .coreX -3
 
   408 setaddr :buildBlock*retaddr *label139 (h:*label139)
   409 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   410 label *label139
-    * jump *label134 always
   411 label *label134
   412 set :buildUnit:type @flare
   413 set :buildUnit:lead 0
 
   436 setaddr :buildBlock*retaddr *label149 (h:*label149)
   437 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   438 label *label149
-    * jump *label144 always
   439 label *label144
   440 op add :buildBlock:x .coreX 3.5
   441 op add :buildBlock:y .coreY 0.5
 
   448 setaddr :buildBlock*retaddr *label155 (h:*label155)
   449 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   450 label *label155
-    * jump *label150 always
   451 label *label150
   452 write null *tmp137 ".kiln"
   453 set :buildBlock:block @junction
 
   459 setaddr :buildBlock*retaddr *label161 (h:*label161)
   460 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   461 label *label161
-    * jump *label156 always
   462 label *label156
   463 op add :buildBlockFromCfg.14:x .coreX -3.5
   464 op add :buildBlock:y .coreY 4.5
 
   471 setaddr :buildBlock*retaddr *label167 (h:*label167)
   472 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   473 label *label167
-    * jump *label162 always
   474 label *label162
   475 set :buildBlock:block @steam-generator
   476 set :buildBlock:x :buildBlockFromCfg.14:x
 
   484 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   485 label *label173
   486 set *tmp175 :buildBlock*retval
-    * jump *label168 always
   487 label *label168
   488 write *tmp175 *tmp137 ".generator2"
   489 set :buildBlock:block @sorter
 
   497 setaddr :buildBlock*retaddr *label179 (h:*label179)
   498 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   499 label *label179
-    * jump *label174 always
   500 label *label174
   501 label *label180
   502 setaddr :supplyBase*retaddr *label183 (h:*label183)

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    42 call *label12 *invalid :buildBlock*retval (m:*label26) (h:*label26)
    43 label *label26
    44 set *tmp35 :buildBlock*retval
-    * label *label21
    45 set .press *tmp35
    46 op add :buildBlockFromCfg.1:y .coreY 4
    47 set :buildBlock:block @battery
 
    53 call *label12 *invalid :buildBlock*retval (m:*label32) (h:*label32)
    54 label *label32
    55 set *tmp39 :buildBlock*retval
-    * label *label27
    56 set .battery *tmp39
    57 op add :buildBlockFromCfg.2:x .coreX -1
    58 set :buildBlock:x :buildBlockFromCfg.2:x
 
    60 setaddr :buildBlock*retaddr *label38 (h:*label38)
    61 call *label12 *invalid :buildBlock*retval (m:*label38) (h:*label38)
    62 label *label38
-    * label *label33
    63 op add :buildBlockFromCfg.3:y .coreY 3
    64 set :buildBlock:block @combustion-generator
    65 set :buildBlock:x .coreX
 
    70 call *label12 *invalid :buildBlock*retval (m:*label44) (h:*label44)
    71 label *label44
    72 set *tmp47 :buildBlock*retval
-    * label *label39
    73 set .generator *tmp47
    74 set .powerTarget 400
    75 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    82 call *label12 *invalid :buildBlock*retval (m:*label50) (h:*label50)
    83 label *label50
    84 set *tmp51 :buildBlock*retval
-    * label *label45
    85 set .smelter *tmp51
    86 set :buildTitaniumDrillCfg:distance 32
    87 set :buildTitaniumDrillCfg:angle 0
 
   329 call *label12 *invalid :buildBlock*retval (m:*label109) (h:*label109)
   330 label *label109
   331 set .unloader1 :buildBlock*retval
-    * label *label104
   332 op add :buildBlock:x .coreX 1
   333 set :buildBlock:block @micro-processor
   334 set :buildBlock:y :buildBlockFromCfg.1:y
 
   341 call *label12 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   342 label *label115
   343 set *tmp137 :buildBlock*retval
-    * label *label110
   344 set .processor *tmp137
   345 write .core *tmp137 ".core"
   346 write *tmp39 *tmp137 ".battery"
 
   359 setaddr :buildBlock*retaddr *label121 (h:*label121)
   360 call *label12 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   361 label *label121
-    * label *label116
   362 op add :buildBlockFromCfg.8:x .coreX -4
   363 set :buildBlock:block @air-factory
   364 set :buildBlock:x :buildBlockFromCfg.8:x
 
   371 call *label12 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   372 label *label127
   373 set *tmp145 :buildBlock*retval
-    * label *label122
   374 set .factory *tmp145
   375 write *tmp145 *tmp137 ".factory"
   376 op add :buildBlockFromCfg.9:y .coreY 1
 
   387 call *label12 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   388 label *label133
   389 set *tmp149 :buildBlock*retval
-    * label *label128
   390 write *tmp149 *tmp137 ".unloader2"
   391 op add :buildBlock:x .coreX -3
   392 set :buildBlock:block @overflow-gate
 
   398 setaddr :buildBlock*retaddr *label139 (h:*label139)
   399 call *label12 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   400 label *label139
-    * label *label134
   401 set :buildUnit:type @flare
   402 set :buildUnit:lead 0
   403 set :buildUnit:silicon 15
 
   425 setaddr :buildBlock*retaddr *label149 (h:*label149)
   426 call *label12 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   427 label *label149
-    * label *label144
   428 op add :buildBlock:x .coreX 3.5
   429 op add :buildBlock:y .coreY 0.5
   430 set :buildBlock:block @kiln
 
   436 setaddr :buildBlock*retaddr *label155 (h:*label155)
   437 call *label12 *invalid :buildBlock*retval (m:*label155) (h:*label155)
   438 label *label155
-    * label *label150
   439 write null *tmp137 ".kiln"
   440 set :buildBlock:block @junction
   441 set :buildBlock:x :buildBlockFromCfg.11:x
 
   446 setaddr :buildBlock*retaddr *label161 (h:*label161)
   447 call *label12 *invalid :buildBlock*retval (m:*label161) (h:*label161)
   448 label *label161
-    * label *label156
   449 op add :buildBlockFromCfg.14:x .coreX -3.5
   450 op add :buildBlock:y .coreY 4.5
   451 set :buildBlock:block @water-extractor
 
   457 setaddr :buildBlock*retaddr *label167 (h:*label167)
   458 call *label12 *invalid :buildBlock*retval (m:*label167) (h:*label167)
   459 label *label167
-    * label *label162
   460 set :buildBlock:block @steam-generator
   461 set :buildBlock:x :buildBlockFromCfg.14:x
   462 set :buildBlock:y :buildBlockFromCfg:y
 
   469 call *label12 *invalid :buildBlock*retval (m:*label173) (h:*label173)
   470 label *label173
   471 set *tmp175 :buildBlock*retval
-    * label *label168
   472 write *tmp175 *tmp137 ".generator2"
   473 set :buildBlock:block @sorter
   474 set :buildBlock:x :buildBlockFromCfg.8:x
 
   481 setaddr :buildBlock*retaddr *label179 (h:*label179)
   482 call *label12 *invalid :buildBlock*retval (m:*label179) (h:*label179)
   483 label *label179
-    * label *label174
   484 label *label180
   485 setaddr :supplyBase*retaddr *label183 (h:*label183)
   486 call *label9 *invalid :supplyBase*retval (m:*label183) (h:*label183)

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   571 label *label5
   572 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp211 0
   573 jump *label220 notEqual *tmp211 false
-    * print "[salmon]"
-    * print "Cannot locate "
+  574 print "[salmon]Cannot locate "
   575 print :locateOre:ore
   576 printflush message1
   577 stop
 
   946 set :buildBlockAt*retval null
   947 return :buildBlockAt*retaddr
   948 label *label341
-    * print "[salmon]"
-    * print "Cannot build at ("
-    * print :buildBlockAt:x
-    * print ", "
-    * print :buildBlockAt:y
-    * print "), tile already contains "
+  949 print "[salmon]Cannot build at ({0}, {0}), tile already contains "
+  950 format :buildBlockAt:x
+  951 format :buildBlockAt:y
   952 print :buildBlockAt:building
   953 printflush message1
   954 stop

Final code before resolving virtual instructions:

    0:  jump *label479 always 0 0                                    CoreBuilder.mnd: var
    1:  draw triangle message1 processor1 processor2 .battery .coppe ...
    2:  draw triangle .coreX .coreY .display .factory .flares .gener ...
    3:  draw triangle .graphiteTarget .leadTarget .mainUnit .metagla ...
    4:  draw triangle .powerTarget .press .processor .siliconTarget  ...
    5:  draw triangle .titaniumTrigger .titanium_drill .unloader1 :b ...
    6:  draw triangle :buildBlock:graphite :buildBlock:lead :buildBl ...
    7:  draw triangle :buildBlock:x :buildBlock:y :buildBlockAt:bloc ...
    8:  draw triangle :buildBlockAt:skipError :buildBlockAt:type :bu ...
    9:  draw triangle :buildBlockFromCfg.4:x :buildBlockFromCfg.8:x  ...
   10:  draw triangle :buildBlockFromCfg.9:y :buildBlockFromCfg:y :b ...
   11:  draw triangle :buildTitaniumDrillCfg:ax :buildTitaniumDrillC ...
   12:  draw triangle :buildTitaniumDrillCfg:minimum :buildTitaniumD ...
   13:  draw triangle :checkOre.2:count :checkOre.1:count :checkOre. ...
   14:  draw triangle :checkOre.3:floor :checkOre:floor :checkOre.1: ...
   15:  draw triangle :depositItems:item :fetchBlock:block :fetchBlo ...
   16:  draw triangle :findUnits:type :locateOre:ore :locateOre:x :l ...
   17:  draw triangle :locateOreAway:x :locateOreAway:y :meetTarget: ...
   18:  draw triangle :meetTarget:factorySilicon :meetTarget:graphit ...
   19:  draw triangle :meetTarget:totalLead :meetTarget:totalSilicon ...
   20:  draw triangle :mineOre:ore :mineOre:x :mineOre:y :moveTo:rad ...
   21:  draw triangle :moveTo.1:y :moveTo:y :moveToBlock:block :move ...
   22:  draw triangle :supplyBase:coal :supplyBase:coal.1 :supplyBas ...
   23:  draw triangle :supplyBlock:missing :supplyBlock.2:missing :s ...
        label *label479                                              ...
   24:  set .press null                                              ...
   25:  set .generator null                                          ...
   26:  set .battery null                                            ...
   27:  set .smelter null                                            ...
   28:  set .titanium_drill null                                     ...
   29:  set .unloader1 null                                          ...
   30:  set .factory null                                            ...
        label *label15                                               CoreBuilder.mnd: do
   31:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
   32:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   33:  jump *label15 equal .core null                               CoreBuilder.mnd: do
   34:  set .mainUnit @unit                                          CoreBuilder.mnd: mainUnit = @unit;
   35:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   36:  set :findUnits:type @mono                                    CoreBuilder.mnd: findUnits(@mono, out monos);
   37:  setaddr :findUnits*retaddr *label18                          ...
   38:  call *label14 *invalid :findUnits*retval                     ...
        label *label18                                               ...
   39:  set .monos :findUnits:count                                  ...
   40:  set :findUnits:type @flare                                   CoreBuilder.mnd: findUnits(@flare, out flares);
   41:  setaddr :findUnits*retaddr *label19                          ...
   42:  call *label14 *invalid :findUnits*retval                     ...
        label *label19                                               ...
   43:  set .flares :findUnits:count                                 ...
   44:  set :findUnits:type @poly                                    CoreBuilder.mnd: findUnits(@poly, out polys);
   45:  setaddr :findUnits*retaddr *label20                          ...
   46:  call *label14 *invalid :findUnits*retval                     ...
        label *label20                                               ...
   47:  set .polys :findUnits:count                                  ...
   48:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   49:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   50:  set :buildBlock:block @graphite-press                        ...
   51:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   52:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   53:  set :buildBlock:copper 75                                    ...
   54:  set :buildBlock:lead 30                                      ...
   55:  set :buildBlock:graphite 0                                   ...
   56:  set :buildBlock:silicon 0                                    ...
   57:  set :buildBlock:titanium 0                                   ...
   58:  set :buildBlock:metaglass 0                                  ...
   59:  set :buildBlock:rotation 0                                   ...
   60:  set :buildBlock:config null                                  ...
   61:  setaddr :buildBlock*retaddr *label26                         ...
   62:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label26                                               ...
   63:  set *tmp35 :buildBlock*retval                                ...
   64:  set .press *tmp35                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   65:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   66:  set :buildBlock:block @battery                               ...
   67:  set :buildBlock:x .coreX                                     ...
   68:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   69:  set :buildBlock:copper 5                                     ...
   70:  set :buildBlock:lead 20                                      ...
   71:  setaddr :buildBlock*retaddr *label32                         ...
   72:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label32                                               ...
   73:  set *tmp39 :buildBlock*retval                                ...
   74:  set .battery *tmp39                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   75:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   76:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   77:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   78:  setaddr :buildBlock*retaddr *label38                         ...
   79:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label38                                               ...
   80:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   81:  set :buildBlock:block @combustion-generator                  ...
   82:  set :buildBlock:x .coreX                                     ...
   83:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   84:  set :buildBlock:copper 25                                    ...
   85:  set :buildBlock:lead 15                                      ...
   86:  setaddr :buildBlock*retaddr *label44                         ...
   87:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label44                                               ...
   88:  set *tmp47 :buildBlock*retval                                ...
   89:  set .generator *tmp47                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   90:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   91:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   92:  set :buildBlock:block @silicon-smelter                       ...
   93:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
   94:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   95:  set :buildBlock:copper 30                                    ...
   96:  set :buildBlock:lead 25                                      ...
   97:  setaddr :buildBlock*retaddr *label50                         ...
   98:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label50                                               ...
   99:  set *tmp51 :buildBlock*retval                                ...
  100:  set .smelter *tmp51                                          CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  101:  set :buildTitaniumDrillCfg:distance 32                       CoreBuilder.mnd: var distance = 32;
  102:  set :buildTitaniumDrillCfg:angle 0                           CoreBuilder.mnd: var angle = 0;
  103:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
  104:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: var minimum = 3;
        label *label53                                               CoreBuilder.mnd: while true do
  105:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  106:  set :meetTarget:copper 18                                    ...
  107:  set :meetTarget:lead 0                                       ...
  108:  set :meetTarget:graphite 10                                  ...
  109:  set :meetTarget:silicon 0                                    ...
  110:  set :meetTarget:titanium 0                                   ...
  111:  set :meetTarget:metaglass 0                                  ...
  112:  set :meetTarget:factoryLead 0                                ...
  113:  set :meetTarget:factorySilicon 0                             ...
  114:  setaddr :meetTarget*retaddr *label56                         ...
  115:  call *label10 *invalid :meetTarget*retval                    ...
        label *label56                                               ...
  116:  set :locateOreAway:distance :buildTitaniumDrillCfg:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  117:  set :locateOreAway:angle :buildTitaniumDrillCfg:angle        ...
        label *label58                                               CoreBuilder.mnd: while true do
  118:  set :locateOre:ore @titanium                                 CoreBuilder.mnd: locateOre(ore, out x, out y);
  119:  setaddr :locateOre*retaddr *label61                          ...
  120:  call *label5 *invalid :locateOre*retval                      ...
        label *label61                                               ...
  121:  set :locateOreAway:x :locateOre:x                            ...
  122:  set :locateOreAway:y :locateOre:y                            ...
  123:  op sub *tmp58 :locateOre:x .coreX                            CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then break; end;
  124:  op abs *tmp59 *tmp58 0                                       ...
  125:  op greaterThanEq *tmp60 *tmp59 10                            ...
  126:  op sub *tmp61 :locateOre:y .coreY                            ...
  127:  op abs *tmp62 *tmp61 0                                       ...
  128:  op greaterThanEq *tmp63 *tmp62 10                            ...
  129:  op or *tmp64 *tmp60 *tmp63                                   ...
  130:  jump *label60 notEqual *tmp64 false                          ...
  131:  op sin *tmp67 :locateOreAway:angle 0                         CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  132:  op mul *tmp68 *tmp67 :locateOreAway:distance                 ...
  133:  op add *tmp69 .coreX *tmp68                                  ...
  134:  op cos *tmp70 :locateOreAway:angle 0                         ...
  135:  op mul *tmp71 *tmp70 :locateOreAway:distance                 ...
  136:  op add *tmp72 .coreY *tmp71                                  ...
  137:  set :moveTo.1:x *tmp69                                       ...
  138:  set :moveTo.1:y *tmp72                                       ...
  139:  setaddr :moveTo.1*retaddr *label65                           ...
  140:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label65                                               ...
  141:  op add :locateOreAway:distance :locateOreAway:distance 4     CoreBuilder.mnd: distance += 4;
  142:  op add :locateOreAway:angle :locateOreAway:angle 45          CoreBuilder.mnd: angle += 45;
  143:  jump *label58 always 0 0                                     CoreBuilder.mnd: while true do
        label *label60                                               ...
  144:  set :buildTitaniumDrillCfg:distance :locateOreAway:distance  CoreBuilder.mnd: locateOreAway(@titanium, out x, out y, in out distance, in out angle);
  145:  set :buildTitaniumDrillCfg:angle :locateOreAway:angle        ...
  146:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  147:  set :moveTo.1:y :locateOreAway:y                             ...
  148:  setaddr :moveTo.1*retaddr *label66                           ...
  149:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label66                                               ...
  150:  set :buildTitaniumDrillCfg:ax :locateOreAway:x               CoreBuilder.mnd: var ax = x, ay = y;
  151:  set :buildTitaniumDrillCfg:ay :locateOreAway:y               ...
  152:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, dx = 0, dy = 0;
  153:  set :buildTitaniumDrillCfg:dx 0                              ...
  154:  set :buildTitaniumDrillCfg:dy 0                              ...
  155:  set :buildTitaniumDrillCfg:searches 0                        CoreBuilder.mnd: SearchLoop:
        label *label368                                              ...
  156:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax : CoreBuilder.mnd: ax += dx;
  157:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay : CoreBuilder.mnd: ay += dy;
  158:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: best = 0;
  159:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  160:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  161:  jump *label399 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  162:  set :checkOre:count 1                                        ...
        label *label399                                              ...
  163:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  164:  set :checkOre.1:count :checkOre:count                        ...
  165:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  166:  jump *label402 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  167:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label402                                              ...
  168:  op add *tmp87 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  169:  set :checkOre.2:count :checkOre.1:count                      ...
  170:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  171:  jump *label405 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  172:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label405                                              ...
  173:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  174:  ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  175:  jump *label408 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  176:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label408                                              ...
  177:  jump *label413 lessThanEq :checkOre.3:count 0                CoreBuilder.mnd: if count > best then
  178:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  179:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  180:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  181:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label413                                              CoreBuilder.mnd: if count > best then
  182:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  183:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  184:  jump *label419 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  185:  set :checkOre:count 1                                        ...
        label *label419                                              ...
  186:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax 1             CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  187:  set :checkOre.1:count :checkOre:count                        ...
  188:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  189:  jump *label422 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  190:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label422                                              ...
  191:  op add *tmp87 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  192:  set :checkOre.2:count :checkOre.1:count                      ...
  193:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  194:  jump *label425 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  195:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label425                                              ...
  196:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  197:  ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  198:  jump *label428 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  199:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label428                                              ...
  200:  jump *label433 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  201:  set :buildTitaniumDrillCfg:dx 1                              CoreBuilder.mnd: dx = xx;
  202:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  203:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  204:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label433                                              CoreBuilder.mnd: if count > best then
  205:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  206:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  207:  jump *label439 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  208:  set :checkOre:count 1                                        ...
        label *label439                                              ...
  209:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  210:  set :checkOre.1:count :checkOre:count                        ...
  211:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  212:  jump *label442 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  213:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label442                                              ...
  214:  op add *tmp87 :buildTitaniumDrillCfg:ay 1                    CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  215:  set :checkOre.2:count :checkOre.1:count                      ...
  216:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  217:  jump *label445 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  218:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label445                                              ...
  219:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  220:  ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  221:  jump *label448 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  222:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label448                                              ...
  223:  jump *label453 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  224:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  225:  set :buildTitaniumDrillCfg:dy 1                              CoreBuilder.mnd: dy = yy;
  226:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  227:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label453                                              CoreBuilder.mnd: if count > best then
  228:  set :checkOre:count 0                                        CoreBuilder.mnd: checkOre(ax, ay, @ore-titanium, in out count);
  229:  ucontrol getBlock :buildTitaniumDrillCfg:ax :buildTitaniumDr CoreBuilder.mnd: getBlock(x, y, , out floor);
  230:  jump *label459 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == ore then count++; end;
  231:  set :checkOre:count 1                                        ...
        label *label459                                              ...
  232:  op add :checkOre.1:x :buildTitaniumDrillCfg:ax -1            CoreBuilder.mnd: checkOre(ax + xx, ay, @ore-titanium, in out count);
  233:  set :checkOre.1:count :checkOre:count                        ...
  234:  ucontrol getBlock :checkOre.1:x :buildTitaniumDrillCfg:ay 0  CoreBuilder.mnd: getBlock(x, y, , out floor);
  235:  jump *label462 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  236:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label462                                              ...
  237:  op add *tmp87 :buildTitaniumDrillCfg:ay -1                   CoreBuilder.mnd: checkOre(ax, ay + yy, @ore-titanium, in out count);
  238:  set :checkOre.2:count :checkOre.1:count                      ...
  239:  ucontrol getBlock :buildTitaniumDrillCfg:ax *tmp87 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  240:  jump *label465 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  241:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label465                                              ...
  242:  set :checkOre.3:count :checkOre.2:count                      CoreBuilder.mnd: checkOre(ax + xx, ay + yy, @ore-titanium, in out count);
  243:  ucontrol getBlock :checkOre.1:x *tmp87 0 0 :checkOre.3:floor CoreBuilder.mnd: getBlock(x, y, , out floor);
  244:  jump *label468 notEqual :checkOre.3:floor @ore-titanium      CoreBuilder.mnd: if floor == ore then count++; end;
  245:  op add :checkOre.3:count :checkOre.2:count 1                 ...
        label *label468                                              ...
  246:  jump *label473 lessThanEq :checkOre.3:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  247:  set :buildTitaniumDrillCfg:dx -1                             CoreBuilder.mnd: dx = xx;
  248:  set :buildTitaniumDrillCfg:dy -1                             CoreBuilder.mnd: dy = yy;
  249:  set :buildTitaniumDrillCfg:best :checkOre.3:count            CoreBuilder.mnd: best = count;
  250:  jump *label69 greaterThanEq :checkOre.3:count 4              CoreBuilder.mnd: if count >= 4 then break SearchLoop; end;
        label *label473                                              CoreBuilder.mnd: if count > best then
  251:  op add :buildTitaniumDrillCfg:searches :buildTitaniumDrillCf CoreBuilder.mnd: SearchLoop:
  252:  jump *label368 lessThan :buildTitaniumDrillCfg:searches 5    ...
        label *label69                                               ...
  253:  jump *label93 lessThanEq :buildTitaniumDrillCfg:best :buildT CoreBuilder.mnd: if best > minimum then
  254:  op div *tmp108 :buildTitaniumDrillCfg:dx 2                   CoreBuilder.mnd: ax = ax + dx / 2;
  255:  op add :buildTitaniumDrillCfg:ax :buildTitaniumDrillCfg:ax * ...
  256:  op div *tmp110 :buildTitaniumDrillCfg:dy 2                   CoreBuilder.mnd: ay = ay + dy / 2;
  257:  op add :buildTitaniumDrillCfg:ay :buildTitaniumDrillCfg:ay * ...
  258:  op sub *tmp112 :locateOreAway:x .coreX                       CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
  259:  op abs *tmp113 *tmp112 0                                     ...
  260:  op greaterThanEq *tmp114 *tmp113 10                          ...
  261:  op sub *tmp115 :locateOreAway:y .coreY                       ...
  262:  op abs *tmp116 *tmp115 0                                     ...
  263:  op greaterThanEq *tmp117 *tmp116 10                          ...
  264:  op or *tmp118 *tmp114 *tmp117                                ...
  265:  jump *label95 equal *tmp118 false                            ...
  266:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, ax, ay, null, 0, true);
  267:  set :buildBlockAt:x :buildTitaniumDrillCfg:ax                ...
  268:  set :buildBlockAt:y :buildTitaniumDrillCfg:ay                ...
  269:  set :buildBlockAt:rotation null                              ...
  270:  set :buildBlockAt:config 0                                   ...
  271:  set :buildBlockAt:skipError true                             ...
  272:  setaddr :buildBlockAt*retaddr *label97                       ...
  273:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label97                                               ...
  274:  jump *label98 equal :buildBlockAt*retval null                CoreBuilder.mnd: if result != null then return result; end;
  275:  set *tmp56 :buildBlockAt*retval                              ...
  276:  jump *label52 always 0 0                                     ...
        label *label98                                               ...
  277:  ucontrol build :locateOreAway:x :locateOreAway:y @conveyor 0 CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
  278:  jump *label96 always 0 0                                     CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label95                                               ...
  279:  set :buildTitaniumDrillCfg:attempts 1000                     CoreBuilder.mnd: attempts = 1000;
  280:  set :buildTitaniumDrillCfg:minimum 3                         CoreBuilder.mnd: minimum = 3;
        label *label96                                               CoreBuilder.mnd: if abs(x - coreX) >= 10 or abs(y - coreY) >= 10 then
        label *label93                                               CoreBuilder.mnd: if best > minimum then
  281:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  282:  jump *label53 lessThanEq :buildTitaniumDrillCfg:attempts 5   ...
  283:  op sin *tmp125 :locateOreAway:angle 0                        CoreBuilder.mnd: moveTo(coreX + sin(angle) * distance, coreY + cos(angle) * distance);
  284:  op mul *tmp126 *tmp125 :locateOreAway:distance               ...
  285:  op add *tmp127 .coreX *tmp126                                ...
  286:  op cos *tmp128 :locateOreAway:angle 0                        ...
  287:  op mul *tmp129 *tmp128 :locateOreAway:distance               ...
  288:  op add *tmp130 .coreY *tmp129                                ...
  289:  set :moveTo.1:x *tmp127                                      ...
  290:  set :moveTo.1:y *tmp130                                      ...
  291:  setaddr :moveTo.1*retaddr *label103                          ...
  292:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label103                                              ...
  293:  op add :buildTitaniumDrillCfg:distance :locateOreAway:distan CoreBuilder.mnd: distance += 4;
  294:  op add :buildTitaniumDrillCfg:angle :locateOreAway:angle 45  CoreBuilder.mnd: angle += 45;
  295:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  296:  op sub *tmp131 :buildTitaniumDrillCfg:minimum 1              CoreBuilder.mnd: minimum = max(minimum - 1, 1);
  297:  op max :buildTitaniumDrillCfg:minimum *tmp131 1              ...
  298:  jump *label53 always 0 0                                     CoreBuilder.mnd: while true do
        label *label52                                               CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEU_DRILL);
  299:  set .titanium_drill *tmp56                                   CoreBuilder.mnd: titanium_drill = buildTitaniumDrill();
  300:  op add :buildBlock:y .coreY 2                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  301:  set :buildBlock:block @unloader                              ...
  302:  set :buildBlock:x .coreX                                     ...
  303:  set :buildBlock:copper 0                                     ...
  304:  set :buildBlock:lead 0                                       ...
  305:  set :buildBlock:silicon 30                                   ...
  306:  set :buildBlock:titanium 25                                  ...
  307:  setaddr :buildBlock*retaddr *label109                        ...
  308:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label109                                              ...
  309:  set .unloader1 :buildBlock*retval                            ...
  310:  op add :buildBlock:x .coreX 1                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  311:  set :buildBlock:block @micro-processor                       ...
  312:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  313:  set :buildBlock:copper 90                                    ...
  314:  set :buildBlock:lead 50                                      ...
  315:  set :buildBlock:silicon 50                                   ...
  316:  set :buildBlock:titanium 0                                   ...
  317:  setaddr :buildBlock*retaddr *label115                        ...
  318:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  319:  call *label12 *invalid :buildBlock*retval                    ...
        label *label115                                              ...
  320:  set *tmp137 :buildBlock*retval                               ...
  321:  set .processor *tmp137                                       CoreBuilder.mnd: processor = buildBlockFromCfg(ref PROCESSOR);
  322:  write .core *tmp137 ".core"                                  CoreBuilder.mnd: processor.core = core;
  323:  write *tmp39 *tmp137 ".battery"                              CoreBuilder.mnd: processor.battery = battery;
  324:  write *tmp47 *tmp137 ".generator"                            CoreBuilder.mnd: processor.generator = generator;
  325:  write *tmp51 *tmp137 ".smelter"                              CoreBuilder.mnd: processor.smelter = smelter;
  326:  write *tmp35 *tmp137 ".press"                                CoreBuilder.mnd: processor.press = press;
  327:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  328:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  329:  set :buildBlock:block @power-node                            ...
  330:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  331:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  332:  set :buildBlock:copper 2                                     ...
  333:  set :buildBlock:lead 6                                       ...
  334:  set :buildBlock:silicon 0                                    ...
  335:  set :buildBlock:config null                                  ...
  336:  setaddr :buildBlock*retaddr *label121                        ...
  337:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label121                                              ...
  338:  op add :buildBlockFromCfg.8:x .coreX -4                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  339:  set :buildBlock:block @air-factory                           ...
  340:  set :buildBlock:x :buildBlockFromCfg.8:x                     ...
  341:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  342:  set :buildBlock:copper 60                                    ...
  343:  set :buildBlock:lead 70                                      ...
  344:  set :buildBlock:rotation 3                                   ...
  345:  set :buildBlock:config @mono                                 ...
  346:  setaddr :buildBlock*retaddr *label127                        ...
  347:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  348:  set *tmp145 :buildBlock*retval                               ...
  349:  set .factory *tmp145                                         CoreBuilder.mnd: factory = buildBlockFromCfg(ref AIR_FACTORY);
  350:  write *tmp145 *tmp137 ".factory"                             CoreBuilder.mnd: processor.factory = factory;
  351:  op add :buildBlockFromCfg.9:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  352:  set :buildBlock:block @unloader                              ...
  353:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  354:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  355:  set :buildBlock:copper 0                                     ...
  356:  set :buildBlock:lead 0                                       ...
  357:  set :buildBlock:silicon 30                                   ...
  358:  set :buildBlock:titanium 25                                  ...
  359:  set :buildBlock:rotation 0                                   ...
  360:  set :buildBlock:config null                                  ...
  361:  setaddr :buildBlock*retaddr *label133                        ...
  362:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  363:  set *tmp149 :buildBlock*retval                               ...
  364:  write *tmp149 *tmp137 ".unloader2"                           CoreBuilder.mnd: processor.unloader2 = unloader2;
  365:  op add :buildBlock:x .coreX -3                               CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  366:  set :buildBlock:block @overflow-gate                         ...
  367:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  368:  set :buildBlock:copper 4                                     ...
  369:  set :buildBlock:lead 2                                       ...
  370:  set :buildBlock:silicon 0                                    ...
  371:  set :buildBlock:titanium 0                                   ...
  372:  setaddr :buildBlock*retaddr *label139                        ...
  373:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  374:  set :buildUnit:type @flare                                   CoreBuilder.mnd: buildUnit(@flare, 0, 15, in out flares);
  375:  set :buildUnit:lead 0                                        ...
  376:  set :buildUnit:silicon 15                                    ...
  377:  set :buildUnit:count .flares                                 ...
  378:  setaddr :buildUnit*retaddr *label141                         ...
  379:  call *label13 *invalid :buildUnit*retval                     ...
        label *label141                                              ...
  380:  set .flares :buildUnit:count                                 ...
  381:  set :buildUnit:type @mono                                    CoreBuilder.mnd: buildUnit(@mono, 15, 30, in out monos);
  382:  set :buildUnit:lead 15                                       ...
  383:  set :buildUnit:silicon 30                                    ...
  384:  set :buildUnit:count .monos                                  ...
  385:  setaddr :buildUnit*retaddr *label143                         ...
  386:  call *label13 *invalid :buildUnit*retval                     ...
        label *label143                                              ...
  387:  set .monos :buildUnit:count                                  ...
  388:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  389:  set :buildBlock:y .coreY                                     ...
  390:  set :buildBlock:block @unloader                              ...
  391:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  392:  set :buildBlock:copper 0                                     ...
  393:  set :buildBlock:lead 0                                       ...
  394:  set :buildBlock:silicon 30                                   ...
  395:  set :buildBlock:titanium 25                                  ...
  396:  setaddr :buildBlock*retaddr *label149                        ...
  397:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label149                                              ...
  398:  op add :buildBlock:x .coreX 3.5                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  399:  op add :buildBlock:y .coreY 0.5                              ...
  400:  set :buildBlock:block @kiln                                  ...
  401:  set :buildBlock:copper 60                                    ...
  402:  set :buildBlock:lead 30                                      ...
  403:  set :buildBlock:graphite 30                                  ...
  404:  set :buildBlock:silicon 0                                    ...
  405:  set :buildBlock:titanium 0                                   ...
  406:  setaddr :buildBlock*retaddr *label155                        ...
  407:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label155                                              ...
  408:  write null *tmp137 ".kiln"                                   CoreBuilder.mnd: processor.kiln = kiln;
  409:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  410:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  411:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  412:  set :buildBlock:copper 3                                     ...
  413:  set :buildBlock:lead 0                                       ...
  414:  set :buildBlock:graphite 0                                   ...
  415:  setaddr :buildBlock*retaddr *label161                        ...
  416:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label161                                              ...
  417:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  418:  op add :buildBlock:y .coreY 4.5                              ...
  419:  set :buildBlock:block @water-extractor                       ...
  420:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  421:  set :buildBlock:copper 30                                    ...
  422:  set :buildBlock:lead 30                                      ...
  423:  set :buildBlock:graphite 30                                  ...
  424:  set :buildBlock:metaglass 30                                 ...
  425:  setaddr :buildBlock*retaddr *label167                        ...
  426:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label167                                              ...
  427:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  428:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  429:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  430:  set :buildBlock:copper 35                                    ...
  431:  set :buildBlock:lead 40                                      ...
  432:  set :buildBlock:graphite 25                                  ...
  433:  set :buildBlock:silicon 30                                   ...
  434:  set :buildBlock:metaglass 0                                  ...
  435:  setaddr :buildBlock*retaddr *label173                        ...
  436:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label173                                              ...
  437:  set *tmp175 :buildBlock*retval                               ...
  438:  write *tmp175 *tmp137 ".generator2"                          CoreBuilder.mnd: processor.generator2 = generator2;
  439:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  440:  set :buildBlock:x :buildBlockFromCfg.8:x                     ...
  441:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  442:  set :buildBlock:copper 2                                     ...
  443:  set :buildBlock:lead 2                                       ...
  444:  set :buildBlock:graphite 0                                   ...
  445:  set :buildBlock:silicon 0                                    ...
  446:  set :buildBlock:config @coal                                 ...
  447:  setaddr :buildBlock*retaddr *label179                        ...
  448:  call *label12 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label179                                              ...
        label *label180                                              CoreBuilder.mnd: while true do
  449:  setaddr :supplyBase*retaddr *label183                        CoreBuilder.mnd: supplyBase();
  450:  call *label9 *invalid :supplyBase*retval                     ...
        label *label183                                              ...
  451:  jump *label180 always 0 0                                    CoreBuilder.mnd: while true do
        label *label0                                                CoreBuilder.mnd: void moveTo(x, y, radius)
  452:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  453:  op sub *tmp185 :moveTo:radius 0.5                            CoreBuilder.mnd: while !within(x, y, radius) do
  454:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183 0 ...
  455:  jump *label189 notEqual *tmp183 false                        ...
        label *label395                                              ...
  456:  ucontrol approach :moveTo:x :moveTo:y *tmp185 0 0            CoreBuilder.mnd: approach(x, y, radius - 0.5);
  457:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp183 0 CoreBuilder.mnd: while !within(x, y, radius) do
  458:  jump *label395 equal *tmp183 false                           ...
        label *label189                                              ...
  459:  return :moveTo*retaddr                                       CoreBuilder.mnd: void moveTo(x, y, radius)
        label *label1                                                CoreBuilder.mnd: void moveTo(x, y)
  460:  set :moveTo:x :moveTo.1:x                                    CoreBuilder.mnd: moveTo(x, y, REGULAR_RADIUS);
  461:  set :moveTo:y :moveTo.1:y                                    ...
  462:  set :moveTo:radius 5                                         ...
  463:  setaddr :moveTo*retaddr *label191                            ...
  464:  call *label0 *invalid :moveTo*retval                         ...
        label *label191                                              ...
  465:  return :moveTo.1*retaddr                                     CoreBuilder.mnd: void moveTo(x, y)
        label *label2                                                CoreBuilder.mnd: void moveToEmpty(x, y)
  466:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label194                                              CoreBuilder.mnd: do
  467:  sensor *tmp188 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  468:  jump *label197 equal *tmp188 null                            ...
  469:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label197                                              ...
  470:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 4.5 0 0      CoreBuilder.mnd: approach(x, y, REGULAR_RADIUS - 0.5);
  471:  ucontrol within :moveToEmpty:x :moveToEmpty:y 5 *tmp191 0    CoreBuilder.mnd: while !within(x, y, REGULAR_RADIUS);
  472:  jump *label194 equal *tmp191 false                           CoreBuilder.mnd: do
  473:  sensor *tmp193 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  474:  jump *label201 equal *tmp193 null                            ...
        label *label394                                              ...
  475:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  476:  sensor *tmp193 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  477:  jump *label394 notEqual *tmp193 null                         ...
        label *label201                                              ...
  478:  return :moveToEmpty*retaddr                                  CoreBuilder.mnd: void moveToEmpty(x, y)
        label *label3                                                CoreBuilder.mnd: void moveToBlock(block, radius)
  479:  sensor *tmp195 :moveToBlock:block @x                         CoreBuilder.mnd: moveTo(block.@x, block.@y, radius);
  480:  sensor *tmp196 :moveToBlock:block @y                         ...
  481:  set :moveTo:x *tmp195                                        ...
  482:  set :moveTo:y *tmp196                                        ...
  483:  set :moveTo:radius :moveToBlock:radius                       ...
  484:  setaddr :moveTo*retaddr *label203                            ...
  485:  call *label0 *invalid :moveTo*retval                         ...
        label *label203                                              ...
  486:  return :moveToBlock*retaddr                                  CoreBuilder.mnd: void moveToBlock(block, radius)
        label *label4                                                CoreBuilder.mnd: void depositItems(block, item, fromMining)
  487:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  488:  sensor *tmp197 @unit @firstItem                              CoreBuilder.mnd: if @unit.@firstItem == item then
  489:  jump *label206 notEqual *tmp197 :depositItems:item           ...
  490:  set *tmp202 5                                                CoreBuilder.mnd: moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
  491:  op equal *tmp200 :depositItems:block .core                   ...
  492:  op land *tmp201 :depositItems:fromMining *tmp200             ...
  493:  jump *label209 equal *tmp201 false                           ...
  494:  set *tmp202 7                                                ...
        label *label209                                              ...
  495:  set :moveToBlock:block :depositItems:block                   ...
  496:  set :moveToBlock:radius *tmp202                              ...
  497:  setaddr :moveToBlock*retaddr *label210                       ...
  498:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label210                                              ...
  499:  sensor :depositItems:cap :depositItems:block @itemCapacity   CoreBuilder.mnd: var cap = block.@itemCapacity;
        label *label211                                              CoreBuilder.mnd: do
  500:  ucontrol itemDrop :depositItems:block 30 0 0 0               CoreBuilder.mnd: itemDrop(block, capacity);
  501:  sensor *tmp204 :depositItems:block :depositItems:item        CoreBuilder.mnd: if block.sensor(item) >= cap then break; end;
  502:  jump *label207 greaterThanEq *tmp204 :depositItems:cap       ...
  503:  sensor *tmp207 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null;
  504:  jump *label211 notEqual *tmp207 null                         CoreBuilder.mnd: do
  505:  jump *label207 always 0 0                                    CoreBuilder.mnd: if @unit.@firstItem == item then
        label *label206                                              ...
  506:  sensor *tmp209 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  507:  jump *label218 equal *tmp209 null                            ...
        label *label396                                              ...
  508:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  509:  sensor *tmp209 @unit @firstItem                              CoreBuilder.mnd: while @unit.@firstItem != null do
  510:  jump *label396 notEqual *tmp209 null                         ...
        label *label218                                              ...
        label *label207                                              CoreBuilder.mnd: if @unit.@firstItem == item then
  511:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = 0;
  512:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = null;
  513:  return :depositItems*retaddr                                 CoreBuilder.mnd: void depositItems(block, item, fromMining)
        label *label5                                                CoreBuilder.mnd: void locateOre(ore, out x, out y)
  514:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  515:  jump *label220 notEqual *tmp211 false                        ...
  516:  print "[salmon]Cannot locate "                               CoreBuilder.mnd: print("[salmon]", text);
  517:  print :locateOre:ore                                         ...
  518:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  519:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label220                                              CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
  520:  return :locateOre*retaddr                                    CoreBuilder.mnd: void locateOre(ore, out x, out y)
        label *label6                                                CoreBuilder.mnd: void mineOre(ore, amount, block)
  521:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = amount;
  522:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = ore;
  523:  set :locateOre:ore :mineOre:ore                              CoreBuilder.mnd: locateOre(ore, out x, out y);
  524:  setaddr :locateOre*retaddr *label224                         ...
  525:  call *label5 *invalid :locateOre*retval                      ...
        label *label224                                              ...
  526:  set :mineOre:x :locateOre:x                                  ...
  527:  set :mineOre:y :locateOre:y                                  ...
  528:  set :moveToEmpty:x :locateOre:x                              CoreBuilder.mnd: moveToEmpty(x, y);
  529:  set :moveToEmpty:y :locateOre:y                              ...
  530:  setaddr :moveToEmpty*retaddr *label225                       ...
  531:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label225                                              ...
  532:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label227                                              CoreBuilder.mnd: do
  533:  sensor :mineOre:item @unit @firstItem                        CoreBuilder.mnd: var item = @unit.@firstItem;
  534:  op notEqual *tmp216 :mineOre:item null                       CoreBuilder.mnd: if item != null && item != ore then break; end;
  535:  op notEqual *tmp217 :mineOre:item :mineOre:ore               ...
  536:  op land *tmp218 *tmp216 *tmp217                              ...
  537:  jump *label229 notEqual *tmp218 false                        ...
  538:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    CoreBuilder.mnd: mine(x, y);
  539:  sensor *tmp220 @unit @totalItems                             CoreBuilder.mnd: while @unit.@totalItems < amount;
  540:  jump *label227 lessThan *tmp220 :mineOre:amount              CoreBuilder.mnd: do
        label *label229                                              ...
  541:  ucontrol unbind 0 0 0 0 0                                    CoreBuilder.mnd: unbind();
  542:  set :depositItems:block :mineOre:block                       CoreBuilder.mnd: depositItems(block, ore, true);
  543:  set :depositItems:item :mineOre:ore                          ...
  544:  set :depositItems:fromMining true                            ...
  545:  setaddr :depositItems*retaddr *label232                      ...
  546:  call *label4 *invalid :depositItems*retval                   ...
        label *label232                                              ...
  547:  return :mineOre*retaddr                                      CoreBuilder.mnd: void mineOre(ore, amount, block)
        label *label7                                                CoreBuilder.mnd: void mineOre(ore)
  548:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  549:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  550:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  551:  set :mineOre:ore :mineOre.1:ore                              CoreBuilder.mnd: mineOre(ore, capacity, core);
  552:  set :mineOre:amount 30                                       ...
  553:  set :mineOre:block .core                                     ...
  554:  setaddr :mineOre*retaddr *label235                           ...
  555:  call *label6 *invalid :mineOre*retval                        ...
        label *label235                                              ...
  556:  return :mineOre.1*retaddr                                    CoreBuilder.mnd: void mineOre(ore)
        label *label8                                                CoreBuilder.mnd: void fetchBlock(block, item)
  557:  sensor *tmp223 :fetchBlock:block @itemCapacity               CoreBuilder.mnd: display.transportTarget = block.@itemCapacity;
  558:  write *tmp223 .display ".transportTarget"                    ...
  559:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  560:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  561:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  562:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  563:  sensor *tmp224 :fetchBlock:block @x                          CoreBuilder.mnd: moveToEmpty(block.@x, block.@y);
  564:  sensor *tmp225 :fetchBlock:block @y                          ...
  565:  set :moveToEmpty:x *tmp224                                   ...
  566:  set :moveToEmpty:y *tmp225                                   ...
  567:  setaddr :moveToEmpty*retaddr *label238                       ...
  568:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label238                                              ...
        label *label239                                              CoreBuilder.mnd: do
  569:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  CoreBuilder.mnd: itemTake(block, item, capacity);
  570:  sensor :fetchBlock:unitItem @unit @firstItem                 CoreBuilder.mnd: var unitItem = @unit.@firstItem;
  571:  op notEqual *tmp227 :fetchBlock:unitItem null                CoreBuilder.mnd: if unitItem != null and unitItem != item then
  572:  op notEqual *tmp228 :fetchBlock:unitItem :fetchBlock:item    ...
  573:  op land *tmp229 *tmp227 *tmp228                              ...
  574:  jump *label242 equal *tmp229 false                           ...
  575:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
        label *label242                                              CoreBuilder.mnd: if unitItem != null and unitItem != item then
  576:  sensor *tmp231 @unit :fetchBlock:item                        CoreBuilder.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  577:  op lessThan *tmp232 *tmp231 30                               ...
  578:  sensor *tmp233 :fetchBlock:block :fetchBlock:item            ...
  579:  op land *tmp234 *tmp232 *tmp233                              ...
  580:  jump *label239 notEqual *tmp234 false                        CoreBuilder.mnd: do
  581:  set :depositItems:block .core                                CoreBuilder.mnd: depositItems(core, item, false);
  582:  set :depositItems:item :fetchBlock:item                      ...
  583:  set :depositItems:fromMining false                           ...
  584:  setaddr :depositItems*retaddr *label244                      ...
  585:  call *label4 *invalid :depositItems*retval                   ...
        label *label244                                              ...
  586:  return :fetchBlock*retaddr                                   CoreBuilder.mnd: void fetchBlock(block, item)
        label *label9                                                CoreBuilder.mnd: void supplyBase()
  587:  set :supplyBase:supplied false                               CoreBuilder.mnd: var supplied = false;
  588:  jump *label246 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  589:  sensor *tmp237 .core @graphite                               CoreBuilder.mnd: if core.@graphite < graphiteTarget then
  590:  jump *label248 greaterThanEq *tmp237 .graphiteTarget         ...
  591:  sensor *tmp240 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  592:  jump *label250 greaterThanEq *tmp240 5                       ...
  593:  write "Goal 1: Meeting the graphite target" .display ".statu CoreBuilder.mnd: display.status1 = text;
  594:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  595:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  596:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  597:  sensor *tmp243 .press @itemCapacity                          CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  598:  sensor *tmp244 .press @coal                                  ...
  599:  op sub :supplyBlock:missing *tmp243 *tmp244                  ...
  600:  jump *label255 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  601:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  602:  set :mineOre:amount :supplyBlock:missing                     ...
  603:  set :mineOre:block .press                                    ...
  604:  setaddr :mineOre*retaddr *label257                           ...
  605:  call *label6 *invalid :mineOre*retval                        ...
        label *label257                                              ...
        label *label255                                              CoreBuilder.mnd: if missing > 0 then
  606:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label250                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label248                                              CoreBuilder.mnd: if core.@graphite < graphiteTarget then
  607:  sensor *tmp248 .core @silicon                                CoreBuilder.mnd: if core.@silicon < siliconTarget then
  608:  jump *label258 greaterThanEq *tmp248 .siliconTarget          ...
  609:  sensor *tmp251 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  610:  jump *label260 greaterThanEq *tmp251 5                       ...
  611:  write "Goal 2: Meeting the silicon target (coal)" .display " CoreBuilder.mnd: display.status1 = text;
  612:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  613:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  614:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  615:  sensor *tmp254 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  616:  sensor *tmp255 .smelter @coal                                ...
  617:  op sub :supplyBlock.1:missing *tmp254 *tmp255                ...
  618:  jump *label265 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  619:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  620:  set :mineOre:amount :supplyBlock.1:missing                   ...
  621:  set :mineOre:block .smelter                                  ...
  622:  setaddr :mineOre*retaddr *label267                           ...
  623:  call *label6 *invalid :mineOre*retval                        ...
        label *label267                                              ...
        label *label265                                              CoreBuilder.mnd: if missing > 0 then
  624:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
  625:  jump *label261 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label260                                              ...
  626:  sensor *tmp259 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  627:  jump *label268 greaterThanEq *tmp259 5                       ...
  628:  write "Goal 3: Meeting the silicon target (sand)" .display " CoreBuilder.mnd: display.status1 = text;
  629:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  630:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  631:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  632:  sensor *tmp262 .smelter @itemCapacity                        CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  633:  sensor *tmp263 .smelter @sand                                ...
  634:  op sub :supplyBlock.2:missing *tmp262 *tmp263                ...
  635:  jump *label273 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  636:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  637:  set :mineOre:amount :supplyBlock.2:missing                   ...
  638:  set :mineOre:block .smelter                                  ...
  639:  setaddr :mineOre*retaddr *label275                           ...
  640:  call *label6 *invalid :mineOre*retval                        ...
        label *label275                                              ...
        label *label273                                              CoreBuilder.mnd: if missing > 0 then
  641:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label268                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label261                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label258                                              CoreBuilder.mnd: if core.@silicon < siliconTarget then
  642:  sensor *tmp267 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  643:  jump *label276 greaterThanEq *tmp267 .powerTarget            ...
  644:  sensor *tmp270 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 4 then
  645:  jump *label278 greaterThanEq *tmp270 4                       ...
  646:  write "Goal 4: Supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  647:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  648:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  649:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  650:  sensor *tmp273 .generator @itemCapacity                      CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  651:  sensor *tmp274 .generator @coal                              ...
  652:  op sub :supplyBlock.3:missing *tmp273 *tmp274                ...
  653:  jump *label283 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  654:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  655:  set :mineOre:amount :supplyBlock.3:missing                   ...
  656:  set :mineOre:block .generator                                ...
  657:  setaddr :mineOre*retaddr *label285                           ...
  658:  call *label6 *invalid :mineOre*retval                        ...
        label *label285                                              ...
        label *label283                                              CoreBuilder.mnd: if missing > 0 then
  659:  set :supplyBase:supplied true                                CoreBuilder.mnd: supplied = true;
        label *label278                                              CoreBuilder.mnd: if generator.@coal < 4 then
        label *label276                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label246                                              CoreBuilder.mnd: if unloader1 == null then
  660:  sensor *tmp278 .titanium_drill @titanium                     CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  661:  jump *label286 greaterThanEq *tmp278 .titaniumTrigger        ...
  662:  jump *label287 notEqual :supplyBase:supplied false           CoreBuilder.mnd: if !supplied then
  663:  sensor *tmp283 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  664:  jump *label290 greaterThanEq *tmp283 .powerTarget            ...
  665:  write "Goal 5: Supplying generator (5)" .display ".status1"  CoreBuilder.mnd: display.status1 = text;
  666:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  667:  setaddr :mineOre.1*retaddr *label293                         ...
  668:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label293                                              ...
  669:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label290                                              ...
  670:  sensor *tmp286 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < siliconTarget then
  671:  jump *label294 greaterThanEq *tmp286 .siliconTarget          ...
  672:  write "Goal 6: Meeting the silicon target" .display ".status CoreBuilder.mnd: display.status1 = text;
  673:  sensor :supplyBase:coal .core @coal                          CoreBuilder.mnd: var coal = core.@coal;
  674:  sensor :supplyBase:sand .core @sand                          CoreBuilder.mnd: var sand = core.@sand;
  675:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  676:  jump *label298 greaterThanEq :supplyBase:coal :supplyBase:sa ...
  677:  set :mineOre.1:ore @coal                                     ...
        label *label298                                              ...
  678:  setaddr :mineOre.1*retaddr *label299                         CoreBuilder.mnd: mineOre(ore);
  679:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label299                                              ...
  680:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < siliconTarget then
        label *label294                                              ...
  681:  sensor *tmp293 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
  682:  jump *label300 greaterThanEq *tmp293 .copperTarget           ...
  683:  write "Goal 7: Meeting the copper target" .display ".status1 CoreBuilder.mnd: display.status1 = text;
  684:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  685:  setaddr :mineOre.1*retaddr *label303                         ...
  686:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label303                                              ...
  687:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < copperTarget then
        label *label300                                              ...
  688:  sensor *tmp296 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
  689:  jump *label304 greaterThanEq *tmp296 .leadTarget             ...
  690:  write "Goal 8: Meeting the lead target" .display ".status1"  CoreBuilder.mnd: display.status1 = text;
  691:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  692:  setaddr :mineOre.1*retaddr *label307                         ...
  693:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label307                                              ...
  694:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
        label *label304                                              ...
  695:  sensor *tmp299 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
  696:  jump *label308 greaterThanEq *tmp299 .metaglassTarget        ...
  697:  write "Goal 9: Meeting the metaglass target" .display ".stat CoreBuilder.mnd: display.status1 = text;
  698:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  699:  setaddr :mineOre.1*retaddr *label311                         ...
  700:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label311                                              ...
  701:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
        label *label308                                              ...
  702:  write "Goal 10: Supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  703:  sensor :supplyBase:coal.1 .core @coal                        CoreBuilder.mnd: var coal = core.@coal;
  704:  sensor :supplyBase:sand.1 .core @sand                        CoreBuilder.mnd: var sand = core.@sand;
  705:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  706:  jump *label314 greaterThan :supplyBase:coal.1 :supplyBase:sa ...
  707:  set :mineOre.1:ore @coal                                     ...
        label *label314                                              ...
  708:  setaddr :mineOre.1*retaddr *label315                         CoreBuilder.mnd: mineOre(ore);
  709:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label315                                              ...
  710:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
        label *label286                                              ...
  711:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  712:  set :fetchBlock:block .titanium_drill                        CoreBuilder.mnd: fetchBlock(titanium_drill, @titanium);
  713:  set :fetchBlock:item @titanium                               ...
  714:  setaddr :fetchBlock*retaddr *label317                        ...
  715:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label317                                              ...
        label *label287                                              CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  716:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label10                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, factoryLead, factorySilicon)
  717:  op max :meetTarget:totalLead :meetTarget:lead :meetTarget:fa CoreBuilder.mnd: var totalLead = max(lead, factoryLead);
  718:  op max :meetTarget:totalSilicon :meetTarget:silicon :meetTar CoreBuilder.mnd: var totalSilicon = max(silicon, factorySilicon);
  719:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, totalLead, graphite, totalSilicon, titanium, metaglass do count += sign(t); end;
  720:  op sign *tmp309 :meetTarget:totalLead 0                      ...
  721:  op add :meetTarget:count :meetTarget:count *tmp309           ...
  722:  op sign *tmp309 :meetTarget:graphite 0                       ...
  723:  op add :meetTarget:count :meetTarget:count *tmp309           ...
  724:  op sign *tmp309 :meetTarget:totalSilicon 0                   ...
  725:  op add :meetTarget:count :meetTarget:count *tmp309           ...
  726:  op sign *tmp309 :meetTarget:titanium 0                       ...
  727:  op add :meetTarget:count :meetTarget:count *tmp309           ...
  728:  op sign *tmp309 :meetTarget:metaglass 0                      ...
  729:  op add :meetTarget:count :meetTarget:count *tmp309           ...
  730:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  731:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  732:  write :meetTarget:copper .display ".copperTarget"            CoreBuilder.mnd: display.copperTarget = copper;
  733:  write :meetTarget:totalLead .display ".leadTarget"           CoreBuilder.mnd: display.leadTarget = totalLead;
  734:  write :meetTarget:graphite .display ".graphiteTarget"        CoreBuilder.mnd: display.graphiteTarget = graphite;
  735:  write :meetTarget:totalSilicon .display ".siliconTarget"     CoreBuilder.mnd: display.siliconTarget = totalSilicon;
  736:  write :meetTarget:titanium .display ".titaniumTarget"        CoreBuilder.mnd: display.titaniumTarget = titanium;
  737:  write :meetTarget:metaglass .display ".metaglassTarget"      CoreBuilder.mnd: display.metaglassTarget = metaglass;
  738:  write .monos .display ".monos"                               CoreBuilder.mnd: display.monos = monos;
  739:  write .polys .display ".polys"                               CoreBuilder.mnd: display.polys = polys;
  740:  write .flares .display ".flares"                             CoreBuilder.mnd: display.flares = flares;
  741:  set .copperTarget :meetTarget:copper                         CoreBuilder.mnd: copperTarget = copper;
  742:  op mul *tmp310 .factory 10                                   CoreBuilder.mnd: leadTarget = lead + factory * 10;
  743:  op add .leadTarget :meetTarget:lead *tmp310                  ...
  744:  set .graphiteTarget :meetTarget:graphite                     CoreBuilder.mnd: graphiteTarget = graphite;
  745:  op add .siliconTarget :meetTarget:silicon *tmp310            CoreBuilder.mnd: siliconTarget = silicon + factory * 10;
  746:  set .titaniumTarget :meetTarget:titanium                     CoreBuilder.mnd: titaniumTarget = titanium;
  747:  set .metaglassTarget :meetTarget:metaglass                   CoreBuilder.mnd: metaglassTarget = metaglass;
  748:  op add *tmp314 :meetTarget:graphite 20                       CoreBuilder.mnd: processor.pressTarget = graphiteTarget + 20;
  749:  write *tmp314 .processor ".pressTarget"                      ...
  750:  op add *tmp315 .siliconTarget 20                             CoreBuilder.mnd: processor.smelterTarget = siliconTarget + 20;
  751:  write *tmp315 .processor ".smelterTarget"                    ...
  752:  op add *tmp316 :meetTarget:metaglass 20                      CoreBuilder.mnd: processor.kilnTarget = metaglassTarget + 20;
  753:  write *tmp316 .processor ".kilnTarget"                       ...
  754:  set .titaniumTrigger 100                                     CoreBuilder.mnd: titaniumTrigger = core.@titanium < titaniumTarget ? 7 : 100;
  755:  sensor *tmp317 .core @titanium                               ...
  756:  jump *label329 greaterThanEq *tmp317 :meetTarget:titanium    ...
  757:  set .titaniumTrigger 7                                       ...
        label *label329                                              ...
  758:  sensor *tmp320 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  759:  op lessThan *tmp321 *tmp320 :meetTarget:copper               ...
  760:  sensor *tmp322 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  761:  op lessThan *tmp323 *tmp322 .leadTarget                      ...
  762:  op or *tmp325 *tmp321 *tmp323                                ...
  763:  op notEqual *tmp324 *tmp325 false                            ...
  764:  sensor *tmp326 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  765:  op lessThan *tmp327 *tmp326 :meetTarget:graphite             ...
  766:  op or *tmp329 *tmp324 *tmp327                                ...
  767:  op notEqual *tmp328 *tmp329 false                            ...
  768:  sensor *tmp330 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  769:  op lessThan *tmp331 *tmp330 .siliconTarget                   ...
  770:  op or *tmp333 *tmp328 *tmp331                                ...
  771:  op notEqual *tmp332 *tmp333 false                            ...
  772:  sensor *tmp334 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  773:  op lessThan *tmp335 *tmp334 :meetTarget:titanium             ...
  774:  op or *tmp337 *tmp332 *tmp335                                ...
  775:  op notEqual *tmp336 *tmp337 false                            ...
  776:  sensor *tmp338 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  777:  op lessThan *tmp339 *tmp338 :meetTarget:metaglass            ...
  778:  op or *tmp341 *tmp336 *tmp339                                ...
  779:  op notEqual *tmp340 *tmp341 false                            ...
  780:  sensor *tmp342 .factory @lead                                CoreBuilder.mnd: || factory.@lead < factoryLead
  781:  op lessThan *tmp343 *tmp342 :meetTarget:factoryLead          ...
  782:  op or *tmp345 *tmp340 *tmp343                                ...
  783:  op notEqual *tmp344 *tmp345 false                            ...
  784:  sensor *tmp346 .factory @silicon                             CoreBuilder.mnd: || factory.@silicon < factorySilicon
  785:  op lessThan *tmp347 *tmp346 :meetTarget:factorySilicon       ...
  786:  op or *tmp349 *tmp344 *tmp347                                ...
  787:  jump *label332 equal *tmp349 false                           CoreBuilder.mnd: while core.@copper < copperTarget
        label *label397                                              ...
  788:  setaddr :supplyBase*retaddr *label333                        CoreBuilder.mnd: supplyBase();
  789:  call *label9 *invalid :supplyBase*retval                     ...
        label *label333                                              ...
  790:  sensor *tmp320 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  791:  op lessThan *tmp321 *tmp320 .copperTarget                    ...
  792:  sensor *tmp322 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  793:  op lessThan *tmp323 *tmp322 .leadTarget                      ...
  794:  op or *tmp325 *tmp321 *tmp323                                ...
  795:  op notEqual *tmp324 *tmp325 false                            ...
  796:  sensor *tmp326 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  797:  op lessThan *tmp327 *tmp326 .graphiteTarget                  ...
  798:  op or *tmp329 *tmp324 *tmp327                                ...
  799:  op notEqual *tmp328 *tmp329 false                            ...
  800:  sensor *tmp330 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  801:  op lessThan *tmp331 *tmp330 .siliconTarget                   ...
  802:  op or *tmp333 *tmp328 *tmp331                                ...
  803:  op notEqual *tmp332 *tmp333 false                            ...
  804:  sensor *tmp334 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  805:  op lessThan *tmp335 *tmp334 .titaniumTarget                  ...
  806:  op or *tmp337 *tmp332 *tmp335                                ...
  807:  op notEqual *tmp336 *tmp337 false                            ...
  808:  sensor *tmp338 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  809:  op lessThan *tmp339 *tmp338 .metaglassTarget                 ...
  810:  op or *tmp341 *tmp336 *tmp339                                ...
  811:  op notEqual *tmp340 *tmp341 false                            ...
  812:  sensor *tmp342 .factory @lead                                CoreBuilder.mnd: || factory.@lead < factoryLead
  813:  op lessThan *tmp343 *tmp342 :meetTarget:factoryLead          ...
  814:  op or *tmp345 *tmp340 *tmp343                                ...
  815:  op notEqual *tmp344 *tmp345 false                            ...
  816:  sensor *tmp346 .factory @silicon                             CoreBuilder.mnd: || factory.@silicon < factorySilicon
  817:  op lessThan *tmp347 *tmp346 :meetTarget:factorySilicon       ...
  818:  op or *tmp349 *tmp344 *tmp347                                ...
  819:  jump *label397 notEqual *tmp349 false                        CoreBuilder.mnd: while core.@copper < copperTarget
        label *label332                                              ...
  820:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, factoryLead, factorySilicon)
        label *label11                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  821:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  822:  set :moveTo.1:y :buildBlockAt:y                              ...
  823:  setaddr :moveTo.1*retaddr *label335                          ...
  824:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label335                                              ...
  825:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  826:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  827:  jump *label337 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  828:  jump *label339 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  829:  set :buildBlockAt*retval :buildBlockAt:building              ...
  830:  return :buildBlockAt*retaddr                                 ...
        label *label339                                              ...
  831:  jump *label341 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  832:  set :buildBlockAt*retval null                                ...
  833:  return :buildBlockAt*retaddr                                 ...
        label *label341                                              ...
  834:  print "[salmon]Cannot build at ({0}, {0}), tile already cont CoreBuilder.mnd: print("[salmon]", text);
  835:  format :buildBlockAt:x                                       ...
  836:  format :buildBlockAt:y                                       ...
  837:  print :buildBlockAt:building                                 ...
  838:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  839:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label337                                              CoreBuilder.mnd: if building != null then
  840:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  841:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label344                                              CoreBuilder.mnd: do
  842:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  843:  jump *label346 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  844:  jump *label344 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label346                                              ...
  845:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  846:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label12                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  847:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, 0, 0);
  848:  set :meetTarget:copper :buildBlock:copper                    ...
  849:  set :meetTarget:lead :buildBlock:lead                        ...
  850:  set :meetTarget:graphite :buildBlock:graphite                ...
  851:  set :meetTarget:silicon :buildBlock:silicon                  ...
  852:  set :meetTarget:titanium :buildBlock:titanium                ...
  853:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  854:  set :meetTarget:factoryLead 0                                ...
  855:  set :meetTarget:factorySilicon 0                             ...
  856:  setaddr :meetTarget*retaddr *label350                        ...
  857:  call *label10 *invalid :meetTarget*retval                    ...
        label *label350                                              ...
  858:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  859:  set :buildBlockAt:x :buildBlock:x                            ...
  860:  set :buildBlockAt:y :buildBlock:y                            ...
  861:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  862:  set :buildBlockAt:config :buildBlock:config                  ...
  863:  set :buildBlockAt:skipError false                            ...
  864:  setaddr :buildBlockAt*retaddr *label351                      ...
  865:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label351                                              ...
  866:  set :buildBlock*retval :buildBlockAt*retval                  ...
  867:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label13                                               CoreBuilder.mnd: noinline def buildUnit(type, lead, silicon, in out count)
  868:  set :meetTarget:block :buildUnit:type                        CoreBuilder.mnd: meetTarget(type, 0, 0, 0, 0, 0, 0, lead, silicon);
  869:  set :meetTarget:copper 0                                     ...
  870:  set :meetTarget:lead 0                                       ...
  871:  set :meetTarget:graphite 0                                   ...
  872:  set :meetTarget:silicon 0                                    ...
  873:  set :meetTarget:titanium 0                                   ...
  874:  set :meetTarget:metaglass 0                                  ...
  875:  set :meetTarget:factoryLead :buildUnit:lead                  ...
  876:  set :meetTarget:factorySilicon :buildUnit:silicon            ...
  877:  setaddr :meetTarget*retaddr *label353                        ...
  878:  call *label10 *invalid :meetTarget*retval                    ...
        label *label353                                              ...
  879:  write :buildUnit:type .processor ".unitToProduce"            CoreBuilder.mnd: processor.unitToProduce = type;
        label *label354                                              CoreBuilder.mnd: do
  880:  setaddr :supplyBase*retaddr *label357                        CoreBuilder.mnd: supplyBase();
  881:  call *label9 *invalid :supplyBase*retval                     ...
        label *label357                                              ...
  882:  read *tmp30 .processor ".unitToProduce"                      CoreBuilder.mnd: while processor.unitToProduce != null;
  883:  jump *label354 notEqual *tmp30 null                          CoreBuilder.mnd: do
        label *label358                                              CoreBuilder.mnd: do
  884:  ubind :buildUnit:type                                        CoreBuilder.mnd: ubind(type);
  885:  sensor *tmp363 @unit @flag                                   CoreBuilder.mnd: while @unit.@flag != null;
  886:  jump *label358 notEqual *tmp363 null                         CoreBuilder.mnd: do
  887:  op add :buildUnit:count :buildUnit:count 1                   CoreBuilder.mnd: flag(++count);
  888:  ucontrol flag :buildUnit:count 0 0 0 0                       ...
  889:  op mul *tmp365 10 :buildUnit:count                           CoreBuilder.mnd: moveTo(coreX + 10 * count, coreY);
  890:  op add :moveTo.1:x .coreX *tmp365                            ...
  891:  set :moveTo.1:y .coreY                                       ...
  892:  setaddr :moveTo.1*retaddr *label361                          ...
  893:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label361                                              ...
  894:  ubind .mainUnit                                              CoreBuilder.mnd: ubind(mainUnit);
  895:  return :buildUnit*retaddr                                    CoreBuilder.mnd: noinline def buildUnit(type, lead, silicon, in out count)
        label *label14                                               CoreBuilder.mnd: void findUnits(type, out count)
  896:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  897:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  898:  set :findUnits:firstUnit @unit                               ...
  899:  jump *label363 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label365                                              CoreBuilder.mnd: do
  900:  op add :findUnits:count :findUnits:count 1                   CoreBuilder.mnd: flag(++count);
  901:  ucontrol flag :findUnits:count 0 0 0 0                       ...
  902:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  903:  jump *label365 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label363                                              CoreBuilder.mnd: if firstUnit != null then
  904:  return :findUnits*retaddr                                    CoreBuilder.mnd: void findUnits(type, out count)


Performance: parsed in 457 ms, compiled in 274 ms, optimized in 2,604 ms, run in 11 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (9 steps):
The program didn't generate any output.
Execution exception at instruction 31: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
